@{
    ViewBag.Title = "Employees List";
}
@model IEnumerable<ESimSol.BusinessObjects.Employee>
    <html>
    <head>
        <title>
        </title>
    </head>
    <body class="menuMainCollectionTable">
        @*Att. Scheme Transfer*@
        <div id="winAttSchemeTransfer" class="easyui-window winstyle" title="Company Rule" style="width:450px; height:300px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <fieldset>
                <legend style="font-weight:bold"> Att. Scheme Transfer : </legend>
                <table border="0" cellspacing="2" cellpadding="3" style="font-size:11px; font-weight:bold; margin-top: 30px; margin-bottom: 30px;">
                    <tr> 
                        <td style="text-align:right; padding-left:50px;">Current Att. Scheme: </td>
                        <td style="text-align:left;">
                            <input type="text" style="width:100%;" id="txtASID" disabled />
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align:right;padding-left:50px;">Current ShiftID: </td>
                        <td style="text-align:left;">
                            <input type="text" style="width:100%;" id="txtShiftID" disabled />
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align:right;padding-left:50px;"></td>
                        <td style="text-align:left"></td>
                    </tr>
                    <tr>
                        <td style="text-align:right;">Transfer Att. Scheme: </td>
                        <td style="text-align:left">
                            <input id="txtAttScheme" type="text" style="width:76%;" placeholder="Search Schema" />
                            <a id="btnAttSchemeT" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="false"></a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align:right;padding-left:50px;">Transfer ShiftID: </td>
                        <td style="text-align:left;">
                            <select id="cbotxtTPIShiftID" style="width:100%;"></select>
                        </td>
                    </tr>

                    <tr>
                        <td style="text-align:right;padding-left:50px;"></td>
                        <td style="text-align:right">
                            <button id="btnTransfer">Transfer</button>
                            <button id="btnCloseTransfer">Close</button>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

        <div id="winAttendanceScheme" class="easyui-window winstyle" title="Attendance Scheme List" style="width:370px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div id="focusAttendanceScheme" tabindex="-1">
                <table id="tblAttendanceScheme" class="easyui-datagrid" style="width: 355px; height: 330px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbar">
                    <thead>
                        <tr>
                            <th field="Name" width="200">
                                Name
                            </th>
                            <th field="DayOff" width="150">
                                DayOff
                            </th>
                        </tr>
                    </thead>
                </table>
                <table>
                    <tr>
                        <td style="width: 230px; text-align: left"></td>
                        <td style="width: 50px; text-align: center">
                            <a id="AttSchemePickoK" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width: 50px; text-align: center">
                            <a id="AttSchemePickClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </div>

        </div>

        <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:970px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style=" font-family: Tahoma;height:300px; width:950px;">
                @*Basic and Salary Structure*@
                <div style="width: 49%; float: left;">
                    <table class="tbl-AdvSearch">
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td>
                                <label style="text-align:center;text-decoration:underline;">Basic</label>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Employee Name :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Code :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Present Address :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Permanent Address :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>

                        <tr>
                            <td class="td-AdvSearch-Level">
                                Date Of Birth :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboDateType" style="width: 75px" class="cboReset">
                                    <option value='0'>None</option>
                                    <option value='1'>Equal</option>
                                    <option value='2'>Between</option>
                                </select>
                                <span></span>
                                <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                                <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                                <span id="regionDateTo">
                                    <span>To</span>
                                    <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                    <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                                </span>

                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Gender :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboGender" class="selection-search cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </td>
                        </tr>

                        <tr>
                            <td class="td-AdvSearch-Level">
                                Marital Status :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="id=cbomaritalstatus" onchange="ChangeMaritalStatus(this)" class=" selection-search cboreset">
                                    <option value="1">Married</option>
                                    <option value="2">UnMarried</option>
                                </select>
                            </td>
                        </tr>
                        @*<tr>
            <td class="td-AdvSearch-Level">
                Blood Group :
            </td>
            <td class="td-AdvSearch-Input">
                <select id="id=cboBloodGroup" class=" selection-search cboreset">
                    <option value="1">A+</option>
                    <option value="2">A-</option>
                    <option value="3">B+</option>
                    <option value="4">B-</option>
                    <option value="5">O+</option>
                    <option value="6">O-</option>
                    <option value="7">AB+</option>
                    <option value="8">AB-</option>
                    <option value="9">N/A</option>
                </select>
            </td>
        </tr>*@


                    </table>

                    <hr style="margin-left:10%; margin-right:10%;margin-top:15px; background-color:gray;" />
                    <table class="tbl-AdvSearch" style="margin-left:5%;">
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td>
                                <label style="text-align:center;text-decoration:underline;">Salary</label>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Salary Range :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtStartSalaryRange" type="text" style="width:40%" class="number" /> To
                                <input id="txtEndeSalaryRange" type="text" style="width:40%" class="number" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Salary Scheme :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtSalaryScheme" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnSalaryScheme" class="pick-btn" type="button" value="P" />
                                <input id="btnCSalaryScheme" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                    </table>

                </div>
                

                <div style="width:2px; float: left; border:1px solid gray; height:300px; background-color:gray;"></div>

                @*Official*@

                <div style="width: 49%; float: right;">
                    <table class="tbl-AdvSearch">

                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td>
                                <label style="text-align:center;text-decoration:underline;">Official</label>
                            </td>
                        </tr>

                        <tr>
                            <td class="td-AdvSearch-Level">
                                BU :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtBusinessUnit_Collection" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnBusinessUnitPicker_Collection" class="pick-btn" type="button" value="P" />
                                <input id="btnResetBusinessUnitPicker_Collection" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>

                        <tr>
                            <td class="td-AdvSearch-Level">
                                Location :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Dept./Section :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtDepartment_Collection" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Designation :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Authentication No :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                                <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                            </td>
                        </tr>

                        <tr>
                            <td class="td-AdvSearch-Level">
                                Employee Type :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeType" class="selection-search cboReset"></select>
                            </td>
                        </tr>

                        <tr>
                            <td class="td-AdvSearch-Level">
                                Group :
                            </td>
                            <td class="td-AdvSearch-Input">

                                <input id="txtEmployeeGroup" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnEmployeeGroupPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnEmployeeGroupReset" class="pick-btn" type="button" value="R" />

                            </td>
                        </tr>

                        <tr>
                            <td class="td-AdvSearch-Level">
                                Block :
                            </td>
                            <td class="td-AdvSearch-Input">

                                <input id="txtEmployeeBlock" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnEmployeeBlockPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnEmployeeBlockReset" class="pick-btn" type="button" value="R" />

                            </td>
                        </tr>

                        <tr>
                            <td class="td-AdvSearch-Level">
                                Category :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboCategory" class="selection-search cboReset"></select>
                            </td>
                        </tr>

                        <tr>
                            <td class="td-AdvSearch-Level">
                                Gender :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboGender" class="selection-search cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>

                            </td>
                        </tr>

                        <tr>
                            <td class="td-AdvSearch-Level">
                                Current Shift :
                            </td>
                            <td class="td-AdvSearch-Input">

                                <select id="cboShift" class="selection-search cboReset"></select>

                            </td>
                        </tr>


                        <tr>
                            <td class="td-AdvSearch-Level">
                                Card Status :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Working Status :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Joining Date :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                                <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                                <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Confirmation Date :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkConfirmationDate" class="chkReset" />
                                <input id="dtDateFromConf" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                                <input id="dtDateToConf" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                        </tr>
                    </table>
                </div>

            </div>

            <div style="font-family: Tahoma; margin-left:35%;">
                <div style="width: 50%; float: left;">
                    <table class="tbl-AdvSearch">
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkActive" class="chkReset" /> Active
                                <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                                <input type="checkbox" id="chkUser" class="chkReset" /> User
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                                <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                                <a id="btnEmployeeDatabaseXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true" onclick="PrintEmployeeDatabaseXL()"></a>
                                IsComp <input type="checkbox" id="chkIsComp" style="margin-top:6px; position:absolute;" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input" style="float:right;">
                                <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" style="margin-right:10%;">Close</a>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

        </div>

        <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="locationtree" data-options="checkbox:true" singleselect="false"></ul>
                </div>

                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:400px; text-align:right"></td>

                            <td style="width:50px">
                                <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

        <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
                </div>

                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:400px; text-align:right"></td>

                            <td style="width:50px">
                                <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

        <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
                </div>
                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:400px; text-align:right"></td>

                            <td style="width:50px">
                                <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>


        <div style="margin-left: 0px; height: 540px">
            <table id="tblEmployees" title="Employee List" class="easyui-datagrid" style="width:100%; height: 520px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" onscroll="true" toolbar="#toolbar">
                <thead>
                    <tr>
                        <th data-options="field:'Selected',checkbox:true"></th>
                        <th field="Code" width="100">Code</th>
                        <th field="Name" width="150">Name</th>
                        <th field="ContactNo" width="120">ContactNo</th>
                        <th field="BUName" width="100">BU Name</th>
                        <th field="DateOfJoinInString" width="80">Joining</th>
                        <th field="ConfirmationDateInString" width="90">Confirmation</th>                        
                        <th field="LocationName" width="100">Location</th>
                        <th field="DepartmentName" width="100">Department</th>
                        <th field="Activity" width="80">Activity</th>
                        <th field="DesignationName" width="100">Designation</th>
                        <th field="EmployeeCategoryInString" width="100">Category</th>
                        
                        <th field="CardNo" width="80">Card No</th>
                        <th field="EmployeeCardStatusInString" width="80">Card Status</th>
                    </tr>
                </thead>
            </table>
            <table>
                <tr>
                    <td>
                        <input id="chkRange" type="checkbox" />Range
                        <label id="lblRange1">
                            <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                        </label>
                        <label id="lblRange2">
                            <input id="txtTo" type="text" style="width:40px" />
                        </label>
                        <label id="lblcount"></label>
                    </td>
                    <td>
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                    </td>
                </tr>
                <tr>
                    <td style="text-align: left"></td>
                    <td style="text-align: right"></td>
                </tr>
            </table>

            <div id="toolbar" style="height:100px;width:100%">
                <a id="btnAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Adv.Src</a>
                <a id="btnAddEmp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddEmployee()">New</a>
                <a id="btnEditEmp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="EditEmployee()">Edit</a>
                <a id="btnDeleteEmp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                <!--<a id="btnDiscontinued" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Discont.</a>-->
                <a id="btnContinued" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Cont.</a>
                <a id="btnActivity" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Activity</a>
                @Html.DropDownList("cboEmployeeCardStatusSearch", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumEmployeeCardStatus))), new { id = "cboEmployeeCardStatusSearch", style = "width: 80px;font-size:12px;text-align:left" })
                   
                 <select id="cboCardShape"></select>
                <a id="btnAction" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Action</a>
                <a id="btnAttSchemeTransfer" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Att. Scheme Transfer</a>
                <a id="btnArchive" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">Archive</a>
                <br />
                <input type="text" id="txtSearchbyCode" placeholder="Search by Code" style="width: 105px" />
                <input type="text" id="txtSearchByName" placeholder="Search by name" style="width: 105px" />
                Print Type:
                <select id="cboPrintType" style="width:150px;">

                </select>
                <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
                <a id="btnBanglaPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Bangla Print</a>
                <a id="btnPrintXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true"></a>
                <a id="btnBOA" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Benefit Of Att.</a>
                <a id="btnEditDOJ" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit DOJ</a>
                <a id="btnEditBankCash" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit Bank/Cash</a>
                <a id="btnPrintProfilePreview" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Profile Preview</a>
                <br />                
                <div style="float:left; height:auto;">
                    @using (Html.BeginForm("View_EmployeeInformations", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {


                        <table border="0" cellpadding="0" cellspacing="0">
                            <tr>
                                <td style="width:150px;">
                                    <input type="file" id="fileEmployees" name="fileEmployees" />
                                </td>
                                <td style="width:150px;"><input type="submit" id="btnImportXL" style="vertical-align:central;" value="Import" /></td>
                            </tr>
                        </table>
                    }
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="SampleFormatDownload()">Download Format</a>
                </div>
             </div>


           
         
            <div id="winCRList" class="easyui-window winstyle" title="Company Rule" style="width:700px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                <table id="tblCompanyRuleNames"  class="easyui-datagrid" style="width:680px; height:300px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" >
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Description" width="550" align="left">Rules</th>
                        </tr>
                    </thead>
                </table>
                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr style="text-align:right">
                            <td style="text-align:right; width:520px;">
                            </td>
                            <td style="text-align:right">
                                <a id="btnPrintCR" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
                                <a id="btnCloseCRList" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>

            <div id="winBOA" class="easyui-window winstyle" title="Benefit Of Attendance" style="width:52%; height:408px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                <table id="tblBOAs" class="easyui-datagrid" style="width:680px; height:300px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="CreateDateInString" width="100" align="left">Create Date</th>
                            <th field="Name" width="250" align="left">Name</th>
                            <th field="BenefitOnInString" width="250" align="left">Benefit On</th>
                        </tr>
                    </thead>
                </table>
                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr style="text-align:right">
                            <td style="text-align:right; width:500px;"></td>
                            <td style="text-align:right">
                                <a id="btnSaveBOA" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Assign</a>
                                <a id="btnCloseBOA" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseBOA()">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>

            <div id="winEmpCardPrintItems" class="easyui-window winstyle" title="Print Items" style="width:25%; height:350px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                <table id="tblEmpCardPrintItems" class="easyui-datagrid" style="width:99%; height:195px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Item" width="183" align="left">Items</th>
                        </tr>
                    </thead>
                </table>
                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px;width:100%; font-weight:bold">
                        <tr style="text-align:right; width:100%;">
                            <td style="text-align:right; width:40%;">
                                Issue Date: <input id="dtIssueDate" type="text" style="width: 100%;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                            <td style="text-align:right; width:40%;">
                                Exp. Date: <input id="dtExpireDate" type="text" style="width: 100%;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                            <td style="text-align:right;width:60%;">
                                <a id="btnOKCardPrintItems" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkEmpCardPrintItem()">OK</a>
                                <a id="btnCloseCardPrintItems" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseBOA()">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

        <div id="winDOJ" class="easyui-window winstyle" title="Joining Date" style="width:380px;height:200px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px; height:100px; overflow:auto">
                    Edited Joining : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input id="dtDateOfJoin" type="text" style="width: 200px; margin-left:20px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" /><br /><br />
                    Edited Confirmation : <input id="dtConfirmationDate" type="text" style="width: 200px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                </div>
                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:200px; text-align:right"></td>
                            <td style="width:50px">
                                <a id="btnDOJOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" >Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnDOJClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

        <div id="winBankCash" class="easyui-window winstyle" title="Bank/Cash" style="width:380px;height:250px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px; height:150px; overflow:auto">
                    <div style="margin-left:30%; margin-top:5%;">
                        <input id="chkBank" type="checkbox" /> Bank
                        <input id="chkCash" type="checkbox" /> Cash
                        <br />
                        <label id="lblCash">Salary Cash :</label><input type="text" style="width: 80px;" id="txtCash" />(BDT)
                        <br />
                        <label id="lblBonusCash">Bonus Cash :</label><input type="text" style="width: 80px;" id="txtBonusCash" />(BDT)
                        <br />
                        <label><input type="checkbox" id="chkIsFullBonus" />100% Bonus Allow</label>
                    </div>
                </div>
                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:200px; text-align:right"></td>
                            <td style="width:50px">
                                <a id="btnBankCashOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnBankCashClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

        <div id="winPrintCV" class="easyui-window winstyle" title="Print CV" style="width:350px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <fieldset>
                    <legend style="font-weight: bold">Print CV</legend>                    
                    <table id="tblEmployeeCV" class="easyui-datagrid" style="width: 310px; height: 110px;
                            font-size: 11px;font-weight: normal;" fitcolumns="false" rownumbers="false" pagination="false" singleselect="false"
                           autorowheight="true">
                        <thead>
                            <tr>
                                <th data-options="field:'Selected',checkbox:true"></th>
                                <th field="SearchingName" width="280" align="left">
                                    Searching Items
                                </th>
                            </tr>
                        </thead>
                    </table>
                </fieldset>
                <fieldset>
                    <legend style="font-weight: bold">Action</legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;">
                        <tr>
                            <td style="width: 320px; text-align: right;">
                                <a id="btnPrintEMPCV" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok"
                                   plain="true">Ok</a> <a id="btnCancel" href="javascript:void(0)" class="easyui-linkbutton"
                                                          iconcls="icon-cancel" plain="true">Cencel</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

    </body>
</html>
<style type="text/css">
    .lblStar {
        color: #ff0000;
        font-weight: bold;
    }
    .tbl-AdvSearch{
        width: 100%; 
        font-size: 11px; 
        font-weight: bold;
        text-align: left;
        margin-left:3px;
    }
    .td-AdvSearch-Level{
        text-align: right;
    }
    .td-AdvSearch-Input{
        text-align: left;
    }
    .txtfield-search{
        width: 312px;
        text-align:left;
        font-size:11px;
    }
    .txtfield-picker{
        width: 265px;
        text-align:left;
        font-size:11px;
    }
    .selection-search{
        width: 310px;
        text-align:left;
        font-size:11px;
    }
    .pick-btn{
        width: 20px;
        text-align:center;
        font-size:11px;
    }

</style>

<script type="text/javascript">
    var _oEmployees=[];
    var _sBaseAddress="";

    var _nLastEmployeeID = 0;
    var _sEmployeeIDs = "";
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _oEmployeeTypes=[];
    var _oEmployeeGroups=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _sBusinessUnitIds = "";

    var _sAttendanceSchemeID="";
    var _sLocationID = "";
    var _sDepartmentID = "";
    var _sDepartmentIds = "";
    var _sDesignationID = "";
    var _sDesignationIds = "";
    var _nEmployeeID = 0;

    var _sPrintType="";
    var _sFeedBack=null;
    var bPrint = false;
    var _oAURolesMapping=[];
    var _oBusinessUnits=[];
    var _sBlockNames="";
    var _sBMMIDs="";
    var _nAttSchemeID = 0;
    var _oEmployee = { EmployeeID:0};
    var _oEmployeeForTransfer = [];
    var _oEmployeeOfficialTransfer = [];
    var nTPIASID = 0;
    var nTPIShiftID = 0;
    var nASID = 0;
    var _sGroupNames="";
    var _sGroupIDs="";
    var _sBlockNames="";
    var _sBlockIDs="";
    var _sSalarySchemeIDs = "";
    var _sMaritalStatus = "";
    var _oCardShapes = [];

    $(document).ready(function () {
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oEmployees =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oEmployeeGroups= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeGroups));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _oCardShapes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.IDCardFormats));
        _sFeedBack=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FeedBack));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        bPrint =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(TempData["bShowPrint"]));

        _sMaritalStatus = "Married";
        _oAURolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        $('#btnBOA').hide();
        debugger;
        if(!PermissionChecker('View','EmployeeSalaryStructure',_oAURolesMapping))
        {
            $('#btnEditBankCash').hide();
        }
        $('#dtExpireDate').datebox('setValue',icsdateformat(new Date()));
        $('#dtExpireDate').hide();

        var oEmployees=jQuery.parseJSON(sessionStorage.getItem("Employees"));

        if(_sFeedBack!=null){alert(_sFeedBack);}
        else if(_oEmployees.length>0 && _oEmployees[0].ErrorMessage=="Uploaded Successfully!"){
            alert(_oEmployees[0].ErrorMessage);
            oEmployees=_oEmployees;
        }
        else if(_oEmployees.length>0 && _oEmployees[0].ErrorMessage!="")
        {
            alert(_oEmployees[0].ErrorMessage);
        }        
        if(oEmployees!=null && oEmployees.length>0){
            DynamicRefreshList(oEmployees, "tblEmployees");
        }
        
        $("#btnPrintXL").hide();

        $("#btnContinued").hide();

        InitializeAdvSearch();

        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

        $('#dtDateFromConf').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateToConf').datebox('setValue', icsdateformat(new Date()));

        $('#dtDateOfJoin').datebox('setValue',icsdateformat(new Date()));
        $('#dtConfirmationDate').datebox('setValue',icsdateformat(new Date()));
        PrintTypeObject();
        LoadCateGory(oEmployeeCategorys);
        $("#cboCardShape").icsLoadCombo({List: _oCardShapes, OptionValue: "id", DisplayText: "Value"});
    });

    $('#btnArchive').click(function (e){
        var oEmployee= $('#tblEmployees').datagrid('getSelected');
        if(oEmployee==null || oEmployee.EmployeeID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var sURL = sessionStorage.getItem('BaseAddress') + "/ArchiveSalaryStruc/ViewArchiveSalaryStrucs?nEmployeeID="+ parseInt(oEmployee.EmployeeID);
        window.open(sURL, '_blank');
    });

    $('#btnCloseTransfer').click(function (e)
    {
        $("#winAttSchemeTransfer").icsWindow("close");
    });

    /*-------------Start Business Unit Picker----------------*/
    $("#btnBusinessUnitPicker_Collection").click(function(e){
        BusinessUnitPicker();
    });

    $("#txtBusinessUnit_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            BusinessUnitPicker();
        }
    });

    function BusinessUnitPicker()
    {
        var oBusinessUnit={
            BusinessUnitID:0
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBusinessUnit,
            ControllerName: "BusinessUnit",
            ActionName: "GetsBusinessUnitWithPermission",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BusinessUnitID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBusinessUnit',
                        winclass:'clsBusinessUnit',
                        winwidth: 320,
                        winheight: 400,
                        tableid: 'tblBusinessUnit',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Business Unit List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBusinessUnitPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBusinessUnits=[];
            oBusinessUnits = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBusinessUnit')
            {
                if(oBusinessUnits!=null && oBusinessUnits.length>0)
                {
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sBusinessUnitName = "";
                    for(var i=0; i<oBusinessUnits.length; i++)
                    {
                        sBusinessUnitName+=oBusinessUnits[i].Name+",";
                        _sBusinessUnitIds+=oBusinessUnits[i].BusinessUnitID+",";
                    }

                    sBusinessUnitName=sBusinessUnitName.substring(0,sBusinessUnitName.length-1);
                    _sBusinessUnitIds=_sBusinessUnitIds.substring(0,_sBusinessUnitIds.length-1);
                    $("#txtBusinessUnit_Collection").val(sBusinessUnitName);
                }
                else
                {
                    alert("Please select a Business Unit.");
                }
            }
        });
    }

    $("#btnResetBusinessUnitPicker_Collection").click(function(e){
        $('#txtBusinessUnit_Collection').val("");
        _sBusinessUnitIds="";
    });
    /*-------------End Business Unit Picker----------------*/
    /*----------- Salary Scheme Start-----------------------*/
    $('#txtSalaryScheme').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        var sSSName = document.getElementById("txtSalaryScheme").value;
        if (code == 13)//Enter key-13
        {
            PickerSalaryScheme(sSSName);
        }
    });

    $('#btnSalaryScheme').click(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        var sSSName ="";
        PickerSalaryScheme(sSSName);
    });

    function PickerSalaryScheme(sSSName)
    {
        var oSalaryScheme = { Name: sSSName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oSalaryScheme,
            ControllerName: "SalaryScheme",
            ActionName: "GetsBySalarySchemeName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].SalarySchemeID > 0) {

                    var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "NatureOfEmployeeInString", title: "Nature Of Employee", width: 140, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "PaymentCycleInString", title: "Payment Cycle", width: 140, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSalarySchemePicker',
                        winclass:'clsSalarySchemePicker',
                        winwidth: 520,
                        winheight: 460,
                        tableid: 'tblSalarySchemes',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Salary Scheme List'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeSalarySchemePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeSalarySchemePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winSalarySchemePicker')
            {
                if (oreturnObjs != null && oreturnObjs.length > 0)//oreturnObj.SalarySchemeID
                {
                    var sSalarySchemeNames = "";
                    _sSalarySchemeIDs = "";
                    for(var i=0; i<oreturnObjs.length; i++)
                    {
                        sSalarySchemeNames+=oreturnObjs[i].Name+",";
                        _sSalarySchemeIDs+=oreturnObjs[i].SalarySchemeID+",";
                    }

                    sSalarySchemeNames=sSalarySchemeNames.substring(0,sSalarySchemeNames.length-1);
                    _sSalarySchemeIDs=_sSalarySchemeIDs.substring(0,_sSalarySchemeIDs.length-1);
                    $("#txtSalaryScheme").val(sSalarySchemeNames);
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                }
                else
                {
                    alert("please check at least one item!");
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winclass == 'clsSalarySchemePicker')
                {
                    if (oreturnObjs != null && oreturnObjs.length > 0)
                    {
                        var sSalarySchemeNames = "";
                        _sSalarySchemeIDs = "";
                        for(var i=0; i<oreturnObjs.length; i++)
                        {
                            sSalarySchemeNames+=oreturnObjs[i].Name+",";
                            _sSalarySchemeIDs+=oreturnObjs[i].SalarySchemeID+",";
                        }

                        sSalarySchemeNames=sSalarySchemeNames.substring(0,sSalarySchemeNames.length-1);
                        _sSalarySchemeIDs=_sSalarySchemeIDs.substring(0,_sSalarySchemeIDs.length-1);
                        $("#txtSalaryScheme").val(sSalarySchemeNames);
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                    }
                    else
                    {
                        alert("please check at least one item!");
                    }
                }
            }
        });
    }

    $('#btnCSalaryScheme').click(function (e)
    {
        $("#txtSalaryScheme").val("");
        _sSalarySchemeIDs = "";
    });



    $('#btnBanglaPrint').click(function(){
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/Employee/BanglaPrint?ts="+tsv, "_blank");
    });



    function SampleFormatDownload() {
        window.open(_sBaseAddress+ "/Employee/DownloadFormat");
    }
    //Att.Scheme Transfer

    function RefreshObject()
    {
        debugger;
        var oTPI =
        {
            TPIID:0,
            EmployeeID:_oEmployeeOfficialTransfer.EmployeeOfficial.EmployeeID,
            TPIASID :nTPIASID,
            TPIShiftID :$("#cbotxtTPIShiftID").val(),
        };
        return oTPI;
    }
    $("#btnTransfer").click(function () {
        var oTPI = RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/TransferPromotionIncrement/TransferAttScheme",
            traditional: true,
            data: JSON.stringify(oTPI),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                oTPI = jQuery.parseJSON(data);
                if (oTPI.ErrorMessage == "")
                {
                    alert("Data Saved sucessfully");
                    $("#winAttSchemeTransfer").icsWindow("close");
                    $("#txtAttScheme").val("");
                    $("#cbotxtTPIShiftID").icsLoadCombo({
                        List: [],
                        OptionValue: "",
                        DisplayText: "",
                        InitialValue:"--Selec--"
                    });
                }
                else
                {
                    alert(oTPI.ErrorMessage);
                }
            },
        });
    });



    $("#btnAttSchemeTransfer").click(function () {

        debugger;
        _oEmployeeForTransfer= $('#tblEmployees').datagrid('getSelected');
        if(_oEmployeeForTransfer==null || _oEmployeeForTransfer.EmployeeID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/GetEmployeeOfficialByID",
            traditional: true,
            data: JSON.stringify({ nEmpID: _oEmployeeForTransfer.EmployeeID }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                _oEmployeeOfficialTransfer = jQuery.parseJSON(data);
                if (_oEmployeeOfficialTransfer.EmployeeID > 0) {
                    $("#txtASID").val(_oEmployeeOfficialTransfer.EmployeeOfficial.AttendanceSchemeName);
                    nASID = _oEmployeeOfficialTransfer.EmployeeOfficial.CurrentShiftID;
                    $("#txtShiftID").val(_oEmployeeOfficialTransfer.EmployeeOfficial.CurrentShiftName);
                }
                else {
                    alert('Data Not Found!')
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });


        $("#winAttSchemeTransfer").icsWindow("open", "Transfer Attendance Scheme");
    });

    $("#AttSchemePickClose").click(function () {
        $("#btnAttSchemeT").icsWindow('close');
    });


    $('#txtAttScheme').keypress(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        var sASName = "";
        var sASName = $("#txtAttScheme").val();

        if (code == 13 && sASName!='')//Enter key-13
        {
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/AttendanceScheme/AttSchemePick",
                traditional: true,
                data: JSON.stringify({ sASName: sASName }),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oAttendanceSchemes = jQuery.parseJSON(data);
                    if (oAttendanceSchemes.length > 0 && oAttendanceSchemes[0].ErrorMessage == "") {
                        debugger;
                        $("#winAttendanceScheme").icsWindow("open", " Attendance Scheme");
                        DynamicRefreshList(oAttendanceSchemes, "tblAttendanceScheme");
                        //data = oAttendanceSchemes;
                        //data = { "total": "" + data.length + "", "rows": data };
                        //$('#tblAttendanceScheme').datagrid('loadData', data);
                        $('#tblAttendanceScheme').datagrid('selectRow', 0);
                        $('#focusAttendanceScheme').focus();
                    }
                    else {
                        alert('Data Not Found!')
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        }
    });

    $("#btnAttSchemeT").click(function () {
        var sASName = "";
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceScheme/AttSchemePick",
            traditional: true,
            data: JSON.stringify({ sASName: sASName }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oAttendanceSchemes = jQuery.parseJSON(data);
                if (oAttendanceSchemes.length > 0 && oAttendanceSchemes[0].ErrorMessage == "") {

                    $("#winAttendanceScheme").icsWindow("open", " Attendance Scheme");
                    DynamicRefreshList(oAttendanceSchemes, "tblAttendanceScheme");
                    $('#tblAttendanceScheme').datagrid('selectRow', 0);
                    $('#focusAttendanceScheme').focus();
                }
                else {
                    alert('Data Not Found!')
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#winAttendanceScheme").on("keydown", function (e) {

        var oAttendanceScheme = $('#tblAttendanceScheme').datagrid('getSelected');
        var nIndex = $('#tblAttendanceScheme').datagrid('getRowIndex', oAttendanceScheme);
        if (e.which == 38)//up arrow=38
        {
            if (nIndex <= 0) {
                $('#tblAttendanceScheme').datagrid('selectRow', 0);
            }
            else {
                $('#tblAttendanceScheme').datagrid('selectRow', nIndex - 1);
            }
            $('#txtAttScheme').blur();
        }
        if (e.which == 40)//down arrow=40
        {
            var oCurrentList = $('#tblAttendanceScheme').datagrid('getRows');
            if (nIndex >= oCurrentList.length - 1) {
                $('#tblAttendanceScheme').datagrid('selectRow', oCurrentList.length - 1);
            }
            else {
                $('#tblAttendanceScheme').datagrid('selectRow', nIndex + 1);
            }
            $('#txtAttScheme').blur();
        }
        if (e.which == 13)//enter=13
        {

            var oSelectedAttendanceScheme = $('#tblAttendanceScheme').datagrid('getSelected');
            if (oSelectedAttendanceScheme == null) {
                alert("Please select an Contarctor!");
                return;
            }
            $('#txtAttScheme').val(oSelectedAttendanceScheme.Name);
            _nAttSchemeID = oSelectedAttendanceScheme.AttendanceSchemeID;
            nTPIASID = oSelectedAttendanceScheme.AttendanceSchemeID;
            GetRosterPlanDetail(oSelectedAttendanceScheme.RosterPlanID);
            $("#tblAttendanceScheme").icsWindow('close');
        }
        if (e.which == 27)//escape=27
        {

            $("#tblAttendanceScheme").icsWindow('close');
            _nAttSchemeID = 0;
        }
    });

    $("#AttSchemePickoK").click(function () {
        debugger;
        var oSelectedAttendanceScheme = $('#tblAttendanceScheme').datagrid('getSelected');
        if (oSelectedAttendanceScheme == null) {
            alert("Please select an Contarctor!");
            return;
        }
        $('#txtAttScheme').val(oSelectedAttendanceScheme.Name);
        _nAttSchemeID = oSelectedAttendanceScheme.AttendanceSchemeID;
        nTPIASID = oSelectedAttendanceScheme.AttendanceSchemeID;
        GetRosterPlanDetail(oSelectedAttendanceScheme.RosterPlanID);
        $("#tblAttendanceScheme").icsWindow('close');
    });
    function GetRosterPlanDetail(RosterPlanID)
    {
        //if (RosterPlanID<=0 || RosterPlanID==null)
        //{
        //    alert('Invalid Roster plan');
        //    return;
        //}
        debugger;
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/RosterPlan/GetRosterPlanDetail",
            traditional: true,
            data:  JSON.stringify({nID:RosterPlanID}),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oRosterPlanDetails = jQuery.parseJSON(data);
                debugger;
                if (oRosterPlanDetails.length > 0) {
                    debugger;
                    RefreshShift_RosterPlanDetail(oRosterPlanDetails);
                    $('#cbotxtTPIShiftID').val(_oEmployeeOfficialTransfer.EmployeeOfficial.CurrentShiftID);
                }
                else {
                    alert(oRosterPlanDetails[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    function RefreshShift_RosterPlanDetail(oRosterPlanDetails)
    {
        debugger;
        var listSelectedShifts="";
        listSelectedShifts="<option value='"+0+"'>" +"--Select--" + "</option>";
        if(oRosterPlanDetails.length>0)
        {
            for (var j = 0; j <  oRosterPlanDetails.length; j++)
            {
                listSelectedShifts += "<option value='" + oRosterPlanDetails[j].ShiftID+"'>" + oRosterPlanDetails[j].Shift+"</option>";
            }
        }
        $("#cbotxtTPIShiftID").html(listSelectedShifts);
    }




    function LoadCateGory(oEmployeeCategorys)
    {
        $("#cboCategory").icsLoadCombo({
            List: oEmployeeCategorys,
            OptionValue: "Value",
            DisplayText: "Text"
        });
    }

    $(document).keydown(function (e) { if (e.keyCode == 27) { $('div').icsWindow('close'); } });

    $('#txtSearchbyCode').keyup(function (e) {

        var nCode = (e.keyCode ? e.keyCode : e.which);
        var c = String.fromCharCode(e.which);
        var txtSearchbyCode = $("#txtSearchbyCode").val();
        var sTempCode = "";
        var rows = $('#tblEmployees').datagrid('getRows');
        for (i = 0; i < rows.length; ++i) {
            sTempCode = rows[i]['Code'].substring(0, txtSearchbyCode.length);
            if (txtSearchbyCode.toUpperCase() == sTempCode.toUpperCase()) {
                $('#tblEmployees').datagrid('selectRow', i);
                break;
            }
            else{
                $('#tblEmployees').datagrid('unselectAll');
            }
        }
        if (nCode != 13) return;
        GetEmployeeByNameCode(txtSearchbyCode, true);
        $("#txtSearchbyCode").val('');
        $("#txtSearchbyCode").focus();
    });

    $('#txtSearchByName').keyup(function (e) {

        var nCode = (e.keyCode ? e.keyCode : e.which);
        var txtSearchByName = $("#txtSearchByName").val();
        var sTempName = "";
        var rows = $('#tblEmployees').datagrid('getRows');
        for (i = 0; i < rows.length; ++i) {
            sTempName = rows[i]['Name'].substring(0, txtSearchByName.length);
            if (txtSearchByName.toUpperCase() == sTempName.toUpperCase()) {
                $('#tblEmployees').datagrid('selectRow', i);
                break;
            }
            else{
                $('#tblEmployees').datagrid('unselectAll');
            }
        }
        if (nCode != 13) return;
        GetEmployeeByNameCode(txtSearchByName, false);
        $("#txtSearchByName").val('');
        $("#txtSearchByName").focus();
    });

    function GetEmployeeByNameCode(sNameCode,bIsCode)
    {
        var nts = ((new Date()).getTime()) / 1000;
        $.ajax
        ({
            type: "GET",
            dataType: "json",
            url : _sBaseAddress+  "/Employee/GetByEmployeeNameCode",
            data: {sNameCode:sNameCode,bIsCode:bIsCode,nts:nts},
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmployees = jQuery.parseJSON(data);
                if(oEmployees.length>0)
                {
                    //DynamicRefreshList(oEmployees, "tblEmployees");

                    var bAppend=false;
                    var oTEmps=$('#tblEmployees').datagrid('getRows');

                    if(oTEmps.length>0)
                    {
                        for (var i = 0; i < oEmployees.length; i++)
                        {
                            var IsAppend=true;
                            for (var j = 0; j < oTEmps.length; j++)
                            {
                                if(oEmployees[i].EmployeeID==oTEmps[j].EmployeeID)
                                {
                                    IsAppend=false;
                                    break;
                                }
                            }
                            if(IsAppend)
                            {
                                bAppend=true;
                                $('#tblEmployees').datagrid('appendRow', oEmployees[i]);
                            }
                        }
                    }
                    else
                    {
                        DynamicRefreshList(oEmployees, "tblEmployees");
                    }

                    SessionStorageList();

                }
                else
                {
                    alert('Data not found.!!!');
                }

            },
            error: function (xhr, status, error)
            {
                alert(error);
            }

        });

    }

    /*---------------- Adv Search----------------*/

    function InitializeAdvSearch(){
        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboEmployeeGroup").icsLoadCombo({
            List: _oEmployeeGroups,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });

        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                     {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                     {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }


    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });


    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sBusinessUnitIds = "";
        _sLocationID = "";
        _sDepartmentID = "";
        _sDesignationID = "";
        _sDesignationIDs = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        $('#txtEmployeeGroup').val("");
        $('#txtEmployeeBlock').val("");
        $('#txtStartSalaryRange').val("");
        $('#txtEndeSalaryRange').val("");
    }

    $("#btnAdvSearch").click(function () {
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            document.getElementById("lblRange1").style.display = '';
        }
        else
        {
            document.getElementById("lblRange1").style.display = 'none';
        }
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployees').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function ChangeMaritalStatus(sel)
    {
        _sMaritalStatus = sel.options[sel.selectedIndex].text;
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;

        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }


        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nEmployeeGroupID=$("#cboEmployeeGroup").val();
        var nShiftID=$("#cboShift").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }
        debugger;
        //var nBusinessUnitID = $("#cboBU").val();

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }


        var nCategory=$('#cboCategory').val();

        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();

        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationID=="" &&
           nEmployeeTypeID==0 && nEmployeeGroupID==0 && sGender=="None" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
           bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 && !bIsJoiningDate
           && !bIsnotEnroll && nCategory<=0 && _sBusinessUnitIds == "" && sPresentAddress=="" && sPermanentAddress=="" && _sBlockIDs=="" && _sGroupIDs=="")
        {
            alert("Please enter your selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationID + '~' +
                     sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                     bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                     sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                     +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+_sBusinessUnitIds+"~"+sPresentAddress+"~"+sPermanentAddress+"~" + _sBlockIDs + '~' + _sGroupIDs
                     + '~' + _sMaritalStatus
                     +'~' +nStartSalaryRange + '~' + nEndSalaryRange + '~' + _sSalarySchemeIDs;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearchFromPIMS",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {

                        $("#winEmployeePicker").icsWindow("close");

                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployees');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployees').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployees').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployees').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    //var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    //document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnEmployeePickerOk").click(function () {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length <= 0) { alert("please select atleast one item");return; }
        DynamicRefreshList(oEmployees, "tblEmployees");
        $("#winEmployeePicker").icsWindow('close');
        EmployeePickerReset();
    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });

    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={Params:" "+"~"+0+"~"+0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceScheme",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    /*-------------Location Picker----------------*/

    $("#btnLocationPicker").click(function(e){
        var sBusinessUnitIDs ="";
        var nBusinessUnitID = _sBusinessUnitIds;
        //if(nBusinessUnitID<=0)
        //{
        //    alert("Please select a BU");
        //    return;
        //}
        $("#winLocationPicker").icsWindow('open');

        var oLocation={LocationID:0,BusinessUnitIDs:_sBusinessUnitIds};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };
        //sBusinessUnitIDs = String(nBusinessUnitID);
        //var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
        //var obj = {
        //    BaseAddress: _sBaseAddress,
        //    Object: oLocation,
        //    ControllerName: "Location",
        //    ActionName: "GetsLocationMenuTree",
        //    IsWinClose: false
        //};

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        var oLocations = $('#locationtree').tree('getChecked');
        if(oLocations!=null && oLocations.length>0)
        {
            var LocationName="";
            for(var i=0; i<oLocations.length; i++)
            {
                if(oLocations[i].id !=1)
                {
                    LocationName+=oLocations[i].text+",";
                    _sLocationID+=oLocations[i].id+",";
                }
            }

            LocationName=LocationName.substring(0,LocationName.length-1);
            _sLocationID=_sLocationID.substring(0,_sLocationID.length-1);
            $("#winLocationPicker").icsWindow('close');
            $('#txtLocation').val(LocationName);
        }
        else
        {
            alert("Please select a location.");
        }


        //var oLocation = $('#locationtree').tree('getSelected');
        //if(oLocation!=null && oLocation.id>0){
        //    $("#winLocationPicker").icsWindow('close');
        //    $('#txtLocation').val(oLocation.text);
        //    _sLocationID= oLocation.id;
        //}
        //else{
        //    alert("Please select a location.");
        //}
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker").click(function(e){
        $('#txtLocation').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){
        $("#winDepartmentPicker_Collection").icsWindow('open');
        var nLocationID = ($.trim(_sLocationID)=="")? 0:_sLocationID;
        var oDepartment={DepartmentID:0,BusinessUnitIDs:($('#cboBU').val() > 0?$('#cboBU').val():""),LocationIDs:_sLocationID};

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree_Collection').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){

        var oDepartment = $('#departmenttree_Collection').tree('getChecked');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentID= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose_Collection").click(function(e){
        $("#winDepartmentPicker_Collection").icsWindow('close');
    });

    $("#btnDepartmentPickerOk_Collection").click(function(e){
        _sDepartmentNames="";
        _sDepartmentIds="";
        var oDepartments = $('#departmenttree_Collection').tree('getChecked');
        if(oDepartments!=null && oDepartments.length>0){
            $("#winDepartmentPicker_Collection").icsWindow('close');
            for(var i=0; i<oDepartments.length; i++)
            {
                _sDepartmentNames+=oDepartments[i].text+",";
                _sDepartmentIds+=oDepartments[i].id+",";
            }

            _sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
            _sDepartmentIds=_sDepartmentIds.substring(0,_sDepartmentIds.length-1);
            $("#txtDepartment_Collection").val(_sDepartmentNames);
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnResetDepartmentPicker").click(function(e){
        $('#txtDepartment_Collection').val("");
        _sDepartmentIDs="";
    });

    /*------------EmployeeGroup--------------*/

    $("#btnEmployeeGroupReset").click(function(e){
        $("#txtEmployeeGroup").val("");
        _sGroupNames = "";
        _sGroupIDs = "";
    });

    $('#txtEmployeeGroup').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroup").val();
            var sTempName = "";
            SearchEmployeeGroup(txtSearchByGroup);
            $("#txtEmployeeGroup").val('');
        }
    });


    $("#btnEmployeeGroupPicker").click(function(e){
        SearchEmployeeGroup("");
    });
    function SearchEmployeeGroup(name) {
        $("#txtEmployeeGroup").val("");
        _sGroupNames = "";
        _sGroupIDs = "";
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oGroups.length; i++)
                    {
                        _sGroupNames += oGroups[i].Name+",";
                        _sGroupIDs += oGroups[i].EmployeeTypeID+",";

                    }
                    _sGroupNames=_sGroupNames.substring(0,_sGroupNames.length-1);
                    _sGroupIDs=_sGroupIDs.substring(0,_sGroupIDs.length-1);
                    $("#txtEmployeeGroup").val(_sGroupNames);
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }

    /*------------EmployeeBlock--------------*/

    $("#btnEmployeeBlockReset").click(function(e){
        $("#txtEmployeeBlock").val("");
        _sBlockNames = "";
        _sBlockIDs = "";
    });
    $('#txtEmployeeBlock').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlock").val();
            var sTempName = "";
            SearchEmployeeBlock(txtSearchByBlock);
            $("#txtEmployeeBlock").val('');
        }
    });

    $("#btnEmployeeBlockPicker").click(function(e){
        SearchEmployeeBlock("");
    });
    function SearchEmployeeBlock(name) {
        $("#txtEmployeeBlock").val("");
        _sBlockNames = "";
        _sBlockIDs = "";
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNames += oBlocks[i].Name+",";
                        _sBlockIDs += oBlocks[i].EmployeeTypeID+",";

                    }
                    _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                    _sBlockIDs=_sBlockIDs.substring(0,_sBlockIDs.length-1);
                    $("#txtEmployeeBlock").val(_sBlockNames);
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }


    /*-------------Designation Picker----------------*/


    $("#btnDesignationPicker").click(function(e){
        var oDesignation={
            DesignationID:0,
            //Params: (($.trim(_sLocationID)=="")? 0:_sLocationID)+'~'+ (($.trim(_sDepartmentID)=="")? "":_sDepartmentID)
            Params: _sBusinessUnitIds+'~'+_sLocationID+'~'+ _sDepartmentID
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var _sDesignationNames = "";
            var oDesignations = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignations!=null && oDesignations.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames+=oDesignations[i].Name+",";
                        _sDesignationID+=oDesignations[i].DesignationID+",";
                    }

                    _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                    _sDesignationID=_sDesignationID.substring(0,_sDesignationID.length-1);
                    $("#txtDesignation").val(_sDesignationNames);
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker").click(function(e){
        $('#txtDesignation').val("");
        _sDesignationID="";
    });

    /*--------------------------------------------*/

    function SessionStorageList(){
        var oEmployees= $('#tblEmployees').datagrid('getRows');
        sessionStorage.setItem("Employees", JSON.stringify(oEmployees));
    }

    function AddEmployee()
    {
        SessionStorageList();
        sessionStorage.setItem("SelectedRowIndex", -1);
        sessionStorage.setItem("EmployeeHeader", "Add Employee");
        window.location.href = _sBaseAddress+ "/Employee/View_EmployeeInformation?sid=0&sMsg=N/A";
    }

    function EditEmployee()
    {
        debugger;
        var oEmployee= $('#tblEmployees').datagrid('getSelected');
        if(oEmployee==null || oEmployee.EmployeeID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        SessionStorageList();
        var SelectedRowIndex=$('#tblEmployees').datagrid('getRowIndex',oEmployee);
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("EmployeeHeader", "Edit Employee");
        window.location.href = _sBaseAddress+ "/Employee/View_EmployeeInformation?sid="+oEmployee.EncryptEmpID+"&sMsg=N/A";
    }

    $("#btnDeleteEmp").click(function () {

        var oEmployee = $('#tblEmployees').datagrid('getSelected');
        if (oEmployee == null || oEmployee.EmployeeID <= 0) {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return;
        var SelectedRowIndex = $('#tblEmployees').datagrid('getRowIndex', oEmployee);
        var tsv = ((new Date()).getTime()) / 1000;
        if (oEmployee.EmployeeID > 0) {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/Employee/EmployeeDelete",
                traditional: true,
                data: JSON.stringify({ nEmpId: oEmployee.EmployeeID, nts: tsv }),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Delete Successfully.") {
                        alert("Delete sucessfully");
                        $('#tblEmployees').datagrid('deleteRow', SelectedRowIndex);
                        SessionStorageList();
                    }
                    else {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    });

    $('#btnDiscontinued').click(function (e) {

        var oEmployees = $('#tblEmployees').datagrid('getChecked');
        var nIndexes = [];
        var sEmpIDs = "";
        if (oEmployees.length <= 0) {
            alert("please select at least one Item!");
            return false;
        }
        for (var i = 0; i < oEmployees.length; i++) {
            if (oEmployees[i].WorkingStatus == 6) {
                alert("Some of employees are already discontinued!");
                return false;
            }
            var SelectedRowIndex = $('#tblEmployees').datagrid('getRowIndex', oEmployees[i]);
            nIndexes.push(SelectedRowIndex);
            sEmpIDs += oEmployees[i].EmployeeID + ",";
        }
        sEmpIDs = sEmpIDs.substring(0, sEmpIDs.length - 1);
        if (!confirm("Confirm to Discontinue? !!")) return;
        var tsv = ((new Date()).getTime()) / 1000;

        $.ajax
        ({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeWorkingStatusChange",
            traditional: true,
            data: JSON.stringify({ sEmpIDs: sEmpIDs, nts: tsv }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmployees = [];
                oEmployees = jQuery.parseJSON(data);
                if (oEmployees[0].ErrorMessage == "" && oEmployees.length > 0) {
                    for (var i = 0; i < oEmployees.length; i++) {
                        $('#tblEmployees').datagrid('updateRow', { index: nIndexes[i], row: oEmployees[i] });
                    }
                    alert("Discontinued Successfully !");
                }
                else {
                    alert(oEmployees[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });

    });

    $('#btnContinued').click(function (e) {
        var oEmployees = $('#tblEmployees').datagrid('getChecked');
        var nIndexes = [];
        var sEmpIDs = "";
        if (oEmployees.length <= 0) {
            alert("please select at least one Item!");
            return false;
        }

        for (var i = 0; i < oEmployees.length; i++) {
            if (oEmployees[i].WorkingStatus != 6) {
                alert("Only discontinued employee can be continued !");
                return false;
            }

            var SelectedRowIndex = $('#tblEmployees').datagrid('getRowIndex', oEmployees[i]);
            nIndexes.push(SelectedRowIndex);
            sEmpIDs += oEmployees[i].EmployeeID + ",";
        }
        sEmpIDs = sEmpIDs.substring(0, sEmpIDs.length - 1);
        if (!confirm("Confirm to Continue!")) return;

        var tsv = ((new Date()).getTime()) / 1000;
        $.ajax
         ({
             type: "POST",
             dataType: "json",
             url: _sBaseAddress + "/Employee/ContinuedEmployee",
             traditional: true,
             data: JSON.stringify({ sEmpIDs: sEmpIDs, nts: tsv }),
             contentType: "application/json; charset=utf-8",
             success: function (data) {
                 var oEmployees = [];
                 oEmployees = jQuery.parseJSON(data);
                 if (oEmployees[0].ErrorMessage == "" && oEmployees.length > 0) {
                     for (var i = 0; i < oEmployees.length; i++) {
                         $('#tblEmployees').datagrid('updateRow', { index: nIndexes[i], row: oEmployees[i] });
                         alert("Continued Successfully !");
                     }

                 }
                 else {
                     alert(oEmployees[0].ErrorMessage);
                 }
             },
             error: function (xhr, status, error) {
                 alert(error);
             }
         });
    });

    $('#btnActivity').click(function (e) {
        var oEmployees = $('#tblEmployees').datagrid('getChecked');
        var nIndexes = [];
        var sEmpIDs = "";
        if (oEmployees.length <= 0) {
            alert("please select at least one Item!");
            return false;
        }
        for (var i = 0; i < oEmployees.length; i++) {
            var SelectedRowIndex = $('#tblEmployees').datagrid('getRowIndex', oEmployees[i]);
            nIndexes.push(SelectedRowIndex);
            sEmpIDs += oEmployees[i].EmployeeID + ",";
        }
        sEmpIDs = sEmpIDs.substring(0, sEmpIDs.length - 1);
        var tsv = ((new Date()).getTime()) / 1000;
        $.ajax
        ({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/Employee_Activity",
            traditional: true,
            data: JSON.stringify({ sEmpIDs: sEmpIDs, nts: tsv }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmployees = [];
                oEmployees = jQuery.parseJSON(data);
                if (oEmployees[0].ErrorMessage == "" && oEmployees.length > 0) {
                    for (var i = 0; i < oEmployees.length; i++) {
                        $('#tblEmployees').datagrid('updateRow', { index: nIndexes[i], row: oEmployees[i] });
                    }
                    alert("Saved Successfully !");
                }
                else {
                    alert(oEmployees[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });

    });

    //$('#btnActivity').click(function (e) {

    //    debugger;
    //    var Act = "";
    //    var oEmployee = $('#tblEmployees').datagrid('getSelected');
    //    if (oEmployee == null || oEmployee.EmployeeID <= 0) {
    //        alert("Please select an item from list!");
    //        return;
    //    }
    //    if (oEmployee.WorkingStatus == 6) {
    //        alert("Discontinued employee can not  be activated !");
    //        return;
    //    }
    //    if (oEmployee.IsActive == false) {
    //        Act = true;

    //    }
    //    if (oEmployee.IsActive == true) {
    //        Act = false;

    //    }
    //    oEmployee.IsActive = Act;

    //    var SelectedRowIndex = $('#tblEmployees').datagrid('getRowIndex', oEmployee);
    //    $.ajax({
    //        type: "POST",
    //        dataType: "json",
    //        url: _sBaseAddress + "/Employee/Employee_Activity",
    //        traditional: true,
    //        data: JSON.stringify(oEmployee),
    //        contentType: "application/json; charset=utf-8",

    //        success: function (data) {
    //            debugger;
    //            oEmployee = jQuery.parseJSON(data);
    //            if (oEmployee.EmployeeID > 0) {
    //                if (oEmployee.IsActive == true) {
    //                    msg = "Activated";
    //                }
    //                if (oEmployee.IsActive == false) {
    //                    msg = "InActivated";
    //                }
    //                alert(msg + " Successfully!");
    //                $('#tblEmployees').datagrid('updateRow', { index: SelectedRowIndex, row: oEmployee });

    //            }
    //            else {
    //                alert(oEmployee.ErrorMessage);
    //            }
    //        }

    //    });
    //});

    $('#btnAction').click(function (e) {

        var oEmployees = $('#tblEmployees').datagrid('getChecked');
        if (oEmployees.length <= 0) {
            alert("Please Select At Least One Item !");
            return;
        }

        if (oEmployees.length > 50) {
            alert("You can print maximum 50 employee card at a time!");
            return;
        }

        var EmployeeCardStatusInt = document.getElementById("cboEmployeeCardStatusSearch").selectedIndex;
        if (EmployeeCardStatusInt <= 0) {
            alert("Please Select A Card status !");
            return;
        }
        var sEmployeeID = "";
        for (var i = 0; i < oEmployees.length; i++) {
            //if (oEmployees[i].WorkingStatus != 1 && oEmployees[i].WorkingStatus != 2) {
            //    alert("Some Employee Is Not In Workplace/OSD ! Please Select The Employee Who Is In Workplace/OSD !");
            //    return;
            //}

            if (oEmployees[i].IsActive == false) {
                alert("Some Employee Is InActive ! Please Select Only The Active Employee !");
                return;
            }

            //if (oEmployees[i].EmployeeCardStatus == 0 && EmployeeCardStatusInt != 1) {
            //    alert("You Are Only Allowed To Print, Because This/These Employee Has/Have No Previous Card Status !");
            //    return;
            //}

            //if (oEmployees[i].EmployeeCardStatus == 1 && EmployeeCardStatusInt != 2) {
            //    alert("You Are Only Allowed To Deliver The Card . Because This Card Has Printed ! ");
            //    return;
            //}

            //if (oEmployees[i].EmployeeCardStatus == 2 && EmployeeCardStatusInt != 3 && EmployeeCardStatusInt != 4 && EmployeeCardStatusInt != 5) {
            //    alert("This Card Has Delivered. Only Return/Lost/Damage Is Possible !");
            //    return;
            //}

            //if (oEmployees[i].EmployeeCardStatus == 3 && EmployeeCardStatusInt != 1 && EmployeeCardStatusInt != 2) {
            //    alert("This Card Has Returned. Only Print/Deliver Is Possible !");
            //    return;
            //}

            //if (oEmployees[i].EmployeeCardStatus == 4 && EmployeeCardStatusInt != 1) {
            //    alert("This Card Has Lost. Only Print Is Possible !");
            //    return;
            //}

            //if (oEmployees[i].EmployeeCardStatus == 5 && EmployeeCardStatusInt != 1) {
            //    alert("This Card Has Damaged. Only Print Is Possible !");
            //    return;
            //}

            if (oEmployees[i].EmployeeID > 0) {
                sEmployeeID = sEmployeeID + oEmployees[i].EmployeeID + ",";
            }

        }
        var sNewEmployeeID = "";
        sNewEmployeeID = sEmployeeID.substring(0, sEmployeeID.length - 1);
        //if (!confirm("Confirm to change card status?")) return;

        debugger;
        var tsv = ((new Date()).getTime()) / 1000;
        if (oEmployees.length > 0) {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/Employee/EmployeeCardIssue",
                traditional: true,
                data: JSON.stringify({ sEmployeeIDs: sNewEmployeeID, EmployeeCardStatusInt: EmployeeCardStatusInt, ts: tsv }),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oEmployeeCard = jQuery.parseJSON(data);

                    if (oEmployeeCard.ErrorMessage != "") {
                        alert(oEmployeeCard.ErrorMessage);
                        return;
                    }
                    else {
                        var SelectedRowIndex = 0;
                        for (var i = 0; i < oEmployees.length; i++) {
                            SelectedRowIndex = $('#tblEmployees').datagrid('getRowIndex', oEmployees[i]);
                            $('#tblEmployees').datagrid('updateRow', { index: SelectedRowIndex, row: oEmployeeCard.Employees[i] });
                        }
                    }

                    if (EmployeeCardStatusInt == 1) {
                        _sPrintType="";
                        _sPrintType="EmpCard";
                        OpenWinEmpCardPrintItem();
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }

            });
        }
    });

    function OkEmpCardPrintItem()
    {
        var oEmpCardPrintItems = $('#tblEmpCardPrintItems').datagrid('getChecked');
        var itemIDs="";
        if(oEmpCardPrintItems.length>0)
        {
            for(var i=0;i<oEmpCardPrintItems.length;i++)
            {
                itemIDs += oEmpCardPrintItems[i].id +",";
            }
            itemIDs = itemIDs.substring(0,itemIDs.length-1);
        }


        if(_sPrintType=="EmpCard"){
            PrintEmployeeCard(itemIDs);
        }
        else if(_sPrintType=="AppLetter_MAMIYA"){
            PrintAppLetter_MAMIYA(itemIDs);
        }
        else if(_sPrintType=="AppLetter_MAMIYA_Bangla"){
            PrintAppLetter_MAMIYA_Bangla(itemIDs);
        }

        $('#winEmpCardPrintItems').icsWindow('close');
    }
    function OpenWinEmpCardPrintItem()
    {
        var oObj= new Object();
        var oItems=[];
        oObj.id=1;
        oObj.Item="Joining Date";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=2;
        oObj.Item="B. Group";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=3;
        oObj.Item="Company Address";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=4;
        oObj.Item="Issue Date";
        oItems.push(oObj);


        oObj= new Object();
        oObj.id=5;
        oObj.Item="Pad Format";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=6;
        oObj.Item="Date of Birth";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=7;
        oObj.Item="ID Card";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=8;
        oObj.Item="BusinessUnit Address";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=9;
        oObj.Item="Back Address Company";
        oItems.push(oObj);


        DynamicRefreshList(oItems, "tblEmpCardPrintItems");
        $('#winEmpCardPrintItems').icsWindow('open');
    }
    function CloseWinEmpCardPrintItem()
    {
        $('#winEmpCardPrintItems').icsWindow('close');
    }

    //$('#btnPrintJobApplicationInBangla').click(function (e)
    //{
    function JobApplicationInBangla()
    {
        var oEmployee= $('#tblEmployees').datagrid('getSelected');
        if(oEmployee==null || oEmployee.EmployeeID<=0)
        {
            alert("please select an Employee !");
            return false;
        }
        var sLanguage="Bangla";
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/Employee/View_PrintJobApplication?nEmpID="+oEmployee.EmployeeID+"&sLanguage="+sLanguage+"&ts="+tsv, "_blank");
    }

    function JobApplicationInBangla_ZN()
    {
        var oEmployee= $('#tblEmployees').datagrid('getSelected');
        if(oEmployee==null || oEmployee.EmployeeID<=0)
        {
            alert("please select an Employee !");
            return false;
        }
        var sLanguage="Bangla";
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/Employee/View_PrintJobApplication_ZN?nEmpID="+oEmployee.EmployeeID+"&sLanguage="+sLanguage+"&ts="+tsv, "_blank");
    }

    //});

    //$('#btnPrintJobApplicationInEnglish').click(function (e) {
    function JobApplicationInEnglish()
    {
        var oEmployee = $('#tblEmployees').datagrid('getSelected');

        if (oEmployee == null || oEmployee.EmployeeID <= 0) {
            alert("please select an Employee !");
            return false;
        }

        var sLanguage = "English";
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress + "/Employee/PrintJobApplication?nEmpID=" + oEmployee.EmployeeID + "&sLanguage=" + sLanguage + "&ts=" + tsv, "_blank");
    }
    //});

    //$('#btnAppLetterInBangla').click(function (e)
    //{
    function AppLetterInBangla()
    {
        var oEmployeeSalaryStructure= $('#tblEmployees').datagrid('getSelected');
        if(oEmployeeSalaryStructure==null || oEmployeeSalaryStructure.EmployeeID<=0)
        {
            alert("please select an Employee !");
            return false;
        }
        var sLanguage="Bangla";
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/Employee/View_PrintAppointmentLetterInBangla?nEmpID="+oEmployeeSalaryStructure.EmployeeID+"&sLanguage="+sLanguage+"&ts="+tsv, "_blank");
    }

    function AppLetterInBangla_ZN()
    {
        var oEmployeeSalaryStructure= $('#tblEmployees').datagrid('getSelected');
        if(oEmployeeSalaryStructure==null || oEmployeeSalaryStructure.EmployeeID<=0)
        {
            alert("please select an Employee !");
            return false;
        }
        var sLanguage="Bangla";
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/Employee/View_PrintAppointmentLetterInBangla_ZN?nEmpID="+oEmployeeSalaryStructure.EmployeeID+"&sLanguage="+sLanguage+"&ts="+tsv, "_blank");
    }

    //});

    //$('#btnAppLetterInEnglish').click(function (e) {
    function AppLetterInEnglish()
    {
        var oEmployeeSalaryStructure = $('#tblEmployees').datagrid('getSelected');

        if (oEmployeeSalaryStructure == null || oEmployeeSalaryStructure.EmployeeID <= 0) {
            alert("please select an Employee !");
            return false;
        }
        var sLanguage = "English";
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress + "/Employee/PrintAppointmentLetter?nEmpID=" + oEmployeeSalaryStructure.EmployeeID + "&sLanguage=" + sLanguage + "&ts=" + tsv, "_blank");
    }
    //});

    //$('#btnPrintList').click(function (e) {
    function PrintList()
    {
        var oEmployees = $('#tblEmployees').datagrid('getRows');
        if (oEmployees.length <= 0)
        {
            alert("There is nothing to print !");
            return false;
        }
        var sEmployeeIDs = "";
        for (var i = 0 ; i < oEmployees.length ; i++)
        {
            sEmployeeIDs += oEmployees[i].EmployeeID + ",";
        }
        sEmployeeIDs = sEmployeeIDs.substring(0, sEmployeeIDs.length - 1)
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress + "/Employee/PrintEmployeeList?sEmployeeIDs=" + sEmployeeIDs + "&ts=" + tsv, "_blank");
    }
    //});

    //CV Print Start
    var _nEmployeeIDForCV = 0;
    function PrintCV()
    {
        debugger;
        var oEmployee = $('#tblEmployees').datagrid('getSelected');
        if (oEmployee == null || oEmployee.EmployeeID <= 0)
        {
            alert("Please select a item from list!");
            return;
        }
        _nEmployeeIDForCV = oEmployee.EmployeeID;
        //var oParameter = new Object();
        //oParameter.EmployeeID = oEmployee.EmployeeID;
        //var url = _sBaseAddress + "/Employee/View_PrintEmployeeCV"
        //var nLeft = (window.screen.width / 2) - (250 / 2);
        //var nHeight = (window.screen.height / 2) - (205 / 2);
        //var oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:240px;dialogWidth:250px;dialogLeft:' + nLeft + ';dialogTop:' + nHeight + ';center:yes;resizable:no;status:no;scroll:yes');
        //var oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:520px;dialogWidth:800px;dialogLeft:300;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');
        SearchingItems();
        $('#winPrintCV').icsWindow('open');
    }

    function SearchingItems()
    {
        debugger;
        var oList = new Object();
        var oLists = [];
        oList.SearchingName = "Basic Info.";
        oList.ID = 1;
        oLists.push(oList);

        var oList = new Object();
        oList.SearchingName = "Official Info.";
        oList.ID = 2;
        oLists.push(oList);

        var oList = new Object();
        oList.SearchingName = "Salary Info.";
        oList.ID = 3;
        oLists.push(oList);

        DynamicRefreshList(oLists, "tblEmployeeCV");
    }

    $('#btnPrintEMPCV').click(function (e)
    {
        var IsBasicInfo = false;
        var IsOfficialInfo = false;
        var IsSalaryInfo = false;

        var oItems = $('#tblEmployeeCV').datagrid('getChecked');
        for(var i=0; i<oItems.length;i++)
        {
            if(oItems[i].ID == 1)
            {
                IsBasicInfo = true;
            }
            else if(oItems[i].ID == 2)
            {
                IsOfficialInfo = true;
            }
            else if(oItems[i].ID == 3)
            {
                IsSalaryInfo = true;
            }
        }

        //IsBasicInfo = document.getElementById("chkBasicInfo").checked;
        //IsOfficialInfo  = document.getElementById("chkOfficialInfo").checked;
        //IsSalaryInfo = document.getElementById("chkSalaryInfo").checked;

        if(IsBasicInfo==false&&IsOfficialInfo==false&&IsSalaryInfo==false)
        {
            alert("Please check at least one item! ");
            return;
        }
        var sParams = _nEmployeeIDForCV+"~"+IsBasicInfo+"~"+IsOfficialInfo+"~"+IsSalaryInfo;
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/Employee/PrintEmployeeCV?sParams="+sParams+"&ts="+tsv, "_blank");
        $('#winPrintCV').icsWindow('close');
        DynamicRefreshList([], "tblEmployeeCV");
    });

    $('#btnCancel').click(function (e)
    {
        $('#winPrintCV').icsWindow('close');
        DynamicRefreshList([], "tblEmployeeCV");
    });

    // CV Print End

    function PrintEmployeeCard(itemIDs) {

        var oEmployees = $('#tblEmployees').datagrid('getChecked');
        var sEmployeeID = "";
        for (var i = 0; i < oEmployees.length; i++) {
            if (oEmployees[i].EmployeeID > 0) {
                sEmployeeID = sEmployeeID + oEmployees[i].EmployeeID + ",";
            }

        }
        var sNewEmployeeID = "";
        sNewEmployeeID = sEmployeeID.substring(0, sEmployeeID.length - 1);

        var oParameter = new Object();
        oParameter.Name = "Print Employee Card";
        var tsv = ((new Date()).getTime()) / 1000;
        var sUrl = "";
        if($("#cboCardShape").val()==1)
        {
            sUrl= _sBaseAddress+ "/Employee/PrintEmployeeCard_Potrait?sIDs="+sNewEmployeeID+"&itemIDs="+itemIDs+"&ts="+tsv;
        }
        else if($("#cboCardShape").val()==2)
        {
            var sIssueDate = $('#dtIssueDate').datebox('getValue');
            var sExpireDate = $('#dtExpireDate').datebox('getValue');
            sUrl= _sBaseAddress+ "/Employee/PrintEmployeeCard_Landscape?sIDs="+sNewEmployeeID+"&sIssueDate="+sIssueDate+"&sExpireDate="+sExpireDate+"&ts="+tsv;
        }
        else if($("#cboCardShape").val()==3)
        {

            var sIssueDate = $('#dtIssueDate').datebox('getValue');
            var sExpireDate = $('#dtExpireDate').datebox('getValue');
            sUrl= _sBaseAddress+ "/Employee/PrintEmployeeCard_Potrait_BothSide?sIDs="+sNewEmployeeID+"&itemIDs="+itemIDs+"&sIssueDate="+sIssueDate+"&sExpireDate="+sExpireDate+"&ts="+tsv;
        }
        else if($("#cboCardShape").val()==4)
        {
            sUrl= _sBaseAddress+ "/Employee/PrintEmployeeCardBothSideBangla?sIDs="+sNewEmployeeID+"&itemIDs="+itemIDs+"&expDate="+$('#dtExpireDate').datebox('getValue')+"&ts="+tsv;
        }
        else if($("#cboCardShape").val()==5)
        {

            var sIssueDate = $('#dtIssueDate').datebox('getValue');
            var sExpireDate = $('#dtExpireDate').datebox('getValue');
            sUrl= _sBaseAddress+ "/EmployeeIDCard/IDCardBanglaF1?sIDs="+sNewEmployeeID+"&itemIDs="+itemIDs+"&sIssueDate="+sIssueDate+"&sExpireDate="+sExpireDate+"&ts="+tsv;
        }
        else if($("#cboCardShape").val()==6)
        {

            var sIssueDate = $('#dtIssueDate').datebox('getValue');
            var sExpireDate = $('#dtExpireDate').datebox('getValue');
            sUrl= _sBaseAddress+ "/EmployeeIDCard/IDCardBanglaF2?sIDs="+sNewEmployeeID+"&itemIDs="+itemIDs+"&sIssueDate="+sIssueDate+"&sExpireDate="+sExpireDate+"&ts="+tsv;
        }

        else if($("#cboCardShape").val()==7)
        {
            sUrl= _sBaseAddress+ "/Employee/PrintEmployeeCard_Potrait_BothSideF2?sIDs="+sNewEmployeeID+"&itemIDs="+itemIDs+"&expDate="+$('#dtExpireDate').datebox('getValue')+"&ts="+tsv;
        }
        window.open(sUrl, "_blank");
    }

    function EmpAuthenticationXL()
    {
        var oEmployees = $('#tblEmployees').datagrid('getChecked');
        if (oEmployees.length <= 0 || oEmployees==null) {
            alert("Please select at least one item !");
            return false;
        }
        var sEmployeeID = "";
        for (var i = 0; i < oEmployees.length; i++) {
            if (oEmployees[i].EmployeeID > 0) {
                sEmployeeID = sEmployeeID + oEmployees[i].EmployeeID + ",";
            }
        }
        var sNewEmployeeID = "";
        sNewEmployeeID = sEmployeeID.substring(0, sEmployeeID.length - 1);

        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/Employee/PrintEmpAuthenticationXL?sEmployeeIDs="+sNewEmployeeID+"&ts="+tsv, "_blank");
    }

    function PrintCompanyRules()
    {
        var oEmployee= $('#tblEmployees').datagrid('getSelected');
        if(oEmployee==null || oEmployee.EmployeeID<=0)
        {
            alert("please select an Employee !");
            return false;
        }
        _nEmployeeID=oEmployee.EmployeeID;
        DynamicRefreshList([], "tblCompanyRuleNames");
        var oCompanyRuleName={CRNID:0}
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oCompanyRuleName,
            ControllerName: "CompanyRule",
            ActionName: "GetsCompanyRuleName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs!= null && response.objs.length>0) {
                DynamicRefreshList(response.objs, "tblCompanyRuleNames");
            }
        });
        $("#winCRList").icsWindow("open", " Company Rule List");
    }

    function PrintDeclaration()
    {
        var oEmployee= $('#tblEmployees').datagrid('getSelected');
        if(oEmployee==null || oEmployee.EmployeeID<=0)
        {
            alert("please select an Employee !");
            return false;
        }
        var sLanguage="Bangla";
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/Employee/View_PrintDeclaration?nEmpID="+oEmployee.EmployeeID+"&ts="+tsv, "_blank");
    }

    $('#btnPrint').click(function (e)
    {
        debugger;
        var nPType=$("#cboPrintType").val();
        if(nPType==0)
        {
            alert("Please select one type!");
            return;
        }
        else if(nPType==1)
        {
            PrintList();
        }
        else if(nPType==2)
        {
            JobApplicationInBangla();
        }
        else if(nPType==3)
        {
            JobApplicationInEnglish();
        }
        else if(nPType==4)
        {
            AppLetterInBangla();
        }
        else if(nPType==5)
        {
            AppLetterInEnglish();
        }
        else if(nPType==6)
        {
            PrintCV();
        }
        else if(nPType==7)
        {
            EmpAuthenticationXL();
        }
        else if(nPType==8)
        {
            PrintCompanyRules();
        }
        else if(nPType==9)
        {
            PrintDeclaration();
        }
        else if(nPType==10)
        {
            JobApplicationInBangla_ZN();
        }
        else if(nPType==11)
        {
            AppLetterInBangla_ZN();
        }
        else if(nPType==12)
        {
            AppLetter_MAMIYA();
        }
        else if(nPType==13)
        {
            AppLetter_MAMIYA_Bangla();
        }
        else if(nPType==14)
        {
            PrintEmpDetailList();
        }
        else if(nPType==15)
        {
            PrintFinalSettlementForm();
        }
        else if(nPType==16)
        {
            PrintFinalSettlementOfResignation();
        }
    });

    $('#btnPrintCR').click(function (e)
    {
        debugger
        var oCRs = $('#tblCompanyRuleNames').datagrid('getChecked');
        if (oCRs.length <= 0) {
            alert("Please Select At Least One Item !");
            return;
        }
        var sCRNIDs = "";
        for(var i =0; i<oCRs.length;i++)
        {
            sCRNIDs += oCRs[i].CRNID +",";
        }
        sCRNIDs = sCRNIDs.substring(0,sCRNIDs.length-1);

        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/Employee/View_PrintCompanyRules?nEmpID="+_nEmployeeID+"&sCRNIDs="+sCRNIDs+"&ts="+tsv, "_blank");
        $("#winCRList").icsWindow("close");
        _nEmployeeID=0;
    });
    $('#btnCloseCRList').click(function (e)
    {
        $("#winCRList").icsWindow("close");
        _nEmployeeID=0;
    });

    // BOA Start
    var BOAEmps=[];

    $('#btnPrintProfilePreview').click(function(){
        var oLists=[];
        oLists = $('#tblEmployees').datagrid('getChecked');
        if(oLists == null || oLists.length<=0)
        {
            alert("Please select atleast one Employee.");
            return;
        }
        else if(oLists.length == 1)
        {
            window.open(sessionStorage.getItem('BaseAddress')+'/Employee/PrintEmployeeProfile?id=' + oLists[0].EmployeeID+'&buid=0', "_blank");
        }
        else
        {
            var ids =ICS_PropertyConcatation(oLists, 'EmployeeID');
            window.open(sessionStorage.getItem('BaseAddress')+'/Employee/PrintEmployeeProfileList?ids='+ ids, "_blank");
        }
    });

    $('#btnBOA').click(function (e)
    {
        BOAEmps=[];
        var oEmployees= $('#tblEmployees').datagrid('getChecked');
        if(oEmployees==null || oEmployees.length<=0)
        {
            alert("please select al least one Employee !");
            return;
        }
        _sEmployeeIDs="";
        for(var i=0; i<oEmployees.length; i++)
        {
            _sEmployeeIDs+=oEmployees[i].EmployeeID+",";
        }
        _sEmployeeIDs=_sEmployeeIDs.substring(0,_sEmployeeIDs.length-1);

        if(oEmployees.length==1)
        {
            _nEmployeeID=oEmployees[0].EmployeeID;
        }
        else
        {
            _nEmployeeID=0;
        }
        DynamicRefreshList([], "tblBOAs");
        var oBAO={BAOID:0,nID:_nEmployeeID}
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oBAO,
            ControllerName: "BenefitOnAttendance",
            ActionName: "GetsBenefitOnAttendance",
            IsWinClose: false
        };
        $.icsDataGet(obj, function (response) {
            debugger
            if (response.status && response.obj.BOAs!= null && response.obj.BOAs.length>0) {
                DynamicRefreshList(response.obj.BOAs, "tblBOAs");
            }
            if (response.status && response.obj.BOAEmployees!= null && response.obj.BOAEmployees.length>0) {
                BOAEmps=response.obj.BOAEmployees;
                for(var i=0; i<response.obj.BOAs.length;i++)
                {
                    for(var j=0; j<response.obj.BOAEmployees.length;j++)
                    {
                        if(response.obj.BOAEmployees[j].BOAID==response.obj.BOAs[i].BOAID)
                        {
                            $('#tblBOAs').datagrid('checkRow', i);
                        }
                    }
                }
            }
        });
        $("#winBOA").icsWindow("open", "BOA List");
    });

    $('#btnSaveBOA').click(function (e)
    {
        debugger
        var oBOAs = $('#tblBOAs').datagrid('getChecked');
        if (oBOAs.length <= 0) {
            alert("Please Select At Least One Item !");
            return;
        }
        var sBOAIDs = "";
        for(var i =0; i<oBOAs.length;i++)
        {
            //if(BOAEmps.length>0)
            //{
            //    for(var j =0; j<BOAEmps.length;j++)
            //    {
            //        if(oBOAs[i].BOAID !=BOAEmps[j].BOAID)
            //        {
            //sBOAIDs += oBOAs[i].BOAID +",";
            //        }
            //    }
            //}
            //else
            //{
            sBOAIDs += oBOAs[i].BOAID +",";
            //}
        }

        sBOAIDs = sBOAIDs.substring(0,sBOAIDs.length-1);
        var oBOA={IDs:sBOAIDs,ErrorMessage:_sEmployeeIDs};
        //if(oBOA.IDs=="")
        //{
        //    alert("Assigned sucessfully");
        //    CloseBOA();
        //    return;
        //}
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/BenefitOnAttendance/BenefitOnAttendanceEmployee_IU",
            traditional: true,
            data: JSON.stringify(oBOA),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                oBOAEmp = jQuery.parseJSON(data);
                if ((oBOAEmp.BOAID > 0 && oBOAEmp.ErrorMessage=="") || oBOAEmp.ErrorMessage=="Assigned sucessfully") {
                    alert("Assigned sucessfully");
                    CloseBOA();
                } else {
                    alert(oBOAEmp.ErrorMessage);
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });


    });

    function CloseBOA()
    {
        $("#winBOA").icsWindow("close");
        _nEmployeeID=0;
    }

    //BOA End

    function AppLetter_MAMIYA()
    {
        var oEmployee = $('#tblEmployees').datagrid('getSelected');
        if (oEmployee== null || oEmployee.EmployeeID <= 0) {
            alert("please select an Employee !");
            return false;
        }
        _sPrintType="";
        _sPrintType="AppLetter_MAMIYA";
        OpenWinEmpCardPrintItem();
        _nEmployeeID=0;
        _nEmployeeID=oEmployee.EmployeeID;

    }

    function  PrintAppLetter_MAMIYA(itemIDs)
    {
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress + "/Employee/PrintAppointmentLetter_MAMIYA?nEmpID=" + _nEmployeeID+"&itemIDs="+itemIDs+"&ts=" + tsv, "_blank");
    }

    function AppLetter_MAMIYA_Bangla()
    {
        var oEmployee = $('#tblEmployees').datagrid('getSelected');
        if (oEmployee== null || oEmployee.EmployeeID <= 0) {
            alert("please select an Employee !");
            return false;
        }
        _sPrintType="";
        _sPrintType="AppLetter_MAMIYA_Bangla";
        OpenWinEmpCardPrintItem();
        _nEmployeeID=0;
        _nEmployeeID=oEmployee.EmployeeID;

    }

    function  PrintAppLetter_MAMIYA_Bangla(itemIDs)
    {
        //var oEmployeeSalaryStructure= $('#tblEmployees').datagrid('getSelected');
        //if(oEmployeeSalaryStructure==null || oEmployeeSalaryStructure.EmployeeID<=0)
        //{
        //    alert("please select an Employee !");
        //    return false;
        //}
        //var sLanguage="Bangla";
        //var tsv=((new Date()).getTime())/1000;
        //window.open(_sBaseAddress+ "/Employee/View_PrintAppointmentLetterInBangla_ZN?nEmpID="+oEmployeeSalaryStructure.EmployeeID+"&sLanguage="+sLanguage+"&ts="+tsv, "_blank");

        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress + "/Employee/View_PrintAppointmentLetterInBangla_MAMIYA?nEmpID=" + _nEmployeeID+"&itemIDs="+itemIDs+"&ts=" + tsv, "_blank");
    }

    function PrintTypeObject()
    {
        var oObj= new Object();
        var oItems=[];
        //oObj.id=0;
        //oObj.Item="None";
        //oItems.push(oObj);
        if(PermissionChecker('View','EmployeeSalaryStructure',_oAURolesMapping))
        {
            //1
            oObj= new Object();
            oObj.id=1;
            oObj.Item="Print List";
            oItems.push(oObj);
            //2
            oObj= new Object();
            oObj.id=4;
            oObj.Item="Appoint. Letter(B)";
            oItems.push(oObj);

            oObj= new Object();
            oObj.id=5;
            oObj.Item="Appoint. Letter";
            oItems.push(oObj);

            oObj= new Object();
            oObj.id=6;
            oObj.Item="Print CV";
            oItems.push(oObj);

            //3
            if(_sBaseAddress.toLowerCase()=="/mamiya")
            {
                oObj= new Object();
                oObj.id=12;
                oObj.Item="Appoint. Letter_MAMIYA";
                oItems.push(oObj);
            }

            if(_sBaseAddress.toLowerCase()=="/mamiya")
            {
                oObj= new Object();
                oObj.id=13;
                oObj.Item="Appoint. Letter_MAMIYA(B)";
                oItems.push(oObj);
            }
        }

        //if(bPrint)
        //{

        //}
        oObj= new Object();
        oObj.id=2;
        oObj.Item="Job App.(B)";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=3;
        oObj.Item="Job App.";
        oItems.push(oObj);

        //if(bPrint)
        //{

        //}

        oObj= new Object();
        oObj.id=7;
        oObj.Item="Emp. Auth. XL";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=8;
        oObj.Item="Company Rules";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=9;
        oObj.Item="Declaration";
        oItems.push(oObj);

        if(_sBaseAddress.toLowerCase()=="/zn")
        {
            oObj= new Object();
            oObj.id=10;
            oObj.Item="Job App_ZN(B)";
            oItems.push(oObj);
        }

        if(_sBaseAddress.toLowerCase()=="/zn")
        {
            oObj= new Object();
            oObj.id=11;
            oObj.Item="Appoint. Letter_ZN(B)";
            oItems.push(oObj);
        }

        //if(bPrint)
        //{

        //}

        oObj= new Object();
        oObj.id=14;
        oObj.Item="Emp. Detail List";
        oItems.push(oObj);

        //if(_sBaseAddress.toLowerCase()=="/mamiya")
        //{
        oObj= new Object();
        oObj.id=15;
        oObj.Item="Final Sett. Form";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=16;
        oObj.Item="Final Sett. Of Resig.";
        oItems.push(oObj);

        oObj= new Object();
        oObj.id=17;
        oObj.Item="Service Book";
        oItems.push(oObj);

        //}

        $("#cboPrintType").icsLoadCombo({
            List: oItems,
            OptionValue: "id",
            DisplayText: "Item"
        });
    }

    function PrintEmpDetailList() {
        var oEmployees = $('#tblEmployees').datagrid('getChecked');
        if (oEmployees== null || oEmployees.length <= 0) {
            alert("Please select at least one item !");
            return;
        }

        var sEmployeeID = "";
        for (var i = 0; i < oEmployees.length; i++) {
            if (oEmployees[i].EmployeeID > 0) {
                sEmployeeID = sEmployeeID + oEmployees[i].EmployeeID + ",";
            }
        }
        var sNewEmployeeID = "";
        sNewEmployeeID = sEmployeeID.substring(0, sEmployeeID.length - 1);

        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress + "/Employee/PrintEmpDetailList?sEmpIDs=" + sNewEmployeeID+"&ts=" + tsv, "_blank");
    }

    function PrintFinalSettlementForm() {
        var oEmployee = $('#tblEmployees').datagrid('getSelected');
        if(oEmployee==null || oEmployee.EmployeeID<=0)
        {
            alert("please select an item !");
            return false;
        }
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/EmployeeSettlement/PrintFinalSettlementForm_MAMIYA?nEmpID="+oEmployee.EmployeeID+"&ts="+tsv, "_blank");
    }


    function PrintFinalSettlementOfResignation() {
        var oEmployee = $('#tblEmployees').datagrid('getSelected');
        if(oEmployee==null || oEmployee.EmployeeID<=0)
        {
            alert("please select an item !");
            return false;
        }
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/EmployeeSettlement/PrintFinalSettlementOfResig_MAMIYA?nEmpID="+oEmployee.EmployeeID+"&ts="+tsv, "_blank");
    }

    $('#btnImportXL').click( function ()
    {
        if ($.trim($("#fileEmployees").val()) == "") {
            alert("Please select a file.");
            $("#fileEmployees").addClass("errorFieldBorder");
            $("#fileEmployees").focus();
            return false;
        } else {
            $("#fileEmployees").removeClass("errorFieldBorder");
        }
        return true;
    });

    $('#cboPrintType').change( function ()
    {
        if ($("#cboPrintType").val()==1 || $("#cboPrintType").val()==17)
        {
            $("#btnPrintXL").show();
            $("#btnPrint").show();
            if ($("#cboPrintType").val()==17) $("#btnPrint").hide();
        }
        else
        {
            $("#btnPrintXL").hide();
            $("#btnPrint").show();
        }
    });

    $('#btnPrintXL').click( function ()
    {
        if ($("#cboPrintType").val()==1)
        {
            PrintListXL();
        }
        else if ($("#cboPrintType").val()==17)
        {
            PrintServiceBookInXL();
        }
    });

    function PrintListXL()
    {
        var oEmployees = $('#tblEmployees').datagrid('getRows');
        if (oEmployees.length <= 0)
        {
            alert("There is nothing to print !");
            return;
        }
        var sEmployeeIDs = "";
        for (var i = 0 ; i < oEmployees.length ; i++)
        {
            sEmployeeIDs += oEmployees[i].EmployeeID + ",";
        }
        sEmployeeIDs = sEmployeeIDs.substring(0, sEmployeeIDs.length - 1)
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/EmployeeSalaryStructure/PrintESalaryStructure_XL?sIDs="+sEmployeeIDs+"&sIDType=EmployeeID"+"&ts="+tsv, "_blank");
    }

    function PrintServiceBookInXL()
    {
        var oEmployee = $('#tblEmployees').datagrid('getSelected');
        if (oEmployee == null || oEmployee.EmployeeID <=0)
        {
            alert("Please select an item from the list!");
            return;
        }
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/Employee/PrintServiceBookInXL?nEmployeeID="+oEmployee.EmployeeID+"&ts="+tsv, "_blank");
    }

    $('#btnEditDOJ').click( function ()
    {
        var oEmployee= $('#tblEmployees').datagrid('getSelected');
        if(oEmployee==null || oEmployee.EmployeeID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        $('#winDOJ').icsWindow('open');
        debugger;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/GetByEmpID",
            traditional: true,
            data: JSON.stringify({ nEmpID: oEmployee.EmployeeID }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oEmp = jQuery.parseJSON(data);
                if (oEmp.EmployeeID > 0) {
                    $('#dtDateOfJoin').datebox('setValue',oEmp.DateOfJoinInString);
                    $('#dtConfirmationDate').datebox('setValue',oEmp.ConfirmationDateInString);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });

    $('#btnDOJClose').click( function ()
    {
        $('#winDOJ').icsWindow('close');
    });

    $('#btnDOJOk').click( function ()
    {
        var dDateOfJoin = $('#dtDateOfJoin').datebox('getValue');
        var dConfirmationDate = $('#dtConfirmationDate').datebox('getValue');
        var oEmployee = $('#tblEmployees').datagrid('getSelected');
        if(oEmployee==null || oEmployee.EmployeeID<=0)
        {
            alert("please select an item !");
            return;
        }

        var oEMP={
            EmployeeID : oEmployee.EmployeeID,
            DateOfJoin : dDateOfJoin,
            ConfirmationDate : dConfirmationDate
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EditDateOfJoin",
            traditional: true,
            data: JSON.stringify(oEMP),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                var oEmp = jQuery.parseJSON(data);
                if (oEmp.ErrorMessage=="") {
                    alert("Edited Sucessfully");
                    $('#winDOJ').icsWindow('close');
                } else {
                    alert(oEmp.ErrorMessage);
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    });

    //Edit Bank Cash


    $("#chkBank").click(function (e)
    {
        $('#chkCash').prop('checked', false);
        $('#chkBank').prop('checked', true);
        document.getElementById('lblCash').innerHTML = 'Salary Bank :';
        document.getElementById('lblBonusCash').innerHTML = 'Bonus Bank :';
    });
    $("#chkCash").click(function (e)
    {
        $('#chkBank').prop('checked', false);
        $('#chkCash').prop('checked', true);
        document.getElementById('lblCash').innerHTML = 'Salary Cash :';
        document.getElementById('lblBonusCash').innerHTML = 'Bonus Cash :';
    });

    $('#btnEditBankCash').click( function ()
    {
        debugger;
        var oEmployee= $('#tblEmployees').datagrid('getSelected');
        if(oEmployee==null || oEmployee.EmployeeID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        $('#winBankCash').icsWindow('open');
        debugger;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/GetByEmpID",
            traditional: true,
            data: JSON.stringify({ nEmpID: oEmployee.EmployeeID }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oEmp = jQuery.parseJSON(data);
                if (oEmp.EmployeeID > 0) {
                    if(oEmp.EmployeeSalaryStructure.ESSID>0)
                    {
                        if(oEmp.EmployeeSalaryStructure.IsCashFixed) {
                            $('#chkBank').prop('checked', false);
                            $('#chkCash').prop('checked', true);
                            $('#txtCash').val(oEmp.EmployeeSalaryStructure.CashAmount);
                            document.getElementById('lblCash').innerHTML = 'Salary Cash :';
                            document.getElementById('lblBonusCash').innerHTML = 'Bonus Cash :';
                        } else {
                            $('#chkBank').prop('checked', true);
                            $('#chkCash').prop('checked', false);
                            $('#txtCash').val(oEmp.EmployeeSalaryStructure.CashAmount);
                            document.getElementById('lblCash').innerHTML = 'Salary Bank :';
                            document.getElementById('lblBonusCash').innerHTML = 'Bonus Bank :';
                        }
                        $("#chkIsFullBonus").prop("checked",oEmp.EmployeeSalaryStructure.IsFullBonus);
                        $('#txtBonusCash').val(oEmp.EmployeeSalaryStructure.BonusCashAmount);
                    }
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });

    $('#btnBankCashClose').click( function ()
    {
        $('#winBankCash').icsWindow('close');
    });

    $('#btnBankCashOk').click( function ()
    {

        var IsCashFixed = false;
        if ($("#chkBank").is(':checked')) {
            IsCashFixed = false;
        }
        if ($("#chkCash").is(':checked')) {
            IsCashFixed = true;
        }

        var oEmployee = $('#tblEmployees').datagrid('getSelected');
        if(oEmployee==null || oEmployee.EmployeeID<=0)
        {
            alert("please select an item !");
            return;
        }

        var oEMP={
            EmployeeID : oEmployee.EmployeeID,
            IsCashFixed : IsCashFixed,
            CashAmount : $("#txtCash").val(),
            BonusCashAmount : $("#txtBonusCash").val(),
            IsFullBonus :$('#chkIsFullBonus').is(':checked'),
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EditBankCash",
            traditional: true,
            data: JSON.stringify(oEMP),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                var oEmp = jQuery.parseJSON(data);
                if (oEmp.ErrorMessage=="") {
                    alert("Edited Sucessfully");
                    $('#winBankCash').icsWindow('close');
                } else {
                    alert(oEmp.ErrorMessage);
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    });


    function PrintEmployeeDatabaseXL(){

        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nEmployeeGroupID=$("#cboEmployeeGroup").val();
        var nShiftID=$("#cboShift").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }
        debugger;
        //var nBusinessUnitID = $("#cboBU").val();

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }


        var nCategory=$('#cboCategory').val();

        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();
        var bIsComp = $("#chkIsComp").is(':checked');

        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationID=="" &&
           nEmployeeTypeID==0 && nEmployeeGroupID==0 && sGender=="None" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
           bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 && !bIsJoiningDate
           && !bIsnotEnroll && nCategory<=0 && _sBusinessUnitIds == "" && sPresentAddress=="" && sPermanentAddress=="" && _sBlockIDs=="" && _sGroupIDs=="")
        {
            alert("Please enter your selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationID + '~' +
                     sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                     bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                     sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                     +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+_sBusinessUnitIds+"~"+sPresentAddress+"~"+sPermanentAddress+"~" + _sBlockIDs + '~' + _sGroupIDs
                     + '~' + _sMaritalStatus
                     +'~' +nStartSalaryRange + '~' + nEndSalaryRange + '~' + _sSalarySchemeIDs + '~' + bIsComp + '~';
        window.open(_sBaseAddress+ "/Employee/EmployeeDatabaseXL?sParam="+sParam,"_blank");
    }

    ///*------------- Start Block Picker----------------*/

    //$("#btnBlock").click(function(e){
    //    BlockPicker();
    //});

    //function BlockPicker()
    //{
    //    var oBlockMachineMapping={
    //        ProductionProcessInt:0,
    //        DepartmentID:0,
    //        BlockName:""
    //    }
    //    var obj = {
    //        BaseAddress: _sBaseAddress,
    //        Object: oBlockMachineMapping,
    //        ControllerName: "BlockMachineMapping",
    //        ActionName: "BlockMachineMapping_Search",
    //        IsWinClose: false
    //    };
    //    $.icsDataGets(obj, function (response) {

    //        if (response.status && response.objs.length > 0) {
    //            if (response.objs[0].BMMID > 0) {
    //                var tblColums = [];
    //                var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
    //                var bmultiplereturn=true;

    //                var oPickerParam = {
    //                    winid: 'winBlock',
    //                    winclass:'clsBlock',
    //                    winwidth: 320,
    //                    winheight: 460,
    //                    tableid: 'tblShift',
    //                    tablecolumns: tblColums,
    //                    datalist: response.objs,
    //                    multiplereturn: bmultiplereturn,
    //                    searchingbyfieldName:'BlockName',
    //                    windowTittle: 'Block List'
    //                };
    //                $.icsPicker(oPickerParam);
    //                IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName
    //            }
    //            else { alert(response.objs[0].ErrorMessage); }
    //        }
    //    });
    //}

    //function IntializeBlockPickerbutton(oPickerobj)
    //{
    //    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
    //        var oBlocks=[];
    //        oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
    //        if (oPickerobj.winid == 'winBlock')
    //        {
    //            if(oBlocks!=null && oBlocks.length>0){
    //                $("#"+oPickerobj.winid).icsWindow("close");
    //                $("#" + oPickerobj.winid).remove();

    //                for(var i=0; i<oBlocks.length; i++)
    //                {
    //                    _sBlockNames += oBlocks[i].BlockName+",";
    //                    _sBMMIDs += oBlocks[i].BMMID+",";

    //                }
    //                _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
    //                _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
    //                $("#txtBlock").val(_sBlockNames);
    //            }
    //            else
    //            {
    //                alert("Please select a designation.");
    //            }
    //        }
    //    });
    //}

    //$("#btnResetBlock").click(function(e){
    //    $('#txtBlock').val("");
    //    _sBlockNames="";
    //    _sBMMIDs = "";
    //});

    //$("#txtBlock").keypress(function(e){
    //    if (e.which == 13)
    //    {
    //        BlockPicker();
    //    }
    //});
    ///*------------- End Block Picker----------------*/


    //start employe picker enter event
    $('#txtEmpCodeForSearch').keypress(function (e) {
        var nCode = (e.keyCode ? e.keyCode : e.which);
        if (nCode!=13)return;
        var c = String.fromCharCode(e.which);
        var txtSearchbyCode = document.getElementById('txtEmpCodeForSearch').value;
        //txtSearchbyCode = txtSearchbyCode + c;

        var bFlag=false;
        var sTempCode="";
        var rows = $('#tblEmployeesForPicker').datagrid('getRows');
        for(i=0;i<rows.length;++i){
            sTempCode=rows[i]['Code'].substring(0, txtSearchbyCode.length);
            if(txtSearchbyCode.toUpperCase()==sTempCode.toUpperCase())
            {
                bFlag=true;
                break;
            }
        }
        if(bFlag)
        {
            $('#tblEmployeesForPicker').datagrid('selectRow', i);
        }
        else
        {
            GetEmployeeByNameCode_EmployeePicker(txtSearchbyCode,true);
        }
    });

    $('#txtEmployeeName').keypress(function (e) {
        //debugger;
        var nCode = (e.keyCode ? e.keyCode : e.which);
        if (nCode!=13)return;
        var c = String.fromCharCode(e.which);
        var txtSearchByName = document.getElementById('txtEmployeeName').value;
        //txtSearchByName = txtSearchByName + c;
        if(txtSearchByName.length<3)
        {
            alert('Please enter atleast 3 word.!!');
            return;
        }

        var bFlag=false;
        var sTempName="";
        var rows = $('#tblEmployeesForPicker').datagrid('getRows');
        for(i=0;i<rows.length;++i){
            sTempName=rows[i]['Name'].substring(0, txtSearchByName.length);
            if(txtSearchByName.toUpperCase()==sTempName.toUpperCase())
            {
                bFlag=true;
                break;
            }
        }
        if(bFlag)
        {
            $('#tblEmployeesForPicker').datagrid('selectRow', i);
        }
        else
        {
            GetEmployeeByNameCode_EmployeePicker(txtSearchByName,false);
        }
    });

    function GetEmployeeByNameCode_EmployeePicker(sNameCode,bIsCode)
    {
        var nts = ((new Date()).getTime()) / 1000;
        $.ajax
        ({
            type: "GET",
            dataType: "json",
            url : _sBaseAddress+  "/Employee/GetByEmployeeNameCode",
            data: {sNameCode:sNameCode,bIsCode:bIsCode,nts:nts},
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmployees = jQuery.parseJSON(data);
                if(oEmployees.length>0)
                {
                    for (var j = 0; j < oEmployees.length; j++)
                    {
                        $('#tblEmployeesForPicker').datagrid('appendRow',oEmployees[j]);
                    }
                }
                else
                {
                    alert('Data not found.!!!');
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    //end employee picker enter event

</script>
