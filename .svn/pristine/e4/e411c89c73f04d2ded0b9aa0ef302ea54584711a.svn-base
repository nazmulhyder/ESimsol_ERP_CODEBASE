@{
    ViewBag.Title = "FA Schedule Rule";
}

@model IEnumerable <ESimSol.BusinessObjects.FARegister>

<div ng-app="FARegisterModule">
    <div ng-controller="FARegisterController" style="width:99%;height:96%">
        <div class="ui-grid-top-panel" style="height:60px">
            <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="AdvanceSearch()" ng-hide="btnAdvSearch"> <span class="glyphicon glyphicon-search" aria-hidden="true"> Adv.Search</span></button>
            <button type="button" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="add()"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> New</button>
            <button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="edit()" ng-hide="btnEdit"> <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit</button>
            <button type="button" class="btn btn-sm btn-danger" aria-label=" left align" ng-click="delete()" ng-hide="btnDelete"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Delete</button>
            <button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="view()"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> View</button>
            <button type="button" class="btn btn-sm btn-info" aria-label=" left align" ng-click="ShowLog()"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> Revise History</button>
            @*<button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="FA_Process()"> <span class="glyphicon glyphicon-dashboard" aria-hidden="true"></span> GRN Process</button>*@
            <button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="FAGRNProcess()"> <span class="glyphicon glyphicon-dashboard" aria-hidden="true"></span> GRN Process</button>
            @*<button type="button" class="btn btn-sm btn-info" aria-label=" left align" ng-click="FARegister_Process()"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> FAR Process</button>*@
            <button type="button" class="btn btn-sm btn-info" aria-label=" left align" ng-click="SaveFASchedules()"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> FAR Process</button>
            <button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="viewFAS()" ng-hide="btnViewSchedule"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> View Schedule</button>
            <button type="button" class="btn btn-sm btn-success" aria-label=" left align" ng-click="RequestForApprove()" ng-hide="btnApprove"> <span class="glyphicon glyphicon-thumbs-up" aria-hidden="true"></span> Approve</button>
            <button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="RequestForRevise()" ng-hide="btnReqForRevise"> <span class="glyphicon glyphicon-repeat" aria-hidden="true"></span> Req for Revise</button>
            <button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="Revise()" ng-hide="btnRevise"> <span class="glyphicon glyphicon-repeat" aria-hidden="true"></span> Revise</button>
            <button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="Print()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Preview</button>
        </div>
        <div style="width:100%" ui-grid="gridOptions" ui-grid-selection class="grid"></div>
        @*<div class="custom-pagination">
                <ul uib-pagination boundary-links="true" total-items="totalItems" ng-model="currentPage" items-per-page="itemPerPage" max-size="maxSize" ng-change="pageChanged()" class="pagination-sm" previous-text="&lsaquo;" next-text="&rsaquo;" first-text="&laquo;" last-text="&raquo;"></ul>
            </div>*@
    </div>
    <script type="text/ng-template" id="LogDetail.html">
        <div class="modal-header">
            <h4 class="modal-title" id="modal-title">Fixed Asset Log Detail</h4>
        </div>
        <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body" style="height:400px">
            <div class="col-md-12">
                    <div style="width:inherit; height:inherit" ui-grid="LogGridOptions" ui-grid-selection class="grid"></div>
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-sm btn-info" aria-label="Left Align" ng-click="LogPrint()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span>Log Schedule Print</button>
            @*<button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="LogView()"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> View</button>*@
            <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="LogClose()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
        </div>
    </script>
    <script type="text/ng-template" id="FARegister.html">
        <div class="modal-header">
            <h4 class="modal-title" id="modal-title">FA Register Method</h4>
        </div>
        <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
            <div class="row">
                <div class="row col-md-12" style="padding-top: 50px;">
                    <div class="col-md-2 text-right"><label class="control-label">Product :</label></div>
                    <div class="col-md-10 text-left">
                        <input class="form-control" ng-style="stlProduct" ng-model="FARegister.ProductName" placeholder="Type Name & Press Enter" ng-keydown="SearchKeyDownProduct($event)" style="font-size:12px;" disabled />
                     </div>
                </div>
                <div class="row col-md-12">
                    <div class="col-md-2 text-right"><label class="control-label">Method :</label></div>
                    <div class="col-md-4 text-left">
                        <select id="cboFAMethod" ng-model="FARegister.FAMethodInt" ng-options="obj.id as obj.Value for obj in FAMethods" ng-disabled="disabled" class="form-control">
                            <option value="">--Select Type--</option>
                        </select>
                    </div>
                    <div class="col-md-2 text-right"><label class="control-label" style="font-size:12px">Calculate On:</label></div>
                    <div class="col-md-4 text-left">
                        <select id="cboDEPCalculateOn" ng-model="FARegister.CalculateOnInt" ng-options="obj.id as obj.Value for obj in DEPCalculateOns" ng-disabled="disabled" class="form-control">
                            <option value="">--Select Type--</option>
                        </select>
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="col-md-2 text-right"><label class="control-label">Useful Lifetime:</label></div>
                    <div class="col-md-4 text-left">
                        <div class="form-inline">
                            <input type="text" class="form-control number" ng-model="FARegister.UseFullLifeYear" ng-keyup="SetYearWisePercentage(1)" placeholder="YY" style="width:20%" ng-disabled="disabled">Y(s)
                            <input type="text" class="form-control number" ng-model="FARegister.UseFullLifeMonth" ng-keyup="SetYearWisePercentage(1)" placeholder="MM" style="width:21%" ng-disabled="disabled">M(s)
                        </div>
                    </div>
                    <div class="col-md-2 text-right"><label class="control-label">Percentage:</label></div>

                    <div class="col-md-4 text-left">
                        <input ng-model="FARegister.Percentage" ng-disabled="disabled" class="form-control number" ng-keyup="SetYearWisePercentage(2)" required />
                    </div>
                </div>
                <div class="row col-md-12">
                  
                    <div class="col-md-2 text-right"><label class="control-label">Salvage Value:</label></div>
                    <div class="col-md-4 text-left">
                        <input ng-model="FARegister.SavageValue" ng-disabled="disabled" class="form-control number" required />
                    </div>
                    <div class="col-md-2 text-right"><label class="control-label">Currency:</label></div> @*Value:*@

                    <div class="col-md-4 text-left">
                        <select id="cboDEPCalculateOn" ng-model="FARegister.CurrencyID" ng-options="obj.CurrencyID as obj.CurrencyName for obj in Currencys" ng-disabled="disabled" class="form-control">
                            <option value="">--Select One--</option>
                        </select>
                    </div>
                </div>
                <div class="row col-md-12" style="padding-bottom:50px; height:10%">
                    <div class="col-md-2 text-right"><label class="control-label">Calulate From?</label></div>
                    <div class="col-md-4 text-left">
                        <input type="checkbox" ng-model="FARegister.IsFirst" ng-click="ComboChange('IsFirst',true)"> Is First {{(FARegister.DEPCalculateOnInt==0?'Month':'Year')}}
                        <input type="checkbox" ng-model="!FARegister.IsFirst" ng-click="ComboChange('IsFirst',false)">Is Last {{(FARegister.DEPCalculateOnInt==0?'Month':'Year')}}
                    </div>
                    <div class="col-md-2 text-right"><label class="control-label">DEP Increase?</label></div>
                    <div class="col-md-4 text-left">
                        <input type="checkbox" ng-model="FARegister.IsValued" ng-click="ComboChange('IsValued',true)">Yes
                        <input type="checkbox" ng-model="!FARegister.IsValued" ng-click="ComboChange('IsValued',false)">No
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn-primary btn-sm" aria-label="Left Align" ng-click="FARProcess()" ng-hide="hide"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Process</button>
            <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
        </div>
    </script>
    
    <script type="text/ng-template" id="FAGRNProcess.html">
        <div class="modal-header">
            <h4 class="modal-title" id="modal-title">Fixed Asset GRN Process</h4>
        </div>
        <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
            <div class="ui-grid-top-panel">
                <div>
                    <div class="position-left">Start:</div>
                    <div class="position-left" style="width:15%;margin-left:-50px;padding-right:10px;">
                        <div class="input-group date date-container">
                            <input type="text" class="form-control" placeholder="Start Date" ng-model="FAGRNStartDateInString" style="width:100%; height:24px">
                            <span style="height:22px" class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                        </div>
                    </div>
                    <div class="position-left">End:</div>
                    <div class="position-left" style="width:15%;margin-left:-50px;padding-right:10px;">
                        <div class="input-group date date-container">
                            <input type="text" class="form-control" placeholder="End Date" ng-model="FAGRNEndDateInString" style="width:100%; height:24px">
                            <span style="height:22px" class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                        </div>
                    </div>
                    @*<div class="position-left">Business Unit:</div>*@
                    <div class="position-left" style="width: 15%;margin-left:-20px;padding-right:10px;">
                        <select id="cboBUID" ng-model="BUIDInt" ng-options="obj.BusinessUnitID as obj.Name for obj in BUIDs" class="form-control">
                            <option value="">--Select BU--</option>
                        </select>
                    </div>
                    <div class="position-left" style="width:18%;margin-left:-5px;padding-right:5px;">
                        <select id="cboProductCategory" class="easyui-combotree" style="width:90%;"></select>
                        @*<input type="button" ng-click="CleanPC()" id="btnCleanPC" value="C" />*@
                    </div>
                    <div class="position-left" style="width:20%;margin-left:-5px;padding-right:5px;">
                        <input ng-model="GRNProcess.ProductName" style="width:100%"  class="form-control text-left" ng-keydown="SearchByProductCode($event)" placeholder="Search By Product" />
                    </div>
                    <div class="position-left">
                        <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="FAGRNSearch()"> <span class="glyphicon glyphicon-search">Search</span></button>
                    </div>
                </div>
            </div>
            <div style="width:100%" ui-grid="gridOptionsForFAGRN" ui-grid-selection ui-grid-resize-columns class="gridOfFAGRN"></div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn-primary btn-sm" aria-label="Left Align" ng-click="FAGRNProcessOk()" ng-hide="hide"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Process</button>
            <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="FAGRNProcessCancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
        </div>
    </script>
</div>

<style type="text/css">

     .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .grid {
        height: 500px;
        width: 95%;
    }
    .gridOfFAGRN{
        height: 350px;
        width: 95%;
    }

    .custom-pagination {
        margin-top: -15px;
        margin-bottom: -15px;
    }

    .spacing {
        padding-bottom: 5px;
    }
    .position-left{
        float : left;
        width: 10%;
    }

</style>

<script type="text/javascript">

    var pager =[];
    var _nBUID=0;
    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oFARegisters =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    _nBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    var oFAMethods =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FAMethods));
    var oCurrencys =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
    var oDEPCalculateOns =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DEPCalculateOns));
    var _nBUIDs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));

    debugger;
    var  FARegisterModule = angular.module('FARegisterModule', ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.resizeColumns','ui.grid.cellNav','ms.service','ui.grid.edit']);
    FARegisterModule.controller('FARegisterController', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession,advanceSearch) {
        debugger;
        oFARegisters= (userSession.getData('FARegisters').length>0)? userSession.getData('FARegisters'):oFARegisters;
        $scope.gridOptions ={
            enableSorting: true,
            enableFullRowSelection: true,
            //enableRowHeaderSelection: false,
            enableSelectAll: false,
            multiSelect:false,
            enableHorizontalScrollbar: uiGridConstants.scrollbars.always,
            //enableVerticalScrollbar : false,
            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false,pinnedLeft:true},
                { field: 'BUName', name: 'BUName', width: '15%' },
                { field: 'ProductCode', name: 'Code', width: '10%' },
                { field: 'ProductCategoryName', name: 'CategoryName', width: '15%' },
                { field: 'ProductName', name: 'ProductName', width: '15%' },
                { field: 'FACodeFull', name: 'FACodeFull', width: '10%' },
                { field: 'FAMethodSt', name: 'Method', width: '15%' },
                { field: 'FAStatusSt', name: 'Status', width: '15%' },
                { field: 'PurchaseDateInString', name: 'PurchaseDateInString',cellClass: 'text-center', width: '15%' },
                { field: 'ScheduleStartDateInString', name: 'Start Date',cellClass: 'text-center',  width: '12%' },
                { field: 'ScheduleEndDateInString', name: 'End Date',cellClass: 'text-center', width: '12%' },
                { field: 'ActualCostPrice', name: 'CostPrice', width: '15%' ,cellClass: 'text-right',cellFilter: 'number: 2' },
                { field: 'ActualDepRate', name: 'DepRate',cellClass: 'text-right', width: '15%',cellFilter: 'number: 2' },
                { field: 'UseFullLife', name: 'Default Use Full Life',cellClass: 'text-right', width: '15%' },
                { field: 'DEPCalculateOnSt', name: 'Dep Apply On', width: '15%' },
                { field: 'CurrencyName', name: 'Currency', width: '10%' },
            ],
            data:oFARegisters,
            onRegisterApi:function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.grid.modifyRows(oFARegisters);
                $scope.gridApi.selection.selectRow(oFARegisters[userSession.getRowIndex()]);
                debugger;
                $scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                    $scope.RowSelect(row.entity );
                });
               
                userSession.clear();
            }

        };
        $scope.RowSelect =  function (entity){
            debugger;
            if(entity.FAStatus==1){
                $scope.btnEdit=false;
                $scope.btnDelete =false;
                $scope.btnApprove=false;
                $scope.btnReqForRevise =true;
                $scope.btnRevise =true;
                $scope.btnViewSchedule = true;
            }
            else if(entity.FAStatus==2){
                $scope.btnEdit=true;
                $scope.btnDelete =true;
                $scope.btnApprove=true;
                $scope.btnReqForRevise =false;
                $scope.btnRevise =true;
                $scope.btnViewSchedule = false;
            }
            else if(entity.FAStatus==3){
                $scope.btnEdit=false;
                $scope.btnDelete =true;
                $scope.btnApprove=true;
                $scope.btnReqForRevise =true;
                $scope.btnRevise =false;
                $scope.btnViewSchedule = true;
            }
        }
        $scope.add = function () {
            sessionStorage.setItem("Operation", "New");
            sessionStorage.removeItem("SelectedRowIndex");
            sessionStorage.setItem("SelectedRowIndex",-1);
            sessionStorage.setItem("FARegisterHeader", "Add FARegister");
            sessionStorage.setItem("FARegisters", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("BackLink", window.location.href);
            sessionStorage.setItem("BaseAddress",_sBaseAddress);
            var tsv=((new Date()).getTime())/1000;
            window.location.href = _sBaseAddress+ "/FARegister/ViewFARegister?id=0&buid="+_nBUID+"&ts="+tsv;
        };
        $scope.edit = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }

            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FARegisterID==data[0].FARegisterID){

                    sessionStorage.setItem("Operation", "Edit");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("FARegisterHeader", "Edit FARegister");
                    sessionStorage.setItem("FARegisters", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("BackLink", window.location.href);
                    sessionStorage.setItem("BaseAddress",_sBaseAddress);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/FARegister/ViewFARegister?id="+value.FARegisterID+"&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };
        $scope.delete = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }

            if (!confirm("Confirm to Delete?")) return ;
            //$http.post(_sBaseAddress+'/FARegister/FA_Process',JSON.stringify(oFARegister)).then(
            $http.post(_sBaseAddress+'/FARegister/Delete',JSON.stringify(data[0])).then(
                            function (response) { debugger;
                                if(jQuery.parseJSON(response.data)=='Data delete successfully')
                                {
                                    angular.forEach($scope.gridOptions.data,function(value,index){
                                        if(value.FARegisterID==data[0].FARegisterID){
                                            $scope.gridOptions.data.splice(index,1);
                                        }
                                    },$scope.gridOptions.data);
                                    alert("Delete Successfully.");
                                }
                                else{
                                    alert(response.data);
                                }
                            },
                            function (response) {alert(response.statusText);}
                        );

        };
        $scope.view = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FARegisterID==data[0].FARegisterID){
                    sessionStorage.setItem("Operation", "View");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("FARegisterHeader", "View FARegister");
                    sessionStorage.setItem("FARegisters", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("BackLink", window.location.href);
                    sessionStorage.setItem("BaseAddress",_sBaseAddress);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/FARegister/ViewFARegister?id="+value.FARegisterID+"&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };
        $scope.SaveFASchedules = function () {
            debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            var oFARegister= data[0];
            $http.post(_sBaseAddress+ "/FARegister/SaveFASchedules",JSON.stringify(oFARegister)).then(
                function (response) {
                    debugger;
                    var result = JSON.parse(response.data);
                    if(result[0].ErrorMessage=="")
                    {
                        msModal.Message({headerTitle : '', bodyText:'FAR Process Successful.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    }
                    else
                    {
                        alert(result[0].ErrorMessage);
                    }
                },
                function (response) { alert(response.statusText);}
            );
        };
        $scope.viewFAS = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FARegisterID==data[0].FARegisterID){
                    sessionStorage.setItem("Operation", "View");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("FARegisterHeader", "View FARegister");
                    sessionStorage.setItem("FARegisters", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/FARegister/ViewFASchedules?FARID="+value.FARegisterID+"&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };
        $scope.ReviseHistory = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FARegisterID==data[0].FARegisterID){
                    sessionStorage.setItem("Operation", "View");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("FARegisterHeader", "View FARegister");
                    sessionStorage.setItem("FARegisters", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/FARegister/ViewReviseHistorys?FARID="+value.FARegisterID+"&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };


        $scope.Print = function()
        {
            var data=$scope.gridApi.selection.getSelectedRows();
            var oFARegister= data[0];//get selected index
            if(oFARegister==null || oFARegister.FARegisterID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress+'/FARegister/Print?id='+ oFARegister.FARegisterID);
        }
        $scope.AdvanceSearch=function()
        {
            debugger;
            var oColumns = [];
            var  oColumn = { field: 'ProductName', name: 'ProductName',width: '45%', enableSorting: false  };oColumns.push(oColumn);
            oColumn = { field: 'ProductCategoryName', name: 'ProductCategoryName',width: '45%', enableSorting: false  };oColumns.push(oColumn);

            var paramObj_Model={
                obj:{ProductName: '@@ProductID', BUID:_nBUID},
                objName:'ProductName',
                url:_sBaseAddress+'/FARegister/GetsProductByType',
                title:'Product List',
                multiSelect:true,
                columns:oColumns
            }
            //IssueStores:$scope.IssueStores
            var oElementList = [{ DisplayName: "SL No",  BOField: "SLNo",      InputType: 'text' },
                                { DisplayName: "Code No",    BOField: "CodeNo",       InputType: 'text' },
                                //{ DisplayName: "Issue Store",    BOField: "WorkingUnitID",       InputType: 'select', OptionList:oStatusList},
                                { DisplayName: "Product",  BOField: "ProductID",   InputType: 'picker', PickerObject:paramObj_Model },
                                //{ DisplayName: ["Yet To Forward (HO)","Yet To Forward (Buyer)"],  BOField: ["YetToHO","YetToBuyer"],   InputType: 'bool'},
                                { DisplayName: "Purchase Date",BOField: "PurchaseDate",    InputType: 'date' }
            ];
            var modalObj={
                size:'md',
                title:"Advance Search",
                url:_sBaseAddress+'/Home/AdvanceSearch',
                CompareOperators:oCompareOperators,
                HtmlElements:oElementList,
                isAdvanceSearch:true, // if TRUE: 'urlAdvanceSearch' should be define
                urlAdvanceSearch:_sBaseAddress + '/FARegister/AdvSearch'
            }

            var modalInstance=advanceSearch.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                console.log(result);
                $scope.gridOptions.data=result;
            }, function ()
            {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };
        $scope.FA_Process = function ()
        {
            if (!confirm("Confirm to GRN Process ?")) return ;

            var oFARegister={BUID:_nBUID} ;
            $http.post(_sBaseAddress+'/FARegister/FA_Process',JSON.stringify(oFARegister)).then(
                function (response) { debugger;
                    var result=(response.data);

                    if(result.length<=0){ alert("No Data Found"); return; }

                    if(result[0].ErrorMessage=="")
                    {
                        msModal.Message({headerTitle : '', bodyText:'Process Successful.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                        $scope.gridOptions.data=result;
                    }
                    else
                    {
                        alert(result[0].ErrorMessage);
                    }
                },
                function (response) { alert(response.statusText);}
            );
        };
        $scope.FAGRNProcess = function () {
            debugger;
            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'lg',
                templateUrl: 'FAGRNProcess.html',
                controller: 'FAGRNProcessCtrl',
                controllerAs: 'FARegisterController',
                resolve: {
                    obj: function () {
                        return { };
                    }
                }
            });
            modalInstance.result.then(
                function (result) {
                    debugger;
                    if(result != undefined && result.length > 0){
                        $scope.gridOptions.data = $scope.gridOptions.data.concat(result);
                    }
                },
                function () {
                    $log.info('Modal dismissed at: ' + new Date());
                }
            );
        };
        $scope.FARegister_Process = function () {
            debugger;
            var oFARegister = $scope.gridApi.selection.getSelectedRows()[0];
            if(oFARegister==null || oFARegister.FARegisterID<=0)
            {
                alert("Please Select an item from list");
                return;
            }

            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'lg',
                templateUrl: 'FARegister.html',
                controller: 'FARegisterCtrl',
                controllerAs: 'FARegisterController',
                resolve: {
                    obj: function () {
                        return { value:oFARegister, Operation: 'Print'  };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                debugger;
                if(result.FDOID>0)
                {
                    debugger;
                    var index=sessionStorage.getItem('SelectedRowIndex');
                    $scope.IsMeter=result.IsMeter;
                    $scope.IsYard=result.IsYard;
                    console.log(result);
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };
        $scope.PrintPreview = function ()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            var oFARegister = data[0];
            if(oFARegister==null || oFARegister.FARegisterID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress + '/FARegister/PrintFARegisterPreview?id='+oFARegister.FARegisterID);
        };
        $scope.RequestForRevise = function ()
        {
            debugger;
            var oFARegister = $scope.gridApi.selection.getSelectedRows()[0];
            if(oFARegister.FAStatus != 2 )
            {
                alert("Please Select Any Approved Row ");
                return
            }
            if (!confirm("Confirm to Request?")) return ;
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oFARegister);
            sessionStorage.setItem("FARegisters", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);

            if(oFARegister==null || oFARegister.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }

            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.FARegisterID== oFARegister.FARegisterID)
                {
                    debugger;
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(sessionStorage.getItem('BaseAddress')+"/FARegister/RequestForRevise",$.param(oFARegister), config).then(
                            function (response)
                            {
                                //var result=jQuery.parseJSON(response.data);
                                var oFARegister= jQuery.parseJSON(response.data);
                                if (oFARegister.ErrorMessage=="" || oFARegister.ErrorMessage == null)
                                {
                                    alert("Revised Successfully.");
                                    $scope.gridOptions.data[index]=oFARegister;
                                    $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                    $scope.gridApi.selection.selectRow(oFARegister);
                                }else
                                {
                                    alert(oFARegister.ErrorMessage);
                                }

                            },
                                function (response) { alert(jQuery.parseJSON(response.data).Message);}
                        );

                }
            }, $scope.gridOptions.data);



        //    $http.post(_sBaseAddress+'/FARegister/RequestForRevise',JSON.stringify(data)).then(
        //        function (response) {
        //            var result=jQuery.parseJSON(response.data);
        //            if(result.FARegisterID>0)
        //            {
                        
        //                $scope.FARegister=result;
        //                debugger;
        //                var oList = jQuery.parseJSON(sessionStorage.getItem("FARegisters"));
        //                oList[SelectedRowIndex] = result;
        //                //$scope.gridOptions.data[SelectedRowIndex]=result;
        //                $scope.gridOptions.data= oList;
        //                $scope.gridApi.selection.selectRow($scope.gridOptions.data[SelectedRowIndex]);
                       
        //            }
        //            else
        //            {
        //                alert(result.ErrorMessage);
        //            }

        //        },
        //        function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        //);
        };
        $scope.RequestForApprove = function ()
        {
            debugger;
            var data = $scope.gridApi.selection.getSelectedRows()[0];
            if(data.FAStatus != 1 )
            {
                alert("Please Select Any Initialized Row");
                return
            }
            if (!confirm("Confirm to Approve?")) return ;
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(data);
            sessionStorage.setItem("FARegisters", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            $http.post(_sBaseAddress+'/FARegister/RequestForApprove',JSON.stringify(data)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    if(result.FARegisterID>0)
                    {
                        debugger;
                        $scope.FARegister=result;
                        userSession.setData('FARegisters',$scope.FARegister);
                        msModal.Message({headerTitle : '', bodyText:'Approved Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                        $scope.gridOptions.data[SelectedRowIndex]=result;
                        $scope.gridOptions.grid.modifyRows($scope.gridOptions.data);
                        $scope.gridOptions.selection.selectRow(result);
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }

                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        );
        };
        $scope.Revise = function ()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows()[0];

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            if(data.FAStatus != 3 )
            {
                alert("Please Select Any Request For Revise Row");
                return
            }
            if (!confirm("Confirm to Revise?")) return ;
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.FARegisterID==data.FARegisterID){

                    sessionStorage.setItem("Operation", "Revise");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("FARegisterHeader", "Revise FARegister");
                    sessionStorage.setItem("FARegisters", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("BackLink", window.location.href);
                    sessionStorage.setItem("BaseAddress",_sBaseAddress);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/FARegister/ViewFARegister?id="+value.FARegisterID+"&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };



        $scope.ShowLog = function ()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows()[0];
            $scope.Modal(data, 'operation');
        };
        $scope.Modal = function (oFR, operation) {
            debugger;

            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'lg',
                templateUrl: 'LogDetail.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'FARController',
                resolve: {
                    obj: function () {
                        return { value:oFR, Operation: 'Log'  };
                        ///$scope.FARegister.ActualDepRate = $result.ActualDepRate
                    }
                }
            });


            modalInstance.result.then(function (result) {
                if(result>0)
                {
                    $scope.FARegister.ActualDepRate=result;
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        }
        $scope.SearchKeyDownLocation = function (e) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtLocationName = $.trim($scope.FARegister.LocationName);
                if(txtLocationName=="" || txtLocationName==null)
                {
                    alert("Type Location Name and Press Enter");
                    return;
                }
                $scope.PickLocation(txtLocationName);
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.FARegister.LocationName='';
                $scope.FARegister.LocationID=0;
            }
        };



    });

    FARegisterModule.controller('FARegisterCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) {
        $scope.Operation=obj.Operation;
        debugger;
        $scope.FARegister = obj.value;
        $scope.Currencys=oCurrencys;
        $scope.DEPCalculateOns=oDEPCalculateOns;
        $scope.FAMethods=oFAMethods;

        $scope.ComboChange= function(nField,Value)
        {
            $scope.FARegister[nField]=Value;
        }

        $scope.SetYearWisePercentage=function(nid)
        {
            if(nid==1)
            {
                nTotalYear= parseFloat($scope.FARegister.UseFullLifeYear)+parseFloat($scope.FARegister.UseFullLifeMonth)/12;
                $scope.FARegister.Percentage=100/nTotalYear;
            }else
            {
                var nTotalYear=100/parseFloat($scope.FARegister.Percentage);
                var nDecimalPoint=(nTotalYear+'').split('.')[1];
                $scope.FARegister.UseFullLifeYear=(nTotalYear+'').split('.')[0];

                if(nDecimalPoint!=undefined)
                    $scope.FARegister.UseFullLifeMonth= (nDecimalPoint.substring(0, 1)*12)/10;
                else  $scope.FARegister.UseFullLifeMonth=0;
            }
        }
        $scope.SetYearWisePercentage(1);

        $scope.FARProcess = function ()
        {
            if($scope.FARegister.Amount_Cost<=$scope.FARegister.SavageValue)
            {
                alert("Salvage Should Be Less Than Cost Amount! ");return;
            }
            $http.post(_sBaseAddress+'/FARegister/FARProcess',JSON.stringify($scope.FARegister)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    if(result.FARegisterID>0)
                    {
                        debugger;
                        msModal.Message({headerTitle : '', bodyText:'Process Successful.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                        $scope.FARegister=result; $uibModalInstance.close($scope.FARegister);
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert((response.statusText));}
            );
        };


        $scope.cancel= function () {
            $uibModalInstance.close($scope.FARegister);
        };

    });

    FARegisterModule.controller('ModalInstanceCtrl', function ($scope, $http, $uibModalInstance,uiGridConstants, msModal, obj) {
        debugger;
        $scope.LogList = [];
        $scope.operation=obj.operation;
        $scope.data = obj.value;

        if($scope.data==null || $scope.data.length<=0){
            msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
            return false;
        }
        $scope.LogGridOptions ={
            enableSorting: true,
            enableFullRowSelection: true,
            //enableRowHeaderSelection: false,
            enableSelectAll: false,
            multiSelect:false,
            enableHorizontalScrollbar: uiGridConstants.scrollbars.ALWAYS,
            enableVerticalScrollbar : true,
            columnDefs: [
                { field: 'BUName', name: 'BUName', width: '15%' },
                { field: 'ProductCode', name: 'Code', width: '10%' },
                { field: 'ProductCategoryName', name: 'Category', width: '15%' },
                { field: 'ProductName', name: 'ProductName', width: '15%' },
                { field: 'FACodeFull', name: 'FACodeFull', width: '10%' },
                { field: 'FAMethodSt', name: 'Method', width: '15%' },
                { field: 'FAStatusSt', name: 'Status', width: '15%' },
                { field: 'PurchaseDateInString', name: 'PurchaseDate', width: '15%' },
                { field: 'Session', name: 'Session', width: '15%' },
                { field: 'DepMonth', name: 'DepMonth', width: '15%' },
                { field: 'ActualCostPrice', name: 'CostPrice', width: '15%' },
                { field: 'ActualDepRate', name: 'DepRate', width: '15%' },
                //{ field: 'Addition', name: 'Addition', width: '15%' },
                { field: 'UseFullLife', name: 'Default Use Full Life', width: '15%' },
                { field: 'DepApplyOn', name: 'DepApplyOn', width: '15%' },
                { field: 'DepEffectStart', name: 'DepEffectStart', width: '15%' },
                { field: 'CurrencyName', name: 'Currency', width: '10%' },
            ],
            data:[],
            onRegisterApi:function(gridApi)
            {
                $scope.gridApi = gridApi;
                debugger;
            }
        };

        $scope.GetGridData=function()
        {
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FARegister/GetsLog', $.param($scope.data), config).then(
                            function (response)
                            {
                                debugger;
                                $scope.LogList = response.data;
                                $scope.LogGridOptions.data = $scope.LogList;
                            });
        }
        $scope.GetGridData();
        $scope.LogView = function()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oFARegister= data[0];//get selected index
            if(oFARegister==null || oFARegister.FARegisterID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress+'/FARegister/ViewFARegisterLog?id='+ oFARegister.FARegisterID);
        }
        $scope.LogPrint = function()
        {
            var data=$scope.gridApi.selection.getSelectedRows();
            var oFARegister= data[0];//get selected index
            if(oFARegister==null || oFARegister.FARegisterID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress+'/FARegister/PrintLogSchedule?id='+ oFARegister.FARegisterLogID);
        }
        $scope.LogClose = function()
        {
            $uibModalInstance.close($scope.obj);
        }

    });

    FARegisterModule.controller('FAGRNProcessCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) {
        debugger;
        $(document).on('mousemove', '.modal-body', function () {
            $('.date-container').datepicker({
                format: "dd M yyyy",
                calendarWeeks: true,
                autoclose: true,
                todayHighlight: true
            });
        });
        $scope.BUIDs = _nBUIDs;
        $scope.GRNP_ProductID = 0;
        $scope.gridOptionsForFAGRN = {
            enableSorting: false,
            enableFullRowSelection: true,
            enableSelectAll: true,
            multiSelect: true,

            //enableHorizontalScrollbar: uiGridConstants.scrollbars.ALWAYS,
            //enableVerticalScrollbar : true,
            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false,pinnedLeft:true},
                { field: 'ProductCode', name: 'Code', width: '10%' },
                { field: 'ProductName', name: 'ProductName', width: '16%'},
                { field: 'GRNNo', name: 'GRNNo', width: '10%' },
                //{ field: 'ReceivedDateTimeInStr', name: 'Received Date', width: '15%' },
                { field: 'ReceivedQty', name: 'Qty', cellClass: 'text-right',width: '15%' },
                { field: 'UnitPrice', name: 'UnitPrice',  cellClass: 'text-right',cellFilter: 'number: 2',width: '15%' },
                { field: 'Amount', name: 'Amount', cellClass: 'text-right',cellFilter: 'number: 2', width: '15%' },
                //{ field: 'CSymbol', name: 'Currency', width: '15%' },
                { field: 'MUSymbol', name: 'MUSymbol', width: '10%' },
                //{ field: 'SupplierName', name: 'SupplierName', width: '15%' },
            ],
            data:[],
            onRegisterApi:function(gridApi)
            {
                $scope.gridApi = gridApi;
                debugger;
            }
        };

        $scope.CleanPC =function(){
            debugger;
            $('#cboProductCategory').combotree('loadData', []);
            $scope.RefreshProductCategory(0);
        };
        $scope.RefreshProductCategory=function(nPCID)
        {
            $('#cboProductCategory').combotree('loadData', []);
            var oProductCategory ={  ProductCategoryID: 0 };
            $http.post(_sBaseAddress+'/ProductCategory/GetsProductCategoryForCombo',JSON.stringify(oProductCategory)).then(
               function (response) {
                   debugger;
                   var oProductCategorys = jQuery.parseJSON(response.data);
                   if(oProductCategorys!=null)
                   {
                       //$('#cboProductCategory').combotree('loadData',[]);
                       $('#cboProductCategory').combotree('loadData', oProductCategorys);
                       $('#cboProductCategory').combotree('setValue', nPCID);
                   }
               },
               function (response) {
                   alert((response.statusText));
               }
           );


        }
        $scope.RefreshProductCategory(0);

        $scope.PickProduct= function (txtProductName)
        {
            debugger;
            var oProduct = {
                Name:(txtProductName==undefined?'':txtProductName)
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FARegister/GetsProductByType',$.param(oProduct), config).then(
                        function (response)
                        {
                            var oColumns = [];debugger;
                            var oColumn = { field: 'ProductCode', name: 'Code',width: '25%'  };oColumns.push(oColumn);
                                oColumn = { field: 'ProductName', name: 'Product Name',width: '72%'  };oColumns.push(oColumn);
                            var modalObj={
                                size:'md',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:response.data,
                                multiSelect:false,
                                pickertitle:'Product List',
                                searchingbyfieldName:'ProductName',
                                columns:oColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                debugger;
                                if(result.ProductID>0)
                                {
                                    $scope.GRNProcess.ProductName=result.ProductCode+'['+result.ProductName+']';
                                    $scope.GRNP_ProductID =result.ProductID;
                                    //$scope.GetFACode();
                                }
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );
        };
        $scope.SearchByProductCode = function (e) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtProductName = $.trim($scope.GRNProcess.ProductName);
                if(txtProductName=="" || txtProductName==null)
                {
                    alert("Type Product Name and Press Enter");
                    return;
                }
                $scope.PickProduct(txtProductName);
            }else if (code == 8) //backspace=8
            {
                //debugger;

                $scope.GRNProcess.ProductName='';
                $scope.GRNP_ProductID=0;
            }
        };


        $scope.FAGRNSearch= function () {
            debugger;
            if($scope.FAGRNStartDateInString == "" || $scope.FAGRNStartDateInString == undefined){
                alert("Select Start Date");
                return false;
            }
            if($scope.FAGRNEndDateInString == "" || $scope.FAGRNStartDateInString == undefined){
                alert("Select End Date");
                return false;
            }
            if($scope.BUIDInt < 0 || $scope.BUIDInt == null){
                alert("Select BusinessUnit");
                return false;
            }
            $scope.gridOptionsForFAGRN.data = [];
            $http.post(_sBaseAddress+'/FARegister/GetGRNDetails',JSON.stringify({StartDate: $scope.FAGRNStartDateInString, EndDate: $scope.FAGRNEndDateInString, BUID:$scope.BUIDInt, ProductID:$scope.GRNP_ProductID})).then(
                function (response) {
                    debugger;
                    var result = jQuery.parseJSON(response.data);
                    if(result.length == 0){
                        alert("Data Not Found");
                    }
                    else if(result[0].ErrorMessage == "" && result.length > 0) {
                        debugger;
                        $scope.gridOptionsForFAGRN.data = result;
                    }
                    else {
                        alert(result[0].ErrorMessage);
                    }
                },
                function (response) {
                    alert((response.statusText));
                }
            );
        };
        $scope.FAGRNProcessOk = function ()
        {
            debugger;
            var oGRNDetails = $scope.gridApi.selection.getSelectedRows();
            if(oGRNDetails.length <= 0){
                alert("Select a item first");
                return false;
            }
            $http.post(_sBaseAddress+'/FARegister/FAGRNProcess',JSON.stringify(oGRNDetails)).then(
                function (response) {
                    var result = jQuery.parseJSON(response.data);
                    if(result[0].ErrorMessage == "") {
                        debugger;
                        msModal.Message({headerTitle : '', bodyText:'Process Successful.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                        $uibModalInstance.close(result);
                    }
                    else {
                        alert(result[0].ErrorMessage);
                    }
                },
                function (response) { 
                    alert((response.statusText));
                }
            );
        };
        $scope.FAGRNProcessCancel = function () {
            $uibModalInstance.close();
        };

    });

</script>