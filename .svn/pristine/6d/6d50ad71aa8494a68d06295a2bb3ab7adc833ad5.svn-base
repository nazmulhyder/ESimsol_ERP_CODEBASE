@model IEnumerable<ESimSol.BusinessObjects.BenefitOnAttendance>
@{
    ViewBag.Title = "Benifets On Attendance Report";
}
<div style="margin-left:0px;width:100%; height:500px;" class="menuMainCollectionTable">
<table style="width:100%;height:100%">
    <tr style="width:100%;height:100%">
        <td style="width:35%;height:100%">
            <fieldset style="height:100%">
                <legend>Searching Criteria</legend>
                 Date  :
                <input id="dtDateFrom" type="text" style="width: 120px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                <span id="sEDate">
                    &nbsp; To &nbsp;
                    <input id="dtDateTo" type="text" style="width: 120px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                </span>
               <div style="height:1%"></div>
                @*<select id="cboBOA" style="width:95%"></select>*@
                <input id="txtBOA" type="text" style="width:72%;" placeholder="Benefit on attendance" />
                <input id="btnBOA" type="button" value="P" />
                <input id="btnClearBOA" type="button" value="C" />
                <div style="height:1%"></div>

                <input id="txtEmployee_Collection" type="text" style="width:72%;" placeholder="Type code & enter" />
                <input id="btnEmployee" type="button" value="P" />
                <input id="btnClearEmployee" type="button" value="C" />
                <div style="height:1%"></div>

                <input id="txtBusinessUnit_Collection" type="text" style="width:72%;" placeholder="Pick Business Unit" />
                <input id="btnBusinessUnitPicker_Collection" type="button" value="P" />
                <input id="btnResetBusinessUnitPicker_Collection" type="button" value="C" />
                <div style="height:1%"></div>

                <input id="txtLocation_Colection" style="width:72%;" placeholder="Pick Location" type="text" />
                <input id="btnLocationPicker_Colection" type="button" value="P" />
                <input id="btnResetLocationPicker_Colection" type="button" value="C" />
                <div style="height:1%"></div>

                <input id="txtDepartment_Search" type="text" style="width:72%;" placeholder="Department" />
                <input id="btnDepartmentPicker_Search" type="button" value="P" />
                <input id="btnResetDepartmentPicker_Search" type="button" value="C" />

                <div style="height:1%"></div>
                <select id="cboStaffWorker" style="width:90%"></select>
                
                <div style="height:1%"></div>
                S. Range :
                <input id="txtStartSalaryRange" type="text" style="width:30%" class="number" /> To
                <input id="txtEndeSalaryRange" type="text" style="width:30%" class="number" />

                <div style="height:1%"></div>

                <div style="width:95%; text-align:right;">
                    <div style="width:75%; float:left;">
                        <a id="btnReset" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Reset</a>
                        <a id="btnSrc" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="Search()">Search</a>
                        <select id="cboPrintType" style="width:60%;"></select>
                    </div>
                    <div style="width:25%;float:left; text-align:left;">
                        <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true"></a>
                        <a id="btnPrint_XL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true"></a>
                    </div>
                </div>
            </fieldset>
        </td>
        <td style="width:.1%;height:100%">
        </td>
        <td style="width:79.9%; height:100%">
            <fieldset style="height:100%">
                <legend>Benefits On Attendance</legend>
                <table id="tblBenefitOnAttendances" class="easyui-datagrid" style="width:100%; height:100%" fitcolumns="false" rownumbers="true" pagination="fasle" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="onLoadSuccess: onLoadSuccess">
                    <thead>
                        <tr>
                            <th field="EmployeeCode" width="100" align="left">Code</th>
                            <th field="EmployeeName" width="150" align="left">Name</th>
                            <th field="BOAName" width="250" align="left">BOA</th>
                            <th field="TotalDay" width="90" align="right">Total Day</th>
                        </tr>
                    </thead>
                </table>
            </fieldset>
</td>
    </tr>
</table>

<div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="width: 100%; font-family: Tahoma;">
        <div style="width: 47%; float: left;">
            <table class="tbl-AdvSearch">
                <tr>
                    <td class="td-AdvSearch-Level">
                        Employee Name :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Code :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Present Address :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Permanent Address :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Authentication No :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                        <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Attendance Scheme :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                        <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                        <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        BU :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <select id="cboBU" class="selection-search cboReset"></select>
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Location :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                        <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                        <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Dept./Section :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                        <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                        <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Designation :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                        <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                        <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                    </td>
                </tr>
                @*<tr>
                    <td class="td-AdvSearch-Level">
                        Block :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtBlock" class="txtfield-picker txtReset" type="text" disabled />
                        <input id="btnBlock" class="pick-btn" type="button" value="P" />
                        <input id="btnResetBlock" class="pick-btn" type="button" value="R" />
                    </td>
                </tr>*@
                <tr>
                    <td class="td-AdvSearch-Level">
                        Employee Type :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <select id="cboEmployeeType" style="width:130px; float:left;" class="selection-search cboReset"></select>
                        &nbsp; Group:
                        <input id="txtEmployeeGroupAdv" style="width:90px;" type="text" />
                        <input id="btnEmployeeGroupPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                        <input id="btnEmployeeGroupResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Category:
                    </td>
                    <td class="td-AdvSearch-Level">
                        <div>
                            <select id="cboCategory" style="width:130px; float:left;"></select>
                            &nbsp; Gender :
                            <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                <option value="0">None</option>
                                <option value="1">Male</option>
                                <option value="2">Female</option>
                            </select>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Current Shift :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <select id="cboShift_EmpSearch" style="width:130px; float:left;" class="selection-search cboReset"></select>

                        &nbsp; Block:
                        <input id="txtEmployeeBlockAdv" style="width:90px;" type="text" />
                        <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                        <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Card Status :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Working Status :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Date Of Birth :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <select id="cboDateType" style="width: 75px" class="cboReset">
                            <option value='0'>None</option>
                            <option value='1'>Equal</option>
                            <option value='2'>Between</option>
                        </select>
                        <span></span>
                        <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                        <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                        <span id="regionDateTo">
                            <span>To</span>
                            <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                            <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                        </span>

                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Joining Date :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                        <input id="dtJoiningDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                        <input id="dtJoiningDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level"></td>
                    <td class="td-AdvSearch-Input">
                        <input type="checkbox" id="chkActive" class="chkReset" /> Active
                        <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                        <input type="checkbox" id="chkUser" class="chkReset" /> User
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level"></td>
                    <td class="td-AdvSearch-Input">
                        <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level"></td>
                    <td class="td-AdvSearch-Input">
                        <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level"></td>
                    <td class="td-AdvSearch-Input">
                        <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level"></td>
                    <td class="td-AdvSearch-Input">
                        <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level"></td>
                    <td class="td-AdvSearch-Input">
                        <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                        <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                    </td>
                </tr>
            </table>
        </div>
        <div style="width: 52%; float: right;">
            <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                <thead>
                    <tr>
                        <th data-options="field:'Selected',checkbox:true"></th>
                        <th field="Code" width="200"> Code</th>
                        <th field="Name" width="150">Employee Name</th>
                        <th field="DepartmentName" width="100">Department</th>
                        <th field="DesignationName" width="100">Designation</th>
                    </tr>
                </thead>
            </table>
            <table style="width: 485px; font-size: 12px; font-weight: bold;">
                <tr>
                    <td style="text-align: left">
                        <input id="chkRange" type="checkbox" />Range
                        <label id="lblRange1">
                            <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                        </label>
                        <label id="lblRange2">
                            <input id="txtTo" type="text" style="width:40px" />
                        </label>
                        <label id="lblcount"></label>
                    </td>
                    <td style="text-align: right">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                        <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
                <tr>
                    <td style="text-align: left"></td>
                    <td style="text-align: right"></td>
                </tr>
            </table>
        </div>
    </div>
</div>

<div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:30%; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="font-family:Tahoma">
        <div class="easyui-panel" style="width:385px;height:300px;overflow:auto">
            <ul id="locationtree" data-options="checkbox:false" singleselect="true"></ul>
        </div>

        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:400px; text-align:right"></td>

                    <td style="width:50px">
                        <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</div>

<div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:30%; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="font-family:Tahoma">
        <div class="easyui-panel" style="width:385px;height:300px;overflow:auto">
            <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
        </div>

        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:400px; text-align:right"></td>

                    <td style="width:50px">
                        <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</div>

<div id="winDepartmentPicker_Search" class="easyui-window winstyle" title="Department Picker" style="width:30%; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="font-family:Tahoma">
        <div class="easyui-panel" style="width:385px;height:300px;overflow:auto">
            <ul id="departmenttree_Search" data-options="checkbox:true" singleselect="false"></ul>
        </div>
        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:400px; text-align:right"></td>

                    <td style="width:50px">
                        <a id="btnDepartmentPickerOk_Search" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnDepartmentPickerClose_Search" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</div>

<div id="winBOA" class="easyui-window winstyle" title="Benefit of attendance" style="width:30%; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="font-family:Tahoma">
        <table id="tblBOAs" class="easyui-datagrid" style="width:100%; height:300px;" fitcolumns="false" rownumbers="true" pagination="fasle" singleselect="false" autorowheight="false">
            <thead>
                <tr>
                    <th data-options="field:'Selected',checkbox:true"></th>
                    <th field="Name" width="320" align="left">BOA</th>
                </tr>
            </thead>
        </table>
        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:400px; text-align:right"></td>
                    <td style="width:50px">
                        <a id="btnBOAOK" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnBAOClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</div>

</div>
<style>
    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>
                    
<script type="text/javascript">
var _oBenefitOnAttendances=[];
var _sBaseAddress="";

// var for Emp picker start
var _nLastEmployeeID = 0;
var _nEmployeeID=0;
var _bNext = false;
var _nLoadRecords = 0;
var _nRowLength = 0;

var _oBusinessUnits=[];
var _oEmployeeTypes=[];
var _oShifts=[];
var _oEmployeeCSs=[];
var _oEmployeeWSs=[];
var _oEmployeeOfficial=null;

var _sAttendanceSchemeID="";
var _sBusinessUnitIds = "";
var _sLocationID = "";
var _sDepartmentIds = "";
var _sDesignationIds = "";
var _sEmployeeIDs = "";
var _sBlockNames="";
var _sBMMIDs="";

// var for Emp picker end
var _nLocationID=0;
var _sDepartmentNames="";
var _sDepartmentIDs_Search="";
    
var _sBlockNamesAdv="";
var _sBlockIDsAdv="";
var _sGroupNamesAdv="";
var _sGroupIDsAdv="";

var _BOAIDs="";

var _oCellRowSpans=[];

$(document).ready(function () {
    _oBenefitOnAttendances = @Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    _sBaseAddress = @Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));    
    _oEmployeeOfficial = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeOfficial));
    _oEmployeeTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
    _oShifts = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
    _oEmployeeCSs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
    _oEmployeeWSs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
    _oBusinessUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
    var oEmployeeCategorys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
    var oStaffWorkers = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.StaffWorkers));
    

    //LoadBOA();
    $('#dtDateFrom').datebox('setValue',icsdateformat(new Date()));
    $('#dtDateTo').datebox('setValue',icsdateformat(new Date()));
    $("#cboStaffWorker").icsLoadCombo({ List: oStaffWorkers, OptionValue: "EmployeeTypeID", DisplayText: "Name", InitialValue:"--Employee Type--" });
    InitializeAdvSearch();
    LoadBU();
    LoadCateGory(oEmployeeCategorys);
    PrintTypeObject();
});

function LoadCateGory(oEmployeeCategorys)
{
    $("#cboCategory").icsLoadCombo({
        List: oEmployeeCategorys,
        OptionValue: "Value",
        DisplayText: "Text"
    });
}

function LoadBU()
{
    $('#cboBU_Collection').combobox({
        data:_oBusinessUnits,
        valueField:'BusinessUnitID',
        textField:'Name',
        multiple:true
    });
    $('#cboBU_Collection').combobox('setValue',  _oBusinessUnits.length>0?_oBusinessUnits[0].BusinessUnitID:0);
}

//function LoadBOA()
//{
//    $("#cboBOA").icsLoadCombo({
//        List:_oBenefitOnAttendances,
//        OptionValue: "BOAID",
//        DisplayText: "Name",
//        InitialValue:"--Select Benifits On Attendance--"
//    });
//}

/*---------------- Adv Search----------------*/
    function InitializeAdvSearch(){
        $('#dtJoiningDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtJoiningDateTo').datebox('setValue', icsdateformat(new Date()));

        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                    {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                    {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
        $('#txtEmployeeGroupAdv').val("");
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDsAdv = "";
        _sGroupIDsAdv = "";
    }

    $("#btnEmployee").click(function () {
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            $("#lblRange1").show();
        }
        else
        {
            $("#lblRange1").hide();
        }
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }
        debugger
        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }

        var nBusinessUnitID = $("#cboBU").val();
        var nCategory=$('#cboCategory').val();
        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();
        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
           nEmployeeTypeID==0 && sGender=="None" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
           bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 
           && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBlockIDsAdv==""&& _sGroupIDsAdv=="")
        {
            alert("Please enter your selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                     sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                     bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                     sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                     +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBlockIDsAdv+"~"+_sGroupIDsAdv;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnEmployeePickerOk").click(function () {
        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length<=0) { alert("please select atleast one item");return; }
        var sEmpIDs="";
        var sEmpNames="";
        for(var i=0;i<oEmployees.length;i++)
        {
            sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
            sEmpNames=sEmpNames+oEmployees[i].Name+",";
        }
        _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
        sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
        $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
        $("#txtEmployee_Collection").val(sEmpNames);
        $("#winEmployeePicker").icsWindow('close');
        //SearchByDepartmentAndDateRangeWithPasignation();
    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });

/*-------------Attendance Schema Picker----------------*/
$("#btnAttScheme").click(function(e){
    var oAttendanceScheme={AttendanceSchemeID:0};
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oAttendanceScheme,
        ControllerName: "AttendanceScheme",
        ActionName: "GetsAttendanceSchemeCurrentSession",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {

        if (response.status && response.objs.length > 0) {
            if (response.objs[0].AttendanceSchemeID > 0) {
                debugger;
                var tblColums = [];
                var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                var oPickerParam = {
                    winid: 'winAttendanceScheme',
                    winclass:'clsAttendanceScheme',
                    winwidth: 420,
                    winheight: 460,
                    tableid: 'tblAttendanceSchemePicker',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: false,
                    searchingbyfieldName:'Name',
                    windowTittle: 'Attendance Scheme List'
                };
                $.icsPicker(oPickerParam);
                IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName

            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
});

function IntializeAttendancePickerbutton(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {

        var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
        if (oPickerobj.winid == 'winAttendanceScheme')
        {
            if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
            }
            else{
                alert("Please select a schema.");
            }
        }
    });
}

$("#btnResetAttScheme").click(function(e){
    $('#txtAttendanceScheme').val("");
    _sAttendanceSchemeID="";
});

/*-------------Location Picker----------------*/
var btnLocation="";
$("#btnLocationPicker,#btnLocationPicker_Colection").click(function(e){
    btnLocation = $(this).attr("id");
    var sBusinessUnitIDs ="";
    var nBusinessUnitID=0;
    if(btnLocation=="btnLocationPicker")
    {
        nBusinessUnitID = $("#cboBU").val();
        sBusinessUnitIDs = String(nBusinessUnitID);
    }
    else{sBusinessUnitIDs=_sBusinessUnitIds;}
    $("#winLocationPicker").icsWindow('open');
    var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oLocation,
        ControllerName: "Location",
        ActionName: "GetsLocationMenuTree",
        IsWinClose: false
    };

    $.icsDataGet(obj, function (response) {

        if (response.status && response.obj!=null) {
            if (response.obj.TLocation.id > 0) {
                $('#locationtree').tree({ data: [response.obj.TLocation] });
            }
        }
    });
});

$("#btnLocationPickerOk").click(function(e){
    var oLocation = $('#locationtree').tree('getSelected');
    if(oLocation!=null && oLocation.id>0){
        $("#winLocationPicker").icsWindow('close');
        if(btnLocation=="btnLocationPicker")
        { $('#txtLocation').val(oLocation.text);} else{$('#txtLocation_Colection').val(oLocation.text);}
        _sLocationID= oLocation.id;
    }
    else{
        alert("Please select a location.");
    }
});

$('#txtLocation_Colection').keypress(function (e)
{
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13)//Enter key-13
    {
        btnLocation = $(this).attr("id");
        var sBusinessUnitIDs ="";
        var nBusinessUnitID=0;
        if(btnLocation=="btnLocationPicker")
        {
            nBusinessUnitID = $("#cboBU").val();
            sBusinessUnitIDs = String(nBusinessUnitID);
        }
        else{sBusinessUnitIDs=_sBusinessUnitIds;}
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };
        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    }
});

$("#btnLocationPickerClose").click(function(e){
    $("#winLocationPicker").icsWindow('close');
});

$("#btnResetLocationPicker,#btnResetLocationPicker_Colection").click(function(e){
    $('#txtLocation').val("");
    $('#txtLocation_Colection').val("");
    _sLocationID="";
});

/*-------------Department Picker----------------*/

$("#btnDepartmentPicker").click(function(e){

    $("#winDepartmentPicker").icsWindow('open');
    var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oDepartment,
        ControllerName: "Department",
        ActionName: "GetsDepartments",
        IsWinClose: false
    };

    $.icsDataGet(obj, function (response) {

        if (response.status && response.obj!=null) {
            if (response.obj.id > 0) {
                $('#departmenttree').tree({ data: [response.obj] });
            }
        }
    });
});

$("#btnDepartmentPickerOk").click(function(e){

    var oDepartment = $('#departmenttree').tree('getSelected');
    if(oDepartment!=null && oDepartment.id>0){
        $("#winDepartmentPicker").icsWindow('close');
        $('#txtDepartment').val(oDepartment.text);
        _sDepartmentIds= oDepartment.id;
    }
    else{
        alert("Please select a department.");
    }
});

$("#btnDepartmentPickerClose").click(function(e){
    $("#winDepartmentPicker").icsWindow('close');
});

$("#btnResetDepartmentPicker").click(function(e){
    $('#txtDepartment').val("");
    _sDepartmentIds="";
});

/*-------------Designation Picker----------------*/

$("#btnDesignationPicker").click(function(e){
    var oDesignation={
        DesignationID:0,
        Params: _sBusinessUnitIds+'~'+_sLocationID+'~'+ _sDepartmentIds
    };
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oDesignation,
        ControllerName: "Designation",
        ActionName: "Gets",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {

        if (response.status && response.objs.length > 0) {
            if (response.objs[0].DesignationID > 0) {
                debugger;
                var tblColums = [];
                var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                var oPickerParam = {
                    winid: 'winDesignation',
                    winclass:'clsDesignation',
                    winwidth: 320,
                    winheight: 460,
                    tableid: 'tblDesignation',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: false,
                    searchingbyfieldName:'Name',
                    windowTittle: 'Designation List'
                };
                $.icsPicker(oPickerParam);
                IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName

            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
});

function IntializeDesignationPickerbutton(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {

        var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
        if (oPickerobj.winid == 'winDesignation')
        {
            if(oDesignation!=null && oDesignation.DesignationID>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                $('#txtDesignation').val(oDesignation.Name);
                _sDesignationIds=oDesignation.DesignationID;
            }
            else{
                alert("Please select a designation.");
            }
        }
    });
}

$("#btnResetDesignationPicker").click(function(e){
    $('#txtDesignation').val("");
    _sDesignationIds="";
});
    
$("#btnClearEmployee").click(function(e){
    $('#txtEmployee_Collection').val("");
    _sEmployeeIDs="";
});

$('#txtEmployee_Collection').keypress(function (e)
{
    if(e.which === 13)
    {
        var txtEmployeeNameCode = $(this).val();
        if(txtEmployeeNameCode==null || txtEmployeeNameCode=="")
        {
            alert("Please enter name/code!");
            return false;
        }
        var nDepartmentID=0;
        var oEmployee = { Params: txtEmployeeNameCode +'~'+ nDepartmentID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerForTextSearch',
                        winclass:'clsEmployeePickerForTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
});

function IntializePickerbutton(oPickerobj) {
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
        SetPickerValueAssign(oPickerobj);
    });
    $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
        if (e.which === 13) {
            SetPickerValueAssign(oPickerobj);
        }
    });
}

function SetPickerValueAssign(oPickerobj) {
    var oreturnObj = null, oreturnobjs = [];
    if (oPickerobj.multiplereturn) {
        oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
    } else {
        oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
    }
    debugger;
    if (oPickerobj.winid == 'winEmployeePickerForTextSearch') {
        if (oreturnObj != null && oreturnObj.EmployeeID > 0) {
            if(oreturnObj.DesignationName=="" || oreturnObj.DepartmentName=="" || oreturnObj.LocationName=="")
            {
                alert("This Employee Has No Official Information !");
                return;
            }
            $("#txtEmployee_Collection")[0].value=oreturnObj.Name+"["+oreturnObj.Code+"]";
            _sEmployeeIDs = oreturnObj.EmployeeID;
       
        }else{
            alert("Please select an item!");
            return false;
        }
    }
    $("#" + oPickerobj.winid).icsWindow("close");
    $("#" + oPickerobj.winid).remove();
}
/*--------------------------------------------*/

/*-------------Department Picker Search start----------------*/

$("#btnDepartmentPicker_Search").click(function(e){

    $("#winDepartmentPicker_Search").icsWindow('open');
    var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oDepartment,
        ControllerName: "Department",
        ActionName: "GetsDepartments",
        IsWinClose: false
    };

    $.icsDataGet(obj, function (response) {
        if (response.status && response.obj!=null) {
            if (response.obj.id > 0) {
                $('#departmenttree_Search').tree({ data: [response.obj] });
            }
        }
    });
});

$("#btnDepartmentPickerOk_Search").click(function(e){
    var oDepartments = $('#departmenttree_Search').tree('getChecked');
    if(oDepartments!=null && oDepartments.length>0){
        for(var i=0; i<oDepartments.length; i++)
        {
            _sDepartmentNames+=oDepartments[i].text+",";
            _sDepartmentIDs_Search+=oDepartments[i].id+",";
        }
        _sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
        _sDepartmentIDs_Search=_sDepartmentIDs_Search.substring(0,_sDepartmentIDs_Search.length-1);
        $("#txtDepartment_Search").val(_sDepartmentNames);
        $("#winDepartmentPicker_Search").icsWindow('close');
    }
    else{
        alert("Please select a department.");
    }
});

$("#btnDepartmentPickerClose_Search").click(function(e){
    $("#winDepartmentPicker_Search").icsWindow('close');
});

$("#btnResetDepartmentPicker_Search").click(function(e){
    $('#txtDepartment_Search').val("");
    _sDepartmentIDs_Search="";
});

/*-------------Department Picker Search end----------------*/

/*------------- Start Block Picker----------------*/
   
$("#btnBlock").click(function(e){
    BlockPicker();
});

function BlockPicker()
{
    var oBlockMachineMapping={
        ProductionProcessInt:0,
        DepartmentID:0,
        BlockName:""
    }
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oBlockMachineMapping,
        ControllerName: "BlockMachineMapping",
        ActionName: "BlockMachineMapping_Search",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {
        
        if (response.status && response.objs.length > 0) {
            if (response.objs[0].BMMID > 0) {
                var tblColums = [];
                var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
                var bmultiplereturn=true;

                var oPickerParam = {
                    winid: 'winBlock',
                    winclass:'clsBlock',
                    winwidth: 320,
                    winheight: 460,
                    tableid: 'tblShift',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: bmultiplereturn,
                    searchingbyfieldName:'BlockName',
                    windowTittle: 'Block List'
                };
                $.icsPicker(oPickerParam);
                IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName
            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
}

function IntializeBlockPickerbutton(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
        var oBlocks=[];
        oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
        if (oPickerobj.winid == 'winBlock')
        {
            if(oBlocks!=null && oBlocks.length>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                for(var i=0; i<oBlocks.length; i++)
                {
                    _sBlockNames += oBlocks[i].BlockName+",";
                    _sBMMIDs += oBlocks[i].BMMID+",";
                    
                }
                _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
                $("#txtBlock").val(_sBlockNames);
            }
            else
            {
                alert("Please select a designation.");
            }
        }
    });
}

$("#btnResetBlock").click(function(e){
    $('#txtBlock').val("");
    _sBlockNames="";
    _sBMMIDs = "";
});

$("#txtBlock").keypress(function(e){
    if (e.which == 13)
    {
        BlockPicker();
    }
});
/*------------- End Block Picker----------------*/

function Search()
{
    var nStartSalaryRange=$('#txtStartSalaryRange').val();
    var nEndSalaryRange=$('#txtEndeSalaryRange').val();
    if(nStartSalaryRange==""){nStartSalaryRange=0;}
    if(nEndSalaryRange==""){nEndSalaryRange=0;}
    nStartSalaryRange= parseFloat(nStartSalaryRange);
    nEndSalaryRange= parseFloat(nEndSalaryRange);
    if(nStartSalaryRange>0 || nEndSalaryRange>0)
    {
        if(nStartSalaryRange>nEndSalaryRange)
        {
            alert("Invalid Salary Range!");
            return;
        }
        if(nStartSalaryRange>0 && nEndSalaryRange<=0)
        {
            alert("Please enter End Salary Range!");
            return;
        }
        if(nStartSalaryRange<=0 && nEndSalaryRange>0)
        {
            alert("Please enter Start Salary Range!");
            return;
        }
    }

    var dtDateFrom=$('#dtDateFrom').datebox('getValue');
    var dtDateTo=$('#dtDateTo').datebox('getValue');

    var sParam=dtDateFrom+"~"+dtDateTo+"~"+_BOAIDs+"~"+_sEmployeeIDs+"~"+_sLocationID+"~"+_sDepartmentIDs_Search+"~"+_sBusinessUnitIds+"~"+nStartSalaryRange+"~"+nEndSalaryRange;
    var tsv=((new Date()).getTime())/1000;
    $.ajax({
        type: "POST",
        dataType: "json",
        url: _sBaseAddress + "/BenefitOnAttendance/GetsBOAEL",
        traditional: true,
        data: JSON.stringify({ sParam:sParam, nts : tsv}),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var oBOAs =[];
            oBOAs= jQuery.parseJSON(data);
            if(oBOAs.length>0 && oBOAs[0].ErrorMessage=="")
            {
                debugger;
                //DynamicRefreshList(oBOAs, "tblBenefitOnAttendances");
                LoadIntoGrid(oBOAs)
            }
            else
            {
                alert(oBOAs[0].ErrorMessage);
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }
    });
}

$('#btnPrint').click(function (e)
{
    var nPType=$("#cboPrintType").val();
    if(nPType==1)
    {
        PrintFormat1();
    }
    if(nPType==3)
    {
        PrintFormat2();
    }
    if(nPType==4)
    {
        PrintCompDayAllowance();
    }
});
function PrintFormat1()
{
    var dtDateFrom=$('#dtDateFrom').datebox('getValue');
    var dtDateTo=$('#dtDateTo').datebox('getValue');
    var BOAID=$('#cboBOA').val();
    if(BOAID<=0)
    {
        alert("Please select a Benifits On Attendance!");
        return;
    }

    var sParam=dtDateFrom+"~"+dtDateTo+"~"+_BOAIDs+"~"+_sEmployeeIDs+"~"+_sLocationID+"~"+_sDepartmentIDs_Search+"~"+_sBusinessUnitIds;
    var tsv=((new Date()).getTime())/1000;
    window.open(_sBaseAddress+ "/BenefitOnAttendance/PrintBOAEL?sParam="+sParam+"&nts="+tsv, "_blank");
}
function PrintFormat2()
{
    var dtDateFrom=$('#dtDateFrom').datebox('getValue');
    var dtDateTo=$('#dtDateTo').datebox('getValue');
    //var BOAID=$('#cboBOA').val();
    //if(BOAID<=0)
    //{
    //    alert("Please select a Benifits On Attendance!");
    //    return;
    //}
    

    var result = _BOAIDs.split(',');
    if(result.length > 1 || _BOAIDs == "") {
        alert("Please select only one Benifit On Attendance!");
        return;
    }

    var sParam=dtDateFrom+"~"+dtDateTo+"~"+_BOAIDs+"~"+_sEmployeeIDs+"~"+_sLocationID+"~"+_sDepartmentIDs_Search+"~"+_sBusinessUnitIds;
    var tsv=((new Date()).getTime())/1000;
    window.open(_sBaseAddress+ "/BenefitOnAttendance/PrintFormat2?sParam="+sParam+"&nts="+tsv, "_blank");
}

$('#btnPrint_XL').click(function (e)
{
    var nPType=$("#cboPrintType").val();
    if(nPType==1)
    {
        PrintFormat1_XL();
    }
    else if(nPType==2)
    {
        PrintExtraBenefit_XL();
    }
    else if(nPType==3)
    {
        PrintExtraBenefit_XLFormat2();
    }
    else if(nPType==4)
    {
        ExcelCompDayAllowance();
    }
    else if(nPType==5)
    {
        ExcelExportBenefitOfAttendance();
    }
    else if(nPType==6)
    {
        CompExcelExportBenefitOfAttendance();
    }
});
function PrintCompDayAllowance()
{
    var nStartSalaryRange=$('#txtStartSalaryRange').val();
    var nEndSalaryRange=$('#txtEndeSalaryRange').val();
    if(nStartSalaryRange==""){nStartSalaryRange=0;}
    if(nEndSalaryRange==""){nEndSalaryRange=0;}
    nStartSalaryRange= parseFloat(nStartSalaryRange);
    nEndSalaryRange= parseFloat(nEndSalaryRange);
    if(nStartSalaryRange>0 || nEndSalaryRange>0)
    {
        if(nStartSalaryRange>nEndSalaryRange)
        {
            alert("Invalid Salary Range!");
            return;
        }
        if(nStartSalaryRange>0 && nEndSalaryRange<=0)
        {
            alert("Please enter End Salary Range!");
            return;
        }
        if(nStartSalaryRange<=0 && nEndSalaryRange>0)
        {
            alert("Please enter Start Salary Range!");
            return;
        }
    }
    var dtDateFrom=$('#dtDateFrom').datebox('getValue');
    var dtDateTo=$('#dtDateTo').datebox('getValue');
    var sParam=dtDateFrom+"~"+dtDateTo+"~"+_BOAIDs+"~"+_sEmployeeIDs+"~"+_sLocationID+"~"+_sDepartmentIDs_Search+"~"+_sBusinessUnitIds + "~" + nStartSalaryRange + "~" + nEndSalaryRange;
    var tsv=((new Date()).getTime())/1000;
    window.open(_sBaseAddress+ "/BenefitOnAttendance/PrintCompDayAllowance?sParam="+sParam+"&nts="+tsv, "_blank");
}

function ExcelCompDayAllowance()
{
    var nStartSalaryRange=$('#txtStartSalaryRange').val();
    var nEndSalaryRange=$('#txtEndeSalaryRange').val();
    if(nStartSalaryRange==""){nStartSalaryRange=0;}
    if(nEndSalaryRange==""){nEndSalaryRange=0;}
    nStartSalaryRange= parseFloat(nStartSalaryRange);
    nEndSalaryRange= parseFloat(nEndSalaryRange);
    if(nStartSalaryRange>0 || nEndSalaryRange>0)
    {
        if(nStartSalaryRange>nEndSalaryRange)
        {
            alert("Invalid Salary Range!");
            return;
        }
        if(nStartSalaryRange>0 && nEndSalaryRange<=0)
        {
            alert("Please enter End Salary Range!");
            return;
        }
        if(nStartSalaryRange<=0 && nEndSalaryRange>0)
        {
            alert("Please enter Start Salary Range!");
            return;
        }
    }
    var dtDateFrom=$('#dtDateFrom').datebox('getValue');
    var dtDateTo=$('#dtDateTo').datebox('getValue');
    var sParam=dtDateFrom+"~"+dtDateTo+"~"+_BOAIDs+"~"+_sEmployeeIDs+"~"+_sLocationID+"~"+_sDepartmentIDs_Search+"~"+_sBusinessUnitIds + "~" + nStartSalaryRange + "~" + nEndSalaryRange;
    var tsv=((new Date()).getTime())/1000;
    window.open(_sBaseAddress+ "/BenefitOnAttendance/ExcelCompDayAllowance?sParam="+sParam+"&nts="+tsv, "_blank");
}

function ExcelExportBenefitOfAttendance()
{
    var nStartSalaryRange=$('#txtStartSalaryRange').val();
    var nEndSalaryRange=$('#txtEndeSalaryRange').val();
    if(nStartSalaryRange==""){nStartSalaryRange=0;}
    if(nEndSalaryRange==""){nEndSalaryRange=0;}
    nStartSalaryRange= parseFloat(nStartSalaryRange);
    nEndSalaryRange= parseFloat(nEndSalaryRange);
    if(nStartSalaryRange>0 || nEndSalaryRange>0)
    {
        if(nStartSalaryRange>nEndSalaryRange)
        {
            alert("Invalid Salary Range!");
            return;
        }
        if(nStartSalaryRange>0 && nEndSalaryRange<=0)
        {
            alert("Please enter End Salary Range!");
            return;
        }
        if(nStartSalaryRange<=0 && nEndSalaryRange>0)
        {
            alert("Please enter Start Salary Range!");
            return;
        }
    }
    var nEmpTypeID = parseInt($("#cboStaffWorker").val());
    var dtDateFrom=$('#dtDateFrom').datebox('getValue');
    var dtDateTo=$('#dtDateTo').datebox('getValue');
    var sParam=dtDateFrom+"~"+dtDateTo+"~"+_BOAIDs+"~"+_sEmployeeIDs+"~"+_sLocationID+"~"+_sDepartmentIDs_Search+"~"+_sBusinessUnitIds + "~" + nStartSalaryRange + "~" + nEndSalaryRange+'~'+ nEmpTypeID +'~false';
    var tsv=((new Date()).getTime())/1000;
    window.open(_sBaseAddress+ "/BenefitOnAttendance/ExcelExportBenefitOfAttendance?sParam="+sParam+"&nts="+tsv, "_blank");
}

function CompExcelExportBenefitOfAttendance()
{
    var nStartSalaryRange=$('#txtStartSalaryRange').val();
    var nEndSalaryRange=$('#txtEndeSalaryRange').val();
    if(nStartSalaryRange==""){nStartSalaryRange=0;}
    if(nEndSalaryRange==""){nEndSalaryRange=0;}
    nStartSalaryRange= parseFloat(nStartSalaryRange);
    nEndSalaryRange= parseFloat(nEndSalaryRange);
    if(nStartSalaryRange>0 || nEndSalaryRange>0)
    {
        if(nStartSalaryRange>nEndSalaryRange)
        {
            alert("Invalid Salary Range!");
            return;
        }
        if(nStartSalaryRange>0 && nEndSalaryRange<=0)
        {
            alert("Please enter End Salary Range!");
            return;
        }
        if(nStartSalaryRange<=0 && nEndSalaryRange>0)
        {
            alert("Please enter Start Salary Range!");
            return;
        }
    }
    var nEmpTypeID = parseInt($("#cboStaffWorker").val());
    var dtDateFrom=$('#dtDateFrom').datebox('getValue');
    var dtDateTo=$('#dtDateTo').datebox('getValue');
    var sParam=dtDateFrom+"~"+dtDateTo+"~"+_BOAIDs+"~"+_sEmployeeIDs+"~"+_sLocationID+"~"+_sDepartmentIDs_Search+"~"+_sBusinessUnitIds + "~" + nStartSalaryRange + "~" + nEndSalaryRange+'~'+ nEmpTypeID +'~true';
    var tsv=((new Date()).getTime())/1000;
    window.open(_sBaseAddress+ "/BenefitOnAttendance/ExcelExportBenefitOfAttendance?sParam="+sParam+"&nts="+tsv, "_blank");
}

function PrintExtraBenefit_XLFormat2()
{
    var dtDateFrom=$('#dtDateFrom').datebox('getValue');
    var dtDateTo=$('#dtDateTo').datebox('getValue');
    //var BOAID=$('#cboBOA').val();
    //if(BOAID<=0)
    //{
    //    alert("Please select a Benifits On Attendance!");
    //    return;
    //}
    

    var result = _BOAIDs.split(',');
    if(result.length > 1 || _BOAIDs == "") {
        alert("Please select only one Benifit On Attendance!");
        return;
    }

    var sParam=dtDateFrom+"~"+dtDateTo+"~"+_BOAIDs+"~"+_sEmployeeIDs+"~"+_sLocationID+"~"+_sDepartmentIDs_Search+"~"+_sBusinessUnitIds;
    var tsv=((new Date()).getTime())/1000;
    window.open(_sBaseAddress+ "/BenefitOnAttendance/PrintExtraBenefit_XLFormat2?sParam="+sParam+"&nts="+tsv, "_blank");
}
function PrintFormat1_XL()
{
    var dtDateFrom=$('#dtDateFrom').datebox('getValue');
    var dtDateTo=$('#dtDateTo').datebox('getValue');
    //var BOAID=$('#cboBOA').val();
    //if(BOAID<=0)
    //{
    //    alert("Please select a Benifits On Attendance!");
    //    return;
    //}

    var sParam=dtDateFrom+"~"+dtDateTo+"~"+_BOAIDs+"~"+_sEmployeeIDs+"~"+_sLocationID+"~"+_sDepartmentIDs_Search+"~"+_sBusinessUnitIds;
    var tsv=((new Date()).getTime())/1000;
    window.open(_sBaseAddress+ "/BenefitOnAttendance/PrintBOAEL_XL?sParam="+sParam+"&nts="+tsv, "_blank");
}

function PrintExtraBenefit_XL()
{
    var nStartSalaryRange=$('#txtStartSalaryRange').val();
    var nEndSalaryRange=$('#txtEndeSalaryRange').val();
    if(nStartSalaryRange==""){nStartSalaryRange=0;}
    if(nEndSalaryRange==""){nEndSalaryRange=0;}
    nStartSalaryRange= parseFloat(nStartSalaryRange);
    nEndSalaryRange= parseFloat(nEndSalaryRange);
    if(nStartSalaryRange>0 || nEndSalaryRange>0)
    {
        if(nStartSalaryRange>nEndSalaryRange)
        {
            alert("Invalid Salary Range!");
            return;
        }
        if(nStartSalaryRange>0 && nEndSalaryRange<=0)
        {
            alert("Please enter End Salary Range!");
            return;
        }
        if(nStartSalaryRange<=0 && nEndSalaryRange>0)
        {
            alert("Please enter Start Salary Range!");
            return;
        }
    }
    var dtDateFrom=$('#dtDateFrom').datebox('getValue');
    var dtDateTo=$('#dtDateTo').datebox('getValue');

    //var BOAID=$('#cboBOA').val();
    //if(BOAID<=0)
    //{
    //    alert("Please select a Benifits On Attendance!");
    //    return;
    //}

    var sParam=dtDateFrom+"~"+dtDateTo+"~"+_BOAIDs+"~"+_sEmployeeIDs+"~"+_sLocationID+"~"+_sDepartmentIDs_Search+"~"+_sBusinessUnitIds + "~" + nStartSalaryRange + "~" + nEndSalaryRange;
    var tsv=((new Date()).getTime())/1000;
    window.open(_sBaseAddress+ "/BenefitOnAttendance/PrintExtraBenefit_XL?sParam="+sParam+"&nts="+tsv, "_blank");
}

var str = "Mohsen",
    st = "Moh";

if(str.indexOf(st) > -1) // true

    
$('#txtBOA').keydown(function (e) {
    var oList = [];
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13)//Enter key-13
    {
        debugger;
        var txtSearchBOA = $("#txtBOA").val();
        if(txtSearchBOA == "") {
            $("#winBOA").icsWindow("open");
            DynamicRefreshList(_oBenefitOnAttendances, "tblBOAs");
        }
        else {
            for(var i = 0; i < _oBenefitOnAttendances.length; i++) {
                var str = _oBenefitOnAttendances[i].Name.toUpperCase();
                var st = txtSearchBOA.toUpperCase();
                if(str.indexOf(st) > -1) {
                    oList.push(_oBenefitOnAttendances[i]);
                }
            }
            $("#winBOA").icsWindow("open");
            DynamicRefreshList(oList, "tblBOAs");
        }
    }
});


$("#btnBOA").click(function () 
{
    $("#winBOA").icsWindow("open");
    DynamicRefreshList(_oBenefitOnAttendances, "tblBOAs");
});
    
$("#btnBOAOK").click(function () 
{
    var oBOAs= $('#tblBOAs').datagrid('getChecked');
    if(oBOAs.length<=0)
    {
        alert("Please select at least one item!");
        return;
    }
    var BOAName="";
    _BOAIDs="";
    for(var i=0; i<oBOAs.length; i++)
    {
        BOAName+=oBOAs[i].Name+",";
        _BOAIDs+=oBOAs[i].BOAID+",";
    }

    BOAName=BOAName.substring(0,BOAName.length-1);
    _BOAIDs=_BOAIDs.substring(0,_BOAIDs.length-1);
    $("#txtBOA").val(BOAName);
    $("#winBOA").icsWindow("close");
});

$("#btnClearBOA").click(function () 
{
    _BOAIDs="";
    $("#txtBOA").val("");
});

$("#btnBAOClose").click(function () 
{
    $("#winBOA").icsWindow("close");
});

function onLoadSuccess(data)
{
    var nIndex=0;
    var nSpan=0;
    for(var i=0;i<_oCellRowSpans.length;i++){
        var oMCell=[_oCellRowSpans[i].mergerCell];
        nIndex=oMCell[0][0];
        nSpan= oMCell[0][1];
        if(_oCellRowSpans[i].FieldName=="EmployeeCode"){
            $(this).datagrid('mergeCells',{index: nIndex, field: 'EmployeeCode', rowspan: nSpan});
        }
        if(_oCellRowSpans[i].FieldName=="EmployeeName"){
            $(this).datagrid('mergeCells',{index: nIndex, field: 'EmployeeName', rowspan: nSpan});
        }
    }
}

function LoadIntoGrid(oLists)
{ 
    _oCellRowSpans=[];
    if(oLists.length>0)
    {
        _oCellRowSpans=oLists[0].CellRowSpans;
    }
    DynamicRefreshList(oLists, "tblBenefitOnAttendances");
}

$("#btnReset").click(function () 
{
    _BOAIDs="";
    _sEmployeeIDs="";
    _sDepartmentIDs_Search="";
    _sDesignationIds="";
    _sBusinessUnitIds="";

    $("#txtBOA").val("");
    $("#txtEmployee").val("");
    $("#txtBusinessUnit_Collection").val("");
    $("#txtDepartment_Search").val("");
    DynamicRefreshList([], "tblBenefitOnAttendances");
    $('#dtDateFrom').datebox('setValue',icsdateformat(new Date()));
    $('#dtDateTo').datebox('setValue',icsdateformat(new Date()));
});

/*-------------Start Business Unit Picker----------------*/
$("#btnBusinessUnitPicker_Collection").click(function(e){
    BusinessUnitPicker();
});

$("#txtBusinessUnit_Collection").keypress(function(e){
    if (e.which == 13)//enter=13
    {
        BusinessUnitPicker();
    }
});

function BusinessUnitPicker()
{
    var oBusinessUnit={
        BusinessUnitID:0
    };
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oBusinessUnit,
        ControllerName: "BusinessUnit",
        ActionName: "GetsBusinessUnitWithPermission",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {
        if (response.status && response.objs.length > 0) {
            if (response.objs[0].BusinessUnitID > 0) {
                var tblColums = [];
                var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                var bmultiplereturn=true;

                var oPickerParam = {
                    winid: 'winBusinessUnit',
                    winclass:'clsBusinessUnit',
                    winwidth: 320,
                    winheight: 400,
                    tableid: 'tblBusinessUnit',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: bmultiplereturn,
                    searchingbyfieldName:'Name',
                    windowTittle: 'Business Unit List'
                };
                $.icsPicker(oPickerParam);
                IntializeBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
}

function IntializeBusinessUnitPickerbutton(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
        var oBusinessUnits=[];
        oBusinessUnits = $('#'+oPickerobj.tableid).datagrid('getChecked');
        if (oPickerobj.winid == 'winBusinessUnit')
        {
            if(oBusinessUnits!=null && oBusinessUnits.length>0)
            {
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                var sBusinessUnitName = "";
                for(var i=0; i<oBusinessUnits.length; i++)
                {
                    sBusinessUnitName+=oBusinessUnits[i].Name+",";
                    _sBusinessUnitIds+=oBusinessUnits[i].BusinessUnitID+",";
                }

                sBusinessUnitName=sBusinessUnitName.substring(0,sBusinessUnitName.length-1);
                _sBusinessUnitIds=_sBusinessUnitIds.substring(0,_sBusinessUnitIds.length-1);
                $("#txtBusinessUnit_Collection").val(sBusinessUnitName);
            }
            else
            {
                alert("Please select a Business Unit.");
            }
        }
    });
}

$("#btnResetBusinessUnitPicker_Collection").click(function(e){
    $('#txtBusinessUnit_Collection').val("");
    _sBusinessUnitIds="";
});
/*-------------End Business Unit Picker----------------*/

function PrintTypeObject()
{
    var oObj= new Object();
    var oItems=[];
    
    oObj= new Object();
    oObj.id=1;
    oObj.Item="Fromat 1";
    oItems.push(oObj);

    oObj= new Object();
    oObj.id=3;
    oObj.Item="Fromat 2";
    oItems.push(oObj);
    
    oObj= new Object();
    oObj.id=2;
    oObj.Item="Extra Benefits";
    oItems.push(oObj);
    
    oObj= new Object();
    oObj.id=4;
    oObj.Item="Com-Extra Benefits";
    oItems.push(oObj);

    oObj= new Object();
    oObj.id=5;
    oObj.Item="Benefits Of Attendence";
    oItems.push(oObj);
    
    oObj= new Object();
    oObj.id=6;
    oObj.Item="Com Benefits Of Attendence";
    oItems.push(oObj);

    $("#cboPrintType").icsLoadCombo({
        List: oItems,
        OptionValue: "id",
        DisplayText: "Item"
    });
    $("#btnPrint_XL").hide();
    $("#btnPrint").hide();
}

$('#cboPrintType').change(function (e)
{
    var nPType=$("#cboPrintType").val();
    if(nPType==1)
    {
        $("#btnPrint_XL").show();
        $("#btnPrint").show();
        $("#sEDate").show();
    }
    if(nPType==3)
    {
        $("#btnPrint_XL").show();
        $("#btnPrint").show();
        $("#sEDate").show();
    }
    else if(nPType==2)
    {
        $("#btnPrint_XL").show();
        $("#btnPrint").hide();
        $("#sEDate").show();
    }
    else if(nPType==4)
    {
        $("#btnPrint_XL").show();
        $("#btnPrint").show();
        $("#sEDate").show();
    }
    else if(nPType==5)
    {
        $("#btnPrint_XL").show();
        $("#btnPrint").hide();
        $("#sEDate").show();
    }
    else if(nPType==6)
    {
        $("#btnPrint_XL").show();
        $("#btnPrint").hide();
        $("#sEDate").show();
    }
    //else
    //{
    //    $("#btnPrint_XL").hide();
    //    $("#btnPrint").hide();
    //}
});
    
/*------------EmployeeGroupAdv--------------*/
    
$("#btnEmployeeGroupResetAdv").click(function(e){
    $("#txtEmployeeGroupAdv").val("");
    _sGroupNamesAdv = "";
    _sGroupIDsAdv = "";
});

$('#txtEmployeeGroupAdv').keydown(function (e) {

    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13)//Enter key-13
    {
        var txtSearchByGroup = $("#txtEmployeeGroupAdv").val();
        var sTempName = "";
        SearchEmployeeGroupAdv(txtSearchByGroup);
        $("#txtEmployeeGroupAdv").val('');
    }
});


$("#btnEmployeeGroupPickerAdv").click(function(e){
    SearchEmployeeGroupAdv("");
});
function SearchEmployeeGroupAdv(name) {
    $("#txtEmployeeGroupAdv").val("");
    _sGroupNamesAdv = "";
    _sGroupIDsAdv = "";
    var oGroup={
        Name : name
    };
    debugger
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oGroup,
        ControllerName: "Employee",
        ActionName: "GetsEmployeeGroupAdvSrc",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {

        if (response.status && response.objs.length > 0) {
            if (response.objs[0].EmployeeTypeID > 0) {
                debugger;
                var tblColums = [];
                var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                var oPickerParam = {
                    winid: 'winGroup',
                    winclass:'clsGroup',
                    winwidth: 320,
                    winheight: 460,
                    tableid: 'tblGroup',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: true,
                    searchingbyfieldName:'Name',
                    windowTittle: 'Employee Group List'
                };
                $.icsPicker(oPickerParam);
                IntializeGroupPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
}

function IntializeGroupPickerbuttonAdv(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {

        var oGroups=[];
        oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
        if (oPickerobj.winid == 'winGroup')
        {
            if(oGroups!=null && oGroups.length>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                for(var i=0; i<oGroups.length; i++)
                {
                    _sGroupNamesAdv += oGroups[i].Name+",";
                    _sGroupIDsAdv += oGroups[i].EmployeeTypeID+",";

                }
                _sGroupNamesAdv=_sGroupNamesAdv.substring(0,_sGroupNamesAdv.length-1);
                _sGroupIDsAdv=_sGroupIDsAdv.substring(0,_sGroupIDsAdv.length-1);
                $("#txtEmployeeGroupAdv").val(_sGroupNamesAdv);
            }
            else
            {
                alert("Please select a Employee Group.");
            }
        }
    });
}


/*------------EmployeeBlockAdv--------------*/

$('#txtEmployeeBlockAdv').keydown(function (e) {

    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13)//Enter key-13
    {
        var txtSearchByBlock = $("#txtEmployeeBlockAdv").val();
        var sTempName = "";
        SearchEmployeeBlockAdv(txtSearchByBlock);
        $("#txtEmployeeBlockAdv").val('');
    }
});

$("#btnEmployeeBlockPickerAdv").click(function(e){
    SearchEmployeeBlockAdv("");
});
function SearchEmployeeBlockAdv(name) {
    $("#txtEmployeeBlockAdv").val("");
    _sBlockNamesAdv = "";
    _sBlockIDsAdv = "";
    var oBlock={
        Name : name
    };
    debugger
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oBlock,
        ControllerName: "Employee",
        ActionName: "GetsEmployeeBlockAdvSrc",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {

        if (response.status && response.objs.length > 0) {
            if (response.objs[0].EmployeeTypeID > 0) {
                debugger;
                var tblColums = [];
                var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                var oPickerParam = {
                    winid: 'winBlock',
                    winclass:'clsBlock',
                    winwidth: 320,
                    winheight: 460,
                    tableid: 'tblBlock',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: true,
                    searchingbyfieldName:'Name',
                    windowTittle: 'Employee Block List'
                };
                $.icsPicker(oPickerParam);
                IntializeBlockPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
}

function IntializeBlockPickerbuttonAdv(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {

        var oGroups=[];
        oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
        if (oPickerobj.winid == 'winBlock')
        {
            if(oBlocks!=null && oBlocks.length>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                for(var i=0; i<oBlocks.length; i++)
                {
                    _sBlockNamesAdv += oBlocks[i].Name+",";
                    _sBlockIDsAdv += oBlocks[i].EmployeeTypeID+",";

                }
                _sBlockNamesAdv=_sBlockNamesAdv.substring(0,_sBlockNamesAdv.length-1);
                _sBlockIDsAdv=_sBlockIDsAdv.substring(0,_sBlockIDsAdv.length-1);
                $("#txtEmployeeBlockAdv").val(_sBlockNamesAdv);
            }
            else
            {
                alert("Please select a Employee Block.");
            }
        }
    });
}
    

$("#btnEmployeeBlockResetAdv").click(function(e){
    debugger;
    _sBlockNamesAdv = "";
    $('#txtEmployeeBlockAdv').val("");
    _sBlockIDsAdv = "";
});
</script>
