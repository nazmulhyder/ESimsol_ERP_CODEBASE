
@{
    ViewBag.Title = "Inventory Tracking";
}

@model IEnumerable<ESimSol.BusinessObjects.InventoryTraking>
<div class="menuMainCollectionTable" ng-app="InventoryTrakingApp">
    <div ng-controller="InventoryTrakingController" title="Recycle Process" style="width:99.8%">

        <div style="margin-bottom:2px; display:block" class="form-inline ui-grid-top-panel regionITracing">
            <div class="ui-grid-top-panel" style="height:50px">
                <div class="text-left" style="padding-left:3px;padding-top:16px">                    
                    <div class="row col-md-12">
                        <div class="col-md-2 text-right">
                            <label class="control-label">Business Unit :</label>
                        </div>
                        <div class="col-md-2 text-left">
                            <select id="cboUnit" ng-model="BUID" style="width:220px; font-size:12px; margin:0 5px 0 0px" ng-options="obj.BusinessUnitID as obj.Name for obj in BusinessUnits" ng-disabled="DUBusinessUnitID > 0" class="form-control">
                                <option value="">--Select One--</option>
                            </select>
                        </div>
                        <div class="col-md-2 text-right">
                            <label class="control-label">Store:</label>
                        </div>
                        <div class="col-md-6 text-left">
                            <div class="form-inline">
                                <input class="form-control" ng-style="stlStore" ng-model="txtStoreName" placeholder="Type Name & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownStore($event)" style="width:40%;font-size:12px;" required />
                                <button type="button" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="PickStore('')" ng-disabled="disabled"><span aria-hidden="true"> Pick </span></button>
                                <button type="button" class="btn btn-danger btn-sm" aria-label="right Align" ng-click="RemoveStore()" ng-disabled="disabled"><span aria-hidden="true"> Remove </span></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-inline" style="margin:5px 0 8px 5px;">
                <div class="row col-md-12">
                    <div class="col-md-4">
                        <select id="cboProductCategory" class="easyui-combotree" style="width:230px;"></select><input type="button" id="btnCleanPC" value="C" />
                    </div>                    
                    <div class="col-md-8" style="margin:2px">
                        <select style="" class="form-control" ng-model="cboDate" ng-change="DateChange()" ng-options="item.id as item.Value for item in CompareOperators">
                            <option value="">--Select Date--</option>
                        </select>
                        <div class="input-group date date-container">
                            <input type="text" class="form-control" ng-init="initializeDatepicker()" style="width:100px" ng-model="dtStart"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                        </div>
                        <span>to</span>
                        <div class="input-group date date-container">
                            <input type="text" class="form-control" ng-init="initializeDatepicker()" style="width:100px" ng-model="dtEnd" ng-disabled="EndDateDisabled"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                        </div>
                        <button type="button" id="btnSearch" class="btn btn-success btn-sm" style="margin-left:1.4%" aria-label="Left Align" ng-click="AdvanceSearch()"><span class="glyphicon glyphicon-search" aria-hidden="true"> Search</span></button>
                        <button type="button" id="btnPriviewXL" class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="PrintPreviewXL()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Export To XL</span></button>
                    </div>
                </div>
            </div>
        </div>
        <div ui-grid="gridOptions" ui-grid-pinning ui-grid-selection style=" width: 100%; height: 470px;"></div>
    </div>
</div>
<style type="text/css">
    .regionInvoice .form-control {
        height: 26px;
        width: 15%;
        padding: 0px 6px;
        font-size: 12px;
    }
      .regionITracing .form-horizontal .control-label {
        padding-top: 3px;
    }

    .regionITracing .form-control {
        height: 26px;
        padding: 0px 6px;
        font-size: 12px;
    }

    .regionITracing .col-md-12 {
        width: 100%;
        padding-right: 5px;
        padding-left: 5px;
        margin-bottom: 5px;
    }

    .regionITracing .col-md-2 {
        width: 16.6%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionITracing .col-md-3 {
        width: 20%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionITracing .col-md-4 {
        width: 28%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionITracing .col-md-5 {
        width: 40%;
        padding-right: 5px;
        padding-left: 0px;
    }

    .regionITracing .col-md-6 {
        width: 50%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionITracing .col-md-10 {
        width: 83%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionITracing .col-md-8 {
        width: 69%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionITracing .btn-sm {
        padding: 3px 10px;
    }

    .regionITracing .input-group-addon {
        padding: 4px 8px;
    }
  
</style>

<script type="text/javascript">
    var oInventoryTrakingList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var nBUID = @Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
     var oBusinessUnits= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
     var oCompareOperators= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
     var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
   
    $(document).ready(function (){
        RefreshProductCategory(0);
    });

    $("#btnCleanPC").click(function(){
        debugger;
        $('#cboProductCategory').combotree('loadData', []);
        RefreshProductCategory(0);
    });
    function RefreshProductCategory(nPCID)
    {
        var oProductCategory ={  ProductCategoryID: 0 };
        $.ajax
        ({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem("BaseAddress")+  "/ProductCategory/GetsProductCategoryForCombo",
            data:  JSON.stringify(oProductCategory),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oProductCategorys = jQuery.parseJSON(data);
                if(oProductCategorys!=null)
                {
                    $('#cboProductCategory').combotree('loadData', oProductCategorys);
                    $('#cboProductCategory').combotree('setValue', nPCID);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    var CInvoiceapp= angular.module('InventoryTrakingApp',  ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.cellNav','ms.service','ui.grid.pinning',]);
    CInvoiceapp.controller('InventoryTrakingController',  function ($scope, $http, $uibModal,$interval,$timeout,  $log, uiGridConstants, msModal, userSession,advanceSearch) {
        oInventoryTrakingList= (userSession.getData('InventoryTrakings').length>0)? userSession.getData('InventoryTrakings'):oInventoryTrakingList;
        debugger;
        
        $scope.RateView=false;
        
        if(PermissionChecker('RateView','InventoryTracking',oAuthorizationRolesMapping)){$scope.RateView = true; }

        $scope.gridOptions = {
            enableFullRowSelection: true,
            enableSelectAll: true,
            multiSelect: false,
            enableRowSelection: true,
            columnDefs: [
                { field: 'WUName', name:'StoreName', width:'18%',pinnedLeft:true },
                { field: 'ProductCode', name:'ProductCode', width:'12%',pinnedLeft:true },
                { field: 'ProductName', name:'ProductName', width:'18%',pinnedLeft:true },
                { field: 'MUnit', name:'Unit', width:'8%', cellClass:'text-center'  },
                { field: 'OpeningQty', name:'OpeningQty', width:'10%', cellFilter:'number:2', cellClass:'text-right' },
                { field: 'InQty', name:'InQty', width:'10%', cellFilter:'number:2', cellClass:'text-right' },
                { field: 'OutQty', name:'OutQty', width:'10%', cellFilter:'number:2', cellClass:'text-right' },
                { field: 'ClosingQty', name:'ClosingQty', width:'10%', cellFilter:'number:2', cellClass:'text-right' },
                { field: 'Currency', name:'Currency', width:'8%', cellClass:'text-center'},
                { field: 'OpeningValue', name:'OpeningValue',visible: $scope.RateView, width:'10%', cellFilter:'number:2', cellClass:'text-right' },
                { field: 'InValue', name:'InValue', visible: $scope.RateView, width:'10%', cellFilter:'number:2', cellClass:'text-right' },
                { field: 'OutValue', name:'OutValue',visible: $scope.RateView, width:'10%', cellFilter:'number:2', cellClass:'text-right' },
                { field: 'ClosingValue', name:'ClosingValue',visible: $scope.RateView, width:'10%' , cellFilter:'number:2', cellClass:'text-right'},
            ],
            data: oInventoryTrakingList,
            onRegisterApi : function(gridApi)
            {
                debugger;
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.selection.selectRow($scope.gridOptions.data[userSession.getRowIndex()]);
                userSession.clear();
            }
        };
        
        $scope.SeachString='';
        $scope.BusinessUnits=oBusinessUnits;
        $scope.BUID=nBUID;
        $scope.CompareOperators=oCompareOperators;
        $scope.initializeDatepicker  =function(){
            $('.date-container').datepicker({
                format: "dd M yyyy",
                calendarWeeks: true,
                autoclose: true,
                todayHighlight: true
            });

            $scope.dtStart=$scope.dtEnd=icsdatetimeformat(new Date());
            $scope.EndDateDisabled = true;
        };
        $scope.DateChange = function () 
        {
            if($scope.cboDate==5)
                $scope.EndDateDisabled = false;
            else
             $scope.EndDateDisabled = true;
        }

        $scope.RemoveStore = function ()
        {
            debugger;
            $scope.txtStore="";
            $scope.WorkingUnitIDs="";
        };
        $scope.PickStore= function (txtStoreName)
        {
            debugger;
            var oStore = {
                LocationName:txtStoreName,
                BUID:nBUID
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/WorkingUnit/GetsBUWiseWorkingUnit',$.param(oStore), config).then(
                        function (response)
                        {
                            var oColumns = [];debugger;
                            var oColumn = { field: 'WorkingUnitName', name: 'Store Name',width: '80%'  };oColumns.push(oColumn);
                            var results=jQuery.parseJSON(response.data);
                            var modalObj={
                                size:'md',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:true,
                                pickertitle:'Store List',
                                searchingbyfieldName:'WorkingUnitName',
                                columns:oColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                debugger;
                                if(result.length==1)
                                {
                                    $scope.txtStoreName=result[0].WorkingUnitName;
                                    $scope.WorkingUnitIDs=result[0].WorkingUnitID;
                                }
                                else if(result.length>1)
                                {
                                    $scope.txtStoreName=result.length+' Item(s) Selected';
                                    $scope.WorkingUnitIDs=result[0].WorkingUnitID;
                                    for(var i=1;i<result.length;i++)
                                    {
                                        $scope.WorkingUnitIDs+=','+result[i].WorkingUnitID;
                                    }
                                }
                                
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );
        };
        $scope.SearchKeyDownStore = function (e) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtStoreName = $.trim($scope.txtStoreName);
                if(txtStoreName=="" || txtStoreName==null)
                {
                    alert("Type Store Name and Press Enter");
                    return;
                }
                $scope.PickStore(txtStoreName);
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtStoreName='';
            }
        };

        $scope.Validate=function()
        {
            if($scope.BUID==undefined ||$scope.BUID =="")
            {
                alert("Please Select Business Unit !");  return false;
            }
            else if($scope.cboDate==undefined || $scope.cboDate==0)
            {
                alert('Please Select Date Criteria !'); return false;
            } 
            else if($scope.WorkingUnitIDs==undefined ||$scope.WorkingUnitIDs =="")
            {
                alert("Please Select Sotre !");  return false;
            }
            return true;
        }

        $scope.AdvanceSearch=function()
        { 
            if(!$scope.Validate())return;

            var oColumns = [];
            var oColumn = { field: 'WorkingUnitName', name: 'Store Name',width: '80%'  };oColumns.push(oColumn);

            if($scope.cboDate!=5)
                $scope.dtEnd=$scope.dtStart;

            var nProductCategoryID=0;
            var nCategoryID = $('#cboProductCategory').combotree('getValue');
            if(nCategoryID !=null)
            {
                nProductCategoryID=nCategoryID;
            }
            var oStore=
                {
                    BUID : nBUID,
                    StartDate : $scope.dtStart,
                    EndDate : $scope.dtEnd,
                    WUName : $scope.WorkingUnitIDs,
                    ProductID : parseInt(nProductCategoryID) //here ProductID use for ProductCategoryID
                };
            $scope.SeachString= nBUID+'~'+$scope.dtStart+'~'+$scope.dtEnd+'~'+$scope.WorkingUnitIDs+'~'+parseInt(nProductCategoryID);

            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress + '/InventoryTraking/GetTrackingDetails',$.param(oStore), config).then(
                       function (response)
                       {
                           var results=response.data;debugger;
                           if(results==null || results.length<=0)
                           {
                               alert('No Data Found!');return;
                           }
                           else $scope.gridOptions.data=results;
                       },
                           function (response) { alert(jQuery.parseJSON(response.data).Message);}
                   );
        };
        
        $scope.PrintPreview = function ()
        {
            debugger;
            var oInventoryTraking = $scope.gridApi.selection.getSelectedRows()[0];
            if(oInventoryTraking==null || oInventoryTraking.InventoryTrakingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/InventoryTraking/PrintInventoryTrakingPreview?id='+oInventoryTraking.InventoryTrakingID);
        };
        $scope.PrintPreviewXL = function ()
        {
            debugger;
            if($scope.SeachString=="")
            {
                if(!$scope.Validate())return;
                var nProductCategoryID=0;
                var nCategoryID = $('#cboProductCategory').combotree('getValue');
                if(nCategoryID !=null)
                {
                    nProductCategoryID=nCategoryID;
                }
                $scope.SeachString= nBUID+'~'+$scope.dtStart+'~'+$scope.dtEnd+'~'+$scope.WorkingUnitIDs+'~'+nProductCategoryID;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/InventoryTraking/ExportToExcel_ITReport?sTempString='+$scope.SeachString);            
        };      
        
        

    });
</script>
