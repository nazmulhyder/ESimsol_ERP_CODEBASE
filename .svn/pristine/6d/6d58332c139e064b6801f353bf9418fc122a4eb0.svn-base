<!DOCTYPE HTML>
<html>
<head>
    <title>Salary Structure</title>
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
</head>
<body>
    @model ESimSol.BusinessObjects.EmployeeSalaryStructure
    <div style="font-family: Tahoma">
        <table border="0" cellspacing="2" cellpadding="2">
            <tr>
                <td style="background-color: #cfb53b; text-align: center; width: 895px; color: White">
                    <label id="lblHeaderName" style="font-size: 15px; font-weight: bold; text-decoration: Underline">Salary Structure</label>
                </td>
            </tr>
        </table>
        <fieldset>
            <legend style="font-weight: bold">Salary Structure Information </legend>@* main table for upper Portion*@
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; ">
                <tr>
                    <td>
                        @*table1*@
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;
                            margin-top: 1px">
                            <tr>
                                <td style="width: 130px; text-align: right"> </td>
                                <td style="width: 200px; text-align: right">
                                    <input type="button" id="btnCopyFromOtherStructure" value="Copy From Other Structure" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 130px; text-align: right">Employee :</td>
                                <td style="width: 200px">
                                    <input type="text" disabled="disabled" style="width: 150px" id="txtEmployee" />
                                    <input type="button" style="width: 45px;" value="Pick" id="btnEmployee" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    Types Of Employee :
                                </td>
                                <td style="width: 200px;">
                                    <input type="text" disabled="disabled" style="width: 200px;" id="txtTypesOfEmployee" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    @*Nature Of Employee :*@
                                </td>
                                <td style="width: 200px">
                                    @*                                    <input type="text" style="width: 200px" disabled="disabled" id="txtNatureOfEmployee"/>
                                    *@
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    Scheme :
                                </td>
                                <td style="width: 200px">
                                    <input type="text" style="width: 150px" disabled="disabled" id="txtScheme" />
                                    <input type="button" style="width: 45px;" value="Pick" id="btnScheme" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    Payment Cycle :
                                </td>
                                <td style="width: 200px">
                                    <input type="text" style="width: 200px" disabled="disabled" id="txtPaymentCycle" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    Description :
                                </td>
                                <td style="width: 200px">
                                    <input type="text" style="width: 200px" id="txtDescription" />
                                </td>
                            </tr>
                        </table>
                        @* end table1*@
                    </td>
                    <td>
                        @*table2*@
                        <table style="margin-left: 30px; margin-top: 20px;font-size: 11px; font-weight: bold;">
                            <tr>
                                <td>
                                    Gross Salary :
                                </td>
                                <td>
                                    <input type="text" style="width: 80px;" id="txtGrossSalary" />BDT
                                </td>
                                <td></td>
                                <td>
                                    <input type="button" id="btnSetStructure" value="Set Structure" onclick="SetStructure()" />
                                    <input type="button" id="btnResetStructure" value="Reset Structure" onclick="ResetStructure()" />

                                </td>
                            </tr>
                        </table>
                        @*end table2*@ @*table3*@
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; margin-left: 30px; font-size: 11px; ">
                            <tr>
                                <td>
                                    @*grid1*@
                                    <table id="tblSalarySchemeDetailBasic" class="easyui-datagrid" style="width: 450px;
                                        height: 155px; font-size: 11px;" fitcolumns="false" pagination="false" toolbar="#toolbar"
                                           singleselect="true" autorowheight="false" data-options="singleSelect: false, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false, toolbar: '#toolbar1', onClickRow: onClickRow">
                                        <thead>
                                            <tr>
                                                <th field="SalaryHeadName" width="100" align="left">
                                                    Salary Head
                                                </th>
                                                @*<th field="Calculation" width="225" align="center" style="text-align: center">*@
                                                <th data-options="field:'Calculation',width:225,align:'right',editor:{type:'numberbox',options:{precision:0}}"
                                                    align="center">
                                                    Equation
                                                </th>

                                                <th field="Amount" width="90" align="right" formatter="formatPrice">
                                                    Total Amount
                                                </th>
                                            </tr>
                                        </thead>
                                    </table>
                                </td>
                            </tr>
                        </table>
                        @*end table3*@
                        @*table4*@
                        <table style="margin-left: 30px;">
                            <tr>
                                <td style="width: 100px;">
                                    Total :
                                </td>
                                <td style="width: 80px; text-align: right;">
                                    <label id="lblTotalPercent" style="text-align: right; width: 125px;">
                                    </label>
                                </td>
                                <td style="width: 90px; text-align: right;">
                                    @*<label id="lblTotalAmount" style="text-align: right; width: 95px;">
                                        </label>*@


                                </td>
                                <td style="width: 165px; text-align: right;">
                                    <label id="lblTotal" style="text-align: right; width: 130px;">
                                    </label>

                                </td>
                            </tr>
                        </table>
                        @*end table4*@
                    </td>
                </tr>
            </table>
            @* end main table for upper Portion*@
            @*table for under portion*@
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; margin-left: 140px">
                <tr>
                    <td style="font-weight: bold;">
                        Allowance
                    </td>
                </tr>
                <tr>
                    <td>
                        <table id="tblSalarySchemeDetailAllowance" class="easyui-datagrid" style="width: 690px;
                            height: 150px; font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false"
                               singleselect="true" autorowheight="true">
                            <thead>
                                <tr>
                                    <th field="AllowanceName" width="105" align="left">
                                        Allowance
                                    </th>
                                    <th field="AllowanceValueInString" width="100" align="left" style="text-align: right">
                                        Value
                                    </th>
                                    <th field="PeriodInString" width="125" align="left">
                                        Period
                                    </th>
                                    <th field="ConditionInString" width="110" align="left">
                                        Condition
                                    </th>
                                    <th field="ActivationAfterInString" width="120" align="left">
                                        Activation After
                                    </th>
                                    <th field="Amount" width="95" align="right" formatter="formatPrice">
                                        Total Amount
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </td>
                </tr>
            </table>
            <table style="margin-left: 140px; font-size: 11px; font-weight: bold;">
                <tr>
                    <td style="width:250px;">
                        <input type="checkbox" id="chkAllowBankAdvice" disabled="disabled" />Allow Bank Advice
                        <input type="checkbox" id="chkAllowOverTime" disabled="disabled" />Allow Over Time&nbsp;
                    </td>
                    <td id="tdforchkAllowOverTime" style="width:300px;">
                        <label id="lblAllowOverTime"></label>

                    </td>
                    <td style="width:130px; text-align:right">
                        Total:&nbsp;
                        <label id="lblTotalValue"></label>

                    </td>

                </tr>
            </table>
            <table style="margin-left: 140px; font-size: 11px; font-weight: bold;">
                <tr>
                    <td style="width: 450px">
                        <input id="chkProductionBase" type="checkbox" disabled="disabled" />Production Base
                    </td>

                </tr>
                <tr>
                    <td style="width: 450px">
                        <input id="chkAttendanceDependent" type="checkbox" disabled="disabled" />Attendance Dependent
                    </td>

                </tr>
                <tbody id="tbdAttendanceDependent">
                    <tr>
                        <td style="width: 450px">
                            One Day Basic Salary Deduction For
                            <input id="txtLateCount" type="text" style="width:85px" /> Days Late
                        </td>
                    </tr>

                    <tr>
                        <td style="width: 450px">
                            One Day Basic Salary Deduction For
                            <input id="txtEarlyLeavingCount" type="text" style="width:85px" /> Days EarlyLeaving
                        </td>
                    </tr>
                </tbody>
            </table>
        </fieldset>
        <fieldset>
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                <tr>
                    <td style="width: 690px"></td>
                    <td style="width: 50px">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    </td>
                    <td style="width: 50px">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">

    var _oSalaryStructure=null;
    var _sBaseAddress="";
    var _oEmployee=null;
    var _oSalaryScheme=null;
    var _oBasicSalarySchemeDetails=[];
    var _oAllowanceSalarySchemeDetails=[];
    var _nFixedAmount=0;
    var _nTotal=0;
    var _obj = null;
    var _nEmployeeID = 0;
    var _nEmployeeTypeName = "";

    $(document).ready(function ()
    {
        _oSalaryStructure = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));

        _obj = window.dialogArguments;
        document.getElementById("lblAllowOverTime").style.display = 'none';
        document.getElementById("tbdAttendanceDependent").style.display = 'none';
        document.getElementById('lblHeaderName').innerHTML = _obj.Name;
        $('#txtGrossSalary').numberbox();

        if(_obj.Name=="Edit Salary Structure")
        {
            SetControl(_oSalaryStructure);
            _nEmployeeID = _oSalaryStructure.EmployeeID;
            _nEmployeeTypeName = _oSalaryStructure.EmployeeTypeName;
            GetsalarySchemeByID(_oSalaryStructure.SalarySchemeID);

        }
        if(_obj.Name=="Preview Salary Structure")
        {
            SetControl(_oSalaryStructure);
            document.getElementById('txtDescription').disabled = true;
            document.getElementById('txtGrossSalary').disabled = true;

            document.getElementById("btnSetStructure").style.display = 'none';
            document.getElementById("btnCopyFromOtherStructure").style.display = 'none';
            document.getElementById("btnSave").style.display = 'none';
            document.getElementById('btnEmployee').disabled = true;
            document.getElementById('btnScheme').disabled = true;
            LoadSalaryStructureDetail(_oSalaryStructure);
        }
    });

    function SetControl(_oSalaryStructure)
    {

        document.getElementById("txtEmployee").value=_oSalaryStructure.EmployeeName;
        document.getElementById("txtTypesOfEmployee").value=_oSalaryStructure.EmployeeTypeName;
        document.getElementById("txtScheme").value=_oSalaryStructure.SalarySchemeName;
        document.getElementById("txtPaymentCycle").value=_oSalaryStructure.PaymentCycleInString;
        document.getElementById("txtDescription").value=_oSalaryStructure.Description;
        $('#txtGrossSalary').numberbox('setValue',_oSalaryStructure.GrossAmount);
        //document.getElementById("txtGrossSalary").value=_oSalaryStructure.GrossAmount;

        document.getElementById("chkProductionBase").checked=_oSalaryStructure.IsProductionBase;
        if(_oSalaryStructure.IsAttendanceDependant==true)
        {

            document.getElementById("chkAttendanceDependent").checked=_oSalaryStructure.IsAttendanceDependant;
            document.getElementById("tbdAttendanceDependent").style.display = '';
            document.getElementById("txtLateCount").disabled=true;
            document.getElementById("txtEarlyLeavingCount").disabled=true;
            document.getElementById("txtLateCount").value=_oSalaryStructure.LateCount;
            document.getElementById("txtEarlyLeavingCount").value=_oSalaryStructure.EarlyLeavingCount;
            window.resizeTo(890,745);
        }


    }

    $('#btnEmployee').click(function (e)
    {
        var oParameter = new Object();
        oParameter.Name = "Employee Advance Search";
        oParameter.MultipleItemReturn=false;
        var url = _sBaseAddress + "/Employee/EmployeeHRMPiker";
        //_oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:510px;dialogWidth:1000px;dialogLeft:50;dialogRight:50;dialogTop:50;center:yes;resizable:yes;status:no;scroll:no');
        var nLeft=(window.screen.width/2)-(1000/2);
        var nHeight=(window.screen.height/2)-(530/2);
        _oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:530px;dialogWidth:1000px;dialogLeft:'+nLeft+';dialogTop:'+nHeight+';center:yes;resizable:no;status:no;scroll:yes');
        if(_oEmployee!=null)
        {
            if (_oEmployee.EmployeeTypeID<=0)
            {
                alert('Official Information is not assigned yet.\nAssign Official Information to this employee.!!');
                _oEmployee=null;
                return;
            }
            $("#txtEmployee")[0].value=_oEmployee.Name;
            $("#txtTypesOfEmployee")[0].value=_oEmployee.EmployeeTypeName;
            _nEmployeeID = _oEmployee.EmployeeID;
            _nEmployeeTypeName = _oEmployee.EmployeeTypeName;
        }
    });

    function formatPrice(val)
    {

        if(val==null)
        {
            val=0.00;
        }
        val=parseFloat(val);
        var test = val.toFixed(2);
        var tests = addComma(test);
        return tests;
    }

    function addComma(nStr)
    {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var process = /(\d+)(\d{3})/;
        while (process.test(x1))
        {
            x1 = x1.replace(process, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }


    $('#btnScheme').click(function (e)
    {

        if( $("#txtEmployee")[0].value=="")
        {
            alert("Please Select Employee!");
            return;
        }

        var oParameter = new Object();
        oParameter.Name = " Search salary Scheme ";
        oParameter.MultipleItemReturn=false;
        var tsv = ((new Date()).getTime()) / 1000;
        var url = _sBaseAddress + "/SalaryScheme/AdvanceSearch?ts=" + tsv;
        _oSalaryScheme = window.showModalDialog(url, oParameter, 'dialogHeight:380px;dialogWidth:890px;dialogLeft:50;dialogRight:50;dialogTop:100;center:yes;resizable:yes;status:no;scroll:no');
        if(_oSalaryScheme!=null)
        {
            if(_nEmployeeTypeName!=_oSalaryScheme.EmployeeTypeName)
            {
                alert("Please Select a Scheme for "+_oEmployee.EmployeeTypeName);
                return;
            }
            if(_oSalaryScheme.IsActive==false)
            {
                alert("Please Select An Active Scheme");
                return;
            }

            $("#txtScheme")[0].value=_oSalaryScheme.Name;
            $("#txtPaymentCycle")[0].value=_oSalaryScheme.PaymentCycleInString;
            GetsalarySchemeByID(_oSalaryScheme.SalarySchemeID);


        }
    });

    function GetsalarySchemeByID(nSId)
    {
        if (nSId > 0)
        {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/SalaryScheme/CopyFromOtherGrade",
                data: { nId: nSId},
                contentType: "application/json; charset=utf-8",
                success: function(data)
                {

                    _oSalaryScheme = jQuery.parseJSON(data);
                    if (_oSalaryScheme != null)
                    {


                        LoadSalaryStructure(_oSalaryScheme);
                        if(_oSalaryScheme.IsAttendanceDependant == true)
                        {
                            window.resizeTo(890,735);
                        }
                    }
                    else
                    {
                        alert(_oSalaryScheme.ErrorMessage);
                    }
                },
                error: function(xhr, status, error)
                {
                    alert(error);
                }
            });
        }

    }

    function LoadSalaryStructure(oSalaryScheme)
    {

        _oBasicSalarySchemeDetails=[];
        _oAllowanceSalarySchemeDetails=[];
        document.getElementById("chkAllowBankAdvice").checked=oSalaryScheme.IsAllowBankAccount;
        document.getElementById("chkAllowOverTime").checked=oSalaryScheme.IsAllowOverTime;
        document.getElementById("chkProductionBase").checked=oSalaryScheme.IsProductionBase;

        if(oSalaryScheme.IsAllowOverTime==true)
        {
            document.getElementById("lblAllowOverTime").style.display = '';
            document.getElementById("lblAllowOverTime").innerHTML ="[Over Time Value : Over Time Hour*("+oSalaryScheme.OverTimeONInString+"/"+oSalaryScheme.DividedBy+")*"+oSalaryScheme.MultiplicationBy+"]"
        }

        if(oSalaryScheme.IsAttendanceDependant==true)
        {

            document.getElementById("chkAttendanceDependent").checked=oSalaryScheme.IsAttendanceDependant;
            document.getElementById("tbdAttendanceDependent").style.display = '';
            document.getElementById("txtLateCount").disabled=true;
            document.getElementById("txtEarlyLeavingCount").disabled=true;
            document.getElementById("txtLateCount").value=oSalaryScheme.LateCount;
            document.getElementById("txtEarlyLeavingCount").value=oSalaryScheme.EarlyLeavingCount;
            window.resizeTo(880,725);
        }

        for(var i=0;i<oSalaryScheme.SalarySchemeDetails.length;i++)
        {

            if(oSalaryScheme.SalarySchemeDetails[i].SalaryHeadType==1 )
            {
                debugger
                //            var TempSSD = TempObject(oSalaryScheme.SalarySchemeDetails[i]);
                //            _oBasicSalarySchemeDetails.push(TempSSD);
                _oBasicSalarySchemeDetails.push(oSalaryScheme.SalarySchemeDetails[i]);
            }
            else if(oSalaryScheme.SalarySchemeDetails[i].SalaryHeadType!=1)
            {
                _oAllowanceSalarySchemeDetails.push(oSalaryScheme.SalarySchemeDetails[i]);
            }
        }

        RefreshListForSalaryHeadOfBasicType(_oBasicSalarySchemeDetails);
        RefreshListForSalaryHeadOfAllowanceType(_oAllowanceSalarySchemeDetails);
        if(_obj.Name=="Edit Salary Structure")
        {
            SetStructure();
        }

    }

    //function TempObject(SSD)
    //{
    //debugger
    //    var TempSSD =
    //    {
    //        SalarySchemeDetailID : SSD.SalarySchemeDetailID,
    //        SalarySchemeID : SSD.SalarySchemeID,
    //        SalaryHeadID : SSD.SalaryHeadID,
    //        IsFixedBasic : SSD.IsFixedBasic,
    //        BasicValue : SSD.BasicValue,
    //        AllowanceCalculationOn : SSD.AllowanceCalculationOn,
    //        AllowanceValue : SSD.AllowanceValue,
    //        CalculateOnSalaryHeadID : SSD.CalculateOnSalaryHeadID,
    //        Condition : SSD.Condition,
    //        Period : SSD.Period,
    //        Times : SSD.Times,
    //        DeferredDay : SSD.DeferredDay,
    //        ActivationAfter : SSD.ActivationAfter,
    //        SalaryHeadName : SSD.SalaryHeadName,
    //        Calculation : SSD.Calculation
    //    }
    //    return TempSSD;
    //}

    function LoadSalaryStructureDetail(_oSalaryStructure)
    {


        var oNewBasicSalarySchemeDetails=[];
        var oNewAllowanceSalarySchemeDetails=[];

        var nAmount=0;
        var nAAmount=0;
        document.getElementById("chkAllowBankAdvice").checked=_oSalaryStructure.IsAllowBankAccount;
        document.getElementById("chkAllowOverTime").checked=_oSalaryStructure.IsAllowOverTime;

        if(_oSalaryStructure.IsAllowOverTime==true)
        {
            document.getElementById("lblAllowOverTime").style.display = '';
            document.getElementById("lblAllowOverTime").innerHTML ="[Over Time Value : Over Time Hour*("+_oSalaryStructure.OverTimeONInString+"/"+_oSalaryStructure.DividedBy+")*"+_oSalaryStructure.MultiplicationBy+"]"

        }

        for(var i=0;i<_oSalaryStructure.EmployeeSalaryStructureDetails.length;i++)
        {

            if(_oSalaryStructure.EmployeeSalaryStructureDetails[i].SalaryHeadType==1)
            {
                oNewBasicSalarySchemeDetails.push(_oSalaryStructure.EmployeeSalaryStructureDetails[i]);
                nAmount=nAmount+_oSalaryStructure.EmployeeSalaryStructureDetails[i].Amount;
            }
            else if(_oSalaryStructure.EmployeeSalaryStructureDetails[i].SalaryHeadType!=1)
            {
                oNewAllowanceSalarySchemeDetails.push(_oSalaryStructure.EmployeeSalaryStructureDetails[i]);
                nAAmount=nAAmount+_oSalaryStructure.EmployeeSalaryStructureDetails[i].Amount;
            }
        }
        _nTotal = nAmount;
        RefreshListForSalaryHeadOfBasicType(oNewBasicSalarySchemeDetails);
        RefreshListForSalaryHeadOfAllowanceType(oNewAllowanceSalarySchemeDetails);
        document.getElementById("lblTotal").innerHTML =formatPrice(nAmount);
        document.getElementById("lblTotalValue").innerHTML =formatPrice(nAAmount);

    }


    function RefreshListForSalaryHeadOfBasicType(oSalaryHeadNames)
    {

        data = oSalaryHeadNames;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblSalarySchemeDetailBasic').datagrid('loadData', data);
    }

    function RefreshListForSalaryHeadOfAllowanceType(oSalaryHeadNames)
    {

        data = oSalaryHeadNames;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblSalarySchemeDetailAllowance').datagrid('loadData', data);
    }


    function  SetStructure()
    {
        endEditing();
        if($("#txtScheme").val()=="")
        {
            alert("Please Enter Scheme Name !");
            $("#txtScheme").focus();
            return ;
        }
        if($("#txtGrossSalary").val()=="")
        {
            alert("Please Enter Gross salary ! ");
            $("#txtGrossSalary").focus();
            return ;
        }

        CalcutionBasicTypeSalaryHead();
        CalcutionAllowance();

    }

    var bBracketStart=false;
    var bBracketEnd=false;


    function CalcutionBasicTypeSalaryHead()
    {
        var oSalarySchemeDetailCalculations= [];
        var oSalarySchemeDetails=[];
        var nGross=0;
        var nTotal = 0;
        var nIndex = 0;

        oSalarySchemeDetailCalculations =_oSalaryScheme.SalarySchemeDetailCalculations;
        oSalarySchemeDetails = NewSSDetail();
        nGross = $("#txtGrossSalary").val();


        for(var i=0 ; i< oSalarySchemeDetails.length ; i++)
        {

            var nTotalPerSHead=0;
            var nOperator=0;
            bBracketStart=false;
            bBracketEnd=false;
            var nOperator = 3;
            var nPercentvalue = 0;
            var bFlag = false;

            if(oSalarySchemeDetails[i].SalaryHeadTypeInt == 1 )
            {

                if(oSalarySchemeDetails[i].Calculation>0)
                {
                    nTotalPerSHead = parseFloat(oSalarySchemeDetails[i].Calculation);
                }
                else
                {
                    debugger;
                    for(var j=0 ; j< oSalarySchemeDetailCalculations.length ; j++)
                    {

                        if(oSalarySchemeDetails[i].SalarySchemeDetailID == oSalarySchemeDetailCalculations[j].SalarySchemeDetailID)
                        {
                            if(oSalarySchemeDetailCalculations[j].ValueOperator == 1)
                            {

                                if(oSalarySchemeDetailCalculations[j].CalculationOn == 1)
                                {

                                    if(!bFlag && nOperator == 7)
                                    {
                                        nTotalPerSHead = 0;
                                        oSalarySchemeDetailCalculations[j].PercentValue = nPercentvalue;
                                        nIndex = j;
                                        nTotalPerSHead = GetSSDcalculation(nTotalPerSHead,nOperator,oSalarySchemeDetails,oSalarySchemeDetailCalculations,nIndex);

                                    }
                                    else
                                    {
                                        nIndex = j;
                                        nTotalPerSHead = nGross;
                                        oSalarySchemeDetailCalculations[j].PercentValue = nPercentvalue;
                                        nTotalPerSHead = GetSSDcalculation(nTotalPerSHead,nOperator,oSalarySchemeDetails,oSalarySchemeDetailCalculations,nIndex);


                                    }

                                }

                                else if(oSalarySchemeDetailCalculations[j].CalculationOn == 2)
                                {
                                    oSalarySchemeDetailCalculations[j].PercentValue = nPercentvalue;
                                    nIndex = j;
                                    nTotalPerSHead = GetSSDcalculation(nTotalPerSHead,nOperator,oSalarySchemeDetails,oSalarySchemeDetailCalculations, nIndex);

                                }

                                else if(oSalarySchemeDetailCalculations[j].CalculationOn == 3)
                                {


                                    nIndex = j;
                                    nTotalPerSHead = GetSSDcalculation(nTotalPerSHead,nOperator,oSalarySchemeDetails,oSalarySchemeDetailCalculations,nIndex);


                                }

                            }

                            else if(oSalarySchemeDetailCalculations[j].ValueOperator == 2)
                            {
                                if(oSalarySchemeDetailCalculations[j].Operator==1)
                                {

                                    bBracketStart=true;
                                }

                                else if(oSalarySchemeDetailCalculations[j].Operator==2)
                                {

                                    bBracketEnd=true;
                                }
                                else if(oSalarySchemeDetailCalculations[j].Operator==3)
                                {
                                    nOperator=3;

                                }
                                else if(oSalarySchemeDetailCalculations[j].Operator==4)
                                {
                                    nOperator= 4;

                                }
                                else if(oSalarySchemeDetailCalculations[j].Operator==5)
                                {

                                    nOperator=5;
                                }

                                else if(oSalarySchemeDetailCalculations[j].Operator==6)
                                {
                                    nOperator = 6;

                                }

                                else if(oSalarySchemeDetailCalculations[j].Operator==7)
                                {
                                    nOperator = 7;
                                    nPercentvalue= oSalarySchemeDetailCalculations[j].PercentVelue;


                                }


                            }

                        }


                    }
                }
                if(oSalarySchemeDetails[i].Amount <=0 || oSalarySchemeDetails[i].Amount == undefined)
                {
                    oSalarySchemeDetails[i].Amount = nTotalPerSHead;
                }

                nTotal = nTotal + nTotalPerSHead;
                bFlag = true;
            }


        }

        _nTotal = nTotal;
        document.getElementById("lblTotal").innerHTML = formatPrice(parseFloat(nTotal));
        RefreshListForSalaryHeadOfBasicType(oSalarySchemeDetails);
    }

    function CalcutionAllowance()
    {
        var oSalarySchemes=$('#tblSalarySchemeDetailBasic').datagrid('getRows');
        var oAllowances=$('#tblSalarySchemeDetailAllowance').datagrid('getRows');
        var nGross=document.getElementById('txtGrossSalary').value;
        var nAdditionTotalVal=0;
        var nDeductionTotalVal=0;

        for(var i=0;i<oAllowances.length;i++)
        {
            if (oAllowances[i].AllowanceCalculationOn==1)
            {
                oAllowances[i].Amount=nGross*oAllowances[i].AllowanceValue/100;
            }
            else if(oAllowances[i].AllowanceCalculationOn==2)
            {
                for(var k=0;k<oSalarySchemes.length;k++)
                {
                    if(oSalarySchemes[k].SalaryHeadID==oAllowances[i].CalculateOnSalaryHeadID)
                    {

                        oAllowances[i].Amount=oAllowances[i].AllowanceValue/100*oSalarySchemes[k].Amount;
                    }
                }
            }
            else
            {
                oAllowances[i].Amount=oAllowances[i].AllowanceValue;
            }
            if(oAllowances[i].SalaryHeadType==2)
            {
                nAdditionTotalVal=nTotalVal+oAllowances[i].Amount;
            }
            else if(oAllowances[i].SalaryHeadType==3)
            {
                nDeductionTotalVal=nTotalVal+oAllowances[i].Amount;
            }

        }

        document.getElementById("lblTotalValue").innerHTML ="Addition:"+ formatPrice(nAdditionTotalVal)+",Deduction:"+formatPrice(nDeductionTotalVal);
        RefreshListForSalaryHeadOfAllowanceType(oAllowances);
    }

    function ValidateInput()
    {

        if($("#txtEmployee").val()=="")
        {
            alert("Please Enter Employee!!");
            return false;
        }
        if($("#txtScheme").val()=="")
        {
            alert("Please Enter A Scheme!!");
            return false;
        }
        var nGsalary=$("#txtGrossSalary").val();


        if(nGsalary=="")
        {
            alert("Please Enter Gross Salary!!");
            return false;
        }
        if(_nTotal== 0)
        {
            alert("Please Set The Salary Structure!!");
            return false;
        }

        //    if(_nTotal!=nGsalary)
        //    {
        //        alert("Total Amount must be equal to Gross Salary ! ");
        //        return false;
        //    }

        return true;
    }

    function RefreshObject()
    {

        var oSalaryStructureDetail=[];
        var oBasicTypeDetails = $('#tblSalarySchemeDetailBasic').datagrid('getRows');
        var oAllowanceTypeDetails = $('#tblSalarySchemeDetailAllowance').datagrid('getRows');

        for(var i=0;i<oBasicTypeDetails.length;i++)
        {

            if(_oSalaryStructure.EmployeeSalaryStructureDetails !=null )
            {
                for(var j=0;j<_oSalaryStructure.EmployeeSalaryStructureDetails.length;j++)
                {
                    if(oBasicTypeDetails[i].SalaryHeadID == _oSalaryStructure.EmployeeSalaryStructureDetails[j].SalaryHeadID)
                    {
                        oBasicTypeDetails[i].ESSSID = _oSalaryStructure.EmployeeSalaryStructureDetails[j].ESSSID;
                    }
                }
            }
            oSalaryStructureDetail.push(oBasicTypeDetails[i]);
        }
        for(var i=0;i<oAllowanceTypeDetails.length;i++)
        {
            oSalaryStructureDetail.push(oAllowanceTypeDetails[i]);
        }

        var nActualGrossAmount=0;
        var nGrossAmount=0;
        nGrossAmount=$("#txtGrossSalary").val();
        //     if(document.getElementById("chkIncludeFixedItem").checked==false)
        //     {
        //        //;
        //        nActualGrossAmount=parseFloat(nGrossAmount)+parseFloat(_nFixedAmount);
        //        nActualGrossAmount = parseFloat(nActualGrossAmount);
        //        bIncludeFixedItem=false;
        //     }
        //     else
        //     {
        //        nActualGrossAmount=nGrossAmount;
        //        bIncludeFixedItem=true;
        //     }

        var oSalaryStructure =
        {
            ESSID :_oSalaryStructure.ESSID,
            EmployeeID:_nEmployeeID,
            SalarySchemeID:_oSalaryScheme.SalarySchemeID,
            Description:$("#txtDescription").val(),
            GrossAmount:nGrossAmount,
            IsIncludeFixedItem:false,
            ActualGrossAmount:nGrossAmount,
            CurrencyID:1,//may be changed !
            EmployeeSalaryStructureDetails:oSalaryStructureDetail
        };

        return oSalaryStructure;
    }

    $('#btnSave').click(function (e)
    {

        if (!ValidateInput()) return;
        var oEmployeeSalaryStructure = RefreshObject();

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EmployeeSalaryStructure/EmployeeSalaryStructure_IU",
            traditional: true,
            data: JSON.stringify(oEmployeeSalaryStructure),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {

                oEmployeeSalaryStructure = jQuery.parseJSON(data);
                if (oEmployeeSalaryStructure.ErrorMessage == "")
                {
                    alert("Data Saved sucessfully");
                    window.returnValue = oEmployeeSalaryStructure;
                    window.close();
                }
                else
                {
                    alert(oEmployeeSalaryStructure.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $('#btnCopyFromOtherStructure').click(function (e)
    {
        var oParameter = new Object();
        oParameter.Name = "Employee Advance Search";
        oParameter.MultipleItemReturn=false;
        var url = _sBaseAddress + "/Employee/EmployeeHRMPiker";
        var nLeft=(window.screen.width/2)-(1000/2);
        var nHeight=(window.screen.height/2)-(500/2);
        _oEmployee= window.showModalDialog(url, oParameter, 'dialogHeight:500px;dialogWidth:1000px;dialogLeft:'+nLeft+';dialogTop:'+nHeight+';center:yes;resizable:no;status:no;scroll:yes');
        //_oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:500px;dialogWidth:930px;dialogLeft:50;dialogRight:50;dialogTop:50;center:yes;resizable:yes;status:no;scroll:no');
        if(_oEmployee!=null)
        {
            if (_oEmployee.EmployeeID > 0)
            {
                var tsv = ((new Date()).getTime()) / 1000;
                $.ajax({
                    type: "GET",
                    dataType: "json",
                    url: _sBaseAddress + "/EmployeeSalaryStructure/CopyFromOtherStructure",
                    data: { nId: _oEmployee.EmployeeID,ts: tsv},
                    contentType: "application/json; charset=utf-8",
                    success: function(data)
                    {

                        var osalaryStructure = jQuery.parseJSON(data);
                        if (osalaryStructure.ESSID <=0)
                        {
                            alert("This Employee has not assigned any salary structure. Please select an employee who has already assigned salary structure !");
                            return;
                        }
                        else
                        {
                            osalaryStructure.ESSID=0;
                            for(var i=0;i<osalaryStructure.EmployeeSalaryStructureDetails.length;i++)
                            {
                                osalaryStructure.EmployeeSalaryStructureDetails[i].ESSSID=0;
                            }
                            osalaryStructure.EmployeeID=0;
                            osalaryStructure.SalarySchemeID=0;
                            SetControl(osalaryStructure);
                        }
                    }

                });
            }
        }
    });

    function NewSSDetail()
    {

        var oSalarySchemeDetailCalculations =[];
        var oSalarySchemeDetails = [];
        oSalarySchemeDetailCalculations =_oSalaryScheme.SalarySchemeDetailCalculations;
        //    oSalarySchemeDetails = _oSalaryScheme.SalarySchemeDetails;

        oSalarySchemeDetails = $('#tblSalarySchemeDetailBasic').datagrid('getRows');


        var oNewSalarySchemeDetails = [];
        var k=0 ;

        for(var i=0 ; i< oSalarySchemeDetails.length ; i++)
        {
            //        if(oSalarySchemeDetails[i].Calculation > 0)
            //        {
            //           oSalarySchemeDetails[i].Amount =  oSalarySchemeDetails[i].Amount;
            //        }
            //        else
            //        {
            //
            //            oSalarySchemeDetails[i].Amount = 0;
            //        }

            //        var nCount = 0;
            //        for(var j=0 ; j< oSalarySchemeDetailCalculations.length ; j++)
            //        {
            //
            //            if(oSalarySchemeDetails[i].SalarySchemeDetailID == oSalarySchemeDetailCalculations[j].SalarySchemeDetailID)
            //            {
            //                k=j;
            //                nCount++;
            //            }
            //
            //
            //        }
            //        if(nCount == 1)
            //        {
            //            oSalarySchemeDetails[i].Amount=oSalarySchemeDetailCalculations[k].FixedValue;
            //        }


            //=======================

            if(oSalarySchemeDetails[i].Calculation > 0)
            {
                oSalarySchemeDetails[i].Amount =  oSalarySchemeDetails[i].Calculation;
            }
            else
            {

                oSalarySchemeDetails[i].Amount = 0;
            }


            //=======================

            oNewSalarySchemeDetails.push(oSalarySchemeDetails[i]);

        }

        return oNewSalarySchemeDetails;
    }

    function GetSSDcalculation(nTotalPerSHead,nOperator,oSalarySchemeDetails,oSalarySchemeDetailCalculations,nIndex)
    {


        var nSSDCalculation = 0;
        for(var i=0 ; i<oSalarySchemeDetails.length ; i++)
        {
            if(oSalarySchemeDetails[i].SalaryHeadID == oSalarySchemeDetailCalculations[nIndex].SalaryHeadID)
            {
                nSSDCalculation = parseFloat(oSalarySchemeDetails[i].Amount);
                break;

            }
            else if(oSalarySchemeDetailCalculations[nIndex].SalaryHeadID== 0 && oSalarySchemeDetailCalculations[nIndex].FixedValue>0)
            {

                nSSDCalculation = parseFloat(oSalarySchemeDetailCalculations[nIndex].FixedValue);

                break;
            }

            else if(oSalarySchemeDetailCalculations[nIndex].CalculationOn == 1 && oSalarySchemeDetailCalculations[nIndex].SalaryHeadID== 0 && oSalarySchemeDetailCalculations[nIndex].FixedValue == 0 && nOperator == 7)
            {

                nSSDCalculation = parseFloat(document.getElementById("txtGrossSalary").value);
                break;

            }

        }


        if(nOperator == 3)
        {
            nTotalPerSHead = parseFloat(nTotalPerSHead)+ parseFloat(nSSDCalculation);

        }

        if(nOperator == 4)
        {
            nTotalPerSHead = parseFloat(nTotalPerSHead) - parseFloat(nSSDCalculation);

        }

        if(nOperator == 5)
        {

            nTotalPerSHead = parseFloat(nTotalPerSHead) * parseFloat(nSSDCalculation);

        }

        if(nOperator == 6)
        {

            nTotalPerSHead = parseFloat(nTotalPerSHead / nSSDCalculation);

        }

        if(nOperator == 7)
        {
            var nPercentVelue = parseFloat(oSalarySchemeDetailCalculations[nIndex].PercentValue);

            nTotalPerSHead = parseFloat(nTotalPerSHead) + parseFloat(parseFloat(nPercentVelue)/100* parseFloat(nSSDCalculation));

        }


        return nTotalPerSHead;

    }

    function ResetStructure()
    {


        for(var i = 0 ; i <_oBasicSalarySchemeDetails.length ; i++)
        {
            _oBasicSalarySchemeDetails[i].Amount = 0;
        }

        for(var i = 0 ; i <_oAllowanceSalarySchemeDetails.length ; i++)
        {
            _oAllowanceSalarySchemeDetails[i].Amount = 0;
        }

        RefreshListForSalaryHeadOfBasicType(_oBasicSalarySchemeDetails);
        RefreshListForSalaryHeadOfAllowanceType(_oAllowanceSalarySchemeDetails);
        //LoadSalaryStructure(_oSalaryScheme);
        document.getElementById("txtGrossSalary").value = "";
        document.getElementById("lblTotal").innerHTML =formatPrice(0);
        document.getElementById("lblTotalValue").innerHTML =formatPrice(0);
        endEditing();
    }

    //===========

    var editIndex = undefined;
    function endEditing()
    {



        if (editIndex == undefined){return true}
        if ($('#tblSalarySchemeDetailBasic').datagrid('validateRow', editIndex))
        {

            $('#tblSalarySchemeDetailBasic').datagrid('endEdit', editIndex);
            editIndex = undefined;
            return true;

        }
        else
        {
            return false;
        }

    }

    function onClickRow(index)
    {

        var oSSDBasic = $('#tblSalarySchemeDetailBasic').datagrid('getSelected');


        if(oSSDBasic.Calculation > 0)
        {
            if (editIndex != index)
            {
                if (endEditing())
                {
                    $('#tblSalarySchemeDetailBasic').datagrid('selectRow', index).datagrid('beginEdit', index);
                    editIndex = index;

                }
                else
                {
                    $('#tblSalarySchemeDetailBasic').datagrid('selectRow', editIndex);
                }
            }
        }
    }

    //==========


    function Close()
    {
        window.close();
    }

    $(document).keydown(function (e)
    {
        var keyCode = e.keyCode || e.which;
        if (keyCode == 27)
        {
            window.close();
        }
    });
</script>