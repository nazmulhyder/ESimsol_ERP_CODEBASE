<html>
@{
    ViewBag.Title = "Purchase Invoice";
}
<body>
@model ESimSol.BusinessObjects.PurchaseInvoice
    <div id="progbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable" id="divPurchaseInvoice" class="easyui-panel" title="Add  Invoice" style="font-family:Tahoma; height:89%; width:100%; overflow:auto;">
        <div id="divPurchaseInvoiceBasicInfo" style="width:100%;height:40%;text-align:center">
            <fieldset>
                <legend style="font-weight: bold"> Invoice Informations : </legend>
                <table border="0" cellspacing="1" cellpadding="1" style="width:100%;font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:10%; text-align:right">
                            Invoice Type 
                        </td>
                        <td style="width:13%; text-align:left;">
                            <select id="cboInvoiceType" style=" width:100%;height:22px;"></select>
                        </td>
                        <td style="width:7%; text-align:right;">
                            Reference 
                        </td>
                        <td style="width:13%; text-align:left;">                            
                            <select id="cboReferenceType" style="width:100%;height:22px;"><option value="0">--Select Ref Type--</option><option value="1">Open</option><option value="2">SO</option></select>
                        </td>
                        <td style="width:9%; text-align:right;">
                            Invoice Date 
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:96%;" id="txtInvoiceDate" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>  
                        <td style="width:10%; text-align:right">
                            Invoice No 
                        </td>
                        <td style="width:25%; text-align:left;">
                            <input type="text" style="width:100%; text-align:left" id="txtInvoiceNo" disabled="disabled" />
                        </td>                   
                        @*<td style="width:10%; text-align:right;">
                            <label id="lblOrderNo">SO No</label>
                        </td>
                        <td  style="width:25%;">                          
                            <input type="text" style="width:80%; text-align:left" id="txtPONo" />
                            <input type="button" value="Pick" style="width:15%" id="btnPickPO" />
                        </td>*@
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right">
                            Supplier Name 
                        </td>
                        <td colspan="3" style="width:33%; text-align:left;">
                            <input type="text" style="width:82%; text-align:left" id="txtSupplierName" />
                            <input type="button" value="Pick" style="width:15%;float:right;" id="btnPickSupplier" />                            
                        </td>                        
                        <td style="width:9%; text-align:right;">
                            C. Person 
                        </td>
                        <td style="width:13%; text-align:left;">
                            <select id="cboContactPerson" style="width:98%;height:22px;"></select>
                        </td>
                        <td style="width:10%; text-align:right;">
                            Payment Term 
                        </td>
                        <td style="width:25%;">
                            <input type="text" style="width:68%; text-align:left" id="txtPaymentTerm" />
                            <input type="button" id="btnCPTerm" value="C" style="width:10%" />
                            <input type="button" value="Pick" style="width:15%;float:right" id="btnPickPaymentTerm" />
                        </td>
                    </tr>
                    <tr>
                        
                        <td style="width:7%; text-align:right;">
                            Bill No 
                        </td>
                        <td colspan="3" style="width:36%; text-align:left;">
                            <input type="text" style="width:100%; text-align:left" id="txtBILLNo" />
                        </td>
                        @*<td style="width:9%; text-align:right;">
                            SO Date
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:96%;" id="txtPODate" class="easyui-datebox" disabled="disabled" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>*@
                        <td style="width:9%; text-align:right;">
                            Bill  Date
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:96%;" id="txtBillDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                        <td style="width:10%; text-align:right;">
                            Trade Term 
                        </td>
                        <td style="width:25%;">
                            @Html.TextBoxFor(model => model.TradeTerm, new { style = "width: 100%;", id = "txtTradeTerm" })
                        </td>
                        @*<td style="width:25%;">
                            <table border="0" cellspacing="0" cellpadding="0" style="width:98%">
                                <tr>
                                    <td style="width:30%">
                                        <input type="text" style="width:90%; text-align:right" id="txtPOAmount" disabled="disabled" />
                                    </td>
                                    <td style="width:30%; text-align:right;font-size:10px;">
                                        Maturity Date
                                    </td>
                                    <td style="width:40%; text-align:right;">
                                        <input type="text" style="width:101%;" id="txtMaturityDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />                            
                                    </td>
                                </tr>
                            </table>
                        </td>*@
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right">
                            Ship By 
                        </td>
                        <td colspan="3" style="width:33%; text-align:left;">
                            <input type="text" style="width:100%; text-align:left" id="txtShipBy" />
                        </td>
                        @*<td style="width:7%; text-align:right;">
                            Rate On:
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="number" id="txtRateOn" style="width:100%" />
                        </td>*@
                        <td style="width:9%; text-align:right;">
                          Maturity  Date
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:101%;" id="txtMaturityDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />                            
                        </td>
                        <td style="width:10%; text-align:right;">
                            Currency 
                        </td>
                        <td style="width:25%;">
                            <table border="0" cellspacing="0" cellpadding="0" style="width:100%">
                                <tr>
                                    <td style="width:30%">
                                        <select id="cboCurrency" style="width:99%;height:22px;"></select>
                                    </td>                                    
                                    <td style="width:30%; text-align:right">
                                        C. Rate
                                    </td>
                                    <td style="width:40%">                                        
                                        <input type="text" style="width:100%; text-align:left" id="txtConvertionRate"/> 
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align:right; width:10%">
                            Delivery To 
                        </td>
                        <td colspan="3" style="text-align:left; width:33%">
                            @Html.TextBoxFor(model => model.DeliveryToName, new { style = "width:84%;", placeholder = "Type Name & Press Enter", id = "txtDeliveryToName" })
                            <input type="button" value="Pick" id="btnPickDeliveryTo" style="width:14%;float:right;" />
                        </td>
                        <td style="text-align:right; width:9%">
                            C. Person 
                        </td>
                        <td style="text-align:left; width:13%">
                            <table border="0" cellspacing="0" cellpadding="0" width="100%">
                                <tr>
                                    <td style="width:60%; text-align:left">
                                        <select id="cboDeliveryToContactPerson" style="width:100%;height:22px;"></select>
                                    </td>
                                    <td>
                                        <a id="btnLoadDeliveryToContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="ReLoadLoadContactPerson(2)" iconcls="icon-reload" plain="false"></a>
                                    </td>
                                    <td>
                                        <a id="btnNewDeliveryToContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="NewContactPerson(2)" iconcls="icon-add" plain="false"></a>
                                    </td>
                                </tr>
                            </table>
                        </td>

                       
                        <td style="text-align:right; width:10%">
                            Rate On 
                        </td>
                        <td style="width:25%;">
                            <table border="0" cellspacing="0" cellpadding="0" style="width:100%">
                                <tr>
                                    <td style="width:30%">
                                        <input type="number" id="txtRateOn" style="width:100%" />
                                    </td>
                                    <td style="width:30%; text-align:right">
                                        Mode 
                                    </td>
                                    <td style="width:40%">
                                        <select id="cboInvoicePaymentMode" style="width:100%;height:22px;"></select>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>       
                    <tr>
                        <td style="text-align:right; width:10%">
                            Bill To 
                        </td>
                        <td style="text-align:left; width:33%" colspan="3">
                            @Html.TextBoxFor(model => model.BillToName, new { style = "width:84%;", placeholder = "Type Name & Press Enter", id = "txtBillToName" })
                            <input type="button" value="Pick" id="btnPickBillTo" style="width:14%;float:right;"/>
                        </td>
                        <td style="text-align:right; width:9%">
                            C. Person :
                        </td>
                        <td style="text-align:left; width:13%">
                            <table border="0" cellspacing="0" cellpadding="0" width="100%">
                                <tr>
                                    <td style="width:60%; text-align:left">
                                        <select id="cboBIllToContactPerson" style="width:100%;height:22px;"></select>
                                    </td>
                                    <td>
                                        <a id="btnLoadBIllToContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="ReLoadLoadContactPerson(3)" iconcls="icon-reload" plain="false"></a>
                                    </td>  
                                    <td> 
                                        <a id="btnNewBIllToContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="NewContactPerson(3)" iconcls="icon-add" plain="false"></a>
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="text-align:right; width:8%">
                            Remarks 
                        </td>
                        <td style="text-align:left; width:25%">@Html.TextBoxFor(model => model.Note, new { style = "width:100%;", id = "txtNote" })</td>
                    </tr>       
                </table>
            </fieldset>
        </div>
        <div title="Item Description" style="height:50%;width:100%;">
            <table id="tblPurchaseInvoiceDetail" title="Purchase Invoice Detail" class="easyui-datagrid" style="width:100%;height:278px;" fitcolumns="true" singleselect="true" rownumbers="true" pagination="false" autorowheight="false"
                   data-options="toolbar: '#toolbarPurchaseInvoiceDetail',onClickRow:onClickRow "></table>
                <div id="toolbarPurchaseInvoiceDetail" style="width:100%">
                    
                    <label id="lblOrderNo">SO No</label>
                    <input type="text" style="width:15%; text-align:left" id="txtPONo" />
                    <input type="button" value="Pick" id="btnPickPO" />
                    @*<a id="btnPickPO" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>*@
                    
                    <input type="text" id="txtVehicleModel" placeholder="Type Model No & Press Enter" style="width:180px;" /><a id="btnVehicleModel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>
                    
                    <input type="text" id="txtProductName" placeholder="Press enter Part No / Name" style="width:15%" />
                    <a id="btnPickProduct" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>
                    <select id="cboMeasurementUnit" style="width: 10%;height:22px;"></select>
                    <label id="lblQty">Qty :</label><input type="text" id="txtQty" style="width: 10%; text-align:right;" />
                    <label id="lblRate">Rate :</label><input type="text" id="txtUnitPrice" style="width: 10%; text-align:right;" />
                    <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"> Add</a>
                    <a id="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                    <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                    <a id="btnAddSpecification" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Specification </a>
                    &nbsp; &nbsp; &nbsp; <label id="lblAdvanceAmount">Advance Amount : </label> <input type="text" style="width:120px; text-align:right; margin-top:2px" id="txtAdvanceAmount" />
                </div>
                <table id="tblOpenInvoiceTotal" border="0" style="width:100%;" cellpadding="2" cellspacing="2">
                    @*<tr>
                        <td style="width:40%;  text-align:right;font-weight:bold;"></td>
                        <td style="width:10%;  text-align:right;font-weight:bold;">Total:</td>
                        <td style="width:15%; text-align:right; font-weight:bold;"><label id="lblTotalQty">0</label>  </td>
                        <td style="width:20%; text-align:right; font-weight:bold;"> <input type="text" id="txtTotalValue" style="width:34%; text-align:right;float:right;" disabled /></td>
                    </tr>*@
                </table>
            <table style="width: 100%;">
                <tr>
                    <td style="width:30%;">
                        <label id="lblDiscount" style="width:73%; text-align:right;">Discount :</label><input type="text" id="txtDiscount" style="width: 27%; text-align:right;float: right;" />
                    </td>
                    <td style="width:30%;">
                        <label id="lblServiceCharge" style="width:73%;text-align:right;">Ser. Charge :</label><input type="text" id="txtServiceCharge" style="width: 27%; text-align:right;float: right;" />
                    </td>
                    <td style="width:30%;">
                        <label style="width:73%;text-align:right;">Net Amount:</label>
                        <input type="text" id="txtNetAmount" style="width: 27%; text-align:right;float: right;" disabled />
                    </td>
                </tr>
            </table>
                
            </div>
    </div>
    <div style="width:100%; height:20px;">
        <fieldset>
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="0" cellpadding="0" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:70%; text-align:right">
                        <div style="width: 95%;margin: 0 auto;text-align: center;font-size: 15px; float: left;">
                        </div>
                    </td>
                    <td style="width: 20%;text-align:right;">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    </td>
                    <td style="width: 10%;text-align:right;">
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
    <div id="winProcurementSpecification" style=" width:auto" class="easyui-window" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="height: 250px; width:100%;">
            <table id="tblProcurementSpec" class="easyui-datagrid" style="height:250px;width:100%" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" data-options="onClickRow: onClickRowProcurementSpec ,toolbar:'#toolbarPickSpec'">
                <thead>
                    <tr>
                        <th data-options="field:'Selected',checkbox:true"></th>
                        <th field="SpecName" width='40%' align="left">Specification Head</th>
                        <th data-options="field:'PIDescription', align:'left',editor:{type:'text'}" width='50%'>Description</th>

                    </tr>
                </thead>
            </table>
            <div id="toolbarPickSpec">
                <a id="btnSpecPick" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick Specification</a>
            </div>
        </div>

        <fieldset style="font-family:Tahoma">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px;width:100%; font-weight:bold;font-size:12">
                <tr>

                    <td style="width:85%; text-align:right"></td>
                    <td style="width: 15%">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="SaveProcurementSpec()">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseProcurementSpec()">Close</a>
                    </td>
                </tr>

            </table>
        </fieldset>


    </div>
</body>
</html>
<style>
    td, th {
        padding:1px;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        var oPurchaseInvoice =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oPInvoiceTypeObjs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PInvoiceTypeObjs));
        var oInvoiceReferenceTypeObjs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.InvoiceReferenceTypeObj));
        var oCurrencys= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oCompany= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));
        var oClientOperationSetting = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ClientOperationSetting));
        var oInvoicePaymentModes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.InvoicePaymentModes));
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").hide();
        $('#txtRecapNo').data('OrderRecap',null);
        $('#txtConvertionRate,#txtAdvanceAmount,#txtQty,#txtUnitPrice, #txtDiscount, #txtServiceCharge').icsCurrencyBox();
        $('#cboInvoiceType').data('PInvoiceTypes', oPInvoiceTypeObjs);
        $('#cboReferenceType').data('InvoiceReferenceType', oInvoiceReferenceTypeObjs);
        $('#cboCurrency').data('Currencys', oCurrencys);
        $('#divPurchaseInvoice').data('Company', oCompany);
        $('#divPurchaseInvoice').data('PurchaseInvoice', oPurchaseInvoice);
        $('#divPurchaseInvoice').data('ClientOperationSetting', oClientOperationSetting);
        $('#cboInvoicePaymentMode').data('InvoicePaymentModes', oInvoicePaymentModes);
        $('#txtVehicleModel').data('VehicleModel',[]);
        RefreshComboBox();
        RefreshLayout();
        RefreshSummery();
        RefreshControl();
        $('#btnAddSpecification').hide();

        $('#divPurchaseInvoice').data('ModelShortName',"");
        $('#divPurchaseInvoice').data('PONo',"");

    });
    

    
    $('#txtRateOn').change(function(){
        debugger;
        var oDetails = $('#tblPurchaseInvoiceDetail').datagrid('getRows');
        for(var i = 0;i<oDetails.length;i++)
        {
            oDetails[i].Amount = parseFloat(parseFloat(oDetails[i].Qty) * parseFloat(parseFloat(oDetails[i].UnitPrice)/parseInt($('#txtRateOn').val())));
        }
        DynamicRefreshList(oDetails, "tblPurchaseInvoiceDetail");
        RefreshSummery();
    });


    $('#txtDiscount,#txtServiceCharge').change(function(){
        debugger;
        RefreshSummery();
    });
    
    $("#txtVehicleModel").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oModel={
                ModelNo: $.trim( $("#txtVehicleModel").val())
            };
            PickVehileModel(oModel);
        }
        if (code == 8) //backspace=8
        {
            var txtVehicleModel = document.getElementById("txtVehicleModel");
            txtVehicleModel.value = '';
            txtVehicleModel.style.color = "black";
            txtVehicleModel.style.fontWeight = "normal";
            $('#divPurchaseInvoice').data('ModelShortName',"");
        }
    });
    $("#btnVehicleModel").click(function () {
        var oModel={
            ModelNo: $.trim( $("#txtVehicleModel").val())
        };
        PickVehileModel(oModel);
    });
    function PickVehileModel(oModel)
    {
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oModel,
            ControllerName: "VehicleModel",
            ActionName: "GetVehicleModels",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0)
            {
                if (response.objs[0].VehicleModelID > 0) {
                    var tblColums = [];var oColumn ={};
                    oColumn= { field: "ModelNo", title: "ModelNo", width: 350, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ModelShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winVehicleModel',
                        winclass: 'clsVehicleModel',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblVehicleModel',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ModelNo',
                        windowTittle: 'Model List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert("Data Not Found");
                    return;
                }
            }
            else{
                alert("Data Not Found");
                return;
            }
        });

    }


    function updateProgress() {
        var value =$('#progbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progbarParent").hide();
    }
    function RefreshComboBox()
    {
        var oPInvoiceTypes = $('#cboInvoiceType').data('PInvoiceTypes');
        //var oInvoiceReferenceTypes = $('#cboReferenceType').data('InvoiceReferenceType');
        var oCurrencys = $('#cboCurrency').data('Currencys');
        var oMarketingAccounts = $('#cboMKTPerson').data('MKTPersons');
        var oInvoicePaymentModes = $('#cboInvoicePaymentMode').data('InvoicePaymentModes');
        $("#cboInvoiceType").icsLoadCombo({ List: oPInvoiceTypes, OptionValue: "id", DisplayText: "Value" });
        //$("#cboReferenceType").icsLoadCombo({ List: oInvoiceReferenceTypes, OptionValue: "id", DisplayText: "Value" });
        $("#cboCurrency").icsLoadCombo({ List: oCurrencys, OptionValue: "CurrencyID", DisplayText: "NameSymbol" });

        $("#cboInvoicePaymentMode").icsLoadCombo({ List: oInvoicePaymentModes, OptionValue: "id", DisplayText: "Value" });

        var oPurchaseInvoice = $('#divPurchaseInvoice').data('PurchaseInvoice');
        $("#cboInvoiceType").val(oPurchaseInvoice.InvoiceTypeInt);
        $("#cboReferenceType").val(oPurchaseInvoice.RefTypeInt);
        $("#cboCurrency").val(oPurchaseInvoice.CurrencyID);
        $("#cboInvoicePaymentMode").val(oPurchaseInvoice.InvoicePaymentModeInt);
        
    }
    function RefreshLayout()
    {
        //InvoiceType: Standard = 1, Advance = 2
        //ReferenceType : Open = 1, PO = 2, Import = 3,WO=5
        debugger;
        var nInvoiceType = parseInt($("#cboInvoiceType").val());
        var nReferenceType = parseInt($("#cboReferenceType").val());
        if(nReferenceType===1)
        {
            $('#txtPONo,#btnPickPO').prop('disabled', true);
            //$('#txtSupplierName,#btnPickSupplier').prop('disabled', false);
            $('#txtRecapNo,#btnOrderRecapPick').show();
        }
        else if (nReferenceType===2)
        {
            $('#txtPONo,#btnPickPO').prop('disabled', false);
            //$('#txtSupplierName,#btnPickSupplier').prop('disabled', true);
            $('#lblOrderNo').text("SO No");
            $('#lblAmount').text("SO Amount");
            $('#txtRecapNo,#btnOrderRecapPick').hide();
            $("#cboMeasurementUnit,#lblQty,#txtQty,#lblRate,#txtUnitPrice,#btnAdd,#txtAdvanceAmount,#lblAdvanceAmount").hide();
            $('#txtRecapNo').data('OrderRecap',null);
            $("#txtRecapNo").removeClass('fontColorOfPickItem');
            $("#txtRecapNo").val('');
        }
        var tblColums=[];
        var oColumn=null;
        $("#lblAdvanceAmount").hide();
        $("#txtAdvanceAmount").hide();
        if((nInvoiceType === 1 && nReferenceType===1) || (nInvoiceType === 2 && nReferenceType===1))
        {            
            oColumn= { field :"ProductCode", title:"Part No", width:"100"}; tblColums.push(oColumn);
            oColumn= { field :"ProductName", title:"Item Name", width:"200"}; tblColums.push(oColumn);
            oColumn= { field :"ModelShortName", title:"Model No", width:"100"}; tblColums.push(oColumn);
            oColumn= { field :"Remarks", title:"Remarks", width:"100", align: "left", editor: {type:'textbox'},}; tblColums.push(oColumn);
            oColumn= { field :"MUSymbol", title:"M Unit", width:"60"}; tblColums.push(oColumn);
            oColumn= { field :"Qty", title:"Bill Qty", width:"100", align: "right", editor: {type:'numberbox',options:{ precision:0}},  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"UnitPrice", title:"Rate", width:"100", align: "right", editor: {type:'numberbox',options:{ precision:4}}, formatter: function(value,row,index){ return icsFormatPrice(value, null,4); }}; tblColums.push(oColumn);
            oColumn= { field :"Amount", title:"Amount", width:"140", align: "right", editor: {type:'numberbox',options:{ precision:2}}, formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            $("#lblAdvanceAmount,#txtAdvanceAmount").hide();
            $("#cboMeasurementUnit,#lblQty,#txtQty,#lblRate,#txtUnitPrice,#btnAdd").show();
        }
        else if(nInvoiceType === 1 && nReferenceType===2)
        {         
            oColumn= { field :"RefNo", title:"PO No", width:"100"}; tblColums.push(oColumn);
            oColumn= { field :"ProductCode", title:"Part No", width:"70"}; tblColums.push(oColumn);
            oColumn= { field :"ProductName", title:"Item Name", width:"120"}; tblColums.push(oColumn);
            oColumn= { field :"ModelShortName", title:"Model No", width:"100"}; tblColums.push(oColumn);
            oColumn= { field :"MUSymbol", title:"Unit Name", width:"100"}; tblColums.push(oColumn);
            oColumn= { field :"PODQty", title:"SO Qty", width:"60", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"YetToInvoiceQty", title:"Invoice Yet", width:"80", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"PODRate", title:"SO Rate", width:"60", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"PODAmount", title:"SO Amount", width:"80", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"AdvInvoice", title:"Advance", width:"60", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"GRNValue", title:"GRN", width:"60", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"PrevoiusInvoice", title:"Alredy Invoice", width:"80", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"Qty", title:"Bill Qty", width:"70", align: "right", editor: {type:'numberbox',options:{ precision:2}},  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"UnitPrice", title:"Rate", width:"70", align: "right", formatter: function(value,row,index){ return icsFormatPrice(value, null,4); }}; tblColums.push(oColumn);   //editor: {type:'numberbox',options:{ precision:4}},
            oColumn= { field :"AdvanceSettle", title:"Adv Settle", width:"80", align: "right",editor: {type:'numberbox',options:{ precision:2}},  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"Amount", title:"Amount", width:"80px", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            $("#lblAdvanceAmount,#txtAdvanceAmount").hide();
            $("#cboMeasurementUnit,#lblQty,#txtQty,#lblRate,#txtUnitPrice,#btnAdd").hide();
        }
        else if(nInvoiceType === 2 && nReferenceType===2)
        {     
            oColumn= { field :"RefNo", title:"PO No", width:"100"}; tblColums.push(oColumn);
            oColumn= { field :"ProductCode", title:"Part No", width:"100"}; tblColums.push(oColumn);
            oColumn= { field :"ProductName", title:"Item Name", width:"280"}; tblColums.push(oColumn);
            oColumn= { field :"ModelShortName", title:"Model No", width:"100"}; tblColums.push(oColumn);
            oColumn= { field :"MUSymbol", title:"Item Name", width:"80"}; tblColums.push(oColumn);
            oColumn= { field :"PODQty", title:"SO Qty", width:"100", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"PODRate", title:"SO Rate", width:"100", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"PODAmount", title:"SO Amount", width:"100", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"AdvInvoice", title:"Advance", width:"80", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"PrevoiusInvoice", title:"Alredy Invoice", width:"120", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"Amount", title:"Amount", width:"120", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            $("#lblAdvanceAmount,#txtAdvanceAmount,#txtProductName,#btnPickProduct").show();
            $("#cboMeasurementUnit,#lblQty,#txtQty,#lblRate,#txtUnitPrice,#btnAdd").hide();
        }

        $('#tblPurchaseInvoiceDetail').datagrid({ columns:[tblColums]});
       
        var sPurchaseInvoiceHeader = sessionStorage.getItem("PurchaseInvoiceHeader");
        if (sPurchaseInvoiceHeader != "Add PurchaseInvoice")
        {
            $('#txtSupplierName,#txtDeliveryToName,#txtBillToName').css('color', 'blue');
            $('#txtSupplierName,#txtDeliveryToName,#txtBillToName').css('fontWeight', 'bold');
            $('#txtPONo').css('color', 'blue');
            $('#txtPONo').css('fontWeight', 'bold');
            //Load Supplier Contact Person
            var nContractorID=parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID);
            LoadContactPerson(nContractorID,1);
            //Load Delivery To Contact Person
            nContractorID=parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').DeliveryTo);
            LoadContactPerson(nContractorID,2);

            //Load Bill Contact Person
            nContractorID=parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').BillTo);
            LoadContactPerson(nContractorID,3);
        }

        if (sPurchaseInvoiceHeader === "View PurchaseInvoice") {
            $('#divPurchaseInvoiceBasicInfo,#toolbarPurchaseInvoiceDetail').find('input, textarea, button, select').attr('disabled','disabled');
            $('#btnSave').hide();
        }
        if(nReferenceType!=0)
        {
            var oClientOperationSetting = $('#divPurchaseInvoice').data('ClientOperationSetting');
        }
    }
    function RefreshControl()
    {
        debugger;
        var oClientOperationSetting = $('#divPurchaseInvoice').data('ClientOperationSetting');
        if(parseInt(oClientOperationSetting.Value)==0)//if not apply
        {
            $('#txtRecapNo,#btnOrderRecapPick').hide();
        }

        var oPurchaseInvoice = $('#divPurchaseInvoice').data('PurchaseInvoice');
        $('#cboInvoiceType').val(oPurchaseInvoice.InvoiceTypeInt);
        $('#cboInvoicePaymentMode').val(oPurchaseInvoice.InvoicePaymentModeInt);
        $('#cboReferenceType').val(oPurchaseInvoice.RefTypeInt);
        
        $('#txtInvoiceDate').datebox('setValue', oPurchaseInvoice.DateofInvoiceSt);
        $('#txtPONo').val(oPurchaseInvoice.RefNo);
        $('#txtSupplierName').val(oPurchaseInvoice.ContractorName);
        $('#cboContactPerson').val(oPurchaseInvoice.ContractorPersonalID);
        $('#txtPaymentTerm').val(oPurchaseInvoice.PaymentTermText);
        $('#txtInvoiceNo').val(oPurchaseInvoice.PurchaseInvoiceNo);
        $('#txtBILLNo').val(oPurchaseInvoice.BillNo);
        $('#txtPODate').datebox('setValue', oPurchaseInvoice.RefDateST);
        $('#txtPOAmount').val(oPurchaseInvoice.RefAmountSt);
        $('#txtMaturityDate').datebox('setValue', oPurchaseInvoice.DateofMaturitySt);
        $('#txtNote').val(oPurchaseInvoice.Note);
        $('#txtRateOn').val(oPurchaseInvoice.RateOn);
        $('#txtDiscount').val(oPurchaseInvoice.Discount);
        $('#txtServiceCharge').val(oPurchaseInvoice.ServiceCharge);
        
        $('#txtBillDate').datebox('setValue', oPurchaseInvoice.DateofBillSt);
        $('#cboCurrency').val(oPurchaseInvoice.CurrencyID);
        $('#txtConvertionRate').val(oPurchaseInvoice.ConvertionRateSt);
        $('#txtPONo,#txtSupplierName,#txtPaymentTerm').addClass('fontColorOfPickItem');
        RefreshList(oPurchaseInvoice.PurchaseInvoiceDetails);
        ChangeCurrency(false);
        RefreshSummery();
        $('#txtNetAmount').val(formatPrice(oPurchaseInvoice.NetAmount,0));
        editIndex=undefined;
    }

    $('#cboInvoiceType').change(function(e){
        RefreshLayout();
        $('#divPurchaseInvoice').data('PurchaseInvoice').RefID=0;
        $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID=0;
        $('#txtPONo,#txtPOAmount,#txtSupplierName').val('');
        $('#txtPODate').datebox('setValue', '');
        RefreshList([]);
    });

    $('#cboReferenceType').change(function(e){
        RefreshLayout();
        $('#divPurchaseInvoice').data('PurchaseInvoice').RefID=0;
        $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID=0;
        $('#txtPONo,#txtPOAmount,#txtSupplierName').val('');
        $('#txtPODate').datebox('setValue', '');
        RefreshList([]);
    });

    $('#cboCurrency').change(function(e){
        ChangeCurrency(true);
    });

    function ChangeCurrency(bIsComboChange)
    {
        var oCompany= $('#divPurchaseInvoice').data('Company');
        var oCurrencys = $('#cboCurrency').data('Currencys');
        var nCurrencyID = $("#cboCurrency").val();
        for(var i=0;i<oCurrencys.length;i++)
        {
            if(parseInt(oCurrencys[i].CurrencyID) == parseInt(nCurrencyID))
            {
                if(parseInt(oCurrencys[i].CurrencyID) === parseInt(oCompany.BaseCurrencyID))
                {
                    $('#txtConvertionRate').val(1);
                    $("#txtConvertionRate" ).prop( "disabled", true );
                }else{
                    if(bIsComboChange)
                    {
                        $('#txtConvertionRate').val(0.00);
                        $("#txtConvertionRate" ).prop( "disabled", false);
                    }
                }
                RefreshSummery();
                break;
            }
        }
    }

    function ValidateInput()
    {
        var oPurchaseInvoice = $('#divPurchaseInvoice').data('PurchaseInvoice');
        if(oPurchaseInvoice===null)
        {
            alert("Invalid Purchase Invoice!\nPlease refresh & try again!");
            return false;
        }
        if(parseInt(sessionStorage.getItem('BUID'))<=0)
        {
            alert("Invalid Business Unit!\nPlease refresh & try again!");
            return false;
        }
        var nInvoiceType= parseInt($('#cboInvoiceType').val());
        if(parseInt(nInvoiceType)<=0)
        {
            alert("Please Select Invoice Type");
            $('#cboInvoiceType').focus();
            $("#cboInvoiceType").addClass("errorFieldBorder");
            return false;
        }
        var nReferenceType=parseInt($('#cboReferenceType').val());
        if(parseInt(nReferenceType)<=0)
        {
            alert("Please Select Reference Type");
            $('#cboReferenceType').focus();
            $("#cboReferenceType").addClass("errorFieldBorder");
            return false;
        }
        if(parseInt(nInvoiceType)===2 && parseInt(nReferenceType)===1)
        {
            alert("Advance Invoice must be SO Reference!");
            $('#cboReferenceType').focus();
            $("#cboReferenceType").addClass("errorFieldBorder");
            return false;
        }
        var sInvoiceDate = $('#txtInvoiceDate').datebox('getValue');
        if(sInvoiceDate === null || sInvoiceDate ==="")
        {
            alert("Please select Invoice Date!");
            $('#txtInvoiceDate').focus();
            $("#txtInvoiceDate").addClass("errorFieldBorder");
            return false;
        }
        //if(parseInt(oPurchaseInvoice.RefID)<=0)
        //{
        //    if(parseInt(nReferenceType)===2)
        //    {
        //        alert("Please select SO!");
        //        $('#txtPONo').focus();
        //        $("#txtPONo").addClass("errorFieldBorder");
        //        return false;
        //    }
        //}
        if(parseInt(oPurchaseInvoice.ContractorID)<=0)
        {
            alert("Please select an Supplier!");
            $('#txtSupplierName').focus();
            $("#txtSupplierName").addClass("errorFieldBorder");
            return false;
        }
        if(parseInt($('#cboContactPerson').val())<=0)
        {
            alert("Please select Contact Person!");
            $('#cboContactPerson').focus();
            $("#cboContactPerson").addClass("errorFieldBorder");
            return false;
        }
        if(parseInt(oPurchaseInvoice.PaymentTermID)<=0)
        {
            alert("Please select Payment Term!");
            $('#txtPaymentTerm').focus();
            $("#txtPaymentTerm").addClass("errorFieldBorder");
            return false;
        }
        if($.trim($("#txtBILLNo").val())===null || $.trim($("#txtBILLNo").val())==="")
        {
            alert("Please enter Bill No!");
            $('#txtBillNo').focus();
            $("#txtBILLNo").addClass("errorFieldBorder");
            return false;
        }
        var sMaturityDate = $('#txtMaturityDate').datebox('getValue');
        if(sMaturityDate === null || sMaturityDate ==="")
        {
            alert("Please select Maturity Date!");
            $('#txtMaturityDate').focus();
            $("#txtMaturityDate").addClass("errorFieldBorder");
            return false;
        }
        var sBillDate = $('#txtBillDate').datebox('getValue');
        if(sBillDate === null || sBillDate ==="")
        {
            alert("Please select Bill Date!");
            $('#txtBillDate').focus();
            $("#txtBillDate").addClass("errorFieldBorder");
            return false;
        }
        if(parseInt($('#cboCurrency').val())<=0)
        {
            alert("Please select Currency!");
            $('#cboCurrency').focus();
            $("#cboCurrency").addClass("errorFieldBorder");
            return false;
        }
        var sConvertionRate =  $('#txtConvertionRate').val();
        if(sConvertionRate===null || sConvertionRate=== "")
        {
            alert("Please Enter Conversion Rate!");
            $('#txtConvertionRate').focus();
            $("#txtConvertionRate").addClass("errorFieldBorder");
            return false;
        }

        var nConvertionRate = icsRemoveComma(sConvertionRate);
        if(nConvertionRate<=0)
        {
            alert("Please Enter Conversion Rate!");
            $('#txtConvertionRate').focus();
            $("#txtConvertionRate").addClass("errorFieldBorder");
            return false;
        }
        var oPIDetails = $('#tblPurchaseInvoiceDetail').datagrid('getRows');
        if(oPIDetails.length<=0)
        {
            alert("Please Add At least one Product in Detail.");
            return false;
        }
        if(oPIDetails.length>0)
        {
            var nTotalItemAmount=0;
            for(var i = 0;i<oPIDetails.length;i++)
            {
                if(nInvoiceType!=2)
                {
                    if(parseFloat(oPIDetails[i].Qty)<=0)
                    {
                        alert("Qty should be Greater than Zero for ''"+oPIDetails[i].ProductName+"''");
                        return false;
                    }
                    if(parseFloat(oPIDetails[i].UnitPrice)<=0)
                    {
                        alert("Rate should be Greater than Zero for ''"+oPIDetails[i].ProductName+"''");
                        return false;
                    }

                    if(parseInt(nReferenceType)===2 && (parseFloat(oPIDetails[i].Qty)>parseFloat(oPIDetails[i].PODQty)))
                    {
                        alert("Qty should be Less than  or Equla to PO Qty for ''"+oPIDetails[i].ProductName+"''");
                        return false;
                    }
                    if(parseInt(nReferenceType)===2 && (parseFloat(oPIDetails[i].UnitPrice)>parseFloat(oPIDetails[i].PODRate)))
                    {
                        alert("Rate should be less than or equal to SO Rate for ''"+oPIDetails[i].ProductName+"''");
                        return false;
                    }
                    if(parseInt(nReferenceType)===5 && (parseFloat(oPIDetails[i].Qty)>parseFloat(oPIDetails[i].WOGRNQty)))
                    {
                        alert("Qty should be less than or equal to GRN Qty for ''"+oPIDetails[i].ProductName+"''");
                        return false;
                    }
                    if(parseInt(nReferenceType)===2)
                    {
                        var nBalanceAmount=(parseFloat(oPIDetails[i].PODAmount)-(parseFloat(oPIDetails[i].AdvInvoice)+parseFloat(oPIDetails[i].PrevoiusInvoice)+ parseFloat(oPIDetails[i].Amount)-parseFloat(oPIDetails[i].AdvanceSettle)));
                        if(parseFloat(nBalanceAmount)<0)
                        {
                            nBalanceAmount = parseFloat(nBalanceAmount)*(-1);
                            if(parseFloat(nBalanceAmount)>0.5)
                            {
                                alert("Total paid amount can't exceed PO Amount!\nPLease Check Previous Invoice Amount OR  Advance Settle Amount.\n for Product name  ''"+oPIDetails[i].ProductName+"''");
                                return false;
                            }
                        }

                        nBalanceAmount = parseFloat(oPIDetails[i].Amount)-parseFloat(oPIDetails[i].AdvanceSettle)
                        if(parseFloat(nBalanceAmount)<0)
                        {
                            nBalanceAmount = parseFloat(nBalanceAmount)*(-1);
                            if(parseFloat(nBalanceAmount)>0.5)
                            {
                                alert("Advance settle amount can't exceed relative product BillAmount!\nPlease Check Product name  ''"+oPIDetails[i].ProductName+"''");
                                return false;
                            }
                        }

                        nBalanceAmount = parseFloat(oPIDetails[i].AdvInvoice)-parseFloat(oPIDetails[i].AdvanceSettle)
                        if(parseFloat(nBalanceAmount)<0)
                        {
                            nBalanceAmount = parseFloat(nBalanceAmount)*(-1);
                            if(parseFloat(nBalanceAmount)>0.5)
                            {
                                alert("Advance settle amount can't exceed relative product Advance Amount!\nPlease Check Product name  ''"+oPIDetails[i].ProductName+"''");
                                return false;
                            }
                        }
                    }
                }
                else
                {
                    if(parseFloat(oPIDetails[i].Amount)<=0)
                    {
                        alert("Amount should be Greater than Zero for "+oPIDetails[i].ProductName);
                        return false;
                    }
                    var nBalanceAmount=(parseFloat(oPIDetails[i].PODAmount)-(parseFloat(oPIDetails[i].AdvInvoice)+parseFloat(oPIDetails[i].PrevoiusInvoice)+ parseFloat(oPIDetails[i].Amount)));
                    if(parseFloat(nBalanceAmount)<0)
                    {
                        nBalanceAmount = parseFloat(nBalanceAmount)*(-1);
                        if(parseFloat(nBalanceAmount)>0.5)
                        {
                            alert("Total paid amount can't exceed PO Amount!\nPLease Check Previous Advance & Standard Invoice.\n for Product name  ''"+oPIDetails[i].ProductName+"''");
                            return false;
                        }
                    }
                }
                nTotalItemAmount = nTotalItemAmount + parseFloat(oPIDetails[i].Amount);
            }
            if(parseFloat(nTotalItemAmount)<=0)
            {
                alert("Total Amount should be Greater than Zero");
                return false;
            }
        }
        return true;
    }

    function RefreshObject()
    {
        debugger;
        var nInvoiceAmount=0;
        var oTempPurchaseInvoice = $('#divPurchaseInvoice').data('PurchaseInvoice');
        var oPurchaseInvoiceDetails =$('#tblPurchaseInvoiceDetail').datagrid('getRows');
        for(i=0; i<oPurchaseInvoiceDetails.length;i++)
        {
            nInvoiceAmount = nInvoiceAmount + parseFloat(oPurchaseInvoiceDetails[i].Amount);
        }
        
        var Discount =parseFloat(icsRemoveComma($('#txtDiscount').val()));
        var ServiceCharge =parseFloat(icsRemoveComma($('#txtServiceCharge').val()));
        var oPurchaseInvoice= {
            PurchaseInvoiceID : parseInt(oTempPurchaseInvoice.PurchaseInvoiceID),
            PurchaseInvoiceNo : $.trim($('#txtInvoiceNo').val()),
            BUID : parseInt(sessionStorage.getItem('BUID')),
            BillNo : $.trim($('#txtBILLNo').val()),
            DateofBill : $('#txtBillDate').datebox('getValue'),
            DateofInvoice : $('#txtInvoiceDate').datebox('getValue'),
            InvoiceTypeInt : parseInt($('#cboInvoiceType').val()),
            InvoiceStatusInt :parseInt(oTempPurchaseInvoice.InvoiceStatusInt),
            RefTypeInt : parseInt($('#cboReferenceType').val()),
            InvoicePaymentModeInt:parseInt($('#cboInvoicePaymentMode').val()),
            RefID : parseInt(oTempPurchaseInvoice.RefID),
            ContractorID : parseInt(oTempPurchaseInvoice.ContractorID),
            ContractorPersonalID :parseInt($('#cboContactPerson').val()),
            Amount : parseFloat(nInvoiceAmount),
            CurrencyID :parseInt($('#cboCurrency').val()),
            ConvertionRate : parseFloat(icsRemoveComma($('#txtConvertionRate').val())),
            DateofMaturity : $('#txtMaturityDate').datebox('getValue'),
            Note : $.trim($('#txtNote').val()),
            ApprovedBy : parseInt(oTempPurchaseInvoice.ApprovedBy),
            ApprovedDate : oTempPurchaseInvoice.ApprovedDateST,
            PaymentTermID : parseInt(oTempPurchaseInvoice.PaymentTermID),
            ShipBy :$.trim($("#txtShipBy").val()),
            TradeTerm :$.trim($("#txtTradeTerm").val()),
            DeliveryTo :parseInt(oTempPurchaseInvoice.DeliveryTo),
            DeliveryToContactPerson :$('#cboDeliveryToContactPerson').val(),
            BillTo :parseInt(oTempPurchaseInvoice.BillTo),
            BIllToContactPerson :$('#cboBIllToContactPerson').val(),
            Discount :parseFloat(icsRemoveComma($('#txtDiscount').val())),
            ServiceCharge :parseFloat(icsRemoveComma($('#txtServiceCharge').val())),
            NetAmount :parseFloat(nInvoiceAmount + ServiceCharge - Discount),
            RateOn :parseInt($('#txtRateOn').val()),
            PurchaseInvoiceDetails : oPurchaseInvoiceDetails
        };
        return oPurchaseInvoice;
    }

    $("#btnSave").click(function(){
        debugger;
        endEditing();
        if(!ValidateInput()) return;
        var oPurchaseInvoice=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem("BaseAddress")+  "/PurchaseBill/Save",
            traditional: true,
            data:  JSON.stringify(oPurchaseInvoice),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oPI = jQuery.parseJSON(data);
                if (oPI.ErrorMessage==null ||oPI.ErrorMessage=="") {
                    alert("Data Saved sucessfully");
                    //if(confirm("Are you want to entry specification ?!")){
                    //    $('#divPurchaseInvoice').data('PurchaseInvoice',oPI);
                    //    $('#tblPurchaseInvoiceDetail').datagrid('loadData',oPI.PurchaseInvoiceDetails);  
                    //}
                    //else{
                    var oPurchaseInvoices =sessionStorage.getItem("PurchaseInvoices");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oPurchaseInvoices!=null)
                    {
                        oPurchaseInvoices = jQuery.parseJSON(oPurchaseInvoices);
                    }
                    else
                    {
                        oPurchaseInvoices=[];
                    }
                    if(nIndex!=-1)
                    {
                        oPurchaseInvoices[nIndex]=oPI;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oPurchaseInvoices.length);
                        oPurchaseInvoices.push(oPI);
                    }
                    sessionStorage.setItem("PurchaseInvoices", JSON.stringify(oPurchaseInvoices));
                    window.location.href = sessionStorage.getItem("InvoiceBackTo");
                    //}
                    
                }
                else {
                    alert(oPI.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#btnClose").click(function(){
        window.location.href =sessionStorage.getItem("InvoiceBackTo");
    });

    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            window.location.href =sessionStorage.getItem("InvoiceBackTo");
        }
    });

    $("#btnAdd").click(function () {
        if (!ValidatePurchaseInvoiceDetail()) return;
        var oPurchaseInvoiceDetail = DetailRefreshObject();
        $('#tblPurchaseInvoiceDetail').datagrid('appendRow', oPurchaseInvoiceDetail);

        //Reset Detail Control
        $("#txtProductName").removeClass("fontColorOfPickItem");
        $('#txtProductName').data('Product', null);
        $("#txtProductName").val("");
        $('#txtQty').val('0.00');
        $('#txtUnitPrice').val('0.00');
        LoadMeasurementUnit(0, null);
        RefreshGrid();
        $('#txtProductName').focus();
    });

    $("#btnRemove").click(function () {
        var oPurchaseInvoiceDetail = $('#tblPurchaseInvoiceDetail').datagrid('getSelected');
        if (oPurchaseInvoiceDetail == null) {
            alert("Please select a item from list!");
            return;
        }
        var conf = confirm("Confirm to delete?");
        if (conf == false) return;

        endEditing();
        var SelectedRowIndex = $('#tblPurchaseInvoiceDetail').datagrid('getRowIndex', oPurchaseInvoiceDetail);
        $('#tblPurchaseInvoiceDetail').datagrid('deleteRow', SelectedRowIndex);

        var oPurchaseInvoiceDetails = $('#tblPurchaseInvoiceDetail').datagrid('getRows');
        RefreshList(oPurchaseInvoiceDetails);
    });

    $("#btnRefresh").click(function () {
        endEditing();
        RefreshGrid();
    });

    $("#txtAdvanceAmount").keyup(function (e){
        endEditing();
        var nTotalPOAmount=0;
        var nAdvanceAmount = icsRemoveComma($('#txtAdvanceAmount').val());
        var oPIDetails = $('#tblPurchaseInvoiceDetail').datagrid('getRows');
        for(var i = 0; i<oPIDetails.length;i++)
        {
            nTotalPOAmount = nTotalPOAmount + (parseFloat(oPIDetails[i].PODQty) * parseFloat(oPIDetails[i].PODRate));
        }
        for(var i = 0; i<oPIDetails.length;i++)
        {
            oPIDetails[i].Amount=(parseFloat(oPIDetails[i].PODAmount) * parseFloat(nAdvanceAmount)) / parseFloat(nTotalPOAmount);
        }
        RefreshList(oPIDetails);
        RefreshSummery();
    });

    function ValidatePurchaseInvoiceDetail() {
        var oProduct = $('#txtProductName').data('Product');
        if (oProduct == null || parseInt(oProduct.ProductID) <= 0) {
            alert("Please Pick Product!");
            $('#txtProductName').focus();
            return false;
        }
        var oPurchaseInvoiceDetails = $('#tblPurchaseInvoiceDetail').datagrid('getRows');
        if($('#cboMeasurementUnit').val() === null || parseInt($('#cboMeasurementUnit').val()) <= 0) {
            alert("Please select an Unit");
            $('#cboMeasurementUnit').focus();
            return false;
        }

        var nQty = icsRemoveComma($('#txtQty').val());
        if (nQty == null || nQty == "" || parseFloat(nQty) <= 0) {
            alert("Please Enter Invoice Qty!");
            $('#txtQty').focus();
            return false;
        }
        var nUnitPrice = icsRemoveComma($('#txtUnitPrice').val());
        if (nUnitPrice == null || nUnitPrice == "" || parseFloat(nUnitPrice) <= 0) {
            alert("Please Enter Unit Price!");
            $('#txtUnitPrice').focus();
            return false;
        }
        return true;
    }

    function DetailRefreshObject() {
        var oProduct = $('#txtProductName').data('Product');
        var nUnitID = parseInt($('#cboMeasurementUnit').val());
        var sUnitName = GetUnitNameSymbol(nUnitID, true);
        var sSymbol = GetUnitNameSymbol(nUnitID, false);
        var nQty = parseFloat(icsRemoveComma($('#txtQty').val()));
        var nUnitPrice = parseFloat(icsRemoveComma($('#txtUnitPrice').val()));

        var oPurchaseInvoiceDetail = {
            PurchaseInvoiceDetailID: 0,
            PurchaseInvoiceID: 0,
            OrderRecapID:$('#txtRecapNo').data('OrderRecap')==null?0:$('#txtRecapNo').data('OrderRecap').OrderRecapID,
            BuyerName:$('#txtRecapNo').data('OrderRecap')==null?"":$('#txtRecapNo').data('OrderRecap').BuyerName,
            OrderRecapNo:$('#txtRecapNo').data('OrderRecap')==null?"":$('#txtRecapNo').data('OrderRecap').OrderRecapNo,
            StyleNo :$('#txtRecapNo').data('OrderRecap')==null?"":$('#txtRecapNo').data('OrderRecap').StyleNo,
            ProductID: oProduct.ProductID,
            MUnitID : nUnitID,
            Qty: nQty,
            UnitPrice: nUnitPrice,
            Amount : (nQty * nUnitPrice),
            ProductCode : oProduct.ProductCode,
            ProductName : oProduct.ProductName,
            MUName : sSymbol,
            MUSymbol : sSymbol,
            VehicleModelID:$('#txtVehicleModel').data('VehicleModel').VehicleModelID,
            ModelShortName:$('#txtVehicleModel').data('VehicleModel').ModelShortName
        };
        return oPurchaseInvoiceDetail;
    }

    function RefreshList(oPurchaseInvoiceDetails)
    {
        var data = oPurchaseInvoiceDetails;
        data = { "total": "" + data.length + "", "rows": data };
        $("#tblPurchaseInvoiceDetail").datagrid("loadData", data);
        RefreshSummery();
    }

    function RefreshGrid() {
        endEditing();
        data = $('#tblPurchaseInvoiceDetail').datagrid('getRows');
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblPurchaseInvoiceDetail').datagrid('loadData', data);
        RefreshSummery();
    }

    function RefreshSummery()
    {
        debugger;
        var oPIDetails = $('#tblPurchaseInvoiceDetail').datagrid('getRows');
        var nTotalValue= 0,nQty=0;
        for(var i = 0; i<oPIDetails.length;i++)
        {
            nTotalValue+=parseFloat(oPIDetails[i].Amount);
            nQty+=parseFloat(oPIDetails[i].Qty);
        }
        //document.getElementById('lblTotalQty').innerHTML = nQty;
        //$('#txtTotalValue').val(formatPrice(nTotalValue,0));
        var dDiscount = parseFloat(icsRemoveComma($('#txtDiscount').val()));
        var dServiceCharge = parseFloat(icsRemoveComma($('#txtServiceCharge').val()));
        var dNet = nTotalValue + dServiceCharge - dDiscount;
        $('#txtNetAmount').val(formatPrice(dNet,0));
         
    }

    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#tblPurchaseInvoiceDetail').datagrid('validateRow', editIndex)) {
            $('#tblPurchaseInvoiceDetail').datagrid('endEdit', editIndex);
            $('#tblPurchaseInvoiceDetail').datagrid('selectRow', editIndex);
            debugger;
            //InvoiceType: Standard = 1, Advance = 2
            //ReferenceType : Open = 1, PO = 2, Import = 3
            var nInvoiceType = parseInt($("#cboInvoiceType").val());
            var nReferenceType = parseInt($("#cboReferenceType").val());
            var oPurchaseInvoiceDetail = $('#tblPurchaseInvoiceDetail').datagrid('getSelected');

            if(parseInt(nInvoiceType)==1){  //Standard
                if(parseInt(nReferenceType)==2){    //PO
                    if(parseFloat(oPurchaseInvoiceDetail.YetToInvoiceQty)<parseFloat(oPurchaseInvoiceDetail.Qty))
                    {
                        oPurchaseInvoiceDetail.Qty=parseFloat(oPurchaseInvoiceDetail.YetToInvoiceQty);
                    }
                    //if(parseFloat(oPurchaseInvoiceDetail.PODRate)<parseFloat(oPurchaseInvoiceDetail.UnitPrice))
                    //{
                    //    opurchaseinvoicedetail.unitprice=parsefloat(opurchaseinvoicedetail.podrate);
                    //}
                    oPurchaseInvoiceDetail.Amount = parseFloat(oPurchaseInvoiceDetail.Qty) * parseFloat(oPurchaseInvoiceDetail.UnitPrice);
                }
                else if(parseInt(nReferenceType)==1){    //Open
                    if(_nQty != parseFloat(oPurchaseInvoiceDetail.Qty))
                    {
                        oPurchaseInvoiceDetail.Amount = parseFloat(oPurchaseInvoiceDetail.Qty) * parseFloat(oPurchaseInvoiceDetail.UnitPrice);
                    }
                    else if(_nUnitPrice != parseFloat(oPurchaseInvoiceDetail.UnitPrice))
                    {
                        oPurchaseInvoiceDetail.Amount = parseFloat(oPurchaseInvoiceDetail.Qty) * parseFloat(oPurchaseInvoiceDetail.UnitPrice);
                    }
                    else if(_nAmount != parseFloat(oPurchaseInvoiceDetail.Amount))
                    {
                        oPurchaseInvoiceDetail.UnitPrice = parseFloat(oPurchaseInvoiceDetail.Amount) / parseFloat(oPurchaseInvoiceDetail.Qty);
                    }
                }
            }

            //if(parseInt(nInvoiceType)===1 && parseInt(nReferenceType)===2)
            //{
            //    if(parseFloat(oPurchaseInvoiceDetail.YetToInvoiceQty)<parseFloat(oPurchaseInvoiceDetail.Qty))
            //    {
            //        oPurchaseInvoiceDetail.Qty=parseFloat(oPurchaseInvoiceDetail.YetToInvoiceQty);
            //    }
            //    if(parseFloat(oPurchaseInvoiceDetail.PODRate)<parseFloat(oPurchaseInvoiceDetail.UnitPrice))
            //    {
            //        oPurchaseInvoiceDetail.UnitPrice=parseFloat(oPurchaseInvoiceDetail.PODRate);
            //    }
            //}

            //if(parseInt(nReferenceType)==5)
            //{
            //    oPurchaseInvoiceDetail.Amount = parseFloat(parseFloat(oPurchaseInvoiceDetail.Qty) * parseFloat(parseFloat(oPurchaseInvoiceDetail.UnitPrice) /parseInt($('#txtRateOn').val())));
            //}

            //if(parseInt(nInvoiceType)!=2)
            //{
            //    oPurchaseInvoiceDetail.Amount = parseFloat(parseFloat(oPurchaseInvoiceDetail.Qty) * parseFloat(parseFloat(oPurchaseInvoiceDetail.UnitPrice) /parseInt($('#txtRateOn').val())));
            //}
            //else if(parseInt(nInvoiceType)===2)
            //{
            //    if(parseFloat(oPurchaseInvoiceDetail.PODAmount)<parseFloat(oPurchaseInvoiceDetail.Amount))
            //    {
            //        oPurchaseInvoiceDetail.Amount=parseFloat(oPurchaseInvoiceDetail.PODAmount);
            //    }
            //}


            $('#tblPurchaseInvoiceDetail').datagrid('updateRow', { index: editIndex, row: oPurchaseInvoiceDetail });

            RefreshSummery();
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    var _nQty=0;
    var _nUnitPrice=0;
    var _nAmount=0;
    function onClickRow(index) {
        if (editIndex != index) {
            if (endEditing()) {
                $('#tblPurchaseInvoiceDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oPurchaseInvoiceDetail= $('#tblPurchaseInvoiceDetail').datagrid('getSelected');

                _nQty = parseFloat(oPurchaseInvoiceDetail.Qty);
                _nUnitPrice = parseFloat(oPurchaseInvoiceDetail.UnitPrice);
                _nAmount = parseFloat(oPurchaseInvoiceDetail.Amount);

                if(oPurchaseInvoiceDetail.PurchaseInvoiceDetailID<=0){
                    $('#btnAddSpecification').hide();
                }
                else{
                    $('#btnAddSpecification').show();
                }
                editIndex = index;
            }
            else {
                $('#tblPurchaseInvoiceDetail').datagrid('selectRow', editIndex);
            }
        }
    }

    //Start PO No Pick
    $("#txtPONo").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //InvoiceType: Standard = 1, Advance = 2
            //ReferenceType : Open = 1, PO = 2, Import = 3,WO=5
            var nInvoiceType = parseInt($("#cboInvoiceType").val());
            var nReferenceType = parseInt($("#cboReferenceType").val());
            if(parseInt(nInvoiceType)<=0)
            {
                alert("Please Select Invoice Type");
                $('#cboInvoiceType').focus();
                $("#cboInvoiceType").addClass("errorFieldBorder");
                return false;
            }
            if(parseInt(nReferenceType)<=0)
            {
                alert("Please Select Reference Type");
                $('#cboReferenceType').focus();
                $("#cboReferenceType").addClass("errorFieldBorder");
                return false;
            }
            if(parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID)<=0)
            {
                alert("Please select an Supplier!");
                $('#txtSupplierName').focus();
                $("#txtSupplierName").addClass("errorFieldBorder");
                return false;
            }

            if(parseInt(nReferenceType)===2) 
            {
                var sPONo= $.trim($('#txtPONo').val());
                PickPO(sPONo,nReferenceType);
            }
            if( parseInt(nReferenceType)===5)
            {
                var sPONo= $.trim($('#txtPONo').val());
                PickWO(sPONo,nReferenceType);
            }
        }
    });
    $("#btnPickPO").click(function () {
        //InvoiceType: Standard = 1, Advance = 2
        //ReferenceType : Open = 1, PO = 2, Import = 3, WO=5
        var nInvoiceType = parseInt($("#cboInvoiceType").val());
        var nReferenceType = parseInt($("#cboReferenceType").val());
        debugger;
        if(parseInt(nInvoiceType)<=0)
        {
            alert("Please Select Invoice Type");
            $('#cboInvoiceType').focus();
            $("#cboInvoiceType").addClass("errorFieldBorder");
            return false;
        }
        if(parseInt(nReferenceType)<=0)
        {
            alert("Please Select Reference Type");
            $('#cboReferenceType').focus();
            $("#cboReferenceType").addClass("errorFieldBorder");
            return false;
        }
        if(parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID)<=0)
        {
            alert("Please select an Supplier!");
            $('#txtSupplierName').focus();
            $("#txtSupplierName").addClass("errorFieldBorder");
            return false;
        }

        if(parseInt(nReferenceType)===2)
        {
            var sPONo= $.trim($('#txtPONo').val());
            PickPO(sPONo,nReferenceType);
        }
        if(parseInt(nReferenceType)===5)
        {
            var sPONo= $.trim($('#txtPONo').val());
            PickWO(sPONo,nReferenceType);
        }
    });
    $('#txtPONo').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtPONo").removeClass("fontColorOfPickItem");
            $('#divPurchaseInvoice').data('PONo',"");
            $('#divPurchaseInvoice').data('PurchaseInvoice').RefID=0;
            $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID=0;
            $('#txtPONo,#txtPOAmount,#txtSupplierName').val('');
            $('#txtPODate').datebox('setValue', '');
            RefreshList([]);
        }
    });
    function PickPO(sPONo,nReferenceType)
    {
        var oPurchaseOrder = {
            PONo : sPONo,
            BUID : sessionStorage.getItem('BUID'),
            ContractorID : parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID)
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oPurchaseOrder,
            ControllerName: "PurchaseInvoice",
            ActionName: "GetsPOForInvoice",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].POID> 0) {
                    var tblColums = []; var oColumn = { field: "PONo", title: "SO No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorName", title: "Supplier Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "RefNo", title: "Ref No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "PODateSt", title: "SO Date", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "AmountSt", title: "SO Amount", width: 120, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "ApprovedByName", title: "Approved By", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPO',
                        winclass: 'clsPO',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblPOs',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'PONo',
                        windowTittle: 'SO List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });
    }

    function PickWO(sPONo,nReferenceType)
    {
        var oPurchaseOrder = {
            WorkOrderNo : sPONo,
            BUID : sessionStorage.getItem('BUID'),
            SupplierID : parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID)
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oPurchaseOrder,
            ControllerName: "WorkOrder",
            ActionName: "GetsByWONo",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].WorkOrderID> 0) {
                    debugger;

                    var tblColums = []; var oColumn = { field: "WorkOrderNo", title: "WO No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "SupplierName", title: "Supplier Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "FileNo", title: "File No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ApprovedByName", title: "Approved By", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "WorkOrderDateSt", title: "WO Date", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "AmountSt", title: "WO Amount", width: 120, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winWO',
                        winclass: 'clsWO',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblWOs',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'WorkOrderNo',
                        windowTittle: 'WO List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });
    }
    //end Ref No Pick


    //Delivery to
    $("#txtDeliveryToName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //Open=1, NOA=2, & Requisition=3
            PickDeliveryTo($.trim($('#txtDeliveryToName').val()));
        }else  if (code == 8) //backspace=8
        {
            $("#txtDeliveryToName").removeClass("fontColorOfPickItem");
            $('#divPurchaseOrder').data('PurchaseOrder').DeliveryTo=0;
            $("#cboDeliveryToContactPerson").icsLoadCombo({ List: [], OptionValue: "ContactPersonnelID", DisplayText: "Name" });
        }

    })
    function PickDeliveryTo(sDeliveryToName)
    {
        var oContractor = { Params: 7 + '~' + sDeliveryToName+'~'+sessionStorage.getItem("BUID") };//internal contractor : 7
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        var $This=$(this);
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 50, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winDeliveryTo',
                        winclass:'clsDeliveryTo',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblDeliveryTos',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Delivery To List',
                        TextBox:$This
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    $('#btnPickDeliveryTo').click(function () {
        PickDeliveryTo("");
    });
    //BIll To
    $("#txtBillToName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //Open=1, NOA=2, & Requisition=3
            PickBillTo($.trim($('#txtBillToName').val()));
        }else  if (code == 8) //backspace=8
        {
            $("#txtBillToName").removeClass("fontColorOfPickItem");
            $('#divPurchaseOrder').data('PurchaseOrder').BillTo=0;
            $("#cboBillToContactPerson").icsLoadCombo({ List: [], OptionValue: "ContactPersonnelID", DisplayText: "Name" });
        }

    })
    function PickBillTo(sBillToName)
    {
        var oContractor = { Params: 7 + '~' + sBillToName+'~'+sessionStorage.getItem("BUID") };//internal contractor : 7
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        var $This=$(this);
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 50, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBillTo',
                        winclass:'clsBillTo',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblBillTos',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Bill To List',
                        TextBox:$This
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    $('#btnPickBillTo').click(function () {
        PickBillTo("");
    });



    //Start Supplier Picker
    $("#txtSupplierName").keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            PickSupplier($.trim($('#txtSupplierName').val()));
        }
    });
    $("#btnPickSupplier").click(function () {
        PickSupplier($.trim($('#txtSupplierName').val()));
    });
    $('#txtSupplierName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtSupplierName").removeClass("fontColorOfPickItem");
            $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID=0;
            $("#cboContactPerson").icsLoadCombo({ List: [], OptionValue: "ContactPersonnelID", DisplayText: "Name" });
        }
    });
    function PickSupplier(sSupplierName)
    {
        // Supplier = 1, InternalContractor = 7
        var oContractor = { Params:'1,7'+ '~' + sSupplierName+'~'+sessionStorage.getItem("BUID") };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        var $This=$(this);
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width:120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winContractor',
                        winclass:'clsContractor',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblContractors',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Contractor List',
                        TextBox:$This
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    //End Supplier Picker



    $('#btnOrderRecapPick').click(function()
    {
        debugger;
        var nReferenceType = parseInt($("#cboReferenceType").val());
        if(nReferenceType===2||nReferenceType===1)
           GetOrderRecaps("");
        else if(nReferenceType===5)
        {
            GetWorkOrderRecaps("");
        }
    });
    $("#txtRecapNo").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);

        if (code == 13) // Enter Press
        {
            if($.trim($('#txtRecapNo').val())==null || $.trim($('#txtRecapNo').val())=="")
            {
                alert("Type Recap No and Press Enter");
                $('#txtRecapNo').focus();
                return;
            }
            GetOrderRecaps($.trim($('#txtRecapNo').val()));
        }else if(code==8)//Backspace
        {
            $("#txtRecapNo").removeClass('fontColorOfPickItem');
            $('#txtRecapNo').data('OrderRecap',null);
        }
    });

    function GetOrderRecaps(txtRecapNo)
    {
        var oOrderRecap =  {BUID: sessionStorage.getItem("BUID"), OrderRecapNo:txtRecapNo};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oOrderRecap,
            ControllerName: "OrderRecap",
            ActionName: "GetOrderRecapsByBU",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].OrderRecapID > 0) {
                    var tblColums = []; var oColumn = { field: "StyleNo", title: "Style No", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "OrderRecapNo", title: "Recap No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "DeptName", title: "Dept", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "SessionName", title: "Session", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Product Name", width:80, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winOrderRecaps',
                        winclass: 'clsOrderRecap',
                        winwidth: 800,
                        winheight: 500,
                        tableid: 'tblOrderRecaps',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'StyleNo',
                        searchingbyfieldCaption:'Search By Style No',
                        windowTittle: 'Order Recap List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    
    function GetWorkOrderRecaps(txtRecapNo)
    {
        debugger;
        var oOrderRecap =  {BUID: sessionStorage.getItem("BUID"), WorkOrderID: $('#divPurchaseInvoice').data('PurchaseInvoice').RefID};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oOrderRecap,
            ControllerName: "WorkOrder",
            ActionName: "GetsORSWithDetails",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].WorkOrderID > 0) {
                    var tblColums = []; 
                    var oColumn = { field: "ProductCode", title: "Code", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Qty", title: "Qty", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Amount", title: "Amount", width: 90, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winOrderRecaps',
                        winclass: 'clsOrderRecap',
                        winwidth: 800,
                        winheight: 500,
                        tableid: 'tblOrderRecaps',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ProductCode',
                        searchingbyfieldCaption:'Search By Code',
                        windowTittle: 'Work Order Detail List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }


    //Product Pick
    $("#txtProductName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //InvoiceType: Standard = 1, Advance = 2
            //ReferenceType : Open = 1, PO = 2, Import = 3
            var nInvoiceType = parseInt($("#cboInvoiceType").val());
            var nReferenceType = parseInt($("#cboReferenceType").val());
            if(parseInt(nReferenceType)!=5)//not work Order
            {
                if($('#txtProductName').val()==null || $('#txtProductName').val()=="")
                {
                    alert("Please Type Product and Press Enter.");
                    $('#txtProductName').focus();
                    return;
                }
            }
            if(parseInt(nReferenceType)===1)
            {
                PickProduct();
            }
            else
            {
                var nContractorID=parseInt( $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID);
                if(parseInt(nReferenceType)===2 || parseInt(nReferenceType)===5)
                {
                    if(nContractorID<=0)
                    {
                        alert("Please select a supplier!");
                        return;
                    }
                }
                if(parseInt(nReferenceType)===2)
                    PickProductForPO();
                if(parseInt(nReferenceType)===5)
                    PickProductForWO();

            }
        }
    });

    $("#btnPickProduct").click(function () {
        //InvoiceType: Standard = 1, Advance = 2
        //ReferenceType : Open = 1, PO = 2, Import = 3
        debugger;
        var nInvoiceType = parseInt($("#cboInvoiceType").val());
        var nReferenceType = parseInt($("#cboReferenceType").val());
        if(parseInt(nReferenceType)===1)
        {
            PickProduct();
        }
        else
        {
            var nContractorID=parseInt( $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID);
            if(parseInt(nReferenceType)===2)
            {
                if(nContractorID<=0)
                {
                    alert("Please select a supplier!");
                    return;
                }
                PickProductForPO();
            }
            else if(parseInt(nReferenceType)===5)
            {
                if(nContractorID<=0)
                {
                    alert("Please select a supplier!");
                    return;
                }
                PickProductForWO();
            }                   
        }
    });

    $('#txtProductName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtProductName").removeClass("fontColorOfPickItem");
            $('#txtProductName').data('Product', null);
        }
    });

    function PickProduct()
    {
        debugger;
        var nBUID = parseInt(sessionStorage.getItem("BUID"));
        var oProduct = { BUID: nBUID, ProductName: $.trim($('#txtProductName').val())};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oProduct,
            ControllerName: "PurchaseBill",
            ActionName: "GetProducts",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Part No", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Item Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductCategoryName", title: "Category", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }

    function PickProductForPO(nSupplierID)
    {
        var nInvoiceType = parseInt($("#cboInvoiceType").val());
        var nReferenceType = parseInt($("#cboReferenceType").val());
        var nRefID = parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').RefID);
        if(parseInt(nReferenceType)==2 && parseInt(nRefID)<=0)
        {
            alert("Please select a PO!");
            return;
        }
        if(parseInt(nReferenceType)==5 && parseInt(nRefID)<=0)
        {
            alert("Please select a WO!");
            return;
        }
        var oPurchaseInvoice = { InvoiceTypeInt : nInvoiceType, RefID:parseInt(nRefID)};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oPurchaseInvoice,
            ControllerName: "PurchaseBill",
            ActionName: "GetProductsByPO",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];
                    var oColumn = null;
                    oColumn = { field: "ProductCode", title: "Part No", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Item Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ModelShortName", title: "Model", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "UnitPriceSt", title: "Unit Price", width: 100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "QtySt", title: "Qty", width: 100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "MUName", title: "Unit", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPOPicker',
                        winclass: 'clsProductPOPicker',
                        winwidth: 700,
                        winheight: 460,
                        tableid: 'tblProductPOPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'ProductName',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    
    function PickProductForWO(nSupplierID)
    {
        var nInvoiceType = parseInt($("#cboInvoiceType").val());
        var nReferenceType = parseInt($("#cboReferenceType").val());
        var nRefID = parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').RefID);
        var nSupplierID = $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID;
        if(parseInt(nSupplierID)<=0)
        {
            alert("Please select Supplier.");
            return;
        }
        var oWorkOrder = { WorkOrderID:parseInt(nRefID),SupplierID:nSupplierID, WorkOrderNo:$.trim($('#txtProductName').val())};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oWorkOrder,
            ControllerName: "WorkOrder",
            ActionName: "GetsWODWithGRN",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];
                    var oColumn = null;
                    var oClientOperationSetting = $('#divPurchaseInvoice').data('ClientOperationSetting');
                    oColumn = { field: "WorkOrderNo", title: "Work Order No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "StyleNo", title: "Style No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "BuyerName", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductCode", title: "Part No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Item Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ColorName", title: "Color", width:120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "GRNQty", title: "GRN Qty", width:90, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "Amount", title: "Amount", width:100, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductWOPicker',
                        winclass: 'clsProductWOPicker',
                        winwidth: 800,
                        winheight: 460,
                        tableid: 'tblProductWOPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'ProductName',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    //End Product


    //Start PaymentTerm
    $("#txtPaymentTerm").keydown(function (e){
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            PickPaymentTerms();
        }
    });

    $("#btnPickPaymentTerm").click(function () {
        PickPaymentTerms();
    });

    $('#txtPaymentTerm').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $('#txtPaymentTerm').removeClass('fontColorOfPickItem');
            $('#divPurchaseInvoice').data('PurchaseInvoice').PaymentTermID=0;
        }
    });

    $("#btnCPTerm").click(function () {
        $('#txtPaymentTerm').removeClass('fontColorOfPickItem');
        $('#txtPaymentTerm').val('');
        $('#divPurchaseInvoice').data('PurchaseInvoice').PaymentTermID=0;
    });

    function PickPaymentTerms()
    {
        var oPaymentTerm = { TermText: $.trim($('#txtPaymentTerm').val()), BUID:sessionStorage.getItem('BUID')};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oPaymentTerm,
            ControllerName: "PurchaseInvoice",
            ActionName: "GetPaymentTermsForInvoice",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PaymentTermID> 0) {

                    var tblColums = []; var oColumn = { field: "FullTerm", title: "Name", width: 520, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPaymentTerms',
                        winclass: 'clsPaymentTerm',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblPaymentTerms',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameDaysInString',
                        windowTittle: 'Payment Term List'

                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });
    }
    //End PaymentTerm

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    function SetPickerValueAssign(oPickerobj)
    {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if(oPickerobj.winid=='winWO')
        {
            if(oreturnObj!=null && parseInt(oreturnObj.WorkOrderID)>0)
            {
                $('#txtPONo').val(oreturnObj.WorkOrderNo);
                $('#txtPONo').addClass('fontColorOfPickItem');
                $('#txtPODate').datebox('setValue', oreturnObj.WorkOrderDateSt );
                $('#txtPOAmount').val(oreturnObj.AmountSt);
                $('#divPurchaseInvoice').data('PurchaseInvoice').RefID=parseInt(oreturnObj.WorkOrderID);
                $('#txtSupplierName').val(oreturnObj.SupplierName);//done
                $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID = parseInt(oreturnObj.SupplierID);
            }
        }
        else if (oPickerobj.winid=='winVehicleModel')
        {
            debugger;
            if(parseInt(oreturnObj.VehicleModelID)>0)
            {
                $('#txtVehicleModel').val(oreturnObj.ModelShortName+'['+ oreturnObj.ModelNo+']');
                $('#divPurchaseInvoice').data('ModelShortName',oreturnObj.ModelShortName+'['+ oreturnObj.ModelNo+']');
                $('#txtVehicleModel').data('VehicleModel',oreturnObj);
                $("#txtVehicleModel").addClass('fontColorOfPickItem');
                $("#txtVehicleModel").focus();
            }
        }
        else if(oPickerobj.winid=='winPO')
        {
            if(oreturnObj!=null && parseInt(oreturnObj.POID)>0)
            {
                $('#txtPONo').val(oreturnObj.PONo);
                $('#divPurchaseInvoice').data('PONo',oreturnObj.PONo);
                $('#txtPONo').addClass('fontColorOfPickItem');
                $('#txtPODate').datebox('setValue', oreturnObj.PODateSt);
                $('#txtPOAmount').val(oreturnObj.AmountSt);
                $('#divPurchaseInvoice').data('PurchaseInvoice').RefID=parseInt(oreturnObj.POID);

                //$('#txtSupplierName').val(oreturnObj.ContractorName);
                ($('#txtSupplierName').val() == '' || $('#txtSupplierName').val() == null) ? $('#txtSupplierName').val(oreturnObj.ContractorName) : $('#txtSupplierName').val();
                //$('#txtPaymentTerm').val(oreturnObj.PaymentTermText);
                ($('#txtPaymentTerm').val() == '' || $('#txtPaymentTerm').val() == null) ? $('#txtPaymentTerm').val(oreturnObj.PaymentTermText) : $('#txtPaymentTerm').val();
                //$('#txtShipBy').val(oreturnObj.ShipBy);
                ($('#txtShipBy').val() == '' || $('#txtShipBy').val() == null) ? $('#txtShipBy').val(oreturnObj.ShipBy) : $('#txtShipBy').val();
                //$('#txtTradeTerm').val(oreturnObj.TradeTerm);
                ($('#txtTradeTerm').val() == '' || $('#txtTradeTerm').val() == null) ? $('#txtTradeTerm').val(oreturnObj.TradeTerm) : $('#txtTradeTerm').val();

                //$('#txtDeliveryToName').val(oreturnObj.DeliveryToName);
                ($('#txtDeliveryToName').val() == '' || $('#txtDeliveryToName').val() == null) ? $('#txtDeliveryToName').val(oreturnObj.DeliveryToName) : $('#txtDeliveryToName').val();
                //$('#txtBillToName').val(oreturnObj.BillToName);
                ($('#txtBillToName').val() == '' || $('#txtBillToName').val() == null) ? $('#txtBillToName').val(oreturnObj.BillToName) : $('#txtBillToName').val();
                $('#txtSupplierName,#txtDeliveryToName,#txtBillToName').addClass('fontColorOfPickItem');

                //$('#divPurchaseInvoice').data('PurchaseInvoice').PaymentTermID = parseInt(oreturnObj.PaymentTermID);
                (parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').PaymentTermID) == 0) ? $('#divPurchaseInvoice').data('PurchaseInvoice').PaymentTermID = parseInt(oreturnObj.PaymentTermID) : $('#divPurchaseInvoice').data('PurchaseInvoice').PaymentTermID;
                //$('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID = parseInt(oreturnObj.ContractorID);
                (parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID) == 0) ? $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID = parseInt(oreturnObj.ContractorID) : $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID;
                //$('#divPurchaseInvoice').data('PurchaseInvoice').ContractorPersonalID = parseInt(oreturnObj.ContactPersonnelID);
                (parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').ContractorPersonalID) == 0) ? $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorPersonalID = parseInt(oreturnObj.ContactPersonnelID) : $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorPersonalID;
                LoadContactPerson(parseInt(oreturnObj.ContractorID),1);
                //$('#divPurchaseInvoice').data('PurchaseInvoice').DeliveryTo = parseInt(oreturnObj.DeliveryTo);
                (parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').DeliveryTo) == 0) ? $('#divPurchaseInvoice').data('PurchaseInvoice').DeliveryTo = parseInt(oreturnObj.DeliveryTo) : $('#divPurchaseInvoice').data('PurchaseInvoice').DeliveryTo;
                //$('#divPurchaseInvoice').data('PurchaseInvoice').DeliveryToContactPerson = parseInt(oreturnObj.DeliveryToContactPerson);
                (parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').DeliveryToContactPerson) == 0) ? $('#divPurchaseInvoice').data('PurchaseInvoice').DeliveryToContactPerson = parseInt(oreturnObj.DeliveryToContactPerson) : $('#divPurchaseInvoice').data('PurchaseInvoice').DeliveryToContactPerson;
                LoadContactPerson(parseInt(oreturnObj.DeliveryTo),2);
                //$('#divPurchaseInvoice').data('PurchaseInvoice').BillTo = parseInt(oreturnObj.BillTo);
                (parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').BillTo) == 0) ? $('#divPurchaseInvoice').data('PurchaseInvoice').BillTo = parseInt(oreturnObj.BillTo) : $('#divPurchaseInvoice').data('PurchaseInvoice').BillTo;
                //$('#divPurchaseInvoice').data('PurchaseInvoice').BIllToContactPerson = parseInt(oreturnObj.BIllToContactPerson);
                (parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').BIllToContactPerson) == 0) ? $('#divPurchaseInvoice').data('PurchaseInvoice').BIllToContactPerson = parseInt(oreturnObj.BIllToContactPerson) : $('#divPurchaseInvoice').data('PurchaseInvoice').BIllToContactPerson;
                LoadContactPerson(parseInt(oreturnObj.BillTo),3);
            }
        }
        else if (oPickerobj.winid == 'winContractor')//Contractor region
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $('#txtSupplierName').val(oreturnObj.Name);
                $('#txtSupplierName').addClass('fontColorOfPickItem');
                $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID = parseInt(oreturnObj.ContractorID);
                //Load contract Person 1:Supplier;2:Delivery To;3:Bill To
                LoadContactPerson(parseInt(oreturnObj.ContractorID),1);
            }
        }
        else if (oPickerobj.winid == 'winProductPicker')
        {
            if (oreturnObj != null && parseInt(oreturnObj.ProductID) > 0)
            {
                $('#txtProductName').val(oreturnObj.ProductName);
                $('#txtProductName').addClass('fontColorOfPickItem');
                $('#txtProductName').data('Product', oreturnObj);
                LoadMeasurementUnit(parseInt(oreturnObj.ProductID), oreturnObj);
                $('#txtQty').focus();
            }
        }
        else if (oPickerobj.winid == 'winProductPOPicker')
        {
            if (oreturnobjs!=null && oreturnobjs.length > 0)
            {
                var oTempList = $('#tblPurchaseInvoiceDetail').datagrid('getRows');
                var oPIDs=[];
                for(var i = 0;i<oreturnobjs.length;i++)
                {  
                    if(!ICS_IsExist(oTempList,'RefDetailID', oreturnobjs[i].RefDetailID))
                    {
                        debugger;
                        oreturnobjs[i].RefNo = $('#divPurchaseInvoice').data('PONo');
                        oreturnobjs[i].RefID = $('#divPurchaseInvoice').data('PurchaseInvoice').RefID;
                        oreturnobjs[i].VehicleModelID = $('#txtVehicleModel').data('VehicleModel').VehicleModelID;
                        oreturnobjs[i].ModelShortName = $('#txtVehicleModel').data('VehicleModel').ModelShortName;
                        $('#tblPurchaseInvoiceDetail').datagrid('appendRow', oreturnobjs[i]);
                    }
                }
                $('#divPurchaseInvoice').data('PurchaseInvoice').RefID = 0;
                $('#txtPONo').val('');
                $('#txtVehicleModel').val('');
                RefreshSummery();
            }
        }else if(oPickerobj.winid == 'winProductWOPicker')
        {
            if (oreturnobjs!=null && oreturnobjs.length > 0)
            {
                var oTempList = $('#tblPurchaseInvoiceDetail').datagrid('getRows');
                for(var i = 0;i<oreturnobjs.length;i++)
                {
                    if(parseFloat(oreturnobjs[i].GRNQty)>0)
                    {
                        if(!ICS_IsExist(oTempList,'RefDetailID', oreturnobjs[i].WorkOrderDetailID))
                        {
                            var oDetail = {
                                PurchaseInvoiceDetailID: 0,
                                PurchaseInvoiceID: 0,
                                OrderRecapID:oreturnobjs[i].OrderRecapID,
                                BuyerName:oreturnobjs[i].BuyerName,
                                StyleNo :oreturnobjs[i].StyleNo,
                                WorkOrderNo :oreturnobjs[i].WorkOrderNo,
                                ProductID: oreturnobjs[i].ProductID,
                                MUnitID : oreturnobjs[i].UnitID,
                                RefDetailID:oreturnobjs[i].WorkOrderDetailID,
                                Qty: oreturnobjs[i].GRNQty,
                                WOGRNQty: oreturnobjs[i].GRNQty,
                                UnitPrice: parseFloat(oreturnobjs[i].UnitPrice)/parseFloat(oreturnobjs[i].RateUnit),
                                Amount : parseFloat(oreturnobjs[i].GRNQty) * parseFloat(parseFloat(oreturnobjs[i].UnitPrice)/parseFloat(oreturnobjs[i].RateUnit)),
                                ProductCode : oreturnobjs[i].ProductCode,
                                ProductName : oreturnobjs[i].ProductName,
                                ColorName:oreturnobjs[i].ColorName,
                                SizeName:oreturnobjs[i].SizeName,
                                MUName : oreturnobjs[i].UnitSymbol,
                                MUSymbol : oreturnobjs[i].UnitSymbol
                            };
                            $('#tblPurchaseInvoiceDetail').datagrid('appendRow', oDetail);
                        }
                    }
                }
                RefreshSummery();
            }
        }
        else if (oPickerobj.winid =='winPaymentTerms')
        {
            if (oreturnObj != null && parseInt(oreturnObj.PaymentTermID)> 0) {
                $('#txtPaymentTerm').val(oreturnObj.FullTerm);
                $('#txtPaymentTerm').addClass('fontColorOfPickItem');
                $('#divPurchaseInvoice').data('PurchaseInvoice').PaymentTermID=parseInt(oreturnObj.PaymentTermID);
                $('#txtBILLNo').focus();
            }
        }else if (oPickerobj.winid=='winOrderRecaps')
        {
            debugger;
            if(parseInt(oreturnObj.OrderRecapID)>0)
            {
                $('#txtRecapNo').val(oreturnObj.StyleNo+'['+ oreturnObj.OrderRecapNo+']');
                $('#txtRecapNo').data('OrderRecap',oreturnObj);
                $("#txtRecapNo").addClass('fontColorOfPickItem');
                $("#txtRecapNo").focus();
            }
        } 
        else if (oPickerobj.winid == 'winDeliveryTo')//Contractor region
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $('#txtDeliveryToName').val(oreturnObj.Name);
                $('#txtDeliveryToName').addClass('fontColorOfPickItem');
                $('#divPurchaseInvoice').data('PurchaseInvoice').DeliveryTo = parseInt(oreturnObj.ContractorID);
                $('#txtDeliveryToName').focus();
                //Load contract Person 1:Supplier;2:Delivery To;3:Bill To
                LoadContactPerson(parseInt(oreturnObj.ContractorID),2);
            }
        }  else if (oPickerobj.winid == 'winBillTo')//Contractor region
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $('#txtBillToName').val(oreturnObj.Name);
                $('#txtBillToName').addClass('fontColorOfPickItem');
                $('#divPurchaseInvoice').data('PurchaseInvoice').BillTo = parseInt(oreturnObj.ContractorID);
                $('#txtBillToName').focus();
                //Load contract Person 1:Supplier;2:Delivery To;3:Bill To
                LoadContactPerson(parseInt(oreturnObj.ContractorID),3);
            }
        }
    }

    function SaveInvoiceDetail(oPurchaseInvoiceDetails)
    {
        debugger;
        var oPriviousDetails = $('#tblPurchaseInvoiceDetail').datagrid('getRows');
        for (i=0; i<oPurchaseInvoiceDetails.length;i++)
        {
            if(!ICS_IsExist(oPriviousDetails,'ProductID',oPurchaseInvoiceDetails[i].ProductID))
            {
                $('#tblPurchaseInvoiceDetail').datagrid('appendRow', oPurchaseInvoiceDetails[i]);
            }
        }
        RefreshSummery();
    }


    function LoadContactPerson(nContractorID, nConType) {
        var listItems = "";
        $("#cboContactPerson").empty();
        if (parseInt(nContractorID) > 0)
        {
            var oContractor = {ContractorID: nContractorID};
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress")+"/Contractor/GetContactPersonnels",
                data: JSON.stringify(oContractor),
                contentType: "application/json; charset=utf-8",
                success: function (data)
                {
                    debugger;
                    var oContractorPersonals = jQuery.parseJSON(data);
                    if (oContractorPersonals.length > 0)
                    {
                        var sContractPerson = "cboContactPerson";
                        var nContactPersonnelID = parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').ContractorPersonalID);
                        if(parseInt(nConType)==2)
                        {
                            sContractPerson="cboDeliveryToContactPerson";
                            nContactPersonnelID = parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').DeliveryToContactPerson);
                        }else if(parseInt(nConType)==3)
                        {
                            sContractPerson="cboBIllToContactPerson";
                            nContactPersonnelID = parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').BIllToContactPerson);
                        }
                        $("#"+sContractPerson).icsLoadCombo({List: oContractorPersonals,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                        $("#"+sContractPerson).val(nContactPersonnelID);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }

            });
        }
    }
    function ReLoadLoadContactPerson (nConType)
    {
        debugger;
        var nContractorID=0;
        if(parseInt(nConType)==2)
        {
            nContractorID=parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').DeliveryTo);
        }else if(parseInt(nConType)==3)
        {
            nContractorID=parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').BillTo);
        }
        if(nContractorID<=0)
        {
            if(parseInt(nConType)==1)
            {
                alert("Please Pick a Supplier!");
            }else if(parseInt(nConType)==2)
            {
                alert("Please Pick a Delivery To!");
            }if(parseInt(nConType)==3)
            {
                alert("Please Pick a Bill To!");
            }
            return;
        }
        LoadContactPerson(nContractorID,nConType);
    }
    function NewContactPerson(nConType)
    {
        var nContractorID=0;
        if(parseInt(nConType)==2)
        {
            nContractorID=parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').DeliveryTo);
        }else if(parseInt(nConType)==3)
        {
            nContractorID=parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').BillTo);
        }
        if(parseInt(nContractorID)<=0)
        {
            if(parseInt(nConType)==1)
            {
                alert("Please Pick a Supplier!");
            }else if(parseInt(nConType)==2)
            {
                alert("Please Pick a Delivery To!");
            }if(parseInt(nConType)==3)
            {
                alert("Please Pick a Bill To!");
            }
            return;
        }
        sessionStorage.setItem("ContractorBackTo", "");
        sessionStorage.setItem("SelectedRowIndex", 0);
        sessionStorage.setItem("ContractorHeader", "Add Contact Personnel");
        window.open(_sBaseAddress+"/Contractor/ViewContactPersonnel?id="+nContractorID,"_blank");
    }
    function LoadMeasurementUnit(nProductID, oSelectedProduct) {
        var listItems = "";
        $("#cboMeasurementUnit").data('MeasurementUnits', []);
        $("#cboMeasurementUnit").empty();
        if (parseInt(nProductID) > 0) {
            var oProduct = {
                ProductID: nProductID
            };
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress") + "/MeasurementUnit/GetsMUnits",
                data: JSON.stringify(oProduct),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oMeasurementUnits = jQuery.parseJSON(data);
                    $("#cboMeasurementUnit").data('MeasurementUnits', oMeasurementUnits);
                    if (oMeasurementUnits.length > 0) {
                        for (var i = 0; i < oMeasurementUnits.length; i++) {
                            listItems += "<option value='" + oMeasurementUnits[i].MeasurementUnitID + "'>" + oMeasurementUnits[i].UnitName+'['+oMeasurementUnits[i].Symbol +"]</option>";
                        }
                        $("#cboMeasurementUnit").html(listItems);
                        $("#cboMeasurementUnit").val(oSelectedProduct.MeasurementUnitID);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    }
    function GetUnitNameSymbol(nUnitID, bIsName) {
        var sUnitNameSymbol = "";
        var oMeasurementUnits = $("#cboMeasurementUnit").data('MeasurementUnits');
        for (var i = 0; i < oMeasurementUnits.length; i++) {
            if (parseInt(oMeasurementUnits[i].MeasurementUnitID) == parseInt(nUnitID)) {
                if (bIsName == true) {
                    return oMeasurementUnits[i].UnitName;
                }
                else {
                    return oMeasurementUnits[i].Symbol;
                }
            }
        }
        return sUnitNameSymbol;
    }

    $("#btnAddSpecification").click(function () {
        var getSelection = $('#tblPurchaseInvoiceDetail').datagrid('getSelected');
         
        if(getSelection==null || getSelection.ProductID<=0)
        {
            alert("Please select a Item !");
            return false;
        }
        if(getSelection.PurchaseInvoiceDetailID <=0){
            alert("Please Save Purchase Order Detail !");
            return false;

        }
        else
        {
         
            var obj = {
                PIDetailID: getSelection.PurchaseInvoiceDetailID ,
                ProductID : getSelection.ProductID

            }
             
            $.ajax
              ({
                  type: "POST",
                  dataType: "json",
                  url : _sBaseAddress+  "/PurchaseBill/ProductSpecHeadFORPOByProduct",
                  data:  JSON.stringify(obj),
                  contentType: "application/json; charset=utf-8",
                  success: function (data) {
                      $("#winProcurementSpecification").icsWindow('open',"Procurement Specification For Product Name :" +getSelection.ProductName);
                      $('#tblProcurementSpec').datagrid('loadData',data); 
                      if (data.length>0)
                      {
                          for(var i=0; i< data.length ;i++){
                              if(data[i].PISpecID > 0)
                                  $('#tblProcurementSpec').datagrid("checkRow", i);
                          }
                           
                      }
                  
                  },
                  error: function (xhr, status, error)
                  {
                      alert(error);
                  }
              });


        }
           
    });
        
    function CloseProcurementSpec()
    {
        $('#winProcurementSpecification').icsWindow('close');
    }
    function SaveProcurementSpec()
    {
        endEditingPOSpec();
        var oPISpecs=$('#tblProcurementSpec').datagrid('getChecked');
        if(oPISpecs.length<0)
        {
            alert("No Selection found");
            return;
        }
          
        else{

            for(var i=0; i<oPISpecs.length; i++){
                if(oPISpecs[i].PIDescription == ""){
                    alert("Description Can not empty");
                    return;
                }
            }
            var obj={
                oPISpecs:oPISpecs
            }
            debugger;
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/PurchaseBill/IUDPISpec",
                traditional: true,
                data:  JSON.stringify(obj),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var result= jQuery.parseJSON(data);
                    if(result.ErrorMessage ==""){
                        alert("Data Save Successfully ");
                        CloseProcurementSpec();
                    }
                    else{
                        alert(result.ErrorMessage);
                    }
                      
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });

        }
            

    }
    var editIndexPQSpec = undefined;
    function endEditingPOSpec(){
        if (editIndexPQSpec == undefined){return true}
        if ($('#tblProcurementSpec').datagrid('validateRow', editIndexPQSpec)){

            $('#tblProcurementSpec').datagrid('endEdit', editIndexPQSpec);
            editIndexPQSpec = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRowProcurementSpec(index){

        if (editIndexPQSpec != index)
        {
            if (endEditingPOSpec())
            {
                $('#tblProcurementSpec').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndexPQSpec = index;
            }
            else
            {
                $('#tblProcurementSpec').datagrid('selectRow', editIndexPQSpec);
            }
        }
    }

    function SetPickerValue_Spec(oPickerobj)
    {
        var oreturnobj = "", oreturnobjs = [] ;
        if(oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        }else
        {
            oreturnobj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        
        $("#"+oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
       
        /*--Set Specification? ----*/
        if (oPickerobj.winclass == 'clsSpecHeadPicker')
        {
            if (oreturnobjs != null && oreturnobjs.length> 0)
            {
            
                var getSelection = $('#tblPurchaseInvoiceDetail').datagrid('getSelected');
                var indexSeq=$('#tblProcurementSpec').datagrid("getRows").length  ;
                var ProductSpecHeads =[];
                for (i = 0; i < oreturnobjs.length; i++)
                {
                    ++indexSeq;
                    ProductSpecHeads.push({ProductSpecHeadID : 0 , ProductID:getSelection.ProductID,SpecHeadID:oreturnobjs[i].SpecHeadID ,Sequence:indexSeq});
                }
                var oSpecHead={
                    ProductSpecHeads:ProductSpecHeads
                }
                
                $.ajax
                  ({
                      type: "POST",
                      dataType: "json",
                      url : _sBaseAddress+  "/ProductSpecHead/Save",
                      data:  JSON.stringify(oSpecHead),
                      contentType: "application/json; charset=utf-8",
                      success: function (data) {
                          if (data.length>0)
                          {
                              
                              var obj = {
                                  PIDetailID: getSelection.PurchaseInvoiceDetailID ,
                                  ProductID : getSelection.ProductID

                              }
             
                              $.ajax
                                ({
                                    type: "POST",
                                    dataType: "json",
                                    url : _sBaseAddress+  "/PurchaseBill/ProductSpecHeadFORPOByProduct",
                                    data:  JSON.stringify(obj),
                                    contentType: "application/json; charset=utf-8",
                                    success: function (data) {
                                        $("#winProcurementSpecification").icsWindow('open',"Procurement Specification For Product Name :" +getSelection.ProductName);
                                        $('#tblProcurementSpec').datagrid('loadData',data); 
                                        if (data.length>0)
                                        {
                                            for(var i=0; i< data.length ;i++){
                                                if(data[i].PISpecID > 0)
                                                    $('#tblProcurementSpec').datagrid("checkRow", i);
                                            }
                           
                                        }
                  
                                    },
                                    error: function (xhr, status, error)
                                    {
                                        alert(error);
                                    }
                                });
             
                          }
                          

                      },
                      error: function (xhr, status, error)
                      {
                          alert(error);
                      }
                  });
                
            } 
        }
    }
    function IntializePickerbutton_Spec(oPickerobj)
    {
 
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            SetPickerValue_Spec(oPickerobj);
        });
        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValue_Spec(oPickerobj);
            }
        });
    }
    $("#btnSpecPick").click(function () {
        debugger;
        var getSelection = $('#tblPurchaseInvoiceDetail').datagrid('getSelected');
        var getSpecHeads ="";
        var gridData =$('#tblProcurementSpec').datagrid("getRows");
        if(gridData.length>0){
            for(var i=0; i<gridData.length; i++){
                getSpecHeads += gridData[i].SpecHeadID +" , ";
            }
        }
         
        var oSpecHead ={
            Params:getSpecHeads
        }
          
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oSpecHead,
            ControllerName: "ProductSpecHead",
            ActionName: "SpecHeadSearchByProduct",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                debugger;
                if (response.objs[0].SpecHeadID> 0) {
                    var tblColums = [], searcingField = "", windowTittle = "";
                    var oColumn = { field: 'SpecName', name: 'Head Name', width: '50%', enableSorting: false }; tblColums.push(oColumn);
                     
                    var oPickerParam = {
                        winid: 'winSpecHeadPicker',
                        winclass: 'clsSpecHeadPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblSpecHeadPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        //searchingbyfieldName: 'SpecName',
                        windowTittle: 'Specification Head List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton_Spec(oPickerParam);//multiple return

                        
                }
            }
        });
    });




</script>