

@{
    ViewBag.Title = "RefreshList";  
}

@model ESimSol.BusinessObjects.ProductCategory  
    <div class="PageHeading"> 
       <table border="0">
                <tr>
                
                    <td style="width:900px" class="Headline">Product Category List</td>
                </tr>
            </table></div>    
    <div class="PageBody" style="overflow:auto">
       <table border="0">
            <tr>
                <td style="width:50px"></td>
                <td style="width:800px">
                           <div id="treeDiv">
                           </div>              
                </td>
                <td style="width:50px"></td>
            </tr>            
        </table>     
    </div>
    <div class="PageFooter">
            <div style="margin-left:20px">
            <table>
                   <tr>
                    <td style="width:450px">
                     @Html.ActionLink("Add", "Add", new { ParentID = 0 }, new { id = "lblAddNode" })                   
                ||  @Html.ActionLink("Edit", "Edit", new { id = 0 }, new { id = "lblEditNode" })   
                ||  @Html.ActionLink("Delete", "Delete", new { id = 0 }, new { id = "lblDeleteNode" })  
                 </td>                     
            <td style="width:400px; text-align:right">   
            @Html.ActionLink("Refresh  Product Category List", "RefreshList")
            </td>
            </tr>
           </table>
            </div>    
    </div>
 



<script type="text/javascript">

    var tree;
    var initialData;
    var jtree; 
    var oNode;
    var oNodeID;
    var obj; 
    var ParentID=0;
    var IsLastLayer=0;   
    $(document).ready(function () {
//    debugger;      
        initialData = @Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        treewithJavascript();
    });


  
    function MakeTree(TempchildNodes, otempNode){
//    debugger;
         for(var item in TempchildNodes)
         {                
             obj = {
                label:TempchildNodes[item].ProductCategoryName,
                oNodeID: TempchildNodes[item].ProductCategoryID,
                IsLastLayer:TempchildNodes[item].IsLastLayer 
            };
             
            var jNode = new YAHOO.widget.TextNode(obj, otempNode);          
            if(TempchildNodes[item].ChildCategorys !=null)
            {
                MakeTree(TempchildNodes[item].ChildCategorys, jNode);
            }
         }
    }


    function treewithJavascript() {
//    debugger;
            jtree = new YAHOO.widget.TreeView("treeDiv");
            var root = jtree.getRoot();

                obj = {
                label: initialData.ProductCategoryName,
                oNodeID: initialData.ProductCategoryID,
                IsLastLayer :initialData.IsLastLayer
            };
            var TempNode = new YAHOO.widget.TextNode(obj, root);
//            debugger;
            
     
            if(initialData.ChildCategorys!=null)
            {              
                MakeTree(initialData.ChildCategorys, TempNode);
            }

            // By default, trees with TextNodes will fire an event for when the label is clicked:
            jtree.subscribe("labelClick", function (node) {
            ParentID=node.data.oNodeID ;
            IsLastLayer=node.data.IsLastLayer ;
//          alert(node.data.oNodeID + " label was clicked");
            });
            jtree.render();
        }



    $("#lblAddNode").click(function () {
//        debugger;        
        if(ParentID==null || ParentID<=0)
        {
            window.alert('Please select a parent Product Category.');
            return;
        }
        if (IsLastLayer==true)
        {
            window.alert('This category is Last Layer. Child cant be added under this category.');
        }
        var lblNode = document.getElementById("lblAddNode");
        var sTemp=lblNode.href;
        lblNode.href=sTemp.replace("=0","="+ParentID);
    })



     $("#lblEditNode").click(function () {
//        debugger;
        if(ParentID==null || ParentID<=0)
        {
            window.alert('Please select a  Product Category.');
            return;
        }
        var lblNode = document.getElementById("lblEditNode");
        var sTemp=lblNode.href;
        lblNode.href=sTemp.replace("/0","/"+ParentID);
    })


     $("#lblDeleteNode").click(function () {
//        debugger;
        if(ParentID==null || ParentID<=0)
        {
            window.alert('Please select a  Product Category');
            return;
        }
        var lblNode = document.getElementById("lblDeleteNode");
        var sTemp=lblNode.href;
        lblNode.href=sTemp.replace("/0","/"+ParentID);
    })

    $("#lblEditPTMNode").click(function () {
        //debugger;        
        if(IsLastLayer==0)
        {
            window.alert('Please select Last Layer');
            return;
        }
        var lblNode = document.getElementById("lblEditPTMNode");
        var sTemp=lblNode.href;
        lblNode.href=sTemp.replace("/0","/"+ParentID);
    })
</script>
