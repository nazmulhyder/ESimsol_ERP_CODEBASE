@model IEnumerable<ESimSol.BusinessObjects.EmployeeBonus>
    @{
        ViewBag.Title = "Employee Bonus";
    }
    
    <div style="margin-left:0px; height:500px" class="menuMainCollectionTable">
        <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
            <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
                <label style="font-size:18px;">Please wait</label>
                <div id="progressbar" style="width:100%;height:37px;"></div>
            </div>
        </div>
        <table id="tblEmployeeBonus" title="Employee Bonus" class="easyui-datagrid" style="width:100%;height:510px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbar">
            <thead>
                <tr>
                    <th data-options="field:'Selected',checkbox:true"></th>
                    <th field="EmployeeCode" width="10%" align="left">Code</th>
                    <th field="EmployeeName" width="10%" align="left">Name</th>
                    <th field="LocationName" width="10%" align="left">Location</th>
                    <th field="DepartmentName" width="10%" align="left">Department</th>
                    <th field="DesignationName" width="10%" align="left">Designation</th>
                    <th field="EmployeeCategoryInString" width="10%" align="left">Category</th>
                    <th field="ConfirmationDateInString" width="10%" align="left">Confirmation</th>
                    <th field="JoiningDateInString" width="10%" align="left">Joining</th>
                    <th field="SalaryHeadName" width="6%" align="left">Salary Head</th>
                    <th field="CompEBGrossAmount" width="10%" align="right" formatter="formatPrice">Net Bonus Amount</th>
                    <th field="Note" width="10%" align="left">Purpose</th>
                    <th field="Year" width="5%" align="left">Year</th>
                    <th field="MonthInString" width="5%" align="left">Month</th>
                    <th field="BonusDeclarationDateInString" width="10%" align="left">Declaration</th>
                    <th field="ApproveByName" width="10%" align="left">Approve By</th>
                    <th field="ApproveDateInString" width="10%" align="left">Approve Date</th>
                </tr>
            </thead>
        </table>

        <div>
            <input id="chkRange_Colection" type="checkbox" />Range
            <label id="lblRange1_Colection">
                <input id="txtFrom_Colection" type="text" style="width:40px" />&nbsp; To &nbsp;
            </label>
            <label id="lblRange2_Colection">
                <input id="txtTo_Colection" type="text" style="width:40px" />
            </label>
            &nbsp; &nbsp;
            <label id="lblcount_Colection"></label>
            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next_Collection()">Next</a>
        </div>

        <div id="toolbar" style="height:auto;">
            <select id="cboProcessMonth_Collection"></select>
            <select id="cboProcessYear_Collection"></select>
            <input id="txtEmployee_Collection" style="width:120px;" type="text" placeholder="Type Code & Enter" />
            <a id="btnEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
            <a id="btnCEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

            <input id="txtBusinessUnit_Collection" style="width:13%;" placeholder="Pick Business Unit" type="text" />
            <a id="btnBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
            <a id="btnResetBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
            
            <input id="txtLocation_Colection" style="width:12%;" placeholder="Pick Location" type="text" />
            <a id="btnLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
            <a id="btnResetLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

            <input id="txtDepartment_Collection" style="width:12%;" type="text" placeholder="Pick Department" />
            <a id="btnDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
            <a id="btnResetDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

            <input id="txtDesignation_Collection" type="text" style="width:110px;" placeholder="Pick Designation" />
            <a id="btnDesignationPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
            <a id="btnResetDesignationPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
            

            <input id="txtEmployeeGroup" style="width:12%;" type="text" placeholder="Enter Group" />
            <a id="btnEmployeeGroupPicker" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
            <a id="btnEmployeeGroupPickerReset" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

            <input id="txtEmployeeBlock" style="width:12%;" type="text" placeholder="Enter Block" />
            <a id="btnEmployeeBlockPicker" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
            <a id="btnEmployeeBlockReset" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

            
            <select id="cboCategory"></select>

            S. Range :
            <input id="txtStartSalaryRange" type="text" style="width:8%" class="number" /> To
            <input id="txtEndeSalaryRange" type="text" style="width:8%" class="number" />


            <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="SearchEB()"></a>
            @*<a id="btnProcess" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Process</a>
            <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="Delete()">Delete</a>*@
            @*<a id="btnApprove_Multiple" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Approve</a>*@    
            @*<a id="btnExcelEmpBonus" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true" onclick="PrintEBExcel()"></a>
            <a id="btnExcelEmpBonusPaySlip" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true" onclick="PrintEBPaySlipExcel()">Pay Slip</a>*@
            <b><input type="checkbox" id="chkPercent" /> (%)</b>
            Print Type:
            <select id="cboPrintType" style="width:150px;"></select>
            <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true"></a>
            <a id="btnPrintExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true"></a>
        </div>

        <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="locationtree" data-options="checkbox:true" singleselect="true"></ul>
                </div>

                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:400px; text-align:right"></td>

                            <td style="width:50px">
                                <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

        <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="width: 100%; font-family: Tahoma;">
                <div style="width: 47%; float: left;">
                    <table class="tbl-AdvSearch">
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Employee Name :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Code :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Present Address :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Permanent Address :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Authentication No :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                                <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Attendance Scheme :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                                <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                BU :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboBU" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Location :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Dept./Section :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Designation :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Employee Type :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeType" style="width:130px; float:left;" class="selection-search cboReset"></select>
                                &nbsp; Group:
                                <input id="txtEmployeeGroupAdv" style="width:90px;" type="text" />
                                <input id="btnEmployeeGroupPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                                <input id="btnEmployeeGroupResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Category:
                            </td>
                            <td class="td-AdvSearch-Level">
                                <div>
                                    <select id="cboCategory" style="width:130px; float:left;"></select>
                                    &nbsp; Gender :
                                    <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                        <option value="0">None</option>
                                        <option value="1">Male</option>
                                        <option value="2">Female</option>
                                    </select>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Current Shift :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboShift_EmpSearch" style="width:130px; float:left;" class="selection-search cboReset"></select>

                                &nbsp; Block:
                                <input id="txtEmployeeBlockAdv" style="width:90px;" type="text" />
                                <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                                <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Card Status :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Working Status :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Date Of Birth :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboDateType" style="width: 75px" class="cboReset">
                                    <option value='0'>None</option>
                                    <option value='1'>Equal</option>
                                    <option value='2'>Between</option>
                                </select>
                                <span></span>
                                <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                                <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                                <span id="regionDateTo">
                                    <span>To</span>
                                    <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                    <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                                </span>

                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Joining Date :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                                <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                                <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkActive" class="chkReset" /> Active
                                <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                                <input type="checkbox" id="chkUser" class="chkReset" /> User
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                                <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                            </td>
                        </tr>
                    </table>
                </div>
                <div style="width: 52%; float: right;">
                    <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 480px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                        <thead>
                            <tr>
                                <th data-options="field:'Selected',checkbox:true"></th>
                                <th field="Code" width="200"> Code</th>
                                <th field="Name" width="150">Employee Name</th>
                                <th field="DepartmentName" width="100">Department</th>
                                <th field="DesignationName" width="100">Designation</th>
                            </tr>
                        </thead>
                    </table>
                    <table style="width: 485px; font-size: 12px; font-weight: bold;">
                        <tr>
                            <td style="text-align: left">
                                <input id="chkRange" type="checkbox" />Range
                                <label id="lblRange1">
                                    <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                                </label>
                                <label id="lblRange2">
                                    <input id="txtTo" type="text" style="width:40px" />
                                </label>
                                <label id="lblcount"></label>
                            </td>
                            <td style="text-align: right">
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                                <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                                <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align: left"></td>
                            <td style="text-align: right"></td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>

        <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
                </div>
                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:400px; text-align:right"></td>

                            <td style="width:50px">
                                <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

        <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
                </div>

                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:400px; text-align:right"></td>

                            <td style="width:50px">
                                <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

        <div id="winProcess" class="easyui-window winstyle" title="Process" style="width:400px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <fieldset>
                <legend style="font-weight:bold"> Process : </legend>
                <table style="width:100%">
                    <tr style="width:100%">
                        <td style="width:20%; text-align:right;">SalaryHead :</td>
                        <td style="width:80%" colspan="3">
                            <select id="cboSalaryHead" style="width:97.5%"></select>
                        </td>
                    </tr>
                    <tr style="width:100%">
                        <td style="width:20%; text-align:right;">Month :</td>
                        <td style="width:35%">
                            <select id="cboProcessMonth" style="width:95%"></select>
                        </td>
                        <td style="width:10%">Year :</td>
                        <td style="width:35%">
                            <select id="cboProcessYear" style="width:95%"></select>
                        </td>
                    </tr>
                    <tr style="width:100%">
                        <td style="width:20%; text-align:right;">Purpose :</td>
                        <td style="width:80%" colspan="3">
                            <input id="txtPurpose" type="text" style="width:95.5%" />
                        </td>
                    </tr>
                    <tr style="width:100%">
                        <td style="width:20%; text-align:right;">Dec. Date :</td>
                        <td style="width:80%" colspan="3">
                            <input id="dtUptoDate" type="text" style="width: 98%" class="easyui-datebox" required="required" data-options="formatter:icsdateformat, parser:icsdateparser" />
                        </td>
                    </tr>
                </table>
            </fieldset>

            <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:220px; text-align:right"></td>
                            <td style="width:50px">
                                <a id="btnBonusProcessOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" >Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnProcessClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
        </div>
    </div>
    <style>
        .tbl-AdvSearch {
            width: 100%;
            font-size: 11px;
            font-weight: bold;
            text-align: left;
            margin-left: 3px;
        }

        .td-AdvSearch-Level {
            text-align: right;
        }

        .td-AdvSearch-Input {
            text-align: left;
        }

        .txtfield-search {
            width: 312px;
            text-align: left;
            font-size: 11px;
        }

        .txtfield-picker {
            width: 265px;
            text-align: left;
            font-size: 11px;
        }

        .selection-search {
            width: 310px;
            text-align: left;
            font-size: 11px;
        }

        .pick-btn {
            width: 20px;
            text-align: center;
            font-size: 11px;
        }
    </style>
    <script type="text/javascript">
    var _oEmployeeBonuss=null;
    var _sBaseAddress="";
    var _oEmployees=[];
    var _nLastEmployeeBonusID = 0;
    var _oEmployeeBonuss = [];
    var _oEmployee = null;
    var _sSalarySchemeIDs = "";

    var _sEmployeeIDs="";
    var _sAttendanceSchemeID ="";
    var _sBusinessUnitIds = "";
    var _sLocationID = "";
    var _sDepartmentNames = "";
    var _sDepartmentIds = "";
    var _sDesignationNames = "";
    var _sDesignationIds = "";
    var _sBlockNames="";
    var _sBMMIDs="";

    var _nLastEmployeeID = 0;
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _oBusinessUnits=[];

    var _oSalaryHeads=[];
    var _oMonths=[];
        
        
    var _sBlockNamesAdv="";
    var _sBlockIDsAdv="";
    var _sGroupNamesAdv="";
    var _sGroupIDsAdv="";
    var _nLastEBID=0

    var _sBlockNames="";
    var _sBlockIDs="";
    var _sGroupNames="";
    var _sGroupIDs="";

    $(document).ready(function ()
    {
        _oEmployeeBonuss =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));

        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _oSalaryHeads= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.SalaryHeads));
        _oMonths=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Months));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();

        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

        $('#txtFrom_Colection').numberbox({min:0, precision:0 });
        $('#txtTo_Colection').numberbox({min:0, precision:0 });
        $('#txtFrom_Colection').numberbox('setValue',1);
        $('#txtTo_Colection').numberbox('setValue',50);
        document.getElementById("lblRange1_Colection").style.display = 'none';

        $('#txtEmployeeName').data("EmployeeIDs","");

        InitializeAdvSearch();


        InitializeProcess();
        LoadCateGory(oEmployeeCategorys);
        PrintTypeObject();

        $('#btnPrint').hide();
        $('#btnPrintExcel').hide();
    });
        
        function updateProgress()
        {
            var value =$('#progressbar').progressbar('getValue');
            if (value < 96){
                value += Math.floor(Math.random() * 5);
                $('#progressbar').progressbar('setValue', value);
            }
        }

        function hideShow(miliseconds)
        {
            $("#progressbarParent").hide();
        }
    function LoadCateGory(oEmployeeCategorys)
    {
        var oList=[];
        for(var i=0; i<oEmployeeCategorys.length;i++)
        {
            if(oEmployeeCategorys[i].Value!=0 && oEmployeeCategorys[i].Value!=3 && oEmployeeCategorys[i].Value!=4)
            {
                oList.push(oEmployeeCategorys[i]);
            }
        }

        $("#cboCategory").icsLoadCombo({
            List: oList,
            OptionValue: "Value",
            DisplayText: "Text",
            InitialValue:"--Category--"
        });
    }

    $('#chkRange_Colection').click(function()
    {
        if(document.getElementById("chkRange_Colection").checked == true)
        {
            $("#lblRange1_Colection").show();
        }
        else
        {
            $("#lblRange1_Colection").hide();
        }
    });

    /*---------------- emp Search Start click----------------*/

    function InitializeAdvSearch(){
        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));
        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                    {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                    {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
    }

    $("#btnEmployee").click(function () {
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            $("#lblRange1").show();
        }
        else
        {
            $("#lblRange1").hide();
        }
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }

        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }

        var nBusinessUnitID = $("#cboBU").val();
        var nCategory=$('#cboCategory').val();
        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();

        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
            nEmployeeTypeID==0 && sGender=="" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
            bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 
            && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBlockIDsAdv==""&& _sGroupIDsAdv=="")
        {
            alert("Please enter you selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                    sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                    bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                    sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                    +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBlockIDsAdv+"~"+_sGroupIDsAdv;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnEmployeePickerOk").click(function () {
        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length<=0) { alert("please select atleast one item");return; }
        var sEmpIDs="";
        var sEmpNames="";
        for(var i=0;i<oEmployees.length;i++)
        {
            sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
            sEmpNames=sEmpNames+oEmployees[i].Name+",";
        }
        _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
        sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
        $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
        $("#txtEmployee_Collection").val(sEmpNames);
        $("#winEmployeePicker").icsWindow('close');

    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });

    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    /*-------------Start Business Unit Picker----------------*/
    $("#btnBusinessUnitPicker_Collection").click(function(e){
        BusinessUnitPicker();
    });

    $("#txtBusinessUnit_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            BusinessUnitPicker();
        }
    });

    function BusinessUnitPicker()
    {
        var oBusinessUnit={
            BusinessUnitID:0
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBusinessUnit,
            ControllerName: "BusinessUnit",
            ActionName: "GetsBusinessUnitWithPermission",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BusinessUnitID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBusinessUnit',
                        winclass:'clsBusinessUnit',
                        winwidth: 320,
                        winheight: 400,
                        tableid: 'tblBusinessUnit',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Business Unit List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBusinessUnitPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBusinessUnits=[];
            oBusinessUnits = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBusinessUnit')
            {
                if(oBusinessUnits!=null && oBusinessUnits.length>0)
                {
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sBusinessUnitName = "";
                    for(var i=0; i<oBusinessUnits.length; i++)
                    {
                        sBusinessUnitName+=oBusinessUnits[i].Name+",";
                        _sBusinessUnitIds+=oBusinessUnits[i].BusinessUnitID+",";
                    }

                    sBusinessUnitName=sBusinessUnitName.substring(0,sBusinessUnitName.length-1);
                    _sBusinessUnitIds=_sBusinessUnitIds.substring(0,_sBusinessUnitIds.length-1);
                    $("#txtBusinessUnit_Collection").val(sBusinessUnitName);
                }
                else
                {
                    alert("Please select a Business Unit.");
                }
            }
        });
    }

    $("#btnResetBusinessUnitPicker_Collection").click(function(e){
        $('#txtBusinessUnit_Collection').val("");
        _sBusinessUnitIds="";
    });
    /*-------------End Business Unit Picker----------------*/

    /*-------------Location Picker----------------*/
    var btnLocation="";
    $("#btnLocationPicker,#btnLocationPicker_Colection").click(function(e){
        debugger;
        btnLocation = $(this).attr("id");
        var sBusinessUnitIDs ="";
        var nBusinessUnitID=0;
        if(btnLocation=="btnLocationPicker")
        {
            nBusinessUnitID = $("#cboBU").val();
            sBusinessUnitIDs = String(nBusinessUnitID);
        }
        else{sBusinessUnitIDs=_sBusinessUnitIds;}
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        if(btnLocation=="btnLocationPicker")
        {
            var oLocation = $('#locationtree').tree('getSelected');
            if(oLocation!=null && oLocation.id>0){
                $("#winLocationPicker").icsWindow('close');
                _sLocationID=oLocation.id;
                $('#txtLocation').val(oLocation.text);
            }
            else{
                alert("Please select a location.");
            }
        }
        else
        {
            var oLocations = $('#locationtree').tree('getChecked');
            if(oLocations!=null && oLocations.length>0)
            {
                var LocationName="";
                for(var i=0; i<oLocations.length; i++)
                {
                    if(oLocations[i].id !=1)
                    {
                        LocationName+=oLocations[i].text+",";
                        _sLocationID+=oLocations[i].id+",";
                    }
                }
                debugger;
                LocationName=LocationName.substring(0,LocationName.length-1);
                _sLocationID=_sLocationID.substring(0,_sLocationID.length-1);
                $("#winLocationPicker").icsWindow('close');
                $('#txtLocation_Colection').val(LocationName);
            }
            else
            {
                alert("Please select a location.");
            }
        }
    });

    $('#txtLocation_Colection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };
            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker,#btnResetLocationPicker_Colection").click(function(e){
        $('#txtLocation').val("");
        $('#txtLocation_Colection').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){
        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){
        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentIds= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
    });

    $("#btnDepartmentPickerClose_Collection").click(function(e){
        $("#winDepartmentPicker_Collection").icsWindow('close');
    });

    $("#btnResetDepartmentPicker,#btnResetDepartmentPicker_Collection").click(function(e){
        $('#txtDepartment,#txtDepartment_Collection').val("");
        _sDepartmentIds="";
        _sDepartmentNames="";
    });

    /*-------------Designation Picker----------------*/
    var btnDesignation="";
    $("#btnDesignationPicker,#btnDesignationPicker_Collection").click(function(e){
        btnDesignation = $(this).attr("id");
        DesignationPicker();
    });

    $("#txtDesignation_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            btnDesignation ="btnDesignationPicker_Collection";
            DesignationPicker();
        }
    });

    function DesignationPicker()
    {
        var oDesignation={
            DesignationID:0,
            Params: _sBusinessUnitIds+'~'+_sLocationID+'~'+ _sDepartmentIds
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;
                    if(btnDesignation=="btnDesignationPicker_Collection"){bmultiplereturn=true;}

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oDesignations=[];

            if(btnDesignation=="btnDesignationPicker_Collection")
            {
                oDesignations = $('#'+oPickerobj.tableid).datagrid('getChecked');
            }
            else
            {
                var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
                oDesignations.push(oDesignation);
            }

            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignations!=null && oDesignations.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames+=oDesignations[i].Name+",";
                        _sDesignationIds+=oDesignations[i].DesignationID+",";
                    }

                    _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                    _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
                    if(btnDesignation=="btnDesignationPicker_Collection")
                    {
                        $("#txtDesignation_Collection").val(_sDesignationNames);
                    }
                    else
                    {
                        $("#txtDesignation").val(_sDesignationNames);
                    }
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker,#btnResetDesignationPicker_Collection").click(function(e){
        $('#txtDesignation').val("");
        $('#txtDesignation_Collection').val("");
        _sDesignationIds="";
        _sDesignationNames = "";
    });

    /*------------- Start Block Picker----------------*/
   
    $("#btnBlock,#btnBlock_Collection").click(function(e){
        BlockPicker($(this).attr("id"));
    });
 
    function BlockPicker(btnBlock)
    {
        var oBlockMachineMapping={
            ProductionProcessInt:0,
            DepartmentID:0,
            BlockName:""
        }
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlockMachineMapping,
            ControllerName: "BlockMachineMapping",
            ActionName: "BlockMachineMapping_Search",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
        
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BMMID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
                    var bmultiplereturn=true;
                    if(btnBlock=="btnBlock"){bmultiplereturn=false;}
                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblShift',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'BlockName',
                        windowTittle: 'Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam,btnBlock);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
   
    function IntializeBlockPickerbutton(oPickerobj,btnBlock)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBlocks=[];
            if(btnBlock=="btnBlock"){
                var oBlock= $('#'+oPickerobj.tableid).datagrid('getSelected');
                oBlocks.push(oBlock);
            }
            else
            {
                oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            }
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNames += oBlocks[i].BlockName+",";
                        _sBMMIDs += oBlocks[i].BMMID+",";
                    
                    }
                    _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                    _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
                    if(btnBlock=="btnBlock"){$("#txtBlock").val(_sBlockNames);}else{$("#txtBlock_Collection").val(_sBlockNames);}
                }
                else
                {
                    alert("Please select a Block.");
                }
            }
        });
    }

    $("#btnResetBlock,#btnResetBlock_Collection").click(function(e){
        $('#txtBlock').val("");
        $('#txtBlock_Collection').val("");
        _sBlockNames="";
        _sBMMIDs = "";
    });

    $("#txtBlock,#txtBlock_Collection").keypress(function(e){
        if (e.which == 13)
        {
            BlockPicker();
        }
    });
    /*------------- End Block Picker----------------*/

    /*---------------- emp Search End click ----------------*/

    /*---------------- emp Search Start keyprees----------------*/
    $('#txtEmployee_Collection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee_Collection").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
            SearchEmployeeByText(sCodeName);
        }
    });

    function SearchEmployeeByText(sEmpNameCode){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _sEmployeeIDs=oreturnObj.EmployeeID;
                    $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
                    $("#txtEmployee_Collection").val(oreturnObj.Name);
                    $("#winEmployeePicker").icsWindow('close');
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        _sEmployeeIDs=oreturnObj.EmployeeID;
                        $('#txtEmployee').data("EmployeeIDs",_sEmployeeIDs);
                        $("#txtEmployee_Collection").val(oreturnObj.Name);
                        $("#winEmployeePicker").icsWindow('close');
                    }
                }
            }
        });
    }

    $('#btnCEmployee').click(function (e)
    {
        document.getElementById("txtEmployee_Collection").value = "" ;
        $('#txtEmployeeName').data("EmployeeIDs","");
        _sEmployeeIDs = 0;
    });

    /*---------------- emp Search Start keyprees----------------*/

    /*-------------Department Picker start Collection----------------*/
    $("#btnDepartmentPicker_Collection").click(function(e){
        DepartmentPicker();
    });

    $("#txtDepartment_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            DepartmentPicker();
        }
    });

    function DepartmentPicker()
    {
        $("#winDepartmentPicker_Collection").icsWindow('open');
        var oDepartment={DepartmentID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree_Collection').tree({ data: [response.obj] });
                }
            }
        });
    }

    $("#btnDepartmentPickerOk_Collection").click(function(e){
        var oDepartments = $('#departmenttree_Collection').tree('getChecked');
        if(oDepartments!=null && oDepartments.length>0){
            $("#winDepartmentPicker_Collection").icsWindow('close');
            for(var i=0; i<oDepartments.length; i++)
            {
                _sDepartmentNames+=oDepartments[i].text+",";
                _sDepartmentIds+=oDepartments[i].id+",";
            }

            _sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
            _sDepartmentIds=_sDepartmentIds.substring(0,_sDepartmentIds.length-1);
            $("#txtDepartment_Collection").val(_sDepartmentNames);
        }
        else{
            alert("Please select a department.");
        }
    });

    /*-------------Department Picker start Collection----------------*/


    // Process start
    $("#btnProcess").click(function(e){
        InitializeProcess();
        $("#winProcess").icsWindow('open');
    });
    $("#btnProcessClose").click(function(e){
        $("#winProcess").icsWindow('close');
    });
    function InitializeProcess()
    {
        $("#cboSalaryHead").icsLoadCombo({
            List: _oSalaryHeads,
            OptionValue: "SalaryHeadID",
            DisplayText: "Name"
        });

        $("#cboProcessMonth,#cboProcessMonth_Collection").icsLoadCombo({
            List: _oMonths,
            OptionValue: "Value",
            DisplayText: "Text",
            InitialValue:'Month'
        });

        var oDate=new Date();
        oDate.setFullYear(2015);
        var sYear="";
        sYear +="<option value='0'>"+'Year'+"</option>";
        for(var i=0; i<=10; i++)
        {
            sYear += "<option value='" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"'>" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"</option>";
        }
        $('#cboProcessYear').html(sYear);
        $('#cboProcessYear_Collection').html(sYear);

        $('#txtPurpose').val("");
        $('#dtUptoDate').datebox('setValue', icsdateformat(new Date()));

        var oDate=new Date();
        $("#cboProcessMonth,#cboProcessMonth_Collection").val(oDate.getMonth() + 1);
        $("#cboProcessYear,#cboProcessYear_Collection").val(oDate.getFullYear());
    }

    $("#btnBonusProcessOk").click(function(e){
        var SalaryHeadID=$("#cboSalaryHead").val();
        var ProcessMonth=$("#cboProcessMonth").val();
        var ProcessYear=$('#cboProcessYear').val();
        var Purpose=$('#txtPurpose').val();
        var UptoDate=$('#dtUptoDate').datebox('getValue');

        if(SalaryHeadID<=0)
        {
            alert("Please select Salary Head");
            return;
        }
        if(ProcessMonth<=0)
        {
            alert("Please select Month");
            return;
        }
        if(ProcessYear<=0)
        {
            alert("Please select Year");
            return;
        }

        ProgressBar(false);
        $.ajax
        ({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EmployeeBonus/BonousProcess",
            traditional: true,
            data: JSON.stringify({SalaryHeadID:SalaryHeadID,ProcessYear:ProcessYear,ProcessMonth:ProcessMonth,Purpose:Purpose,UptoDate:UptoDate}),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oList = jQuery.parseJSON(data);
                if (oList.length>0 && oList[0].ErrorMessage == "")
                {
                    alert("Process successfully");
                    DynamicRefreshList(oList, "tblEmployeeBonus");
                    $("#winProcess").icsWindow('close');
                }
                else
                {
                    alert(oList[0].ErrorMessage);
                }
                ProgressBar(true);
            },
            error: function (xhr, status, error) {
                alert(error);
                ProgressBar(true);
            }
        });
    });

    function ProgressBar(bHide)
    {
        if(bHide)
        {
            $("#progbarParent").hide();
        }
        else{
            $("#progbarParent").show();
        }
    }
    // Process end

    function Delete()
    {
        var oEmployeeBonuss = $('#tblEmployeeBonus').datagrid('getChecked');
        var nIndexes = [];
        var sEmployeeBonusIDs = "";
        if (oEmployeeBonuss.length <= 0) {
            alert("please select at least one Item!");
            return;
        }
        if (oEmployeeBonuss.length >100) {
            alert("please select max 100 Items!");
            return;
        }
        for (var i = 0; i < oEmployeeBonuss.length; i++) {
            if(oEmployeeBonuss[i].ApproveDateInString !="")
            {
                alert(" Approved Item Can Not Be Deleted !");
                return;
            }
            var SelectedRowIndex = $('#tblEmployeeBonus').datagrid('getRowIndex', oEmployeeBonuss[i]);
            nIndexes.push(SelectedRowIndex);
            sEmployeeBonusIDs += oEmployeeBonuss[i].EBID + ",";
        }
        sEmployeeBonusIDs = sEmployeeBonusIDs.substring(0, sEmployeeBonusIDs.length - 1);

        if (!confirm("Confirm to Delete?")) return;
        if (sEmployeeBonusIDs!="") {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/EmployeeBonus/EmployeeBonus_Delete",
                data: { sEmployeeBonusIDs:sEmployeeBonusIDs },
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    var feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "") {
                        for (var i =nIndexes.length-1 ; i >=0; i--) {
                            $('#tblEmployeeBonus').datagrid('deleteRow', nIndexes[i]);
                        }
                        alert("Delete sucessfully");
                    } else {
                        alert(feedbackmessage);
                    }
                },
                error: function(xhr, status, error) {
                    alert(error);
                }
            });
        }
    }

    function SearchEB()
    {
        if(!_bNext)
        {
            _nRowLength = 0;
            _nLastEBID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo_Colection").value;
        if(document.getElementById("chkRange_Colection").checked == true)
        {
            var RangeFrom = 0;
            var RangeTo = 0;
            RangeFrom = parseFloat(document.getElementById("txtFrom_Colection").value);
            RangeTo = parseFloat(document.getElementById("txtTo_Colection").value);

            if(RangeFrom > RangeTo)
            {
                alert("Invalid Range !");
                return;
            }
            _nRowLength = 0;
            _nLoadRecords = 0;

            _nRowLength = RangeFrom-1;
            _nLoadRecords = RangeTo - RangeFrom +1;
        }
        debugger;
        var ProcessMonth=$("#cboProcessMonth_Collection").val();
        var ProcessYear=   $("#cboProcessYear_Collection option:selected").text();
        var nCategory=$('#cboCategory').val();
        if(ProcessMonth<=0 && ProcessYear=="Year" && _sEmployeeIDs=="" && _sBusinessUnitIds=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" && _sBlockIDs=="" && _sGroupIDs =="" && nCategory==0)
        {
            alert("Please select at least one searching criteria !");
            return;
        }
        if(ProcessYear=="Year"){ProcessYear=0;}



        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }

        var tsv = ((new Date()).getTime()) / 1000;
        
            
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EmployeeBonus/SearchWithPasignation",
            data: JSON.stringify({ProcessMonth:ProcessMonth,ProcessYear:ProcessYear,sEmployeeIDs:_sEmployeeIDs,nLocationID: _sLocationID, sDepartmentIds: _sDepartmentIds,sDesignationIds:_sDesignationIds,nCategory:nCategory,nStartSalaryRange:nStartSalaryRange,nEndSalaryRange:nEndSalaryRange,nLoadRecords : _nLoadRecords, nRowLength : _nRowLength,sBusinessUnitIDs:_sBusinessUnitIds,sBlockIDs:_sBlockIDs,sGroupIDs:_sGroupIDs, ts: tsv}),
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                var oEmployeeBonuss =[];
                oEmployeeBonuss = jQuery.parseJSON(data);
                if(oEmployeeBonuss.length>0 && oEmployeeBonuss[0].ErrorMessage=="")
                {
                    if(!_bNext)
                    {
                        DynamicRefreshList([],'tblEmployeeBonus');
                    }

                    for (var j = 0; j < oEmployeeBonuss.length; j++)
                    {
                        $('#tblEmployeeBonus').datagrid('appendRow',oEmployeeBonuss[j]);
                    }
                }
                else
                {
                    if(_bNext == false)
                    {
                        alert("Data not found !!");
                        DynamicRefreshList([],'tblEmployeeBonus');
                    }
                    else
                    {
                        alert("No more data found !");
                    }
                }
                var oEmployeeBonuss=$('#tblEmployeeBonus').datagrid('getRows');
                document.getElementById("lblcount").innerHTML = " | Count ="+ oEmployeeBonuss.length;
                _bNext = false;
                clearInterval(intervalID);
                $("#progressbarParent").hide();
            },
            error: function(xhr, status, error)
            {
                alert(error);
                clearInterval(intervalID);
                $("#progressbarParent").hide();
            }
        });
    }

    function Next_Collection()
    {
        var oEBs =[];
        oEBs=$('#tblEmployeeBonus').datagrid('getRows');
        _nRowLength = oEBs.length;
        _bNext = true;

        if (oEBs.length<=0)
        {
            alert('Please Select Criteria and click on "Search" to find information.!!');
            return;
        }
        var oEB = oEBs[oEBs.length-1];
        if (_nLastEBID==oEB.EBID)
        {
            alert('No more data found by this date range');
            return;
        }
        _nLastEBID=oEB.EBID;
        SearchEB();
    }

    $('#btnApprove_Multiple').click(function (e) {
        var oEmployeeBonuss = $('#tblEmployeeBonus').datagrid('getChecked');
        var nIndexes = [];
        var sEmployeeBonusIDs = "";
        //if (oEmployeeBonuss.length <= 0) {
        //    alert("please select at least one Item!");
        //    return false;
        //}
        if(oEmployeeBonuss.length>0)
        {
            for (var i = 0; i < oEmployeeBonuss.length; i++) {
                if(oEmployeeBonuss[i].ApproveDateInString !="")
                {
                    alert("Some Bonuses are Already Approved!");
                    return;
                }
                var SelectedRowIndex = $('#tblEmployeeBonus').datagrid('getRowIndex', oEmployeeBonuss[i]);
                nIndexes.push(SelectedRowIndex);
                sEmployeeBonusIDs += oEmployeeBonuss[i].EBID + ",";
            }
            sEmployeeBonusIDs = sEmployeeBonusIDs.substring(0, sEmployeeBonusIDs.length - 1);
        }
        //var tsv = ((new Date()).getTime()) / 1000;
        //var oEB={sIDs:sEmployeeBonusIDs}

        var ProcessMonth=$("#cboProcessMonth_Collection").val();
        var ProcessYear=   $("#cboProcessYear_Collection option:selected").text();
        var nCategory=$('#cboCategory').val();
        if(ProcessMonth<=0 && ProcessYear=="Year" && _sEmployeeIDs=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" && nCategory<=0 && sEmployeeBonusIDs=="")
        {
            alert("Please select at least one searching criteria !");
            return;
        }
        if(ProcessYear=="Year"){ProcessYear=0;}
        var sParams=sEmployeeBonusIDs+"~"+ProcessMonth+"~"+ProcessYear+"~"+_sEmployeeIDs+"~"+parseInt(_sLocationID!=""?_sLocationID:0)+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+nCategory;
        if (!confirm("Confirm to Approve!")) return;

        $.ajax
         ({
             type: "POST",
             dataType: "json",
             url: _sBaseAddress + "/EmployeeBonus/EmployeeBonus_Approve",
             traditional: true,
             data: JSON.stringify({sParams:sParams}),
             contentType: "application/json; charset=utf-8",
             success: function (data) {
                 var oEmployeeBonuss = [];
                 oEmployeeBonuss = jQuery.parseJSON(data);
                 if (oEmployeeBonuss[0].ErrorMessage == "" && oEmployeeBonuss.length > 0) {
                     //for (var i = 0; i < oEmployeeBonuss.length; i++) {
                     //    $('#tblEmployeeBonus').datagrid('updateRow', { index: nIndexes[i], row: oEmployeeBonuss[i] });
                     //}
                     DynamicRefreshList(oEmployeeBonuss, "tblEmployeeBonus");
                     alert("Approved Successfully !");
                 }
                 else {
                     alert(oEmployeeBonuss[0].ErrorMessage);
                 }
             },
             error: function (xhr, status, error) {
                 alert(error);
             }
         });
    });

    function PrintEBExcel()
    {
        var oEmployeeBonuss = $('#tblEmployeeBonus').datagrid('getChecked');
        var sEmployeeBonusIDs = "";
        if(oEmployeeBonuss.length>0)
        {
            for (var i = 0; i < oEmployeeBonuss.length; i++) {
                sEmployeeBonusIDs += oEmployeeBonuss[i].EBID + ",";
            }
            sEmployeeBonusIDs = sEmployeeBonusIDs.substring(0, sEmployeeBonusIDs.length - 1);
        }
        var ProcessMonth=$("#cboProcessMonth_Collection").val();
        var ProcessYear=   $("#cboProcessYear_Collection option:selected").text();
        var nCategory=$('#cboCategory').val();
        if(oEmployeeBonuss="" && ProcessMonth<=0 && ProcessYear=="Year" && _sEmployeeIDs=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" && nCategory<=0)
        {
            alert("Please select at least one searching criteria !");
            return;
        }
        if(ProcessYear=="Year"){ProcessYear=0;}

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }

        var sParams=oEmployeeBonuss+"~"+ProcessMonth+"~"+ProcessYear+"~"+_sEmployeeIDs+"~"+parseInt(_sLocationID!=""?_sLocationID:0)+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+nCategory+"~"+nStartSalaryRange+"~"+nEndSalaryRange + "~"+ _sBlockIDs + "~" + _sGroupIDs + "~" + _sBusinessUnitIds;
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/EmployeeBonus/CompPrintBEListInXL?sParams="+sParams+"&ts="+tsv, "_blank");
    }

    function PrintEBExcel_F2()
    {
        var oEmployeeBonuss = $('#tblEmployeeBonus').datagrid('getChecked');
        var sEmployeeBonusIDs = "";
        if(oEmployeeBonuss.length>0)
        {
            for (var i = 0; i < oEmployeeBonuss.length; i++) {
                sEmployeeBonusIDs += oEmployeeBonuss[i].EBID + ",";
            }
            sEmployeeBonusIDs = sEmployeeBonusIDs.substring(0, sEmployeeBonusIDs.length - 1);
        }
        var ProcessMonth=$("#cboProcessMonth_Collection").val();
        var ProcessYear=   $("#cboProcessYear_Collection option:selected").text();
        var nCategory=$('#cboCategory').val();
        if(sEmployeeBonusIDs=="" && ProcessMonth<=0 && ProcessYear=="Year" && _sEmployeeIDs=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" && nCategory<=0)
        {
            alert("Please select at least one searching criteria !");
            return;
        }
        if(ProcessYear=="Year"){ProcessYear=0;}

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }

        var sParams=sEmployeeBonusIDs+"~"+ProcessMonth+"~"+ProcessYear+"~"+_sEmployeeIDs+"~"+parseInt(_sLocationID!=""?_sLocationID:0)+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+nCategory+"~"+nStartSalaryRange+"~"+nEndSalaryRange + "~"+ _sBlockIDs + "~" + _sGroupIDs + "~" + _sBusinessUnitIds;
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/EmployeeBonus/CompPrintBEListInXL_F2?sParams="+sParams+"&ts="+tsv, "_blank");
    }
    function PrintEBExcel_F3()
    {
        var oEmployeeBonuss = $('#tblEmployeeBonus').datagrid('getChecked');
        var sEmployeeBonusIDs = "";
        if(oEmployeeBonuss.length>0)
        {
            for (var i = 0; i < oEmployeeBonuss.length; i++) {
                sEmployeeBonusIDs += oEmployeeBonuss[i].EBID + ",";
            }
            sEmployeeBonusIDs = sEmployeeBonusIDs.substring(0, sEmployeeBonusIDs.length - 1);
        }
        var ProcessMonth=$("#cboProcessMonth_Collection").val();
        var ProcessYear=   $("#cboProcessYear_Collection option:selected").text();
        var nCategory=$('#cboCategory').val();
        if(sEmployeeBonusIDs=="" && ProcessMonth<=0 && ProcessYear=="Year" && _sEmployeeIDs=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" && nCategory<=0)
        {
            alert("Please select at least one searching criteria !");
            return;
        }
        if(ProcessYear=="Year"){ProcessYear=0;}

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }
        
        var chkPercent =  document.getElementById("chkPercent").checked;

        var sParams=sEmployeeBonusIDs+"~"+ProcessMonth+"~"+ProcessYear+"~"+_sEmployeeIDs+"~"+parseInt(_sLocationID!=""?_sLocationID:0)+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+nCategory+"~"+nStartSalaryRange+"~"+nEndSalaryRange + "~"+ _sBlockIDs + "~" + _sGroupIDs + "~" + _sBusinessUnitIds + "~" + chkPercent;
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/EmployeeBonus/CompPrintEBExcel_F3?sParams="+sParams+"&ts="+tsv, "_blank");
    }
    function PrintEB_PDF_F2()
    {
        var oEmployeeBonuss = $('#tblEmployeeBonus').datagrid('getChecked');
        var sEmployeeBonusIDs = "";
        if(oEmployeeBonuss.length>0)
        {
            for (var i = 0; i < oEmployeeBonuss.length; i++) {
                sEmployeeBonusIDs += oEmployeeBonuss[i].EBID + ",";
            }
            sEmployeeBonusIDs = sEmployeeBonusIDs.substring(0, sEmployeeBonusIDs.length - 1);
        }
        var ProcessMonth=$("#cboProcessMonth_Collection").val();
        var ProcessYear=   $("#cboProcessYear_Collection option:selected").text();
        var nCategory=$('#cboCategory').val();
        if(sEmployeeBonusIDs=="" && ProcessMonth<=0 && ProcessYear=="Year" && _sEmployeeIDs=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" && nCategory<=0)
        {
            alert("Please select at least one searching criteria !");
            return;
        }
        if(ProcessYear=="Year"){ProcessYear=0;}


        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }


        var sParams=sEmployeeBonusIDs+"~"+ProcessMonth+"~"+ProcessYear+"~"+_sEmployeeIDs+"~"+parseInt(_sLocationID!=""?_sLocationID:0)+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+nCategory+"~"+nStartSalaryRange+"~"+nEndSalaryRange + "~" + _sBlockIDs + "~" + _sGroupIDs + "~" + _sBusinessUnitIds;
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/EmployeeBonus/CompPrintEBListInPDF_F2?sParams="+sParams+"&ts="+tsv, "_blank");
    }

    //Employee Bonus F4 PDF

    function PrintPDFF3()
    {
        var oEmployeeBonuss = $('#tblEmployeeBonus').datagrid('getChecked');
        var sEmployeeBonusIDs = "";
        if(oEmployeeBonuss.length>0)
        {
            for (var i = 0; i < oEmployeeBonuss.length; i++) {
                sEmployeeBonusIDs += oEmployeeBonuss[i].EBID + ",";
            }
            sEmployeeBonusIDs = sEmployeeBonusIDs.substring(0, sEmployeeBonusIDs.length - 1);
        }
        var ProcessMonth=$("#cboProcessMonth_Collection").val();
        var ProcessYear=   $("#cboProcessYear_Collection option:selected").text();
        var nCategory=$('#cboCategory').val();
        if(sEmployeeBonusIDs=="" && ProcessMonth<=0 && ProcessYear=="Year" && _sEmployeeIDs=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" && nCategory<=0)
        {
            alert("Please select at least one searching criteria !");
            return;
        }
        if(ProcessYear=="Year"){ProcessYear=0;}

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }
        
        var chkPercent =  document.getElementById("chkPercent").checked;

        var sParams=sEmployeeBonusIDs+"~"+ProcessMonth+"~"+ProcessYear+"~"+_sEmployeeIDs+"~"+parseInt(_sLocationID!=""?_sLocationID:0)+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+nCategory+"~"+nStartSalaryRange+"~"+nEndSalaryRange + "~"+ _sBlockIDs + "~" + _sGroupIDs + "~" + _sBusinessUnitIds + "~" + chkPercent;
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/EmployeeBonus/CompPrintPDFF3?sParams="+sParams+"&ts="+tsv, "_blank");
    }



    function PrintEBPaySlipExcel()
    {
        var oEmployeeBonuss = $('#tblEmployeeBonus').datagrid('getChecked');
        var sEmployeeBonusIDs = "";
        if(oEmployeeBonuss.length>0)
        {
            for (var i = 0; i < oEmployeeBonuss.length; i++) {
                sEmployeeBonusIDs += oEmployeeBonuss[i].EBID + ",";
            }
            sEmployeeBonusIDs = sEmployeeBonusIDs.substring(0, sEmployeeBonusIDs.length - 1);
        }

        var ProcessMonth=$("#cboProcessMonth_Collection").val();
        var ProcessYear=   $("#cboProcessYear_Collection option:selected").text();
        var nCategory=$('#cboCategory').val();
        if(sEmployeeBonusIDs=="" && ProcessMonth<=0 && ProcessYear=="Year" && _sEmployeeIDs=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" && nCategory<=0 && sEmployeeBonusIDs=="")
        {
            alert("Please select at least one searching criteria !");
            return;
        }
        if(ProcessYear=="Year"){ProcessYear=0;}

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }

        var sParams=sEmployeeBonusIDs+"~"+ProcessMonth+"~"+ProcessYear+"~"+_sEmployeeIDs+"~"+parseInt(_sLocationID!=""?_sLocationID:0)+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+nCategory+"~"+nStartSalaryRange+"~"+nEndSalaryRange + "~"+ _sBlockIDs + "~" + _sGroupIDs + "~" + _sBusinessUnitIds ;
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/EmployeeBonus/CompPrintEBPaySlipExcel?sParams="+sParams+"&ts="+tsv, "_blank");
    }

    function PrintTypeObject()
    {
        var oObj= new Object();
        var oItems=[];

        //oObj= new Object();
        //oObj.id=1;
        //oObj.Item="Employee Bonus";
        //oItems.push(oObj);

        //oObj= new Object();
        //oObj.id=2;
        //oObj.Item="Employee Bonus(F2)";
        //oItems.push(oObj);
        
        //oObj= new Object();
        //oObj.id=4;
        //oObj.Item="Employee Bonus(F3)";
        //oItems.push(oObj);

        
        oObj= new Object();
        oObj.id=6;
        oObj.Item="Employee Bonus";
        oItems.push(oObj);

        //oObj= new Object();
        //oObj.id=3;
        //oObj.Item="Pay Slip";
        //oItems.push(oObj);

        //oObj= new Object();
        //oObj.id=5;
        //oObj.Item="Employee Bonus Summary";
        //oItems.push(oObj);

        $("#cboPrintType").icsLoadCombo({
            List: oItems,
            OptionValue: "id",
            DisplayText: "Item"
        });
    }

    $('#btnPrintExcel').click(function (e)
    {

        debugger;
        var nPType=$("#cboPrintType").val();
        if(nPType==0)
        {
            alert("Please select one type!");
            return;
        }
        else if(nPType==1)
        {
            PrintEBExcel();
        }
        else if(nPType==2)
        {
            PrintEBExcel_F2();
        }
        else if(nPType==3)
        {
            PrintEBPaySlipExcel();
        }
        else if(nPType==4)
        {
            PrintEBExcel_F3();
        }
        else if(nPType==5)
        {
            PrintEBSummaryExcel();
        }
        else if(nPType==6)
        {
            PrintEBExcelF4();
        }
    });

            
    function PrintEBExcelF4()
    {
        debugger;
        var oEmployeeBonuss = $('#tblEmployeeBonus').datagrid('getChecked');
        var sEmployeeBonusIDs = "";
        if(oEmployeeBonuss.length>0)
        {
            for (var i = 0; i < oEmployeeBonuss.length; i++) {
                sEmployeeBonusIDs += oEmployeeBonuss[i].EBID + ",";
            }
            sEmployeeBonusIDs = sEmployeeBonusIDs.substring(0, sEmployeeBonusIDs.length - 1);
        }
        var ProcessMonth=$("#cboProcessMonth_Collection").val();
        var ProcessYear=   $("#cboProcessYear_Collection option:selected").text();
        var nCategory=$('#cboCategory').val();
        if(sEmployeeBonusIDs=="" && ProcessMonth<=0 && ProcessYear=="Year" && _sEmployeeIDs=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" && nCategory<=0)
        {
            alert("Please select at least one searching criteria !");
            return;
        }
        if(ProcessYear=="Year"){ProcessYear=0;}

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }

        var sParams=sEmployeeBonusIDs+"~"+ProcessMonth+"~"+ProcessYear+"~"+_sEmployeeIDs+"~"+parseInt(_sLocationID!=""?_sLocationID:0)+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+nCategory+"~"+nStartSalaryRange+"~"+nEndSalaryRange + "~"+ _sBlockIDs + "~" + _sGroupIDs  + "~" + _sBusinessUnitIds;
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/EmployeeBonus/CompPrintEBExcelF4?sParams="+sParams+"&ts="+tsv, "_blank");
    }

        
    function PrintEBSummaryExcel()
    {
        debugger;
        var oEmployeeBonuss = $('#tblEmployeeBonus').datagrid('getChecked');
        var sEmployeeBonusIDs = "";
        if(oEmployeeBonuss.length>0)
        {
            for (var i = 0; i < oEmployeeBonuss.length; i++) {
                sEmployeeBonusIDs += oEmployeeBonuss[i].EBID + ",";
            }
            sEmployeeBonusIDs = sEmployeeBonusIDs.substring(0, sEmployeeBonusIDs.length - 1);
        }

        var ProcessMonth=$("#cboProcessMonth_Collection").val();
        var ProcessYear=   $("#cboProcessYear_Collection option:selected").text();
        var nCategory=$('#cboCategory').val();
        if(sEmployeeBonusIDs=="" && ProcessMonth<=0 && ProcessYear=="Year" && _sEmployeeIDs=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" && nCategory<=0 && sEmployeeBonusIDs=="")
        {
            alert("Please select at least one searching criteria !");
            return;
        }
        if(ProcessYear=="Year"){ProcessYear=0;}

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }

        var sParams=sEmployeeBonusIDs+"~"+ProcessMonth+"~"+ProcessYear+"~"+_sEmployeeIDs+"~"+parseInt(_sLocationID!=""?_sLocationID:0)+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+nCategory+"~"+nStartSalaryRange+"~"+nEndSalaryRange + "~"+ _sBlockIDs + "~" + _sGroupIDs + "~" + _sBusinessUnitIds ;
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/EmployeeBonus/CompPrintEBSummaryExcel?sParams="+sParams+"&ts="+tsv, "_blank");
    }


    $('#btnPrint').click(function (e)
    {
        var nPType=$("#cboPrintType").val();
        if(nPType==0)
        {
            alert("Please select one type!");
            return;
        }
        else if(nPType==2)
        {
            PrintEB_PDF_F2();
        }
        else if(nPType==4)
        {
            PrintPDFF3();
        }
        else if(nPType==6)
        {
            PrintEBPDFF4();
        }
    });


    function PrintEBPDFF4()
    {
        var oEmployeeBonuss = $('#tblEmployeeBonus').datagrid('getChecked');
        var sEmployeeBonusIDs = "";
        if(oEmployeeBonuss.length>0)
        {
            for (var i = 0; i < oEmployeeBonuss.length; i++) {
                sEmployeeBonusIDs += oEmployeeBonuss[i].EBID + ",";
            }
            sEmployeeBonusIDs = sEmployeeBonusIDs.substring(0, sEmployeeBonusIDs.length - 1);
        }
        var ProcessMonth=$("#cboProcessMonth_Collection").val();
        var ProcessYear=   $("#cboProcessYear_Collection option:selected").text();
        var nCategory=$('#cboCategory').val();
        if(sEmployeeBonusIDs=="" && ProcessMonth<=0 && ProcessYear=="Year" && _sEmployeeIDs=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" && nCategory<=0)
        {
            alert("Please select at least one searching criteria !");
            return;
        }
        if(ProcessYear=="Year"){ProcessYear=0;}

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }

        var sParams=sEmployeeBonusIDs+"~"+ProcessMonth+"~"+ProcessYear+"~"+_sEmployeeIDs+"~"+parseInt(_sLocationID!=""?_sLocationID:0)+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+nCategory+"~"+nStartSalaryRange+"~"+nEndSalaryRange + "~"+ _sBlockIDs + "~" + _sGroupIDs + "~" + _sBusinessUnitIds ;
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/EmployeeBonus/CompPrintPDFF4?sParams="+sParams+"&ts="+tsv, "_blank");
    }
    $('#cboPrintType').change(function (e)
    {
        var nPType=$("#cboPrintType").val();
        if(nPType==1)
        {
            $('#btnPrint').hide();
            $('#btnPrintExcel').show();
        }
        else if(nPType==2)
        {
            $('#btnPrint').show();
            $('#btnPrintExcel').show();
        }
        else if(nPType==3)
        {
            $('#btnPrint').hide();
            $('#btnPrintExcel').show();
        }
        else if(nPType==4)
        {
            $('#btnPrint').show();
            $('#btnPrintExcel').show();
        }
        else if(nPType==5)
        {
            $('#btnPrint').hide();
            $('#btnPrintExcel').show();
        }
        else if(nPType==6)
        {
            $('#btnPrint').show();
            $('#btnPrintExcel').show();
        }
        else
        {
            $('#btnPrint').hide();
            $('#btnPrintExcel').hide();
        }
    });
    
        /*------------EmployeeGroupAdv--------------*/
    
    $("#btnEmployeeGroupResetAdv").click(function(e){
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
    });

    $('#txtEmployeeGroupAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroupAdv").val();
            var sTempName = "";
            SearchEmployeeGroupAdv(txtSearchByGroup);
            $("#txtEmployeeGroupAdv").val('');
        }
    });


    $("#btnEmployeeGroupPickerAdv").click(function(e){
        SearchEmployeeGroupAdv("");
    });
    function SearchEmployeeGroupAdv(name) {
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oGroups.length; i++)
                    {
                        _sGroupNamesAdv += oGroups[i].Name+",";
                        _sGroupIDsAdv += oGroups[i].EmployeeTypeID+",";

                    }
                    _sGroupNamesAdv=_sGroupNamesAdv.substring(0,_sGroupNamesAdv.length-1);
                    _sGroupIDsAdv=_sGroupIDsAdv.substring(0,_sGroupIDsAdv.length-1);
                    $("#txtEmployeeGroupAdv").val(_sGroupNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }


    /*------------EmployeeBlockAdv--------------*/

    $('#txtEmployeeBlockAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlockAdv").val();
            var sTempName = "";
            SearchEmployeeBlockAdv(txtSearchByBlock);
            $("#txtEmployeeBlockAdv").val('');
        }
    });

    $("#btnEmployeeBlockPickerAdv").click(function(e){
        SearchEmployeeBlockAdv("");
    });
    function SearchEmployeeBlockAdv(name) {
        $("#txtEmployeeBlockAdv").val("");
        _sBlockNamesAdv = "";
        _sBlockIDsAdv = "";
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNamesAdv += oBlocks[i].Name+",";
                        _sBlockIDsAdv += oBlocks[i].EmployeeTypeID+",";

                    }
                    _sBlockNamesAdv=_sBlockNamesAdv.substring(0,_sBlockNamesAdv.length-1);
                    _sBlockIDsAdv=_sBlockIDsAdv.substring(0,_sBlockIDsAdv.length-1);
                    $("#txtEmployeeBlockAdv").val(_sBlockNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }
    

    $("#btnEmployeeBlockResetAdv").click(function(e){
        debugger;
        _sBlockNamesAdv = "";
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDsAdv = "";
    });


    /*------------EmployeeGroup--------------*/

    $('#txtEmployeeGroup').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroup").val();
            var sTempName = "";
            SearchEmployeeGroup(txtSearchByGroup);
            $("#txtEmployeeGroup").val('');
        }
    });


    $("#btnEmployeeGroupPicker").click(function(e){
        SearchEmployeeGroup("");
    });
    function SearchEmployeeGroup(name) {
        $("#txtEmployeeGroup").val("");
        _sGroupNames = "";
        _sGroupIDs = "";
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oGroups.length; i++)
                    {
                        _sGroupNames += oGroups[i].Name+",";
                        _sGroupIDs += oGroups[i].EmployeeTypeID+",";

                    }
                    _sGroupNames=_sGroupNames.substring(0,_sGroupNames.length-1);
                    _sGroupIDs=_sGroupIDs.substring(0,_sGroupIDs.length-1);
                    $("#txtEmployeeGroup").val(_sGroupNames);
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }

    $("#btnEmployeeGroupPickerReset").click(function(e){
        
        $('#txtEmployeeGroup').val("");
        _sGroupIDs = "";
    });


    /*------------EmployeeBlock--------------*/
    
    $("#btnEmployeeBlockReset").click(function(e){
        $("#txtEmployeeBlock").val("");
        _sBlockNames = "";
        _sBlockIDs = "";
    });
    $('#txtEmployeeBlock').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlock").val();
            var sTempName = "";
            SearchEmployeeBlock(txtSearchByBlock);
            $("#txtEmployeeBlock").val('');
        }
    });

    $("#btnEmployeeBlockPicker").click(function(e){
        SearchEmployeeBlock("");
    });
    function SearchEmployeeBlock(name) {
        $("#txtEmployeeBlock").val("");
        _sBlockNames = "";
        _sBlockIDs = "";
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNames += oBlocks[i].Name+",";
                        _sBlockIDs += oBlocks[i].EmployeeTypeID+",";

                    }
                    _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                    _sBlockIDs=_sBlockIDs.substring(0,_sBlockIDs.length-1);
                    $("#txtEmployeeBlock").val(_sBlockNames);
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }


</script>
