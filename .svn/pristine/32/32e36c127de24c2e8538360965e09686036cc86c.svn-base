@{
    ViewBag.Title = "ClaimReason";
}

@model IEnumerable <ESimSol.BusinessObjects.ClaimReason>

<div ng-app="ClaimReasonModule">
    <div ng-controller="ClaimReasonController">
        <div class="row ui-grid-top-panel">
            <div class="container">
                <div class="form-inline">
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="add()"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> New</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="edit()"> <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="delete()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Delete</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="view()"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> View</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Activate()"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Activate</button>
                </div>
            </div>
        </div>
        <div class="row" style="margin:2px; padding:0;">
            <div style="width:100%" ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav class="grid ui-grid-selectable"></div>
        </div>
        
    </div>
</div>

<style type="text/css">

     .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .grid {
        height: 450px;
        width: 100%;
    }

    .custom-pagination {
        margin-top: -15px;
        margin-bottom: -15px;
    }

    .spacing {
        padding-bottom: 5px;
    }
</style>

<script type="text/javascript">

    var pager =[];
    var _nBUID=0;
    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oClaimReasons =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    _nBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
   
    debugger;
    var  ClaimReasonModule = angular.module('ClaimReasonModule', ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.cellNav','ui.grid.resizeColumns','ms.service']);
    ClaimReasonModule.controller('ClaimReasonController', function ($scope, $http, $uibModal,$interval,$timeout,  $log, uiGridConstants, msModal, userSession) {
        debugger;
        oClaimReasons= (userSession.getData('ClaimReasons').length>0)? userSession.getData('ClaimReasons'):oClaimReasons;
      
        $scope.gridOptions ={
            enableSorting: true,
            enableFullRowSelection: true,
            //enableRowHeaderSelection: false,
            enableSelectAll: false,
            multiSelect:false,
            enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
            //enableVerticalScrollbar : false,
            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                { field: 'Name', name: 'Name', width:'60%', enableCellEdit: false },
                { field: 'OperationTypeST', name: 'Operation Type', width: '15%' },
                  { field: 'Note', name: 'Note', width: '10%' },
                { field: 'ActivitySt', name: 'Activity', width: '15%' }
            ],

            data:oClaimReasons,
            //onRegisterApi:function(gridApi) 
            //{
            //    $scope.gridApi = gridApi;
            //    $scope.gridApi.selection.clearSelectedRows();
            //    debugger;
            //    var nSelectedIndex=userSession.getRowIndex();
            //    if(oClaimReasons.length>0 && nSelectedIndex>=0)
            //    {
            //        debugger;
            //        var oClaimReason=userSession.getData('ClaimReason');
            //        //var oClaimReasons=userSession.getData('ClaimReasons');
            //        if(nSelectedIndex<0)
            //        {
            //            nSelectedIndex=oClaimReasons.length;
            //            oClaimReasons[nSelectedIndex]=oClaimReason[0];
            //        }
            //        else
            //        {
            //            oClaimReasons[nSelectedIndex]=oClaimReason[nSelectedIndex];
            //        }
            //        //$scope.gridOptions.data=oClaimReasons;
            //        $scope.gridApi.grid.modifyRows(oClaimReasons);
            //        $scope.gridApi.selection.selectRow(oClaimReasons[nSelectedIndex]);
            //        $scope.RowSelect(oClaimReasons[userSession.getRowIndex()]);
            //    }
            //    userSession.clear();
            //}
        
        

            onRegisterApi:function(gridApi) 
            {
                debugger;
                //$scope.gridApi = gridApi;
                //$scope.gridApi.selection.clearSelectedRows();
                //$scope.gridApi.grid.registerRowsProcessor($scope.singleFilter, 200 );
                //$scope.gridApi.core.refresh();
                //$scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                //    $scope.RowSelect(row.entity );
                //}); 
                //if(oClaimReasons.length>0 && userSession.getRowIndex()>=0){
                //    $scope.gridApi.grid.modifyRows(oClaimReasons);
                //    $scope.gridApi.selection.selectRow(oClaimReasons[userSession.getRowIndex()]);
                //    $scope.RowSelect(oClaimReasons[userSession.getRowIndex()]);
                //}
                //userSession.clear();     

                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.grid.registerRowsProcessor($scope.singleFilter, 200);
                $scope.gridApi.core.refresh();
                debugger;
                if(oClaimReasons.length>0 && userSession.getRowIndex()>=0){
                    $scope.gridApi.grid.modifyRows(oClaimReasons);
                    $scope.gridApi.selection.selectRow(oClaimReasons[userSession.getRowIndex()]);
                    $scope.RowSelect(oClaimReasons[userSession.getRowIndex()]);
                }
                userSession.clear();
            }

        };

        $scope.singleFilter=function(renderableRows){
           
            var matcherName = new RegExp(angular.uppercase($scope.Name));
            var matcherOperationTypeST = new RegExp(angular.uppercase($scope.OperationTypeST));
            renderableRows.forEach( function( row ) {
                debugger;
                var match = false;
                if (angular.uppercase(row.entity['Name']).match(matcherName) && angular.uppercase(row.entity['OperationTypeST']).match(matcherOperationTypeST)){
                    match = true;
                }
                if ( !match ){
                    row.visible = false;
                }
            });
            return renderableRows;
        };

        $scope.add = function () {
            sessionStorage.setItem("Operation", "New");
            sessionStorage.removeItem("SelectedRowIndex");
            sessionStorage.setItem("SelectedRowIndex",-1);
            sessionStorage.setItem("ClaimReasonHeader", "Add ClaimReason");
            sessionStorage.setItem("ClaimReasons", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("ClaimReason", JSON.stringify([]));
            sessionStorage.setItem("BackLink", window.location.href);
         
            var tsv=((new Date()).getTime())/1000;
            window.location.href = _sBaseAddress+ "/ClaimReason/ViewClaimReason?nId=0&buid="+_nBUID+"&ts="+tsv;
        };

        $scope.edit = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
          
            if(data==null || data.length<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.ClaimReasonID==data[0].ClaimReasonID){
                  
                    sessionStorage.setItem("Operation", "Edit");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("ClaimReasonHeader", "Edit ClaimReason");
                    sessionStorage.setItem("ClaimReasons", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("ClaimReason", JSON.stringify($scope.gridOptions.data[index]));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/ClaimReason/ViewClaimReason?nId="+value.ClaimReasonID+"&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };

        $scope.delete = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
           
            if (!confirm("Confirm to Delete?")) return ;
          
            $http.post(_sBaseAddress+ '/ClaimReason/Delete',JSON.stringify(data[0])).then(
                            function (response) {
                                if(jQuery.parseJSON(response.data)=='Deleted'){
                                    angular.forEach($scope.gridOptions.data,function(value,index){
                                        if(value.ClaimReasonID==data[0].ClaimReasonID){
                                            $scope.gridOptions.data.splice(index,1);
                                        }
                                    },$scope.gridOptions.data);
                                    alert("Delete Successfully.");
                                } 
                                else{
                                    alert(jQuery.parseJSON(response.data));
                                }
                            },
                            function (response) {alert(jQuery.parseJSON(response.data));}
                        );

        };

        $scope.Activate = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item found to Activate.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            if (!confirm("Confirm to Active?")) return false;
            if (data == null || data[0].ClaimReasonID <= 0) {
                alert("Invalid Field!!! please select a valid Field!");
                return false;
            }

            $http.post(_sBaseAddress+ '/ClaimReason/ActivateClaimReason',JSON.stringify(data[0])).then(
                            function (response) 
                            {
                                debugger;
                                var oClaimReason=jQuery.parseJSON(response.data);
                                if(oClaimReason.ClaimReasonID>0)
                                {
                                    debugger;
                                    angular.forEach($scope.gridOptions.data,function(value,index)
                                    {
                                        if(value.ClaimReasonID==oClaimReason.ClaimReasonID){
                                            $scope.gridOptions.data[index]=oClaimReason;
                                        }
                                    },
                                    $scope.gridOptions.data);
                                    alert("Activate Successfully.");
                                } 
                                else
                                {
                                    alert("Failed To Activate!!");
                                }
                            },
                            function (response) {alert(jQuery.parseJSON(response.data));}
                        );
        };

        $scope.view = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.ClaimReasonID==data[0].ClaimReasonID){
                    sessionStorage.setItem("Operation", "View");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("ClaimReasonHeader", "View ClaimReason");
                    sessionStorage.setItem("ClaimReasons", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("ClaimReason", JSON.stringify($scope.gridOptions.data[index]));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/ClaimReason/ViewClaimReason?nId="+value.ClaimReasonID+"&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };
     
     
        $scope.PrintPreview = function ()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            var oClaimReason = data[0];
            if(oClaimReason==null || oClaimReason.ClaimReasonID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress + '/ClaimReason/PrintClaimReasonPreview?id='+oClaimReason.ClaimReasonID);
        };

     
      
     
    


        //button hide
      

       

    });


</script>
                       


              
