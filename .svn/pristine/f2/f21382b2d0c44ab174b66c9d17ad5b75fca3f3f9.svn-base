@{
    ViewBag.Title = "Production Orders";
}
@model IEnumerable<ESimSol.BusinessObjects.GUProductionOrder>
<div style="margin-left: 0px; height: 100%; width:100%">
        <table id="tblGUProductionOrders" title="Production Order List"  class="easyui-datagrid" fit = "true" fitColumns="true"  rownumbers="true" pagination="true" singleSelect="true", autoRowHeight="false" toolbar="#toolbar">
            <thead>  
                <tr>  
                    <th field="GUProductionOrderNo" width="110" >P. F. Order No</th>  
                    <th field="StyleNo" width="110" >Style No</th>  
                    <th field="BuyerName" width="150" >Buyer Name</th>  
                    <th field="OrderRecapNo" width="90" >Order No</th>
                    <th field="OrderStatusInString" width="100" >Status</th>
                    <th field="GarmentsProductName" width="120" >Product</th>   
                    <th field="OrderDateInString" width="90" align="center" >Order Date</th>   
                    <th field="ShipmentDateInString" width="90" align="center" >Shipment Date</th>   
                    <th field="ApprovedBy" width="120" >Approved By</th>   
                    <th field="TotalQty" width="80" align="right" >Total Qty</th>   
                </tr>  
            </thead> 
        </table>​  
        <div id="toolbar" style="height:50px"> 
                <input type="text" id="txtOrderNo" placeholder="Type Production Order no & Press Enter" style="width: 150px; " />
                <input type="text" id="txtStyleNo" placeholder="Type Style No & Press Enter" style="width: 150px;" />
                <a id="btnAdvanceSearch" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-search" plain="true" onclick="AdvanceSearch()">Search</a>
                <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-add" plain="true" onclick="Add()">Add </a>                                   
                <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-edit" plain="true" onclick="Edit()">Edit</a> 
                <a id="btnView" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-details" plain="true" onclick="View()">View</a> 
                <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-remove" plain="true" onclick="Delete()">Delete</a> 
                <a id="btnWaitForRequest" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-search" plain="true" onclick="WaitForRequest()">Wait For Reqst</a> 
                <a id="btnRequestforApproval" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-redo" plain="true" onclick="RequestforApproval()">Rqst for App</a>                                 
                <a id="btnUndoRequest" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-undo" plain="true" onclick="UndoRequest()">Undo Request</a> 
                <a id="btnWaitForApproval" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-waitforapproval" plain="true" onclick="WaitForApproval()">Wait For App</a>
                <a id="btnApproved" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-ok" plain="true" onclick="POApprove()">Approve</a>
                <a id="btnUndoApprove" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-undo" plain="true" onclick="UndoApprove()">Undo App</a>
                <a id="btnSetupProductionProcedure" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-setting" plain="true" onclick="SetupProductionProcedure()">Production Procedure</a> 
                <a id="btnSendToProduction" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-add" plain="true" onclick="SendToProduction()">Send To Production</a> 
                <a id="btnUpdate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="UpdateTolerancePercentWithStatus()">Update % with Status</a> 
                <a id="btnInActive" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-ok" plain="true" onclick="InActive()">InActive/Active</a> 
                <a id="btnCancel" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-cancel" plain="true" onclick="Cancel()">Cancel</a> 
                <a id="btnPreView" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-print" plain="true" onclick="PrintPreview()">Preview</a>  
                <a id="btnPrintList" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-print" plain="true" onclick="PrintList()">Print List</a> 
                                      
        </div>  
</div>
@*-----------DIV ADVCANCE SEARCH----------------*@
<div id="winAdvanceSearch" class="easyui-window" title="Request For Approval" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">

    <div style="font-family:Tahoma" class="menuMainCollectionTable">
        @*<table border="0" style="background-color:#CFB53B;width:720px">
            <tr>

                <td style="width:720px; text-align:center; text-decoration:underline; font-size:15px; color: White; font-weight:bold"><label id="lblHeaderName">Production Order Advance Search</label></td>
            </tr>
        </table>*@
        <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px">
            <tr style="height:370px">
                <td style="width:500px">
                    <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px">
                        <tr style="height:260px">
                            <td style="width:400px; vertical-align:top;height:320px">
                                <fieldset>
                                    <legend style="font-weight:bold; font-size:12px"> Searching Criteria : </legend>
                                    <table border="0" cellpadding="0" cellspacing="0" style=" width:340px; font-size:12px">
                                        <tr>
                                            <td style="width:130px; text-align:left; font-weight:bold">
                                                Style No:
                                            </td>
                                        </tr>
                                        <tr>

                                            <td style="width:200px;text-align:left">
                                                @Html.TextBox("txtStyleNoAS", "", new { style = "width: 325px", id = "txtStyleNoAS" })
                                            </td>
                                        </tr>

                                        <tr>
                                            <td style="width:130px; text-align:left; font-weight:bold">
                                                Production Order No:
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:200px;text-align:left">
                                                @Html.TextBox("txtPONo", "", new { style = "width: 325px", id = "txtPONo" })
                                            </td>
                                        </tr>

                                        <tr>
                                            <td style="width:130px;text-align:left; font-weight:bold">
                                                Buyer(s):
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:200px;text-align:left">

                                                @Html.TextBox("txtBuyerName", "", new { style = "width: 255px", id = "txtBuyerName", placeholder = "Type Buyer & Press Enter" })<input type="button" style="width:70px; font-size:12px" onclick="BuyerPiker()" , value="Pick" />
                                            </td>
                                        </tr>

                                        <tr>
                                            <td style="width:130px;text-align:left; font-weight:bold">
                                                Production Factory :
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:200px;text-align:left">

                                                @Html.TextBox("txtFactoryName", "", new { style = "width: 255px", id = "txtFactoryName", placeholder = "Type Factory & Press Enter" })<input type="button" style="width:70px; font-size:12px" onclick="FactoryPiker()" , value="Pick" />

                                            </td>
                                        </tr>

                                        <tr>
                                            <td style="width:130px;text-align:left; font-weight:bold">
                                                Merchandiser:
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:200px;text-align:left; font-size:12px">
                                                <select id="cboMerchandiser" style="width:325px;font-size:12px" />
                                            </td>
                                        </tr>

                                        <tr>
                                            <td style="width:130px;text-align:left; font-weight:bold">
                                                Order Status :
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:200px;text-align:left; font-size:12px">
                                                <table id="tblStatusLoad" title="" class="easyui-datagrid" style="width:325px;height:155px;font-size:12px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" , autorowheight="false">
                                                    <thead>
                                                        <tr>
                                                            <th data-options="field:'Selected',checkbox:true"></th>
                                                            <th field="Value" width="200">Status</th>
                                                        </tr>
                                                    </thead>
                                                </table>
                                            </td>
                                        </tr>


                                        <tr>
                                            <td style="width:130px;text-align:left; font-weight:bold">
                                                Order Date:
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:200px;text-align:left; font-size:12px">
                                                <table border="0" style="font-size:12px">
                                                    <tr>
                                                        <td style="width:71px;font-size:12px;text-align:left">@Html.DropDownList("cboOrderDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboOrderDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeA" })</td>
                                                        <td style="width:60px;font-size:12px"><input id="txtOpenOrderDate" type="text" style="width: 98px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                                        <td style="width:9px; font-size:12px" id="enddateT">To</td>
                                                        <td style="width:60px;font-size:12px" id="enddate"><input id="txtOrderCreateEndDate" type="text" style="width: 97px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td style="width:130px;text-align:left; font-weight:bold">
                                                Shipment Date:
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:200px;text-align:left; font-size:12px">
                                                <table border="0" style="font-size:12px">
                                                    <tr>
                                                        <td style="width:71px;font-size:12px;text-align:left">@Html.DropDownList("cboShipmentDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboShipmentDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeB" })</td>
                                                        <td style="width:60px;font-size:12px"><input id="txtOpenShipmentDate" type="text" style="width: 98px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                                        <td style="width:9px; font-size:12px" id="enddateST">To</td>
                                                        <td style="width:60px;font-size:12px" id="enddateS"><input id="txtShipmentCreateEndDate" type="text" style="width: 97px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>

                                        <tr style="height:50px; vertical-align:bottom">
                                            <td style=" text-align:left; width:325px;">
                                                <table border="0" cellpadding="0" cellspacing="0">
                                                    <tr>
                                                        <td style=" text-align:left;"><input type="button" value="Reset" id="btnReset" style="width:70px; text-align:left;" /></td>
                                                        <td style=" text-align:right; width:255px;"><input type="button" value="Search" id="btnRefresh" style="width:70px; text-align:right;" /></td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>
                                    </table>
                                </fieldset>
                            </td>
                            <td style="width:323px; height:370px;vertical-align:top; padding: 7px">
                                <table id="tblGUProductionOrder" title="Production Order List" class="easyui-datagrid" style="width:350px;height:470px;font-size:12px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" , autorowheight="false">
                                    <thead>
                                        <tr>
                                            <th data-options="field:'Selected',checkbox:true"></th>
                                            <th field="GUProductionOrderNo" width="90">P.O No</th>
                                            <th field="OrderRecapNo" width="100">Recap No</th>
                                            <th field="StyleNo" width="120">Style No</th>
                                            <th field="BuyerName" width="100">Buyer</th>
                                            <th field="ProductionFactoryName" width="110">Yarn Factory</th>
                                            <th field="OrderDateInString" width="80">Order Date</th>

                                        </tr>
                                    </thead>
                                </table>
                            </td>

                        </tr>
                    </table>
                </td>
            </tr>
            <tr style="height:50px">
                <td style="width:650px; text-align:right">
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                </td>
            </tr>
        </table>
    </div>

</div>
@*-----------DIV UPDATE TOLARAENCE-------PENDING---------*@
<div id="winUpdateTolarence" class="easyui-window" title="Request For Approval" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="font-family:Tahoma;">
        <fieldset style="height:80px">
            <legend> Production Order Information </legend>
            <table border="0" style="font-size:12px; margin-top:10px">
                <tr>
                    <td style="width:100px; text-align:right">Tolerance(%):</td>
                    <td style="width:200px; text-align:left">
                        <input type="text" style="width: 200px" id='txtUTToleranceInPercent'/>
                    </td>
                    <td style="width:100px; text-align:right">Winding Status:</td>
                    <td style="width:220px; text-align:left">
                        @Html.DropDownList("WindingStatus", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumWindingStatus))), new { id = "cboUTWindingStatus", style = "width: 180px;" })
                    </td>
                </tr>
            </table>
        </fieldset>


        <fieldset style="font-weight:bold;width:725px; ">
            <legend> Action : </legend>
            <table border="0" style="font-size:11px;font-weight:bold">
                <tr>
                    <td style="width:580px; text-align:right"></td>
                    <td style="width:50px">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="UpdateUT()">Update</a>
                    </td>
                    <td style="width:50px">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseUT()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</div>

<script type="text/javascript">
    var _oGUProductionOrders=[];
    var _sBaseAddress="";   
    var _EmployeeList=[];
    var _bMultipleItemReturn=true;
    var _nFactoryID =0;
    var _nBuyerID =0;
    var _oLoadLabDipStatus=[];
    $(document).ready(function () {
        debugger;
        _oGUProductionOrders =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oAURolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        var oGUProductionOrders =sessionStorage.getItem("GUProductionOrders");
        if(oGUProductionOrders!=null)
        {
            oGUProductionOrders  = jQuery.parseJSON(oGUProductionOrders);
        }
        else
        {
            oGUProductionOrders = _oGUProductionOrders ;
        }
        RefreshList(oGUProductionOrders);
        RefreshControlLayout(oAURolesMapping);
        //ReadyFunc For WinAdvanceSearch
        SetDate();
    _EmployeeList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Employees));
    _oLoadLabDipStatus=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.StatusList));
    RefreshStatusList(_oLoadLabDipStatus);
    $('#cboMerchandiser').empty();
    var listItems= "<option value='"+0+"'>" +"--Select Merchandiser--" + "</option>";
    for (var i = 0; i < _EmployeeList.length; i++)
    {
        listItems+= "<option value='" + _EmployeeList[i].EmployeeID + "'>" + _EmployeeList[i].Name + "</option>";
    }
    $("#cboMerchandiser").html(listItems);
});

//Style wise Start
$('#txtStyleNo').keypress(function (e)
{
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13) {
        var txtStyleNo = document.getElementById('txtStyleNo').value;
        if(txtStyleNo!="")
        {
            document.getElementById("txtOrderNo").value='';
            //debugger;
            var tsv=((new Date()).getTime())/1000;
            $.ajax
         ({
             type: "GET",
             dataType: "json",
             url : _sBaseAddress+  "/GUProductionOrder/SearchStyleAndOrder",
             data: {sTempData:txtStyleNo,bIsStyle:true, ts:tsv},
             contentType: "application/json; charset=utf-8",
             success: function (data) {
                 //debugger;
                 var _oGUProductionOrders = jQuery.parseJSON(data);
                 if (_oGUProductionOrders.length>0)
                 {
                     var  data=_oGUProductionOrders;
                     data={"total":""+data.length+"","rows":data};
                     $('#tblGUProductionOrders').datagrid('loadData',data);
                 }
                 else
                 {
                     alert("Data Not found");
                 }
             },
             error: function (xhr, status, error)
             {
                 alert(error);
             }
         });             //debugger;

        }
    }

});

$('#txtStyleNo').keydown(function (e) {
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 8) //backspace=8
    {
        var txtStyleNo=document.getElementById("txtStyleNo");
        txtStyleNo.value='';
        txtStyleNo.style.color="Normal";
        txtStyleNo.style.fontWeight="Black";

    }
});
//style Wise End


//Recap wise Start
$('#txtOrderNo').keypress(function (e)
{
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13) {
        var txtOrderNo = document.getElementById('txtOrderNo').value;
        if(txtOrderNo!="")
        {
            document.getElementById("txtStyleNo").value='';
            //debugger;
            var tsv=((new Date()).getTime())/1000;
            $.ajax
         ({
             type: "GET",
             dataType: "json",
             url : _sBaseAddress+  "/GUProductionOrder/SearchStyleAndOrder",
             data: {sTempData:txtOrderNo,bIsStyle:false, ts:tsv},
             contentType: "application/json; charset=utf-8",
             success: function (data) {
                 //debugger;
                 var _oGUProductionOrders = jQuery.parseJSON(data);
                 if (_oGUProductionOrders.length>0)
                 {
                     var  data=_oGUProductionOrders;
                     data={"total":""+data.length+"","rows":data};
                     $('#tblGUProductionOrders').datagrid('loadData',data);
                 }
                 else
                 {
                     alert("Data Not found");
                 }
             },
             error: function (xhr, status, error)
             {
                 alert(error);
             }
         });             //debugger;

        }
    }

});

$('#txtOrderNo').keydown(function (e) {
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 8) //backspace=8
    {
        var txtOrderNo=document.getElementById("txtOrderNo");
        txtOrderNo.value='';
        txtOrderNo.style.color="Normal";
        txtOrderNo.style.fontWeight="Black";

    }
});
//style Wise End

function SendToProduction()
{
    debugger;
    var oGUProductionOrder = $('#tblGUProductionOrders').datagrid('getSelected');
    if(oGUProductionOrder==null || oGUProductionOrder.GUProductionOrderID<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    if(oGUProductionOrder.nOrderStatus !=3)
    {
        alert("Your Selected Order is not Approved!");
        return;
    }
    if (!confirm("Confirm Send To Production?")) return ;
    var SelectedRowIndex=$('#tblGUProductionOrders').datagrid('getRowIndex',oGUProductionOrder);
    $.ajax({
        type: "POST",
        dataType: "json",
        url : _sBaseAddress+  "/GUProductionOrder/SendToProduction",
        traditional: true,
        data:  JSON.stringify(oGUProductionOrder),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            //debugger;
            oGUProductionOrder = jQuery.parseJSON(data);
            if (oGUProductionOrder.ErrorMessage=="" && parseInt(oGUProductionOrder.GUProductionOrderID)>0) {
                alert("Sucessfully Send to Production");
                $('#tblGUProductionOrders').datagrid('updateRow',{index: SelectedRowIndex,	row: oGUProductionOrder});
            }
            else {
                alert(oGUProductionOrder.ErrorMessage);
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }

    });
}

function SetupProductionProcedure()
{
    var oGUProductionOrder = $('#tblGUProductionOrders').datagrid('getSelected');
    if(oGUProductionOrder==null || oGUProductionOrder.GUProductionOrderID<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    var tsv=((new Date()).getTime())/1000;    
    var SelectedRowIndex=$('#tblGUProductionOrders').datagrid('getRowIndex',oGUProductionOrder);
    var tsv=((new Date()).getTime())/1000;
    var oGUProductionOrders= $('#tblGUProductionOrders').datagrid('getRows');
    sessionStorage.setItem("GUProductionOrders", JSON.stringify(oGUProductionOrders));
    sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
    sessionStorage.setItem("GUProductionOrderHeader", "Setup Production Procedure");
    sessionStorage.setItem("BackLink", window.location.href);
    window.location.href =_sBaseAddress+"/GUProductionOrder/ViewGUProductionProcedure?id="+parseInt(oGUProductionOrder.GUProductionOrderID)+"&ts="+tsv;
}

function UpdateTolerancePercentWithStatus()
{
    var oGUProductionOrder = $('#tblGUProductionOrders').datagrid('getSelected');
    if(oGUProductionOrder==null || oGUProductionOrder.GUProductionOrderID<=0)
    {
        alert("Please select a item from list!");
        return;
    }

    $('#txtUTToleranceInPercent').numberbox({min:0,precision:2});
    $('#txtUTToleranceInPercent').numberbox('setValue', oGUProductionOrder.ToleranceInPercent);
    $("#winUpdateTolarence").icsWindow('open', "Update Tolarence Status");
    $('#winUpdateTolarence').data('UpdateTolarenceOrder',oGUProductionOrder);
    //var url = _sBaseAddress+"/GUProductionOrder/ViewUpdateTolarence?id="+parseInt(oGUProductionOrder.GUProductionOrderID)+"&ts="+tsv;
    //var oGUProductionOrder = window.showModalDialog(url, oParameter,  'dialogHeight:170px;dialogWidth:650px;dialogLeft:375;dialogTop:220;center:yes;resizable:no;status:no;scroll:no');
}

function WaitForApproval()
{
    debugger;
    var nStatusExtra =2;
    GetPOList(nStatusExtra);

}

function WaitForRequest()
{

    var nStatusExtra =1;
    GetPOList(nStatusExtra);
}

function GetPOList(nStatusExtra)
{

    $.ajax
  ({
      type: "GET",
      dataType: "json",
      url : _sBaseAddress+  "/GUProductionOrder/WaitingSearch",
      data: {nStatusExtra:nStatusExtra},
      contentType: "application/json; charset=utf-8",
      success: function (data) {
          //debugger;
          var oGUProductionOrders = jQuery.parseJSON(data);
          if (oGUProductionOrders.length>0)
          {


              RefreshList(oGUProductionOrders);
          }
          else
          {
              alert("Data Not found");
          }
      },
      error: function (xhr, status, error)
      {
          alert(error);
      }

  });
}

function RequestforApproval()
{
    debugger;
    var oGUProductionOrder = $('#tblGUProductionOrders').datagrid('getSelected');
    if(oGUProductionOrder==null || oGUProductionOrder.GUProductionOrderID<=0)
    {
        alert("Please select a item from list!");
        return;
    }else if(oGUProductionOrder.OrderStatus!=1)
    {
        alert("Please select only Initialized item from list");
        return;
    }
    if (!confirm("Confirm to Request for approval?")) return ;
    oGUProductionOrder.ActionTypeExtra="RequestForApproval";
    StatusChange(oGUProductionOrder,"Request For Approval");

}

function UndoRequest()
{
    debugger;
    var oGUProductionOrder = $('#tblGUProductionOrders').datagrid('getSelected');
    if(oGUProductionOrder==null || oGUProductionOrder.GUProductionOrderID<=0)
    {
        alert("Please select a item from list!");
        return;
    }else if(oGUProductionOrder.OrderStatus!=2)
    {
        alert("Please select only Requested  item from list");
        return;
    }
    if (!confirm("Confirm to Undo Request?")) return ;
    oGUProductionOrder.ActionTypeExtra="UndoRequest";
    StatusChange(oGUProductionOrder,"Undo Request");
}

function POApprove()
{
    //debugger;
    var oGUProductionOrder = $('#tblGUProductionOrders').datagrid('getSelected');
    if(oGUProductionOrder==null || oGUProductionOrder.GUProductionOrderID<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    if(oGUProductionOrder.OrderStatus!=2)
    {
        alert("Please select only Requested  item from list");
        return;
    }
    //     if (!confirm("Confirm to Approve?")) return ;

    var SelectedRowIndex=$('#tblGUProductionOrders').datagrid('getRowIndex',oGUProductionOrder);
    var tsv=((new Date()).getTime())/1000;
    var oGUProductionOrders= $('#tblGUProductionOrders').datagrid('getRows');
    sessionStorage.setItem("GUProductionOrders", JSON.stringify(oGUProductionOrders));
    sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
    sessionStorage.setItem("GUProductionOrderHeader", "Approved Production Order");
    sessionStorage.setItem("BackLink", window.location.href);
    window.location.href =_sBaseAddress+"/GUProductionOrder/POApprove?nPOID="+oGUProductionOrder.GUProductionOrderID;
    //var oGUProductionOrder = window.showModalDialog(url, oParameter, 'dialogHeight:500px;dialogWidth:705x;dialogLeft:300;dialogTop:60;center:yes;resizable:yes;status:no;scroll:no');
    //if(oGUProductionOrder!=null)
    //{
    //    $('#tblGUProductionOrders').datagrid('updateRow',{index: SelectedRowIndex,	row: oGUProductionOrder});
    //}

}

function UndoApprove()
{
    //debugger;
    var oGUProductionOrder = $('#tblGUProductionOrders').datagrid('getSelected');
    if(oGUProductionOrder==null || oGUProductionOrder.GUProductionOrderID<=0)
    {
        alert("Please select a item from list!");
        return;
    }else if(oGUProductionOrder.OrderStatus!=3)
    {
        alert("Please select only Approved item from list");
        return;
    }
    if (!confirm("Confirm to Undo Approve?")) return ;
    oGUProductionOrder.ActionTypeExtra="UndoApprove";
    StatusChange(oGUProductionOrder,"Undo Approve");
}

function InActive()
{

    debugger;
    var oGUProductionOrder = $('#tblGUProductionOrders').datagrid('getSelected');
    if(oGUProductionOrder==null || oGUProductionOrder.GUProductionOrderID<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    if(oGUProductionOrder.OrderStatus==6)
    {
        if (!confirm("Confirm to Active?")) return ;
        oGUProductionOrder.ActionTypeExtra="Active";
        StatusChange(oGUProductionOrder,"Active");

    } else if(parseInt(oGUProductionOrder.OrderStatus)>=1 && parseInt(oGUProductionOrder.OrderStatus)<4)
    {
        if (!confirm("Confirm to  In-Active?")) return ;
        oGUProductionOrder.ActionTypeExtra="InActive";
        StatusChange(oGUProductionOrder,"In-Active");
    }else{
        alert("In this stage you can't Close the Item");
        return;
    }


}

function Cancel()
{
    var oGUProductionOrder = $('#tblGUProductionOrders').datagrid('getSelected');
    if(oGUProductionOrder==null || oGUProductionOrder.GUProductionOrderID<=0)
    {
        alert("Please select a item from list!");
        return;
    }else if(oGUProductionOrder.OrderStatus<1 || oGUProductionOrder.OrderStatus>3)
    {
        alert("In this stage you can't Close the Item");
        return;
    }
    if (!confirm("Confirm to Close?")) return ;
    oGUProductionOrder.ActionTypeExtra="Close";
    StatusChange(oGUProductionOrder,"Close");
}

function SetOrderStatusExtra (oGUProductionOrder)
{

    switch (oGUProductionOrder.OrderStatus)
    {
        case 1 : {
            oGUProductionOrder.nOrderStatus =1;
            break;
        }
        case 2 :{
            oGUProductionOrder.nOrderStatus =2;
            break;
        }
        case 3 :{
            oGUProductionOrder.nOrderStatus =3;
            break;
        }
        case 4 :{
            oGUProductionOrder.nOrderStatus =4;
            break;
        }
        case 5 :{
            oGUProductionOrder.nOrderStatus =5;
            break;
        }

    }

    return oGUProductionOrder;
}

function StatusChange(oGUProductionOrder,sParamIdentifier)
{
    var oGUProductionOrder =SetOrderStatusExtra (oGUProductionOrder);
    var SelectedRowIndex=$('#tblGUProductionOrders').datagrid('getRowIndex',oGUProductionOrder);
    $.ajax({
        type: "POST",
        dataType: "json",
        url : _sBaseAddress+"/GUProductionOrder/ChangeStatus",
        traditional: true,
        data:  JSON.stringify(oGUProductionOrder),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            debugger;
            var oGUProductionOrder= jQuery.parseJSON(data);
            if (oGUProductionOrder.ErrorMessage=="")
            {

                if(sParamIdentifier=="Request For Approval")
                {
                    alert("Order request Successfully!!");
                }else  if(sParamIdentifier=="Undo Request")
                {
                    alert("Successfully Undo the Request !");

                }else if(sParamIdentifier=="In-Active")
                {
                    alert("Successfully  Order Negotiation Sheet In-Active!");
                }
                else if(sParamIdentifier=="Active")
                {
                    alert("Successfully Order Negotiation Sheet Active!");
                }else if(sParamIdentifier=="Undo Approve")
                {
                    alert("Order Undo Approve Successfully!!");
                }
                else if(sParamIdentifier=="Close")
                {
                    alert("Successfully Close Selected Item!");
                }
                $('#tblGUProductionOrders').datagrid('updateRow',{index: SelectedRowIndex,	row: oGUProductionOrder});
            }else
            {
                alert(oGUProductionOrder.ErrorMessage);
            }
        },
        error: function (xhr, status, error)
        {
            alert(error);
        }
    });


}

function Add()
{
    debugger;
    var tsv=((new Date()).getTime())/1000;
    var oGUProductionOrders= $('#tblGUProductionOrders').datagrid('getRows');
    sessionStorage.setItem("GUProductionOrders", JSON.stringify(oGUProductionOrders));
    sessionStorage.setItem("SelectedRowIndex", -1);
    sessionStorage.setItem("GUProductionOrderHeader", "Add Production Order");
    sessionStorage.setItem("BackLink", window.location.href);
    window.location.href =_sBaseAddress+"/GUProductionOrder/ViewGUProductionOrder?id=0&ts="+tsv;

    //debugger
    //if(oGUProductionOrder!=null)
    //{
    //    if(oGUProductionOrder.GUProductionOrderID>0)
    //    {
    //        var oGUProductionOrders = $('#tblGUProductionOrders').datagrid('getRows');
    //        var nIndex=oGUProductionOrders.length;

    //        $('#tblGUProductionOrders').datagrid('appendRow',oGUProductionOrder);
    //        $('#tblGUProductionOrders').datagrid('selectRow', nIndex);
    //    }
    //}
}

function Edit()
{
    debugger;
    var oGUProductionOrder = $('#tblGUProductionOrders').datagrid('getSelected');
    if(oGUProductionOrder==null || oGUProductionOrder.GUProductionOrderID<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    if(oGUProductionOrder.OrderStatus!=1 )
    {
        alert("Wothout Initialized Item can't Update!");
        return;
    }
    var SelectedRowIndex=$('#tblGUProductionOrders').datagrid('getRowIndex',oGUProductionOrder);
    var tsv=((new Date()).getTime())/1000;
    var oGUProductionOrders= $('#tblGUProductionOrders').datagrid('getRows');
    sessionStorage.setItem("GUProductionOrders", JSON.stringify(oGUProductionOrders));
    sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
    sessionStorage.setItem("GUProductionOrderHeader", "Edit Production Order");
    sessionStorage.setItem("BackLink", window.location.href);
    window.location.href =_sBaseAddress+"/GUProductionOrder/ViewGUProductionOrder?id="+oGUProductionOrder.GUProductionOrderID+"&ts="+tsv;


    // var url = _sBaseAddress+"/GUProductionOrder/ViewGUProductionOrder?id="+oGUProductionOrder.GUProductionOrderID+"&ts="+tsv;
    // var oGUProductionOrder =  window.showModalDialog(url, oParameter, 'dialogHeight:620px;dialogWidth:925px;dialogLeft:200;dialogTop:30;center:yes;resizable:no;status:no;scroll:no');
    //// debugger;
    // if(oGUProductionOrder!=null)
    // {
    //     if(oGUProductionOrder.GUProductionOrderID>0)
    //     {
    //         $('#tblGUProductionOrders').datagrid('updateRow',{index: SelectedRowIndex,	row: oGUProductionOrder});
    //     }
    // }
}

function View()
{
    var oGUProductionOrder = $('#tblGUProductionOrders').datagrid('getSelected');
    if(oGUProductionOrder==null || oGUProductionOrder.GUProductionOrderID<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    //var oParameter = new Object();
    //oParameter.Name = "View Production Order";
    //var tsv= (new Date().getTime())/1000;
    //var url = _sBaseAddress+"/GUProductionOrder/ViewGUProductionOrder?id="+oGUProductionOrder.GUProductionOrderID+"&ts="+tsv;
    //var oGUProductionOrder =  window.showModalDialog(url, oParameter, 'dialogHeight:620px;dialogWidth:925px;dialogLeft:200;dialogTop:30;center:yes;resizable:no;status:no;scroll:no');

    var SelectedRowIndex=$('#tblGUProductionOrders').datagrid('getRowIndex',oGUProductionOrder);
    var tsv=((new Date()).getTime())/1000;
    var oGUProductionOrders= $('#tblGUProductionOrders').datagrid('getRows');
    sessionStorage.setItem("GUProductionOrders", JSON.stringify(oGUProductionOrders));
    sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
    sessionStorage.setItem("GUProductionOrderHeader", "View Production Order");
    sessionStorage.setItem("BackLink", window.location.href);
    window.location.href =_sBaseAddress+"/GUProductionOrder/ViewGUProductionOrder?id="+oGUProductionOrder.GUProductionOrderID+"&ts="+tsv;

}

function PrintPreview()
{
    var oPOD= $('#tblGUProductionOrders').datagrid('getSelected');
    if(oPOD==null || parseInt(oPOD.GUProductionOrderID)<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    window.open(_sBaseAddress + '/GUProductionOrder/PODPreview?id='+oPOD.GUProductionOrderID);
}

function PrintList()
{

    var oGUProductionOrders= $('#tblGUProductionOrders').datagrid('getRows');
    var ids ="";
    if(oGUProductionOrders.length>0)
    {
        for(var i =0;i<oGUProductionOrders.length;i++)
        {
            ids =ids+oGUProductionOrders[i].GUProductionOrderID+",";
        }
        ids= ids.substring(0, parseInt(ids.length - 1));
    }
    if(ids =="" || ids==null)
    {
        alert("Data not found ");
        return;
    }
    window.open(_sBaseAddress + '/GUProductionOrder/PODPrintList?sID='+ids);

}

function Delete()
{
    //debugger;
    var oGUProductionOrder= $('#tblGUProductionOrders').datagrid('getSelected');
    if (!confirm("Confirm to Delete?")) return ;
    if(oGUProductionOrder==null || oGUProductionOrder.GUProductionOrderID<=0)
    {
        alert("Invalid Field!!! please select a valid Field!");
        return false;
    }
    if(parseInt(oGUProductionOrder.OrderStatus)!=1)//not initialize
    {
        alert("Please select Only Initialize Item from List.");
        return false;
    }
    var SelectedRowIndex=$('#tblGUProductionOrders').datagrid('getRowIndex',oGUProductionOrder);
    if (oGUProductionOrder.GUProductionOrderID > 0)
    {
        $.ajax
        ({
            type: "GET",
            dataType: "json",
            url : _sBaseAddress+  "/GUProductionOrder/Delete",
            data: { nPOID: oGUProductionOrder.GUProductionOrderID },
            contentType: "application/json; charset=utf-8",
            success: function (data) {
             //debugger;
                feedbackmessage = jQuery.parseJSON(data);
                if (feedbackmessage == "Data delete successfully")
                {
                    alert("Delete sucessfully");
                    $('#tblGUProductionOrders').datagrid('deleteRow',SelectedRowIndex);
                }
                else
                {
                    alert(feedbackmessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }

        });
    }
}

function RefreshList(oGUProductionOrders)
{
    data=oGUProductionOrders;
    data={"total":""+data.length+"","rows":data};
    $('#tblGUProductionOrders').datagrid('loadData',data);
    var SelectedRowIndex=sessionStorage.getItem('SelectedRowIndex');
    if(SelectedRowIndex!=-1)
    {
        $('#tblGUProductionOrders').datagrid('selectRow',SelectedRowIndex);
    }
}

function RefreshControlLayout(oAURolesMapping)
{    
    $("#btnAdd").hide();
    $("#btnEdit").hide();
    $("#btnDelete").hide();
    $("#btnApproved").hide();
    $("#btnPreView").hide();        
    $("#btnPrintList").hide();
   
    if(PermissionChecker('Add','GUProductionOrder',oAURolesMapping)){$("#btnAdd").show();}
    if(PermissionChecker('Edit','GUProductionOrder',oAURolesMapping)){$("#btnEdit").show();}
    if(PermissionChecker('Delete','GUProductionOrder',oAURolesMapping)){$("#btnDelete").show();}
    if(PermissionChecker('Approved','GUProductionOrder',oAURolesMapping)){$("#btnApproved").show();}
    if(PermissionChecker('Preview','GUProductionOrder', oAURolesMapping)){$("#btnPreView").show();}
    if(PermissionChecker('PrintList','GUProductionOrder',oAURolesMapping)){$("#btnPrintList").show();}
}

function AdvanceSearch()
{
    $("#winAdvanceSearch").icsWindow('open', "Advance Search");
    //var oParameter = new Object();
    //oParameter.Name = "Production Order Advance Search";
    //oParameter.MultipleItemReturn=true;
    //var url = _sBaseAddress+"/GUProductionOrder/AdvanceSearch"
    //var oGUProductionOrders = window.showModalDialog(url, oParameter, 'dialogHeight:565px;dialogWidth:745px;dialogLeft:250;dialogTop:50;center:yes;resizable:yes;status:no;scroll:no');
    //if(oGUProductionOrders.length>0)
    //{
    //  RefreshList(oGUProductionOrders);
    //}
}

//------------------FUNCTION FOR winAdvanceSearch

function SetDate()
{
    $('#txtOpenOrderDate').datebox('setValue', icsdateformat(new Date()));
    $('#txtOrderCreateEndDate').datebox('setValue', icsdateformat(new Date()));
    $('#txtOpenShipmentDate').datebox('setValue', icsdateformat(new Date()));
    $('#txtShipmentCreateEndDate').datebox('setValue', icsdateformat(new Date()));
}

function RefreshStatusList(oTempLoadCostSheetStatus)
{
    debugger;
    data=oTempLoadCostSheetStatus;
    data={"total":""+data.length+"","rows":data};
    $('#tblStatusLoad').datagrid('loadData',data);
}

$('._select_changeA').change(function () {
    //debugger;
    var x = $("#cboOrderDate").val();
    if (x == "EqualTo" || x == "NotEqualTo" || x == "GreaterThen" || x == "SmallerThen") {
        document.getElementById("enddate").style.display = 'none';
        document.getElementById("enddateT").style.display = 'none';
    }
    else {
        document.getElementById("enddate").style.display = '';
        document.getElementById("enddateT").style.display = '';
    }
});

$('._select_changeB').change(function () {
    //debugger;
    var x = $("#cboShipmentDate").val();
    if (x == "EqualTo" || x == "NotEqualTo" || x == "GreaterThen" || x == "SmallerThen") {
        document.getElementById("enddateS").style.display = 'none';
        document.getElementById("enddateST").style.display = 'none';
    }
    else {
        document.getElementById("enddateS").style.display = '';
        document.getElementById("enddateST").style.display = '';
    }
});

function sMakeQuery(sStauses)
{
    var sSatusRes="";
    for(var i =0;i<sStauses.length;i++)
    {
        var status=sStauses[i].id;
        sSatusRes=sSatusRes+status+',';
    }

    return sSatusRes.substring(0, sSatusRes.length - 1);
}


$('#btnRefresh').click(function () {
    debugger;
    var cboOrderDate = document.getElementById("cboOrderDate");
    var nOrderCreateDate=cboOrderDate.options[cboOrderDate.selectedIndex].index;

    var cboShipmentDate = document.getElementById("cboShipmentDate");
    var nShipmentDate=cboShipmentDate.options[cboShipmentDate.selectedIndex].index;


    var cboMerchandiser=document.getElementById("cboMerchandiser");
    var nMerchandiser=cboMerchandiser.options[cboMerchandiser.selectedIndex].value;
    var sStyleNo= document.getElementById("txtStyleNoAS").value;

    var sPONo= document.getElementById("txtPONo").value;

    //var cboStatus=document.getElementById("cboStatus");
    //var ncboStatus=cboStatus.options[cboStatus.selectedIndex].index;

    var sSupplierName =document.getElementById("txtFactoryName").value;

    var sSOCDs=$('#txtOpenOrderDate').datebox('getValue');
    var sSOCDe=$('#txtOrderCreateEndDate').datebox('getValue');

    var sSipmemntStartD=$('#txtOpenShipmentDate').datebox('getValue');
    var sSipmemntEndD=$('#txtShipmentCreateEndDate').datebox('getValue');

    var ncboStatus =  $('#tblStatusLoad').datagrid('getChecked');
    var chkResult = CheckEmpty();
    if(chkResult!=true)
    {
        alert("Please Select at lease one Criteria !!");
        return;
    }
    var sMakStatsQry ="";
    if(ncboStatus.length>0)
    {
        sMakStatsQry = sMakeQuery(ncboStatus);
    }
    var sTempString = nOrderCreateDate+'~'+sSOCDs+'~'+sSOCDe+'~'+nShipmentDate+'~'+sSipmemntStartD+'~'+sSipmemntEndD+'~'+sStyleNo+'~' +sPONo+'~'+_nBuyerID+'~'+_nFactoryID+'~'+nMerchandiser+'~'+sMakStatsQry+'~'+sessionStorage.getItem('BUID');
    var tsv =((new Date()).getTime())/1000;
    $.ajax({
        type: "GET",
        dataType: "json",
        url: '@Url.Action("Gets", "GUProductionOrder")',
            data: { sTemp: sTempString, ts : tsv },
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                ////debugger;
                var  oGUProductionOrders = jQuery.parseJSON(data);
                if (oGUProductionOrders != null) {
                    if(oGUProductionOrders.length>0)
                    {
                        RefreshListAS(oGUProductionOrders);
                        $('#tblGUProductionOrder').datagrid({selectOnCheck:false, checkOnSelect:false})
                        if(_bMultipleItemReturn==false)
                        {
                            $('#tblGUProductionOrder').datagrid('hideColumn','Selected');
                            $('#tblGUProductionOrder').datagrid({ onDblClickRow: function (rowIndex, rowData) { RowDoubleClickEvent(rowIndex, rowData); } });
                        }
                    }
                    else
                    {
                        alert("Data not found!!");
                        RefreshListAS(oGUProductionOrders);
                    }
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });


    function RefreshListAS(oGUProductionOrders)
    {
        data =oGUProductionOrders;
        data={"total":""+data.length+"","rows":data};
        $('#tblGUProductionOrder').datagrid('loadData',data);
    }
    $('#btnReset').click(function () {
        //debugger;
        _nBuyerID =0;
        _nFactoryID =0;
        document.getElementById("txtBuyerName").value= '';
        document.getElementById("txtStyleNoAS").value='';
        document.getElementById("txtPONo").value='';
        document.getElementById("txtFactoryName").value='';
        var txtBuyerName=document.getElementById("txtBuyerName");
        txtBuyerName.style.color="black";
        txtBuyerName.style.fontWeight="normal";

        var txtFactoryName=document.getElementById("txtFactoryName");
        txtFactoryName.style.color="black";
        txtFactoryName.style.fontWeight="normal";

        document.getElementById("enddate").style.display = '';
        document.getElementById("enddateT").style.display = '';
        document.getElementById("enddateS").style.display = '';
        document.getElementById("enddateST").style.display = '';

        $('#cboMerchandiser').val(0);
        RefreshStatusList(_oLoadLabDipStatus);
        $('#cboOrderDate').val('None');
        $('#cboShipmentDate').val('None');
        SetDate();
        var oGUProductionOrders=[];
        RefreshListAS(oGUProductionOrders);

    });
    function CheckEmpty()
    {

        var cboOrderDate = document.getElementById("cboOrderDate");
        var nOrderCreateDate=cboOrderDate.options[cboOrderDate.selectedIndex].index;


        var cboShipmentDate = document.getElementById("cboShipmentDate");
        var nShipmentDate=cboShipmentDate.options[cboShipmentDate.selectedIndex].index;

        var cboMerchandiser=document.getElementById("cboMerchandiser");
        var ncboMerchandiser=cboMerchandiser.options[cboMerchandiser.selectedIndex].value;

        var sStyleNo= document.getElementById("txtStyleNoAS").value;
        var sPONo= document.getElementById("txtPONo").value;

        var ncboStatus =  $('#tblStatusLoad').datagrid('getChecked');

        var sBuyerName=document.getElementById("txtBuyerName").value;


        if(nOrderCreateDate==0 && nShipmentDate==0)
        {
            if(ncboMerchandiser==0 &&  ncboStatus.length<0 && sBuyerName=="" && _nFactoryID==0 && sStyleNo=="" && sPONo =="")
            {
                return false;
            }
            return true;
        }

        return true;
    }

    //---------------- DYNAMIC--------PICKER----------------

    function SetBuyer(oSelectedBuyer) //GetBuyer
    {
        var _oSelectedContractor = oSelectedBuyer;
        if(_oSelectedContractor!=null)
        {
            if(_oSelectedContractor.ContractorID>0)
            {
                var txtBuyerName=document.getElementById("txtBuyerName");
                txtBuyerName.value= _oSelectedContractor.Name;
                txtBuyerName.style.color="blue";
                txtBuyerName.style.fontWeight="bold";
                _nBuyerID=  _oSelectedContractor.ContractorID;

            }
        }
        $('#txtBuyerName').focus();
    }

    function FactoryPiker(oTxtName){
        debugger;
        var BUID=sessionStorage.getItem('BUID');
        var oTempName=""
        if (typeof oTxtName != 'undefined')
            oTempName=oTxtName;
        var oContractor = {
            Params: '3'+'~'+oTempName+'~'+BUID
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };

        var tblColums = [];
        var oColumn = { field: "Name", title: "Name", width: 180, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Address", title: "Address", width: 160, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Email", title: "Email", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);

        DynamicPiker('FactoryPiker',obj,tblColums,false,'Name','ContractorID'); //pickerName,obj,table,multiReturn,SearchingField
    }

    function SetFactory(oSelectedContractor)
    {
        if(oSelectedContractor!=null)
        {
            if(oSelectedContractor.ContractorID>0)
            {
                var txtFactoryName=document.getElementById("txtFactoryName");
                txtFactoryName.value= oSelectedContractor.Name;
                txtFactoryName.style.color="blue";
                txtFactoryName.style.fontWeight="bold";
                _nFactoryID=  oSelectedContractor.ContractorID;
            }
        }
        else
        {
            document.getElementById("txtSupplierID").value= '';
        }
        $('#txtFactoryName').focus();
    }

    function BuyerPiker(oTxtName)
    {
        debugger;
        var BUID=sessionStorage.getItem('BUID');
        var oTempName=""
        if (typeof oTxtName != 'undefined')
            oTempName=oTxtName;
        var oContractor = {
            Params: '2'+'~'+oTempName+'~'+BUID
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };

        var tblColums = [];
        var oColumn = { field: "Name", title: "Name", width: 180, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Address", title: "Address", width: 160, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Email", title: "Email", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);

        DynamicPiker('BuyerPiker',obj,tblColums,false,'Name','ContractorID'); //pickerName(unique),obj,table,multiReturn,SearchingField
    }

    function DynamicPiker(pickerName,obj,pTblColums,pMultiReturn,pSearchField,pID)
    {
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0][pID] > 0) {
                    debugger;
                    var tblColums = pTblColums;
                    var oPickerParam = {
                        winid: 'win'+pickerName,
                        winclass: 'cls'+pickerName,
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tbl'+pickerName,
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: pMultiReturn,
                        searchingbyfieldName: pSearchField,
                        windowTittle: pickerName+' List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("Data Not Found.");
                return;
            }
        });
    }

    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    function SetPickerValueAssign(oPickerobj)
    {
        $('#txtLocalYarnSupplierName').focus();
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        var oSelectedContractor=oreturnObj;
        if(oSelectedContractor!=null)
        {
            if (oPickerobj.winid == 'winBuyerPiker')
            {
                SetBuyer(oSelectedContractor);
            }
            else if(oPickerobj.winid == 'winFactoryPiker')
            {
                SetFactory(oSelectedContractor);
            }
        }
    }

    // Search Buyer Start
    $('#txtBuyerName').keydown(function (e) {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            var txtBuyerName = document.getElementById('txtBuyerName').value;
            if(txtBuyerName!="")
            {
                BuyerPiker(txtBuyerName);
            }
        }
    });

    $('#txtBuyerName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            var txtBuyerName=document.getElementById("txtBuyerName");
            txtBuyerName.style.color="black";
            txtBuyerName.style.fontWeight="normal";
            _nBuyerID = 0;

        }
    });
    // Search Buyer End

    // Search Factory Start
    $('#txtFactoryName').keydown(function (e) {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            var txtFactoryName = document.getElementById('txtFactoryName').value;
            if(txtFactoryName!="")
            {
                FactoryPiker(txtFactoryName);
            }
        }
    });

    $('#txtFactoryName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            var txtFactoryName=document.getElementById("txtFactoryName");
            txtFactoryName.style.color="black";
            txtFactoryName.style.fontWeight="normal";
            _nFactoryID = 0;
        }
    });
    // Search Buyer End
    function Close()
    {
        $("#winAdvanceSearch").icsWindow('close');
    }

    function OkButtonClick()
    {
        //debugger;
        var oGUProductionOrders=[];
        var oGUProductionOrders = $('#tblGUProductionOrder').datagrid('getChecked');
        if(oGUProductionOrders.length<=0)
        {
            alert("please select atleast one item");
            return;
        }
     
        if(oGUProductionOrders.length>0)
        {
          RefreshList(oGUProductionOrders);
        }
        $("#winAdvanceSearch").icsWindow('close');
    }
    //--------------------- Func FOR ADVANCE SEARCH ENDS ---------------------



    //-----------Func FOR UPDATE_TOLARENCE----------------
    
    function UpdateUT()
    {
        debugger;
        if(!ValidateInputUT()) return;
        var oGUProductionOrder = $('#winUpdateTolarence').data('UpdateTolarenceOrder');
        oGUProductionOrder.ToleranceInPercent = $('#txtUTToleranceInPercent').numberbox('getValue');
        oGUProductionOrder.WindingStatus = $('#cboUTWindingStatus').val();
    
        $.ajax({
            type: "POST",
            dataType: "json",            
            url : _sBaseAddress+"/GUProductionOrder/UpdateToleranceWithWindingStatus",
            traditional: true,
            data:  JSON.stringify(oGUProductionOrder),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oGUProductionOrder= jQuery.parseJSON(data);
                if(oGUProductionOrder!=null)
                {
                    if (parseFloat(oGUProductionOrder.ToleranceInPercent)>0) 
                    {                   
                        alert("Successfully Updated !!");                            
                        CloseUT();
                    }
                    else 
                    {
                        alert(oGUProductionOrder.ErrorMessage);
                    }
                }
            },
            error: function (xhr, status, error) 
            {
                alert(error);
            }
        });
    }

    function ValidateInputUT()
    {
        debugger;
        if($('#txtUTToleranceInPercent').numberbox('getValue') <=0) 
        { 
            alert("Tolerance Percent Should be greater than 0!");         
            return false; 
        }
        if($('#txtUTToleranceInPercent').numberbox('getValue') >100) 
        { 
            alert("Tolerance Percent Should be less than 100!");         
            return false; 
        }
        return true;
    }
    
    function CloseUT()
    {
        $('#winUpdateTolarence').icsWindow('Close');
    }

    $(document).keydown(function(e) {    
        //debugger;
        if(e.which == 27)//escape=27
        {
            //debugger;        
            CloseUT();
        }
    });
</script>