@{
    ViewBag.Title = "TAP Notification";
}
@model ESimSol.BusinessObjects.TAP
<div class="menuMainCollectionTable">
    <div id="accABC" class="easyui-accordion" style="font-family:Tahoma;width:100%;height:90%;">
        <div title="Time Action Plan">
            <fieldset style=" width:98%;">
                <legend style="font-weight: bold;">Time Action Plan Info: </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size: 11px; font-weight: bold">
                    <tr>
                        <td style="width: 120px; text-align: right">Buyer Name:</td>
                        <td style="width:250px; text-align:left;">@Html.TextBoxFor(model => model.BuyerName, new { style = "width: 250px;", id = "txtCode", disabled = "disabled" })</td>
                        <td style="width:100px; text-align: right">Factory:</td>
                        <td style="width:170px; text-align:left;">@Html.TextBoxFor(model => model.ProductionFactoryName, new { style = "width: 170px;", id = "txtCode", disabled = "disabled" }) </td>
                        <td style="width:170px; vertical-align:bottom; text-align:right;" rowspan="5">
                            <table border="1">
                                <tr>
                                    <td style=" text-align:center;width:120px; height:125px;">
                                        <img id="imgCoverImage" src="" alt="Style" style="width:120px; height:125px" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>

                    <tr>
                        <td style="width: 120px; text-align: right">Recap No:</td>
                        <td style="width:250px; text-align:left;">@Html.TextBoxFor(model => model.OrderRecapNo, new { style = "width: 250px;", id = "txtCode", disabled = "disabled" })</td>
                        <td style="width:100px; text-align: right">Order Date:</td>
                        <td style="width:170px; text-align:left;">@Html.TextBoxFor(model => model.OrderDateInString, new { style = "width: 170px;", id = "txtCode", disabled = "disabled" })</td>
                    </tr>
                    <tr>
                        <td style="width: 120px; text-align: right">Style No:</td>
                        <td style="width:250px; text-align:left;">
                            <table border="0" cellpadding="0" cellspacing="0">
                                <tr>
                                    <td style="width:100px;">@Html.TextBoxFor(model => model.StyleNo, new { style = "width: 100px;", id = "txtCode", disabled = "disabled" })</td>
                                    <td style="width:50px;">Plan No :</td>
                                    <td style="width:100px; text-align:left;">@Html.TextBoxFor(model => model.PlanNo, new { style = "width: 100px;", id = "txtCode", disabled = "disabled" })</td>
                                </tr>
                            </table>
                        </td>
                        <td style="width:100px; text-align: right">Shipment Date:</td>
                        <td style="width:170px; text-align:left;">@Html.TextBoxFor(model => model.ShipmentDateInString, new { style = "width: 170px;", id = "txtCode", disabled = "disabled" })</td>
                    </tr>

                    <tr>
                        <td style="width: 120px; text-align: right">Order Qty:</td>
                        <td style="width:250px; text-align:left;">@Html.TextBoxFor(model => model.Quantity, new { style = "width: 250px;", id = "txtCode", disabled = "disabled" })</td>

                        <td style="width: 100px; text-align: right">
                            Remarks:
                        </td>
                        <td style="width:170px; text-align:left;">
                            @Html.TextBoxFor(model => model.Remarks, new { style = "width: 170px;", id = "txtCode", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 120px; text-align: right"> </td>
                        <td style="width:250px; text-align:left;"></td>

                        <td style="width: 100px; text-align: right"></td>
                        <td style="width:170px; text-align:left;"></td>
                    </tr>

                </table>
            </fieldset>
        </div>
        <div title="Time Action Plan Details" style="margin-left:3px; margin-top:2px;">
            <table id="tblTAPExecution" class="easyui-treegrid" title="Time Action Plan Details" style="width:100%;height:460px" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" data-options="idField:'id',treeField:'text', rownumbers:'true', toolbar:'#toolbar'">
                <thead>
                    <tr>
                        <th field="text" width="350">Step Name</th>
                        <th field="UpDatedData" width="250">Value</th>
                        <th field="IsDoneInString" align="center" width="100">Status</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbar" style="text-align:right; font-weight:normal">
                <table border="0" cellpadding="0" cellspacing="0">
                    <tr>
                        <td style="width:160px;" id="tdStringValue"><input type="text" id="txtStringValue" style="width:150px;" /></td>
                        <td id="tdNumberValue" style="width:160px;"><input type="text" id="txtNumberValue" style="width:150px;" /></td>
                        <td><a href="javascript:void(0)" id="btnUpdate" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Update</a></td>
                        <td id="tdDone"><a href="javascript:void(0)" id="btnDonePlan" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Done()">Done</a></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    <fieldset style="height:10%; width:100%;">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="0" cellpadding="0" style="font-size: 11px; font-weight: bold; vertical-align:middle; width:100%">
                <tr>
                    <td style="width:92%; text-align:center">
                        <label id="lblInfoFirstPart" style="color:blue; font-size:11px;"></label><br />
                        <label id="lblInfoSecondPart" style="color:blue; font-size:11px;"></label>
                    </td>
                    <td style="width:8%">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>


<script type="text/javascript">
    var _oTAP = null;
    var _oTAPExecution=null;
    var _sBaseAddress="";
    var _oTAPExecutions = [];
    var _oAuthorizationRolesMapping=[];
    var _nOrderStepID= 0;
    var _lBackLink= "";
    $(document).ready(function () {
        //debugger;
        _oTAP =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oTAPExecution =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.TAPExecution));
        _nOrderStepID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.OrderStepID));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        _lBackLink = sessionStorage.getItem("BackLink");
        RefreshTAPExecutions(_oTAPExecution.TTAPExecution.children);//load tree grid
        $('#accABC').accordion('select',1);//SElect second accordin  after reload page
        //$('#tblTAPExecution').treegrid('collapseAll',0);//Collapse all parent
        $('#tblTAPExecution').treegrid('select',_nOrderStepID);//Select
        RowSelect($('#tblTAPExecution').treegrid('getSelected'));
        RefreshStyleImage(_oTAP.TechnicalSheetID);//load Image
        $('#tblTAPExecution').treegrid({onSelect: function(rowData){ RowSelect(rowData);}})
        $('#txtNumberValue').numberbox({min:0,precision:2});
        if(parseInt(_oTAP.TAPID)>0)
        {
            $('#lblInfoFirstPart').html('Buyer : '+_oTAP.BuyerName +' || Style No : '+_oTAP.StyleNo);
            $('#lblInfoSecondPart').html('Order No : '+_oTAP.OrderRecapNo +' || Qty : '+ parseInt(_oTAP.Quantity) +' || Shipment Date : '+_oTAP.ShipmentDateInString);
        }
    });

   
    function RefreshTAPExecutions(oTTAPExecution)
    {
        data=oTTAPExecution;
        data={"total":""+data.length+"","rows":data};
        $('#tblTAPExecution').treegrid('loadData',data);
    }


    function SetRowIndex()
    {
        var oTAPExecutions = $('#tblTAPExecution').treegrid('getRows');
        var nCount;
        var sPriviousGroupName = "";
        var nLenth = oTAPExecutions.length;
        for(var i=0;i<nLenth;i++)
        {
            if(oTAPExecutions[i].group != sPriviousGroupName)
            {
                nCount = 0;
                alert("Index = "+oTAPExecutions[i].RowIndex +" ANd Count = "+nCount);
                oTAPExecutions[i].RowIndex = nCount;
                sPriviousGroupName = oTAPExecutions[i].group;
            }else{
                oTAPExecutions[i].index = nCount;
            }
            nCount++;
        }
        RefreshTAPExecutionGrid(oTAPExecutions);
    }

    function MakeObjectList()
    {
        var oTAPExecutions = $('#tblTAPExecution').treegrid('getRows');
        for(var i=0;i<oTAPExecutions.length;i++)
        {
            oTAPExecutions[i].UpdatedData = oTAPExecutions[i].value;
        }
        return oTAPExecutions;
    }

    function RefreshTAPExecutionGrid(oTempList)
    {
        // var oTAPExecutions = $('#tblTAPExecution').treegrid('getRows');
        data=oTempList;
        data={"total":""+data.length+"","rows":data};
        $('#tblTAPExecution').treegrid('loadData',data);
    }

    function GetRequiredDataType(nRequiredDataType)
    {
        if(nRequiredDataType==0)
        {
            return 'text';
        }else if(nRequiredDataType ==1)
        {
            return 'numberbox';
        }else
        {
            return 'datebox'
        }
    }

    function RowSelect(oTAPExecution)
    {
        debugger;
        //Re Set all
        document.getElementById('btnUpdate').style.display = '';
        document.getElementById('tdNumberValue').style.display = '';
        document.getElementById('tdStringValue').style.display = '';
        document.getElementById('btnDonePlan').style.display = '';
        if(parseInt(oTAPExecution.RequiredDataTypeInInt) == 0)//Text
        {
            if(oTAPExecution.IsDone==true)
            {
                document.getElementById('btnUpdate').style.display = 'none';
                document.getElementById('tdStringValue').style.display = 'none';
            }else{
                document.getElementById('btnUpdate').style.display = '';
                document.getElementById('tdStringValue').style.display = '';
            }
            document.getElementById('tdNumberValue').style.display = 'none';
            document.getElementById("txtStringValue").value = oTAPExecution.UpDatedData;

        }else if(parseInt(oTAPExecution.RequiredDataTypeInInt) == 1)//number
        {
            if(oTAPExecution.IsDone==true)
            {
                document.getElementById('btnUpdate').style.display = 'none';
                document.getElementById('tdNumberValue').style.display = 'none';
            }else{
                document.getElementById('btnUpdate').style.display = '';
                document.getElementById('tdNumberValue').style.display = '';
            }
            document.getElementById('tdStringValue').style.display = 'none';
            $('#txtNumberValue').numberbox('setValue', oTAPExecution.UpDatedData);

        }
        else{//DAte
            document.getElementById('btnUpdate').style.display = 'none';
            document.getElementById('tdNumberValue').style.display = 'none';
            document.getElementById('tdStringValue').style.display = 'none';
        }
        if(oTAPExecution.IsDone==true)
        {
            $('#tdDone').hide();
        }else
        {
            $('#tdDone').show();
        }
    }



    function Done()
    {
        debugger;
        var oTempTAPExecution = $('#tblTAPExecution').treegrid('getSelected');
        if(parseInt(oTempTAPExecution.RequiredDataTypeInInt)!=2)
        {
            if(oTempTAPExecution.TAPExecutionID<=0)
            {
                alert("Please Update Data First .");
                return;
            }
        }

        if(parseInt(oTempTAPExecution.parentid)===1)
        {
            var oTempChildrens= $('#tblTAPExecution').treegrid('getChildren', oTempTAPExecution.id);
            if(oTempChildrens!=null)
            {
                for(var i = 0;i<oTempChildrens.length;i++)
                {
                    if(oTempChildrens[i].TAPExecutionID<=0)
                    {
                        alert("Please Update Sub Step First. Then Parent Step");
                        return;
                    }
                    if(oTempChildrens[i].IsDone==false)
                    {
                        alert("Please Done Sub Step First. Then Parent Step");
                        return;
                    }
                }
            }
        }

        if (!confirm("Confirm to Done?")) return ;
        var oTAPExecution = {TAPExecutionID:oTempTAPExecution.TAPExecutionID,RequiredDataTypeInInt:oTempTAPExecution.RequiredDataTypeInInt,TAPDetailID:oTempTAPExecution.TAPDetailID,OrderStepID:oTempTAPExecution.OrderStepID,TAPID:oTempTAPExecution.TAPID};
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/TAPExecution/Done",
            traditional: true,
            data:  JSON.stringify(oTAPExecution),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                _oTAPExecution = jQuery.parseJSON(data);
                if (_oTAPExecution.ErrorMessage == "" || _oTAPExecution.ErrorMessage == null)
                {
                    //alert("Sucessfully Done");
                    document.getElementById('btnUpdate').style.display = 'none';
                    document.getElementById('tdNumberValue').style.display = 'none';
                    document.getElementById('tdStringValue').style.display = 'none';
                    document.getElementById('btnDonePlan').style.display = 'none';
                    RefreshTAPExecutions(_oTAPExecution.TTAPExecution.children);
                }
                else {
                    alert(_oTAPExecution.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function Save()
    {
        debugger;
        var oTempTAPExecution = $('#tblTAPExecution').treegrid('getSelected');
        if(oTempTAPExecution == null)
        {
            alert("Please Select Item form list");
            return ;
        }
        if(oTempTAPExecution.IsDone==true)
        {
            alert("Already Done This Item.");
            return ;
        }
        if(parseInt(oTempTAPExecution.RequiredDataTypeInInt)== 0)
        {
            if($("#txtStringValue").val()==null || $("#txtStringValue").val()=="")
            {
                alert("Please Type Comments Something.!");
                $("#txtStringValue").focus();
                return ;
            }
            oTempTAPExecution.UpdatedData = $("#txtStringValue").val();
            document.getElementById('txtStringValue').value ="";
        }else if(parseInt(oTempTAPExecution.RequiredDataTypeInInt) == 1)
        {
            if(parseFloat($('#txtNumberValue').numberbox('getValue'))<=0)
            {
                alert("Sorry, Value should be Greater Than 0.!");
                $("#txtNumberValue").focus();
                return ;
            }
            oTempTAPExecution.UpdatedData = $('#txtNumberValue').numberbox('getValue');
            $('#txtNumberValue').numberbox('setValue', 0);
        }
       
        var oTAPExecution = {
            TAPExecutionID:oTempTAPExecution.TAPExecutionID,
            TAPDetailID :oTempTAPExecution.TAPDetailID,
            OrderStepID  :oTempTAPExecution.OrderStepID,
            UpdatedData :oTempTAPExecution.UpdatedData,
            RequiredDataTypeInInt :oTempTAPExecution.RequiredDataTypeInInt
        };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/TAPExecution/Save",
            traditional: true,
            data:  JSON.stringify(oTAPExecution),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                _oTAPExecution = jQuery.parseJSON(data);
                if (_oTAPExecution.ErrorMessage == "" || _oTAPExecution.ErrorMessage == null)
                {
                    //alert("Data Saved sucessfully");
                    RefreshTAPExecutions(_oTAPExecution.TTAPExecution.children);
                }
                else {
                    alert(_oTAPExecution.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }



    function RefreshStyleImage(nTechnicalSheetID)
    {
        $.ajax({
            cache:true,
            type: "GET",
            url: "@(Url.Action("GetStyleImageInBase64", "TechnicalSheet"))",
            data: "id=" + nTechnicalSheetID,
            success: function (data) {
                //debugger;
                $('#imgCoverImage').attr('src', "data:image/jpg;base64," + data.base64imgage );
            }
        });
    }

    function Close()
    {
        window.location.href = _lBackLink;
    }
    

   
</script>