<html>
<head>
    @{
        ViewBag.Title = "Delivery Challan";
    }
</head>
<body>
    @model ESimSol.BusinessObjects.TradingDeliveryChallan
    <div id="progbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable">
        <div id="divTradingDeliveryChallan" class="easyui-panel" title="Delivery Challan" style="font-family:Tahoma; text-align:center; height:89%; width:100%">
            <fieldset>
                <legend style="font-weight:bold">Basic Informations : </legend>
                <table border="0" cellspacing="1" cellpadding="1" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:10%; text-align:right">
                            Challan No:
                        </td>
                        <td style="width:11%">
                            @Html.TextBoxFor(model => model.ChallanNo, new { style = "width: 95%;", id = "txtChallanNo", disabled = "disabled" })
                        </td>
                        <td style="width:8%; text-align:right">
                            Invoice No :
                        </td>
                        <td style="width:10%">
                            @Html.TextBoxFor(model => model.InvoiceNo, new { style = "width: 85%;", id = "txtInvoiceNo", disabled = "disabled" })
                        </td>
                        <td style="width:11%; text-align:right">
                            Challan Date :
                        </td>
                        <td style="width:15%">
                            <input id="dtChallanDate" type="text" style="width:100%;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>

                        <td style="width:10%; text-align:right;font-weight:bold">
                            Store :
                        </td>
                        <td style="width:25%;font-size:11px">
                            @Html.DropDownListFor(model => model.StoreID, Model.WorkingUnits.Select(x => new SelectListItem() { Text = x.WorkingUnitName, Value = x.WorkingUnitID.ToString() }), new { id = "cboStore", style = "width:98%;" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right; font-weight:bold">Buyer : </td>
                        <td style="width:29%; text-align:left" colspan="3">
                            @Html.TextBoxFor(model => model.BuyerName, new { style = "width: 96%;", id = "txtBuyerName", disabled = "disabled" })
                        </td>
                        <td style="width:11%; text-align:right">
                            Currency :
                        </td>
                        <td style="width:15%">
                            @Html.TextBoxFor(model => model.CurrencyName, new { style = "width: 96%;", id = "txtCurrencyName", disabled = "disabled" })
                        </td>
                        <td style="width:10%; text-align:right;font-weight:bold">
                            Remarks :
                        </td>
                        <td style="width:25%;font-size:11px">
                            @Html.TextBoxFor(model => model.Note, new { style = "width: 96%;", id = "txtNote" })
                        </td>
                    </tr>
                </table>
            </fieldset>
            <div style="margin-left:2px; height:385px; margin-left:2px; width:99.80%">
                <table id="tblTradingDeliveryChallanDetail" title="Item Description" class="easyui-datagrid" style="width:100%;height:377px"
                       data-options="singleSelect: true, fitColumns:false, rownumbers:true,pagination:false,autoRowHeight:false,toolbar: '#toolbar',onClickRow: onClickRow ">
                    <thead>
                        <tr>
                            <th field="ProductCode" width="85" align="left">Code</th>
                            <th field="ProductName" width="300" align="left">Product Name</th>
                            <th field="ItemDescription" width="300" align="left">Item Description</th>
                            <th field="Symbol" width="70" align="left">Unit</th>
                            <th field="YetToChallanQty" width="100" align="right" formatter="formatPrice">Yet To Challan</th>
                            <th data-options="field:'ChallanQty',width:100,align:'right',editor:{type:'numberbox',options:{precision:2}}" formatter="formatPrice" align="right">Quantity</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbar" style=" height:25px">
                    <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                    <a id="btnReload" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Reload</a>
                    <a id="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                </div>
            </div>
        </div>
        <fieldset style="height:8%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:83%; text-align:right"></td>
                    <td style="width:17%;text-align:right;">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>


<script type="text/javascript">
    var _oTradingDeliveryChallan=null;
    $(document).ready(function () {
        _oTradingDeliveryChallan = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").hide();
        $('#dtChallanDate').datebox('setValue', _oTradingDeliveryChallan.ChallanDateST);
        RefreshList(_oTradingDeliveryChallan.TradingDeliveryChallanDetails);
        RefreshLayOut();
    });

    function updateProgress() {
        var value =$('#progbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds) {
        $("#progbarParent").hide();
    }

    function RefreshLayOut() {
        var sTradingDeliveryChallanHeader = sessionStorage.getItem("TradingDeliveryChallanHeader");
        if (sTradingDeliveryChallanHeader === "View TradingDeliveryChallan") {
            $("#txtChallanNo").prop('disabled', true);
            $("#txtInvoiceNo").prop('disabled', true);
            $("#dtChallanDate").datebox({'disabled':true});
            $('#dtChallanDate').datebox('setValue', _oTradingDeliveryChallan.ChallanDateST);
            $("#cboStore").prop('disabled', true);
            $("#txtBuyerName").prop('disabled', true);
            $("#txtCurrencyName").prop('disabled', true);
            $("#txtNote").prop('disabled', true);
            $("#btnRemove").hide();
            $("#btnSave").hide();
        }
    }

    function ValidateInput() {
        if(_oTradingDeliveryChallan===null)
        {
            alert("Invalid Purchase Invoice!");
            return false;
        }
        if(parseInt(_oTradingDeliveryChallan.BUID)<=0)
        {
            alert("Invalid Business Unit!");
            return false;
        }
        var dtChallanDate = $('#dtChallanDate').datebox('getValue');
        if (dtChallanDate == null || dtChallanDate == "") {
            alert("Please enter Invocie Date!");
            $('#dtChallanDate').focus();
            return false;
        }
        if ($('#cboStore').val() === null ||  parseInt($('#cboStore').val()) <=0) {
            alert("Please select Store!");
            $('#cboStore').focus();
            return false;
        }

        if(parseInt(_oTradingDeliveryChallan.BuyerID)<=0){
            alert("Please select Buyer!");
            return false;
        }

        var oTradingDeliveryChallanDetails = $('#tblTradingDeliveryChallanDetail').datagrid('getRows');
        if (oTradingDeliveryChallanDetails == null || oTradingDeliveryChallanDetails.length <= 0) {
            alert("Please enter at least one item!");
            return false;
        }

        for (var i = 0; i < oTradingDeliveryChallanDetails.length; i++) {
            if (parseFloat(oTradingDeliveryChallanDetails[i].ChallanQty) <= 0) {
                alert("Invoice Quantity Should be greater than 0 for  : " + oTradingDeliveryChallanDetails[i].ProductName);
                return false;
            }
            if (parseFloat(oTradingDeliveryChallanDetails[i].UnitPrice) <= 0) {
                alert("Unit price Should be greater than 0 for : " + oTradingDeliveryChallanDetails[i].ProductName);
                return false;
            }
        }
        var nNetAmount =parseFloat($('#tblTradingDeliveryChallanDetail').data("NetAmount"));
        if (nNetAmount <= 0) {
            alert("Invalid Net Amount!");
            return false;
        }
        return true;
    }

    function RefreshObject() {
        var oTradingDeliveryChallan = {
            TradingDeliveryChallanID: parseInt(_oTradingDeliveryChallan.TradingDeliveryChallanID),
            BUID : parseInt(_oTradingDeliveryChallan.BUID),
            SaleInvoiceID : parseInt(_oTradingDeliveryChallan.SaleInvoiceID),
            ChallanNo: $.trim($('#txtChallanNo').val()),
            ChallanDate: $('#dtChallanDate').datebox('getValue'),
            BuyerID: parseInt(_oTradingDeliveryChallan.BuyerID),
            StoreID: parseInt($('#cboStore').val()),
            CurrencyID : parseInt(_oTradingDeliveryChallan.CurrencyID),
            Note: $.trim($('#txtNote').val()),
            DeliveryBy: parseInt(_oTradingDeliveryChallan.DeliveryBy),
            NetAmount : parseFloat($('#tblTradingDeliveryChallanDetail').data("NetAmount")),
            TradingDeliveryChallanDetails: $('#tblTradingDeliveryChallanDetail').datagrid('getRows')
        };
        return oTradingDeliveryChallan;
    }

    $("#btnSave").click(function () {
        endEditing();
        if (!ValidateInput()) return;
        var oTradingDeliveryChallan = RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress")+  "/TradingDeliveryChallan/Save",
            traditional: true,
            data: JSON.stringify(oTradingDeliveryChallan),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oTradingDeliveryChallan = jQuery.parseJSON(data);
                if (oTradingDeliveryChallan.TradingDeliveryChallanID > 0) {
                    alert("Data Saved sucessfully");
                    var oTradingDeliveryChallans = sessionStorage.getItem("TradingDeliveryChallans");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oTradingDeliveryChallans != null) {
                        oTradingDeliveryChallans = jQuery.parseJSON(oTradingDeliveryChallans);
                    }
                    else {
                        oTradingDeliveryChallans = [];
                    }
                    if (nIndex != -1) {
                        oTradingDeliveryChallans[nIndex] = oTradingDeliveryChallan;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oTradingDeliveryChallans.length);
                        oTradingDeliveryChallans.push(oTradingDeliveryChallan);
                    }
                    sessionStorage.setItem("TradingDeliveryChallans", JSON.stringify(oTradingDeliveryChallans));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oTradingDeliveryChallan.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#btnClose").click(function () {
        window.location.href = sessionStorage.getItem("BackLink");
    });

    function RefreshSummery() {
        var nNetAmount = 0;
        var oTradingDeliveryChallanDetails = $('#tblTradingDeliveryChallanDetail').datagrid('getRows');
        for (var i = 0; i < oTradingDeliveryChallanDetails.length; i++) {
            nNetAmount = nNetAmount + parseFloat(oTradingDeliveryChallanDetails[i].Amount);
        }
        $('#tblTradingDeliveryChallanDetail').data("NetAmount", nNetAmount);
    }

    $("#btnRemove").click(function () {
        var oTradingDeliveryChallanDetail = $('#tblTradingDeliveryChallanDetail').datagrid('getSelected');
        if (oTradingDeliveryChallanDetail == null) {
            alert("Please select a item from list!");
            return;
        }
        var conf = confirm("Confirm to delete?");
        if (conf == false) return;

        endEditing();
        var SelectedRowIndex = $('#tblTradingDeliveryChallanDetail').datagrid('getRowIndex', oTradingDeliveryChallanDetail);
        $('#tblTradingDeliveryChallanDetail').datagrid('deleteRow', SelectedRowIndex);

        var oTradingDeliveryChallanDetails = $('#tblTradingDeliveryChallanDetail').datagrid('getRows');
        RefreshList(oTradingDeliveryChallanDetails);
    });

    function RefreshList(oTradingDeliveryChallanDetails) {
        data = oTradingDeliveryChallanDetails;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblTradingDeliveryChallanDetail').datagrid('loadData', data);
        RefreshSummery();
    }

    $("#btnRefresh").click(function () {
        endEditing();
        data = $('#tblTradingDeliveryChallanDetail').datagrid('getRows');
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblTradingDeliveryChallanDetail').datagrid('loadData', data);
        RefreshSummery();
    });

    $("#btnReload").click(function () {
        if(parseInt(_oTradingDeliveryChallan.SaleInvoiceID)<=0)
        {
            alert("Invalid Purchase Invoice!");
            return false;
        }

        var oTradingDeliveryChallan = {
            TradingDeliveryChallanID : _oTradingDeliveryChallan.TradingDeliveryChallanID,
            SaleInvoiceID : parseInt(_oTradingDeliveryChallan.SaleInvoiceID)
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress")+  "/TradingDeliveryChallan/ReloadTradingDeliveryChallanProduct",
            traditional: true,
            data: JSON.stringify(oTradingDeliveryChallan),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oTradingDeliveryChallanDetails = jQuery.parseJSON(data);
                if (oTradingDeliveryChallanDetails !=null) {
                    if(oTradingDeliveryChallanDetails.length>0)
                    {
                        if(oTradingDeliveryChallanDetails[0].ErrorMessage==="")
                        {
                            RefreshList(oTradingDeliveryChallanDetails);
                            RefreshSummery();
                        }
                        else
                        {
                            alert(oTradingDeliveryChallanDetails[0].ErrorMessage);
                        }
                    }
                    else
                    {
                        alert('Data Not Found!\nYour Selected Invoice already TradingDeliveryChallan Complete!');
                    }
                }
                else {
                    alert('Invalid Operation!');
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });


        RefreshSummery();
    });

    function RefreshGrid() {
        endEditing();
        data = $('#tblTradingDeliveryChallanDetail').datagrid('getRows');
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblTradingDeliveryChallanDetail').datagrid('loadData', data);
        RefreshSummery();
    }

    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#tblTradingDeliveryChallanDetail').datagrid('validateRow', editIndex)) {
            $('#tblTradingDeliveryChallanDetail').datagrid('endEdit', editIndex);
            $('#tblTradingDeliveryChallanDetail').datagrid('selectRow', editIndex);
            var oTradingDeliveryChallanDetail = $('#tblTradingDeliveryChallanDetail').datagrid('getSelected');
            oTradingDeliveryChallanDetail.Amount = parseFloat(parseFloat(oTradingDeliveryChallanDetail.ChallanQty) * parseFloat(oTradingDeliveryChallanDetail.UnitPrice));
            $('#tblTradingDeliveryChallanDetail').datagrid('updateRow', { index: editIndex, row: oTradingDeliveryChallanDetail });
            RefreshSummery();
            editIndex = undefined;
            return true;
        } else {
            return false;
        }
    }

    function onClickRow(index) {

        if (editIndex != index) {
            if (endEditing()) {
                $('#tblTradingDeliveryChallanDetail').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editIndex = index;
            } else {
                $('#tblTradingDeliveryChallanDetail').datagrid('selectRow', editIndex);
            }
        }
    }
</script>