<html>
@{
    ViewBag.Title = "Production Execution";
}
<body>
    @model ESimSol.BusinessObjects.GUProductionTracingUnit
    <div id="winGUProductionOrder" class="easyui-window" title="Order Recap Search" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <table id="tblPickerGUProductionOrders" title="" class="easyui-datagrid" style="width:500px; height: 300px" fit="true" fitcolumns="false" rownumbers="true" singleselect="true" autorowheight="false" toolbar="#GUProductionOrderToolbar">
                <thead>
                    <tr>
                        <th field="StyleNo" width="150" align="left">Style No</th>
                        <th field="GUProductionOrderNo" width="150" align="left">Production Order</th>
                        <th field="OrderRecapNo" width="150" align="left">Order Recap No</th>
                        <th field="BuyerName" width="150" align="left">Buyer Name</th>
                        <th field="ShipmentDateInString" width="150" align="left">Shipment Date</th>
                        <th field="GarmentsProductName" width="150" align="left">Product Name</th>
                        <th field="TotalQty" width="70" align="right">Qty</th>
                    </tr>
                </thead>
            </table>
            <div id="GUProductionOrderToolbar">
                <input type="text" id="txtSearchStyleNo" style="width:120px" placeholder="Type Style No & Press Enter" /><a id="btnPickerStyle" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="StylePiker()">Pick</a>

                <input type="text" id="txtSearchBuyerName" style="width:120px" placeholder="Type Buyer & Press Enter" />
                <a id="btnPickerBuyer" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="BuyerPicker()">Pick</a>
                @Html.DropDownList("cboShipmentDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboShipmentDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeA" })
                <input id="txtStartShipementDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100px" />To
                <input id="txtEndShipementDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100px" />
                <a id="btnPickerRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Refresh</a>
            </div>
            <fieldset style="margin-bottom:3px">
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; width:950px">
                    <tr>
                        <td style="width:850px; text-align:left"></td>
                        <td style="width:50px">
                            <a id="btnPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div class="easyui-panel menuMainCollectionTable" style="height: 98%; width:100%" title="Production Order Info:">
        <table border="0" cellpadding="0" cellspacing="0" style="padding-left:5px; width:100%;">
                <tr>
                    <td style="width: 20%; text-align: right;">
                        Recap No:
                    </td>
                    <td style="width: 30%;">
                        <input type="text" style="width:80%; margin-left:10px;  margin-top: 5px;" id="txtRecapNo" />
                        <input type="button" onclick="GUProductionOrderPiker()" value="Pick" id="btnGUProductionOrderPiker" />
                    </td>

                    <td id="tdtxtIssueDate111" style="width:20%; text-align: right;">
                        Buyer Name:
                    </td>
                    <td style="width:30%; text-align: left">
                        <input id="txtBuyerName" type="text" style="width:100%; margin-top: 5px;" disabled/>
                    </td>     
                   </tr>
                            
            <tr>
                <td style="width: 20%; text-align: right;">
                    Production Order No:
                </td>
                <td style="width: 30%">
                    <input id="txtGUProductionOrderNo" type="text" disabled="disabled" style="width:93%;  margin-top: 5px;" />
                </td>
                <td style="width: 20%; text-align: right;">
                    Production Unit:
                </td>
                <td style="width:30%;">
                    <input id="txtProductionUnitName" type="text" disabled="disabled" style="width: 95%; margin-top: 5px;" />

                </td>
            </tr>
            </table>
        <fieldset style="font-weight:bold; height:60px;margin-top:2px;width:98.5%">
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td style="text-align:left;width:25%;">Production Step :<select id="cboProductionStep" style="width:50%" class="_select_change"> </select></td>
                        <td style="text-align:left;width:15%;"><a id="btnLoadColor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="LoadColor()">Load Color Size</a></td>
                        <td style="text-align:left;width:20%;">&nbsp;&nbsp;Line No:<select id="cboPLineNo" style="width:60%"> </select></td>
                        <td style="text-align:left;width:22%;">Operation Date :<input id="txtOperationDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:103px" /></td>
                        <td style="text-align:left;width:18%;">Actual W/H:<input type="text" id="txtActualWorkingHour" style="text-align:right;width:40%;" /></td>
                    </tr>
                    <tr>
                        <td style="text-align:left;width:25%;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use Operator :<input type="text" id="txtUseOperator" style="text-align:right;width:50%;" /></td>
                        <td style="text-align:left;width:15%;">Use Helper: <input type="text" id="txtUseHelper" style="text-align:right;width:45%;" /></td>
                        <td style="text-align:left;width:20%;">&nbsp;&nbsp;Is M.R Update:<input type="checkbox" id="chkIsUsesValueUpdate" style="height:10px;width:20%" /></td>
                        <td style="text-align:left;width:22%;">&nbsp;&nbsp;Remarks:<input type="text" id="txtNote" style="width:64%;" /></td>
                        <td style="text-align:left;width:18%;">
                            <a id="btnCommit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="CommitProductionExecution()">Execution</a>
                            <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="PrintPreview()">Print</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        <div style="margin-top:2px; width:100%; height:185px;">
                <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                    <tr>
                        <td style="width:400px;">
                                <table id="tblPriviousColorSizeRatio" title="Order Color Size Rato" style="width:100%; height:200px;" class="easyui-datagrid" data-options="singleSelect: true,fitColumns:false"></table>
                         </td>
                        <td style="width:300px; height:200px;">
                            <table id="tblTodayColorSizeRatio" title="Today Execution" class="easyui-datagrid" style="width:100%; height:200px;" data-options="singleSelect: true,fitColumns:false,onClickRow: onClickRow"></table>
                        </td>
                        <td style="width:300px; height:200px;">
                            <table id="tblYetToColorSizeRatio" title="Yet To Execution" class="easyui-datagrid" style="width:100%; height:200px;" data-options="singleSelect: true,fitColumns:false"></table>
                        </td>
                    </tr>
                </table>
              </div>
        <div title="Production Execution History">
            <div style="margin-top:10px; width:100%; height:180px;">
                <table id="tblHistory" title="Step Wise History" class="easyui-datagrid" style="width:100%; height:200px;"
                       data-options="
                        singleSelect: true,
                        fitColumns:false,
                        rownumbers:true,
                        pagination:false,
                        toolbar: '#Historytoolbar',
                        autoRowHeight:false
                    "></table>
             
            </div>
          
        </div>
    </div>
</body>
</html>
<script type="text/javascript">
var _oGUProductionTracingUnit=[];
var _sBaseAddress=""; 
var _oAuthorizationRolesMapping =[];
var _oGUProductionTracingUnits=[];
var _oSelectedExecutionFactory =null; 
var _oBuyer=null;
var _oGUProductionOrder=null;
var _oTechnicalSheetSizes = [];
var _oGUProductionProcedures = [];
$(document).ready(function () {
      //debugger;    
    _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));             
    var oAURolesMapping  =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));    
    RefreshControlLayout(oAURolesMapping);
    $('#txtActualWorkingHour,#txtUseHelper,#txtUseOperator').numberbox(null,0,0);
    $('#txtOperationDate').datebox({'disabled': true});  
    $('#txtOperationDate').datebox('setValue', icsdateformat(new Date())); 
    $('#MainLayout').layout('collapse','west');
});
    
function ValidateInput()
{

    if(_oGUProductionTracingUnit==null || parseInt(_oGUProductionTracingUnit.ProductionStepID)<=0)
    {
        alert('Invalid Production Step!')
        return false;
    }    
    if(parseInt(_oGUProductionTracingUnit.GUProductionOrderID)<=0)
    {
        alert('Invalid Production Order!')
        return false;
    }
       
    if(parseInt($('#cboPLineNo').val())<=0){alert("Please Select Line No."); $('#cboPLineNo').focus(); return false;}

    var oPTUs = $('#tblTodayColorSizeRatio').datagrid('getRows');  
    if(oPTUs.length<=0)
    {
        alert("There is no Color Exists!");
        return false;
    }
    return true;
}
    
function RefreshObject()
{   
    debugger;
    var oCurrentStepObject = ICS_FindObject(_oGUProductionProcedures,'ProductionStepID',_oGUProductionTracingUnit.ProductionStepID);
    var nCurrentStepSequence  = oCurrentStepObject.Sequence;
    var oPriviousStepID = 0;
    if(nCurrentStepSequence!=1)
    {
        oPriviousStepID  = ICS_FindObject(_oGUProductionProcedures,'Sequence',parseInt(oCurrentStepObject.Sequence-1)).ProductionStepID;
    }
    var oGUProductionTracingUnit = {                                
                                        ProductionOperationNote : "", //$("#txtNote").val(),
                                        OperationDate : $('#txtOperationDate').datebox('getValue'), 
                                        GUProductionOrderID : (_oGUProductionTracingUnit.GUProductionOrderID),
                                        TechnicalSheetID:(_oGUProductionOrder.TechnicalSheetID),
                                        CurrentStepSequence:nCurrentStepSequence,
                                        ProductionStepID : (_oGUProductionTracingUnit.ProductionStepID),
                                        PriviousStepID:oPriviousStepID,
                                        PLineConfigureID:parseInt($('#cboPLineNo').val()),
                                        MeasurementUnitID:parseInt(_oGUProductionOrder.UnitID),
                                        ActualWorkingHour :parseInt($('#txtActualWorkingHour').val()),
                                        UseHelper :parseInt($('#txtUseHelper').val()),
                                        UseOperator :parseInt($('#txtUseOperator').val()),
                                        IsUsesValueUpdate: $("#chkIsUsesValueUpdate").attr('checked')?true:false, // $('#chkIsUsesValueUpdate').checked(),
                                        ProductionOperationNote:$('#txtNote').val(),
                                        TodayColorSizeRatios  : $('#tblTodayColorSizeRatio').datagrid('getRows')
                                };
    return oGUProductionTracingUnit;
} 

function CommitProductionExecution()
{
    //debugger;
    endEditing();
    if(!ValidateInput()) return;     
    var oGUProductionTracingUnit = RefreshObject();
     $.ajax({
            type: "POST",
            dataType: "json",            
            url : _sBaseAddress+"/ProductionManagement/CommitProductionExecution",
            traditional: true,
            data:  JSON.stringify(oGUProductionTracingUnit),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var oGUProductionTracingUnit = jQuery.parseJSON(data);
                if(oGUProductionTracingUnit!=null)
                {
                    if (oGUProductionTracingUnit.ErrorMessage=="") 
                    {
                        
                        if(oGUProductionTracingUnit.TechnicalSheetSizes!=null)
                        {
                            if(oGUProductionTracingUnit.TechnicalSheetSizes.length>0)
                            {
                                alert("Update Successfully.");
                                _oTechnicalSheetSizes = oGUProductionTracingUnit.TechnicalSheetSizes;
                                MakePTUTable(_oTechnicalSheetSizes);
                                RefreshList(oGUProductionTracingUnit.PriviousColorSizeRatios,1);//for privious
                                RefreshList(oGUProductionTracingUnit.TodayColorSizeRatios,2);//for Today
                                RefreshList(oGUProductionTracingUnit.YetToColorSizeRatios,3);//for Yet to
                                RefreshHistoryList(oGUProductionTracingUnit.PTUHistoryColorSizeRatios);
                            }  
                        }
                    }
                    else
                    {
                        alert(oGUProductionTracingUnit.ErrorMessage);
                    }                     
                }                    
            },
            error: function (xhr, status, error) 
            {
                alert(error);
            }
        });
}
function LoadColor()
{
    var cboProductionStep = document.getElementById("cboProductionStep");
    if(cboProductionStep.selectedIndex<0)
    {
        alert("Please Select Production Step!");
        $('#cboProductionStep').focus();
        return;
    }
    var nProductionStepID=cboProductionStep.options[cboProductionStep.selectedIndex].value;
    if(parseInt(nProductionStepID)<=0)
    {
        alert("Please Select Production Step!");
        $('#cboProductionStep').focus();
        return;
    }


    if(_oGUProductionOrder==null || parseInt(_oGUProductionOrder.GUProductionOrderID)<=0)
    {
        alert("Please Select a style!");
        $('#txtRecapNo').focus();
        return;
    }
    var oCurrentStepObject = ICS_FindObject(_oGUProductionProcedures,'ProductionStepID',nProductionStepID);
    var nCurrentStepSequence  = oCurrentStepObject.Sequence;
    var oPriviousStepID = 0;
    if(nCurrentStepSequence!=1)
    {
        oPriviousStepID  = ICS_FindObject(_oGUProductionProcedures,'Sequence',parseInt(oCurrentStepObject.Sequence-1)).ProductionStepID;
    }
    var oPTU ={
                    GUProductionOrderID : parseInt(_oGUProductionOrder.GUProductionOrderID),
                    ProductionStepID : parseInt(nProductionStepID),
                    TechnicalSheetID:parseInt(_oGUProductionOrder.TechnicalSheetID),
                    CurrentStepSequence:nCurrentStepSequence,
                    PriviousStepID:oPriviousStepID,
                    StepName : cboProductionStep.options[cboProductionStep.selectedIndex].text
              };

     $.ajax({
            type: "POST",
            dataType: "json",            
            url : _sBaseAddress+"/ProductionManagement/GetsPTU",
            traditional: true,
            data:  JSON.stringify(oPTU),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                _oGUProductionTracingUnit= jQuery.parseJSON(data);
                if(_oGUProductionTracingUnit!=null)
                {                    
                    if (_oGUProductionTracingUnit.ErrorMessage=="") 
                    {
                        if(_oGUProductionTracingUnit.PriviousColorSizeRatios!=null)
                        {
                            if(_oGUProductionTracingUnit.PriviousColorSizeRatios.length>0)
                            {
                                //MakePTUTable(_oTechnicalSheetSizes);
                                RefreshList(_oGUProductionTracingUnit.PriviousColorSizeRatios,1);//for privious
                                RefreshList(_oGUProductionTracingUnit.TodayColorSizeRatios,2);//for Today
                                RefreshList(_oGUProductionTracingUnit.YetToColorSizeRatios,3);//for Yet to
                                RefreshHistoryList(_oGUProductionTracingUnit.PTUHistoryColorSizeRatios);
                                                             
                                
                            }  
                        }
                    }    
                    else
                    {
                        alert(_oGUProductionTracingUnit.ErrorMessage);
                    }                 
                }                    
            },
            error: function (xhr, status, error) 
            {
                alert(error);
            }
        });
}
$('._select_change').change(function () {      
    var cboProductionStep =document.getElementById("cboProductionStep");
    var sProductionStepName  = "Order Color Size Ratio";
    var oCurrentStepObject = ICS_FindObject(_oGUProductionProcedures,'ProductionStepID',parseInt($('#cboProductionStep').val()));
    var nCurrentStepSequence  = oCurrentStepObject.Sequence;
    if(nCurrentStepSequence>1)
    {
        sProductionStepName   = cboProductionStep.options[cboProductionStep.selectedIndex-1].text+" Color Size Ratio";
    } 
    $('#tblPriviousColorSizeRatio').datagrid({ title: (sProductionStepName)});
    MakePTUTable(_oTechnicalSheetSizes);
    RefreshList([],1);
    RefreshList([],2);
    RefreshList([],3);
    RefreshHistoryList([]);
 });

function MakePTUTable(oTechnicalSheetSizes)
{    
   
    var oTempTechnicalSheetSizes = [];
    var tblPriviousColums=[],tblTodayColums=[],tblYeToColums=[], tblHistoryColumns =[];
    var TotaSizeColuWidth = 300;
    var oColumn=null;
    oColumn= { field :"ColorName", title:"Color Name", width:120};tblPriviousColums.push(oColumn);
    //for History
    oColumn= { field :"ColorName", title:"Color Name", width:200};tblHistoryColumns.push(oColumn);
    var count =0;
    for(var i=0; i<oTechnicalSheetSizes.length;i++)
    {
        count++;
        oColumn= {
            field:"OrderQty"+count,
            title: oTechnicalSheetSizes[i].SizeCategoryName,
            width: parseFloat(TotaSizeColuWidth)/parseInt(oTechnicalSheetSizes.length),
            align: "right",
            editor: {type:'numberbox',options:{ precision:0}}
        };
        tblTodayColums.push(oColumn);

        oColumn= {
            field:"OrderQty"+count,
            title: oTechnicalSheetSizes[i].SizeCategoryName,
            width: parseFloat(TotaSizeColuWidth)/parseInt(oTechnicalSheetSizes.length),
            align: "right"
        };
        tblPriviousColums.push(oColumn);tblYeToColums.push(oColumn);
     
        //for History
        oColumn= {
            field:"BarCode"+count,//just use for temporary value show //don't delete
            title: oTechnicalSheetSizes[i].SizeCategoryName,
            width: parseFloat(900)/parseInt(oTechnicalSheetSizes.length),
            align: "right",
            formatter:function(value,row,index){return  HistoryFunction(value);}
        };
        tblHistoryColumns.push(oColumn);
    }
    $('#tblPriviousColorSizeRatio').datagrid({ columns:[tblPriviousColums]});
    $('#tblTodayColorSizeRatio').datagrid({ columns:[tblTodayColums]});
    $('#tblYetToColorSizeRatio').datagrid({ columns:[tblYeToColums]});
    $('#tblHistory').datagrid({ columns:[tblHistoryColumns]});
    //RefreshSummary(oTempTechnicalSheetSizes);
            
}

function HistoryFunction(value)
{
    debugger;
    var nQty = 0, nGUProductionTracingUnitDetailID = 0;
    if(value!=undefined)
    {
       var values=value.split("~");
        nQty=values[0];
        nGUProductionTracingUnitDetailID=values[1];
    }
    var s = '<a  href="javascript:void(0)"  onclick = "PickHistory('+nGUProductionTracingUnitDetailID+')">'+nQty+'</a>';
    return s;
}
    
function PickHistory(nGUProductionTracingUnitDetailID )
{
    if(parseInt(nGUProductionTracingUnitDetailID)<=0){alert("Sorry, There is No Qty.");return;}
    //if(parseInt($('#cboPLineNo').val())<=0){alert("Please Select Line No."); $('#cboPLineNo').focus(); return;}

    var oPTUTransection = {GUProductionTracingUnitDetailID:nGUProductionTracingUnitDetailID};
    
    $.ajax({
        type: "POST",
        dataType: "json",            
        url : _sBaseAddress+"/ProductionManagement/GetsPTUHistory",
        traditional: true,
        data:  JSON.stringify(oPTUTransection),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            //debugger;
            var oPTUTransections= jQuery.parseJSON(data);
            if(oPTUTransections.length>0)
            {                    
                if (oPTUTransections[0].ErrorMessage=="") 
                {
                    if(oPTUTransections.length>0)
                    {
                        var tblColums = [];
                        var oColumn = { field: "OperationDateInString", title: "Operation Date", width:150, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "LineNo", title: "Line No", width:120, align: "center" };tblColums.push(oColumn);
                        oColumn = { field: "Quantity", title: "Quantity", width:100, align:"right", formatter:formatPrice };tblColums.push(oColumn);
                        
                        var oPickerParam = {
                            winid: 'winHistoryPicker',
                            winclass:'clsHistoryPicker',
                            winwidth: 460,
                            winheight: 460,
                            tableid: 'tblHistoryPicker',
                            tablecolumns: tblColums,
                            datalist: oPTUTransections,
                            multiplereturn: false,
                            searchingbyfieldName:'OperationDateInString',
                            windowTittle: 'History List'
                        };
                        $.icsPicker(oPickerParam);
                        $("#btnOk").hide();
                    }  
                }    
                else
                {
                    alert(oPTUTransections[0].ErrorMessage);
                }                 
            } else
            {
                alert("Data Not Found.");
            }
        },
        error: function (xhr, status, error) 
        {
            alert(error);
        }
    });
}

function ValueFormat(val)
{
    return parseFloat(val).toFixed(2);
}

function RefreshSummary(nPreviousSequence)
{
     var oPTUs = $('#tblTodayColorSizeRatio').datagrid('getRows');
     var nQty=0; var nTotalTransectionQty=0; var nYetToQty=0; var nTodayQty=0; var nPreviousExecuteQty=0;
     for(var i=0; i<oPTUs.length; i++)
     {            
            nQty=nQty +parseInt(oPTUs[i].OrderQty); 
            nPreviousExecuteQty=nPreviousExecuteQty +parseInt(oPTUs[i].PreviousStepExecutionQty); 
            nTotalTransectionQty=nTotalTransectionQty + parseInt(oPTUs[i].ExecutionQty);
            nTodayQty=nTodayQty+parseInt(oPTUs[i].Quantity); 
            nYetToQty=nYetToQty+parseInt(oPTUs[i].YetToExecutionQty); 
     }
     var sHTML =  '<table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; color: #000000;">';
     sHTML=sHTML +'<tr>';
     if(parseInt(nPreviousSequence)>0)
     {
        sHTML=sHTML +'<td style="width: 340px; text-align: right;"> Gross Total: </td>';     
        sHTML=sHTML +'<td style="width: 103px; text-align: right;"> '+ValueFormat(nQty)+'  </td>';
        sHTML=sHTML +'<td style="width: 103px; text-align: right;"> '+ValueFormat(nPreviousExecuteQty)+'  </td>';
        sHTML=sHTML +'<td style="width: 103px; text-align: right;"> '+ValueFormat(nTotalTransectionQty)+' </td>';
        sHTML=sHTML +'<td style="width: 103px; text-align: right">  '+ValueFormat(nTodayQty)+'  </td>';
        sHTML=sHTML +'<td style="width: 103px; text-align: right">  '+ValueFormat(nYetToQty)+' </td>';
     }
     else
     {
        sHTML=sHTML +'<td style="width: 390px; text-align: right;"> Gross Total: </td>';     
        sHTML=sHTML +'<td style="width: 120px; text-align: right;"> '+ValueFormat(nQty)+'  </td>';
        sHTML=sHTML +'<td style="width: 120px; text-align: right;"> '+ValueFormat(nTotalTransectionQty)+' </td>';
        sHTML=sHTML +'<td style="width: 120px; text-align: right">  '+ValueFormat(nTodayQty)+'  </td>';
        sHTML=sHTML +'<td style="width: 120px; text-align: right">  '+ValueFormat(nYetToQty)+' </td>';
     }
     sHTML=sHTML +'</tr>';
     sHTML=sHTML +'</table>';
     document.getElementById("divSummery").innerHTML=sHTML;     
}
    


function GUProductionOrderPiker()
{
    debugger;
    
}

$('#txtRecapNo').keydown(function (e) {
    var code = (e.keyCode ? e.keyCode : e.which);
    if(code==13)//enter
    {
        if($.trim($('#txtRecapNo').val())==null)
        {
            alert("Please Type Recap No.");
            return;
        }
    
        var oGUProductionOrder = {OrderRecapNo:$.trim($('#txtRecapNo').val())};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oGUProductionOrder,
            ControllerName: "ProductionManagement", 
            ActionName: "GetGUProductionOrders",
            IsWinClose: false
        };
        var tblColums = []; var oColumn = { field: "StyleNo", title: "Style No", width: "100px", align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "GUProductionOrderNo", title: "Production Order", width: "110px", align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "OrderRecapNo", title: "Recap No", width: "100px", align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "BuyerName", title: "Buyer Name", width: "130px", align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ProductionFactoryName", title: "Production Factory", width: "130px", align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "FabricProductName", title: "Fabrication", width: "130px", align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "GarmentsProductName", title: "Product Name", width: "120px", align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ShipmentDateInString", title: "Shipment Date", width: "90px", align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "TotalQty", title: "Qty", width: "70px", align: "right" }; tblColums.push(oColumn);
        DynamicPiker('PickStyle',obj,tblColums,false,'StyleNo','GUProductionOrderID','PO List', 1070); //pickerName(unique),obj,table,multiReturn,SearchingField
    }else if (code == 8) //backspace=8
    {
        $("#txtRecapNo").val('');
        $("#txtRecapNo").removeClass("fontColorOfPickItem");
        $('#txtRecapNo').focus();
        $("#txtBuyerName").val('');
        $("#txtRecapNo").val( '');
        $("#txtGUProductionOrderNo").val('');
        $("#txtProductionUnitName").val('');
    }
});

function SetGUProductionOrder(oGUProductionOrder)
{
    //debugger;
    _oGUProductionOrder=oGUProductionOrder;
    if(_oGUProductionOrder!=null)
    {
        if(_oGUProductionOrder.GUProductionOrderID>0)
        {
            $("#txtBuyerName").val( _oGUProductionOrder.BuyerName);
            $("#txtRecapNo").val( _oGUProductionOrder.OrderRecapNo);
            $("#txtGUProductionOrderNo").val(_oGUProductionOrder.GUProductionOrderNo);
            $("#txtProductionUnitName").val(_oGUProductionOrder.ProductionUnitName);
            $.ajax({
                type: "POST",
                dataType: "json",            
                url : _sBaseAddress+"/ProductionManagement/GetProductionStep",
                traditional: true,
                data:  JSON.stringify(_oGUProductionOrder),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oGUProductionOrder= jQuery.parseJSON(data);
                    _oGUProductionProcedures = oGUProductionOrder.GUProductionProcedures;
                    var oGUProductionOrderDetails = oGUProductionOrder.GUProductionOrderDetails;
                    _oTechnicalSheetSizes = oGUProductionOrder.TechnicalSheetSizes;
                    if(_oGUProductionProcedures!=null)
                    {
                        if(_oGUProductionProcedures.length>0)
                        {
                            if (_oGUProductionProcedures[0].ErrorMessage=="") 
                            {                   
                                $("#cboProductionStep").icsLoadCombo({List: _oGUProductionProcedures,OptionValue: "ProductionStepID",DisplayText: "StepName",InitialValue:"--Select One--"});
                                $("#cboPLineNo").icsLoadCombo({List: oGUProductionOrder.PLineConfigures,OptionValue: "PLineConfigureID",DisplayText: "LineNo",InitialValue:"--Select One--"});
                                MakePTUTable(_oTechnicalSheetSizes);
                                $("#cboProductionStep").focus();
                            }
                            else 
                            {
                                alert(oProductionProcedures[0].ErrorMessage);
                            }
                        }                       
                    }                    
                },
                error: function (xhr, status, error) 
                {
                    alert(error);
                }
            });
        }
    }
}

function RefreshDetails(oProdcutionOrderDetails)
{
    data=oProdcutionOrderDetails;
    data={"total":""+data.length+"","rows":data};
    $('#tblGUProductionOrderDetail').datagrid('loadData',data);  
}

function PrintPreview()
{
    if( _oGUProductionOrder==null || parseInt(_oGUProductionOrder.GUProductionOrderID)<=0)
    {
        alert("Please Pick Production Order!");
        return;
    }
    window.open(_sBaseAddress + '/ProductionManagement/POPriview?nPOID='+_oGUProductionOrder.GUProductionOrderID);        
}

function RefreshList(oColorSizeRatios, nListfor)
{
    //debugger;  
    var tableId = 'tblTodayColorSizeRatio';
    if(parseInt(nListfor)==1)//privious
    {
        tableId = 'tblPriviousColorSizeRatio';
    }else if(parseInt(nListfor)==3)//Yet to
    {
        tableId = 'tblYetToColorSizeRatio';
    }

    var data=oColorSizeRatios;
    data={"total":""+data.length+"","rows":data};
    $('#'+tableId).datagrid('loadData',data);  
    //RefreshSummary();
}

function ViewDetails()
{
    //debugger;
    if(_oGUProductionTracingUnit==null || parseInt(_oGUProductionTracingUnit.ProductionStepID)<=0)
    {
        alert('Invalid Production Step!')
        return false;
    }    
    if(parseInt(_oGUProductionTracingUnit.GUProductionOrderID)<=0)
    {
        alert('Invalid Production Order!')
        return false;
    }    
    var oHistory= $('#tblHistory').datagrid('getSelected'); 
    if(oHistory==null )
    {
        alert("Please select a item from list!");
        return;
    }
    var oParameter = new Object();
    oParameter.Name="Date Wise "+_oGUProductionTracingUnit.StepName+" Details";  
    oParameter.OperationName = "View";
    var  sTemp =parseInt(_oGUProductionTracingUnit.ProductionStepID)+'~'+parseInt(_oGUProductionTracingUnit.GUProductionOrderID)+'~'+oHistory.ExecutionFactoryID+'~'+ oHistory.OperationDateInString;
    var tsv=((new Date()).getTime())/1000;
    var url =_sBaseAddress+  "/ProductionManagement/ViewDetalis?sTemp="+sTemp+"&ts="+tsv;
    oHistory = window.showModalDialog(url, oParameter, 'dialogHeight:350px; dialogWidth:700px; dialogLeft:400;dialogTop:150;center:yes;resizable:no;status:no;scroll:no');
}

function EditDetails()
{
    //debugger;
    if(_oGUProductionTracingUnit==null || parseInt(_oGUProductionTracingUnit.ProductionStepID)<=0)
    {
        alert('Invalid Production Step!')
        return false;
    }    
    if(parseInt(_oGUProductionTracingUnit.GUProductionOrderID)<=0)
    {
        alert('Invalid Production Order!')
        return false;
    }    
    var oHistory= $('#tblHistory').datagrid('getSelected'); 
    if(oHistory==null )
    {
        alert("Please select a item from list!");
        return;
    }
    var SelectedRowIndex=$('#tblHistory').datagrid('getRowIndex',oHistory);
    var oParameter = new Object();
    oParameter.Name="Date Wise "+_oGUProductionTracingUnit.StepName+" Details";  
    oParameter.OperationName = "Edit";
    var  sTemp =parseInt(_oGUProductionTracingUnit.ProductionStepID)+'~'+parseInt(_oGUProductionTracingUnit.GUProductionOrderID)+'~'+oHistory.ExecutionFactoryID+'~'+ oHistory.OperationDateInString;
    var tsv=((new Date()).getTime())/1000;
    var url =_sBaseAddress+  "/ProductionManagement/ViewDetalis?sTemp="+sTemp+"&ts="+tsv;
    oPTUTransaction = window.showModalDialog(url, oParameter, 'dialogHeight:350px; dialogWidth:700px; dialogLeft:400;dialogTop:150;center:yes;resizable:no;status:no;scroll:no');
    if(oPTUTransaction!=null)
    {
        if(parseFloat(oPTUTransaction.Quantity)>0)
        {               
            oHistory.Quantity  = oPTUTransaction.Quantity;
            $('#tblHistory').datagrid('updateRow',{index: SelectedRowIndex,	row: oHistory});
            LoadColor();
            
        }
        
    }

}

function RefreshHistoryList(oPTUTransactions)
{
    //debugger;  
    var data=oPTUTransactions;
    data={"total":""+data.length+"","rows":data};
    $('#tblHistory').datagrid('loadData',data);  

}


//Buyer Piker control

function DynamicContractorPicker(ContractorType,oTxtName,pName,pMultiReturn)
{
    debugger;
    var oTempName=""
    if (typeof oTxtName != 'undefined')
        oTempName=oTxtName;

    var oContractor = {
        Params: ContractorType+'~'+oTempName+'~'+sessionStorage.getItem('BUID')
    };
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oContractor,
        ControllerName: "Contractor",
        ActionName: "ContractorSearchByNameType",
        IsWinClose: false
    };

    var tblColums = [];
    var oColumn = { field: "Name", title: "Name", width: 180, align: "left" }; tblColums.push(oColumn);
    oColumn = { field: "Address", title: "Address", width: 160, align: "left" }; tblColums.push(oColumn);
    oColumn = { field: "Email", title: "Email", width: 100, align: "left" }; tblColums.push(oColumn);
    oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);

    DynamicPiker(pName,obj,tblColums,pMultiReturn,'Name','ContractorID','Contractor List',600); //pickerName(unique),obj,table,multiReturn,SearchingField
}
function DynamicPiker(pickerName,obj,pTblColums,pMultiReturn,pSearchField,pID,winTitle, nWidth)
{
    debugger;
    var owinTitle=""
    if (typeof winTitle != 'undefined')
        owinTitle=winTitle;
    else
        owinTitle=pickerName+' List';

    debugger;
    $.icsDataGets(obj, function (response) {
        debugger;
        if (response.status && response.objs.length > 0)
        {
            debugger;
            if (parseInt(response.objs[0][pID])> 0)
            {
                debugger;
                var tblColums = pTblColums;
                var oPickerParam = {
                    winid: 'win'+pickerName+'s',
                    winclass: 'cls'+pickerName,
                    winwidth:nWidth,
                    winheight:500,
                    tableid: 'tbl'+pickerName+'s',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: pMultiReturn,
                    searchingbyfieldName: pSearchField,
                    windowTittle: owinTitle
                };
                $.icsPicker(oPickerParam);
                if (pickerName == 'PTUHistory'){$('#btnOk').hide();}
                IntializePickerbutton(oPickerParam);
            }
            else { alert(response.objs[0].ErrorMessage); }
        }
        else{
            alert("Data Not Found.");
            return;
        }
    });
}
function IntializePickerbutton(oPickerobj) {
    //debugger;
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
        //debugger;
        //for Single Select
        SetPickerValueAssign(oPickerobj);
    });
    $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
        if (e.which == 13)//enter=13
        {
            SetPickerValueAssign(oPickerobj);
        }
    });
}
function SetPickerValueAssign(oPickerobj)
{
    //debugger;
    var oreturnObj = null, oreturnobjs = [];
    if (oPickerobj.multiplereturn)
    {
        oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
    }
    else
    {
        oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        if (oPickerobj.winid == 'winBuyerPikers')
        {
            SetBuyer(oreturnObj);
        }
        else if (oPickerobj.winid == 'winPickStyles')
        {
            SetGUProductionOrder(oreturnObj);
        }
        else if (oPickerobj.winid == 'winFactoryPikers')
        {
            SetExecuteFactory(oreturnObj);
        }
    }
    $("#" + oPickerobj.winid).icsWindow("close");
    $("#" + oPickerobj.winid).remove();
}



    
var editIndex = undefined;  
function endEditing(){  
        if (editIndex == undefined){return true}  
        if ($('#tblTodayColorSizeRatio').datagrid('validateRow', editIndex)){ 
            debugger;
            $('#tblTodayColorSizeRatio').datagrid('endEdit', editIndex); 
            $('#tblTodayColorSizeRatio').datagrid('selectRow',editIndex);
            var oColorSizeRatio=$('#tblTodayColorSizeRatio').datagrid('getSelected');
            if(oColorSizeRatio!=null)
            {
                //oGUProductionOrderDetail.ColorWiseTotal = parseInt(oGUProductionOrderDetail.OrderQty1)+parseInt(oGUProductionOrderDetail.OrderQty2)+parseInt(oGUProductionOrderDetail.OrderQty3)+parseInt(oGUProductionOrderDetail.OrderQty4)+parseInt(oGUProductionOrderDetail.OrderQty5)+parseInt(oGUProductionOrderDetail.OrderQty6)+parseInt(oGUProductionOrderDetail.OrderQty7)+parseInt(oGUProductionOrderDetail.OrderQty8)+parseInt(oGUProductionOrderDetail.OrderQty9)+parseInt(oGUProductionOrderDetail.OrderQty10)+parseInt(oGUProductionOrderDetail.OrderQty11)+parseInt(oGUProductionOrderDetail.OrderQty12)+parseInt(oGUProductionOrderDetail.OrderQty13)+parseInt(oGUProductionOrderDetail.OrderQty14)+parseInt(oGUProductionOrderDetail.OrderQty15)+parseInt(oGUProductionOrderDetail.OrderQty16)+parseInt(oGUProductionOrderDetail.OrderQty17)+parseInt(oGUProductionOrderDetail.OrderQty18)+parseInt(oGUProductionOrderDetail.OrderQty19)+parseInt(oGUProductionOrderDetail.OrderQty20);
                $('#tblTodayColorSizeRatio').datagrid('updateRow',{index: editIndex, row: oColorSizeRatio});
            }
          //  RefreshSummary(_oTechnicalSheetSizes);
            editIndex = undefined;  
            return true;  
        } else {  
            return false;  
    }  
}  

function onClickRow(index){
    if (editIndex != index){  
        if (endEditing()){
            $('#tblTodayColorSizeRatio').datagrid('selectRow', index).datagrid('beginEdit', index);  
            editIndex = index;  
        } else {  
            $('#tblTodayColorSizeRatio').datagrid('selectRow', editIndex);  
        }  
    }  
}  

function ResetControls()
{
    $('#cboProductionStep').empty();
    document.getElementById("txtRecapNo").value=  "";
    document.getElementById("txtGUProductionOrderNo").value=  "";
    document.getElementById("txtProductionUnitName").value= "";
    _oGUProductionTracingUnit=null;
}
function RefreshControlLayout(oAURolesMapping)
{    
    $("#btnCommit").hide();  
    if(PermissionChecker('ProductionExecution','GUProductionOrder',oAURolesMapping)){$("#btnCommit").show();}
}

 //picker code
function GUProductionOrderPiker()
{
    $("#winGUProductionOrder").data("TechnicalSheetIDs","");
    $("#winGUProductionOrder").data("BuyerIDs","");
    $('#txtSearchStyleNo,#txtBuyerName').val("");
    $('#txtStartShipementDate,#txtEndShipementDate').datebox('setValue', icsdateformat(new Date()));
    DynamicRefreshList([],'tblPickerGUProductionOrders');
    $("#winGUProductionOrder").icsWindow('open', "Pick Order Recap");
}

$('#btnPickerRefresh').click(function(e){
    debugger;
    var cboShipmentDate = document.getElementById("cboShipmentDate");
    var nShipmentDate=cboShipmentDate.options[cboShipmentDate.selectedIndex].index;
    if(($("#winGUProductionOrder").data("TechnicalSheetIDs")=="" || $("#winGUProductionOrder").data("TechnicalSheetIDs")==null)  && ($("#winGUProductionOrder").data("BuyerIDs")=="" || $("#winGUProductionOrder").data("BuyerIDs")==null) && parseInt(nShipmentDate)==0)
    {
        alert("Please Select  at Least One Searcing Criteria.");
        return;
    }
    var oOrderRecap = {BUID:sessionStorage.getItem('BUID'),ErrorMessage:$("#winGUProductionOrder").data("TechnicalSheetIDs")+'~'+$("#winGUProductionOrder").data("BuyerIDs")+'~'+parseInt(nShipmentDate)+'~'+$('#txtStartShipementDate').datebox('getValue')+'~'+$('#txtEndShipementDate').datebox('getValue')};
    $.ajax({
        type: "POST",
        dataType: "json",
        url : _sBaseAddress+  "/ProductionManagement/GetGUProductionOrdersForPicker",
        traditional: true,
        data:  JSON.stringify(oOrderRecap),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            oGUProductionOrders = jQuery.parseJSON(data);
            if (oGUProductionOrders.length >0 )
            {
                DynamicRefreshList(oGUProductionOrders,'tblPickerGUProductionOrders');
            }
            else {
                alert("Data Not Found");
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }
    });

});
$('#btnPickerOk').click(function(e){
    debugger;
    var oGUProductionOrder = $('#tblPickerGUProductionOrders').datagrid('getSelected');
    if(oGUProductionOrder==null||oGUProductionOrder.GUProductionOrderID<=0)
    {
        alert("Please Select a Item from List.");
        return;
    }
    $("#winGUProductionOrder").icsWindow('close');
    SetGUProductionOrder(oGUProductionOrder);
});
$('#btnPickerClose').click(function(e){
    $("#winGUProductionOrder").icsWindow('close');
});

$('#txtSearchStyleNo').keydown(function (e) {
    var code = (e.keyCode ? e.keyCode : e.which);
    if(code==13)//enter
    {
        if($.trim($('#txtSearchStyleNo').val())==null || $.trim($('#txtSearchStyleNo').val())=="")
        {
            alert("Type Style No.");
            return;
        }
        StylePiker();
    }else if (code == 8) //backspace=8
    {
        $("#txtSearchStyleNo").val('');
        $("#txtSearchStyleNo").removeClass("fontColorOfPickItem");
        $('#txtSearchStyleNo').focus();
        $("#winGUProductionOrder").data("TechnicalSheetIDs","");
    }
});
function StylePiker()
{
    var oTechnicalSheet = { BUID:sessionStorage.getItem('BUID'),StyleNo:$.trim($('#txtStyleNo').val())};
    var obj = {
        BaseAddress: sessionStorage.getItem('BaseAddress'),
        Object: oTechnicalSheet,
        ControllerName: "OrderRecap",
        ActionName: "StyleSearch",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {
        debugger;
        if (response.status && response.objs.length > 0) {
            if (response.objs[0].TechnicalSheetID > 0) {
                var tblColums = [];
                var oColumn = { field: "StyleNo", title: "Style No", width:200, align: "left" }; tblColums.push(oColumn);
                oColumn = { field: "BuyerName", title: "Buyer", width:150, align: "left" }; tblColums.push(oColumn);
                var oPickerParam = {
                    winid: 'winStyle',
                    winclass: 'clsStyle',
                    winwidth: 600,
                    winheight: 460,
                    tableid: 'tblStyle',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: true,
                    searchingbyfieldName: 'NameCode',
                    windowTittle: 'Style List'
                };
                $.icsPicker(oPickerParam);
                DynamicIntializePickerbutton(oPickerParam);
            }
            else {
                alert(response.objs[0].ErrorMessage);
            }

        } else{
            alert("Data Not Found.");
            return;
        }
    });
}

function BuyerPicker()
{
    var oContractor = {
        Params: '2' + '~' + $.trim($('#txtBuyerName').val())+'~'+sessionStorage.getItem('BUID')
    };

    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oContractor,
        ControllerName: "Contractor",
        ActionName: "ContractorSearchByNameType",
        IsWinClose: false
    };
    debugger;
    $.icsDataGets(obj, function (response) {
        debugger;
        if (response.status && response.objs.length > 0) {
            if (response.objs[0].ContractorID > 0) {
                var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                var oPickerParam = {
                    winid: 'winBuyer',
                    winclass: 'clsBuyer',
                    winwidth: 600,
                    winheight: 460,
                    tableid: 'tblBuyer',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: true,
                    searchingbyfieldName: 'Name',
                    windowTittle: 'Buyer List'
                };
                $.icsPicker(oPickerParam);
                DynamicIntializePickerbutton(oPickerParam);
            }
            else {
                alert(response.objs[0].ErrorMessage);
            }

        } else{
            alert("Data Not Found.");
            return;
        }
    });

}
$("#txtBuyerName").keydown(function (e) {
    debugger;
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13) // Enter Press
    {
        BuyerPicker();
    }
});

function DynamicIntializePickerbutton(oPickerobj) {
    debugger;
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
        debugger;
        //for Single Select
        DynamicSetPickerValueAssign(oPickerobj);
    });
    $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
        if (e.which == 13)//enter=13
        {
            DynamicSetPickerValueAssign(oPickerobj);
        }
    });
}
function DynamicSetPickerValueAssign(oPickerobj)
{

    var oreturnObj = null, oreturnobjs = [];
    if (oPickerobj.multiplereturn)
    {
        oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        if (oPickerobj.winid == 'winStyle') 
        {
            if (oreturnobjs != null && oreturnobjs.length> 0)
            {
                debugger;
                $('#txtSearchStyleNo').val(oreturnobjs.length+" Item's Selected");
                $("#winGUProductionOrder").data("TechnicalSheetIDs",ICS_PropertyConcatation(oreturnobjs,'TechnicalSheetID'));
            }
        }
        if (oPickerobj.winid == 'winBuyer') 
        {
            if (oreturnobjs != null && oreturnobjs.length> 0)
            {
                debugger;
                $('#txtSearchBuyerName').val(oreturnobjs.length+" Item's Selected");
                $("#winGUProductionOrder").data("BuyerIDs",ICS_PropertyConcatation(oreturnobjs,'ContractorID'));
            }
        }
    } 
    $("#" + oPickerobj.winid).icsWindow("close");
    $("#" + oPickerobj.winid).remove();
}

</script>
