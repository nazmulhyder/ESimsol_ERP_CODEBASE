@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "FN Treatment Process List";    
}
@model IEnumerable <ESimSol.BusinessObjects.FNQCParameter>

    <div ng-app="mainApp">
        <div ng-controller="mainController">
            <div class="col-md-12">
                <div class="form-inline" style="padding:4px">
                    <input type="text" class="form-control" ng-model="SearchName" ng-keyup="SearchByName($entity)"  placeholder="Search By Name"/>
                    <button type="button" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="Add($entity)"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add New</button>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Edit($entity)"> <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit</button>
                    <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="Delete()"> <span class="glyphicon glyphicon-minus" aria-hidden="true"></span> Delete</button>
                </div>
                <div ui-grid="gridOptions1" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
            </div>

        </div>
        <script type="text/ng-template" id="FNQCParameter.html">
            <div class="modal-header">
                <h4 class="modal-title" id="modal-title">QC Parameter</h4>
            </div>
            <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
                <div class="row">
                    <div class="row col-md-12">
                        <div class="col-md-5 text-right">
                            <label class="control-label">Code :</label>
                        </div>
                        <div class="col-md-7 text-left">
                            <input class="form-control" ng-model="FNQCParameter.Code" style="width:100%" />
                        </div>
                    </div>
                    <div class="row col-md-12">
                        <div class="col-md-5 text-right">
                            <label class="control-label">Name :</label>
                        </div>
                        <div class="col-md-7 text-left">
                            <input class="form-control" ng-model="FNQCParameter.Name" style="width:100%" />
                        </div>
                    </div>
                    <div class="row col-md-12">
                        <div class="col-md-5 text-right">
                            <label class="control-label">Qc Test Group :</label>
                        </div>
                        <div class="col-md-7 text-left">
                            <select ng-model="FNQCParameter.FnQCTestGroupID" class="form-control" ng-options="oItem.FnQCTestGroupID as oItem.Name for oItem in FnQCTestGroups">
                                <option value="">--Select One--</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-primary btn-sm" aria-label="Left Align" ng-click="Save()" ng-hide="hide"> <span class="glyphicon glyphicon-save" aria-hidden="true"></span> Save</button>
                <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
            </div>
        </script>
    </div>

    <style type="text/css">
        .form-control {
            height: 26px;
            padding: 0px 6px;
            font-size: 12px;
        }

        .ui-grid-top-panel .btn-sm, .input-group-addon {
            padding: 3px 3px;
        }

        .grid {
            height: 520px;
            width: 100%;
        }

        .custom-pagination {
            margin-top: -15px;
            margin-bottom: -15px;
        }

        .spacing {
            padding-bottom: 5px;
        }
    </style>

    <script type="text/javascript">
    var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oFNQCParameterList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oFNQCParameter =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FNQCParameter));
    var nLastCode =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LastCode));
        var oFnQCTestGroups =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FnQCTestGroups));
        console.log(oFnQCTestGroups);
        debugger;
        var  mainAppModule = angular.module('mainApp', ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.cellNav','ui.grid.resizeColumns','ms.service']);
        mainAppModule.controller('mainController', function ($scope, $http, $uibModal,$interval,$timeout,  $log, uiGridConstants, msModal, userSession) {
            $scope.FnQCTestGroups = oFnQCTestGroups;
            $scope.gridOptions1 ={
                enableFullRowSelection: true,
                multiSelect: false,
                enableColumnResizing: true,
                noUnselect : true,
                columnDefs: [
                    { field: 'Name', name: 'Name', width: '25%',  cellClass: 'text-left',enableCellEdit:false   },
                    { field: 'Code', name: 'Code', width: '15%',  cellClass: 'text-left',enableCellEdit:false   },
                    { field: 'FnQCTestGroupName', name: 'Group Name', width: '20%',  cellClass: 'text-left',enableCellEdit:false   },
                    { field: 'DBUserName', name: 'Added By', width: '20%',  cellClass: 'text-left',enableCellEdit:false   },
                    { field: 'LastUpdateByName', name: 'Last Updated By', width: '20%',  cellClass: 'text-left',enableCellEdit:false   },
                ],
                data:oFNQCParameterList,
                onRegisterApi:function(gridApi)
                {
                    $scope.gridApi = gridApi;
                }
            };
            $scope.Add = function(e)
            {
                sessionStorage.setItem("nIndex",-1);
                var modalInstance = $uibModal.open({
                    ariaLabelledBy: 'modal-title',
                    ariaDescribedBy: 'modal-body',
                    size: 'md',
                    templateUrl: 'FNQCParameter.html',
                    controller: 'FNQCParameterCtrl',
                    controllerAs: 'mainController',
                    resolve: {
                        obj: function () {
                            return { value: oFNQCParameter, Operation: 'New', cboFnQCTestGroups: $scope.FnQCTestGroups };
                        }
                    }
                });
                modalInstance.result.then(function (result) {
                    if(result.FNQCParameterID>0)
                    {
                        $scope.gridOptions1.data.push(result);
                    }

                }, function () {
                    $log.info('Modal dismissed at: ' + new Date());
                });
            }
            $scope.Edit = function(e)
            {
                debugger;
                var oData = $scope.gridApi.selection.getSelectedRows()[0];
                if(oData==null || oData.FNQCParameterID<=0)
                {
                    alert("Please Select an QC Parameter");
                    return;
                }
                var nIndex = $scope.gridOptions1.data.indexOf(oData);
                sessionStorage.setItem("nIndex",nIndex);
                var modalInstance = $uibModal.open({
                    ariaLabelledBy: 'modal-title',
                    ariaDescribedBy: 'modal-body',
                    size: 'md',
                    templateUrl: 'FNQCParameter.html',
                    controller: 'FNQCParameterCtrl',
                    controllerAs: 'mainController',
                    resolve: {
                        obj: function () {
                            return { value:oData, Operation: 'Edit', cboFnQCTestGroups: $scope.FnQCTestGroups};
                        }
                    }
                });
                modalInstance.result.then(function (result) {
                    debugger;
                    if(result.FNQCParameterID>0)
                    {
                        $scope.gridOptions1.data[nIndex]=result;
                    }
                    //$scope.gridOptions1.selection(nIndex, true);
                    //$scope.gridApi.selection.selectRow($scope.gridOptions1.data[nIndex]);
                    //$scope.RowSelect($scope.gridOptions1.data[nIndex]);
                    //alert(sessionStorage.getItem("nIndex"));

                }, function () {
                    $log.info('Modal dismissed at: ' + new Date());
                });
            }
            $scope.Delete = function () {
                debugger;
                var oFNTP=$scope.gridApi.selection.getSelectedRows()[0];
                if(oFNTP==null || oFNTP.FNTPID<=0)
                {
                    msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                var SelectedRowIndex=$scope.gridOptions1.data.indexOf(oFNTP);
                if (!confirm("Confirm to Delete?")) return ;
                $http.post(_sBaseAddress+ '/FNQCParameter/Delete',JSON.stringify(oFNTP)).then(
                                function (response) {
                                    var sMessage= jQuery.parseJSON(response.data).toLowerCase();
                                    debugger;
                                    if(sMessage=='deleted')
                                    {
                                        alert("Successfully Deleted.");
                                        $scope.gridOptions1.data.splice(SelectedRowIndex,1);
                                    }
                                    else{
                                        alert(sMessage);
                                        //msModal.Message({headerTitle : '', bodyText:result[0].ErrorMessage, sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                    }
                                },
                                function (response) {alert(jQuery.parseJSON(response.data));}
                            );

            };
            $scope.SearchByName = function () {
                debugger;
                if($scope.SearchName == "" || $scope.SearchName==undefined)
                {
                    alert("Please Enter Any Name");
                    return;
                }
                var oFNQCParameter = {Name:$scope.SearchName}
                $http.post(_sBaseAddress+ '/FNQCParameter/Search',JSON.stringify(oFNQCParameter)).then(
                                function (response) {
                                    debugger;
                                    var oDataList= jQuery.parseJSON(response.data);
                                    if(oDataList.length>0)
                                    {
                                        $scope.gridOptions1.data = oDataList;
                                    }
                                    else{
                                        alert(sMessage);
                                    }
                                },
                                function (response) {alert(jQuery.parseJSON(response.data));}
                            );
            };
        });
        mainAppModule.controller('FNQCParameterCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) {
            debugger;
            $scope.FNQCParameter = obj.value;
            //console.log(obj.cboFnQCTestGroups);
            $scope.FnQCTestGroups = obj.cboFnQCTestGroups;
            if($scope.FNQCParameter.FNQCParameterID==0)
            {
                $scope.FNQCParameter.Code = nLastCode+1;
            }
            $scope.Save = function ()
            {
                if(($scope.FNQCParameter.Code == "" || $scope.FNQCParameter.Code == undefined)) {
                    msModal.Message({headerTitle : '', bodyText:'Please Enter Code', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }
                if(!Number($scope.FNQCParameter.Code))
                {
                    alert("Please Enter Only Number In Code Field");
                    return;
                }
                if(($scope.FNQCParameter.Name == "" || $scope.FNQCParameter.Name == undefined)) {
                    msModal.Message({headerTitle : '', bodyText:'Please Enter Name', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }
                $http.post(_sBaseAddress+'/FNQCParameter/Save',JSON.stringify($scope.FNQCParameter)).then(
                    function (response) {
                        var result=jQuery.parseJSON(response.data);
                        if(result.FNQCParameterID>0)
                        {
                            debugger;
                            msModal.Message({headerTitle : '', bodyText:'Save Successful.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                            $scope.FNQCParameter=result;
                            nLastCode = result.Code;
                            $uibModalInstance.close($scope.FNQCParameter);
                        }
                        else
                        {
                            alert(result.ErrorMessage);
                        }
                    },
                    function (response) { alert((response.statusText));}
                );
            };
            $scope.cancel= function () {
                debugger;
                $uibModalInstance.close();
            };

        });
    </script>








