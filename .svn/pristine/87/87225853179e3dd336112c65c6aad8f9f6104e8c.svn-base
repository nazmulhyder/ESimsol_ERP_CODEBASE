<html>
<head>
    @{
        ViewBag.Title = "Production Order";
    }
</head>
<body>
    @model ESimSol.BusinessObjects.ProductionOrder
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div id="winChangeColor" class="easyui-window" title="Cahange Color Size" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <legend style="font-weight:bold">Update Info : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:125px; text-align:right">
                            Color :
                        </td>
                        <td style="width:250px">
                            <input type="text" style="width:190px;" id="txtChangeColorName" /><input type="button" id="btnChangColorPick" value="Pick" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <fieldset style="width:95%;height:8%; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:7%;text-align:right;">
                        <a id="btnAddUpdteInfo" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="UpdateInfo()">Update</a>
                        <a id="btnCloseUpdaeInfo" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseUpdateInfo()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>

    <div id="winContactPersonnel" class="easyui-window" title="Add Contact Personeel" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <legend style="font-weight:bold"> Contact Personnel Informations : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:125px; text-align:right">
                            Name :
                        </td>

                        <td style="width:200px">
                            <input type="text" style="width: 200px;" id="txtName" />
                        </td>
                        <td style="width:50px"> </td>
                        <td style="width:125px; text-align:right">
                            Address :
                        </td>
                        <td style="width:300px">
                            <input type="text" style="width: 300px;" id="txtAddress" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Phone :
                        </td>

                        <td style="width:200px">
                            <input type="text" style="width: 200px;" id="txtPhone" />
                        </td>
                        <td style="width:50px"> </td>
                        <td style="width:125px; text-align:right">
                            Email :
                        </td>
                        <td style="width:300px">
                            <input type="text" style="width: 300px;" id="txtEmail" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Note :
                        </td>
                        <td colspan="4">
                            <input type="text" style="width: 690px;" id="txtNote" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <fieldset style="width:97%;height:8%; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:7%;text-align:right;">
                        <a id="btnAddContactPersonnel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="AddContactPersonnel()">Save</a>
                        <a id="btnCloseContactPersonnel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseContactPersonnel()">Close</a>
                    </td>

                </tr>
            </table>
        </fieldset>
    </div>
    <div class="menuMainCollectionTable">
        <div class="easyui-panel" title="" style="font-family:Tahoma; text-align:center; height:89%;">
            <div id="tabProductionOrder" class="easyui-tabs" style="width:100%; height:497px;">
                <div style="width:100%;" title="Production Order">
                    <fieldset>
                        <legend style="font-weight:bold">Production Order info: </legend>
                        <table style="width:100%" cellpadding="1" cellspacing="1">
                            <tr>
                                <td style="width: 10%; text-align: right">
                                    PO No:
                                </td>
                                <td style="width: 25%; text-align: left">
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td style="width:30%">@Html.TextBoxFor(model => model.PONo, new { style = "width: 100%;", id = "txtPONo" })</td>
                                            <td style="width:30%; text-align:right;">Order Date:</td>
                                            <td style="width:40%"><input id="txtOrderDate" type="text" class="easyui-datebox"  style="width: 100%;" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width: 10%; text-align:right;">
                                    E.Delivery:
                                </td>
                                <td style="width:20%; text-align:left;">
                                    <input id="txtExpectedDeliveryDate" type="text" class="easyui-datebox" style="width: 100%;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                </td>
                                <td style="width:10%; text-align: right">
                                    PI No:
                                </td>
                                <td style="width: 25%; text-align: right">
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td style="width:89%;">@Html.TextBoxFor(model => model.ExportPINo, new { style = "width:100%;", id = "txtExportPINo", placeholder = "Type PI No and Press Enter" })</td>
                                            <td style="width:11%; text-align:right;"><a id="btnPickPI" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true"></a></td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>

                            <tr>
                                <td style="width: 10%; text-align: right">
                                    Buyer:
                                </td>
                                <td style="width:55%; text-align: left" colspan="3">
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td style="width:94%;">@Html.TextBoxFor(model => model.BuyerName, new { style = "width: 100%;", id = "txtBuyerName" })</td>
                                            <td style="width:6%; text-align:right;"><a id="btnPickBuyer" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true"></a></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:10%; text-align: right">
                                    Concern Person:
                                </td>
                                <td style="width: 25%; text-align: right">
                                    <select id="cboMktPerson" style="width: 100%"></select>
                                </td>
                            </tr>

                            <tr>
                                <td style="width: 10%; text-align: right">
                                    Customer:
                                </td>
                                <td style="width: 25%; text-align: left">
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td style="width:85%;">@Html.TextBoxFor(model => model.ContractorName, new { style = "width: 100%;", id = "txtContractorName" })</td>
                                            <td style="width:15%; text-align:right;"><a id="btnPickContractor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true"></a></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width: 10%; text-align: right">
                                    Contact Person:
                                </td>
                                <td style="width: 20%; text-align: left">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%;padding:0px;">
                                        <tr>
                                            <td style="width:88%;"><select id="cboContactorContactPerson" style="width:100%"></select></td>
                                            <td style="width:12%; text-align:right;"><a id="btnAddContactPerson" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddContactPerson(true)"></a></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:10%; text-align: right">
                                    Status:
                                </td>
                                <td style="width: 25%; text-align: right">
                                    @Html.TextBoxFor(model => model.ProductionOrderStatusInString, new { style = "width: 100%;", id = "txtProductionOrderStatusInString", disabled = "disabled" })
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 10%; text-align: right">
                                    Delivery To:
                                </td>
                                <td style="width: 25%; text-align: left">
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td style="width:85%">@Html.TextBoxFor(model => model.DeliveryToName, new { style = "width: 100%;", id = "txtDeliveryToName" })</td>
                                            <td style="width:15%; text-align:right;"><a id="btnPickDeliveryTo" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true"></a></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width: 10%; text-align: right">
                                    Delivery C. P.:
                                </td>
                                <td style="width: 20%; text-align: left">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:88%"><select id="cboDeliveryContactPerson" style="width:100%"></select></td>
                                            <td style="width:12%; text-align:right;"><a id="btnAddDeliveryContactPerson" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddContactPerson(false)"></a></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width: 10%; text-align: right">
                                    Note:
                                </td>
                                <td style="width: 25%; text-align: right">@Html.TextBoxFor(model => model.Note, new { style = "width:99%;", id = "txtNote" })</td>
                            </tr>
                        </table>
                    </fieldset>

                    <table id="tblProductionOrderDetail" title="Production Order Details" class="easyui-datagrid" style="height:300px; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="onClickRow: onClickRow">
                        <thead data-options="frozen:true">
                            <tr>
                                <th field="ProductCode" width="8%" align="left">Code</th>
                                <th field="ProductName" width="12%" align="left">Product</th>
                                <th field="SizeName" width="6%" align="left">Size</th>
                                <th field="ColorName" width="8%" align="left">Color</th>
                                <th field="ModelReferenceName" width="7%" align="left">Model Ref</th>
                                <th field="UnitSymbol" width="5%" align="left">Unit</th>
                                <th width="7%" align="right" data-options="field:'Qty',editor:{type:'numberbox',options:{precision:2}}">Qty</th>
                            </tr>
                        </thead>
                        <thead>
                            <tr>
                                <th width="15%" align="left" data-options="field:'ProductDescription',editor:{type:'text',options:{precision:0}}">Product Description</th>
                                <th width="12%" align="left" field="Measurement">Measurement</th>
                                <th width="15%" align="left" data-options="field:'StyleDescription',editor:{type:'text',options:{precision:0}}">Style Description</th>
                                <th width="10%" align="left" data-options="field:'BuyerRef',editor:{type:'text',options:{precision:0}}">Buyer Ref</th>
                                <th width="7%" align="right" data-options="field:'ColorQty',editor:{type:'numberbox',options:{precision:0}}">Color Qty</th>
                                <th width="5%" align="left" data-options="field:'Model',editor:{type:'text',options:{precision:0}}">Model</th>
                                <th width="5%" align="left" data-options="field:'PantonNo',editor:{type:'text',options:{precision:0}}">Panton No</th>
                                <th width="10%" align="left" data-options="field:'Note',editor:{type:'text',options:{precision:0}}">Remarks</th>
                            </tr>
                        </thead>
                    </table>
                    <div id="toolbar">
                        <a id="btnAddDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Pick Item</a>
                        <a id="btnRemoveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                        <a id="btnUpdateColor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Update Color</a>
                        <a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                    </div>
                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%;">
                        <tr>
                            <td style="width:37%;  text-align:right;font-weight:bold;">Total:</td>
                            <td style="width:10%;  text-align:right;font-weight:bold;"><label id="lblTotalQty">0</label> </td>
                            <td style="width:3%;  text-align:right;font-weight:bold;"> </td>
                            <td style="width:45%;  text-align:right;font-weight:bold;"> </td>
                        </tr>
                    </table>
                </div>
            
            </div>
        </div>

        <fieldset style="height:8%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:80%; text-align:right">
                        <label> <input type="checkbox" id="chkNewVersion" /> Create New Version?</label>
                    </td>
                    <td style="width:20%;text-align:right;">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Accept Revise</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" onclick="Close()" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">
    var _sBaseAddress = "";
    var _oProductionOrder=null;
    var _oMktPersons = [];
    var _nBUID = 0;
    var _oProduct = null;
    var _oColorCategory = null;
    var _oSizeCategory =  null;
    var _oCapitalResource = null;//Use as Mold
    var _lBackLink = "";
    var _nORSType = 0;
    var _sProductionOrderHeader = "";
    var _bIsBuyer= true;
    var _oColorCategoryForBreakDown = null;
    var _oSizeCategoryForBreakDown = null;
    var _oPOSizerBreakDowns=[];
    var _oDistinctColors = [];
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oProductionOrder =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oMktPersons = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.MktPersons));
        _oPOSizerBreakDowns=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.POSizerBreakDowns));

        _nBUID  = sessionStorage.getItem("BUID");
        _lBackLink = sessionStorage.getItem("BackLink");
        _nORSType = sessionStorage.getItem("ORSType");
        _sProductionOrderHeader = sessionStorage.getItem("ProductionOrderHeader");
        $('#txtSizeQty').icsCurrencyBox();
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
        $("#cboMktPerson").icsLoadCombo({List: _oMktPersons,OptionValue: "MarketingAccountID",DisplayText: "Name"});
        $('#txtOrderDate').datebox('setValue',_oProductionOrder.OrderDateInString);
        
        $('#txtExpectedDeliveryDate').datebox('setValue',_oProductionOrder.ExpectedDeliveryDateInString);
        $('#btnApprove').hide();
        //  sessionStorage.setItem("SizerProducts",[]);//reset
        if(parseInt(_oProductionOrder.ProductionOrderID)>0)
        {
            RefreshControl(_oProductionOrder);
            //  RefreshList(_oPOSizerBreakDowns);
        }
    });

    //Sizer Break Down Start
    function Add()
    {
        if(!ValidateInputForColorSizeEntry()) return;
        var oPOSizerBreakDown = {
            POSizerBreakDownID:0,
            ProductionOrderID:_oProductionOrder.ProductionOrderID,
            ProductID :$("#cboSizerProduct").val(),
            ColorID :_oColorCategoryForBreakDown.ColorCategoryID,
            Model: "",
            SizeID :_oSizeCategoryForBreakDown.SizeCategoryID,
            StyleNo : "",
            Quantity : icsRemoveComma($('#txtSizeQty').val()),
            ColorName :_oColorCategoryForBreakDown.ColorName,
            SizeName :_oSizeCategoryForBreakDown.SizeCategoryName,
            ProductName :$("#cboSizerProduct option:selected").text(),
            PantonNo:$("#txtPantonNo").val(),
            Remarks :""
        };
        $('#tblPOSizerBreakDown').datagrid('appendRow',oPOSizerBreakDown);
        SetSizerTotal();
        _oColorCategoryForBreakDown = null;_oSizeCategoryForBreakDown=null;
        $("#txtColorRange,#txtSizeRange,#txtPantonNo").val('');
        $("#txtColorRange,#txtSizeRange").removeClass("fontColorOfPickItem");
        $('#txtSizeQty').val(0);$("#cboSizerProduct").focus();
    }


    function RefreshList(oPOSizerBreakDowns)
    {
        data= oPOSizerBreakDowns;
        data={"total":""+data.length+"","rows":data};
        $('#tblPOSizerBreakDown').datagrid('loadData',data);
        SetSizerTotal();
    }
    function Delete()
    {

        var oPOSizerBreakDown= $('#tblPOSizerBreakDown').datagrid('getSelected');
        if(oPOSizerBreakDown==null)
        {
            alert("Please select a Item form List");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblPOSizerBreakDown').datagrid('getRowIndex',oPOSizerBreakDown);
        $('#tblPOSizerBreakDown').datagrid('deleteRow',SelectedRowIndex);
        SetSizerTotal();
    }
    //Color Range
    $("#txtColorRange").keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtColorRange').val()=="" || $('#txtColorRange').val()==null)
            {
                alert("Type Some Color Name");
                $('#txtColorRange').focus();
                return;
            }
            GetsColorRange($.trim($('#txtColorRange').val()));
        }else if (code == 8) //backspace=8
        {
            $("#txtColorRange").removeClass("fontColorOfPickItem");
            $("#txtColorRange").val('');
            _oSizeCategoryForBreakDown = null;

        }
    });
    $("#btnColorRange").click(function () {
        GetsColorRange("");
    });
    function GetsColorRange(sColorName)
    {
        var oColorCategory = {Param: sColorName };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oColorCategory,
            ControllerName: "ColorCategory",
            ActionName: "SearchColor",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ColorCategoryID > 0) {

                    var tblColums = []; var oColumn = { field: "ColorName", title: "Color Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winColorRange',
                        winclass: 'clsColorCategory',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblColorCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ColorName',
                        windowTittle: 'Color Category List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    //Size Range
    $("#txtSizeRange").keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtSizeRange').val()=="" || $('#txtSizeRange').val()==null)
            {
                alert("Type Size Name");
                $('#txtSizeRange').focus();
                return;
            }
            GetSizeRange($.trim($('#txtSizeRange').val()));

        }else if (code == 8) //backspace=8
        {
            $("#txtSizeRange").removeClass("fontColorOfPickItem");
            $("#txtSizeRange").val('');
            _oSizeCategoryForBreakDown = null;
        }
    });
    $("#btnSizeRange").click(function () {
        GetSizeRange("");
    });
    function GetSizeRange(sSizeName)
    {
        var oSizeCategory = {Param: sSizeName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oSizeCategory,
            ControllerName: "SizeCategory",
            ActionName: "SearchSize",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].SizeCategoryID > 0) {
                    var tblColums = []; var oColumn = { field: "SizeCategoryName", title: "Size Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSizeCategory',
                        winclass: 'clsSizeCategory',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblSizeCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'SizeCategoryName',
                        windowTittle: 'Size Category List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    function LoadSizerProducts()
    {

        var oSizerProducts=[];
        var sSizerProducts = sessionStorage.getItem("SizerProducts");
        if(sSizerProducts===null || sSizerProducts==="")
        {
            oSizerProducts=[];
        }
        else
        {
            oSizerProducts =JSON.parse(sSizerProducts);
        }
        $("#cboSizerProduct").icsLoadCombo({List: oSizerProducts,OptionValue: "ProductID",DisplayText:"ProductName"});
    }
    function ValidateInputForColorSizeEntry()
    {

        if(parseInt($("#cboSizerProduct").val())<=0)
        {
            alert("Please Select Sizer Product");
            $('#cboSizerProduct').focus();
            return false;
        }
        if(_oColorCategoryForBreakDown==null)
        {
            alert("Please Pick Color.");
            $('#txtColorRange').focus();
            return false;
        }
        if(_oSizeCategoryForBreakDown==null)
        {
            alert("Please Pick Size.");
            $('#txtSizeRange').focus();
            return false;
        }
        if(parseInt(icsRemoveComma($('#txtSizeQty').val()))<=0)
        {
            alert("Qty Should be greater than  0");
            $('#txtSizeQty').focus();
            return false;
        }
        //if($("#txtPantonNo").val()=="" || $("#txtPantonNo").val()==null)
        //{
        //    alert("Please Type Panton No.");
        //    $('#txtPantonNo').focus();
        //    return false;
        //}
        //var oPOSizerBreakDowns = $('#tblPOSizerBreakDown').datagrid('getRows');
        //if(oPOSizerBreakDowns.length>0)
        //{
        //    for(var i = 0;i<oPOSizerBreakDowns.length;i++)
        //    {
        //        if(parseInt($("#cboSizerProduct").val()) == parseInt(oPOSizerBreakDowns[i].ProductID) && parseInt(_oColorCategoryForBreakDown.ColorCategoryID) == parseInt(oPOSizerBreakDowns[i].ColorID) && parseInt(_oSizeCategoryForBreakDown.SizeCategoryID) == parseInt(oPOSizerBreakDowns[i].SizeID) )
        //        {
        //            alert("Product :"+oPOSizerBreakDowns[i].ProductName + " ,Color :"+_oColorCategoryForBreakDown.ColorName+" And Size : "+_oSizeCategoryForBreakDown.SizeCategoryName+" Is Already Exist. ");
        //            return false;
        //        }
        //    }
        //}
        return true;
    }
    function SetSizerTotal()
    {

        var oPOSizerBreakDowns = $('#tblPOSizerBreakDown').datagrid('getRows');
        var nTotalQty = 0;
        for(var i = 0;i<oPOSizerBreakDowns.length;i++)
        {
            nTotalQty+=parseInt(oPOSizerBreakDowns[i].Quantity);
            nTotalQty = parseInt(nTotalQty);
        }
        $("#lblTotalSizeQty").html(nTotalQty);
    }

    var editIndexSizer = undefined;
    function endEditingSizer(){
        if (editIndexSizer == undefined){return true}
        if ($('#tblPOSizerBreakDown').datagrid('validateRow', editIndexSizer))
        {
            $('#tblPOSizerBreakDown').datagrid('endEdit', editIndexSizer);
            $('#tblPOSizerBreakDown').datagrid('selectRow',editIndexSizer);
            var oPOSizerBreakDown=$('#tblPOSizerBreakDown').datagrid('getSelected');
            $('#tblPOSizerBreakDown').datagrid('updateRow',{index: editIndexSizer,	row: oPOSizerBreakDown});
            SetSizerTotal();

            editIndexSizer = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRowSizer(index){
        if (editIndexSizer != index){
            if (endEditingSizer())
            {
                $('#tblPOSizerBreakDown').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndexSizer = index;
            }
            else
            {
                $('#tblPOSizerBreakDown').datagrid('selectRow', editIndexSizer);
            }
        }
    }

    //Sizer Break Down End

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }

    $('.ChangeCurrency').change(function(){
        if(parseInt($('#cboCurrency').val())!=0)
        {
            $('#lblCurrencySymbol').html($('#cboCurrency option:selected').text());
        }
    });


    function RefreshControl(oProductionOrder){


        $("#txtContractorName,#txtDeliveryToName,#txtBuyerName,#txtExportPINo").addClass("fontColorOfPickItem");
        GetContactPerson(oProductionOrder.ContractorID,true);
        GetContactPerson(oProductionOrder.DeliveryTo,false);
        $('#cboMktPerson').val(oProductionOrder.MKTEmpID);
        RefreshDetailList(oProductionOrder.ProductionOrderDetails);
        SetTotal();
        if(_sProductionOrderHeader=="View Production Order")
        {
            $('#btnSave,#btnAddDetail,#btnRemoveDetail,#btnUpdateColor').hide();
            $("#btnPickContractor,#btnPickDeliveryTo").prop('disabled', true);
        }
        if(_sProductionOrderHeader=="Approved Production Order" || _sProductionOrderHeader == "Director Approved Production Order")
        {
            $('#btnSave,#btnAddDetail,#btnRemoveDetail').hide();
            $('#btnApprove').show();
        }
      
    }

    function RefreshDetailList(oOrderDetailList)
    {
        var data=oOrderDetailList;
        data={"total":""+data.length+"","rows":data};
        $('#tblProductionOrderDetail').datagrid('loadData',data);
    }

    function Validation(){

        if(_oProductionOrder.ExportSCID ==0 ||  $('#txtExportPINo').val()=="" || $('#txtExportPINo').val()==null)
        {
            $('#txtExportPINo').focus();
            $('#txtExportPINo').addClass("errorFieldBorder");
            alert('Please Pick PI.');
            return false;
        }else{
            $('#txtExportPINo').removeClass("errorFieldBorder");
        }

        if(parseInt(_oProductionOrder.BuyerID)<=0){
            $('#txtBuyerName').focus();
            $('#txtBuyerName').addClass("errorFieldBorder");
            alert('Please Pick Buyer.');
            return false;
        }
        else{
            $('#txtBuyerName').removeClass("errorFieldBorder");
        }
        if(parseInt(_oProductionOrder.ContractorID)<=0){
            $('#txtContractorName').focus();
            $('#txtContractorName').addClass("errorFieldBorder");
            alert('Please Pick Customer.');
            return false;
        }
        else{
            $('#txtContractorName').removeClass("errorFieldBorder");
        }

        if(parseInt($('#cboContactorContactPerson').val())<=0){
            $('#cboContactorContactPerson').focus();
            $('#cboContactorContactPerson').addClass("errorFieldBorder");
            alert('Select Buyer Contact Person.');
            return false;
        }
        else{
            $('#cboContactorContactPerson').removeClass("errorFieldBorder");
        }

        if($('#cboMktPerson').val()<=0){
            $('#cboMktPerson').focus();
            $('#cboMktPerson').addClass("errorFieldBorder");
            alert('Select Market Person.');
            return false;
        }
        else{
            $('#cboMktPerson').removeClass("errorFieldBorder");
        }
        if(parseInt(_oProductionOrder.DeliveryTo)<=0){
            $('#txtDeliveryToName').focus();
            $('#txtDeliveryToName').addClass("errorFieldBorder");
            alert('Please Pick Delivery To.');
            return false;
        }
        else{
            $('#txtDeliveryToName').removeClass("errorFieldBorder");
        }

        if(parseInt($('#cboDeliveryContactPerson').val())<=0){
            $('#cboDeliveryContactPerson').focus();
            $('#cboDeliveryContactPerson').addClass("errorFieldBorder");
            alert('Select Delivery To Contact Person.');
            return false;
        }
        else{
            $('#cboDeliveryContactPerson').removeClass("errorFieldBorder");
        }

        return true;
    }

    function RefreshObject()
    {
        var oProductionOrder={
            ProductionOrderID: (_oProductionOrder!=null && _oProductionOrder.ProductionOrderID>0)? _oProductionOrder.ProductionOrderID:0,
            PONo:$.trim($('#txtPONo').val()),
            OrderDate:$('#txtOrderDate').datebox('getValue'),
            ExpectedDeliveryDate:$('#txtExpectedDeliveryDate').datebox('getValue'),
            BUID:_nBUID,
            ProductionOrderStatusInInt:1,
            BuyerID:_oProductionOrder.BuyerID,
            ContractorID:_oProductionOrder.ContractorID,
            ContactPersonnelID:$('#cboContactorContactPerson').val(),
            ExportSCID:_oProductionOrder.ExportSCID,
            Note:$('#txtNote').val(),
            MKTEmpID:$('#cboMktPerson').val(),
            DeliveryTo:_oProductionOrder.DeliveryTo,
            DeliveryContactPerson:$('#cboDeliveryContactPerson').val(),
            ProductNature:sessionStorage.getItem("ProductNature"),
            ProductionOrderDetails:$('#tblProductionOrderDetail').datagrid('getRows'),
            IsNewVersion : $("#chkNewVersion").is(':checked')
            //POSizerBreakDowns:$('#tblPOSizerBreakDown').datagrid('getRows')
        };
        return oProductionOrder;
    }

    $("#btnSave").click(function (){

        endEditing();
        endEditingSizer();
        if(!Validation()) return false;
        var oProductionOrder=RefreshObject();
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/ProductionOrder/AcceptRevise",
            traditional: true,
            data:  JSON.stringify(oProductionOrder),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oProductionOrder = jQuery.parseJSON(data);
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (oProductionOrder.ErrorMessage==null || oProductionOrder.ErrorMessage=="")
                {
                    alert("Data Saved successfully");
                    var oProductionOrders = sessionStorage.getItem("ProductionOrders");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oProductionOrders != null) {
                        oProductionOrders = jQuery.parseJSON(oProductionOrders);
                    }
                    else {
                        oProductionOrders = [];
                    }
                    if (nIndex != -1) {
                        oProductionOrders[nIndex] = oProductionOrder;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oProductionOrders.length);
                        oProductionOrders.push(oProductionOrder);
                    }
                    sessionStorage.setItem("ProductionOrders", JSON.stringify(oProductionOrders));
                    window.location.href = _lBackLink;
                }
                else {
                    alert(oProductionOrder.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $("#btnApprove").click(function (){

        if(!Validation()) return false;
        if (!confirm("Confirm to Approve?")) return false;
        var oProductionOrder=RefreshObject();
        if(_sProductionOrderHeader =="Director Approved Production Order")
        {
            oProductionOrder.ActionTypeExtra = "Dir_App";
            oProductionOrder.ProductionOrderStatusInInt = 4;//
        }else{
            oProductionOrder.ActionTypeExtra = "Approve";
            oProductionOrder.ProductionOrderStatusInInt = 2;//
        }

        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/ProductionOrder/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oProductionOrder),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oProductionOrder = jQuery.parseJSON(data);
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (oProductionOrder.ErrorMessage==null || oProductionOrder.ErrorMessage=="")
                {
                    if(_sProductionOrderHeader =="Director Approved Production Order")
                    {
                        alert("Director Approved successfully");
                    }else{
                        alert("Approved successfully");
                    }
                    var oProductionOrders = sessionStorage.getItem("ProductionOrders");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oProductionOrders != null) {
                        oProductionOrders = jQuery.parseJSON(oProductionOrders);
                    }
                    else {
                        oProductionOrders = [];
                    }
                    if (nIndex != -1) {
                        oProductionOrders[nIndex] = oProductionOrder;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oProductionOrders.length);
                        oProductionOrders.push(oProductionOrder);
                    }
                    sessionStorage.setItem("ProductionOrders", JSON.stringify(oProductionOrders));
                    window.location.href = _lBackLink;
                }
                else {
                    alert(oProductionOrder.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    ///Buyer Pick
    $("#txtBuyerName").keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oContractor = { Params: 6 + '~' + $('#txtBuyerName').val()+'~'+_nBUID };//here 6 is Mother Buyer
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {

                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {

                        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winBuyers',
                            winclass: 'clsBuyer',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblBuyers',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Buyer List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Found.");
                    return;
                }
            });
        }
    });
    $("#btnPickBuyer").click(function () {
        var oContractor = { Params: "6~~"+_nBUID };//here 6 Is Contractor
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {

            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBuyers',
                        winclass: 'clsBuyer',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblBuyers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Buyer List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });

    });
    $('#txtBuyerName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtBuyerName").removeClass("fontColorOfPickItem");
            _oProductionOrder.BuyerID = 0;

        }
    });
    //Delivery to pick

    ///Contractor Pick
    $("#txtContractorName").keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oContractor = { Params: 2 + '~' + $('#txtContractorName').val()+'~'+_nBUID };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {

                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {

                        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winContractors',
                            winclass: 'clsContractor',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblContractors',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Contractor List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Found.");
                    return;
                }
            });
        }
    });
    $("#btnPickContractor").click(function () {
        var oContractor = { Params: "2~~"+_nBUID };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {

            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winContractors',
                        winclass: 'clsContractor',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblContractors',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Buyer List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });

    });
    $('#txtContractorName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtContractorName").removeClass("fontColorOfPickItem");
            _oProductionOrder.ContractorID = 0;
            GetBuyerContactPerson(0);
        }
    });
    //Delivery to pick

    $("#txtDeliveryToName").keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oContractor = { Params: '2,3~' + $('#txtDeliveryToName').val()+'~'+_nBUID };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {

                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {

                        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winDeliveryTos',
                            winclass: 'clsDeliveryTo',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblDeliveryTos',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Delivery To List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Found.");
                }
            });
        }
    });
    $("#btnPickDeliveryTo").click(function () {
        var oContractor = { Params: "2,3~"+'~'+_nBUID };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {

            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winDeliveryTos',
                        winclass: 'clsDeliveryTo',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblDeliveryTos',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Buyer List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });

    });
    $('#txtDeliveryToName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtDeliveryToName").removeClass("fontColorOfPickItem");
            _oProductionOrder.DeliveryToID = 0;
            GetContactPerson(0,false);
        }
    });

    //ExportPI Pick

    $("#btnPickPI").click(function () {
        GetPIs();
    });
    $('#txtExportPINo').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if(code==13)//Press Enter
        {
            if($.trim($('#txtExportPINo').val())==null || $.trim($('#txtExportPINo').val())=="")
            {
                alert("Type PI No And Press Enter.");
                return;
            }
            GetPIs();
        }else if (code == 8) //backspace=8
        {
            //Reset all data
            $('#txtContractorName,#txtExportPINo,#txtBuyerName,#txtDeliveryToName').removeClass('fontColorOfPickItem');
            _oProductionOrder.ExportSCID = 0;
            _oProductionOrder.BuyerID = 0;
            _oProductionOrder.ContractorID = 0;
            _oProductionOrder.ContactPersonnelID = 0;
            _oProductionOrder.MKTEmpID = 0;
            $('#cboMktPerson').val(0);
            _oProductionOrder.DeliveryTo = 0;
            GetContactPerson(0,false);
            GetContactPerson(0,true);
            RefreshDetailList([]);
            RefreshList([]);
            //sessionStorage.setItem("SizerProducts",JSON.stringify([]));//reset
            //LoadSizerProducts();
        }
    });

    function GetPIs()
    {
        //txtExportPINo
        var oExportSC = { BUID: _nBUID,ProductNature:sessionStorage.getItem("ProductNature"),PINo:$.trim($('#txtExportPINo').val())};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oExportSC,
            ControllerName: "ProductionOrder",
            ActionName: "SearchByExportSCBUWise",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ExportSCID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "PINo", title: "PI No", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "YetToProductionOrderQty", title: "Qty", width: 100, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winExportSCPicker',
                        winclass: 'clsExportSCPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblExportSCPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'PINo',
                        windowTittle: 'ExportPI List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }

    $("#btnRefreshDetail").click(function (){
        endEditing();
    });

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winContractors')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                $('#txtContractorName').val(oreturnObj.Name);
                $('#txtContractorName').addClass('fontColorOfPickItem');
                _oProductionOrder.ContractorID = oreturnObj.ContractorID;
                GetContactPerson(_oProductionOrder.ContractorID,true);
                $('#txtContractorName').focus();
            }
        }else  if (oPickerobj.winid == 'winBuyers')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                $('#txtBuyerName').val(oreturnObj.Name);
                $('#txtBuyerName').addClass('fontColorOfPickItem');
                _oProductionOrder.BuyerID = oreturnObj.ContractorID;
                $('#txtBuyerName').focus();
            }
        }
        else if (oPickerobj.winid == 'winDeliveryTos')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                $('#txtDeliveryToName').val(oreturnObj.Name);
                $('#txtDeliveryToName').addClass('fontColorOfPickItem');
                _oProductionOrder.DeliveryTo = oreturnObj.ContractorID;
                GetContactPerson(_oProductionOrder.DeliveryTo,false);
                $('#txtDeliveryToName').focus();
            }
        }else if (oPickerobj.winid=='winChangeColorCategory')
        {
            if (oreturnObj != null && oreturnObj.ColorCategoryID > 0)
            {
                $('#txtChangeColorName').val(oreturnObj.ColorName);
                $('#txtChangeColorName').addClass('fontColorOfPickItem');
                sessionStorage.setItem('ColorID',oreturnObj.ColorCategoryID);
                sessionStorage.setItem('ColorName',oreturnObj.ColorName);
                $('#txtChangeColorName').focus();
            }
        }
        else if (oPickerobj.winid == 'winExportSCPicker')
        {
            if (oreturnObj != null && oreturnObj.ExportSCID > 0)
            {
                debugger;
                $('#txtExportPINo').val(oreturnObj.PINo);
                $('#txtBuyerName').val(oreturnObj.MotherBuyerName);
                $('#txtContractorName').val(oreturnObj.ContractorName);
                $('#txtDeliveryToName').val(oreturnObj.DeliveryToName);

                _oProductionOrder.ExportSCID = oreturnObj.ExportSCID;
                _oProductionOrder.BuyerID = oreturnObj.MotherBuyerID;
                _oProductionOrder.ContractorID = oreturnObj.ContractorID;
                _oProductionOrder.ContactPersonnelID = oreturnObj.ContractorContactPerson;
                _oProductionOrder.MKTEmpID = oreturnObj.MKTEmpID;
                $('#cboMktPerson').val(_oProductionOrder.MKTEmpID);
                _oProductionOrder.DeliveryTo = oreturnObj.DeliveryToID;
                GetContactPerson(_oProductionOrder.DeliveryTo,false);
                GetContactPerson(_oProductionOrder.ContractorID,true);
                //LoadProductionOrderdetails(_oProductionOrder.ExportSCID);//get details for export PI
                GetSizerBreakDowns(oreturnObj.ExportPIID);
                $('#txtContractorName,#txtExportPINo,#txtBuyerName,#txtDeliveryToName').addClass('fontColorOfPickItem');
                $('#txtExportPINo').focus();
            }
        }else if(oPickerobj.winid =='winExportSCDetailPicker')
        {

            if (oreturnobjs.length>0 && parseInt(oreturnobjs[0].ExportSCDetailID)> 0)
            {
                debugger;
                var oPriviousPODetails = $('#tblProductionOrderDetail').datagrid('getRows');
                for(var i = 0;i<oreturnobjs.length;i++)
                {
                    if(!ICS_IsExist(oPriviousPODetails,'ExportSCDetailID', oreturnobjs[i].ExportSCDetailID))
                    {

                        var oProductionOrderDetail= {
                            ProductionOrderDetailID : 0,
                            //ProductionOrderDetailID : GetPODetailID(oreturnobjs[i],oPriviousPODetails),
                            ProductionOrderID: _oProductionOrder.ProductionOrderID,
                            ExportSCDetailID:oreturnobjs[i].ExportSCDetailID,
                            ProductID: oreturnobjs[i].ProductID,
                            IsApplySizer:oreturnobjs[i].IsApplySizer,
                            ColorID: oreturnobjs[i].ColorID,
                            SizeID: oreturnobjs[i].SizeID,
                            StyleDescription :oreturnobjs[i].StyleNo,
                            Measurement  :oreturnobjs[i].Measurement,
                            PolyMUnitID:oreturnobjs[i].PolyMUnitID,
                            Qty :oreturnobjs[i].Qty,
                            BuyerRef:oreturnobjs[i].BuyerReference,
                            ColorQty:oreturnobjs[i].ColorQty,
                            ModelReferenceID :oreturnobjs[i].ModelReferenceID,
                            UnitID:oreturnobjs[i].MUnitID,
                            UnitSymbol:oreturnobjs[i].MUName,
                            ProductCode :oreturnobjs[i].ProductCode,
                            ProductName :oreturnobjs[i].ProductName,
                            ModelReferenceName : oreturnobjs[i].ModelReferenceName,
                            ProductDescription:oreturnobjs[i].ProductDescription,
                            ColorName :oreturnobjs[i].ColorName,
                            SizeName :oreturnobjs[i].SizeName,
                            Model:'',
                            PantonNo:''
                        };
                        $('#tblProductionOrderDetail').datagrid('appendRow',oProductionOrderDetail);
                        SetTotal();
                      
                    }
                }
            }
        }else if(oPickerobj.winid=="winColorRange")
        {
            if (oreturnObj!= null && oreturnObj.ColorCategoryID> 0)
            {
                _oColorCategoryForBreakDown = oreturnObj;
                $('#txtColorRange').val(_oColorCategoryForBreakDown.ColorName);
                $('#txtColorRange').addClass('fontColorOfPickItem');
            }
        }else if(oPickerobj.winid=="winSizeCategory")
        {

            if (oreturnObj!= null && oreturnObj.SizeCategoryID> 0)
            {
                _oSizeCategoryForBreakDown = oreturnObj;
                $('#txtSizeRange').val(_oSizeCategoryForBreakDown.SizeCategoryName);
                $('#txtSizeRange').addClass('fontColorOfPickItem');
            }
        }
    }


    function GetPODetailID(oExportSCDetail,oProductionOrderDetails)
    {
        var  nLength = oProductionOrderDetails.length;
        for(var i = 0;i<nLength;i++)
        {
            if(parseInt(oExportSCDetail.ProductID)==parseInt(oProductionOrderDetails[i].ProductID) && parseInt(oExportSCDetail.ColorID)==parseInt(oProductionOrderDetails[i].ColorID))
            {
                return oProductionOrderDetails[i].ProductionOrderDetailID;
            }
        }
        return 0;
    }

    function GetContactPerson(nContractorID, bIsBuyer) {

        var oContractor = {ContractorID:nContractorID};
        $.ajax
           ({
               type: "POST",
               dataType: "json",
               url: _sBaseAddress + "/Contractor/GetContactPersonnels",
               traditional: true,
               data:  JSON.stringify(oContractor),
               contentType: "application/json; charset=utf-8",
               success: function (data) {
                   var _oContactPersonnels = jQuery.parseJSON(data);
                   if (_oContactPersonnels != null)
                   {
                       if(bIsBuyer)
                       {
                           $("#cboContactorContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                           $('#cboContactorContactPerson').val(_oProductionOrder.ContactPersonnelID);
                       }else{
                           $("#cboDeliveryContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                           $('#cboDeliveryContactPerson').val(_oProductionOrder.DeliveryContactPerson);
                       }

                   }
                   else {
                       if(bIsBuyer)
                       {
                           $("#cboContactorContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                       }else{
                           $("#cboDeliveryContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                       }
                   }
               },
               error: function (xhr, status, error) {
                   alert(error);
               }

           });

    }
    function LoadProductionOrderdetails(nExportSCID)
    {
        var oExportSCDetail={
            ExportSCID : nExportSCID
        };
        $.ajax ({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/ProductionOrder/GetProductionOrderDetails",
            data:  JSON.stringify(oExportSCDetail),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var  oProductionOrderDetails = jQuery.parseJSON(data);
                if (oProductionOrderDetails.length>0 && (oProductionOrderDetails[0].ErrorMessage==null || oProductionOrderDetails[0].ErrorMessage==""))
                {
                    if(oProductionOrderDetails.length>0)
                    {
                        RefreshDetailList(oProductionOrderDetails);
                        SetTotal();
                        var nLength = oProductionOrderDetails.length;
                        //var oSizerProducts = [];
                        //for(var i=0;i<nLength;i++)
                        //{
                        //    if(oProductionOrderDetails[i].IsApplySizer)
                        //    {
                        //        var oProduct = {
                        //            ProductID:oProductionOrderDetails[i].ProductID,
                        //            ProductName:oProductionOrderDetails[i].ProductName
                        //        };
                        //        oSizerProducts.push(oProduct);
                        //    }
                        //}
                        //sessionStorage.setItem("SizerProducts",JSON.stringify(oSizerProducts));
                        //LoadSizerProducts();
                    }
                }else{
                    RefreshDetailList([]);
                    SetTotal();
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function GetSizerBreakDowns(nExportPIID)
    {
        var oExportPI = {ExportPIID:nExportPIID};
        $.ajax
           ({
               type: "POST",
               dataType: "json",
               url: _sBaseAddress + "/ExportPI/GetSizerBreakDowns",
               traditional: true,
               data:  JSON.stringify(oExportPI),
               contentType: "application/json; charset=utf-8",
               success: function (data) {

                   var oPOSizerBreakDowns = jQuery.parseJSON(data);
                   if (oPOSizerBreakDowns.length>0)
                   {
                       _oPOSizerBreakDowns = oPOSizerBreakDowns;
                       RefreshList(oPOSizerBreakDowns);
                   }
                   else {

                   }
               },
               error: function (xhr, status, error) {
                   alert(error);
               }

           });
    }

    function ResetDetail(){
        _oProduct = null;_oColorCategory = null;_oSizeCategory = null;_oCapitalResource = null;
        $('#txtQty,#txtRate').val('');
        $('#txtProductName,#txtColorName,#txtSizeName,#txtMoldName,#txtMeasurement,#txtStyleDescription,#txtBuyerRef').removeClass("fontColorOfPickItem");
        $('#txtProductName,#txtColorName,#txtSizeName,#txtMoldName,#txtMeasurement,#txtStyleDescription,#txtBuyerRef').val("");
        var oUnits = [];
        $("#cboUnit").icsLoadCombo({List: oUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
        $('#txtProductName').focus();
    }


    $("#btnAddDetail").click(function () {

        if(parseInt(_oProductionOrder.ExportSCID)<=0){alert("Please Select PI.");return;}
        var oExportSC = { ExportSCID: _oProductionOrder.ExportSCID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oExportSC,
            ControllerName: "ProductionOrder",
            ActionName: "GetExportSCDetails",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ExportSCDetailID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Product", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ColorName", title: "Color", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "MUName", title: "Unit", width: 50, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "YetToProductionOrderQty", title: "Qty", width: 100, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winExportSCDetailPicker',
                        winclass: 'clsExportSCDetailPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblExportSCDetailPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'ProductName',
                        windowTittle: 'Export PI Detail List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });


    });

    function SetTotal()
    {

        var oProductionOrderDetails = $('#tblProductionOrderDetail').datagrid('getRows');
        var nTotalQty = 0;
        for(var i = 0;i<oProductionOrderDetails.length;i++)
        {
            nTotalQty+=parseInt(oProductionOrderDetails[i].Qty);
            nTotalQty = parseInt(nTotalQty);
        }
        $("#lblTotalQty").html(nTotalQty);
    }

    $('#btnClose').click(function(e){
        window.location.href = _lBackLink;
    });

    $("#btnRemoveDetail").click(function () {

        var oProductionOrderDetail = $("#tblProductionOrderDetail").datagrid("getSelected");
        if (oProductionOrderDetail == null || parseInt(oProductionOrderDetail.ProductID)<= 0) { alert("Please select an item from list!"); return false; }
        if (!confirm("Confirm to Delete?")) return false;
        var SelectedRowIndex=$('#tblProductionOrderDetail').datagrid('getRowIndex',oProductionOrderDetail);
        if(oProductionOrderDetail.IsApplySizer)
        {

            var oPOSizerBreakDowns = $('#tblPOSizerBreakDown').datagrid('getRows');
            var oTempPOSizerBreakDowns = [];var nLength = oPOSizerBreakDowns.length;
            for(var i =0;i<nLength;i++)
            {
                if(parseInt(oPOSizerBreakDowns[i].ProductID)!= parseInt(oProductionOrderDetail.ProductID))
                {
                    oTempPOSizerBreakDowns.push(oPOSizerBreakDowns[i]);
                }
            }
            RefreshList(oTempPOSizerBreakDowns);
            nLength = _oDistinctColors.length;
            var oTempColors = [];
            for(var i =0;i<nLength;i++)
            {
                if(parseInt(_oDistinctColors[i].ObjectID)!= parseInt(oProductionOrderDetail.ProductID))
                {
                    oTempColors.push(_oDistinctColors[i]);
                }
            }
            _oDistinctColors = oTempColors;
            //var oSizerProducts = JSON.parse(sessionStorage.getItem("SizerProducts"));
            //oSizerProducts = ICS_POP(oSizerProducts, 'ProductID', oProductionOrderDetail.ProductID);//List, PropertyName, Propertyvalue
            //sessionStorage.setItem("SizerProducts",JSON.stringify(oSizerProducts));
            //LoadSizerProducts();
        }
        alert("Data Delete Successfully.");
        $('#tblProductionOrderDetail').datagrid('deleteRow',SelectedRowIndex);
        endEditing();
    });

    var editIndex = undefined;
    function endEditing(){

        if (editIndex == undefined){return true}
        if ($('#tblProductionOrderDetail').datagrid('validateRow', editIndex)){
            $('#tblProductionOrderDetail').datagrid('endEdit', editIndex);
            $('#tblProductionOrderDetail').datagrid('selectRow',editIndex);
            var oProductionOrderDetail=$('#tblProductionOrderDetail').datagrid('getSelected');
            if(oProductionOrderDetail!=null)
            {
                $('#tblProductionOrderDetail').datagrid('updateRow',{index: editIndex,	row: oProductionOrderDetail});
            }
            SetTotal();
            editIndex = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRow(index){
        if (editIndex != index){
            if (endEditing())
            {
                $('#tblProductionOrderDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else
            {
                $('#tblProductionOrderDetail').datagrid('selectRow', editIndex);
            }
        }
    }


    //update color
    $('#btnUpdateColor').click(function(e)
    {
        var oProductionOrderDetail = $("#tblProductionOrderDetail").datagrid("getSelected");
        if (oProductionOrderDetail == null || parseInt(oProductionOrderDetail.ProductID) <= 0) { alert("Please select an item from list!"); return false; }
        $("#winChangeColor input").not("input[type='button']").val("");
        $('#txtChangeColorName').val(oProductionOrderDetail.ColorName);
        $('#txtChangeColorName').addClass('fontColorOfPickItem');
        sessionStorage.setItem('ColorID',oProductionOrderDetail.ColorID);
        sessionStorage.setItem('ColorName',oProductionOrderDetail.ColorName);
        $("#winChangeColor").icsWindow('open', "Update Info");
    });
    function UpdateInfo()
    {
        var oProductionOrderDetail = $("#tblProductionOrderDetail").datagrid("getSelected");
        var SelectedRowIndex=$('#tblProductionOrderDetail').datagrid('getRowIndex',oProductionOrderDetail);
        if(parseInt(sessionStorage.getItem('ColorID'))<=0)
        {
            alert("Please Select Color.");
            return;
        }
        oProductionOrderDetail.ColorID = sessionStorage.getItem('ColorID');
        oProductionOrderDetail.ColorName = sessionStorage.getItem('ColorName');
        $('#tblProductionOrderDetail').datagrid('updateRow',{index: SelectedRowIndex,	row: oProductionOrderDetail});
        alert("Data Saved Succesfully");
        $("#winChangeColor").icsWindow('close');
    }
    $("#txtChangeColorName").keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtChangeColorName').val()==null || $('#txtChangeColorName').val()=="")
            {
                alert("Please Type Color Name and Press Enter.");
                $('#txtChangeColorName').focus();
                return;
            }
            ChangeColorSearch($.trim($('#txtChangeColorName').val()));
        }
    });
    $("#btnChangColorPick").click(function ()
    {
        ChangeColorSearch("");
    });
    function ChangeColorSearch(sColorName)
    {
        var oColorCategory = {Param:sColorName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oColorCategory,
            ControllerName:"ColorCategory",
            ActionName: "SearchColor",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ColorCategoryID > 0) {

                    var tblColums = []; var oColumn = { field: "ColorName", title: "Color Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winChangeColorCategory',
                        winclass: 'clsChangeColorCategory',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblColorCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ColorName',
                        windowTittle: 'Color Category List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    $('#txtChangeColorName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtChangeColorName").removeClass("fontColorOfPickItem");
            sessionStorage.setItem('ColorID',0);
            sessionStorage.setItem('ColorName','');
        }
    });
    function CloseUpdateInfo()
    {
        $("#winChangeColor").icsWindow('close');
    }



    //Contact Person
    function AddContactPerson(bIsBuyer) {
        _bIsBuyer = bIsBuyer;
        if(bIsBuyer)
        {
            if (parseInt(_oProductionOrder.ContractorID) <= 0)
            {
                alert("Please select Buyer!");
                $('#txtContractorName').focus();
                return;
            }
        }else{
            if (parseInt(_oProductionOrder.DeliveryTo) <= 0)
            {
                alert("Please select Delivery To!");
                $('#txtDeliveryToName').focus();
                return;
            }
        }
        $("#winContactPersonnel").icsWindow('open', "Add Contact Person");
        $("#winContactPersonnel input").not("input[type='button']").val("");
    }

    function ValidateInputContactPersonnel()
    {
        if(document.getElementById("txtName").value==null || document.getElementById("txtName").value=="")
        {
            alert("Please enter name!");
            $('#txtName').focus();
            return false;
        }

        if(document.getElementById("txtPhone").value==null || document.getElementById("txtPhone").value=="")
        {
            alert("Please enter phone number!");
            $('#txtPhone').focus();
            return false;
        }
        return true;
    }

    function RefreshObjectCP()
    {

        var oContactPersonnel= {
            ContactPersonnelID : 0,
            ContractorID : (_bIsBuyer==true)? _oProductionOrder.ContractorID:_oProductionOrder.DeliveryTo,
            Name : $("#txtName").val(),
            Address : $("#txtAddress").val(),
            Phone :$("#txtPhone").val(),
            Email : $("#txtEmail").val(),
            Note : $("#txtNote").val()
        };
        return oContactPersonnel;
    }

    function AddContactPersonnel()
    {

        if(!ValidateInputContactPersonnel()) return;
        var oContactPersonnel=RefreshObjectCP();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/Contractor/SaveContactPersonnel",
            traditional: true,
            data:  JSON.stringify(oContactPersonnel),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oContactPersonnel = jQuery.parseJSON(data);
                if(parseInt(_oContactPersonnel.ContactPersonnelID)>0)
                {
                    alert("Data Saved sucessfully");
                    document.getElementById("txtName").value="";
                    document.getElementById("txtAddress").value="";
                    document.getElementById("txtPhone").value="";
                    document.getElementById("txtEmail").value="";
                    document.getElementById("txtNote").value="";
                    $("#winContactPersonnel").icsWindow('close');
                    if(_bIsBuyer)
                    {
                        GetContactPerson(_oProductionOrder.ContractorID,true);//load Buyer Contact peron
                    }else
                    {
                        GetContactPerson(_oProductionOrder.DeliveryTo,false);//load Delivery contactperson
                    }
                }
                else {
                    alert(_oContactPersonnel.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function CloseContactPersonnel()
    {
        $("#winContactPersonnel").icsWindow('close');
    }



</script>