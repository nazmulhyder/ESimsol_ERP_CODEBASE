@model IEnumerable<ESimSol.BusinessObjects.TransferPromotionIncrement>
@{
    ViewBag.Title = "Transfer Promotion Increment";
}

<script src="~/Scripts/bootstrap-multiselect.js"></script>
<link href="~/Content/CSS/bootstrap-multiselect.css" rel="stylesheet"/>
<div class="menuMainCollectionTable">
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>

    <div title="Increment By Percent List" style="padding:2px; font-size:12px; font-style:normal;height:90%;">
        <table id="tblTPIs" class="easyui-datagrid" style="width:100%;height:535px" fitcolumns="false" onscroll="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbar_Collection">
            <thead>
                <tr>
                    <th data-options="field:'Selected',checkbox:true"></th>
                    <th field="EmployeeCode" width="110" align="left">Code</th>
                    <th field="EmployeeName" width="150" align="left">Name</th>
                    <th field="GrossSalary" width="200" align="left">Previous Gross</th>
                    <th field="BasicAmount" width="200" align="left">Previous Basic</th>
                    <th field="TPIGrossSalary" width="200" align="left">Incremented Gross</th>
                    <th field="TPIBasicAmount" width="200" align="left">Incremented Basic</th>
                </tr>
            </thead>
        </table>
        @*<table style="width:100%">
            <tr style="width:100%">
                <td style="width:90%"></td>
                <td style="width:10%;text-align:right;">
                    <a id="btnSaveManualAttendance" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                </td>
            </tr>
        </table>*@
        <div id="toolbar_Collection" style="height:auto;">
            <div style="width:100%">

                <input id="txtEmployee_Collection" style="width:11.3%;" type="text" placeholder="Type Code & Enter" />
                <input id="btnEmployee" type="button" value="P" />
                <input id="btnCEmployee" type="button" value="C" />

                <input id="txtBusinessUnit_Collection" type="text" style="width:12%;" placeholder="Pick Business Unit" />
                <a id="btnBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                <a id="btnResetBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

                <input id="txtLocation_Colection" style="width:12%;" placeholder="Pick Location" type="text" />
                <a id="btnLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                <a id="btnResetLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

                <select id="cboSalaryHead" style="width:150px;"></select>
                &nbsp;&nbsp; Month : <input id="cboMonths" class="easyui-combobox" data-options=" valueField: 'id',textField: 'text',multiple:true" />
                &nbsp;&nbsp; Year : <input id="cboYears" class="easyui-combobox" data-options=" valueField: 'id',textField: 'text',multiple:true" />
                <a id="btnViewIncrement" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="View Increment">Search</a>
                <input id="txtPercent" type="text" style="width:150px;" placeholder="Percent" class="number" />
                <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="View Increment">Refresh</a>
                <a id="btnExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" onclick="Excel()">Excel</a>
                <a id="btnSaveManualAttendance" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Process</a>
            </div>
        </div>
    </div>

<div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Present Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Permanent Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            BU :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboBU" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    @*<tr>
                            <td class="td-AdvSearch-Level">
                                Block :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEmployeeBlockAdv" class="txtfield-picker txtReset" type="text" />
                                <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                                <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                            </td>
                        </tr>*@
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" style="width:130px; float:left;" class="selection-search cboReset"></select>
                            &nbsp; Group:
                            <input id="txtEmployeeGroupAdv" style="width:90px;" type="text" />
                            <input id="btnEmployeeGroupPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                            <input id="btnEmployeeGroupResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Category:
                        </td>
                        <td class="td-AdvSearch-Level">
                            <div>
                                <select id="cboCategory" style="width:130px; float:left;"></select>
                                &nbsp; Gender :
                                <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch" style="width:130px; float:left;" class="selection-search cboReset"></select>

                            &nbsp; Block:
                            <input id="txtEmployeeBlockAdv" style="width:90px;" type="text" />
                            <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                            <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 75px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                            <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

<div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="font-family:Tahoma">
        <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
            <ul id="locationtree" data-options="checkbox:true" singleselect="false"></ul>
        </div>

        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:400px; text-align:right"></td>

                    <td style="width:50px">
                        <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</div>

<div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="font-family:Tahoma">
        <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
            <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
        </div>

        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:400px; text-align:right"></td>

                    <td style="width:50px">
                        <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</div>

<div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="font-family:Tahoma">
        <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
            <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
        </div>
        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:400px; text-align:right"></td>

                    <td style="width:50px">
                        <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</div>

</div>
<style type="text/css">
    .lblStar {
        color: #ff0000;
        font-weight: bold;
    }

    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>

<script type="text/javascript">
    var _oTPIs=null;
    var _sBaseAddress="";
    var _sTPIHeader="";

    var _nLastEmployeeID = 0;
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _oBusinessUnits=[];

    var _sAttendanceSchemeID="";
    var _sLocationID = "";
    var _sDepartmentIds = "";
    var _sDesignationIds = "";
    var _sEmployeeIDs="";
    var _sBMMIDs="";
    var _sBusinessUnitIds="";

    var _oSalaryStructureDetails=[];
    var _sFeedBack="";
    var _nEmployeeSearchType=0;
    var _oMonths=[];
    var _oYears=[];


    var _sGroupNames="";
    var _sGroupIDs="";
    var _sBlockNames="";
    var _sBlockIDs="";
    

    var _sGroupNamesAdv="";
    var _sGroupIDsAdv="";
    var _sBlockNamesAdv="";
    var _sBlockIDsAdv="";

    var _oSalaryHeads = [];

    $(document).ready(function ()
    {
        debugger;
        _oTPIs =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));

        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oMonths= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Months));
        _oYears= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Years));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _sFeedBack=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FeedBack));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        _oSalaryHeads=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.SalaryHeads));
        
        $("#cboSalaryMonth_Collection").icsLoadCombo({
            List:_oMonths,
            OptionValue: "Value",
            DisplayText: "Text",
            InitialValue:"Month"
        });
        $("#cboSalaryMonth_CollectionTo").icsLoadCombo({
            List:_oMonths,
            OptionValue: "Value",
            DisplayText: "Text",
            InitialValue:"Month"
        });

        $("#cboSalaryHead").icsLoadCombo({
            List:  _oSalaryHeads,
            OptionValue: "SalaryHeadID",
            DisplayText: "Name",
        });
        DynamicRefreshList(_oMonths, "tblMonth");
        LoadYearList();
        LoadYear();
        LoadYearTo();
        $('#dtDate').datebox('setValue',icsdateformat(new Date()));
        $('#dtJoiningDate').datebox('setValue',icsdateformat(new Date()));

        $("#cboSalaryHead").val(1);
        $('#cboSalaryHead').prop('disabled',true);
        debugger;

        InitializeAdvSearch();
        LoadCateGory(oEmployeeCategorys);
        
        var oMonths = LoadMonths();
        $('#cboMonths').combobox('loadData',oMonths);

        var oYears = LoadYears();
        $('#cboYears').combobox('loadData',oYears);
    
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
    });
    function updateProgress()
    {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 5);
            $('#progressbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds)
    {
        $("#progressbarParent").hide();
    }
    function Excel() {
        var sEmployeeIDs = _sEmployeeIDs;
        var nSalaryHeadID = $('#cboSalaryHead').val();
        
        var nPercent = 0;
        nPercent = parseInt($('#txtPercent').val());
        if(isNaN(nPercent)) {
            nPercent = 0;
        }

        $('#tblTPIs').datagrid('showColumn', 'TPIGrossSalary');
        $('#tblTPIs').datagrid('showColumn', 'TPIBasicAmount');

        var sMonthIDs = "";
        var oMonthIDs = $('#cboMonths').combobox('getValues');
        if(oMonthIDs.length > 0){
            for(var i= 0;i<oMonthIDs.length;i++){
                if(oMonthIDs[i] != "" && oMonthIDs[i] != null){
                    sMonthIDs += oMonthIDs[i] + ",";
                }
            }
            if(sMonthIDs.length > 0)
                sMonthIDs = sMonthIDs.substring(0,sMonthIDs.length-1);
        }
        
        var sYearIDs = "";
        var oYearIDs = $('#cboYears').combobox('getValues');
        if(oYearIDs.length > 0){
            for(var i= 0;i<oYearIDs.length;i++){
                if(oYearIDs[i] != "" && oYearIDs[i] != null){
                    sYearIDs += oYearIDs[i] + ",";
                }
            }
            if(sYearIDs.length > 0)
                sYearIDs = sYearIDs.substring(0,sYearIDs.length-1);
        }
        debugger;
        var sParam = sEmployeeIDs + "~" + nSalaryHeadID + "~" + nPercent + "~" + sMonthIDs + "~" + sYearIDs + "~" + _sBusinessUnitIds + "~" + _sLocationID;
        window.open(_sBaseAddress+ "/TransferPromotionIncrement/ExcelIncrementByPercent?sParam=" + sParam);
    }

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
        $('#txtEmployeeGroupAdv').val("");
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDsAdv = "";
        _sGroupIDsAdv = "";
    }
    $("#btnEmployee").click(function () {

        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $("#btnEmployeePickerOk").click(function () {
        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length<=0) { alert("please select atleast one item");return; }
        var sEmpIDs="";
        var sEmpNames="";
        for(var i=0;i<oEmployees.length;i++)
        {
            sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
            sEmpNames=sEmpNames+oEmployees[i].Name+",";
        }
        _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
        sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
        $("#txtEmployee_Collection").val(sEmpNames);
        $("#winEmployeePicker").icsWindow('close');
    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });


    $('#txtEmployee_Collection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee_Collection").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
            SearchEmployeeByText(sCodeName);
        }
    });

    function SearchEmployeeByText(sEmpNameCode){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _sEmployeeIDs=oreturnObj.EmployeeID;
                    $("#txtEmployee_Collection").val(oreturnObj.Name);
                    $("#winEmployeePicker").icsWindow('close');
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        _sEmployeeIDs=oreturnObj.EmployeeID;
                        $("#txtEmployee_Collection").val(oreturnObj.Name);
                        $("#winEmployeePicker").icsWindow('close');
                    }
                }
            }
        });
    }

    function LoadMonths()
    {
        debugger;
        //_oStyleTypes = jQuery.parseJSON(_oStyleTypes);
        var oMonths = [];
        for(var i = 0;i<_oMonths.length;i++)
        {
            var oMonth = {id:''+_oMonths[i].Value, text:''+_oMonths[i].Text};
            oMonths.push(oMonth);
        }
        return oMonths;
    }
    function LoadYears()
    {
        debugger;
        //_oStyleTypes = jQuery.parseJSON(_oStyleTypes);
        var oYears = [];
        for(var i = 0;i<_oYears.length;i++)
        {
            var oYear = {id:''+_oYears[i], text:''+_oYears[i]};
            oYears.push(oYear);
        }
        return oYears;
    }

    function LoadYear()
    {
        var oDate=new Date();
        oDate.setFullYear(2014);
        var sYear="";
        sYear +="<option value='0'>"+'Year'+"</option>";
        for(var i=0; i<=15; i++)
        {
            sYear += "<option value='" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"'>" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"</option>";
        }
        $('#cboYear').html(sYear);
        var oDate=new Date();
        $("#cboSalaryMonth_Collection").val(oDate.getMonth()+1);
        $("#cboYear").val(oDate.getFullYear());

    }
    function LoadYearTo()
    {
        var oDate=new Date();
        oDate.setFullYear(2014);
        var sYear="";
        sYear +="<option value='0'>"+'Year'+"</option>";
        for(var i=0; i<=15; i++)
        {
            sYear += "<option value='" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"'>" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"</option>";
        }
        $('#cboYearTo').html(sYear);
        var oDate=new Date();
        $("#cboSalaryMonth_CollectionTo").val(oDate.getMonth()+1);
        $("#cboYearTo").val(oDate.getFullYear());

    }

    function LoadYearList() {
        var years=[];
        for(var i = 1990; i <=2025; i++) {
            var obj = {
                Year:i
            };
            years.push(obj);
        }
        DynamicRefreshList(years, "tblYear");
    }
    function LoadCateGory(oEmployeeCategorys)
    {
        $("#cboCategory").icsLoadCombo({
            List: oEmployeeCategorys,
            OptionValue: "Value",
            DisplayText: "Text"
        });
    }

    $('#txtsearchByName').keypress(function (e) {

        debugger;
        var oTPIs = $('#tblTPIs').datagrid('getRows');
        var sName=document.getElementById("txtsearchByName").value;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            debugger;
            //var c = String.fromCharCode(e.which);
            var txtSearchByName = document.getElementById('txtsearchByName').value.toUpperCase();
            if (txtSearchByName  == "")
            {
                alert("Please enter name or code!");
                return;
            }
            // txtSearchByName = txtSearchByName + c;

            var bFlag=false;
            var sTempName="";
            var sTempCode = "";
            var rows = $('#tblTPIs').datagrid('getRows');
            for(i=0;i<rows.length;++i)
            {
                if((rows[i]['EmployeeName']).toUpperCase().indexOf(txtSearchByName)>=0 || (rows[i]['EmployeeCode']).toUpperCase().indexOf(txtSearchByName)>=0 )
                {
                    bFlag=true;
                    break;
                }
            }
            if(bFlag)
            {
                $('#tblTPIs').datagrid('selectRow', i);
            }
            else
            {
                GetByName(sName);
            }
        }
        $('#txtsearchByName').focus();
    });

    $('#btnNew').click(function (e)
    {
        var oTPIs= $('#tblTPIs').datagrid('getRows');
        sessionStorage.setItem("TPIs", JSON.stringify(oTPIs));
        sessionStorage.setItem("SelectedRowIndex", -1);
        sessionStorage.setItem("TPIHeader", "New Transfer Promotion & Increment");
        window.location.href = _sBaseAddress+ "/TransferPromotionIncrement/View_TPI?sid=0&sMsg=N/A";
    });

    $('#btnEdit').click(function (e)
    {
        var oTPI = $('#tblTPIs').datagrid('getSelected');
        if (oTPI == null || oTPI.TPIID <= 0)
        {
            alert("Please select an item from list!");
            return;
        }
        if(oTPI.RecommendedBy>0)
        {
            alert(" Recommended Item Can Not Be Edited !");
            return;
        }
        var SelectedRowIndex = $('#tblTPIs').datagrid('getRowIndex', oTPI);
        var oTPIs= $('#tblTPIs').datagrid('getRows');
        sessionStorage.setItem("TPIs", JSON.stringify(oTPIs));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("TPIHeader", "Edit Transfer Promotion & Increment");
        window.location.href = _sBaseAddress+ "/TransferPromotionIncrement/View_TPI?sid="+oTPI.EncryptTPIID+"&sMsg=N/A";
    });

    $('#btnPreview').click(function (e)
    {
        var oTPI = $('#tblTPIs').datagrid('getSelected');
        if (oTPI == null || oTPI.TPIID <= 0)
        {
            alert("Please select an item from list!");
            return;
        }
        var SelectedRowIndex = $('#tblTPIs').datagrid('getRowIndex', oTPI);
        var oTPIs= $('#tblTPIs').datagrid('getRows');
        sessionStorage.setItem("TPIs", JSON.stringify(oTPIs));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("TPIHeader", "View Transfer Promotion & Increment");
        window.location.href = _sBaseAddress+ "/TransferPromotionIncrement/View_TPI?sid="+oTPI.EncryptTPIID+"&sMsg=N/A";

    });

    $('#btnDelete').click(function (e)
    {
        var oTPI = $('#tblTPIs').datagrid('getSelected');
        if (oTPI == null || oTPI.TPIID <= 0)
        {
            alert("Please select an item from the list!");
            return ;
        }
        if(oTPI.RecommendedBy>0)
        {
            alert(" Recommended Item Can Not Be Deleted !");
            return;
        }
        if (!confirm("Confirm to Delete?")) return;
        var SelectedRowIndex = $('#tblTPIs').datagrid('getRowIndex', oTPI);
        var tsv = ((new Date()).getTime()) / 1000;
        if (oTPI.TPIID > 0)
        {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/TransferPromotionIncrement/TransferPromotionIncrement_Delete",
                data: { nId: oTPI.TPIID,ts: tsv},
                contentType: "application/json; charset=utf-8",
                success: function(data)
                {
                    var feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "")
                    {
                        alert("Delete sucessfully");
                        $('#tblTPIs').datagrid('deleteRow', SelectedRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },

            });
        }
    });

    function GetByName(sName)
    {
        debugger;
        oTPI={EmployeeName:sName};
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/TransferPromotionIncrement/SearchByName",
            traditional: true,
            data: JSON.stringify(oTPI),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                var oTPIs=[];
                oTPIs = jQuery.parseJSON(data);
                if (oTPIs.length>0 && oTPIs[0].ErrorMessage=="")
                {
                    for(var i = 0; i < oTPIs.length; i++){
                        $("#tblTPIs").datagrid("appendRow", oTPIs[i]);
                    }
                    //DynamicRefreshList(oTPIs, "tblTPIs");
                }
                else
                {
                    alert(oTPIs[0].ErrorMessage);
                    oTPIs=[];
                    DynamicRefreshList(oTPIs, "tblTPIs");
                }
            },
        });
    }

    $('#txtsearchByName').click(function (e)
    {
        document.getElementById("txtsearchByName").value="";
        $('#txtsearchByName').focus();
    });

    /*---------------- emp Search Start click----------------*/

    function InitializeAdvSearch(){
        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                    {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                    {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
    }

    $("#btnEmployee").click(function () {
        EmployeePickerReset();
        _nEmployeeSearchType=1;
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $("#btnEmployeePick").click(function () {
        //EmployeePickerReset();
        _nEmployeeSearchType=2;
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            $("#lblRange1").show();
        }
        else
        {
            $("#lblRange1").hide();
        }
    });


    function SampleFormatDownload() {
        window.open(_sBaseAddress+ "/TransferPromotionIncrement/DownloadFormat");
    }

    function SampleFormatDownloadIncrement() {
        window.open(_sBaseAddress+ "/TransferPromotionIncrement/DownloadFormatIncrement");
    }
    function SampleFormatDownloadIncAsPerScheme() {
        window.open(_sBaseAddress+ "/TransferPromotionIncrement/SampleFormatDownloadIncAsPerScheme");
    }


    $('#btnEmpPickerSearch').click(function () {
        debugger;
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }
        debugger
        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }

        var nBusinessUnitID = $("#cboBU").val();
        var nCategory=$('#cboCategory').val();
        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();

        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
           nEmployeeTypeID==0 && sGender=="None" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
           bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0
          && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBlockIDsAdv=="" && _sGroupIDsAdv=="")
        {
            alert("Please enter your selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                     sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                     bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                     sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                      +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBlockIDsAdv+"~"+_sGroupIDsAdv;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }


    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    /*-------------Start Business Unit Picker----------------*/
    $("#btnBusinessUnitPicker_Collection").click(function(e){
        debugger;
        BusinessUnitPicker();
    });

    $("#txtBusinessUnit_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            debugger;
            BusinessUnitPicker();
        }
    });

    $("#btnBusinessUnitPicker_CollectionAdv").click(function(e){
        debugger;
        BusinessUnitPicker();
    });

    $("#txtBusinessUnit_CollectionAdv").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            debugger;
            BusinessUnitPicker();
        }
    });

    function BusinessUnitPicker()
    {
        debugger;
        var oBusinessUnit={
            BusinessUnitID:0
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBusinessUnit,
            ControllerName: "BusinessUnit",
            ActionName: "GetsBusinessUnitWithPermission",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                debugger;
                if (response.objs[0].BusinessUnitID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBusinessUnit',
                        winclass:'clsBusinessUnit',
                        winwidth: 320,
                        winheight: 400,
                        tableid: 'tblBusinessUnit',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Business Unit List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBusinessUnitPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBusinessUnits=[];
            oBusinessUnits = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBusinessUnit')
            {
                if(oBusinessUnits!=null && oBusinessUnits.length>0)
                {
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sBusinessUnitName = "";
                    for(var i=0; i<oBusinessUnits.length; i++)
                    {
                        sBusinessUnitName+=oBusinessUnits[i].Name+",";
                        _sBusinessUnitIds+=oBusinessUnits[i].BusinessUnitID+",";
                    }

                    sBusinessUnitName=sBusinessUnitName.substring(0,sBusinessUnitName.length-1);
                    _sBusinessUnitIds=_sBusinessUnitIds.substring(0,_sBusinessUnitIds.length-1);
                    $("#txtBusinessUnit_Collection").val(sBusinessUnitName);
                    $("#txtBusinessUnit_CollectionAdv").val(sBusinessUnitName);
                }
                else
                {
                    alert("Please select a Business Unit.");
                }
            }
        });
    }

    $("#btnResetBusinessUnitPicker_Collection").click(function(e){
        $('#txtBusinessUnit_Collection').val("");
        $('#txtBusinessUnit_CollectionAdv').val("");
        _sBusinessUnitIds="";
    });
    /*-------------End Business Unit Picker----------------*/

    /*-------------Location Picker----------------*/
    var btnLocation="";
    $("#btnLocationPicker,#btnLocationPicker_Colection,#btnLocationPicker_ColectionAdv").click(function(e){
        btnLocation = $(this).attr("id");
        var sBusinessUnitIDs ="";
        var nBusinessUnitID=0;
        if(btnLocation=="btnLocationPicker")
        {
            nBusinessUnitID = $("#cboBU").val();
            sBusinessUnitIDs = String(nBusinessUnitID);
        }
        else{sBusinessUnitIDs=_sBusinessUnitIds;}
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        if(btnLocation=="btnLocationPicker")
        {
            var oLocation = $('#locationtree').tree('getSelected');
            if(oLocation!=null && oLocation.id>0){
                $("#winLocationPicker").icsWindow('close');
                _sLocationID=oLocation.id;
                $('#txtLocation').val(oLocation.text);
            }
            else{
                alert("Please select a location.");
            }
        }
        else
        {
            var oLocations = $('#locationtree').tree('getChecked');
            if(oLocations!=null && oLocations.length>0)
            {
                var LocationName="";
                for(var i=0; i<oLocations.length; i++)
                {
                    if(oLocations[i].id !=1)
                    {
                        LocationName+=oLocations[i].text+",";
                        _sLocationID+=oLocations[i].id+",";
                    }
                }

                LocationName=LocationName.substring(0,LocationName.length-1);
                _sLocationID=_sLocationID.substring(0,_sLocationID.length-1);
                $("#winLocationPicker").icsWindow('close');
                $('#txtLocation_Colection').val(LocationName);
                $('#txtLocation_ColectionAdv').val(LocationName);
            }
            else
            {
                alert("Please select a location.");
            }
        }
    });

    $('#txtLocation_Colection,#txtLocation_ColectionAdv').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sBusinessUnitIDs ="";
            sBusinessUnitIDs=_sBusinessUnitIds;
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };
            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker,#btnResetLocationPicker_Colection").click(function(e){
        $('#txtLocation').val("");
        $('#txtLocation_Colection').val("");
        $('#txtLocation_ColectionAdv').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){
        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){
        _sDepartmentNames = "";
        _sDepartmentIds= "";
        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentIds= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose,#btnDepartmentPickerClose_Collection").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
        $("#winDepartmentPicker_Collection").icsWindow('close');
    });

    $("#btnResetDepartmentPicker,#btnResetDepartmentPicker_Collection").click(function(e){
        $('#txtDepartment,#txtDepartment_Collection,#txtDepartment_CollectionAdv').val("");
        _sDepartmentIds="";
        _sDepartmentNames = "";
    });

    /*-------------Designation Picker----------------*/
    var btnDesignation="";
    $("#btnDesignationPicker,#btnDesignationPicker_Collection,#btnDesignationPicker_CollectionAdv").click(function(e){
        btnDesignation = $(this).attr("id");
        DesignationPicker();
    });

    $("#txtDesignation_Collection").keypress(function(e){
        debugger;
        if (e.which == 13)//enter=13
        {
            btnDesignation ="btnDesignationPicker_Collection";
            DesignationPicker();
        }
    });

    function DesignationPicker()
    {
        debugger;
        var oDesignation={
            DesignationID:0,
            Params: _sBusinessUnitIds+'~'+_sLocationID+'~'+ _sDepartmentIds
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            _sDesignationNames = "";
            _sDesignationIds = "";
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;
                    if(btnDesignation=="btnDesignationPicker_Collection"){bmultiplereturn=true;}

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oDesignations=[];

            if(btnDesignation=="btnDesignationPicker_Collection")
            {
                oDesignations = $('#'+oPickerobj.tableid).datagrid('getChecked');
            }
            else
            {
                var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
                oDesignations.push(oDesignation);
            }

            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignations!=null && oDesignations.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames+=oDesignations[i].Name+",";
                        _sDesignationIds+=oDesignations[i].DesignationID+",";
                    }

                    _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                    _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
                    if(btnDesignation=="btnDesignationPicker_Collection")
                    {
                        $("#txtDesignation_Collection").val(_sDesignationNames);
                    }
                    else if(btnDesignation=="btnDesignationPicker_CollectionAdv")
                    {
                        $("#txtDesignation_CollectionAdv").val(_sDesignationNames);
                    }
                    else
                    {
                        $("#txtDesignation").val(_sDesignationNames);
                    }
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker,#btnResetDesignationPicker_Collection").click(function(e){
        $('#txtDesignation').val("");
        $('#txtDesignation_Collection').val("");
        $('#txtDesignation_CollectionAdv').val("");
        _sDesignationIds="";
        _sDesignationNames = "";
    });

    /*------------- Start Block Picker----------------*/

    $("#btnBlock").click(function(e){
        BlockPicker();
    });

    function BlockPicker()
    {
        var oBlockMachineMapping={
            ProductionProcessInt:0,
            DepartmentID:0,
            BlockName:""
        }
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlockMachineMapping,
            ControllerName: "BlockMachineMapping",
            ActionName: "BlockMachineMapping_Search",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BMMID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblShift',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'BlockName',
                        windowTittle: 'Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBlocks=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNames += oBlocks[i].BlockName+",";
                        _sBMMIDs += oBlocks[i].BMMID+",";

                    }
                    _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                    _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
                    $("#txtBlock").val(_sBlockNames);
                }
                else
                {
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetBlock").click(function(e){
        $('#txtBlock').val("");
        _sBlockNames="";
        _sBMMIDs = "";
    });

    $("#txtBlock").keypress(function(e){
        if (e.which == 13)
        {
            BlockPicker();
        }
    });
    /*------------- End Block Picker----------------*/

    /*---------------- emp Search End click ----------------*/

    /*---------------- emp Search Start keyprees----------------*/
    

    $('#btnCEmployee').click(function (e)
    {
        document.getElementById("txtEmployee_Collection").value = "" ;
        $('#txtEmployeeName').data("EmployeeIDs","");
        _sEmployeeIDs = "";
    });
    $('#btnEmployeeClose').click(function (e)
    {
        document.getElementById("txtEmployee_Collection").value = "" ;
        $('#txtEmployeeName').data("EmployeeIDs","");
        _sEmployeeIDs = "";
    });
    
    $("#btnEmployeePickerOk").click(function () {
        debugger;
        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length<=0) { alert("please select atleast one item");return; }
        var sEmpIDs="";
        for(var i=0;i<oEmployees.length;i++)
        {
            sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
        }
        sEmpIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
        var oTPI = {IDs:sEmpIDs};
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oTPI,
            ControllerName: "TransferPromotionIncrement",
            ActionName: "SearchByEmployeeName",
            IsWinClose: false
        };

        _sEmployeeIDs="";
        for(var i=0;i<oEmployees.length;i++)
        {
            _sEmployeeIDs=_sEmployeeIDs+oEmployees[i].EmployeeID+",";
        }
        _sEmployeeIDs= _sEmployeeIDs.substring(0,_sEmployeeIDs.length-1);
        $('#txtEmployee').data("EmployeeIDs",_sEmployeeIDs);
        $("#txtEmployee_Collection").val(oEmployees.length+" Employees Selected");
        
        $("#winEmployeePicker").icsWindow('close');
    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });
    /*---------------- emp Search Start keyprees----------------*/

    /*-------------Department Picker start Collection----------------*/
    $("#btnDepartmentPicker_Collection").click(function(e){
        DepartmentPicker();
    });

    $("#txtDepartment_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            DepartmentPicker();
        }
    });
    $("#btnDepartmentPicker_CollectionAdv").click(function(e){
        DepartmentPicker();
    });

    $("#txtDepartment_CollectionAdv").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            DepartmentPicker();
        }
    });

    function DepartmentPicker()
    {
        $("#winDepartmentPicker_Collection").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree_Collection').tree({ data: [response.obj] });
                }
            }
        });
    }

    $("#btnDepartmentPickerOk_Collection").click(function(e){
        _sDepartmentNames = "";
        _sDepartmentIds= "";
        var oDepartments = $('#departmenttree_Collection').tree('getChecked');
        if(oDepartments!=null && oDepartments.length>0){
            $("#winDepartmentPicker_Collection").icsWindow('close');
            for(var i=0; i<oDepartments.length; i++)
            {
                _sDepartmentNames+=oDepartments[i].text+",";
                _sDepartmentIds+=oDepartments[i].id+",";
            }

            _sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
            _sDepartmentIds=_sDepartmentIds.substring(0,_sDepartmentIds.length-1);
            $("#txtDepartment_Collection").val(_sDepartmentNames);
            $("#txtDepartment_CollectionAdv").val(_sDepartmentNames);
        }
        else{
            alert("Please select a department.");
        }
    });

    var oTPI = null;


    function LoadSalaryHead(nId,sType)
    {
        var oESStructure = {ErrorMessage:nId+"~"+sType};
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oESStructure,
            ControllerName: "EmployeeSalaryStructure",
            ActionName: "GetSalaryStructure_Copy",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj != null) {
                var osalaryStructure = {ESSID:0,EmployeeSalaryStructureDetails:[]}
                debugger
                for(var i=0;i<response.obj.EmployeeSalaryStructureDetails.length;i++)
                {
                    osalaryStructure.EmployeeSalaryStructureDetails.push(response.obj.EmployeeSalaryStructureDetails[i]);
                    osalaryStructure.EmployeeSalaryStructureDetails[i].ESSSID=0;
                }
                _oSalaryStructureDetails = osalaryStructure.EmployeeSalaryStructureDetails;
                CalculateHeadWiseSalaryAmount(osalaryStructure.EmployeeSalaryStructureDetails);
            }
            else { alert(response.obj.ErrorMessage); }
        });
    }

    function CalculateHeadWiseSalaryAmount(oSalaryStructureDetails)
    {
        var oTempSalaryStructureDetails=[];
        for(var i=0; i<oSalaryStructureDetails.length; i++)
        {
            if(oSalaryStructureDetails[i].SalarySchemeDetailCalculations!=null){
                var nAmount = GetAmount(oSalaryStructureDetails[i].SalarySchemeDetailCalculations);
                var nCompAmount = GetCompAmount(oSalaryStructureDetails[i].SalarySchemeDetailCalculations);
                if(parseFloat(nAmount)>0|| parseFloat(nCompAmount)>0)
                {
                    SetSalaryHeadAmount(parseInt(oSalaryStructureDetails[i].SalaryHeadID), nAmount, nCompAmount);
                }
                else
                {
                    oTempSalaryStructureDetails.push(oSalaryStructureDetails[i]);
                }
            }

        }
        if(oTempSalaryStructureDetails.length>0)
        {
            CalculateHeadWiseSalaryAmount(oTempSalaryStructureDetails);
        }
    }


    function GetCompAmount(oSchemeDetailCalculations)
    {
        var sEquation="";
        var sGrossAmount=oTPI.CompTPIGrossSalary;

        for(var i=0; i<oSchemeDetailCalculations.length;i++)
        {
            if(parseInt(oSchemeDetailCalculations[i].ValueOperatorInt)==2)//Operator=2
            {
                if(parseInt(oSchemeDetailCalculations[i].OperatorInt)!=7)
                {
                    sEquation=sEquation+oSchemeDetailCalculations[i].OperatorInString;
                }
                else
                {
                    if((i+1)>=oSchemeDetailCalculations.length)
                    {
                        //Must be a head exists
                        alert('Invalid equation!\nPlease check your equation!')
                        return;
                    }
                    if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==1)//Gross = 1
                    {
                        sEquation=sEquation+" ("+sGrossAmount +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==2)//SalaryItem = 2
                    {
                        //var nSalaryHeadAmount = GetSalaryHeadAmount(oSchemeDetailCalculations[i+1].SalaryHeadID);
                        //Comp
                        var nSalaryHeadCompAmount = GetSalaryHeadCompAmount(oSchemeDetailCalculations[i+1].SalaryHeadID);
                        if(parseFloat(nSalaryHeadCompAmount)<=0){ return 0.00; }
                        sEquation=sEquation+" ("+parseFloat(nSalaryHeadCompAmount).toFixed(2) +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==3)//Fixed = 3
                    {
                        sEquation=sEquation+" ("+oSchemeDetailCalculations[i+1].FixedValue +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    i=i+1;
                }
            }
            else
            {
                if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==1)//Gross = 1
                {
                    sEquation=sEquation+" "+sGrossAmount;
                }
                else if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==2)//SalaryItem = 2
                {
                    var nSalaryHeadCompAmount = GetSalaryHeadCompAmount(oSchemeDetailCalculations[i].SalaryHeadID);
                    if(parseFloat(nSalaryHeadCompAmount)<=0){ return 0.00; }
                    sEquation=sEquation+" "+parseFloat(nSalaryHeadCompAmount).toFixed(2)+" ";
                }
                else if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==3)//Fixed = 3
                {
                    sEquation=sEquation+" "+oSchemeDetailCalculations[i].FixedValue;
                }
            }
        }
        return parseFloat(eval(sEquation));
    }

    function GetSalaryHeadCompAmount(nSalaryHeadID){
        for(var i=0; i<_oSalaryStructureDetails.length; i++)
        {
            if(parseInt(_oSalaryStructureDetails[i].SalaryHeadID)===parseInt(nSalaryHeadID))
            {
                return  parseFloat(_oSalaryStructureDetails[i].CompAmount);
            }
        }
        return parseFloat(0.00);
    }

    function GetAmount(oSchemeDetailCalculations)
    {
        var sEquation="";
        var sGrossAmount=  oTPI.TPIGrossSalary;
        for(var i=0; i<oSchemeDetailCalculations.length;i++)
        {
            if(parseInt(oSchemeDetailCalculations[i].ValueOperatorInt)==2)//Operator=2
            {
                if(parseInt(oSchemeDetailCalculations[i].OperatorInt)!=7)
                {
                    sEquation=sEquation+oSchemeDetailCalculations[i].OperatorInString;
                }
                else
                {
                    if((i+1)>=oSchemeDetailCalculations.length)
                    {
                        //Must be a head exists
                        alert('Invalid equation!\nPlease check your equation!')
                        return;
                    }
                    if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==1)//Gross = 1
                    {
                        sEquation=sEquation+" ("+sGrossAmount +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==2)//SalaryItem = 2
                    {
                        var nSalaryHeadAmount = GetSalaryHeadAmount(oSchemeDetailCalculations[i+1].SalaryHeadID);
                        if(parseFloat(nSalaryHeadAmount)<=0){ return 0.00; }
                        sEquation=sEquation+" ("+parseFloat(nSalaryHeadAmount).toFixed(2) +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==3)//Fixed = 3
                    {
                        sEquation=sEquation+" ("+oSchemeDetailCalculations[i+1].FixedValue +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    i=i+1;
                }
            }
            else
            {
                if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==1)//Gross = 1
                {
                    sEquation=sEquation+" "+sGrossAmount;
                }
                else if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==2)//SalaryItem = 2
                {
                    var nSalaryHeadAmount = GetSalaryHeadAmount(oSchemeDetailCalculations[i].SalaryHeadID);
                    if(parseFloat(nSalaryHeadAmount)<=0){ return 0.00; }
                    sEquation=sEquation+" "+parseFloat(nSalaryHeadAmount).toFixed(2)+" ";
                }
                else if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==3)//Fixed = 3
                {
                    sEquation=sEquation+" "+oSchemeDetailCalculations[i].FixedValue;
                }
            }
        }
        return parseFloat(eval(sEquation));
    }

    function GetSalaryHeadAmount(nSalaryHeadID){
        for(var i=0; i<_oSalaryStructureDetails.length; i++)
        {
            if(parseInt(_oSalaryStructureDetails[i].SalaryHeadID)===parseInt(nSalaryHeadID))
            {
                return  parseFloat(_oSalaryStructureDetails[i].Amount);
            }
        }
        return parseFloat(0.00);
    }

    function SetSalaryHeadAmount(nSalaryHeadID, nAmount, nCompAmount){
        for(var i=0; i<_oSalaryStructureDetails.length; i++)
        {
            if(parseInt(_oSalaryStructureDetails[i].SalaryHeadID)===parseInt(nSalaryHeadID))
            {
                _oSalaryStructureDetails[i].Amount = parseFloat(nAmount);
                _oSalaryStructureDetails[i].CompAmount = parseFloat(nCompAmount);
                break;
            }
        }
    }

    $("#btnCancel_TPI").click(function(e){
        $("#winTPIEffect").icsWindow('close');
        _oSalaryStructureDetails=[];
    });

    $(document).keydown(function (e) { if (e.keyCode == 27) { $('div').icsWindow('close'); } });



    $('#btnImportXL').click( function ()
    {
        if ($.trim($("#fileIncrements").val()) == "") {
            alert("Please select a file.");
            $("#fileIncrements").addClass("errorFieldBorder");
            $("#fileIncrements").focus();
            return false;
        } else {
            $("#fileIncrements").removeClass("errorFieldBorder");
        }
        return true;
    });

    $('#btnApprove_Multiple').click(function (e) {
        var oTPIs = $('#tblTPIs').datagrid('getChecked');
        var nIndexes = [];
        var sTPIIDs = "";
        if (oTPIs.length <= 0) {
            alert("please select at least one Item!");
            return false;
        }
        for (var i = 0; i < oTPIs.length; i++) {
            if(oTPIs[i].ApproveBy>0)
            {
                alert("Some Items are Already Approved!");
                return;
            }
            var SelectedRowIndex = $('#tblTPIs').datagrid('getRowIndex', oTPIs[i]);
            nIndexes.push(SelectedRowIndex);
            sTPIIDs += oTPIs[i].TPIID + ",";
        }
        sTPIIDs = sTPIIDs.substring(0, sTPIIDs.length - 1);
        if (!confirm("Confirm to Approve!")) return;
        //var tsv = ((new Date()).getTime()) / 1000;
        var oTPI={IDs:sTPIIDs}
        $.ajax
         ({
             type: "POST",
             dataType: "json",
             url: _sBaseAddress + "/TransferPromotionIncrement/TPI_MultipleApprove",
             traditional: true,
             data: JSON.stringify({oTransferPromotionIncrement:oTPI}),
             contentType: "application/json; charset=utf-8",
             success: function (data) {
                 var oTPIs = [];
                 oTPIs = jQuery.parseJSON(data);
                 if (oTPIs[0].ErrorMessage == "" && oTPIs.length > 0) {
                     for (var i = 0; i < oTPIs.length; i++) {
                         $('#tblTPIs').datagrid('updateRow', { index: nIndexes[i], row: oTPIs[i] });
                     }
                     alert("Approved Successfully !");
                 }
                 else {
                     alert(oTPIs[0].ErrorMessage);
                 }
             },
             error: function (xhr, status, error) {
                 alert(error);
             }
         });
    });

    $("#btnTPIASearch").click(function ()
    {
        TPIPickerReset();
        $("#winTPIASearchPicker").icsWindow("open");
    });
    $("#btnTPIClose").click(function ()
    {
        $("#winTPIASearchPicker").icsWindow("close");
    });

    function TPIPickerReset()
    {
        $('#dtStartDate_Search').datebox('setValue',icsdateformat(new Date));
        $('#dtEndDate_Search').datebox('setValue',icsdateformat(new Date));
        $('#chkTransfer_Search').prop('checked', false);
        $('#chkPromotion_Search').prop('checked', false);
        $('#chkIncrement_Search').prop('checked', false);
        $('#chkRecommend_Search').prop('checked', false);
        $('#chkApprove_Search').prop('checked', false);
        _sBusinessUnitIds="";
        _sLocationID="";
        _sDepartmentIds="";
        _sDesignationIds="";

        $('#txtBusinessUnit_CollectionAdv').val("");
        $('#txtLocation_ColectionAdv').val("");
        $('#txtDepartment_CollectionAdv').val("");
        $('#txtDesignation_CollectionAdv').val("");

    }

    $("#btnTPISearch").click(function(e)
    {
        var dtStartDate=$('#dtStartDate_Search').datebox('getValue');
        var dtEndDate=$('#dtEndDate_Search').datebox('getValue');
        var IsTransfer=$('#chkTransfer_Search').is(':checked');
        var IsPromotion=$('#chkPromotion_Search').is(':checked');
        var IsIncrement=$('#chkIncrement_Search').is(':checked');
        var IsRecommend=$('#chkRecommend_Search').is(':checked');
        var IsApprove=$('#chkApprove_Search').is(':checked');
        var sParams=dtStartDate+"~"+dtEndDate+"~"+IsTransfer+"~"+IsPromotion+"~"+IsIncrement+"~"+_sBusinessUnitIds+"~"+_sLocationID+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+IsRecommend+"~"+IsApprove;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/TransferPromotionIncrement/TPI_Search",
            traditional: true,
            data: JSON.stringify({sParams:sParams}),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                var oTPIs = data;
                if (oTPIs.length>0 && oTPIs[0].ErrorMessage == "")
                {
                    DynamicRefreshList(oTPIs, "tblTPIs");
                    $("#winTPIASearchPicker").icsWindow("close");
                }
                else
                {
                    alert(oTPIs[0].ErrorMessage);
                    $("#winTPIASearchPicker").icsWindow("close");
                }
            },
        });
    });


    $("#btnTPIExcel").click(function(e)
    {
        var dtStartDate=$('#dtStartDate_Search').datebox('getValue');
        var dtEndDate=$('#dtEndDate_Search').datebox('getValue');
        var IsTransfer=$('#chkTransfer_Search').is(':checked');
        var IsPromotion=$('#chkPromotion_Search').is(':checked');
        var IsIncrement=$('#chkIncrement_Search').is(':checked');
        var IsRecommend=$('#chkRecommend_Search').is(':checked');
        var IsApprove=$('#chkApprove_Search').is(':checked');
        var sParams=dtStartDate+"~"+dtEndDate+"~"+IsTransfer+"~"+IsPromotion+"~"+IsIncrement+"~"+_sBusinessUnitIds+"~"+_sLocationID+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+IsRecommend+"~"+IsApprove;
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/TransferPromotionIncrement/TPIExcel?sParams="+sParams+"&nts="+tsv, "_blank");
    });



    //------------PDF---------------


    $('#btnPdf').click(function (e)
    {
        debugger;

        if($("#cboPromotionAndIncrementHistory").val() == 0){
            alert("Please select type");
            return false;
        }

        if($("#cboPromotionAndIncrementHistory").val() == 1) {
            PrintPromotion_MAMIYA();
        }
        if($("#cboPromotionAndIncrementHistory").val() == 2) {
            var oTPI = $('#tblTPIs').datagrid('getSelected');
            if(oTPI==null || oTPI.TPIID<=0)
            {
                alert("please select an item !");
                return false;
            }

            var length = $('#tblTPIs').datagrid('getChecked').length;
            if(length > 1) {
                alert("please select only one item !");
                return false;
            }

            var sEmployeeID = "" ;

            var oEmployees= $('#tblTPIs').datagrid('getSelected');
            sEmployeeID = oEmployees.EmployeeID;


            debugger;
            window.open(_sBaseAddress+ "/TransferPromotionIncrement/PrintIncrementHistory?sEmployeeID="+sEmployeeID, "_blank");


        }

    });


    /*

    $('#btnPrintList').click(function (e)
{
    var dtDateFrom = $('#dtStartDate').datebox('getValue');
    var dtDateTo = $('#dtEndDate').datebox('getValue');
    var oEmployees= $('#tblEmployees').datagrid('getRows');
    var sDateRange = dtDateFrom+"~"+dtDateTo;
    if(oEmployees.length <=0)
    {
        alert("There is nothing to print !");
        return;
    }
    var sEmployeeIDs = "" ;
    for(var i = 0 ; i<oEmployees.length ; i++)
    {
        sEmployeeIDs += oEmployees[i].EmployeeID + ",";
    }

    sEmployeeIDs = sEmployeeIDs.substring(0,sEmployeeIDs.length - 1)

    var tsv=((new Date()).getTime())/1000;
    window.open(_sBaseAddress+ "/Employee/PrintNewEmployee?sEmployeeIDs="+sEmployeeIDs+"&sDateRange="+sDateRange+"&ts="+tsv, "_blank");

});

    */

    function PrintPromotion_MAMIYA() {
        var oTPI = $('#tblTPIs').datagrid('getSelected');
        if(oTPI==null || oTPI.TPIID<=0)
        {
            alert("please select an item !");
            return false;
        }
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/TransferPromotionIncrement/PrintPromotionLetter_MAMIYA?nEmpID="+oTPI.EmployeeID+"&nTPIID="+oTPI.TPIID+"&ts="+tsv, "_blank");
    }

    /*$('#btnPrintPromotion_MAMIYA').click(function (e)
    {
        var oTPI = $('#tblTPIs').datagrid('getSelected');
        if(oTPI==null || oTPI.TPIID<=0)
        {
            alert("please select an item !");
            return false;
        }
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/TransferPromotionIncrement/PrintPromotionLetter_MAMIYA?nEmpID="+oTPI.EmployeeID+"&nTPIID="+oTPI.TPIID+"&ts="+tsv, "_blank");
    });*/

    $('#btnPrintIncrementApprisal').click(function (e)
    {
        debugger;
        //alert(_sBusinessUnitIds + " "+_sLocationID + " "+_sDepartmentIds + " "+_sDesignationIds + " "+_sEmployeeIDs);
        var sParam = "";
        var IsMultipleMonth = false;
        if ($("#chkMultipleMonth").is(':checked')) {
            IsMultipleMonth = true;
        }
        var IsJoinDate = false;
        if ($("#chkJoinDate").is(':checked')) {
            IsJoinDate = true;
        }


        var oMonths=$('#tblMonth').datagrid('getChecked');
        var oYears=$('#tblYear').datagrid('getChecked');

        var sMonths = "";
        for(var i=0;i<oMonths.length;i++)
        {
            sMonths=sMonths+oMonths[i].Value+",";
        }
        sMonths= sMonths.substring(0,sMonths.length-1);

        var sYears = "";
        for(var i=0;i<oYears.length;i++)
        {
            sYears=sYears+oYears[i].Year+",";
        }
        sYears= sYears.substring(0,sYears.length-1);

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();

        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }

        //var nMonthID=$("#cboSalaryMonth_Collection").val();
        //var nYear= $('#cboYear option:selected').text();

        //var nMonthIDTo=$("#cboSalaryMonth_CollectionTo").val();
        //var nYearTo= $('#cboYearTo option:selected').text();

        sParam += $('#dtDate').datebox('getValue') + "~" + _sBusinessUnitIds + "~" + _sLocationID + "~" + _sDepartmentIds + "~" + _sDesignationIds + "~" + _sEmployeeIDs

            +"~" + $('#dtJoiningDate').datebox('getValue')
            +"~" + IsMultipleMonth
            //+"~" + nMonthID
            //+"~" + nYear
            //+"~" + nMonthIDTo
            //+"~" + nYearTo
            +"~" + sMonths
            +"~" + sYears
            +"~" + IsJoinDate
            +"~" + nStartSalaryRange
            +"~" + nEndSalaryRange
            +"~" + _sBlockIDs
            +"~" + _sGroupIDs;
        debugger;
        window.open(_sBaseAddress+ "/TransferPromotionIncrement/PrintIncrementApprisal?sParam="+sParam, "_blank");
    });
    $('#btnExcelIncrementApprisal').click(function (e)
    {
        //alert(_sBusinessUnitIds + " "+_sLocationID + " "+_sDepartmentIds + " "+_sDesignationIds + " "+_sEmployeeIDs);
        var sParam = "";
        var IsMultipleMonth = false;
        if ($("#chkMultipleMonth").is(':checked')) {
            IsMultipleMonth = true;
        }
        var IsJoinDate = false;
        if ($("#chkJoinDate").is(':checked')) {
            IsJoinDate = true;
        }

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }
        //var nMonthID=$("#cboSalaryMonth_Collection").val();
        //var nYear= $('#cboYear option:selected').text();

        //var nMonthIDTo=$("#cboSalaryMonth_CollectionTo").val();
        //var nYearTo= $('#cboYearTo option:selected').text();

        var oMonths=$('#tblMonth').datagrid('getChecked');
        var oYears=$('#tblYear').datagrid('getChecked');

        var sMonths = "";
        for(var i=0;i<oMonths.length;i++)
        {
            sMonths=sMonths+oMonths[i].Value+",";
        }
        sMonths= sMonths.substring(0,sMonths.length-1);

        var sYears = "";
        for(var i=0;i<oYears.length;i++)
        {
            sYears=sYears+oYears[i].Year+",";
        }
        sYears= sYears.substring(0,sYears.length-1);

        sParam += $('#dtDate').datebox('getValue') + "~" + _sBusinessUnitIds + "~" + _sLocationID + "~" + _sDepartmentIds + "~" + _sDesignationIds + "~" + _sEmployeeIDs

            +"~" + $('#dtJoiningDate').datebox('getValue')
            +"~" + IsMultipleMonth
            //+"~" + nMonthID
            //+"~" + nYear
            //+"~" + nMonthIDTo
            //+"~" + nYearTo
            +"~" + sMonths
            +"~" + sYears
            +"~" + IsJoinDate
            +"~" + nStartSalaryRange
            +"~" + nEndSalaryRange
            +"~" + _sBlockIDs
            +"~" + _sGroupIDs;
        debugger;
        window.open(_sBaseAddress+ "/TransferPromotionIncrement/ExcelIncrementApprisal?sParam="+sParam, "_blank");
    });


    
    /*------------EmployeeGroupAdv--------------*/
    
    $("#btnEmployeeGroupResetAdv").click(function(e){
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
    });

    $('#txtEmployeeGroupAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroupAdv").val();
            var sTempName = "";
            SearchEmployeeGroupAdv(txtSearchByGroup);
            $("#txtEmployeeGroupAdv").val('');
        }
    });


    $("#btnEmployeeGroupPickerAdv").click(function(e){
        SearchEmployeeGroupAdv("");
    });
    function SearchEmployeeGroupAdv(name) {
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oGroups.length; i++)
                    {
                        _sGroupNamesAdv += oGroups[i].Name+",";
                        _sGroupIDsAdv += oGroups[i].EmployeeTypeID+",";

                    }
                    _sGroupNamesAdv=_sGroupNamesAdv.substring(0,_sGroupNamesAdv.length-1);
                    _sGroupIDsAdv=_sGroupIDsAdv.substring(0,_sGroupIDsAdv.length-1);
                    $("#txtEmployeeGroupAdv").val(_sGroupNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }







    /*------------EmployeeBlockAdv--------------*/

    $('#txtEmployeeBlockAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlockAdv").val();
            var sTempName = "";
            SearchEmployeeBlockAdv(txtSearchByBlock);
            $("#txtEmployeeBlockAdv").val('');
        }
    });

    $("#btnEmployeeBlockPickerAdv").click(function(e){
        SearchEmployeeBlockAdv("");
    });
    function SearchEmployeeBlockAdv(name) {
        $("#txtEmployeeBlockAdv").val("");
        _sBlockNamesAdv = "";
        _sBlockIDsAdv = "";
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNamesAdv += oBlocks[i].Name+",";
                        _sBlockIDsAdv += oBlocks[i].EmployeeTypeID+",";

                    }
                    _sBlockNamesAdv=_sBlockNamesAdv.substring(0,_sBlockNamesAdv.length-1);
                    _sBlockIDsAdv=_sBlockIDsAdv.substring(0,_sBlockIDsAdv.length-1);
                    $("#txtEmployeeBlockAdv").val(_sBlockNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }
    

    $("#btnEmployeeBlockResetAdv").click(function(e){
        debugger;
        _sBlockNamesAdv = "";
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDsAdv = "";
    });



    $("#btnViewIncrement").click(function(e){
        debugger;
        var sEmployeeIDs = _sEmployeeIDs;
        var nSalaryHeadID = $('#cboSalaryHead').val();
        
        var nPercent = 0;
        //nPercent = parseInt($('#txtPercent').val());
        //if(isNaN(nPercent)) {
        //    alert("Must needed Percentage value.");
        //    return;
        //}
        
        $('#tblTPIs').datagrid('hideColumn', 'TPIGrossSalary');
        $('#tblTPIs').datagrid('hideColumn', 'TPIBasicAmount');

        var sMonthIDs = "";
        var oMonthIDs = $('#cboMonths').combobox('getValues');
        if(oMonthIDs.length > 0){
            for(var i= 0;i<oMonthIDs.length;i++){
                if(oMonthIDs[i] != "" && oMonthIDs[i] != null){
                    sMonthIDs += oMonthIDs[i] + ",";
                }
            }
            if(sMonthIDs.length > 0)
                sMonthIDs = sMonthIDs.substring(0,sMonthIDs.length-1);
        }
        
        var sYearIDs = "";
        var oYearIDs = $('#cboYears').combobox('getValues');
        if(oYearIDs.length > 0){
            for(var i= 0;i<oYearIDs.length;i++){
                if(oYearIDs[i] != "" && oYearIDs[i] != null){
                    sYearIDs += oYearIDs[i] + ",";
                }
            }
            if(sYearIDs.length > 0)
                sYearIDs = sYearIDs.substring(0,sYearIDs.length-1);
        }

        var sParam = sEmployeeIDs + "~" + nSalaryHeadID + "~" + nPercent + "~" + sMonthIDs + "~" + sYearIDs + "~" + _sBusinessUnitIds + "~" + _sLocationID;
        var oInc={Note:sParam} 
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oInc,
            ControllerName: "TransferPromotionIncrement",
            ActionName: "GetsIncrementByPercent",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs != null)
            {
                if (response.objs.length>0 && response.objs[0].ErrorMessage=="") {
                    DynamicRefreshList(response.objs,'tblTPIs');
                }
                else{
                    alert(response.objs[0].ErrorMessage);
                }
            }
        });
    });


    $("#btnRefresh").click(function(e){
        var sEmployeeIDs = _sEmployeeIDs;
        var nSalaryHeadID = $('#cboSalaryHead').val();
        
        var nPercent = 0;
        nPercent = parseInt($('#txtPercent').val());
        if(isNaN(nPercent)) {
            alert("Must needed Percentage value.");
            return;
        }

        $('#tblTPIs').datagrid('showColumn', 'TPIGrossSalary');
        $('#tblTPIs').datagrid('showColumn', 'TPIBasicAmount');

        var sMonthIDs = "";
        var oMonthIDs = $('#cboMonths').combobox('getValues');
        if(oMonthIDs.length > 0){
            for(var i= 0;i<oMonthIDs.length;i++){
                if(oMonthIDs[i] != "" && oMonthIDs[i] != null){
                    sMonthIDs += oMonthIDs[i] + ",";
                }
            }
            if(sMonthIDs.length > 0)
                sMonthIDs = sMonthIDs.substring(0,sMonthIDs.length-1);
        }
        
        var sYearIDs = "";
        var oYearIDs = $('#cboYears').combobox('getValues');
        if(oYearIDs.length > 0){
            for(var i= 0;i<oYearIDs.length;i++){
                if(oYearIDs[i] != "" && oYearIDs[i] != null){
                    sYearIDs += oYearIDs[i] + ",";
                }
            }
            if(sYearIDs.length > 0)
                sYearIDs = sYearIDs.substring(0,sYearIDs.length-1);
        }

        var sParam = sEmployeeIDs + "~" + nSalaryHeadID + "~" + nPercent + "~" + sMonthIDs + "~" + sYearIDs + "~" + _sBusinessUnitIds + "~" + _sLocationID;
        var oInc={Note:sParam} 
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oInc,
            ControllerName: "TransferPromotionIncrement",
            ActionName: "GetsIncrementByPercent",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs != null)
            {
                if (response.objs.length>0 && response.objs[0].ErrorMessage=="") {
                    DynamicRefreshList(response.objs,'tblTPIs');
                }
                else{
                    alert(response.objs[0].ErrorMessage);
                }
            }
        });
    });

    function RefreshObject()
    {
        debugger;

        var oTPI =
        {
            IsCashFixed : true,
            TransferPromotionIncrements : $('#tblTPIs').datagrid('getChecked')
        };
        return oTPI;
    }
    function Save() {

        var sEmployeeIDs = _sEmployeeIDs;
        var nSalaryHeadID = $('#cboSalaryHead').val();
        
        var nPercent = 0;
        nPercent = parseInt($('#txtPercent').val());
        if(isNaN(nPercent)) {
            alert("Must needed Percentage value.");
            return;
        }

        $('#tblTPIs').datagrid('showColumn', 'TPIGrossSalary');
        $('#tblTPIs').datagrid('showColumn', 'TPIBasicAmount');

        var sMonthIDs = "";
        var oMonthIDs = $('#cboMonths').combobox('getValues');
        if(oMonthIDs.length > 0){
            for(var i= 0;i<oMonthIDs.length;i++){
                if(oMonthIDs[i] != "" && oMonthIDs[i] != null){
                    sMonthIDs += oMonthIDs[i] + ",";
                }
            }
            if(sMonthIDs.length > 0)
                sMonthIDs = sMonthIDs.substring(0,sMonthIDs.length-1);
        }
        
        var sYearIDs = "";
        var oYearIDs = $('#cboYears').combobox('getValues');
        if(oYearIDs.length > 0){
            for(var i= 0;i<oYearIDs.length;i++){
                if(oYearIDs[i] != "" && oYearIDs[i] != null){
                    sYearIDs += oYearIDs[i] + ",";
                }
            }
            if(sYearIDs.length > 0)
                sYearIDs = sYearIDs.substring(0,sYearIDs.length-1);
        }

        var sParam = sEmployeeIDs + "~" + nSalaryHeadID + "~" + nPercent + "~" + sMonthIDs + "~" + sYearIDs + "~" + _sBusinessUnitIds + "~" + _sLocationID;
        var oInc={Note:sParam} 
        //var oTPI = RefreshObject();
        
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/TransferPromotionIncrement/TransferPromotionIncrement_IU_Multiple",
            traditional: true,
            data: JSON.stringify(oInc),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                debugger;
                var oTPI = jQuery.parseJSON(data);
                if (oTPI.ErrorMessage == "Process Successful.")
                {
                    alert("Data Saved sucessfully");
                }
                else
                {
                    window.open(_sBaseAddress+ "/TransferPromotionIncrement/ErrorExcelIncrementByPercent");
                }
                clearInterval(intervalID);
                $("#progressbarParent").hide();
            },
        });


        //var oTPIs = $('#tblTPIs').datagrid('getChecked');
        //if (oTPIs.length <= 0) {
        //    alert("Please select at least one Item!");
        //    return false;
        //}
        //var oTPI = RefreshObject();
        //$.ajax({
        //    type: "POST",
        //    dataType: "json",
        //    url: _sBaseAddress + "/TransferPromotionIncrement/TransferPromotionIncrement_IU_Multiple",
        //    traditional: true,
        //    data: JSON.stringify(oTPI),
        //    contentType: "application/json; charset=utf-8",

        //    success: function(data)
        //    {
        //        oTPI = jQuery.parseJSON(data);
        //        if (oTPI.ErrorMessage == "")
        //        {
        //            alert("Data Saved sucessfully");
        //        }
        //        else
        //        {
        //            alert(oTPI.ErrorMessage);
        //        }
        //    },
        //});
    }


</script>
