@model IEnumerable<ESimSol.BusinessObjects.ITaxRebatePayment>
@{
    ViewBag.Title = "View_ITaxRebatePayment";
}


<div class="menuMainCollectionTable">
    <table id="tblITaxRebatePayment" title="ITaxRate Rebate" class="easyui-datagrid" style="width:100%;height:100%" fitcolumns="false" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbar">
        <thead>
            <tr>
                <th field="EmployeeNameCode" width="25%" align="left">Employee</th>
                <th field="AssessmentYear" width="10%" align="left">Assesment Year</th>
                <th field="Description" width="20%" align="left">Rebate Item</th>
                <th field="ITaxRebateTypeString" width="10%" align="left">Rebate Type</th>
                <th field="Amount" width="10%" align="right" formatter="formatPrice">Amount</th>
                <th field="Note" width="20%" align="left">Note</th>
            </tr>
        </thead>
    </table>
    <div id="toolbar">
        <input id="txtEmployeeSearch" type="text" style="width:200px;" placeholder="Search Employee" />
        <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">New</a>
        <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
        <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
        <a id="btnView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>

    </div> 
    <div id="winITaxRebatePayment" class="easyui-window winstyle" title="Income Tax Rebate" style="width:450px; height:auto" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 98%; font-family: Tahoma;">
            <table class="tbl-Win">
                <tr class="templet">
                    <td class="td-col-5 align-right">
                        <label>Employee :</label>
                    </td>
                    <td class="td-styler td-col-14" colspan="3">
                        <input id="txtEmployee" class="reset-text txt-styler-picker" placeholder="Search employee" />
                        <a id="btnPickEmployee" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                        <a id="btnResetEmployee" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr class="templet">
                    <td class="td-col-5 align-right" valign="top">
                        <label>Official Info :</label>
                    </td>
                    <td class="td-styler td-col-14" colspan="3">
                        <input id="txtOfficialInfo" class="reset-text txt-styler" placeholder="Offical Info" />

                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr class="templet">
                    <td class="td-col-5 align-right" valign="top">
                        <label>Assesment Year :</label>
                    </td>
                    <td class="td-styler td-col-14" colspan="3">
                        <select id="cboITaxAssessmentYear" class="cbo-styler"></select>
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr class="templet">
                    <td class="td-col-5 align-right" valign="top">
                        <label>Rebate Item :</label>
                    </td>
                    <td class="td-styler td-col-14" colspan="3">
                        <select id="cboITaxRebateItem" class="cbo-styler"></select>
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr class="templet">
                    <td class="td-col-5 align-right" valign="top">
                        <label>Amount :</label>
                    </td>
                    <td class="td-styler td-col-14" colspan="3">
                        <input id="txtAmount" class="reset-text txt-styler number" placeholder="Amount" />
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr class="templet">
                    <td class="td-col-5 align-right" valign="top">
                        <label>Note :</label>
                    </td>
                    <td class="td-styler td-col-14" colspan="3">
                        <input id="txtNote" class="reset-text txt-styler" placeholder="Note" />
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr>
                    <td colspan="5" style="text-align:right; padding-top:10px; padding-bottom:10px;">
                        <a id="btnSaveITaxRebatePayment" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnCloseITaxRebatePayment" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </div>
    </div> 
</div>

<style type="text/css">
    .tbl-Win {
        width: 100%;
    }

    .td-styler input, textarea, select {
        padding-left: 5px;
    }

    .txt-styler {
        width: 95%;
    }

    .txt-styler-picker {
        width: 75%;
    }

    .cbo-styler {
        width: 98%;
    }

    .txt-styler-Note {
        width: 98.5%;
    }
</style>
<script type="text/javascript">
    var _oITaxRebatePayments=[];
    var _oITaxRebatePayment=null;
    var _sBaseAddress="";
    var _nEmployeeID = 0;


    $(document).ready(function ()
    {
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oITaxRebatePayments =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oITaxAssessmentYears =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ITaxAssessmentYears));
        var oITaxRebateItems =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ITaxRebateItems));
        $('.number').icsCurrencyBox();

        $("#cboITaxAssessmentYear").icsLoadCombo({
            List: oITaxAssessmentYears,
            OptionValue: "ITaxAssessmentYearID",
            DisplayText: "AssessmentYear",
            InitialValue:"Default"
        });
        $("#cboITaxRebateItem").icsLoadCombo({
            List: oITaxRebateItems,
            OptionValue: "ITaxRebateItemID",
            DisplayText: "Description",
            InitialValue:"Default"
        });
        DynamicRefreshList(_oITaxRebatePayments, 'tblITaxRebatePayment');

    });

    $(document).keydown(function (e) { if (e.keyCode == 27) { $('div').icsWindow('close'); } });

    /*------------------- Searching ------------- */

    $("#txtEmployeeSearch").keyup(function (e) {
        var oITaxRebatePayments =[];
        var keyCode = e.keyCode || e.which;
        $('#txtEmployeeSearch').removeClass("errorFieldBorder");
        if (keyCode == 8) { oITaxRebatePayments = _oITaxRebatePayments; }
        else{ oITaxRebatePayments = $('#tblITaxRebatePayment').datagrid('getRows'); }
        if (e.keyCode == 13) // Enter Press
        {
            if (!$.trim($("#txtEmployeeSearch").val()).length) {

                alert("Please enter employee name or code to search.");
                $('#txtEmployeeSearch').focus();
                $('#txtEmployeeSearch').val("");
                return;
            }
            else { $('#txtEmployeeSearch').removeClass("errorFieldBorder"); }

            var oITaxRebatePayment={
                EmployeeNameCode:   $.trim($("#txtEmployeeSearch").val())

            };
            GetsITaxRebatePayment(oITaxRebatePayment,false);
        }
        else {
            var sTempName="";
            var oSearchedData = [];
            for(i=0;i<oITaxRebatePayments.length;++i)
            {
                sTempName=oITaxRebatePayments[i]['EmployeeNameCode'];
                if(sTempName.toUpperCase().indexOf($('#txtEmployeeSearch').val().toUpperCase())>-1)
                {
                    oSearchedData.push(oITaxRebatePayments[i]);
                }
            }
            $('#tblITaxRebatePayment').empty();
            if (oSearchedData.length == 0) { DynamicRefreshList(_oITaxRebatePayments, "tblITaxRebatePayment");}
            else { DynamicRefreshList(oSearchedData, "tblITaxRebatePayment"); }

        }
    });

    function GetsITaxRebatePayment(oITaxRebatePayment, bIsAdvSearch) {

        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oITaxRebatePayment,
            ControllerName: "ITaxProcessAndDeployment",
            ActionName: "ITaxRebatePayment_Search",
            IsWinClose: bIsAdvSearch
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs != null) {
                if (response.objs.length > 0) {
                    if(response.objs[0].ITaxRebatePaymentID>0){
                        _oITaxRebatePayments=response.objs;
                        DynamicRefreshList(response.objs, "tblITaxRebatePayment");
                    }
                    else{DynamicRefreshList([], "tblITaxRebatePayment"); alert(response.objs[0].ErrorMessage);}
                }
                else { DynamicRefreshList([], "tblITaxRebatePayment"); alert("No income tax advance payment found by the criteria."); }
            }
        });
    }

    /*------------------- Add, Edit, Delete, View  ------------- */

    function Validate()
    {

        if(_nEmployeeID<=0){
            $('#txtEmployee').focus();
            $('#txtEmployee').addClass("errorFieldBorder");
            alert('Employee required.');
            return false;
        }
        else{
            $('#txtEmployee').removeClass("errorFieldBorder");
        }
        if($('#cboITaxAssessmentYear').val()<=0){
            $('#cboITaxAssessmentYear').focus();
            $('#cboITaxAssessmentYear').addClass("errorFieldBorder");
            alert('Please select assesment year.');
            return false;
        }
        else{
            $('#cboITaxAssessmentYear').removeClass("errorFieldBorder");
        }
        
        if($('#cboITaxRebateItem').val()<=0){
            $('#cboITaxRebateItem').focus();
            $('#cboITaxRebateItem').addClass("errorFieldBorder");
            alert('Please select rebate item.');
            return false;
        }
        else{
            $('#cboITaxRebateItem').removeClass("errorFieldBorder");
        }
        if($.trim($('#txtAmount').val())==""){
            $('#txtAmount').focus();
            $('#txtAmount').addClass("errorFieldBorder");
            alert('Amount required.');
            return false;
        }
        else{
            $('#txtAmount').removeClass("errorFieldBorder");
        }
        if(icsRemoveComma($("#txtAmount").val())<=0){
            $('#txtAmount').focus();
            $('#txtAmount').addClass("errorFieldBorder");
            alert('Amount must be greater than zero.');
            return false;
        }
        else{
            $('#txtAmount').removeClass("errorFieldBorder");
        }
        return true;
    }

    function ResetITaxRebatePayment(bIsdisabled){
        _nEmployeeID=0;
        $('.reset-text').val("");
        $('#cboITaxAssessmentYear').val(0);
        _oITaxRebatePayment=null;
        $('input,select').removeClass("errorFieldBorder");
        $('#winITaxRebatePayment select, #winITaxRebatePayment input').prop('disabled',bIsdisabled);
        if(bIsdisabled)
        {
            $('#btnSaveITaxRebatePayment, .ics-pick').hide();
            $('.txt-styler-picker').css({"width":"95%"});
        }
        else
        {
            $('#btnSaveITaxRebatePayment, .ics-pick').show();
            $('.txt-styler-picker').css({"width":"75%"});
        }
        $('#txtEmployee').focus();
    }

    function RefreshObject(){
        var oITaxRebatePayment={
            ITaxRebatePaymentID: (_oITaxRebatePayment==null)? 0: _oITaxRebatePayment.ITaxRebatePaymentID,
            ITaxAssessmentYearID: $("#cboITaxAssessmentYear").val(),
            EmployeeID:_nEmployeeID,
            ITaxRebateItemID: $("#cboITaxRebateItem").val(),
            Amount:icsRemoveComma($("#txtAmount").val()),
            Note:$.trim($("#txtNote").val())
        };
        return oITaxRebatePayment;
    }

    function GetITaxRebatePayment(sTitle){
        var oITaxRebatePayment=$('#tblITaxRebatePayment').datagrid('getSelected');
        if (oITaxRebatePayment==null || oITaxRebatePayment.ITaxRebatePaymentID<=0) { alert('Please select an item from list.'); return false;}
        var obj =
       {
           BaseAddress: _sBaseAddress,
           Object: oITaxRebatePayment,
           ControllerName: "ITaxProcessAndDeployment",
           ActionName: "GetITaxRebatePayment",
           IsWinClose: false
       };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj != null) {
                if (response.obj.ITaxRebatePaymentID > 0) {
                    _oITaxRebatePayment=response.obj;
                    _nEmployeeID=response.obj.EmployeeID;
                    $("#txtEmployee").val(_oITaxRebatePayment.EmployeeNameCode);
                    $("#txtOfficialInfo").val(_oITaxRebatePayment.EmployeeOfficial);
                    $("#cboITaxAssessmentYear").val(_oITaxRebatePayment.ITaxAssessmentYearID);
                    $("#cboITaxRebateItem").val(_oITaxRebatePayment.ITaxRebateItemID);
                    $("#txtAmount").val(formatPrice(_oITaxRebatePayment.Amount));
                    $("#txtNote").val(_oITaxRebatePayment.Note);
                    $("#winITaxRebatePayment").icsWindow("open", sTitle);
                }
                else { alert(response.obj.ErrorMessage); }
            }
        });
    }

    $("#btnAdd").click(function (e) {
        ResetITaxRebatePayment(false);
        $("#winITaxRebatePayment").icsWindow("open", "Add Income Tax Rebate Payment");
    });

    $('#btnEdit').click(function (e)
    {
        ResetITaxRebatePayment(false);
        GetITaxRebatePayment("Edit Income Tax Rebate Payment");

    });

    $('#btnView').click(function (e)
    {
        ResetITaxRebatePayment(true);
        GetITaxRebatePayment("View Income Tax Rebate Payment")
    });

    $('#btnDelete').click(function (e)
    {
        var oITaxRebatePayment=$('#tblITaxRebatePayment').datagrid('getSelected');
        if (oITaxRebatePayment==null || oITaxRebatePayment.ITaxRebatePaymentID<=0) { alert('Please select an item from list.'); return false;}

        if (!confirm("Confirm to Delete?")) return ;
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oITaxRebatePayment,
            ControllerName: "ITaxProcessAndDeployment",
            ActionName: "ITaxRebatePayment_Delete",
            TableId: "tblITaxRebatePayment",
            IsWinClose: false
        };
        $.icsDelete(obj);
    });

    $("#btnSaveITaxRebatePayment").click(function (e) {

        if (!Validate()) return false;
        var oITaxRebatePayment=RefreshObject();
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oITaxRebatePayment,
            ObjectId: oITaxRebatePayment.ITaxRebatePaymentID,
            ControllerName: "ITaxProcessAndDeployment",
            ActionName: "ITaxRebatePayment_IU",
            TableId: "tblITaxRebatePayment",
            IsWinClose: true,
            Message: (oITaxRebatePayment.ITaxRebatePaymentID>0)? "Update Successfully.":"Save Successfully."
        };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.ITaxRebatePaymentID > 0) {
                    ResetITaxRebatePayment();
                }
            }
        });
    });

    $("#btnCloseITaxRebatePayment").click(function (e) {
        $("#winITaxRebatePayment").icsWindow("close");
    });



    /*----------------- Employee Pick--------------*/


    $("#btnResetEmployee").click(function () {
        $("#txtEmployee,#txtOfficialInfo").val("");
        _nEmployeeID=0;
    });

    $("#btnPickEmployee").click(function () {

        var sEmployeeNameCode=$.trim($("#txtEmployee").val());
        if(sEmployeeNameCode==""){
            alert("Please type enployee name or code to search");
            return;
        }
        GetsEmployee(sEmployeeNameCode);
    });

    $("#txtEmployee").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            debugger;
            var sEmployeeNameCode=$.trim($("#txtEmployee").val());
            if(sEmployeeNameCode==""){
                alert("Please type enployee name or code to search");
                return;
            }

            GetsEmployee(sEmployeeNameCode);
        }
        else if(nkeyCode==8){
            $("#txtEmployee,#txtOfficialInfo").val("");
            _nEmployeeID=0;
        }
    });

    function GetsEmployee(sEmployeeNameCode){

        var oEmployee = {
            Name: sEmployeeNameCode,
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsEmployee",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 160, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Code", title: "Code", width: 80, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 140, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Desingnation", width: 140, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winEmployeePicker',
                        winclass:'clsEmployeePicker',
                        winwidth: 580,
                        winheight: 460,
                        tableid: 'tblEmployeePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No employee found.");
            }
        });


    }

    function IntializeEmployeePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            EmployeeSelect(oPickerobj);
        });
        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                EmployeeSelect(oPickerobj);
            }
        });
    }

    function EmployeeSelect(oPickerobj){
        debugger;
        var oEmployee = $('#'+oPickerobj.tableid).datagrid('getSelected');
        if (oPickerobj.winid == 'winEmployeePicker')
        {
            if(oEmployee!=null  && oEmployee.EmployeeID>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                _nEmployeeID=oEmployee.EmployeeID;
                $('#txtEmployee').val(oEmployee.Name);
                $('#txtOfficialInfo').val(oEmployee.DesignationName+"," + oEmployee.DepartmentName);
                $('#cboITaxAssessmentYear').focus();
            }
            else{
                alert("Please select an employee.");
            }
        }
    }



</script>
