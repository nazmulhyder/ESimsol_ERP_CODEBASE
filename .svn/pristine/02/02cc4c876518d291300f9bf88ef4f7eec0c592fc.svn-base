@{
    ViewBag.Title = " Spare Parts Request";
}
<html>

<body>
    @model ESimSol.BusinessObjects.PurchaseRequisition
    <div id="divPurchaseRequisition" class="easyui-panel menuMainCollectionTable" title="Add Purchase Requisition" style="font-family:Tahoma; height:100%; width:100%;overflow:hidden;">
        <div style="height:88%;width:100%;overflow:hidden;">
            <div style="width:100%;height:18%;">
                <fieldset>
                    <legend style="text-align:left; font-weight:bold;">  Spare Parts Request Informations : </legend>
                    <table  style="width: 100%;" cellspacing="1" cellpadding="1" >
                        <tr>
                            <td style="width:10%; text-align:right">
                                <label>
                                    Req. No 
                                </label>
                            </td>
                            <td style="width:25%; text-align:left">
                                @Html.TextBoxFor(model => model.PRNo, new { id = "txtPRNo",  style = "width: 47%;" })

                                <select id="cboPriortyLevel" style="width:50%"></select>
                            </td>

                            <td style="width:10%; text-align:right">
                                <label>
                                    Req. Date
                                </label>
                            </td>
                            <td style="width:20%; text-align:left">
                                <input type="text" style="width:100%;" id="txtPRDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                            <td style="width:15%; text-align:right;">
                                <label>
                                    Requirement Date:
                                </label>
                            </td>
                            <td style="width:20%; text-align:left">
                                <input type="text" style="width:100%;" id="txtRequirementDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                        </tr>
                       
                        <tr>
                            <td style="width:10%; text-align:right">
                                <label>
                                    Request By
                                </label>
                            </td>
                            <td style="width:25%; text-align:left"><input type="text" style="width:97%;" id="txtRequisition" disabled="disabled" /></td>
                            
                            <td style="width:10%; text-align:right">
                                <label>
                                    Department
                                </label>
                            </td>
                            <td style="width:25%; text-align:left;">
                                <input id="txtDepartmentName" style="width:80%" type="text" placeholder="Pick Department" />
                                <input id="btnDepartmentPicker_Collection" type="button" value="P" />
                            </td>
                            
                            <td style="width:10%; text-align:right">
                                <label>
                                    Remarks:
                                </label>
                            </td>
                            <td style="width:25%; text-align:left;">
                                <input type="text" style="width:100%;" id="txtNote" />
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
            <div style="width:100%">
                <table id="tblPRDetails" title="Purchase Requisition Detail" class="easyui-datagrid" style="width:100%;height:350px;"
                       data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbarPurchaseRequisitionDetail',onClickRow:onClickRow ">
                    <thead>
                        <tr>                            
                            <th field="ProductCode" width="12%" align="left">Part No</th>
                            <th field="ProductName" width="25%" align="left">Item Name</th>
                            <th field="ModelShortName" width="12%" align="left">Model No</th>
                            <th width="12%" align="left" data-options="field:'RequiredFor',editor:{type:'text',options:{precision:0}}">Required For</th>
                            <th width="12%" align="left" data-options="field:'Note',editor:{type:'text',options:{precision:0}}">Remarks</th>
                            <th field="UnitName" width="10%" align="left">Unit</th>
                            <th width="15%" align="right" data-options="field:'Qty',editor:{type:'numberbox',options:{precision:0}}">Required Qty</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbarPurchaseRequisitionDetail">
                    <label>Part:</label>
                    <input type="text" id="txtProductName" placeholder="Type Part No OR Name & Press Enter" style="width:180px;" /><a id="btnProductPick" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>
                    <label>Model:</label>
                    <input type="text" id="txtVehicleModel" placeholder="Type Model No & Press Enter" style="width:180px;" /><a id="btnVehicleModel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>
                    <a id="btnAddRequestDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                    <a id="btnDeleteDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                </div>
                <table border="0" cellpadding="0" cellspacing="0">
                    <tr>
                        <td style="width:830px;text-align:right;font-weight:bold;">Total:</td>
                        <td style="width:200px; text-align:right; font-weight:bold;"><label id="lblTotalQty"> </label> </td>
                    </tr>
                </table>
            </div>
        </div>
        <div style="width:100%; height:8%">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:75%; text-align:right"></td>
                        <td style="width:25%;text-align:right">
                            <a id="btnPrintPreview" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview</a>
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" onclick="Approve()" plain="true">Approve</a>
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
    <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
            </div>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winProcurementSpecification" style=" width:auto" class="easyui-window" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="height: 250px; width:100%;">
            <table id="tblProcurementSpec" class="easyui-datagrid" style="height:250px;width:100%" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" data-options="onClickRow: onClickRowProcurementSpec ,toolbar:'#toolbarPickSpec'">
                <thead>
                    <tr>
                        <th data-options="field:'Selected',checkbox:true"></th>
                        <th field="SpecName" width='40%' align="left">Specification Head</th>
                        <th data-options="field:'PRDescription', align:'left',editor:{type:'text'}" width='50%'>Description</th>

                    </tr>
                </thead>
            </table>
            <div id="toolbarPickSpec">
                <a id="btnSpecPick" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick Specification</a>
            </div>
        </div>

        <fieldset style="font-family:Tahoma">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px;width:100%; font-weight:bold;font-size:12">
                <tr>

                    <td style="width:85%; text-align:right"></td>
                    <td style="width: 15%">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="SaveProcurementSpec()">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseProcurementSpec()">Close</a>
                    </td>
                </tr>

            </table>
        </fieldset>


    </div>
</body>
</html>
<style>
    td,th{
        padding:2px;
    }
</style>
<script type="text/javascript">
    var _oPurchaseRequisition=null;
    var _sBaseAddress="";
    var _sPurchaseRequisitionHeader="";
    var _nMenuid=0;
    var _oPriortyLevels = [];
    var _nBOQ_Qty=0;
    var _nDeliveryFromStoreQty=0;
    var _oClientOperationSetting =  null;
    var _sDepartmentName = "";
    $(document).ready(function () {
        debugger;
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.MenuID]));
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oPurchaseRequisition =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oClientOperationSetting = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ClientOperationSetting));
        _oPriortyLevels = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PriortyLevels));
        _sPurchaseRequisitionHeader=sessionStorage.getItem("PurchaseRequisitionHeader");
        $('#divPurchaseRequisition').panel({ title:_sPurchaseRequisitionHeader});
        $("#cboPriortyLevel").icsLoadCombo({List: _oPriortyLevels,OptionValue:"id",DisplayText: "Value"});
        $('#txtRecapNo').data('OrderRecap',null);
        $('#txtVehicleModel').data('VehicleModel',{VehicleModelID:0});
        $('#btnApprove').hide();
        if(_sPurchaseRequisitionHeader=="View  Spare Parts Request")
        {
            $('#btnSave').hide();
            $('#btnApprove').hide();
            $('#btnDeleteDetail').hide();
        }
        if(_sPurchaseRequisitionHeader=="Approve  Spare Parts Request")
        {
            $('#btnSave').hide();
            $('#btnApprove').show();
        }
        RefreshControl();
        RefreshSummary();
        $('#btnAddSpecification').hide();
    });


    /*Department Picker*/
    $("#btnDepartmentPicker_Collection").click(function(e){
        debugger;
        var oTDepartment={id:1};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oTDepartment,
            ControllerName: "Department",
            ActionName: "getchildren",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DepartmentID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Department Name", width: 230, align: "left" };tblColums.push(oColumn);
                    var bmultiplereturn=false;

                    var oPickerParam = {
                        winid: 'winDept',
                        winclass:'clsDept',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDept',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Department List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDeptPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });
    $("#txtDepartmentName").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            DepartmentPicker();
        }
    });
    function DepartmentPicker()
    {
        debugger;
        var oTDepartment={id:1,text: $("#txtDepartmentName").val()};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oTDepartment,
            ControllerName: "Department",
            ActionName: "getchildren",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DepartmentID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Departmen tName", width: 230, align: "left" };tblColums.push(oColumn);
                    var bmultiplereturn=false;

                    var oPickerParam = {
                        winid: 'winDept',
                        winclass:'clsDept',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDept',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Department List'
                    };
                    $.icsPicker(oPickerParam);

                    IntializeDeptPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    function IntializeDeptPickerbutton(oPickerobj)
    {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oDept = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winDept')
            {
                debugger;
                if(oDept!=null){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    _oPurchaseRequisition.DepartmentID = oDept.DepartmentID;
                    $("#txtDepartmentName").val(oDept.Name);
                    $("#txtDepartmentName").addClass('fontColorOfPickItem');
                }
                else
                {
                    alert("Please select a Department.");
                }
            }
        });

        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            debugger
            if (e.which == 13)//enter=13
            {
                var oDept = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if (oPickerobj.winid == 'winDept')
                {
                    debugger;
                    if(oDept!=null){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();

                        _oPurchaseRequisition.DepartmentID = oDept.DepartmentID;
                        _oPurchaseRequisition.DepartmentName = oDept.DepartmentName;
                        $("#txtDepartmentName").val(oDept.Name);
                        $("#txtDepartmentName").addClass('fontColorOfPickItem');
                    }
                    else
                    {
                        alert("Please select a Department.");
                    }
                }
            }
        });
    }
    $("#btnDepartmentPickerClose,#btnDepartmentPickerClose_Collection").click(function(e){

        alert('Colosin');
        $("#winDepartmentPicker").icsWindow('close');
        $("#winDepartmentPicker_Collection").icsWindow('close');
    });
    $("#btnResetDepartmentPicker").click(function(e){
        $('#txtDepartment,#txtDepartmentName').val("");
        _sDepartmentId="";
        _sDepartmentName = "";
    });

    function ValidateInput()
    {
        if (parseInt($("#cboRequisitionType").val()) == 0) {
            alert("Please select Type.");
            $("#cboRequisitionType").addClass("errorFieldBorder");
            $("#cboRequisitionType").focus();
            return false;
        } else {
            $("#cboRequisitionType").removeClass("errorFieldBorder");
        }

        if (_oPurchaseRequisition.ContractorID == 0) {
            alert("Please select Contractor.");
            $("#txtContractorName").addClass("errorFieldBorder");
            $("#txtContractorName").focus();
            return false;
        } else {
            $("#txtContractorName").removeClass("errorFieldBorder");
        }

        if (parseInt($("#cboRequisitionType").val()) == 2 && _oPurchaseRequisition.BOQID<=0) {
            alert("Please select BOQ.");
            $("#txtBOQNo").addClass("errorFieldBorder");
            $("#txtBOQNo").focus();
            return false;
        } else {
            $("#txtBOQNo").removeClass("errorFieldBorder");
        }
        if (parseInt($("#cboPriortyLevel").val()) == 0) {
            alert("Please select Urgent Level.");
            $("#cboPriortyLevel").addClass("errorFieldBorder");
            $("#cboPriortyLevel").focus();
            return false;
        } else {
            $("#cboPriortyLevel").removeClass("errorFieldBorder");
        }


        var oPRDs=$("#tblPRDetails").datagrid('getRows');
        if (!oPRDs || oPRDs.length<=0) {
            alert("Please Add Requisition Details.");
            return false;
        }
        for(var i = 0;i<oPRDs.length;i++)
        {
            if(parseFloat(oPRDs[i].Qty)<=0 )
            {
                alert("Qty Should be Greater than 0 for Product ["+oPRDs[i].ProductName+"]");
                return false;
            }
        }

        return true;
    }
    function RefreshObject()
    {
        debugger;
        var oPurchaseRequisition= {
            PRID :_oPurchaseRequisition.PRID,
            PRNo :$('#txtPRNo').val(),
            PRDate: new Date($('#txtPRDate').datebox('getValue')),
            RequirementDate: new Date($('#txtRequirementDate').datebox('getValue')),
            Note : $("#txtNote").val(),
            PriortyLevelInt:$("#cboPriortyLevel").val(),
            BUID:sessionStorage.getItem('BUID'),
            PurchaseRequisitionDetails:$("#tblPRDetails").datagrid('getRows'),
            DepartmentID : _oPurchaseRequisition.DepartmentID
        };
        return oPurchaseRequisition;
    }
    $("#btnSave").click(function(){
        debugger;
        endEditing();
        if(!ValidateInput()) return false;
        var oPurchaseRequisition=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/PurchaseRequisition/Save",
            traditional: true,
            data:  JSON.stringify(oPurchaseRequisition),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oPurchaseRequisition = jQuery.parseJSON(data);
                if (oPurchaseRequisition.ErrorMessage==null || oPurchaseRequisition.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    //if(confirm("Are you want to entry specification ?!")){
                    //    _oPurchaseRequisition.PRID =oPurchaseRequisition.PRID;
                    //    $('#tblPRDetails').datagrid('loadData',oPurchaseRequisition.oPRSpecs);  
                    //}
                    // else{
                    var oPurchaseRequisitions = sessionStorage.getItem("PurchaseRequisitions");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oPurchaseRequisitions != null) {

                        oPurchaseRequisitions = jQuery.parseJSON(oPurchaseRequisitions);
                    }
                    else {
                        oPurchaseRequisitions = [];
                    }
                    if (nIndex != -1) {
                        oPurchaseRequisitions[nIndex] = oPurchaseRequisition;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oPurchaseRequisitions.length);
                        oPurchaseRequisitions.push(oPurchaseRequisition);
                    }
                    sessionStorage.setItem("PurchaseRequisitions", JSON.stringify(oPurchaseRequisitions));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oPurchaseRequisition.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });

    });
    $("#btnClose").click(function(){
        window.location.href =sessionStorage.getItem("BackLink");
    });
    function RefreshControl()
    {
        debugger;
        if(parseInt(_oPurchaseRequisition.PRID)>0)
        {
            $('#txtPRNo').prop('disabled',true);
        }
        $('#txtPRDate').datebox('setValue',_oPurchaseRequisition.PRDateST);
        $('#txtRequirementDate').datebox('setValue',_oPurchaseRequisition.RequirementDateSt);
        $('#txtNote').val(_oPurchaseRequisition.Note);
        $('#cboPriortyLevel').val(_oPurchaseRequisition.PriortyLevelInt);
        $('#txtDepartmentName').val(_oPurchaseRequisition.DepartmentName);
        if( _oPurchaseRequisition.PrepareByName!=null && _oPurchaseRequisition.PrepareByName!='')
        {
            $('#txtRequisition').val(_oPurchaseRequisition.PrepareByName);
        }
        if(_oPurchaseRequisition.PurchaseRequisitionDetails!=null)
        {
            DynamicRefreshList(_oPurchaseRequisition.PurchaseRequisitionDetails, 'tblPRDetails');
        }
        //debugger;
    }

    $("#btnPrintPreview").click(function() {

        if(_oPurchaseRequisition==null || _oPurchaseRequisition.PRID<=0)
        {
            alert("No Data!!! please add Data!");
            return false;
        }
        window.open(_sBaseAddress+ '/PurchaseRequisition/PrintoSparePartsRequest?id=' + _oPurchaseRequisition.PRID, "_blank");
    });
    function Approve()
    {
        //debugger;
        if(_oPurchaseRequisition==null || _oPurchaseRequisition.PRID<=0)
        {
            alert("without save can't Approve!");
            return false;
        }
        if(parseInt(_oPurchaseRequisition.ApproveBy)!=0)
        {
            alert("Sorry, Already Approved");
            return false;
        }
        if (!confirm("Confirm to Approve?")) return ;
        debugger;
        if(!ValidateInput()) return;
        var oPurchaseRequisition=RefreshObject();

        $.icsSave({
            BaseAddress: _sBaseAddress,
            Object: oPurchaseRequisition,
            ObjectId: oPurchaseRequisition.PRID,
            ControllerName: "SparePartsRequest",
            ActionName: "Approved",
            TableId: "",
            IsWinClose: false,
            Message: "Data Saved Successfully."

        },function (response){
            if(response.status && response.obj!=null){
                if(response.obj.PRID>0){
                    var oPurchaseRequisition =response.obj;
                    var oPurchaseRequisitions =sessionStorage.getItem("PurchaseRequisitions");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    debugger;
                    if(oPurchaseRequisitions!=null)
                    {
                        oPurchaseRequisitions = jQuery.parseJSON(oPurchaseRequisitions);
                    }
                    else
                    {
                        oPurchaseRequisitions=[];
                    }
                    if(nIndex!=-1)
                    {
                        oPurchaseRequisitions[nIndex]=oPurchaseRequisition;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oPurchaseRequisitions.length);
                        oPurchaseRequisitions.push(oPurchaseRequisition);
                    }
                    sessionStorage.setItem("PurchaseRequisitions", JSON.stringify(oPurchaseRequisitions));
                    window.location.href =sessionStorage.getItem("BackLink");
                }
            }
        });
    }

    //// Detail ////
    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#tblPRDetails').datagrid('validateRow', editIndex)) {
            $('#tblPRDetails').datagrid('endEdit', editIndex);
            $('#tblPRDetails').datagrid('selectRow', editIndex);
            var oPRDetail = $('#tblPRDetails').datagrid('getSelected');

            debugger;
            if (oPRDetail == null)
            {
                return;
            }


            if (oPRDetail.Qty<=0)
            {
                oPRDetail.Qty=0;
            }
            $('#tblPRDetails').datagrid('updateRow', { index: editIndex, row: oPRDetail });

            RefreshSummary();
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRow(index) {

        if (editIndex != index) {
            if (endEditing()) {
                $('#tblPRDetails').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oPRDetail= $('#tblPRDetails').datagrid('getSelected');
                _nBOQ_Qty=oPRDetail.BOQQty;
                _nDeliveryFromStoreQty=oPRDetail.DeliveryFromStoreQty;
                console.log(oPRDetail);
                if(oPRDetail.PRDetailID<=0 ){
                    $('#btnAddSpecification').hide();
                }
                else{
                    $('#btnAddSpecification').show();
                }
                editIndex = index;
            }
            else {
                $('#tblPRDetails').datagrid('selectRow', editIndex);
            }
        }
    }
    function UpdatePRDetail(oPRDetail, SelectedRowIndex)
    {
        debugger;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/PurchaseRequisition/SavePRDetail",
            traditional: true,
            data: JSON.stringify(oPRDetail),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var oPRDetail = jQuery.parseJSON(data);
                debugger;
                if (parseInt(oPRDetail.PRDetailID) > 0) {
                    $('#tblPRDetails').datagrid('updateRow', { index: SelectedRowIndex, row: oPRDetail });
                }
                else {
                    alert(oPRDetail.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function ValidateInputPurchaseRequisitionDetail()
    {
        if (parseInt(_oPurchaseRequisitionDetail.ProductID) <= 0)
        {
            alert("Please select Product"); $('#txtProductName').focus();
            $('#txtProductName').css("border", "1px solid #c00"); return false;
        }

        if (parseFloat($('#txtUnitPrice').numberbox('getValue')) <= 0)
        {
            alert("Unit Price should be Greater than Zero");
            $('#txtUnitPrice').focus();
            $('#txtUnitPrice').css("border", "1px solid #c00"); return false;
        }
        if (parseFloat($('#txtQty').numberbox('getValue')) <= 0)
        {
            alert("Quantity should be Greater than Zero");
            $('#txtQty').focus();
            $('#txtQty').css("border", "1px solid #c00"); return false;
        }
        return true;
    }
    function IsExist(nProductID, nVehicleModelID)
    {
        var oPRDetails = $('#tblPRDetails').datagrid('getRows');
        if(parseInt($("#cboRequisitionType").val())===2)
        {
            for (var i = 0; i < oPRDetails.length; i++) 
            {
                if (parseInt(oPRDetails[i].BOQDetailID) == parseInt(nProductID))
                {
                    return true;
                }
            }
        }
        else
        {
            for (var i = 0; i < oPRDetails.length; i++) 
            {
                if (parseInt(oPRDetails[i].ProductID) == parseInt(nProductID)  && parseInt(oPRDetails[i].VehicleModelID) == parseInt(nVehicleModelID))
                {
                    return true;
                }
            }
        }
        return false;
    }

    $("#txtVehicleModel").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oModel={
                ModelNo: $.trim( $("#txtVehicleModel").val())
            };
            PickVehileModel(oModel);
        }
        if (code == 8) //backspace=8
        {
            var txtVehicleModel = document.getElementById("txtVehicleModel");
            txtVehicleModel.value = '';
            txtVehicleModel.style.color = "black";
            txtVehicleModel.style.fontWeight = "normal";
            $('#txtVehicleModel').data('VehicleModel',{VehicleModelID:0});
        }
    });
    $("#btnVehicleModel").click(function () {
        var oModel={
            ModelNo: $.trim( $("#txtVehicleModel").val())
        };
        PickVehileModel(oModel);
    });
    function PickVehileModel(oModel)
    {
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oModel,
            ControllerName: "VehicleModel",
            ActionName: "GetVehicleModels",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0)
            {
                if (response.objs[0].VehicleModelID > 0) {
                    var tblColums = [];var oColumn ={};
                    oColumn= { field: "ModelNo", title: "ModelNo", width: 350, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ModelShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winVehicleModel',
                        winclass: 'clsVehicleModel',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblVehicleModel',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ModelNo',
                        windowTittle: 'Model List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert("Data Not Found");
                    return;
                }
            }
            else{
                alert("Data Not Found");
                return;
            }
        });

    }
    //Product Part
    $("#txtProductName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);

        if (code == 13) // Enter Press
        {

            var oProduct={
                BUID: sessionStorage.getItem('BUID'),
                ProductName:$("#txtProductName").val()
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProduct,
                ControllerName: "SparePartsRequest",
                ActionName: "GetProducts",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0)
                {
                    if (response.objs[0].ProductID > 0) {

                        var tblColums = [];var oColumn ={};
                        oColumn= { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Item Name", width: 250, align: "left" }; tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winProductPicker',
                            winclass: 'clsProductPicker',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblProductPicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'NameCode',
                            windowTittle: 'Product List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiple return
                    }
                    else {
                        alert("Data Not Found");
                        return;
                    }
                }
                else
                {
                    alert("Data Not Found");
                    return;

                }
            });
        }
        if (code == 8) //backspace=8
        {
            //var txtProductName = document.getElementById("txtProductName");
            //txtProductName.value = '';
            txtProductName.style.color = "black";
            txtProductName.style.fontWeight = "normal";
        }
    });
    $("#btnProductPick").click(function () {
        var oProduct={
            BUID: sessionStorage.getItem('BUID'),
            ProductName:''
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "SparePartsRequest",
            ActionName: "GetProducts",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0)
            {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];var oColumn ={};
                    oColumn= { field: "ProductCode", title: "Part No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Item Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert("Data Not Found");
                    return;
                }

            }
            else{
                alert("Data Not Found");
                return;
            }
        });

    });
    $('#btnOrderRecapPick').click(function()
    {
        GetOrderRecaps("");
    });
    $("#txtRecapNo").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);

        if (code == 13) // Enter Press
        {
            if($.trim($('#txtRecapNo').val())==null || $.trim($('#txtRecapNo').val())=="")
            {
                alert("Type Recap No and Press Enter");
                $('#txtRecapNo').focus();
                return;
            }
            GetOrderRecaps($.trim($('#txtRecapNo').val()));
        }else if(code==8)//Backspace
        {
            $("#txtRecapNo").removeClass('fontColorOfPickItem');
            $('#txtRecapNo').data('OrderRecap',null);
        }
    });

    function GetOrderRecaps(txtRecapNo)
    {
        var oOrderRecap =  {BUID: sessionStorage.getItem('BUID'), OrderRecapNo:txtRecapNo};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oOrderRecap,
            ControllerName: "OrderRecap",
            ActionName: "GetOrderRecapsByBU",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].OrderRecapID > 0) {
                    var tblColums = []; var oColumn = { field: "StyleNo", title: "Style No", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "OrderRecapNo", title: "Recap No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "DeptName", title: "Dept", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "SessionName", title: "Session", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Product Name", width:80, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winOrderRecaps',
                        winclass: 'clsOrderRecap',
                        winwidth: 800,
                        winheight: 500,
                        tableid: 'tblOrderRecaps',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'StyleNo',
                        searchingbyfieldCaption:'Search By Style No',
                        windowTittle: 'Order Recap List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function ()
        {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }
    function SetPickerValueAssign(oPickerobj)
    {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid === 'winProductPicker')
        {
            $("#txtProductName").val(oreturnObj.ProductName);
            $("#txtProductName").addClass('fontColorOfPickItem');
            if(parseInt(oreturnObj.ProductID)>0)
            {
                $('#txtProductName').data('Product',oreturnObj);
            }
        }
        else if (oPickerobj.winid=='winVehicleModel')
        {
            debugger;
            if(parseInt(oreturnObj.VehicleModelID)>0)
            {
                $('#txtVehicleModel').val(oreturnObj.ModelShortName+'['+ oreturnObj.ModelNo+']');
                $('#txtVehicleModel').data('VehicleModel',oreturnObj);
                $("#txtVehicleModel").addClass('fontColorOfPickItem');
                $("#txtVehicleModel").focus();
            }
        }
        else if (oPickerobj.winid=='winOrderRecaps')
        {
            if(parseInt(oreturnObj.OrderRecapID)>0)
            {
                $('#txtRecapNo').val(oreturnObj.StyleNo+'['+ oreturnObj.OrderRecapNo+']');
                $('#txtRecapNo').data('OrderRecap',oreturnObj);
                $("#txtRecapNo").addClass('fontColorOfPickItem');
                $("#txtRecapNo").focus();
            }
        }
    }
    
    $("#btnAddRequestDetail").click(function()
    {
        if($('#txtProductName').data('Product')==null)
        {
            alert('Please Pick A Spare Parts!!'); return;
        }
        var nProductID = parseInt($('#txtProductName').data('Product').ProductID);
        var nVehicleModelID  =parseInt($('#txtVehicleModel').data('VehicleModel').VehicleModelID); 

        if(!IsExist(nProductID, nVehicleModelID))
        {
            var oPRDetail = {
                PRDetailID:0,
                OrderRecapID:$('#txtRecapNo').data('OrderRecap')==null?0:$('#txtRecapNo').data('OrderRecap').OrderRecapID,
                BuyerName:$('#txtRecapNo').data('OrderRecap')==null?"":$('#txtRecapNo').data('OrderRecap').BuyerName,
                OrderRecapNo:$('#txtRecapNo').data('OrderRecap')==null?"":$('#txtRecapNo').data('OrderRecap').OrderRecapNo,
                StyleNo :$('#txtRecapNo').data('OrderRecap')==null?"":$('#txtRecapNo').data('OrderRecap').StyleNo,
                PRID:_oPurchaseRequisition.PRID,
                ProductID:$('#txtProductName').data('Product').ProductID,
                ProductCode:$('#txtProductName').data('Product').ProductCode,
                ProductName:$('#txtProductName').data('Product').ProductName,
                Qty:00,
                Note:"",
                VehicleModelID:$('#txtVehicleModel').data('VehicleModel').VehicleModelID,
                ModelShortName:$('#txtVehicleModel').data('VehicleModel').ModelShortName,
                MUnitID:$('#txtProductName').data('Product').MeasurementUnitID,
                UnitName:$('#txtProductName').data('Product').MUnitName
            };
            $('#tblPRDetails').datagrid('appendRow',oPRDetail);


            $('#txtProductName').data('Product',null);
            $('#txtVehicleModel').data('VehicleModel',{VehicleModelID:0});
            var txtVehicleModel = document.getElementById("txtVehicleModel");
            txtVehicleModel.value = '';
            txtVehicleModel.style.color = "black";
            txtVehicleModel.style.fontWeight = "normal";
            var txtProductName = document.getElementById("txtProductName");
            txtProductName.value = '';
            txtProductName.style.color = "black";
            txtProductName.style.fontWeight = "normal";
        }else
            alert("Sorry, This Parts Already Exists!!")
    });
    function RefreshSummary()
    {
        var oPRDetails = $('#tblPRDetails').datagrid('getRows');
        var nTotalQty = 0;
        for(var i = 0; i<oPRDetails.length;i++)
        {
            nTotalQty+=parseFloat(oPRDetails[i].Qty);
        }
        document.getElementById('lblTotalQty').innerHTML = formatPrice(nTotalQty,0);
    }

    $("#btnDeleteDetail").click(function () {
        var oPRDetail = $('#tblPRDetails').datagrid('getSelected');
        if (oPRDetail == null) {
            alert("Invalid Selection!!! please select a valid Item!");
            return false;
        }
        if (!confirm("Confirm to Remove?")) return;
        var SelectedRowIndex = $('#tblPRDetails').datagrid('getRowIndex', oPRDetail);
        $('#tblPRDetails').datagrid('deleteRow',SelectedRowIndex);
        RefreshSummary();
        alert("Removed sucessfully");
        editIndex = undefined;
    });


    $("#btnAddSpecification").click(function () {
        var getSelection = $('#tblPRDetails').datagrid('getSelected');
         
        if(getSelection==null || getSelection.ProductID<=0)
        {
            alert("Please select a Item !");
            return false;
        }
        if(getSelection.PRDetailID <=0){
            alert("Please Save Purchase Order Detail !");
            return false;

        }
        else
        {
         
            var obj = {
                PRDetailID: getSelection.PRDetailID ,
                ProductID : getSelection.ProductID

            }
             
            $.ajax
              ({
                  type: "POST",
                  dataType: "json",
                  url : _sBaseAddress+  "/PurchaseRequisition/ProductSpecHeadFORPOByProduct",
                  data:  JSON.stringify(obj),
                  contentType: "application/json; charset=utf-8",
                  success: function (data) {
                      $("#winProcurementSpecification").icsWindow('open',"Procurement Specification For Product Name :" +getSelection.ProductName);
                      $('#tblProcurementSpec').datagrid('loadData',data); 
                      if (data.length>0)
                      {
                          for(var i=0; i< data.length ;i++){
                              if(data[i].PRSpecID > 0)
                                  $('#tblProcurementSpec').datagrid("checkRow", i);
                          }
                           
                      }
                  
                  },
                  error: function (xhr, status, error)
                  {
                      alert(error);
                  }
              });


        }
           
    });
        
    function CloseProcurementSpec()
    {
        $('#winProcurementSpecification').icsWindow('close');
    }
    function SaveProcurementSpec()
    {
        endEditingPOSpec();
        var oPRSpecs=$('#tblProcurementSpec').datagrid('getChecked');
        if(oPRSpecs.length<0)
        {
            alert("No Selection found");
            return;
        }
          
        else{

            for(var i=0; i<oPRSpecs.length; i++){
                if(oPRSpecs[i].PRDescription == ""){
                    alert("Description Can not empty");
                    return;
                }
            }
            var obj={
                oPRSpecs:oPRSpecs
            }
            debugger;
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/PurchaseRequisition/IUDPRSpec",
                traditional: true,
                data:  JSON.stringify(obj),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var result= jQuery.parseJSON(data);
                    if(result.ErrorMessage ==""){
                        alert("Data Save Successfully ");
                        CloseProcurementSpec();
                    }
                    else{
                        alert(result.ErrorMessage);
                    }
                      
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });

        }
            

    }
    var editIndexPQSpec = undefined;
    function endEditingPOSpec(){
        if (editIndexPQSpec == undefined){return true}
        if ($('#tblProcurementSpec').datagrid('validateRow', editIndexPQSpec)){

            $('#tblProcurementSpec').datagrid('endEdit', editIndexPQSpec);
            editIndexPQSpec = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRowProcurementSpec(index){

        if (editIndexPQSpec != index)
        {
            if (endEditingPOSpec())
            {
                $('#tblProcurementSpec').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndexPQSpec = index;
            }
            else
            {
                $('#tblProcurementSpec').datagrid('selectRow', editIndexPQSpec);
            }
        }
    }

    function SetPickerValue_Spec(oPickerobj)
    {
        var oreturnobj = "", oreturnobjs = [] ;
        if(oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        }else
        {
            oreturnobj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        
        $("#"+oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
       
        /*--Set Specification? ----*/
        if (oPickerobj.winclass == 'clsSpecHeadPicker')
        {
            if (oreturnobjs != null && oreturnobjs.length> 0)
            {
            
                var getSelection = $('#tblPRDetails').datagrid('getSelected');
                var indexSeq=$('#tblProcurementSpec').datagrid("getRows").length  ;
                var ProductSpecHeads =[];
                for (i = 0; i < oreturnobjs.length; i++)
                {
                    ++indexSeq;
                    ProductSpecHeads.push({ProductSpecHeadID : 0 , ProductID:getSelection.ProductID,SpecHeadID:oreturnobjs[i].SpecHeadID ,Sequence:indexSeq});
                }
                var oSpecHead={
                    ProductSpecHeads:ProductSpecHeads
                }
                
                $.ajax
                  ({
                      type: "POST",
                      dataType: "json",
                      url : _sBaseAddress+  "/ProductSpecHead/Save",
                      data:  JSON.stringify(oSpecHead),
                      contentType: "application/json; charset=utf-8",
                      success: function (data) {
                          if (data.length>0)
                          {
                           
                              var obj = {
                                  PRDetailID: getSelection.PRDetailID ,
                                  ProductID : getSelection.ProductID

                              }
             
                              $.ajax
                                ({
                                    type: "POST",
                                    dataType: "json",
                                    url : _sBaseAddress+  "/PurchaseRequisition/ProductSpecHeadFORPOByProduct",
                                    data:  JSON.stringify(obj),
                                    contentType: "application/json; charset=utf-8",
                                    success: function (data) {
                                        $("#winProcurementSpecification").icsWindow('open',"Procurement Specification For Product Name :" +getSelection.ProductName);
                                        $('#tblProcurementSpec').datagrid('loadData',data); 
                                        if (data.length>0)
                                        {
                                            for(var i=0; i< data.length ;i++){
                                                if(data[i].PRSpecID > 0)
                                                    $('#tblProcurementSpec').datagrid("checkRow", i);
                                            }
                           
                                        }
                  
                                    },
                                    error: function (xhr, status, error)
                                    {
                                        alert(error);
                                    }
                                });
             
                          }
                          

                      },
                      error: function (xhr, status, error)
                      {
                          alert(error);
                      }
                  });
                
            } 
        }
    }
    function IntializePickerbutton_Spec(oPickerobj)
    {
 
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            SetPickerValue_Spec(oPickerobj);
        });
        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValue_Spec(oPickerobj);
            }
        });
    }
    $("#btnSpecPick").click(function () {
        debugger;
      
        var getSpecHeads ="";
        var gridData =$('#tblProcurementSpec').datagrid("getRows");
        if(gridData.length>0){
            for(var i=0; i<gridData.length; i++){
                getSpecHeads += gridData[i].SpecHeadID +" , ";
            }
        }
         
        var oSpecHead ={
            Params:getSpecHeads
        }
          
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oSpecHead,
            ControllerName: "ProductSpecHead",
            ActionName: "SpecHeadSearchByProduct",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                debugger;
                if (response.objs[0].SpecHeadID> 0) {
                    var tblColums = [], searcingField = "", windowTittle = "";
                    var oColumn = { field: 'SpecName', name: 'Head Name', width: '50%', enableSorting: false }; tblColums.push(oColumn);
                     
                    var oPickerParam = {
                        winid: 'winSpecHeadPicker',
                        winclass: 'clsSpecHeadPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblSpecHeadPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        //searchingbyfieldName: 'SpecName',
                        windowTittle: 'Specification Head List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton_Spec(oPickerParam);//multiple return

                        
                }
            }
        });
    });

</script>