<html>
<head>
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
</head>
<body>
    @model ESimSol.BusinessObjects.ProductUniqueIdentification
    <div style="font-family: Tahoma">
        <table border="0" cellspacing="2" cellpadding="2">
            <tr>
                <td style="background-color: #CFB53B; text-align: center; width: 460px; color: White">
                    <label id="lblHeaderName" style="font-size: 15px; font-weight: bold; text-decoration: Underline;
                        width: 460px">
                        Search Product Unique Identification</label>
                </td>
            </tr>
        </table>
        <fieldset style="width: 365px; text-align: right">
            <div style="height: 430px; overflow: auto">
                <table border="0">
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Warranty Start:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.DropDownList("cboOpenDate", new SelectList(Enum.GetValues(typeof(ICS.Core.Utility.EnumCompareOperator))), new { id = "cboOpenDate", style = "width: 215px;", @class = "_select_changeA" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td id="fromDate" style="width: 155px; font-size: 13px; text-align: right">
                            Date From
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBox("txtOpenStartDate", DateTime.Today.ToString("dd MMM yyyy"), new { style = "width: 215px", id = "txtOpenStartDate" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right" id="enddateT">
                            To
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right" id="enddate">
                            @Html.TextBox("txtOpenEndDate", DateTime.Today.ToString("dd MMM yyyy"), new { style = "width: 215px", id = "txtOpenEndDate" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 165px; font-size: 13px; text-align: right">
                            Warranty Period:
                        </td>
                        <td style="width: 230px; text-align: right">
                            @Html.TextBox("txtWarrantyPeriod", "", new { style = "width: 100px", id = "txtWarrantyPeriod" })
                            Type:
                            <select id="CboType">
                                <option value="0">None</option>
                                <option value="1">Year</option>
                                <option value="2">Month</option>
                            </select>
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Category:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBox("ProductCategoryName", "", new { style = "width: 215px", id = "txtProductCategoryName" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Product Name:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBox("txtProductName", "", new { style = "width: 215px", id = "txtProductName" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Manufacturer:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBox("txtManufacture", "", new { style = "width: 215px", id = "txtManufacture" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Origin:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.MadeIn, new { style = "width:215px", id = "txtOrigin" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Serial:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBox("txtProductSerial", "", new { style = "width: 215px", id = "txtProductSerial" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Tag No:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBox("txtTagNo", "", new { style = "width: 215px", id = "txtTagNo" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Location:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBox("txtLocationName", "", new { style = "width: 215px", id = "txtLocationName" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Lot:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBox("txtLotName", "", new { style = "width: 215px", id = "txtLotName" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Status:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.DropDownListFor(model => model.State, new SelectList(Enum.GetValues(typeof(ICS.Core.Utility.EnumAssetStatus))), new { id = "cboAssetType", style = "width: 215px;" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Activity:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            <select id="CboActivity">
                                <option value="0">None</option>
                                <option value="1">Active</option>
                                <option value="2">DeActive</option>
                            </select>
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td>
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr style="visibility: hidden">
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            @Html.TextBox("txtLocationID", "", new { style = "width: 5px", id = "txtLocationID" })
                            @Html.TextBox("txtLotID", "", new { style = "width: 5px", id = "txtLotID" })
                        </td>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            @Html.TextBoxFor(model => model.ProductCategoryID, new { style = "width: 5px;", id = "txtProductCategoryID" })
                            @Html.TextBoxFor(model => model.ProductID, new { style = "width: 5px;", id = "txtProductID" })
                            @Html.TextBoxFor(model => model.AssetType, new { style = "width: 5px;", id = "txtAssetType" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2" style="width: 355px; font-size: 13px; text-align: right">
                            <input type="button" value="Search" id="btnOk" style="width: 60px;" />
                            <input type="button" value="Cancel" id="btnClose" style="width: 60px;" />
                        </td>
                    </tr>
                </table>
            </div>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">

 var oReturnObject = new Object();
 oReturnObject.ControlData = "";
 $(document).ready(function () {
     //debugger;
     initializeDatepicker(); // this function is in GlobalScript.js. used for date picker.
     objmodel =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
     HideUnhideDatePiker(); 
     $("#txtProductCategoryName")[0].value = 'Press Enter';
     $("#txtProductName")[0].value = 'Press Enter';  
     $("#txtLocationName")[0].value = 'Press Enter';   
     $("#txtLotName")[0].value = 'Press Enter';        
     document.getElementById('txtWarrantyPeriod').value = 0;
     document.getElementById('txtProductSerial').value = 0;
     document.getElementById('txtTagNo').value = 0;
     $("#txtWarrantyPeriod").keydown(function (event) {
     
         if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||
        
            (event.keyCode == 65 && event.ctrlKey === true) ||
        
            (event.keyCode >= 35 && event.keyCode <= 39)) {
          
             return;
         }
         else {
            
             if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
                 event.preventDefault();

             }
         }
     })

 });  

// Allows only Numeric on text box
$("#txtProductSerial").keydown(function(event) 
{
        if ( event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || 
          
            (event.keyCode == 65 && event.ctrlKey === true) || 
            
            (event.keyCode >= 35 && event.keyCode <= 39)) {
              
                 return;
        }
        else 
        {
           
            if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105 )) {
            event.preventDefault(); 
        }   
 }
 });

// Allows only Numeric on text box
$("#txtTagNo").keydown(function(event) 
{
        
        if ( event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || 
            
            (event.keyCode == 65 && event.ctrlKey === true) || 
            
            (event.keyCode >= 35 && event.keyCode <= 39)) {
               
                 return;
        }
        else 
        {
           
            if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105 )) {
            event.preventDefault(); 
        }   
 }
 });


// Load Location on a POPUP window
$('#txtLocationName').keypress(function (e) {
    //////debugger;   
        var keyCode = e.keyCode || e.which;
        if (keyCode == 13) {           
        var oParameter = new Object();
        oParameter.MultipleReturn = false;          
        var url = '@Url.Action("LocationPiker", "Location", new { AccountHead = "2~1" })';
        var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:470px;dialogWidth:480px;dialogLeft:300;dialogTop:130;center:yes;resizable:no;status:no;scroll:no'); 
       // ////debugger;
        if (oReturnObject != null) 
        {         
          document.getElementById('txtLocationName').value = oReturnObject.Name; 
          document.getElementById('txtLocationID').value = oReturnObject.LocationID;         
          $('#txtLotName').focus();
                      
        }
        else 
         {
                $('#txtLocationName').focus();
         }
            return false;
       }

   });

// Allow only Enter
 $('#txtLocationName').keydown(function (e) 
    {var keyCode = e.keyCode || e.which;       
        if (keyCode != 13) {return false;}
    });



function HideUnhideDatePiker()
{
//debugger;
 var DateType = $("#cboOpenDate").val();
//        if (DateType == "EqualTo" || DateType == "NotEqualTo" || DateType == "GreaterThen" || DateType == "SmallerThen") {            
//            document.getElementById("txtOpenEndDate").style.display = 'none';
//            document.getElementById("enddateT").style.display = 'none';
//            document.getElementById("fromDate").style.display = 'none';         
//        }
        if (DateType == "None" ) 
        {            
            document.getElementById("txtOpenEndDate").style.display = 'none';
            document.getElementById("enddateT").style.display = 'none'; 
            document.getElementById("txtOpenStartDate").style.display = 'none';
            document.getElementById("fromDate").style.display = 'none';        
        }
//        if (DateType == "Between" ||DateType == "NotBetween"  ) 
//        {
//            document.getElementById("enddateT").style.display = '';  
//            document.getElementById("txtOpenEndDate").style.display = '';
//        }
}




// Load Lot on a POPUP window
$('#txtLotName').keypress(function (e) {
        //////debugger;
        var nProductID = $("#txtProductID").val();
        if(nProductID<=0)
        {alert("Please Provide Product Name First"); $("#txtProductName").focus(); return false} 
        var nLocationID = $("#txtLocationName").val();  
        if(nLocationID<=0)
        {alert("Please Provide Location First"); $("#txtLocationID").focus(); return false} 
        var keyCode = e.keyCode || e.which;
        if (keyCode == 13) {    
        // ////debugger;       
            var oParameter = new Object();
            oParameter.Name = "LotList";
            oParameter.MultipleReturn = false;
            var url = "/Lot/LotPiker?nProductID=" + nProductID + "&nLocationID=" + nLocationID; // paramiter change on 16 March 13            
            var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:470px;dialogWidth:480px;dialogLeft:300;dialogTop:130;center:yes;resizable:no;status:no;scroll:no'); 
           //////debugger;
                if (oReturnObject != null) 
                {
                    document.getElementById('txtLotName').value = oReturnObject.LotNo;
                    document.getElementById('txtLotID').value = oReturnObject.LotID;                  
                    $("#txtLotName").focus();            
                }
            else {
                    $('#txtLocationName').focus();
                 }
            return false;
        }
});

$('#txtLotName').keydown(function (e) 
{
    var keyCode = e.keyCode || e.which;       
    if (keyCode != 13) {return false;}
})




$('#txtProductCategoryName').keydown(function (e) 
    {var keyCode = e.keyCode || e.which;        
        if (keyCode != 13) {return false;}            
});

$('._select_changeA').change(function () {
        //debugger
        var DateType = $("#cboOpenDate").val();
        if (DateType == "EqualTo" || DateType == "NotEqualTo" || DateType == "GreaterThen" || DateType == "SmallerThen") {            
            document.getElementById("txtOpenEndDate").style.display = 'none';
            document.getElementById("enddateT").style.display = 'none';   
            document.getElementById("txtOpenStartDate").style.display = '';
            document.getElementById("fromDate").style.display = '';       
        }
        if (DateType == "None" ) 
        {            
            document.getElementById("txtOpenEndDate").style.display = 'none';
            document.getElementById("enddateT").style.display = 'none'; 
            document.getElementById("txtOpenStartDate").style.display = 'none';
            document.getElementById("fromDate").style.display = 'none';        
        }
        if (DateType == "Between" ||DateType == "NotBetween"  ) 
        {
            document.getElementById("txtOpenStartDate").style.display = '';
            document.getElementById("fromDate").style.display = ''; 
            document.getElementById("enddateT").style.display = '';  
            document.getElementById("txtOpenEndDate").style.display = '';
        }
});


// To Load Product name in Piker
$('#txtProductName').keypress(function (e) {
        //////debugger;
        var nProductCategoryID = $("#txtProductCategoryID").val();
        if(nProductCategoryID<=0)
        {
            alert("Please Select Product Category First");
             $('#txtProductCategoryName').focus(); 
            return false
        }
        var keyCode = e.keyCode || e.which;
        if (keyCode == 13) {           
            var oParameter = new Object();
            oParameter.Name = "ProductList";
            oParameter.MultipleReturn = false;                  
            var url = "/Product/ProductPiker?nProductCategoryID=" + nProductCategoryID;   // passing value of Product Category to Controller
            var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:470px;dialogWidth:480px;dialogLeft:300;dialogTop:130;center:yes;resizable:no;status:no;scroll:no'); 
           // var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:550px;dialogWidth:500px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');
            //////debugger;
            if (oReturnObject != null) 
            {  
                 document.getElementById('txtProductName').value = oReturnObject.ProductName;
                 document.getElementById('txtProductID').value = oReturnObject.ProductID;
                 $('#txtManufacture').focus();
             }           
           
            else 
                {
                  $('#txtProductName').focus(); 
                }
            return false;
        }
});

$('#txtProductName').keydown(function (e) 
    {var keyCode = e.keyCode || e.which;       
        if (keyCode != 13) {return false;}
});




// Load Product Category on a Tree View

$('#txtProductCategoryName').keypress(function (e) {
        ////debugger;
        
        var keyCode = e.keyCode || e.which;
        if (keyCode == 13) 
        {           
            var oParameter = new Object();
            oParameter.Name = "ProductCategory";
            oParameter.MultipleReturn = false;     
            var url = '@Url.Action("ProductCategoryTree", "ProductCategory")';
            var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:530px;dialogWidth:460px;dialogLeft:300;dialogTop:60;center:yes;resizable:no;status:no;scroll:no'); 
          
            ////debugger;
            if (oReturnObject != null) 
            {   
                 var Attribute =  oReturnObject.attributes.split("~")[0];                 
                 var AssetType = oReturnObject.attributes.split("~")[1];
                 var AssetTypeInString = oReturnObject.attributes.split("~")[2];

                if (Attribute == "True") 
                {
                     
                     document.getElementById('txtProductCategoryName').value = oReturnObject.text;                
                     document.getElementById('txtProductCategoryID').value = oReturnObject.id;
                     
                }
                else
                {
                    alert("Select Last Layer Only");
                }

         }           
           
            else 
                {
                  $('#txtProductCategoryName').focus(); 
                }
            return false;
        }
    })

//------------------

$("#btnOk").click(function(){
   //debugger;
       // alert('Hello World !!');
        var obj = window.dialogArguments;
        var edo = document.getElementById("CboActivity");
        var activitycheck = edo.options[edo.selectedIndex].innerHTML;   
        debugger;
        var ctype = document.getElementById("CboType");
        var monthcheck = ctype.options[ctype.selectedIndex].innerHTML; 
            
        var sPCName = $("#txtProductCategoryName").val();
        if(sPCName=="Press Enter")
        {
            sPCName ="";
        }
        var sProductName = $("#txtProductName").val();
        if(sProductName=="Press Enter")
        {
            sProductName ="";
        }
        var sManufacture = $("#txtManufacture").val();
        var sOrigin = $("#txtOrigin").val();
        var nWarrantyPeriod = $("#txtWarrantyPeriod").val();

        if(nWarrantyPeriod>0 && monthcheck =="None")
        {
            alert("Provide both Warranty Period and Warrenty Type");
            $('#txtWarrantyPeriod').focus();
            return;
        }
        var nProductSerial = $("#txtProductSerial").val();
        var nTagNo = $("#txtTagNo").val();
        var Date = document.getElementById("cboOpenDate");
        var dDateType = Date.options[Date.selectedIndex].innerHTML;
        var dateopen = $("#txtOpenStartDate").val();
        var ddateclose = $("#txtOpenEndDate").val();
//        debugger;
//        if(dateopen>ddateclose & dDateType=="Between")
//        {
//            alert("For Between, Start Date Must be smaller then End Date");
//            return;
//        }
//        if(dateopen>ddateclose & dDateType=="NotBetween")
//        {
//            alert("For Not Between, Start Date Must be smaller then End Date");
//            return;
//        }
        var sLotNo = $("#txtLotName").val();
        var sLocationName = $("#txtLocationName").val();
          
                 
        if (activitycheck == "None")
        { 
            var bIsactive = 4 
        }
        if (activitycheck == "Active")
        { 
            var bIsactive = 1
        }
        if (activitycheck == "DeActive")
        { 
            var bIsactive = 0 
        }
        var statuscheck = document.getElementById("cboAssetType");
        var assetstatus = statuscheck.options[statuscheck.selectedIndex].innerHTML;
        if (assetstatus == "None")
        { 
            var statuscheck = 0
        }
        if (assetstatus == "InStock")
        { 
            var statuscheck = 1 
        }
        if (assetstatus == "InUserHand")
        {
             var statuscheck = 2 
        }
        if (assetstatus == "InService")
        { 
            var statuscheck = 3 
        }
        if (assetstatus == "Retirement")
        { 
            var statuscheck = 4 
        }
        ////debugger;        
        var sTempString = sPCName + '~' + sProductName + '~' + sManufacture + '~' + sOrigin + '~' + nWarrantyPeriod + '~' + nProductSerial + '~' + nTagNo + '~' + dDateType + '~' + $("#txtOpenStartDate").val() + '~' + $("#txtOpenEndDate").val() + '~' + bIsactive + '~' + statuscheck + '~' + sLotNo + '~' + sLocationName+ '~'+ monthcheck;
        oReturnObject.ControlData = sTempString;
        window.returnValue = oReturnObject;
        window.close();
});

function clearTextBox()
{
   document.getElementById("textboxId").value= "";
   
}

$('#btnClose').click(function (e) {
            window.returnValue = oReturnObject;
            window.close();
});

</script>
