<!DOCTYPE html>
<body>
    @model ESimSol.BusinessObjects.HIASetup
    <div class="menuMainCollectionTable">
        <div  class="easyui-panel" title="HIA Setup" style="font-family:Tahoma;text-align:center;  width:100%;height:100%;">
            <fieldset style="font-size:12px; text-align:center;width:98%;">
                <table border="0" style="font-size:12px; text-align:center; width:100%;">
                    <tr>
                        <td style="width:200px; text-align:right">Setup Name:</td>
                        <td style="width:400px; text-align:left">@Html.TextBoxFor(model => model.SetupName, new { style = "width: 400px;font-size:12", id = "txtSetupName", disabled = "disabled" })</td>
                    </tr>
                    <tr>
                        <td style="width:200px; text-align:right">
                            DB Table :
                        </td>
                        <td style="width:400px;text-align:left">
                            @Html.TextBoxFor(model => model.DBTable, new { style = "width: 340px;", id = "txtDBTable", disabled = "disabled" }) <input type="button" id="btnDBTable" style=" width:55px; font-size:12px;" value="DB View"  disabled="disabled" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:200px; text-align:right">
                            Key Column :
                        </td>
                        <td style="width:400px;text-align:left">
                            @Html.TextBoxFor(model => model.KeyColumn, new { style = "width: 400px;", id = "txtKeyColumn" , disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:200px; text-align:right">
                            File Number Column:
                        </td>
                        <td style="width:400px;text-align:left">
                            @Html.TextBoxFor(model => model.FileNumberColumn, new { style = "width: 400px;", id = "txtFileNumberColumn", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:200px; text-align:right">
                            Sender Column :
                        </td>
                        <td style="width:400px;text-align:left">
                            @Html.TextBoxFor(model => model.SenderColumn, new { style = "width: 400px;", id = "txtSenderColumn", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:200px; text-align:right">
                            Receiver Column :
                        </td>
                        <td style="width:400px;text-align:left">
                            @Html.TextBoxFor(model => model.ReceiverColumn, new { style = "width: 400px;", id = "txtReceiverColumn", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:200px; text-align:right">
                           Time Event :
                        </td>
                        <td style="width:400px;text-align:left">
                            <table>
                                <tr>
                                    <td style="width:200px;"><select id="cboTimeEventType" style="width: 200px;font-size:12px;text-align:left;">
                                                                                    <option value="0">ON_Date</option>
                                                                                    <option value="1">After_Action</option>
                                                                                    <option value="2">Before_Action</option>
                                                            </select>                                     
                                    <td style="width:80px; text-align:right;">Counter:</td>
                                    <td style="width:120px;text-align:left; "><input type="number" style="width:70px;" id="txtTimeCounter" min="0" max="10000">&nbsp;Days</td>
                                </tr>
                            </table>
                            
                        </td>
                    </tr>
                    <tr>
                        <td style="width:200px; text-align:right">
                            Operation Name:
                        </td>
                        <td style="width:400px;text-align:left">
                            @Html.TextBoxFor(model => model.OperationName, new { style = "width: 100px;", id = "txtOperationName" })
                            <label id="lblOperationValue" style="font-size:11px; width:100px">Operation Value: </label>
                            @Html.TextBoxFor(model => model.OperationValue, new { style = "width: 200px;", id = "txtOperationValue" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:200px; text-align:right">
                            Where Cluse :
                        </td>
                        <td style="width:400px;text-align:left">
                            @Html.TextBoxFor(model => model.WhereClause, new { style = "width: 400px;", id = "txtWhereCluse", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:200px; text-align:right">
                            Message Body text :
                        </td>
                        <td style="width:400px;text-align:left">
                            @Html.TextBoxFor(model => model.MessageBodyText, new { style = "width: 400px;", id = "txtMessageBodytext", disabled = "disabled" })
                        </td>
                    </tr>
                </table>
            </fieldset>
            <div style="margin-left:2px; height:180px;">
                <table id="tblHIAUserAssigns" title="User Assign" class="easyui-datagrid" style="width:1010px;height:180px" fit="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
                    <thead>
                        <tr>
                            <th field="LogInID" width="270" align="left">Log In ID</th>
                            <th field="UserName" width="200" align="left">User Name</th>
                            <th field="LocationName" width="270" align="left">Location</th>

                        </tr>
                    </thead>
                </table>
                <div id="toolbar">
                    <a id="btnAddUser" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" >Add</a>
                    <a id="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="Remove()">Remove</a>
                </div>
            </div>
            <fieldset style="width:98%;">
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px;width:100%; font-weight:bold;font-size:12;">
                    <tr>
                        <td style="width:86%; text-align:right"></td>
                        <td style="width:6%;font-size:13px;"><a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a></td>
                        <td style="width:8%;font-size:13px;"><a id="btnHIAClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a></td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
</body>
</!DOCTYPE>

<script type="text/javascript">
    var _oHIASetup=null;
    var _oHIAUserAssigns = [];
    var _sBaseAddress="";
    var _nOrderStepID = 0;
    var _objName = "";
    var _lBackLink = "";
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oHIASetup =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oHIAUserAssigns =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.HIAUserAssigns));
        _objName = sessionStorage.getItem("HIAHeader");
        _lBackLink = sessionStorage.getItem("BackLink"); 
        _nOrderStepID =  sessionStorage.getItem("OrderStepID");
        $("#txtTimeCounter").val(_oHIASetup.TimeCounter);
        $("#cboTimeEventType").val(_oHIASetup.TimeEventTypeInInt);
        if (_oHIAUserAssigns != null) {
            RefreshList(_oHIAUserAssigns);
        }
        if (_objName == "View HIA Setup") 
        {
            document.getElementById('btnSave').style.display = 'none';
            document.getElementById('txtSetupName').disabled = true;
            document.getElementById('txtDBTable').disabled = true;
            document.getElementById('txtKeyColumn').disabled = true;
            document.getElementById('txtFileNumberColumn').disabled = true;
            document.getElementById('txtSenderColumn').disabled = true;
            document.getElementById('txtReceiverColumn').disabled = true;
            document.getElementById('txtWhereCluse').disabled = true;
            document.getElementById('txtMessageBodytext').disabled = true;
            document.getElementById('cboTimeEventType').disabled = true;
            document.getElementById('txtTimeCounter').disabled = true;
            document.getElementById('txtOperationName').disabled = true;
            document.getElementById('txtOperationValue').disabled = true;
        }

        
});

 
    $("#btnAddUser").click(function () {
        var oUser = { UserID: 0 };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oUser,
            ControllerName: "User",
            ActionName: "UserSearch",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].UserID > 0) {
                    var tblColums = []; var oColumn = { field: "LogInID", title: "LogInID", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "UserName", title: "User Name", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "LocationName", title: "Location Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winUsers',
                        winclass: 'clsUser',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblUsers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'LogInID',
                        windowTittle: 'User List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });

    });
    $("#btnDBTable").click(function () {
        var otbject = {  };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: otbject,
            ControllerName: "IntegrationSetup",
            ActionName: "GetDBTables",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                var tblColums = []; var oColumn = { field: "ObjectName", title: "Table / View", width: 200, align: "left" }; tblColums.push(oColumn);
                var oPickerParam = {
                    winid: 'winDB',
                    winclass: 'clsDB',
                    winwidth: 600,
                    winheight: 460,
                    tableid: 'tblBBs',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: false,
                    searchingbyfieldName: 'ObjectName',
                    windowTittle: 'DB Property List'
                };
                $.icsPicker(oPickerParam);
                IntializePickerbutton(oPickerParam);
            }
        });

    });
  
    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        var oUsers = [], oDbObj=null;
        if (oPickerobj.multiplereturn)
        {
            oUsers = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oDbObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
    
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid == 'winUsers') {
            if (oUsers != null && oUsers.length > 0) {
                for (var i = 0; i < oUsers.length; i++) {
                    if (Exist(oUsers[i].UserID)) return;
                    oHIAUserAssign = new Object();
                    oHIAUserAssign.LogInID = oUsers[i].LogInID;
                    oHIAUserAssign.EmployeeNameCode = oUsers[i].EmployeeNameCode;
                    oHIAUserAssign.LocationName = oUsers[i].LocationName;
                    oHIAUserAssign.UserName = oUsers[i].UserName;
                    oHIAUserAssign.UserID = oUsers[i].UserID;
                    $('#tblHIAUserAssigns').datagrid('appendRow', oHIAUserAssign);
                }
            }
        }
        if (oPickerobj.winid == 'winDB') {
            if (oDbObj != null)
            {
                $("#txtDBTable").val(oDbObj.ObjectName);
            }
        }

    }


    function Exist(nUserID) {
        var oUsers = $('#tblHIAUserAssigns').datagrid('getRows');
        for (var i = 0; i < oUsers.length; i++) {
            if (parseInt(oUsers[i].UserID) == parseInt(nUserID)) {
                return true;
            }
        }
        return false;
    }

    function RefreshList(oHIAUserAssigns) {
        data = oHIAUserAssigns;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblHIAUserAssigns').datagrid('loadData', data);
        $('#tblHIAUserAssigns').datagrid({ selectOnCheck: false, checkOnSelect: false })
    }

    function Save() {
        debugger;
        if (!ValidateInput()) return;
        var oHIASetup = RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/HumanInteractionAgent/Save",
            traditional: true,
            data: JSON.stringify(oHIASetup),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var _oHIASetup = jQuery.parseJSON(data);
                if (_oHIASetup.ErrorMessage == "" || _oHIASetup.ErrorMessage == null) {
                    alert("Data Save Succesfully!!");
                    var oHIASetups = sessionStorage.getItem("HIASetups");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oHIASetups != null) {
                        oHIASetups = jQuery.parseJSON(oHIASetups);
                    }
                    else {
                        oHIASetups = [];
                    }
                    if (nIndex != -1) {
                        oHIASetups[nIndex] = _oHIASetup;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oHIASetups.length);
                        oHIASetups.push(_oHIASetup);
                    }
                    window.location.href = _lBackLink;
                }
                else {
                    alert(_oHIASetup.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function ValidateInput() {
        debugger;
        var sSetupName = $("#txtSetupName").val();
        if (sSetupName == null || sSetupName == "") {
            alert("Please Enter Setup Name!");
            $('#txtSetupName').focus();
            return false;
        }

        var sDBTable = $("#txtDBTable").val();
        if (sDBTable == null || sDBTable == "") {
            alert("Please enter Table Name!");
            $('#txtDBTable').focus();
            return false;
        }

        var sKeyColumn = $("#txtKeyColumn").val();
        if (sKeyColumn == null || sKeyColumn == "") {
            alert("Please enter Key Column Name!");
            $('#txtKeyColumn').focus();
            return false;
        }
        var sOperationName=$("#txtOperationName").val();
        if (sOperationName == null || sOperationName == "") {
            alert("Please enter Operation Name!");
            $('#txtOperationName').focus();
            return false;
        }
        var sOperationValue=$("#txtOperationValue").val();
        if (sOperationValue == null || sOperationValue == "") {
            alert("Please enter Operation Value!");
            $('#txtOperationValue').focus();
            return false;
        }

        var sFileNumberColumn = $("#txtFileNumberColumn").val();
        if (sFileNumberColumn == null || sFileNumberColumn == "") {
            alert("Please enter File Number Column Name!");
            $('#txtFileNumberColumn').focus();
            return false;
        }

        var sSenderColumn = $("#txtSenderColumn").val();
        if (sSenderColumn == null || sSenderColumn == "") {
            alert("Please enter Sender Column Name!");
            $('#txtSenderColumn').focus();
            return false;
        }

        var sReceiverColumn = $("#txtReceiverColumn").val();
        if (sReceiverColumn == null || sReceiverColumn == "") {
            alert("Please enter Receiver Column Name!");
            $('#txtReceiverColumn').focus();
            return false;
        }
        if ($('#cboTimeEventType').val()!= 0)
        {
            var nTimecounter = $("#txtTimeCounter").val();
            if (nTimecounter <= 0) {
                alert("Time Counter will be greater than Zero!");
                $('#txtTimeCounter').focus();
                return false;
            }
        }else{
            $("#txtTimeCounter").val(0);
        }
        var sMessageBodytext = $("#txtMessageBodytext").val();
        if (sMessageBodytext == null || sMessageBodytext == "") {
            alert("Please enter Message Body Text!");
            $('#txtMessageBodytext').focus();
            return false;
        }
        return true;
    }

    function RefreshObject() {

        var cboTimeEvent = document.getElementById("cboTimeEventType");
        //debugger;
        var oHIASetup = {
            HIASetupID: _oHIASetup.HIASetupID,
            SetupName: $("#txtSetupName").val(),
            DBTable: $("#txtDBTable").val(),
            KeyColumn: $("#txtKeyColumn").val(),
            FileNumberColumn: $("#txtFileNumberColumn").val(),
            SenderColumn: $("#txtSenderColumn").val(),
            ReceiverColumn: $("#txtReceiverColumn").val(),
            WhereClause: $("#txtWhereCluse").val(),
            MessageBodyText: $("#txtMessageBodytext").val(),
            Activity: _oHIASetup.Activity,
            OrderStepID: _nOrderStepID,
            TimeEventTypeInInt: cboTimeEvent.options[cboTimeEvent.selectedIndex].index, //$("#cboTimeEventType").val(),
            TimeCounter: $("#txtTimeCounter").val(),
            OperationName:$("#txtOperationName").val(),
            OperationValue:$("#txtOperationValue").val(),
            HIASetupTypeInInt: 1,
            HIAUserAssigns: $('#tblHIAUserAssigns').datagrid('getRows')
        };
        return oHIASetup;
    }

    function Remove() {
        var oHIASetupDetail = $('#tblHIAUserAssigns').datagrid('getSelected');
        if (oHIASetupDetail == null) {
            alert("Please select a item from list!");
            return;
        }
        if (!confirm("Confirm to Delete?")) return;
        var SelectedRowIndex = $('#tblHIAUserAssigns').datagrid('getRowIndex', oHIASetupDetail);
        $('#tblHIAUserAssigns').datagrid('deleteRow', SelectedRowIndex);

    }


    function Close() {

        window.location.href = _lBackLink;
    }


function DBViewPicker()
{
    var oParameter = new Object();
    oParameter.Name = "Database Tables & Columns";
    var tsv=((new Date()).getTime())/1000;
    var url = _sBaseAddress+"/IntegrationSetup/ViewDatabasePicker?ts="+tsv;
    var oDataCollectionSetup = window.showModalDialog(url, oParameter, 'dialogHeight:410px;dialogWidth:520px;dialogLeft:300;dialogTop:100;center:yes;resizable:yes;status:no;scroll:no');
}
</script>
