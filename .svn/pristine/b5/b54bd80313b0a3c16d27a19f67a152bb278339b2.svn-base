<html>
<head>  
   
    
</head>
<body>
    @{
        ViewBag.Title = "Dynamic Head Configure";
    }
@model ESimSol.BusinessObjects.DymanicHeadSetup
    
        <div class="menuMainCollectionTable" id="divDymanicHeadSetup" class="easyui-panel" title="Add DymanicHeadSetup" style="font-family:Tahoma; height:100%; width:100%">
            <div style="width:100%; height:88%; text-align:center">
                <fieldset style="height:97%;">
                    <legend style="font-weight:bold"> Informations : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;width:100%;margin-top:30px;margin-bottom:30px;">
                        <tr>
                            <td style="width:20%; text-align:right">
                                Mapping Name :
                            </td>
                            <td style="width:60%; text-align:left">
                                @Html.TextBoxFor(model => model.Name, new { style = "width: 99%;", id = "txtName" })
                            </td>
                            <td style="width:10%; text-align:right"></td>
                        </tr>

                        <tr>
                            <td style="width:20%; text-align:right">
                                Reference Type:
                            </td>
                            <td style="width:60%; text-align:left">
                                
                                <select id="cboReferenceType" style="width:100%;"></select>
                                
                            </td>
                            <td style="width:10%; text-align:right"></td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">
                                Mapping Type:
                            </td>
                            <td style="width:60%; text-align:left">
                                <select id="cboMappingType" style="width:100%;"></select>
                            </td>
                            <td style="width:10%; text-align:right"></td>
                        </tr>
                    
                        <tr id="trRefObj">
                            <td style="width:20%; text-align:right">
                                Mapping Source :
                            </td>
                            <td style="width:60%; text-align:left">

                                <input type="text" id="txtLedgerGroup" placeholder="Type COA Group name and press enter" style="width:90%;" />
                                <a id="btnPickLeadgerGrop" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="false">Pick</a>
                                <input type="text" id="txtACCostCenterName" placeholder="Type Sub Ledger name and press enter" style="width:90%;" />
                                <a id="btnPickACCostCenter" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="false">Pick</a>
                            </td>
                            <td style="width:10%; text-align:right"></td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">
                                Note :
                            </td>
                            <td style="width:60%; text-align:left">
                                @Html.TextBoxFor(model => model.Note, new { style = "width: 99%;", id = "txtNote" })
                            </td>
                            <td style="width:10%; text-align:right"></td>
                        </tr>
                    </table>
                </fieldset>
            </div>




            <div style="width:100%; height:10%">
                <fieldset>
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                        <tr>
                            <td style="width:80%; text-align:right"></td>
                            <td style="width: 10%">
                                <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="return Save()">Save</a>
                            </td>
                            <td style="width: 10%">
                                <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
</body>
</html>


<script type="text/javascript"> 
 var _oDymanicHeadSetup=null;
 var _sBaseAddress="";
 var _oReferenceTypeObjObjs = [];
 var _oACMappingTypeObjs=[];
 var _nMenuid=0;
 $(document).ready(function () {
    debugger;     
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));                  
     _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.MenuID]));
      
     _oDymanicHeadSetup =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));  
     _oReferenceTypeObjObjs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ReferenceTypeObjObjs));   
     _oACMappingTypeObjs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ACMappingTypeObjs));   
     _sDymanicHeadSetupHeader=sessionStorage.getItem("DymanicHeadSetupHeader");
     $('#divDymanicHeadSetup').panel({ title:_sDymanicHeadSetupHeader});
     if(_sDymanicHeadSetupHeader=="View DymanicHeadSetup")
     {
         $('#divDymanicHeadSetup input,select').prop('disabled',true);
         $('#btnSave').hide();
         //document.getElementById('cboMappingType').disabled='false';
         //document.getElementById('cboReferenceType').disabled='false';
         //document.getElementById('txtNote').disabled='false';
     }
     
  
     LoadCob();
     RefreshControl();
     $("#cboMappingType").change();
 }); 
    function RefreshControl() {
        $('#btnPickLeadgerGrop').hide();
        $('#txtLedgerGroup').hide();

        $("#cboReferenceType").val(_oDymanicHeadSetup.ReferenceType);
        $("#cboMappingType").val(_oDymanicHeadSetup.MappingType);
        
        if(_oDymanicHeadSetup.DymanicHeadSetupID)
        {
            $('#trRefObj').show();
            $('#txtACCostCenterName').show();
            $('#btnPickACCostCenter').hide();
            $('#txtACCostCenterName').val(_oDymanicHeadSetup.MappingName);
        }
    }
    
    function LoadCob() {

        $("#cboReferenceType").icsLoadCombo({
            List: _oReferenceTypeObjObjs,
            OptionValue: "id",
            DisplayText: "Value"
        });

        $("#cboMappingType").icsLoadCombo({
            List: _oACMappingTypeObjs,
            OptionValue: "id",
            DisplayText: "Value"
        });

    }
   function ValidateInput()
    {
       if(document.getElementById("txtName").value==null || document.getElementById("txtName").value=="")
        {        
            alert("Please enter Configuration Name!");
            $('#txtName').focus();
            return false;
        }    

        var nReferenceType =$("#cboReferenceType").val();

        var nMappingType =$("#cboMappingType").val();
        
        if(nReferenceType<=0 || nReferenceType==null)
        {        
            alert("Please Select ReferenceType!");
            $('#cboReferenceType').focus();
            return false;
        }  
           
        if(nMappingType<=0 || nMappingType==null)
        {        
            alert("Please Select MappingType!");
            $('#cboMappingType').focus();
            return false;
        }  
        return true;
    }


    function RefreshObject()
    {     
        var oDymanicHeadSetup= {                               
            DymanicHeadSetupID : _oDymanicHeadSetup.DymanicHeadSetupID,    
            Name : $("#txtName").val(),
            ReferenceTypeInt:$("#cboReferenceType").val(),
            MappingTypeInt :$("#cboMappingType").val(),
            Activity : _oDymanicHeadSetup.Activity,        
            MappingID: _oDymanicHeadSetup.MappingID,
            Note : $("#txtNote").val()
        };
        return oDymanicHeadSetup;
    } 

    function Save()
    {
        //debugger;
        if(!ValidateInput()) return false;
        var oDymanicHeadSetup=RefreshObject();

        $.icsSave({
            BaseAddress: _sBaseAddress,
            Object: oDymanicHeadSetup,
            ObjectId: oDymanicHeadSetup.DymanicHeadSetupID,
            ControllerName: "DymanicHeadSetup",
            ActionName: "Save",
            TableId: "",
            IsWinClose: false,
            Message: "Data Saved Successfully."

        },function (response){
            if(response.status && response.obj!=null){
                if(response.obj.DymanicHeadSetupID>0){
                    var oDymanicHeadSetup =response.obj;
                    var oDymanicHeadSetups =sessionStorage.getItem("DymanicHeadSetups");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oDymanicHeadSetups!=null)
                    {
                        oDymanicHeadSetups = jQuery.parseJSON(oDymanicHeadSetups);
                    }
                    else
                    {
                        oDymanicHeadSetups=[];
                    }
                    if(nIndex!=-1)
                    {
                        oDymanicHeadSetups[nIndex]=oDymanicHeadSetup;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oDymanicHeadSetups.length);
                        oDymanicHeadSetups.push(oDymanicHeadSetup);
                    }
                    sessionStorage.setItem("DymanicHeadSetups", JSON.stringify(oDymanicHeadSetups));
                    window.location.href = _sBaseAddress+ "/DymanicHeadSetup/ViewDymanicHeadSetups?menuid="+_nMenuid;
                }
            }
        });

    }
      
    
    $("#btnClose").click(function(){
        window.location.href = _sBaseAddress+ "/DymanicHeadSetup/ViewDymanicHeadSetups?menuid="+_nMenuid;
    });

    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            window.location.href = _sBaseAddress+ "/DymanicHeadSetup/ViewDymanicHeadSetups?menuid="+_nMenuid;
        }
    });


    // /Contractor Part
    $("#txtLedgerGroup").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var $This=$(this);
            var oChartsOfAccount = {AccountTypeInInt:4, AccountHeadName: $.trim($("#txtLedgerGroup").val())};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oChartsOfAccount,
                ControllerName: "ChartsOfAccount",
                ActionName: "GetsbyAccountTypeOrName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].AccountHeadID > 0) {
                        debugger;
                        var tblColums = [];var oColumn = { field: "AccountCode", title: "AccountCode", width: 120, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "AccountHeadName", title: "Name", width: 250, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "AccountTypeInString", title: "Type", width: 100, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winChartsOfAccount',
                            winclass:'clsChartsOfAccount',
                            winwidth: 500,
                            winheight: 460,
                            tableid: 'tblChartsOfAccount',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'COA List',
                            TextBox:$This
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }
        if (code === 8 || code === 46) //backspace=8
        {
            
            $("#txtLedgerGroup").val('');
            _oPurchaseRequisition.ACCostCenterID = 0;
            $("#txtACCostCenterName").removeClass('txtLedgerGroup');
        }
    });
    ////Load for button click
    $("#btnPickLeadgerGrop").click(function () {
        var oChartsOfAccount = {AccountTypeInInt:4, AccountHeadName: $.trim($("#txtLedgerGroup").val())};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oChartsOfAccount,
            ControllerName: "ChartsOfAccount",
            ActionName: "GetsbyAccountTypeOrName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AccountHeadID > 0) {
                    var tblColums = [];var oColumn = { field: "AccountCode", title: "AccountCode", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "AccountHeadName", title: "Name", width: 250, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "AccountTypeInString", title: "Type", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winChartsOfAccount',
                        winclass: 'clsChartsOfAccount',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblChartsOfAccount',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'COA List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });

    });

    
    
    $("#txtACCostCenterName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //if ($.trim($("#txtACCostCenterName").val()) === '') 
            //{
            //    alert("Please enter ACCostCenter No.");
            //    $("#txtACCostCenterName").addClass("errorFieldBorder");
            //    $("#txtACCostCenterName").focus();
            //    return ;
            //}
            var $This=$(this);
            var oACCostCenter = { ParentID:1, Name: $.trim($("#txtACCostCenterName").val())  };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oACCostCenter,
                ControllerName: "ACCostCenter",
                ActionName: "GetCategoryWiseCC",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ACCostCenterID > 0) {
                        debugger;
                        var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 100, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "CategoryName", title: "Category", width: 150, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winACCostCenter',
                            winclass:'clsACCostCenter',
                            winwidth: 420,
                            winheight: 460,
                            tableid: 'tblACCostCenters',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'ACCostCenter List',
                            TextBox:$This
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }
        if (code === 8 || code===46) //backspace=8
        {
            $("#txtACCostCenterName").val('');
            _oPurchaseRequisition.ACCostCenterID = 0;
            $("#txtACCostCenterName").removeClass('fontColorOfPickItem');
        }
    });
    ////Load for button click
    $("#btnPickACCostCenter").click(function () {
        var oACCostCenter = { ParentID:1, Name: $.trim($("#txtACCostCenterName").val())  };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oACCostCenter,
            ControllerName: "ACCostCenter",
            ActionName: "GetCategoryWiseCC",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ACCostCenterID > 0) {
                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "CategoryName", title: "Category", width: 150, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winACCostCenter',
                        winclass: 'clsACCostCenter',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblACCostCenters',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'ACCostCenter List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });

    });

    

    function IntializePickerbutton(oPickerobj)
    {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winChartsOfAccount')//Contractor region
            {
                if (oreturnObj != null && oreturnObj.AccountHeadID > 0)
                {
                    $("#txtLedgerGroup").val(oreturnObj.AccountHeadName);
                    $("#txtLedgerGroup").addClass('fontColorOfPickItem');
                    _oDymanicHeadSetup.MappingID = oreturnObj.AccountHeadID;
                    $("#txtLedgerGroup").focus();
                }
            }
          
            else if (oPickerobj.winid == 'winACCostCenter')//Contractor region
            {
                if (oreturnObj != null && oreturnObj.ACCostCenterID > 0)
                {
                    $("#txtACCostCenterName").val(oreturnObj.Name);
                    $("#txtACCostCenterName").addClass('fontColorOfPickItem');
                    _oDymanicHeadSetup.MappingID = oreturnObj.ACCostCenterID;
                    $("#txtACCostCenterName").focus();
             
                }
           
            }
        });
        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                if (oPickerobj.winclass == 'clsChartsOfAccount')
                {
                    if (oreturnObj != null && oreturnObj.AccountHeadID > 0) {
                        $("#txtLedgerGroup").val(oreturnObj.AccountHeadName);
                        $("#txtLedgerGroup").addClass('fontColorOfPickItem');
                        _oDymanicHeadSetup.MappingID = oreturnObj.AccountHeadID;
                        $("#txtLedgerGroup").focus();
                    }
                 
                }
           
                else if (oPickerobj.winclass =='clsACCostCenter')
                {
                    if (oreturnObj != null && oreturnObj.ACCostCenterID > 0) {
                   
                        $("#txtACCostCenterName").val(oreturnObj.Name);
                        $("#txtACCostCenterName").addClass('fontColorOfPickItem');
                        _oDymanicHeadSetup.MappingID = oreturnObj.ACCostCenterID;
                        $("#txtACCostCenterName").focus();
                    }
                 
                }
            }
        });
    }


    
    $("#cboMappingType").change(function(){

        debugger;
        if($("#cboMappingType").val()==1)
        {
            $('#trRefObj').show();
            $('#btnPickLeadgerGrop').show();
            $('#txtLedgerGroup').show();
            $('#txtACCostCenterName').hide();
            $('#btnPickACCostCenter').hide();
     
        }
        else  if($("#cboMappingType").val()==2)
        {
            $('#trRefObj').show();
            $('#btnPickLeadgerGrop').hide();
            $('#txtLedgerGroup').hide();
            $('#txtACCostCenterName').show();
            $('#btnPickACCostCenter').show();

        }
        else  if($("#cboMappingType").val()==0)
        {
            $('#trRefObj').hide();
            $('#btnPickLeadgerGrop').hide();
            $('#txtLedgerGroup').hide();
            $('#txtACCostCenterName').hide();
            $('#btnPickACCostCenter').hide();

        }
    });


</script>