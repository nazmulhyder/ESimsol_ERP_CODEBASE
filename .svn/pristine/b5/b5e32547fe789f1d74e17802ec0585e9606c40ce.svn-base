<html>
<head>  
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />

    <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>

    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
    
</head>
<body>

@model ESimSol.BusinessObjects.IntegrationSetupDetail
<div style="font-family:Tahoma">           
<table border="0" cellspacing="2" cellpadding="2">
    <tr>
        <td style="background-color:#CFB53B; text-align:center; width:820px; color:White">
            <label id="lblHeaderName" style="font-size:15px; font-weight:bold; text-decoration:Underline; width:845px">Add Voucher Setup</label>
        </td>
    </tr>
</table>
<fieldset>
  

  <table border="0" cellspacing="5" style ="font-size:12">

               <tr>
                    <td style="width:150px; text-align:right">Voucher  Name :</td>
                    <td style="width:505px; text-align:left"><select id="cboVoucherType"  style="width:505px;font-size:12" /></td> 
                </tr> 

                <tr>
                    <td style="width:150px; text-align:right">Voucher  Date Setup:</td>
                    <td style="width:505px; text-align:left">@Html.TextBoxFor(model => model.VoucherDateSetup, new { style = "width: 447px;font-size:12", id = "txtVoucherDateSetup", disabled = "disabled" }) <input type ="button" id="btnVoucherDateSetup" style=" width:53px;" onclick="DateSetup()" value="SetUp" /></td> 
                </tr> 
                 <tr>
                    <td style="width:150px; text-align:right">Narration Setup:</td>
                    <td style="width:505px; text-align:left">@Html.TextBoxFor(model => model.NarrationSetup, new { style = "width: 447px;font-size:12", id = "txtNarrationSetup", disabled = "disabled" }) <input type ="button" id="btnNarrationSetup" style=" width:53px;" onclick="NarrationSetup()"  value="SetUp" /></td> 
                </tr> 
                <tr>
                    <td style="width:150px; text-align:right">Raference Note Setup:</td>
                    <td style="width:505px; text-align:left">@Html.TextBoxFor(model => model.ReferenceNoteSetup, new { style = "width: 447px;font-size:12", id = "txtReferenceNoteSetup", disabled = "disabled" }) <input type ="button" id="btnReferenceNoteSetup" style=" width:53px;" onclick="ReferenceNoteSetup()"  value="SetUp" /></td> 
                </tr> 
               
               <tr>
                    <td style="width:150px; text-align:right">Update Table:</td>
                    <td style="width:505px; text-align:left">
                        <table border="0" cellpadding="0" cellspacing="0">
                            <tr>
                                <td style="text-align:left; width: 140px; font-size:12px; "> @Html.TextBoxFor(model => model.UpdateTable, new { style = "width: 140px;font-size:12", id = "txtUpdateTable" })</td>
                                <td style="text-align:right; width: 50px; font-size:12px;">Note:</td>
                                <td style="text-align:left; width: 315px; font-size:12px;"> @Html.TextBoxFor(model => model.Note, new { style = "width: 313px;font-size:12", id = "txtNote" })</td>
                            </tr>
                        </table>
                   
                    </td> 
                </tr> 

        </table>
        <table id="tblDebitCreditSetup" title="Required Voucher List"  class="easyui-datagrid" style="width:670px;height:260px" fitColumns="false" rownumbers="true" pagination="false" singleSelect="true" autoRowHeight="false" toolbar="#toolbar">
                <thead>  
                    <tr>  
                        <th field="TranjactionTypeInString" width="120">Tranjaction Type</th> 
                        <th field="AccountHeadTypeInString" width="125" align ="left">Account Head Type</th>                        
                        <th field="IsCostCenterCrateInString" width="115" align ="left">Cost Create Effect</th>
                        <th field="IsVoucherBillInString" width="115" align="left">Bill Ref Effect</th>
                        <th field="IsInventoryEffectInString" width="115" align="left">Inventory Efect</th>
                        <th field="IsChequeReferenceCreateInString" width="110" align="left">Cheque Reference</th>
                        <th field="IsOrderReferenceApplyInString" width="110" align="left">Order Reference</th>
                    </tr>  
                </thead> 
            </table>
         <div id="toolbar"style="height:30px">  <table border="0"style ="font-size:12">
        <tr>
          <td  style="width:50px"> <a id ="btnDebit" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-add" plain="true" onclick="AddDebit()">Debit</a></td>                                  
          <td  style="width:50px"> <a id ="btnCredit" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-add" plain="true" onclick="AddCredit()">Credit</a></td>                                  
          <td  style="width:50px"> <a id ="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-Edit" plain="true" onclick="Edit()">Edit</a></td>                                  
          <td  style="width:50px"> <a id ="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-remove" plain="true" onclick="Remove()">Delete</a></td>                                  
          <td  style="width:50px"> <a id ="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-reload" plain="true" onclick="Refresh()">Refresh</a></td>                                  
        </tr>
  </table>
 
</fieldset>
    
<fieldset>
    <legend style="font-weight:bold"> Action : </legend>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px;width:670px; height:10px; font-weight:bold">
            <tr style="height:10px;">
                <td style="width:570px; text-align:right">
                </td>
                <td style="width:50px">
                   <a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-save" plain="true" onclick="Save()">Save</a>
                </td>
                <td style="width:50px">
                   <a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-cancel" plain="true" onclick="Close()">Close</a>
                </td>
             </tr>       
         </table>
</fieldset>
</div>
</body>
</html>

<script type="text/javascript"> 
 var _oIntegrationSetupDetail=null;
 var _sBaseAddress="";
 var _objargumentName  ="";
 var _oDataCollectionSetups =[];
 var _oDebitCreditSetup = null;
 var _oVoucherTypes = [];
 var _oVocuherDateSetup=null;
 var _oNarrationSetups=[];
 var _oReferenceNoteSetups=[];
 var obj = window.dialogArguments;
 $(document).ready(function () {
    //debugger;     
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));   
        _oIntegrationSetupDetail = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model)); 
        _oDebitCreditSetup = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.DebitCreditSetup)); 
        _oVoucherTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.VoucherTypes)); 
        _oIntegrationSetupDetail = obj.IntegrationSetupDetail;
        _objargumentName =obj.Name;
        document.getElementById('lblHeaderName').innerHTML =_objargumentName; 
        LoadVoucherNames();
        RefreshControl();
 });

 function RefreshControl()
 {
    if(_objargumentName=='Edit Voucher Setup')
    {
        _oDataCollectionSetups = _oIntegrationSetupDetail.DataCollectionSetups;
        _oVocuherDateSetup = GetSpecifiDataCollectionSet(1); //EnumDataSetupType : VoucherDateSetup = 1        
        _oNarrationSetups = GetSpecifiDataCollectionSets(4);  //EnumDataSetupType : NarrationSetup = 4
        _oReferenceNoteSetups = GetSpecifiDataCollectionSets(5);  //EnumDataSetupType : ReferenceNoteSetup = 5

        RefreshList(_oIntegrationSetupDetail.DebitCreditSetups);
        document.getElementById("txtVoucherDateSetup").value = _oIntegrationSetupDetail.VoucherDateSetup;        
        document.getElementById("txtNarrationSetup").value = _oIntegrationSetupDetail.NarrationSetup;
        document.getElementById("txtReferenceNoteSetup").value = _oIntegrationSetupDetail.ReferenceNoteSetup;
        document.getElementById("txtUpdateTable").value = _oIntegrationSetupDetail.UpdateTable;
        document.getElementById("txtNote").value = _oIntegrationSetupDetail.Note;
    }
 }

 function  RefreshList(oDebitCreditSetups)
 {
    data=oDebitCreditSetups;
    data={"total":""+data.length+"","rows":data};
    $('#tblDebitCreditSetup').datagrid('loadData',data);
 }
 function LoadVoucherNames()
 {
    $('#cboVoucherType').empty();
     var listItems = "";   
     if(_oVoucherTypes.length>0)      
     {
         for (i = 0; i < _oVoucherTypes.length; i++) {
            listItems += "<option value='" + _oVoucherTypes[i].VoucherTypeID+"'>" + _oVoucherTypes[i].VoucherName+"</option>";
            }
     }            
      $("#cboVoucherType").html(listItems);
      $('#cboVoucherType').val(_oIntegrationSetupDetail.VoucherTypeID);
 }

 function AddDebit()
 {
       ////debugger;
       _oDebitCreditSetup.IntegrationSetupDetailID=_oIntegrationSetupDetail.IntegrationSetupDetailID;
       var oParameter = new Object();
       oParameter.Name = "Add Debit Setup";
       oParameter.DebitCreditSetup = _oDebitCreditSetup;
       oParameter.IsDebit= true;
       oParameter.Operation ='Add';
       var tsv=((new Date()).getTime())/1000;
       var url = _sBaseAddress+"/IntegrationSetup/ViewDebitCreditSetup?ts="+tsv;
       var oDabitCreditSetup = window.showModalDialog(url, oParameter, 'dialogHeight:630px;dialogWidth:700px;dialogLeft:350;dialogTop:20;center:yes;resizable:yes;status:no;scroll:no');
       if(oDabitCreditSetup!=null)
       {
          $('#tblDebitCreditSetup').datagrid('appendRow',oDabitCreditSetup);
       }

 }

 function AddCredit()
 {
     ////debugger;
       _oDebitCreditSetup.IntegrationSetupDetailID=_oIntegrationSetupDetail.IntegrationSetupDetailID;
       var oParameter = new Object();
       oParameter.Name = "Add Credit Setup";
       oParameter.DebitCreditSetup = _oDebitCreditSetup;
       oParameter.IsDebit= false;
       oParameter.Operation ='Add';
       var tsv=((new Date()).getTime())/1000;
       var url = _sBaseAddress+"/IntegrationSetup/ViewDebitCreditSetup?ts="+tsv;
       var oDabitCreditSetup = window.showModalDialog(url, oParameter, 'dialogHeight:630px;dialogWidth:700px;dialogLeft:350;dialogTop:20;center:yes;resizable:yes;status:no;scroll:no');
       if(oDabitCreditSetup!=null)
       {
          $('#tblDebitCreditSetup').datagrid('appendRow',oDabitCreditSetup);
       }
 }

 function Edit()
 {
    //debugger;
        var oDebitCreditSetup = $('#tblDebitCreditSetup').datagrid('getSelected'); 
        if(oDebitCreditSetup==null)
        {
            alert("Please select a item from list!");
            return;
        }
       var SelectedRowIndex=$('#tblDebitCreditSetup').datagrid('getRowIndex',oDebitCreditSetup);
       var oParameter = new Object();
       if(oDebitCreditSetup.IsDebit==true)
       {
            oParameter.Name = "Edit Debit Setup";
       }
       else
       {
            oParameter.Name = "Edit Credit Setup";
       }
       oParameter.DebitCreditSetup = oDebitCreditSetup;
       oParameter.IsDebit= oDebitCreditSetup.IsDebit;
       oParameter.Operation ='Edit';
       var tsv=((new Date()).getTime())/1000;
       var url = _sBaseAddress+"/IntegrationSetup/ViewDebitCreditSetup?ts="+tsv;
       var oDebitCreditSetup = window.showModalDialog(url, oParameter, 'dialogHeight:630px;dialogWidth:700px;dialogLeft:350;dialogTop:20;center:yes;resizable:yes;status:no;scroll:no');
       if(oDebitCreditSetup!=null)
       {
          $('#tblDebitCreditSetup').datagrid('updateRow',{index: SelectedRowIndex,	row: oDebitCreditSetup});
       }
 }


 function Remove()
 {
        var oDebitCreditSetup = $('#tblDebitCreditSetup').datagrid('getSelected'); 
        if(oDebitCreditSetup==null || parseInt(oDebitCreditSetup.DebitCreditSetupID)<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblDebitCreditSetup').datagrid('getRowIndex',oDebitCreditSetup);
        $('#tblDebitCreditSetup').datagrid('deleteRow',SelectedRowIndex);
 }


 function DateSetup()
 {
    //debugger;
    var oParameter = new Object();
    oParameter.Name = "Configure Date Setup";
    if(_oVocuherDateSetup!=null)
    {
        _oVocuherDateSetup.DataReferenceID= _oIntegrationSetupDetail.IntegrationSetupDetailID; // DataReferenceID will be IntegrationSetupDetailID for Integration Detail; // DataReferenceID will be DebitCreditSetupID for DebitCreditSetupID
        _oVocuherDateSetup.DataReferenceTypeInInt = 1; //EnumDataReferenceType None = 0,IntegrationDetail = 1,  DebitCreditSetup = 2 
        _oVocuherDateSetup.DataSetupTypeInInt = 1; // EnumDataSetupType: VoucherDateSetup = 1
    }
    else
    {
        var oVocuherDateSetup = {
                                    DataCollectionSetupID : 0,
                                    DataReferenceID : _oIntegrationSetupDetail.IntegrationSetupDetailID, // DataReferenceID will be IntegrationSetupDetailID for Integration Detail; // DataReferenceID will be DebitCreditSetupID for DebitCreditSetupID
                                    DataReferenceTypeInInt : 1, //EnumDataReferenceType None = 0,IntegrationDetail = 1,  DebitCreditSetup = 2 
                                    DataSetupTypeInInt : 1, // EnumDataSetupType: VoucherDateSetup = 1
                                    QueryForValue : "",
                                    ReferenceValueFields : "",
                                    Note : ""
                                };
        _oVocuherDateSetup=oVocuherDateSetup;
    }
    oParameter.DataCollectionSetup = _oVocuherDateSetup;       
    var tsv=((new Date()).getTime())/1000;
    var url = _sBaseAddress+"/IntegrationSetup/ViewDataCollectionSetup?ts="+tsv;
    var oDataCollectionSetup = window.showModalDialog(url, oParameter, 'dialogHeight:225px;dialogWidth:620px;dialogLeft:350;dialogTop:200;center:yes;resizable:yes;status:no;scroll:no');
    //debugger;
    if(oDataCollectionSetup!=null)
    {               
        _oVocuherDateSetup=oDataCollectionSetup;
        document.getElementById("txtVoucherDateSetup").value= oDataCollectionSetup.SetupText;
    }
 }
    

 function GetSpecifiDataCollectionSet(nDataSetupTypeInInt)
 {
    if(_oIntegrationSetupDetail!=null)
    {
       if(_oDataCollectionSetups.length>0)
       {
            for(var i = 0;i<_oDataCollectionSetups.length;i++)
            {
                if(parseInt(_oDataCollectionSetups[i].DataSetupTypeInInt)== parseInt(nDataSetupTypeInInt))
                {
                    return _oDataCollectionSetups[i];
                }
            }
        }
    }
    return null;
 }
 
 function NarrationSetup()
 {
       //debugger;
       var oParameter = new Object();
       oParameter.Name = "Configure Voucher Narration Setup";
       var oNarrationSetup = {
                                    DataCollectionSetupID : 0,
                                    DataReferenceID : _oIntegrationSetupDetail.IntegrationSetupDetailID, // DataReferenceID will be IntegrationSetupDetailID for Integration Detail; // DataReferenceID will be DebitCreditSetupID for DebitCreditSetupID
                                    DataReferenceTypeInInt : 1, //EnumDataReferenceType None = 0,IntegrationDetail = 1,  DebitCreditSetup = 2 
                                    DataSetupTypeInInt : 4, // EnumDataSetupType: NarrationSetup = 4
                                    QueryForValue : "",
                                    ReferenceValueFields : "",
                                    Note : "",
                                    DataCollectionSetups : _oNarrationSetups
                                };                                        
       oParameter.DataCollectionSetup = oNarrationSetup;
       var tsv=((new Date()).getTime())/1000;
       var url = _sBaseAddress+"/IntegrationSetup/ViewDataCollectionSetups?ts="+tsv;
       var oDataCollectionSetup= window.showModalDialog(url, oParameter, 'dialogHeight:515px;dialogWidth:620px;dialogLeft:350;dialogTop:100;center:yes;resizable:yes;status:no;scroll:no');
       //debugger;
       if(oDataCollectionSetup != undefined) 
       {
           if(oDataCollectionSetup != null)
           {    
                _oNarrationSetups =  oDataCollectionSetup.DataCollectionSetups;
                document.getElementById("txtNarrationSetup").value= oDataCollectionSetup.SetupText;
           }
       }
 }

 function ReferenceNoteSetup()
 {
    //debugger;
       var oParameter = new Object();
       oParameter.Name = "Configure Voucher Reference Note Setup";
       var oReferenceNoteSetup = {
                                    DataCollectionSetupID : 0,
                                    DataReferenceID : _oIntegrationSetupDetail.IntegrationSetupDetailID, // DataReferenceID will be IntegrationSetupDetailID for Integration Detail; // DataReferenceID will be DebitCreditSetupID for DebitCreditSetupID
                                    DataReferenceTypeInInt : 1, //EnumDataReferenceType None = 0,IntegrationDetail = 1,  DebitCreditSetup = 2 
                                    DataSetupTypeInInt : 5, // EnumDataSetupType: ReferenceNoteSetup = 5
                                    QueryForValue : "",
                                    ReferenceValueFields : "",
                                    Note : "",
                                    DataCollectionSetups : _oReferenceNoteSetups
                                };                                        
       oParameter.DataCollectionSetup = oReferenceNoteSetup;
       var tsv=((new Date()).getTime())/1000;
       var url = _sBaseAddress+"/IntegrationSetup/ViewDataCollectionSetups?ts="+tsv;
       var oDataCollectionSetup= window.showModalDialog(url, oParameter, 'dialogHeight:515px;dialogWidth:620px;dialogLeft:350;dialogTop:100;center:yes;resizable:yes;status:no;scroll:no');
       //debugger;
       if(oDataCollectionSetup != undefined) 
       {
           if(oDataCollectionSetup != null)
           {    
                _oReferenceNoteSetups=  oDataCollectionSetup.DataCollectionSetups;
                document.getElementById("txtReferenceNoteSetup").value= oDataCollectionSetup.SetupText;
           }
       }
 }


 function GetSpecifiDataCollectionSets(nDataSetupTypeInInt)
 {
    var oDataCollectionSetups = [];
       if(_oDataCollectionSetups.length>0)
       {
            for(var i = 0;i<_oDataCollectionSetups.length;i++)
            {
                if(parseInt(_oDataCollectionSetups[i].DataSetupTypeInInt)== parseInt(nDataSetupTypeInInt))
                {
                    oDataCollectionSetups.push(_oDataCollectionSetups[i]);
                }
            }
        }
    return oDataCollectionSetups;
 }

  
function Save()
{
   //debugger;
   if(!ValidateInput()) return;
   var oIntegrationSetupDetail=RefreshObject();
   window.returnValue= oIntegrationSetupDetail;
   window.close();     
}

function ValidateInput()
{
    //debugger;
    if(document.getElementById("cboVoucherType").value=="" || $("#cboVoucherType").val()==0) 
    { 
        alert("Please Choose Voucher Name!"); 
        $('#cboVoucherType').focus(); 
        return false; 
    }
    if(document.getElementById("txtVoucherDateSetup").value==null || document.getElementById("txtVoucherDateSetup").value=="") 
    { 
        alert("Sorry,Voucher Date Setup is empty!"); 
        $('#txtVoucherDateSetup').focus(); 
        return false; 
    }    
    if(document.getElementById("txtNarrationSetup").value==null || document.getElementById("txtNarrationSetup").value=="") 
    { 
        alert("Sorry, Narration Setup is empty!"); 
        $('#txtNarrationSetup').focus(); 
        return false; 
    }
    if(document.getElementById("txtReferenceNoteSetup").value==null || document.getElementById("txtReferenceNoteSetup").value=="") 
    { 
        alert("Sorry,Reference Note Setup is empty!"); 
        $('#txtReferenceNoteSetup').focus(); 
        return false; 
    }
    if(document.getElementById("txtUpdateTable").value==null || document.getElementById("txtUpdateTable").value=="") 
    { 
        alert("Please Type Update Table !"); 
        $('#txtUpdateTable').focus(); 
        return false; 
    }
    var oDebitCreditSetups = $('#tblDebitCreditSetup').datagrid('getRows');
    if(oDebitCreditSetups.length<=0)
    {
        alert("Please add Debit Credit Item in List");
        return false;
    }
    
    var bHasDebit=false; var bHasCredit=false;
    for(var i=0; i<oDebitCreditSetups.length; i++)
    {
        if(oDebitCreditSetups[i].IsDebit)
        {
            bHasDebit=true;
        }
        else
        {
            bHasCredit=true;
        }
    }
    if(bHasDebit==false)
    {
        alert("Please enter debit setup!");
        return false;
    }
    if(bHasCredit==false)
    {
        alert("Please enter credit setup!");
        return false;
    }
    return true;
}

function RefreshObject()
{  
   debugger;

   var cboVoucherType =document.getElementById("cboVoucherType");
   var nVoucherTypeID  = cboVoucherType.options[cboVoucherType.selectedIndex].value;
   var sVocherName= cboVoucherType.options[cboVoucherType.selectedIndex].text;
  
 
   var oIntegrationSetupDetail= { 
                IntegrationSetupDetailID :_oIntegrationSetupDetail.IntegrationSetupDetailID,
                IntegrationSetupID:_oIntegrationSetupDetail.IntegrationSetupID,
                VoucherTypeID:nVoucherTypeID,
                VoucherDateSetup:$('#txtVoucherDateSetup').val(),                
                NarrationSetup :$('#txtNarrationSetup').val(),
                ReferenceNoteSetup :$('#txtReferenceNoteSetup').val(),
                UpdateTable:$('#txtUpdateTable').val(),
                Note :$('#txtNote').val(),
                VoucherName :sVocherName,
                DebitCreditSetups : $('#tblDebitCreditSetup').datagrid('getRows'),
                DataCollectionSetups: GetDataCollectionSetups()
             };
   return oIntegrationSetupDetail;
} 


function GetDataCollectionSetups()
{
    var oDataCollectionSetups=[];
    oDataCollectionSetups.push(_oVocuherDateSetup);    
    for(var i=0; i< _oNarrationSetups.length; i++)
    {
        oDataCollectionSetups.push(_oNarrationSetups[i]);
    }
    for(var i=0; i< _oReferenceNoteSetups.length; i++)
    {
        oDataCollectionSetups.push(_oReferenceNoteSetups[i]);
    }
    return oDataCollectionSetups;
}

     
function Close()
{
    
    window.close();
}
</script>