@{
    ViewBag.Title = "Marketing Projection";
}
@model IEnumerable<ESimSol.BusinessObjects.MarketingAccount>
    <div class="menuMainCollectionTable">
        <div class="easyui-panel" fit="true" style="margin-left:0px; height:100%;width:100%">
            <table border="0" cellpadding="0" cellspacing="0" style="height:100%;width:100%;">
                <tr>
                    <td style="height:100%; width:18%">
                        <div style="height:99%;">
                            <table id="tblMarketingHeads" title="Group Head List" class="easyui-datagrid" fit="true" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarGroup">
                                <thead>
                                    <tr>
                                        <th field="Name" width="150" align="left"> Name </th>
                                    </tr>
                                </thead>
                            </table>   
                            <div id="toolbarGroup">
                                <table>
                                    <!-- nothing -->
                                </table>
                            </div>                        
                        </div>
                    </td>
                    <td style="height:100%;width:80%">
                        <div style="height:99%;">
                            <table id="tblMktProjections" title="Marketing Projection Report" class="easyui-datagrid" fit="true" fitcolumns="true" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbar">
                                <thead>
                                  
                                </thead>
                            </table>   
                            <div id="toolbar">
                                <table>
                                    <tr>
                                        <td>
                                            Year: <input id="txtYear" type="text" style="width:70px" />
                                             View: <select id="cboReportType" style="width:100px">
                                                <option value="0" selected>All</option>
                                                <option value="1">Buyer Wise</option>
                                                <option value="2">Vendor Wise</option>
                                            </select>
                                            <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Search</a>
                                            <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add Mkt Projection</a>
                                            <a id="btnPrintPDF" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
                                            <a id="btnPrintExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">Excel</a>
                                        </td>
                                    </tr>
                                </table>
                            </div>                     
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <!--MARKETING Projection Setup-->
    <div id="winMktProjection" class="easyui-window winstyle" title="Add Mkt Projection" style=" height:auto;width:80%" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="overflow:hidden;display:block;">
            <fieldset style="height:10%">
                <legend style="font-weight: bold">Add Marketing Projection</legend>
                <div style="overflow:hidden;display:block">           
                    <div style="overflow:hidden;float:left; width:32%">
                        <div style="overflow:hidden;float:left;width:30%;text-align:right">
                            Buyer No:
                        </div>
                        <div style="overflow:hidden;float:left;width:70%">
                            <input id="txtBuyer" type="text" style=" width:100%;" placeholder="Search by Buyer .... " />
                        </div>
                    </div>
                    <div style="overflow:hidden;float:left; width:32%">
                        <div style="overflow:hidden;float:left;width:30%;text-align:right">
                            Buyer Position:
                        </div>
                        <div style="overflow:hidden;float:left;width:70%">
                            <input id="txtBuyerPosition" type="text" style=" width:100%;" placeholder="Search by Mkt. Head .... " />
                        </div>
                    </div>
                    <div style="overflow:hidden;float:left; width:32%">
                        <div style="overflow:hidden;float:left;width:30%;text-align:right">
                            Date:
                        </div>
                        <div style="overflow:hidden;float:left;width:70%">
                            <input id="txtDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style=" width:100%;" />
                        </div>
                    </div>
                </div>
                <div style="overflow:hidden;display:block;margin-top:5px">
                    <div style="overflow:hidden;float:left; width:32%">
                        <div style="overflow:hidden;float:left;width:30%;text-align:right">
                            Order Type:
                        </div>
                        <div style="overflow:hidden;float:left;width:70%">
                            <select id="cboOrderType" style="float:left;width:100%"> </select>
                        </div>
                    </div>
                    <div style="overflow:hidden;float:left; width:32%">
                        <div style="overflow:hidden;float:left;width:30%;text-align:right">
                            Sale Target:
                        </div>
                        <div style="overflow:hidden;float:left;width:70%">
                            <input id="txtValue" type="text" style=" width:100%;" />
                        </div>
                    </div>
                    <div style="overflow:hidden;float:left; width:32%">
                        <div style="overflow:hidden;float:left;width:30%;text-align:right">
                            E. Order Qty:
                        </div>
                        <div style="overflow:hidden;float:left;width:70%">
                            <input id="txtOrderQty" type="text" style=" width:100%;" />
                        </div>
                    </div>
                </div> 
                <div style="overflow:hidden;display:block;margin-top:5px">
                    <div style="overflow:hidden;float:left; width:64%">

                    </div>
                    <div style="overflow:hidden;float:right; width:10%">
                        <input id="btnAddMktSaleTarget" type="button" style="width:59%" value="Add" />
                    </div>
                </div>      
            </fieldset>
        </div>
        <div title="Mkt Sale Target" style="display:block;overflow:hidden;height:200px">
            <table id="tblMktSaleTarget"  class="easyui-datagrid" fit="true" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarKnittingConsumption" style="height:310px" showfooter="true">
                <thead>
                    <tr>
                        <th field="GroupHeadName" width="15%">Mkt. Head</th>
                        <th field="BuyerName" width="15%">Buyer</th>
                        <th field="DateInString" align="center" width="10%">Date</th>
                        <th field="OrderTypeST" width="10%" align="center">Order Type</th>
                        <th field="Value" width="10%" align="right" formatter="formatPrice">Sale Target</th>
                        <th field="OrderQty" width="10%" align="right" formatter="formatPrice">Est.Order Qty</th>
                        <th field="BuyerPosition" width="10%" align="left">Buyer Position</th>
                        <th field="LastUpdateByName" width="10%" align="left">Last Update By</th>
                        <th field="LastUpdateDateTimeInString" width="10%" align="center">Last Update Date</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarKnittingConsumption">
                <a id="btnMktSaleTargetDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
            </div>
        </div>  
        <div style="display:block;overflow:hidden;">
            <fieldset style="height:10%">
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:60%; text-align:right"></td>
                        <td style="width:40%;text-align:right;">
                            <a id="btnMktSaleTargetClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>    
    </div>

    <script type="text/javascript">
        var _nBUID = [];
        var month = new Array();
        month[0] = "January";
        month[1] = "February";
        month[2] = "March";
        month[3] = "April";
        month[4] = "May";
        month[5] = "June";
        month[6] = "July";
        month[7] = "August";
        month[8] = "September";
        month[9] = "October";
        month[10] = "November";
        month[11] = "December";
        var _nMktProjection = [];
        var _nMktProjection_Dist = [];
        var _results = [];
        var MKTID = [];

    $(document).ready(function (){
        debugger;
        var  oMktProjections  = @Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        $('#tblMktProjections').data('BaseAddress', sBaseAddress);
        $('#tblMktProjections').data('MktProjection', oMktProjections);
        var oOrderTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.OrderType));
        $("#cboOrderType").icsLoadCombo({List: oOrderTypes, OptionValue: "id", DisplayText: "Value", InitialValue:"-Select One-" });
        var oTempMktProjections =sessionStorage.getItem("oMktProjections");
        _nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
        MKTID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.MKTID));
        if(oTempMktProjections!=null)
        {
            oMktProjections = jQuery.parseJSON(oTempMktProjections);
        }
        $('#txtYear').val("2019");
        $('#txtYear').datepicker({
            autoclose: true,
            format: "yyyy",
            viewMode: "years",
            minViewMode: "years",
            startDate: '2000',
            endDate: new Date()
        });
        $('#txtValue').icsCurrencyBox();
        $('#txtOrderQty').icsCurrencyBox();
        $('#txtDate').datebox('setValue',icsdateformat(new Date()));
        DynamicRefreshList([], "tblMktProjections");
        RefreshList(oMktProjections);
    });
        //****************************(Buyer Picker)*********************************//
        $("#txtBuyer").keydown(function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) // Enter Press
            {
                if($.trim($('#txtBuyer').val())===null || $.trim($('#txtBuyer').val())==="")
                {
                    $('#txtBuyer').val('');
                    PickBuyer();
                }
                else{
                    PickBuyer();
                }

            }

        });
        ///Buyer Pick
        function PickBuyer()
        {
            var oContractor = { Params: 2 + '~' + $.trim($('#txtBuyer').val())+'~'+ _nBUID };//here 1 is Buyer
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            debugger;
            var tblColums = [];
            var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
            oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
            oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
            oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);

            var oPickeMktPerson = {
                winid: 'winBuyer',
                winclass: 'clsBuyer',
                winwidth: 600,
                winheight: 460,
                tableid: 'tblBuyer',
                tablecolumns: tblColums,
                multiplereturn: false,
                searchingbyfieldName: 'Name',
                windowTittle: 'Buyer List',
                paramObj: obj,
                pkID: 'ContractorID',
                callBack: SetBuyer
            };
            $.icsDynamicPicker(oPickeMktPerson);
        }
        function SetBuyer(oResult)
        {
            debugger;
            if(oResult.ContractorID>0)
            {
                $('#txtBuyer').data('ContractorID', oResult.ContractorID);
                $('#txtBuyer').val(oResult.Name);
                $('#txtBuyer').addClass('fontColorOfPickItem');
            }
            else
            {
                $('#txtBuyer').val('');
                $('#txtBuyer').data('ContractorID', '');
                $('#txtBuyer').removeClass('fontColorOfPickItem');
            }
        }

        //*****************************(END)*****************************************//
        function ValidateInput(){
            debugger;
            var nOrderType = parseInt($('#cboOrderType').val());
            var nValue = parseFloat($('#txtValue').val());
            var nOrderQty = parseFloat($('#txtOrderQty').val());
            var oBuyer = $('#txtBuyer').val();

            if(oBuyer == "" || oBuyer==undefined){
                alert("Please Enter Buyer.")
                $('#txtBuyer').focus();
                return false;
            }

            if(nOrderType <= 0){
                alert("Please Select Order Type.")
                $('#cboOrderType').focus();
                return false;
            }

            if(nValue <= 0){
                alert("Sale  Target is Required!.")
                $('#txtValue').focus();
                return false;
            }

            return true;
        }
        $("#btnAdd").click(function(){
            debugger;
            RefreshConsumption();
            var oMktSaleTarget = $('#tblMarketingHeads').datagrid('getSelected');
            var oMktProjection = $('#tblMktProjections').datagrid('getSelected');
           
            if(oMktSaleTarget==null || oMktSaleTarget.MarketingAccountID<=0)
            {
                alert("Please select a Marketing Head from list!");
                return;
            }

            $('#txtMktPerson').data('MarketingAccountID',oMktSaleTarget.MarketingAccountID);
            $('MktPersonName').data("Group Name"+oMktSaleTarget.GroupName);
            var oMktSaleTarget={
                MarketingAccountID : parseInt(oMktSaleTarget.MarketingAccountID),
                ContractorID : parseInt(oMktProjection.ContractorID)
            }
            $.ajax({
                type: "POST",
                dataType: "json",
                url :  _sBaseAddress+ "/MarketingAccount/GetAllMktSaleTarget",
                traditional: true,
                data:  JSON.stringify(oMktSaleTarget),
                contentType: "application/json; charset=utf-8",
                success: function (data)
                {
                    debugger;
                    _oMktSaleTarget = jQuery.parseJSON(data);
                    if (_oMktSaleTarget.length>0)
                    {
                        RefreshConsumption();
                        DynamicRefreshList(_oMktSaleTarget,'tblMktSaleTarget');
                        $('#txtMktPerson').data('MarketingAccountID',oMktSaleTarget.MarketingAccountID);
                    }
                    else
                    {
                        DynamicRefreshList([],'tblMktSaleTarget');
                        //alert(_oMktSaleTarget.ErrorMessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

            $("#winMktProjection").icsWindow('open',"Add Mkt Sales Target");
        });
        $("#btnMktSaleTargetClose").click(function(){
            $("#winMktSaleTarget").icsWindow('close');
        })
        $('#btnAddMktSaleTarget').click(function(){
            debugger;
            var oMktSaleTarget = $('#tblMarketingHeads').datagrid('getSelected');
            var oMktSaleTarget =
                {
                    MktSaleTargetID : 0,
                    MarketingAccountID : parseInt(oMktSaleTarget.MarketingAccountID),
                    OrderType : parseInt($("#cboOrderType").val()),
                    Date : $('#txtDate').datebox('getValue'),
                    Value : parseFloat(TempRemoveComma($("#txtValue").val())),
                    OrderQty : parseFloat(TempRemoveComma($("#txtOrderQty").val())),
                    ContractorID : $('#txtBuyer').data('ContractorID'),
                    BuyerPosition : $("#txtBuyerPosition").val(),
                }
            debugger;
            if(!ValidateInput()){return;}
            $.ajax({
                type: "POST",
                dataType: "json",
                url :  _sBaseAddress+ "/MarketingAccount/MktSaleTargetSave",
                traditional: true,
                data:  JSON.stringify(oMktSaleTarget),
                contentType: "application/json; charset=utf-8",
                success: function (data)
                {
                    debugger;
                    oMktSaleTarget = jQuery.parseJSON(data);
                    if (oMktSaleTarget.ErrorMessage=="" || oMktSaleTarget.ErrorMessage==null)
                    {
                        alert("Data Saved sucessfully");
                        RefreshConsumption();
                        $('#tblMktSaleTarget').datagrid('appendRow',oMktSaleTarget);
                        var oData = $('#tblMktSaleTarget').datagrid('getRows');
                        $('#tblMktSaleTarget').datagrid('selectRow',oData.length-1);
                    }
                    else
                    {
                        alert(oFabricQCParName.ErrorMessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }

            });

        });
        $("#btnMktSaleTargetDelete").click(function(){
            debugger;
            var oMktSaleTarget = $('#tblMktSaleTarget').datagrid('getSelected');
            if(oMktSaleTarget==null || oMktSaleTarget.MktSaleTargetID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex=$('#tblMktSaleTarget').datagrid('getRowIndex',oMktSaleTarget);
            $.ajax({
                type: "GET",
                dataType: "json",
                url :  _sBaseAddress+ "/MarketingAccount/MktSaleTargetDelete",
                data: {id: oMktSaleTarget.MktSaleTargetID},
                contentType: "application/json; charset=utf-8",
                success: function (data)
                {
                    debugger;
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $('#tblMktSaleTarget').datagrid('deleteRow',SelectedRowIndex);

                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        });
        

        function RefreshConsumption(){
            $('#txtBuyer').data('ContractorID',0);
            $('#txtMktPerson').val("");
            $('#txtBuyer').val("");
            $('#txtDate').datebox('setValue',icsdateformat(new Date()));
            parseInt($('#cboOrderType').val(0));
            $('#txtValue').val("");
            $('#txtOrderQty').val("");
            $('#txtBuyerPosition').val("");

        }
        
        $("#btnClose").click(function(){
            $("#winMktProjection").icsWindow('close');
        })

        function RefreshList(oMktProjections) {
            debugger;
            data={"total":""+oMktProjections.length+"","rows":oMktProjections};
            $('#tblMarketingHeads').datagrid('loadData',data);
            var nSelectedRowIndex =parseInt(sessionStorage.getItem("SelectedRowIndex"));
        }
        $('#btnSearch').click(function (e)
        {
            debugger;   
            var oMarketingHead= $('#tblMarketingHeads').datagrid('getSelected');
            var dateYear = $("#txtYear").val();
            if(dateYear == "")
            {
                alert("Please Select Year And Try Again!!");
                return;
            }

            if(oMarketingHead.MarketingAccountID<=0){
                alert("Select Marketing Head and try again!");

            }
            oParams = {
                Year : dateYear,
                BUID : _nBUID,
                MarketingAccountID : parseInt(oMarketingHead.MarketingAccountID),
            }
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress+ "/MarketingAccount/SearchMarketingProjection",
                data:JSON.stringify(oParams),
                contentType: "application/json; charset=utf-8",
                success: function (data)
                {
                    debugger;
                    _results = data;
                    _nMktProjection = _results.Item1;
                    _nMktProjection_Dist = _results.Item2;
                    if(_nMktProjection.length>0)
                    {
                        GetDynamicColumn();
                        GetDynamicColumnData('ContractorID');
                    }
                    else
                    {
                        alert("No Data Found!");
                        RefreshList([]);
                    }
                    //RefreshList([]);
                },
            });       
        });

        function GetDynamicColumn()
        {
            var oDetailColumns = [];
            var oColumn = "";
            oColumn =  { field:'BuyerName', title: 'Buyer', width:'12%',  cellClass: 'text-left',rowspan:2 };oDetailColumns.push(oColumn);
            oColumn =  { field:'BuyerPosition', title: 'Buyer Position', width:'10%',  cellClass: 'text-left',rowspan:2  };oDetailColumns.push(oColumn);
            oColumn =  { field:'OrderQty', title: 'Est. Order Qty', width:'10%',  align:'right', cellClass: 'text-left',rowspan:2  };oDetailColumns.push(oColumn);
            
            var sYear=$("#txtYear").val()+"";
            for(var i=0; i<12;i++)
            {
                oColumn = { field: month[i], title: month[i]+" "+sYear.substring(2, 4),align:'center', width: '24%',formatter:formatPrice,colspan:3};oDetailColumns.push(oColumn);       

            }                      
            //oColumn = { field: 'Total', title: 'Total', width: '10%',formatter:formatPrice};oDetailColumns.push(oColumn);
            //$('#tblMktProjections').datagrid({
            //    columns:[oDetailColumns]
            //});
            var childcolumns = [];
            var sYear=$("#txtYear").val()+"";
            for(var i=0; i<12;i++)
            {
                oColumn = { field:month[i]+'ErrorMessage', title: "Position", width: '8%',align:'right',formatter:formatPrice};childcolumns.push(oColumn); 
                oColumn = { field:month[i]+'Value', title: "TargetQty", width: '8%',align:'right',formatter:formatPrice};childcolumns.push(oColumn);   
                oColumn = { field:month[i]+'ReceiveQty', title: "RcvQty", width: '8%',align:'right',formatter:formatPrice};childcolumns.push(oColumn);   
            }
            
            //oColumn = { field: 'Total', title: 'Total', width: '10%',formatter:formatPrice};oDetailColumns.push(oColumn);
            //$('#tblMktProjections').datagrid({
            //    columns:[oDetailColumns]
            //});
            $('#tblMktProjections').datagrid({columns:[oDetailColumns,childcolumns]});
        }
        function GetDynamicColumnData(nRef)
        {
            
            //var nReportType = parseInt($("#cboReportType").val());
            var nRefID=0; var oMktProjections=[];
            _nMktProjection =_results.Item1;
            _nMktProjection_Dist =_results.Item2;

            if(_nMktProjection_Dist == null)
            {
                alert("No Data Found!!"); return;
            }debugger;
            for(var i=0; i<_nMktProjection_Dist.length ;i++ )
            {
                var nTotal=0.00;
                var oMktProjection = new Object();
                oMktProjection.BuyerName =_nMktProjection_Dist[i].BuyerName;
                oMktProjection.BuyerPosition =_nMktProjection_Dist[i].BuyerPosition;
                oMktProjection.OrderQty =_nMktProjection_Dist[i].OrderQty;
                oMktProjection.MarketingAccountID=_nMktProjection_Dist[i].MarketingAccountID;
                oMktProjection.ContractorID=_nMktProjection_Dist[i].ContractorID;
           
                var nValue = 0;
                for(var k=0; k<_nMktProjection.length;k++)
                {
                    //if(_nMktProjection_Dist[i].ContractorID == _nMktProjection[i].ContractorID){
                    //    nValue
                    //}
                    if(_nMktProjection[k][nRef]==_nMktProjection_Dist[i][nRef])
                    {
                        //nTotal+=_nMktProjection[k].Value;
                        if(isNaN(oMktProjection[month[_nMktProjection[k].Month-1]+'Value'])){
                            oMktProjection[month[_nMktProjection[k].Month-1]+'Value'] = 0;
                        }

                        if(isNaN(oMktProjection[month[_nMktProjection[k].Month-1]+'ReceiveQty'])){
                            oMktProjection[month[_nMktProjection[k].Month-1]+'ReceiveQty'] = 0;
                        }
                      
                        for(var x=0; x<12; x++){
                            //oMktProjection[month[_nMktProjection[k].Month-1]]+= 0; // calculation
                            //oMktProjection[month[_nMktProjection[k].Month-1]+'Value'] = _nMktProjection[k].Value;
                            //oMktProjection[month[_nMktProjection[k].Month-1]+'ReceiveQty']=_nMktProjection[k].ReceiveQty;

                            oMktProjection[month[_nMktProjection[k].Month-1]+'Value'] = _nMktProjection[k].Value;
                            oMktProjection[month[_nMktProjection[k].Month-1]+'ReceiveQty']=_nMktProjection[k].ReceiveQty;
                        }                                             
                    }
                }
                //oMktProjection.Total=nTotal;
                oMktProjections.push(oMktProjection);
            }
            debugger;
            $('#tblMktProjections').datagrid('loadData', oMktProjections);
        }

        $('#btnPrintPDF').click(function (e){
            var oMarketingHead= $('#tblMarketingHeads').datagrid('getSelected');
            if(oMarketingHead.MarketingAccountID<=0){
                alert("Please Select Marketing Head!");
                return;
            }
            var MktHeadID = parseInt(oMarketingHead.MarketingAccountID);
            var MktHeadName = oMarketingHead.Name;
            var nYear = $('#txtYear').val();
            var ViewType = parseInt($('#cboReportType').val());
            var BUID = _nBUID;
            var sValue = MktHeadID+'~'+nYear+'~'+ViewType+'~'+BUID+'~'+MktHeadName;
            var nts=(new Date()).getTime()/1000;
            window.open(_sBaseAddress+"/MarketingAccount/MKTProjectionReport?sValue="+sValue+"&nts="+nts);     
        });
        
        //REMOVE COMMA
        function TempRemoveComma(userInput) {
            debugger;
            var amountInString = "";
            if (userInput === null || userInput === "") {
                amountInString = "0.00";
            }
            else {
                amountInString = "";
                for (var i = 0; i < userInput.length; i++) {
                    var char = userInput.charAt(i);
                    var charForCheck = char;
                    char = char.match(/\d+/g);
                    if (char != null) {
                        amountInString = amountInString + userInput.charAt(i);
                        count = 1;
                    }
                    else if (charForCheck == ",") {
                        continue;
                    }
                    else if (charForCheck == ".") {
                        amountInString = amountInString + userInput.charAt(i);
                    }
                }
            }
            //debugger;
            return (isNaN(parseFloat(amountInString)) ? parseFloat(0.00) : parseFloat(amountInString)).toFixed(3);
        }
        function TempAddComma(nStr) {
            debugger;
            nStr += '';
            x = nStr.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var process = /(\d+)(\d{3})/;
            while (process.test(x1)) {
                x1 = x1.replace(process, '$1' + ',' + '$2');
            }
            return x1 + x2;
        }

    </script>
