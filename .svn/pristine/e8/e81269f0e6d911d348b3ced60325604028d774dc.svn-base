@{
    ViewBag.Title = "Production Mixture";
}
@model ESimSol.BusinessObjects.SUProductionMixture
@{var MenuID = HttpContext.Current.Session[SessionInfo.MenuID];}
<!DOCTYPE html>
<html>
<head>
    <title>Production Mixture</title>
</head>
<body class="menuMainCollectionTable">
    <div id="p" class="easyui-panel" title="Production Mixture" style="width:100%;height:100%; padding:10px;background:#fafafa;">
        <div class="">
            <fieldset class="">
                <legend>Production Mixture</legend>
                <table style="width:100%;">
                    <tr>
                        <td style="width:10%;text-align:right;">
                            <label>Code : </label>
                        </td>
                        <td width="17%">
                            <input id="txtCode" type="text" placeholder="Code Auto Generated" disabled />
                        </td>
                        <td style="width:16%;text-align:right;">
                            <label>Store : </label>
                        </td>
                        <td width="17%">
                            <select id="cboStore" style="width:104%;"></select>
                        </td>
                        <td style="width:20%;text-align:right;">
                            <label>Date : </label>
                        </td>
                        <td width="17%">
                            <input id="dIssueDate" type="text" style="width: 120px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%;text-align:right;">
                            <label>Description : </label>
                        </td>
                        <td width="17%" colspan="5">
                            <input id="txtNote" type="text" style="width:94%;" />
                        </td>
                    </tr>
                </table>
                <table style="width:90%;">
                    <tr>
                        <td style="width:16%;"></td>
                        <td>
                            <table id="tblSource" title="Source" class="easyui-datagrid" style="width: 480px; height: 320px; margin: 0;" data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbarSource' ,onClickRow: onClickRowSource">
                                <thead>
                                    <tr>
                                        @*<th data-options="field:'Selected',checkbox:true"></th>*@
                                        <th field="LotNo" width="20%" align="left">Lot No</th>
                                        <th field="ProductName" width="25%" align="left">Count</th>
                                        <th data-options="field:'Qty',align:'right',editor:{type:'numberbox',options:{precision:2}}" width="15%" align="right">Qty(KG)</th>
                                        <th field="OperateByName" width="20%" align="left">Disbursed By</th>
                                        <th field="OperateByDateSt" width="20%" align="center">Date</th>
                                    </tr>
                                </thead>
                            </table>
                            <div style="width: 100%;">
                                <label style="display:block;width:266px;float:left;text-align:right;">Total : </label>
                                <label id="lblTotalSource" style=" float: left;text-align:right;width:60px;display:block;">0</label>
                            </div>
                            <div id="toolbarSource">
                                <input id="txtLotSource" type="text" style="width:151px;margin-left:5px;" placeholder="Type Lot No & Press Enter" />
                                <input id="txtProductSource" type="text" style="width:149px;" placeholder="Type Count & Press Enter" />
                                <a id="btnAddSource" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"></a>
                                <a id="btnRemoveSource" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true"></a>
                                <a id="btnRefreshSource" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a>
                                <a id="btnDisburseSource" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-disburse" plain="true"></a>
                            </div>
                        </td>
                        <td>
                            <table id="tblDestination" title="Destination" class="easyui-datagrid" style="width: 480px; height: 320px; margin: 0;" data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbarDestination' ,onClickRow: onClickRowDestination ">
                                <thead>
                                    <tr>
                                        @*<th data-options="field:'Selected',checkbox:true"></th>*@
                                        <th field="LotNo" width="20%" align="left">Lot No</th>
                                        <th field="ProductName" width="25%" align="left">Count</th>
                                        <th data-options="field:'Qty',align:'right',editor:{type:'numberbox',options:{precision:2}}" width="15%" align="right">Qty(KG)</th>
                                        <th field="OperateByName" width="20%" align="left">Received By</th>
                                        <th field="OperateByDateSt" width="20%" align="center">Date</th>
                                    </tr>
                                </thead>
                            </table>
                            <div style="width: 100%;">
                                <label style="display:block;width:266px;float:left;text-align:right;">Total : </label>
                                <label id="lblTotalDestination" style=" float: left;text-align:right;width:60px;display:block;">0</label>
                            </div>
                            <div id="toolbarDestination">
                                <input id="txtLotDestination" type="text" style="width:151px;margin-left:5px;" placeholder="Type Lot No & Press Enter" />
                                <input id="txtProductDestination" type="text" style="width:149px;" placeholder="Type Count & Press Enter" />
                                <a id="btnAddDestination" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"></a>
                                <a id="btnRemoveDestination" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true"></a>
                                <a id="btnRefreshDestination" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a>
                                <a id="btnReceiveDestination" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-receive" plain="true"></a>
                            </div>
                        </td>
                    </tr>
                </table>
            </fieldset>
            <fieldset class="actionfieldsetstyle">
                <legend>Actions : </legend>
                <a id="btnRunning" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-running" plain="true">Run</a>
                <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                <a id="btnBack" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-back" plain="true">Back</a>
            </fieldset>
        </div>
    </div>
</body>
</html>
<style type="text/css">

</style>
<script type="text/javascript">
    var _nMenuid=0;
    var _oSUProductionMixture=null;
    var _sBtnId="";
    var _oWorkingUnits=[];
    var _sErrorMessage="";
    var _isRun=false;
    var _isDisbursed=true;

    var _oPMDSource={
        LotID : 0,
        LotNo : "",
        LotQty:0,
        ProductID:0,
        ProductName:"",
        InOutType:102 //_Disburse
    };

    var _oPMDDestination={
        LotID : 0,
        LotNo : "",
        LotQty:0,
        ProductID:0,
        ProductName:"",
        InOutType:101 //_Receive 
    };

    $(document).ready(function () {
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(MenuID));
        _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oSUProductionMixture = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBtnId = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.HtmlBtnId));
        _oWorkingUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.WorkingUnits));
        
        if(_oSUProductionMixture.StatusSt == "Initialize")
        {
            $("#btnRunning").show();
            _isRun = false;
        }
        else{
            $("#btnRunning").hide();
            _isRun = true;
        }
        
        BasicSetup();
        LoadComboboxes();
        RefreshControl(_oSUProductionMixture);
        RefreshLayout(_sBtnId);
      
    });

    $(document).keydown(function (e) { if (e.keyCode === 27) { $("div").icsWindow("close")}});

    $("#btnRunning").click(function(){

        if(_oSUProductionMixture == null || _oSUProductionMixture.SUPMID <= 0)
        {
            alert("Invalid Object.");
            return false;
        }
        if (!confirm("Confirm to Run?")) return false;
        var oProductionMixture = _oSUProductionMixture;
        debugger;
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProductionMixture,
            ObjectId: oProductionMixture.SUPMID,
            ControllerName: "SUProductionMixture",
            ActionName: "Run",
            TableId: "",
            IsWinClose: false,
            Message: "Successfully Run."
        };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                var oSUPM = response.obj;
                if(oSUPM.StatusSt != "Initialize")
                {
                    //$("#dIssueDate").datebox({ disabled: true });
                    //$("#dIssueDate").datebox("setValue", oSUPM.IssueDateSt);
                    $("#btnDisburseSource,#btnReceiveDestination").show();
                    $("#btnRunning").hide();
                    _isRun = true;  
                }
            }
        });
    });

    $("#cboStore").focusout(function(){
        $("#cboStore").removeClass("ComboFocusBorderClass");
    });

    $("#txtLotSource,#txtLotDestination").keydown(function(e){
        if(e.keyCode === 13)
        {
            endEditingSource();
            endEditingDestination();
        
            if(!Validation())return false;
            OpenLotPicker($(this).attr("id"));
        }
        else if(e.keyCode === 8)
        {
            if($(this).attr("id") == "txtLotSource")
            {
                $("#txtLotSource").removeClass("fontColorOfPickItem");
                _oPMDSource.LotID = 0
                _oPMDSource.LotQty=0;
            }
            else if(($(this).attr("id") == "txtLotDestination"))
            {
                $("#txtLotDestination").removeClass("fontColorOfPickItem");
                _oPMDDestination.LotID=0;
                _oPMDDestination.LotQty=0;
            }
            DisableEneableStore();
        }
    });

    $("#txtProductSource,#txtProductDestination").keydown(function(e){
        if(e.keyCode === 13)
        {
            endEditingSource();
            endEditingDestination();
            if(!Validation())return false;
            OpenProductPicker($(this).attr("id"));
        }
        else if(e.keyCode === 8)
        {
            if($(this).attr("id") == "txtProductSource")
            {
                $("#txtProductSource").removeClass("fontColorOfPickItem");
                _oPMDSource.ProductID=0;
            }
            else if(($(this).attr("id") == "txtProductDestination"))
            {
                $("#txtProductDestination").removeClass("fontColorOfPickItem");
                _oPMDDestination.ProductID=0;
            }
            DisableEneableStore();
        }
    });

    $("#cboStore").change(function(){
        _oPMDSource.LotID=0;
        _oPMDSource.LotQty=0;
        _oPMDSource.ProductID=0;
        _oPMDDestination.LotQty=0;
        _oPMDDestination.ProductID=0;
        $("#txtLotSource,#txtProductSource,#txtLotDestination,#txtProductDestination").val("");
        $("#txtLotSource,#txtProductSource,#txtLotDestination,#txtProductDestination").removeClass("fontColorOfPickItem");
    });

    $("#btnAddSource").click(function(){
        var oProductionMixtureDetail = {
            SUPMDID : 0,
            SUPMID : (_oSUProductionMixture == null ? 0 : _oSUProductionMixture.SUPMID),
            LotID : _oPMDSource.LotID,
            LotNo : _oPMDSource.LotNo,
            ProductID : _oPMDSource.ProductID,
            ProductName : _oPMDSource.ProductName,
            Qty:0,
            LotQty : _oPMDSource.LotQty
        }
        SaveDetail(oProductionMixtureDetail,"Source", false);
    });

    $("#btnAddDestination").click(function(){
        var oProductionMixtureDetail = {
            SUPMDID : 0,
            SUPMID : (_oSUProductionMixture == null ? 0 : _oSUProductionMixture.SUPMID),
            LotID : _oPMDDestination.LotID,
            LotNo : _oPMDDestination.LotNo,
            ProductID : _oPMDDestination.ProductID,
            ProductName : _oPMDDestination.ProductName,
            Qty:0,
            LotQty : _oPMDDestination.LotQty
        }
        SaveDetail(oProductionMixtureDetail, "Destination", false);
    });

    $("#btnSave").click(function(){
        var oProductionMixture = RefreshObj();

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProductionMixture,
            ObjectId: oProductionMixture.SUPMID,
            ControllerName: "SUProductionMixture",
            ActionName: "Save",
            TableId: "",
            IsWinClose: false
        };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                sessionStorage.setItem("SUProductionMixture", JSON.stringify(response.obj));
                window.location.href = _sBaseAddress + "/SUProductionMixture/View_SUProductionMixtures?menuid=" + _nMenuid;
            }
        });
    });

    $("#btnBack").click(function(){
        window.location.href = _sBaseAddress + "/SUProductionMixture/View_SUProductionMixtures?menuid=" + _nMenuid;
    });

    $("#btnRefreshSource").click(function(){
        endEditingSource();
    });

    $("#btnRefreshDestination").click(function(){
        endEditingDestination();
    });

    $("#btnRemoveSource,#btnRemoveDestination").click(function(){
        endEditingSource();
        endEditingDestination();
        var oSUPMD = null;
        var sBtnId = $(this).attr("id");

        var sAlertMessage = "";
        if(sBtnId == "btnRemoveSource")
        {
            oSUPMD = $("#tblSource").datagrid("getSelected");
            sAlertMessage = "Already Disbursed."
        }
        else
        {
            oSUPMD = $("#tblDestination").datagrid("getSelected");
            sAlertMessage = "Already Received."
        }
        if (oSUPMD == null || oSUPMD.SUPMDID <= 0) {
            alert("Please select an item from list.");
            return false;
        }

        if(oSUPMD.OperateBy > 0)
        {
            alert(sAlertMessage);
            return false;
        }
     
        if (!confirm("Confirm to Delete?")) return false;

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oSUPMD,
            ControllerName: "SUProductionMixture",
            ActionName: "DeleteSUPMD",
            TableId: (sBtnId == "btnRemoveSource"  ? "tblSource" : "tblDestination"),
            IsWinClose: false
        };
        $.icsDelete(obj, function (response) {
            if (response.status && response.Message == 'deleted') {
                editIndexDestination = undefined;
                endEditingDestination();
                editIndexSource = undefined;
                endEditingSource();
                RefreshSummary();
            }

            if(!SavePMixtureOrNot())
            {
                $("#cboStore").prop("disabled",true);
            }
            else{
                $("#cboStore").prop("disabled",false);
            }
        });
    });

    $("#btnDisburseSource").click(function(){
        endEditingSource();

        if($.trim(_sErrorMessage) == "")
        {
            
            if(!_isRun)
            {
                alert("First run this Production Mixture to disburse an item.");
                return false;
            }

            var oProductionMixtureDetail = $("#tblSource").datagrid("getSelected");
            if(oProductionMixtureDetail == null || oProductionMixtureDetail.SUPMDID <= 0)
            {
                alert("Please select an item from list.");
                return false;
            }

            if(oProductionMixtureDetail.OperateBy > 0)
            {
                alert("Already Disbursed");
                return false;
            }

            var nRowIndex = $("#tblSource").datagrid("getRowIndex", oProductionMixtureDetail);

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProductionMixtureDetail,
                ObjectId: oProductionMixtureDetail.SUPMDID,
                ControllerName: "SUProductionMixture",
                ActionName: "DisburseReceive",
                TableId: "tblSource",
                IsWinClose: false,
                Message: "Successfully Disbursed."
            };
            $.icsSave(obj, function (response) {
                if (response.status && response.obj != null) {
                    if(response.obj.SUPMDID > 0)
                    {
                        $("#tblSource").datagrid("updateRow", { index: nRowIndex, row: response.obj });
                    }
                    editIndexSource = undefined;
                    endEditingSource();
                }
            });
        }
        else{
            editIndexSource = undefined;
            endEditingSource();
            _sErrorMessage="";
        }
    });

    function ReceiveValidations()
    {
        var oSourceItems = $("#tblSource").datagrid("getRows");
        if(oSourceItems.length > 0)
        {
            for(var i=0;i<oSourceItems.length;i++)
            {
                if(oSourceItems[i].OperateBy > 0)
                {
                    return true;
                }
            }
        }
        alert("No disburse item found to receive.");
        return false;
    }

    $("#btnReceiveDestination").click(function(){
        if(!ReceiveValidations()) return false;
        
        endEditingDestination();

        if($.trim(_sErrorMessage) == "")
        {
            if(!_isRun)
            {
                alert("First run this Production Mixture to receive an item.");
                return false;
            }

            var oProductionMixtureDetail = $("#tblDestination").datagrid("getSelected");
            if(oProductionMixtureDetail == null || oProductionMixtureDetail.SUPMDID <= 0)
            {
                alert("Please select an item from list.");
                return false;
            }

            var nRowIndex = $("#tblDestination").datagrid("getRowIndex", oProductionMixtureDetail);

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProductionMixtureDetail,
                ObjectId: oProductionMixtureDetail.SUPMDID,
                ControllerName: "SUProductionMixture",
                ActionName: "DisburseReceive",
                TableId: "tblDestination",
                IsWinClose: false,
                Message: "Successfully Received."
            };
            $.icsSave(obj, function (response) {
                if (response.status && response.obj != null) {
                    if(response.obj.SUPMDID > 0)
                    {
                        $("#tblDestination").datagrid("updateRow", { index: nRowIndex, row: response.obj });
                    }
                    editIndexDestination = undefined;
                    endEditingDestination();
                }
            });
        }
        else{
            editIndexDestination = undefined;
            endEditingDestination();
            _sErrorMessage="";
        }
    });

    function SaveDetail(oPMD, sType, bIsFromCellEdit)
    {
        if(!bIsFromCellEdit)
        {
            if(!Validation()) return false;
            if(!CheckDetailValidation(sType)) return false;
        }

        var nRowIndex = 0;
        var oProductionMixtureDetail = oPMD;

        if(sType == "Source")
        {
            oProductionMixtureDetail.InOutType = 102 //Disburse
            nRowIndex = $("#tblSource").datagrid("getRowIndex", oPMD);
        }
        else{
            oProductionMixtureDetail.InOutType = 101 //Receive
            nRowIndex = $("#tblDestination").datagrid("getRowIndex", oPMD);
        }

        if(SavePMixtureOrNot())
        {
            oProductionMixtureDetail.SUProductionMixture = RefreshObj();
        }
        else{
            oProductionMixtureDetail.SUProductionMixture = null;
        }

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProductionMixtureDetail,
            ObjectId: oProductionMixtureDetail.SUPMDID,
            ControllerName: "SUProductionMixture",
            ActionName: "SaveSUPMD",
            TableId: "",
            IsWinClose: false,
            Message:""
        };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                var oSUPMD=response.obj;
                if(oSUPMD.SUPMDID > 0)
                {
                    _oSUProductionMixture = oSUPMD.SUProductionMixture;
                    if(_oSUProductionMixture.StatusSt == "Initialize")
                    {
                        $("#btnRunning").show();
                        _isRun = false;
                    }
                    else{
                        $("#btnRunning").hide();
                        _isRun = true;
                    }
                    $("#txtCode").val(_oSUProductionMixture.Code);
                    if(sType == "Source")
                    {
                        if(!bIsFromCellEdit)
                        {
                            var oCollections = $("#tbl" + sType).datagrid("getRows");
                            var nIndex = oCollections.length;
                            $("#tbl"+sType).datagrid("appendRow", oSUPMD);
                            $("#tbl"+sType).datagrid("selectRow", nIndex);

                            _oPMDSource.LotID=0;
                            _oPMDSource.LotQty=0;
                            _oPMDSource.LotNo="";
                            _oPMDSource.ProductID=0;
                            _oPMDSource.ProductName="";

                            $("#txtLotSource,#txtProductSource").val("");
                            $("#txtLotSource,#txtProductSource").removeClass("fontColorOfPickItem");
                            $("#txtLotSource,#txtProductSource").removeClass("errorFieldBorder");
                            $("#txtLotSource").focus();
                        }
                        else
                        {
                            $("#tblSource").datagrid("updateRow", { index: nRowIndex, row: oSUPMD });
                        }
                    }
                    else
                    {
                        if(!bIsFromCellEdit)
                        {
                            var oCollections = $("#tbl" + sType).datagrid("getRows");
                            var nIndex = oCollections.length;
                            $("#tbl"+sType).datagrid("appendRow", oSUPMD);
                            $("#tbl"+sType).datagrid("selectRow", nIndex);

                            _oPMDDestination.LotID=0;
                            _oPMDDestination.LotQty=0;
                            _oPMDDestination.LotNo="";
                            _oPMDDestination.ProductID=0;
                            _oPMDDestination.ProductName="";

                            $("#txtLotDestination,#txtProductDestination").val("");
                            $("#txtLotDestination,#txtProductDestination").removeClass("fontColorOfPickItem");
                            $("#txtLotDestination,#txtProductDestination").removeClass("errorFieldBorder");
                            $("#txtLotDestination").focus();
                        }
                        else
                        {
                            $("#tblDestination").datagrid("updateRow", { index: nRowIndex, row: oSUPMD });
                        }
                    }
                    RefreshSummary();
                }
                else
                {
                    if(sType == "Source"){
                        editIndexSource = undefined;
                    }else{
                        editIndexDestination = undefined;
                    }
                }
            }
            else{
                editIndexSource = undefined;
            }
        });
    }

    function SavePMixtureOrNot()
    {
        var oSourceItems = $("#tblSource").datagrid("getRows");
        var oDestinationItems = $("#tblDestination").datagrid("getRows");
        if(oSourceItems.length > 0 || oDestinationItems.length > 0)
        {
            return false;
        }
        return true;
    }
    
    function RefreshControl(oSUProductionMixture)
    {
        _oSUProductionMixture = oSUProductionMixture;
        if(oSUProductionMixture.SUPMID > 0)
        {
            $("#dIssueDate").datebox({ disabled: true });

            $("#txtCode").val(oSUProductionMixture.Code);
            $("#cboStore").val(oSUProductionMixture.WUID);
            $("#dIssueDate").datebox("setValue", oSUProductionMixture.IssueDateSt);
            $("#txtNote").val(oSUProductionMixture.Note);

            var oSUPMDSource = [];
            var oSUPMDDestination=[];
            for(var i=0;i<oSUProductionMixture.SUProductionMixtureDetails.length;i++){
                var oSUProductionMixtureDetail = oSUProductionMixture.SUProductionMixtureDetails[i];
                if(oSUProductionMixtureDetail.InOutType == 102)
                {
                    oSUPMDSource.push(oSUProductionMixtureDetail);
                }
                else if(oSUProductionMixtureDetail.InOutType == 101)
                {
                    oSUPMDDestination.push(oSUProductionMixtureDetail);
                }
            }
            DynamicRefreshList(oSUPMDSource,"tblSource");
            DynamicRefreshList(oSUPMDDestination,"tblDestination");
            RefreshSummary();

            if(!SavePMixtureOrNot())
            {
                $("#cboStore").prop("disabled",true);
            }
            else{
                $("#cboStore").prop("disabled",false);
            }
        }
    }

    function RefreshLayout(sBtnId)
    {
        if(sBtnId == "btnView")
        {
            $("#cboStore").prop("disbaled",true);
            $("#txtNote,#txtLotSource,#txtProductSource,#txtLotDestination,#txtProductDestination").prop("disbaled",true);
            $(".easyui-linkbutton").not("#btnBack").hide();
            $("#dIssueDate").datebox({ disabled: true });
            $("#dIssueDate").datebox("setValue", _oSUProductionMixture.IssueDateSt);
        }

        $("#btnDisburseSource,#btnReceiveDestination").hide();
        if(_oSUProductionMixture.RunBy > 0)
        {
            $("#btnDisburseSource,#btnReceiveDestination").show();
        }
    }

    function RefreshSummary()
    {
        var nTotalQtySource=0;
        var oItemSources = $("#tblSource").datagrid("getRows");
        for(var i=0;i<oItemSources.length;i++)
        {
            nTotalQtySource = parseFloat(oItemSources[i].Qty) + parseFloat(nTotalQtySource);
        }
        $("#lblTotalSource").text(formatPrice(nTotalQtySource) + "(KG)");

        var nTotalQtyDestination=0;
        var oItemDestinations = $("#tblDestination").datagrid("getRows");
        for(var i=0;i<oItemDestinations.length;i++)
        {
            nTotalQtyDestination = parseFloat(oItemDestinations[i].Qty) + parseFloat(nTotalQtyDestination);
        }
        $("#lblTotalDestination").text(formatPrice(nTotalQtyDestination) + "(KG)");
    }

    function RefreshObj(sType)
    {
        endEditingSource();
        endEditingDestination();

        var oPM = {
            SUPMID : (_oSUProductionMixture == null ? 0 : _oSUProductionMixture.SUPMID),
            Code : $.trim($("#txtCode").val()),
            WUID : $("#cboStore").val(),
            IssueDate : $('#dIssueDate').datebox('getValue'),
            Note : $.trim($("#txtNote").val())
        };
        return oPM;
    }

    function CheckDetailValidation(sType)
    {
        if(sType == "Source")
        {
            if(_oPMDSource.LotID == 0)
            {
                alert("Please Select Lot.");
                $("#txtLotSource").focus();
                $("#txtLotSource").addClass("errorFieldBorder");
                return false;
            }else{
                $("#txtLotSource").removeClass("errorFieldBorder");
            }

            if(_oPMDSource.ProductID == 0)
            {
                alert("Please Select Count.");
                $("#txtProductSource").focus();
                $("#txtProductSource").addClass("errorFieldBorder");
                return false;
            }else{
                $("#txtProductSource").removeClass("errorFieldBorder");
            }
        }
        else if(sType == "Destination")
        {
            if(_oPMDDestination.LotID == 0)
            {
                alert("Please Select Lot.");
                $("#txtLotDestination").focus();
                $("#txtLotDestination").addClass("errorFieldBorder");
                return false;
            }else{
                $("#txtLotDestination").removeClass("errorFieldBorder");
            }

            if(_oPMDDestination.ProductID == 0)
            {
                alert("Please Select Count.");
                $("#txtProductDestination").focus();
                $("#txtProductDestination").addClass("errorFieldBorder");
                return false;
            }else{
                $("#txtProductDestination").removeClass("errorFieldBorder");
            }
        }
        return true;
    }

    function DisableEneableStore()
    {
        if(_oPMDSource.LotID == 0 && _oPMDSource.ProductID==0 && _oPMDDestination.LotID==0 && _oPMDDestination.ProductID == 0)
        {
            $("#cboStore").prop("disabled",false);
        }else{
            $("#cboStore").prop("disabled",true);
        }
    }

    function Validation()
    {
        if(parseInt($("#cboStore").val()) == 0)
        {
            $("#cboStore").focus();
            $("#cboStore").addClass("errorFieldBorder");
            alert("Please select a  Store.");
            return false;
        }else{
            $("#cboStore").removeClass("errorFieldBorder");
        }
        return true;
    }

    function OpenProductPicker(sParamTextId)
    {
        var sTextId = "#" + sParamTextId;

        var oProduct=null;
        if(sParamTextId ==  "txtProductSource")
        {
            oProduct={
                ProductName : $.trim($(sTextId).val()),
                WorkingUnitID : $("#cboStore").val(),
                LotID:_oPMDSource.LotID
            };
        }
        else if(sParamTextId ==  "txtProductDestination")
        {
            oProduct={
                ProductName : $.trim($(sTextId).val()),
                WorkingUnitID : $("#cboStore").val(),
                LotID:_oPMDDestination.LotID
            };
        }
           
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "Product",
            ActionName: "GetsProductByLotAndStoreMax",
            IsWinClose: false
        };

        $.icsMaxDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = []; var oColumn = { field: "ShortName", title: "Count", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductCategoryName", title: "Category", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProducts',
                        winclass: 'clsProduct',
                        winwidth: 400,
                        winheight: 460,
                        tableid: 'tblProducts',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ProductName',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam,sTextId);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else
            {
                alert("Sorry, No Lot Found.");
            }
        });
    }

    function OpenLotPicker(sParamTextId)
    {
       
        var sTextId = "#" + sParamTextId;

        var oLot=null;
        if(sParamTextId ==  "txtLotSource")
        {
            oLot={
                LotNo : $.trim($(sTextId).val()),
                WorkingUnitID : $("#cboStore").val(),
                ProductID:_oPMDSource.ProductID
            };
        }
        else if(sParamTextId ==  "txtLotDestination")
        {
            oLot={
                LotNo : $.trim($(sTextId).val()),
                WorkingUnitID : $("#cboStore").val(),
                ProductID:_oPMDDestination.ProductID
            };
        }
           
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLot,
            ControllerName: "Lot",
            ActionName: "GetsLotAByStoreAndProduct",
            IsWinClose: false
        };

        $.icsMaxDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].LotID > 0) {
                    var tblColums = []; var oColumn = { field: "LotNo", title: "Lot No", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "PreferenceUnitQty", title: "Balance", width: 120, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winLots',
                        winclass: 'clsLot',
                        winwidth: 400,
                        winheight: 460,
                        tableid: 'tblLots',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'LotNo',
                        windowTittle: 'Lot List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam,sTextId);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else
            {
                alert("Sorry, No Lot Found.");
            }
        });
    }

    function IntializePickerbutton(oPickerobj,sTextId) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            SetPickerValueAssign(oPickerobj,sTextId);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which === 13) {
                SetPickerValueAssign(oPickerobj,sTextId);
            }
        });
    }

    function SetPickerValueAssign(oPickerobj,sTextId) {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }

        if (oPickerobj.winid == 'winLots') {
            if (oreturnObj != null && oreturnObj.LotID > 0) {
                $(sTextId).val(oreturnObj.LotNo);
                $(sTextId).addClass("fontColorOfPickItem");

                if(sTextId == "#txtLotSource")
                {
                    _oPMDSource.LotID = oreturnObj.LotID;
                    _oPMDSource.LotQty = oreturnObj.Balance;
                    _oPMDSource.LotNo = oreturnObj.LotNo;
                    _oPMDSource.ProductID = oreturnObj.ProductID;
                    _oPMDSource.ProductName = oreturnObj.ProductName;
                    $("#txtProductSource").val(oreturnObj.ProductName);
                    $("#txtProductSource").addClass("fontColorOfPickItem");
                    $("#txtProductSource").focus();
                }
                else if(sTextId == "#txtLotDestination")
                {
                    _oPMDDestination.LotID = oreturnObj.LotID;
                    _oPMDDestination.LotQty = oreturnObj.Balance;
                    _oPMDDestination.LotNo = oreturnObj.LotNo;
                    _oPMDDestination.ProductID = oreturnObj.ProductID;
                    _oPMDDestination.ProductName = oreturnObj.ProductName;
                    $("#txtProductDestination").val(oreturnObj.ProductName);
                    $("#txtProductDestination").addClass("fontColorOfPickItem");
                    $("#txtProductDestination").focus();
                }
            }else{
                alert("Please select a Lot.");
                return false;
            }
        }
        else if (oPickerobj.winid == 'winProducts') {
            if (oreturnObj != null && oreturnObj.ProductID > 0) {
                $(sTextId).val(oreturnObj.ShortName);
                $(sTextId).addClass("fontColorOfPickItem");
                if(sTextId == "#txtProductSource")
                {
                    _oPMDSource.ProductID = oreturnObj.ProductID;
                    $("#txtProductSource").focus();
                }
                else if(sTextId == "#txtProductDestination")
                {
                    _oPMDDestination.ProductID = oreturnObj.ProductID;
                    $("#txtProductDestination").focus();
                }

            }else{
                alert("Please select a Product.");
                return false;
            }
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        DisableEneableStore();
    }

    function LoadComboboxes()
    {
        $("#cboStore").icsLoadCombo({
            List: _oWorkingUnits,
            OptionValue: "WorkingUnitID",
            DisplayText: "OperationUnitName"
        });
    }

    function BasicSetup()
    {
        $("#cboStore").focus();
        $("#cboStore").addClass("ComboFocusBorderClass");
        $(".easyui-datebox").datebox({ disabled: false });
        $(".easyui-datebox").datebox("setValue", icsdateformat(new Date()));
    }

    var editIndexSource = undefined;
    function onClickRowSource(index) {
        var oSelectedObject = $('#tblSource').datagrid('getSelected');
        if(oSelectedObject!= null && oSelectedObject.OperateBy > 0)
        {
            endEditingSource();
            return false;
        }
        if (editIndexSource != index) {
            if (endEditingSource()) {
                $('#tblSource').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oSelectedObject = $("#tblSource").datagrid("getSelected");
                editIndexSource = index;
            }
            else {
                $('#tblSource').datagrid('selectRow', editIndex);
            }
        }
    }

    function endEditingSource() {
        
        debugger;
        if (editIndexSource == undefined) {
            return true;
        }
        if ($('#tblSource').datagrid('validateRow', editIndexSource)) {
            $('#tblSource').datagrid('endEdit', editIndexSource);
            $('#tblSource').datagrid('selectRow', editIndexSource);
            var oSelectedObject = $("#tblSource").datagrid("getSelected");

            if(oSelectedObject.OperateBy == 0)
            {
                if(parseFloat(oSelectedObject.Qty) > parseFloat(oSelectedObject.LotQty))
                {
                    _sErrorMessage = "Lot No  " + oSelectedObject.LotNo + " 's Balance is " + formatPrice(oSelectedObject.LotQty);
                    oSelectedObject.Qty = 0;
                    $("#tblSource").datagrid("updateRow", { index: editIndexSource, row: oSelectedObject });
                    alert(_sErrorMessage);
                }
                else{
                    _sErrorMessage="";
                    SaveDetail(oSelectedObject, "Source", true);
                }
                editIndexSource = undefined;
                RefreshSummary();
            }
            return true;
        }
        else {
            return false;
        }
    }

    var editIndexDestination = undefined;
    function onClickRowDestination(index) {
        var oSelectedObject = $('#tblDestination').datagrid('getSelected');
        if(_sBtnId != "btnView")
        {
            if(oSelectedObject!= null && oSelectedObject.OperateBy > 0)
            {
                endEditingDestination();
                return false;
            }
            if (editIndexDestination != index) {
                if (endEditingDestination()) {
                    $('#tblDestination').datagrid('selectRow', index).datagrid('beginEdit', index);
                    var oSelectedObject = $("#tblDestination").datagrid("getSelected");
                    editIndexDestination = index;
                }
                else {
                    $('#tblDestination').datagrid('selectRow', editIndex);
                }
            }
        }
    }

    function endEditingDestination() {
        if (editIndexDestination == undefined) {
            return true;
        }
        if ($('#tblDestination').datagrid('validateRow', editIndexDestination)) {
            $('#tblDestination').datagrid('endEdit', editIndexDestination);
            $('#tblDestination').datagrid('selectRow', editIndexDestination);
            var oSelectedObject = $("#tblDestination").datagrid("getSelected");

            if(oSelectedObject.OperateBy == 0)
            {

                _sErrorMessage="";
                SaveDetail(oSelectedObject, "Destination", true);

                editIndexDestination = undefined;
                RefreshSummary();
            }
            return true;
        }
        else {
            return false;
        }
    }

</script>
