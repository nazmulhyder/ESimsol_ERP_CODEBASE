@{
    ViewBag.Title = "User";
}
<html>

<body>
    @model ESimSol.BusinessObjects.User
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div id="divUser" class="menuMainCollectionTable"  title="Add User" style="font-family:Tahoma; height:100%; width:100%">
        <div style="width:100%; height:87%; text-align:center">
            <fieldset class="bodyfieldsetstyle" style="height:97%">
                <legend style="text-align:left; font-weight:bold;"> User Informations : </legend>
                <div class="winViewFieldContainer">
                    <table style="width:100%;margin-top: 50px;">
                        <tr>
                            <td style="width:20%; text-align:right">LogIn-ID</td>
                            <td style="width:5%; text-align:center">:</td>
                            <td style="width:75%; text-align:left">
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.LogInID, new { style = "width: 500px;", id = "txtLogInID" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">User Name</td>
                            <td style="width:5%; text-align:center">:</td>
                            <td style="width:75%; text-align:left">
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.UserName, new { style = "width: 500px;", id = "txtUserName" })
                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td style="width:20%; text-align:right">Employee As</td>
                            <td style="width:5%; text-align:center">:</td>
                            <td style="width:75%; text-align:left">
                                <div class="editor-field">                                    
                                    <input id="txtEmployeeName" class="reset-text" style="width:445px" placeholder="Type & Press Enter" />
                                    <a id="btnPickEmployee" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                                    <a id="btnClrEmployee" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                                </div>

                            </td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">Email Address</td>
                            <td style="width:5%; text-align:center">:</td>
                            <td style="width:75%; text-align:left">
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.EmailAddress, new { style = "width: 500px;", id = "txtEmailAddress" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">Location</td>
                            <td style="width:5%; text-align:center">:</td>
                            <td style="width:75%; text-align:left">
                                <div class="editor-field">
                                    <select id="cboLocation" style="width:505px"></select>                                    
                                </div>

                            </td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">Account Holder Type</td>
                            <td style="width:5%; text-align:center">:</td>
                            <td style="width:75%; text-align:left">
                                <div class="editor-field">
                                    <select id="cboAccountHolderType" style="width:505px"></select>                                    
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">Financial User Type</td>
                            <td style="width:5%; text-align:center">:</td>
                            <td style="width:75%; text-align:left">
                                <div class="editor-field">
                                    <select id="cboFinancialUserType" style="width:505px"></select>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">Password</td>
                            <td style="width:5%; text-align:center">:</td>
                            <td style="width:75%; text-align:left">
                                <div class="editor-field">
                                    @Html.PasswordFor(model => model.Password, new { style = "width: 500px;", id = "txtPassword" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:20%; text-align:right">Confirm Password</td>
                            <td style="width:5%; text-align:center">:</td>
                            <td style="width:75%; text-align:left">
                                <div class="editor-field">
                                    @Html.PasswordFor(model => model.ConfirmPassword, new { style = "width: 500px;", id = "txtConfirmPassword" })
                                </div>
                            </td>
                        </tr>
                        @Html.HiddenFor(model => model.OwnerID)
                        @Html.HiddenFor(model => model.LoggedOn)
                        @Html.HiddenFor(model => model.LoggedOnMachine)
                        @Html.HiddenFor(model => model.CanLogin)
                        @Html.HiddenFor(model => model.DomainUserName)
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                    </table>
                </div>
            </fieldset>
        </div>
        <div style="width:100%; height:10%">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:80%; text-align:right"></td>
                        <td style="width: 10%">
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        </td>
                        <td style="width: 10%">
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

</body>
</html>
<script type="text/javascript">
    var _oUser=null;
    $(document).ready(function () {
        _oUser =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oLocations = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Locations));
        var oAccountHolderTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.AccountHolderTypes));
        var oFinancialUserTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FinancialUserTypes));
        
        $('#cboLocation').data('Locations', oLocations);
        $('#cboAccountHolderType').data('AccountHolderTypes', oAccountHolderTypes);
        $('#cboFinancialUserType').data('FinancialUserTypes', oFinancialUserTypes);

        $('#divUser').panel({ title : sessionStorage.getItem("UserHeader") });
        if(sessionStorage.getItem("UserHeader")==="View User")
        {
            $('#btnSave').hide();
        }
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
        RefreshControl();
    });
    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }
    function RefreshControl()
    {
        var oLocations = $('#cboLocation').data('Locations');
        var oAccountHolderTypes = $('#cboAccountHolderType').data('AccountHolderTypes');
        var oFinancialUserTypes = $('#cboFinancialUserType').data('FinancialUserTypes');

        $("#cboLocation").icsLoadCombo({ List: oLocations, OptionValue: "LocationID", DisplayText: "Name" });
        $("#cboAccountHolderType").icsLoadCombo({ List: oAccountHolderTypes, OptionValue: "id", DisplayText: "Value" });
        $("#cboFinancialUserType").icsLoadCombo({ List: oFinancialUserTypes, OptionValue: "id", DisplayText: "Value" });

        $("#txtEmployeeName").val(_oUser.EmployeeNameCode);
        $("#cboLocation").val(_oUser.LocationID);
        $("#cboAccountHolderType").val(_oUser.AccountHolderTypeInInt);
        $("#cboFinancialUserType").val(_oUser.FinancialUserTypeInt);

    }

    function RefreshUserLayout(buttonId) {
        if (buttonId === "btnViewUser") {
            $("input").prop("disabled", true);
            $("#btnSave").hide();
        }
        else {
            $("input").not('#txtUserNo').prop("disabled", false);
            $("#btnSave").show();
        }
        $(".disabled input").prop("disabled", true);
        $(".number").icsNumberField();
    }

    function ValidateInput()
    {
        if($("#txtLogInID").val()==null ||$("#txtLogInID").val()=="")
        {
            alert("Please enter LogIn-ID!");
            $('#txtLogInID').focus();
            return false;
        }
        if($("#txtUserName").val()==null ||$("#txtUserName").val()=="")
        {
            alert("Please enter User name!");
            $('#txtUserName').focus();
            return false;
        }        
        if($("#cboLocation").val()==null ||parseInt($("#cboLocation").val())<=0)
        {
            alert("Please select Location!");
            $('#cboLocation').focus();
            return false;
        }
        if($("#cboAccountHolderType").val()==null ||parseInt($("#cboAccountHolderType").val())<=0)
        {
            alert("Please select Account Holder Type!");
            $('#cboAccountHolderType').focus();
            return false;
        }
        if($("#cboFinancialUserType").val()==null ||parseInt($("#cboFinancialUserType").val())<=0)
        {
            alert("Please select Financial UserType!");
            $('#cboFinancialUserType').focus();
            return false;
        }

        var inp = $("#txtPassword").val();
        var inp2 = $("#txtConfirmPassword").val();
        if (inp != inp2) {
            alert("Password mismatch. Try again!!!");
            return false;
        }

        return true;
    }

    function RefreshObject()
    {
        var cboAccountHolderType = document.getElementById("cboAccountHolderType");
        var oUser= {
            UserID : _oUser==null ? 0 : parseInt(_oUser.UserID),
            LogInID :  $("#txtLogInID").val(),
            UserName :  $("#txtUserName").val(),
            Password : $("#txtPassword").val(),
            OwnerID : _oUser.OwnerID,
            LoggedOn : _oUser.OwnerID,
            LoggedOnMachine : _oUser.OwnerID,
            CanLogin : _oUser.OwnerID,
            DomainUserName : _oUser.OwnerID,
            EmployeeID :_oUser.EmployeeID,
            LocationID : parseInt($("#cboLocation").val()),
            AccountHolderTypeInInt : parseInt($("#cboAccountHolderType").val()),
            EmailAddress :  $("#txtEmailAddress").val(),
            FinancialUserTypeInt : parseInt($("#cboFinancialUserType").val())
        };
        return oUser;
    }

    $("#btnSave").click(function(){
        if(!ValidateInput()) return;
        var oUser=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/User/Save",
            traditional: true,
            data:  JSON.stringify(oUser),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oUser = jQuery.parseJSON(data);
                if (oUser.UserID>0) {
                    alert("Data Saved sucessfully");
                    var oUsers =sessionStorage.getItem("Users");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oUsers!=null)
                    {
                        oUsers = jQuery.parseJSON(oUsers);
                    }
                    else
                    {
                        oUsers=[];
                    }
                    if(nIndex!=-1)
                    {
                        oUsers[nIndex]=oUser;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oUsers.length);
                        oUsers.push(oUser);
                    }
                    sessionStorage.setItem("Users", JSON.stringify(oUsers));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oUser.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#btnClose").click(function(){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            window.location.href = sessionStorage.getItem("BackLink");
        }
    });

    $("#btnClrEmployee").click(function () {
        $("#txtEmployeeName").val("");
        _oUser.EmployeeID=0;
    });

    $("#btnPickEmployee").click(function () {

        var oEmployee = {
            Params:  $.trim($("#txtEmployeeName").val())+'~'+ 0
        };

        GetEmployees(oEmployee);
    });

    $("#txtEmployeeName").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var sEmployeeName=$.trim($("#txtEmployeeName").val());
            if(sEmployeeName=="" || sEmployeeName==null)
            {
                alert("Please, Type name or part of Name");
                $("#txtEmployeeName").focus();
                $("#txtEmployeeName").addClass("errorFieldBorder");
                return;
            }
            var oEmployee = {
                Params:  $.trim($("#txtEmployeeName").val())+'~'+ 0
            };
            GetEmployees(oEmployee);
        }
        else if(nkeyCode==8){
            $("#txtEmployeeName").val("");
            _oUser.EmployeeID=0;

        }
    });
    function GetEmployees(oEmployee){
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "EmployeeID", title: "Code", width: 50, align: "center" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 190, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Phone", title: "Phone", width: 140, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winEmployeePicker',
                        winclass:'clsEmployeePicker',
                        winwidth: 460,
                        winheight: 460,
                        tableid: 'tblEmployeePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No Employee found.");
            }
        });
    }
    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winEmployeePicker') {
            if (oreturnObj != null && oreturnObj.EmployeeID > 0)
            {
                $('#txtEmployeeName').val(oreturnObj.Name);
                _oUser.EmployeeID= oreturnObj.EmployeeID;
            }
            else{
                alert("Data not found");
            }
        }

    }
</script>