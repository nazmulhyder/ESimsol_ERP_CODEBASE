@{
    ViewBag.Title = "Disciplinary Action";
}
<html>
<head>
    <title>View DisciplinaryAction</title>
</head>

@{var MenuID = HttpContext.Current.Session[SessionInfo.MenuID];}
<body class="menuMainCollectionTable">
    @model ESimSol.BusinessObjects.DisciplinaryAction

    <div style="font-family: Tahoma;">

        <fieldset style="width:98%; height:470px;">
            <legend id="lblHeaderName" style="font-weight: bold"> New DisciplinaryAction Information : </legend>
            <table id="Maintable" border="0" cellspacing="2" cellpadding="2" style="width:100%;font-size: 11px;font-weight: bold; ">
                <tr class="Maintable_tr">
                    <td class="Maintable_td_Caption" style="text-align: right">
                        Employee :
                    </td>
                    <td class="Maintable_td_Input">
                        <input id="txtEmployeeName" type="text" style="width:55.3%;" placeholder="Type name or code then enter" />
                        <input type="button" value="P" id="btnEmployee" />
                    </td>
                </tr>

                @*<tr class="Maintable_tr">
                    <td class="Maintable_td_Caption" style=" text-align: right;">
                        Nature :
                    </td>
                    <td class="Maintable_td_Input">
                        <input type="text" id="txtNature" style="width:50%" disabled="disabled" />
                    </td>
                </tr>
                <tr class="Maintable_tr">
                    <td class="Maintable_td_Caption" style="text-align: right">
                        Location :
                    </td>
                    <td class="Maintable_td_Input">
                        @Html.TextBoxFor(model => model.LocationName, new { style = "width: 50%", id = "txtLocation", disabled = "disabled" })
                    </td>
                   
                </tr>
                <tr class="Maintable_tr">
                    <td class="Maintable_td_Caption" style="text-align: right">
                        Department :
                    </td>
                    <td class="Maintable_td_Input">
                        @Html.TextBoxFor(model => model.DepartmentName, new { style = "width: 50%; ", id = "txtDepartment", disabled = "disabled" })
                    </td>
                </tr>
                <tr>
                    <td class="Maintable_td_Caption" style=" text-align: right">
                        Designation :
                    </td>
                    <td class="Maintable_td_Input">
                        @Html.TextBoxFor(model => model.DesignationName, new { style = "width: 50%; ", id = "txtDesignation", disabled = "disabled" })
                    </td>
                 
                </tr>
                <tr class="Maintable_tr">
                    <td class="Maintable_td_Caption" style=" text-align: right">
                        Employee Type:
                    </td>
                    <td class="Maintable_td_Input">
                        <input type="text" id="txtEmployeeType" style="width: 50%" disabled="disabled" />
                    </td>
                </tr>
                <tr class="Maintable_tr">
                    <td class="Maintable_td_Caption" style=" text-align: right">
                        Payment Cycle:
                    </td>
                    <td class="Maintable_td_Input">
                        @Html.TextBoxFor(model => model.PaymentCycle, new { style = "width: 50%; ", id = "txtPaymentCycle", disabled = "disabled" })
                    </td>
                 
                </tr>
                <tr class="Maintable_tr">
                    <td class="Maintable_td_Caption" style="text-align: right">
                        Gross Salary :
                    </td>
                    <td class="Maintable_td_Input">
                        <input type="text" id="txtGrossSalary" style="width: 50%" disabled="disabled" />
                    </td>
                </tr>*@
                <tr class="Maintable_tr">
                    <td></td>
                    <td class="Maintable_td_Caption"  style="text-align:right;">
                        <table id="tblEmployeeInfo" title="Employee List" class="easyui-datagrid" style="width:60%;height:200px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbar">
                            <thead>
                                <tr>
                                    <th field="EmployeeName" width="150" align="left">Employee</th>
                                    <th field="DepartmentName" width="100" align="left">Department</th>
                                    <th field="DesignationName" width="100" align="left">Designation</th>
                                    <th field="GrossAmount" width="120" align="right" formatter="formatPrice">Gross Salary</th>
                                </tr>
                            </thead>
                        </table>
                    </td>
                </tr>

                <tr class="Maintable_tr">
                    <td class="Maintable_td_Caption" style=" text-align: right">
                        Type :
                    </td>
                    <td class="Maintable_td_Input">
                        <select style="width: 60%;" id="cboAllowanceType" onchange="LoadAllowance()"><option></option></select>
                    </td>
                </tr>
                <tr class="Maintable_tr">
                    <td class="Maintable_td_Caption" style=" text-align: right">
                        Salary Head :
                    </td>
                    <td class="Maintable_td_Input">
                        <select style="width: 60%;" id="cboAllowance"><option></option></select>
                    </td>
                </tr>
                <tr class="Maintable_tr">
                    <td class="" style="text-align: right">
                        Amount :
                    </td>
                    <td class="">                   
                        <input class="number" type="text" style="width:180px;" id="txtAmount" />     
                        Comp Amount :
                        <input class="number" type="text" style="width:180px;" id="txtCompAmount" />
                    </td>
                 
                </tr>
                <tr class="Maintable_tr">
                    <td class="Maintable_td_Caption" style=" text-align: right">
                        Execute On :
                    </td>
                    <td class="Maintable_td_Input">
                        <input id="txtExecutedOn" type="text" style="width: 60%" class="easyui-datebox"
                               required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    </td>
                </tr>
                <tr class="Maintable_tr">
                    <td class="Maintable_td_Caption" style="text-align: right">
                        Description:
                    </td>
                    <td class="Maintable_td_Input">
                        @Html.TextBoxFor(model => model.Description, new { style = "width:59.5%;", id = "txtDescription" })
                    </td>
                </tr>
             
</table>
        </fieldset>

        <fieldset style="width:98%;">
            <legend style="font-weight: bold">Action : </legend>
            <table id="Actiontable" border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%;">
                <tr class="Actiontable_tr">
                    <td style="width:100%; text-align: right">
                        <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved"
                           plain="true" onclick="Approve()">Approve</a>
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save"
                           plain="true" onclick="Save()">Save</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true"
                           onclick="Close()">Close</a>
                    </td>
                  
                </tr>
            </table>
        </fieldset>
    </div>
    <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Present Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Permanent Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>

                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            BU :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboBU" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Block :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtBlock" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnBlock" class="pick-btn" type="button" value="P" />
                            <input id="btnResetBlock" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Category:
                        </td>
                        <td class="td-AdvSearch-Level">
                            <div>
                                <select id="cboCategory" style="width:160px; float:left;"></select>
                                &nbsp; Gender :
                                <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 75px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                            <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                            <a id="btnEmployeeDatabaseXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true" onclick="PrintEmployeeDatabaseXL()"></a>
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" toolbar="#toolbar">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    @*<div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            BU :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboBU" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Category:
                        </td>
                        <td class="td-AdvSearch-Level">
                            <div>
                                <select id="cboCategory" style="width:160px; float:left;"></select>
                                &nbsp; Gender :
                                <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 75px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                            <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 425px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>*@
    <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="locationtree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

</body>
</html>
<style type="text/css">
    .Maintable_tr ,.Actiontable_tr
    {
        width:100%;
    }
    .Maintable_td_Input
    {
        width:85%;
    }
    .Maintable_td_Caption
    {
        width:15%;
    }
     .lblStar {
        color: #ff0000;
        font-weight: bold;
    }

    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>
<script type="text/javascript">

    var _oDisciplinaryAction = null;
    var _sBaseAddress = "";
    var _nEmployeeID=0;
    var oEmployee ="";

    var _sEmployeeIDs = "";
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _sAttendanceSchemeID="";
    var _sLocationID = "";
    var _sDepartmentID = "";
    var _sDesignationID = "";
    var _sBlockNames="";
    var _sBMMIDs="";

    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _oSalaryHeads_Addition=[];
    var _oSalaryHeads_Deduction=[];
    var _oSalaryHeadTypes=[];

    var _nMenuid=0;
    var _sDisciplinaryActionHeader="";
    var _nPaymentCycleInt =0;

    var _IsTextSearch=false;
    var _oBusinessUnits=[];
    var tCompAmount = "";

    $(document).ready(function() {
        _oDisciplinaryAction = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(MenuID));
        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _oSalaryHeads_Addition= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.SalaryHeads_Addition));
        _oSalaryHeads_Deduction= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.SalaryHeads_Deduction));
        _oSalaryHeadTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.SalaryHeadTypes));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        tCompAmount = document.getElementById("txtCompAmount");
        _sDisciplinaryActionHeader=sessionStorage.getItem("DisciplinaryActionHeader");
        InitializeSalaryHead();
        if(_oDisciplinaryAction.ErrorMessage!="")
        {
            alert(_oDisciplinaryAction.ErrorMessage);
            _oDisciplinaryAction.ErrorMessage=="";
        }

        $("#lblHeaderName").html(_sDisciplinaryActionHeader);
        if (_sDisciplinaryActionHeader == "New Disciplinary Action") {
            $("#btnApprove").hide();
        }

        if (_sDisciplinaryActionHeader == "Edit Disciplinary Action") {
            $("#btnApprove").hide();
            SetControl();
        }

        if (_sDisciplinaryActionHeader== "View Disciplinary Action") {
            $("#btnApprove").hide();
            $("#btnSave").hide();
            
            $("#btnEmployee").prop("disabled", true);
            $("#txtEmployeeName").prop("disabled", true);
            $("#txtDescription").prop("disabled", true);
            $("#txtExecutedOn").prop("disabled", true);
            $("#txtAmount").prop("disabled", true);
            $("#cboAllowanceType").prop("disabled", true);
            $("#cboAllowance").prop("disabled", true);
            SetControl();
        }

        if (_sDisciplinaryActionHeader== "Approve Disciplinary Action") {
            $("#btnSave").hide();
            $("#btnEmployee").prop("disabled", true);
            $("#txtEmployeeName").prop("disabled", true);
            $("#txtDescription").prop("disabled", true);
            $("#txtExecutedOn").prop("disabled", true);
            $("#txtAmount").prop("disabled", true);
            $("#cboAllowanceType").prop("disabled", true);
            $("#cboAllowance").prop("disabled", true);
            SetControl();
        }

        InitializeAdvSearch();
        $('#txtExecutedOn').datebox('setValue', _oDisciplinaryAction.ExecutedOnInString);
        LoadCateGory(oEmployeeCategorys);
    });

    $("#txtAmount").keyup(function() {
        tCompAmount.value = this.value;
    });

    function LoadCateGory(oEmployeeCategorys)
    {
        $("#cboCategory").icsLoadCombo({
            List: oEmployeeCategorys,
            OptionValue: "Value",
            DisplayText: "Text"
        });
    }
    function InitializeSalaryHead()
    {
        $("#cboAllowanceType").icsLoadCombo({
            List: _oSalaryHeadTypes,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboAllowanceType").val(_oDisciplinaryAction.SalaryHeadTypeInt);
        if(_oDisciplinaryAction.SalaryHeadTypeInt==2)
        {
            $("#cboAllowance").icsLoadCombo({
                List: _oSalaryHeads_Addition,
                OptionValue: "SalaryHeadID",
                DisplayText: "Name"
            });
        }
        else if(_oDisciplinaryAction.SalaryHeadTypeInt==3)
        {
            $("#cboAllowance").icsLoadCombo({
                List: _oSalaryHeads_Deduction,
                OptionValue: "SalaryHeadID",
                DisplayText: "Name"
            });
        }
        $("#cboAllowance").val(_oDisciplinaryAction.SalaryHeadID);
    }

    function SetControl()
    {
        //$("#txtEmployeeName").val(_oDisciplinaryAction.EmployeeName);
        //$("#txtLocation").val(_oDisciplinaryAction.LocationName);
        //$("#txtDepartment").val(_oDisciplinaryAction.DepartmentName);
        //$("#txtDesignation").val(_oDisciplinaryAction.DesignationName);
        $("#txtAmount").val(_oDisciplinaryAction.Amount);
        $("#txtCompAmount").val(_oDisciplinaryAction.CompAmount);
        //$("#txtDescription").val(_oDisciplinaryAction.Description);
        //_nEmployeeID = _oDisciplinaryAction.EmployeeID;
        //_nPaymentCycleInt = _oDisciplinaryAction.PaymentCycleInt;
        var oEmployee={EmployeeID:_oDisciplinaryAction.EmployeeID};
        var oEmployees=[];
        oEmployees.push(oEmployee);
        GetSalaryStructure(oEmployees);
    }

    function LoadAllowance()
    {
        var nAllowanceType = $("#cboAllowanceType").val();
        if (nAllowanceType ==2) 
        {
            $("#cboAllowance").icsLoadCombo({
                List: _oSalaryHeads_Addition,
                OptionValue: "SalaryHeadID",
                DisplayText: "Name"
            });
        }
        if (nAllowanceType ==3) 
        {
            $("#cboAllowance").icsLoadCombo({
                List: _oSalaryHeads_Deduction,
                OptionValue: "SalaryHeadID",
                DisplayText: "Name"
            });
        }
    }

    /*---------------- emp Search----------------*/

    function InitializeAdvSearch(){

        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                     {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                     {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentID = "";
        _sDesignationID = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
    }

    $("#btnEmployee").click(function () {
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            $("#lblRange1").show();
        }
        else
        {
            $("#lblRange1").hide();
        }
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }

        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }

        var nBusinessUnitID = $("#cboBU").val();
        var nCategory=$('#cboCategory').val();
        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();

        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentID=="" && _sDesignationID=="" &&
               nEmployeeTypeID==0 && sGender=="None" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
               bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 && !bIsJoiningDate 
               && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBMMIDs=="")
                {
                    alert("Please enter your selection criteria."); return false;
                }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentID + '~' +_sDesignationID + '~' +
                     sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                     bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                     sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                       +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBMMIDs;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnEmployeePickerOk").click(function () {
        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees== null || oEmployees.length<=0) { alert("please select atleast one item");return; }

        //_nEmployeeID=oEmployee.EmployeeID;
        //$("#txtEmployeeName").val(oEmployee.Name);
        //$("#txtLocation").val(oEmployee.LocationName);
        //$("#txtDepartment").val(oEmployee.DepartmentName);
        //$("#txtDesignation").val(oEmployee.DesignationName);
        _IsTextSearch=false;
        GetSalaryStructure(oEmployees);
        $("#winEmployeePicker").icsWindow('close');
    });

    function GetSalaryStructure(oEmployees)
    {
        var sIDs="";
        for(var i=0; i<oEmployees.length; i++)
        {
            sIDs+=oEmployees[i].EmployeeID+",";
        }
        sIDs=sIDs.substring(0,sIDs.length-1);

        var oEmployeeSalaryStructure = {IDs: sIDs};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeSalaryStructure,
            ControllerName: "EmployeeSalaryStructure",
            ActionName: "GetsEmployeeSalaryStructure",
            IsWinClose: false
        };
      
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0 && response.objs[0].ErrorMessage=="") {
                var oSSs=response.objs;
                //var oObj= new Object();
                //var oLists=[];
                //for(var i=0; i<oEmployees.length; i++)
                //{
                //    for(var j=0; j<oSSs.length; j++)
                //    {
                //        if(oEmployees[i].EmployeeID == oSSs[j].EmployeeID)
                //        {
                //            oObj= new Object();
                //            oObj.EmployeeID=oEmployees[i].EmployeeID;
                //            oObj.EmployeeName=oEmployees[i].Name;
                //            oObj.EmployeeCode=oEmployees[i].EmployeeCode;
                //            oObj.LocationName=oEmployees[i].LocationName;
                //            oObj.DepartmentName=oEmployees[i].DepartmentName;
                //            oObj.DesignationName=oEmployees[i].DesignationName;
                //            oObj.GrossAmount=oSSs[j].GrossAmount;
                //            oObj.PaymentCycleInString=oSSs[j].PaymentCycleInString;
                //            oObj.NatureOfEmployeeInString=oSSs[j].NatureOfEmployeeInString;
                //            oObj.PaymentCycleInt=oSSs[j].PaymentCycleInt;
                //            oLists.push(oObj);
                //        }
                //    }
                //}
                
                if(_IsTextSearch)
                {
                    //$('#tblEmployees').datagrid('appendRow', oLists[0]);
                    var oTEmps=$('#tblEmployeeInfo').datagrid('getRows');   
                    if(oTEmps.length>0)
                    {
                        for (var i = 0; i < oSSs.length; i++) 
                        {
                            var IsAppend=true;
                            for (var j = 0; j < oTEmps.length; j++) 
                            {
                                if(oSSs[i].EmployeeID==oTEmps[j].EmployeeID)
                                {
                                    IsAppend=false;
                                    break;
                                }
                            }
                            if(IsAppend)
                            {
                                $('#tblEmployeeInfo').datagrid('appendRow', oSSs[i]);
                            }
                        }
                    }
                    else
                    {
                        DynamicRefreshList(oSSs, "tblEmployeeInfo");
                    }
                }
                else
                {
                    DynamicRefreshList(oSSs, "tblEmployeeInfo");
                }
                
            }
            else{
                alert("This employee has no salary structure");
            }
        });
    }

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });

    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    /*-------------Location Picker----------------*/

    $("#btnLocationPicker").click(function(e){
        var nBusinessUnitID = $("#cboBU").val();
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitID:nBusinessUnitID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        var oLocation = $('#locationtree').tree('getSelected');
        if(oLocation!=null && oLocation.id>0){
            $("#winLocationPicker").icsWindow('close');
            $('#txtLocation').val(oLocation.text);
            _sLocationID= oLocation.id;
        }
        else{
            alert("Please select a location.");
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker").click(function(e){
        $('#txtLocation').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){
        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:$('#cboBU').val(),LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){

        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentID= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
    });

    $("#btnResetDepartmentPicker").click(function(e){
        $('#txtDepartment').val("");
        _sDepartmentID="";
    });

    /*-------------Designation Picker----------------*/

    $("#btnDesignationPicker").click(function(e){
        var oDesignation={
            DesignationID:0,
            Params: $('#cboBU').val()+'~'+_sLocationID+'~'+ _sDepartmentID
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignation!=null && oDesignation.DesignationID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtDesignation').val(oDesignation.Name);
                    _sDesignationID=oDesignation.DesignationID;
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker").click(function(e){
        $('#txtDesignation').val("");
        _sDesignationID="";
    });

    /*------------- Start Block Picker----------------*/
   
    $("#btnBlock").click(function(e){
        BlockPicker();
    });

    function BlockPicker()
    {
        var oBlockMachineMapping={
            ProductionProcessInt:0,
            DepartmentID:0,
            BlockName:""
        }
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlockMachineMapping,
            ControllerName: "BlockMachineMapping",
            ActionName: "BlockMachineMapping_Search",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
        
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BMMID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblShift',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'BlockName',
                        windowTittle: 'Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBlocks=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNames += oBlocks[i].BlockName+",";
                        _sBMMIDs += oBlocks[i].BMMID+",";
                    
                    }
                    _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                    _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
                    $("#txtBlock").val(_sBlockNames);
                }
                else
                {
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetBlock").click(function(e){
        $('#txtBlock').val("");
        _sBlockNames="";
        _sBMMIDs = "";
    });

    $("#txtBlock").keypress(function(e){
        if (e.which == 13)
        {
            BlockPicker();
        }
    });
    /*------------- End Block Picker----------------*/

    /*----------------------end emp search----------------------*/

    $('#txtEmployeeName').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployeeName").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployeeName").focus(); return;}
            SearchEmployeeByText(sCodeName);
        }
    });

    function SearchEmployeeByText(sEmpNameCode){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    //_nEmployeeID=oreturnObj.EmployeeID;
                    //$("#txtEmployeeName").val(oreturnObj.Name);
                    //$("#txtLocation").val(oreturnObj.LocationName);
                    //$("#txtDepartment").val(oreturnObj.DepartmentName);
                    //$("#txtDesignation").val(oreturnObj.DesignationName);
                    _IsTextSearch=true;
                    var oEmps=[];
                    oEmps.push(oreturnObj);
                    GetSalaryStructure(oEmps);
                    $("#winEmployeePicker").icsWindow('close');
                    
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        //_nEmployeeID=oreturnObj.EmployeeID;
                        //$("#txtEmployeeName").val(oreturnObj.Name);
                        //$("#txtLocation").val(oreturnObj.LocationName);
                        //$("#txtDepartment").val(oreturnObj.DepartmentName);
                        //$("#txtDesignation").val(oreturnObj.DesignationName);
                        _IsTextSearch=true;
                        var oEmps=[];
                        oEmps.push(oreturnObj);
                        GetSalaryStructure(oEmps);
                        $("#winEmployeePicker").icsWindow('close');
                        
                    }
                }
            }
        });
    }

    function ValidateInput()
    {
        var oEmployees = $('#tblEmployeeInfo').datagrid('getRows');
        if(oEmployees.length<=0)
        {
            alert("Please enter Employee Name !");
            $('#txtEmployeeName').focus();
            return false;
        }
        if ($("#cboAllowance").val()<=0)
        {
            alert("Please select  Salary head !");
            $('#cboAllowance').focus();
            return false;
        }
        if ($("#txtAmount").val() == null || $("#txtAmount").val() == ""|| $("#txtAmount").val()=="0.00")
        {
            alert("Please enter Amount!");
            $('#txtAmount').focus();
            return false;
        }

        var dat=$('#txtExecutedOn').datebox('getValue');
        if ( dat== null || dat == "")
        {
            alert("Please enter Execution Date !");
            $('#txtExecutedOn').focus();
            return false;
        }
        return true;
    }

    function RefreshObject()
    {
        
        var oEmployees = $('#tblEmployeeInfo').datagrid('getRows');
        var sIDs="";
        for(var i=0; i<oEmployees.length; i++)
        {
            sIDs+=oEmployees[i].EmployeeID+",";
        }
        sIDs=sIDs.substring(0,sIDs.length-1);
        debugger;
        var oDisciplinaryAction =
                   {
                       DisciplinaryActionID:_oDisciplinaryAction.DisciplinaryActionID,
                       sIDs:sIDs,
                       SalaryHeadID:$("#cboAllowance").val(),
                       Description: $("#txtDescription").val(),
                       Amount: $("#txtAmount").val(),
                       CompAmount: $("#txtCompAmount").val(),
                       ExecutedOn:$('#txtExecutedOn').datebox('getValue')
                   };
        return oDisciplinaryAction;
    }

    function Save()
    {
        if (!ValidateInput()) return;
        var oDisciplinaryAction = RefreshObject();
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDisciplinaryAction,
            ObjectId: oDisciplinaryAction.DisciplinaryActionID,
            ControllerName: "DisciplinaryAction",
            ActionName: "DisciplinaryAction_IU",
            TableId: "",
            IsWinClose: false
        };
        debugger
        $.icsSave(obj, function (response) {
            if (response.status && response.obj.DisciplinaryActions.length > 0&& response.obj.DisciplinaryActions[0].ErrorMessage =="") {
                var oDisciplinaryActions =sessionStorage.getItem("DisciplinaryActions");
                var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                if(oDisciplinaryActions!=null)
                {
                    oDisciplinaryActions = jQuery.parseJSON(oDisciplinaryActions);
                }
                else
                {
                    oDisciplinaryActions=[];
                }

                if(nIndex!=-1)
                {
                    oDisciplinaryActions[nIndex]=response.obj.DisciplinaryActions[0];
                }
                else
                {
                    sessionStorage.setItem("SelectedRowIndex", oDisciplinaryActions.length);
                    for(var i=0; i<response.obj.DisciplinaryActions.length;i++)
                    {
                        oDisciplinaryActions.push(response.obj.DisciplinaryActions[i]);
                    }
                    
                }
                sessionStorage.setItem("DisciplinaryActions", JSON.stringify(oDisciplinaryActions));
                window.location.href = _sBaseAddress+ "/DisciplinaryAction/ViewDisciplinaryActions?menuid="+_nMenuid;
            }
        });
    }

    function Approve()
    {
        debugger
        var oDisciplinaryAction = RefreshObject();
        if (oDisciplinaryAction.DisciplinaryActionID >0)
        {
            var oDA={sIDs:oDisciplinaryAction.DisciplinaryActionID}
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/DisciplinaryAction/DisciplinaryAction_Approve",
                traditional: true,
                data: JSON.stringify({oDisciplinaryAction:oDA}),
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    debugger;
                    var oDisciplinaryAction = jQuery.parseJSON(data);
                    if (oDisciplinaryAction.DisciplinaryActionID > 0) {
                        alert("Approved sucessfully");
                        var oDisciplinaryActions =sessionStorage.getItem("DisciplinaryActions");
                        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        if(oDisciplinaryActions!=null)
                        {
                            oDisciplinaryActions = jQuery.parseJSON(oDisciplinaryActions);
                        }
                        else
                        {
                            oDisciplinaryActions=[];
                        }
                        if(nIndex!=-1)
                        {
                            oDisciplinaryActions[nIndex]=oDisciplinaryAction;
                        }
                        else
                        {
                            sessionStorage.setItem("SelectedRowIndex", oDisciplinaryActions.length);
                            oDisciplinaryActions.push(oDisciplinaryAction);
                        }
                        sessionStorage.setItem("DisciplinaryActions", JSON.stringify(oDisciplinaryActions));
                        window.location.href = _sBaseAddress+ "/DisciplinaryAction/ViewDisciplinaryActions?menuid="+_nMenuid;
                    }else {
                        alert(oDisciplinaryAction.ErrorMessage);
                    }
                },
                error: function(xhr, status, error) {
                    alert(error);
                }
            });
        }
    }

    function Close()
    {
        window.location.href = _sBaseAddress+ "/DisciplinaryAction/ViewDisciplinaryActions?menuid="+_nMenuid;
    }

    $(document).keydown(function (e) { if (e.keyCode == 27) { $('div').icsWindow('close'); } });

</script>
