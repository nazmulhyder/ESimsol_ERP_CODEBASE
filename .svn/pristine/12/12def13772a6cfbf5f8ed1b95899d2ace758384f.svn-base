@{
    ViewBag.Title = "TermsAndCondition List";
}
@model IEnumerable<ESimSol.BusinessObjects.TermsAndCondition>

    <div class="menuMainCollectionTable" ng-app="TermsAndConditionApp">
        <div ng-controller="TermsAndConditionController">
            <div style="margin-bottom:2px; display:block" title="TermsAndCondition List" class="ui-grid-top-panel">
                <input type="text" ng-model="txtSearchByName" ng-keyup="SearchByModule($event)" placeholder="Search by Module Name" style="width:200px" />
                <button type="button" id="btnAdd" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="Add()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>
                <button type="button" id="btnEdit" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="Edit()"><span class="glyphicon glyphicon-edit" aria-hidden="true"> Edit</span></button>
                <button type="button" id="btnDetails" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="View()"><span class="glyphicon glyphicon-th" aria-hidden="true"> View</span></button>
                <button type="button" id="btnDelete" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="Delete()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Delete</span></button>
            </div>
            <div ui-grid="gridOptions" ui-grid-selection  class="grid-angular"></div>
        </div>
    </div>
<style type="text/css">
    .grid-angular {
        width: 100%;
        height:540px;
    }
</style>
<script type="text/javascript">
    debugger;
    var oTermsAndConditions =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));

    debugger;
    var TAndCApp= angular.module('TermsAndConditionApp', ['ui.grid','ui.grid.selection','ms.service']);
    TAndCApp.controller('TermsAndConditionController',function ($scope,uiGridConstants,userSession)
    {
        oTermsAndConditions= (userSession.getData('TermsAndConditions').length>0)? userSession.getData('TermsAndConditions'):oTermsAndConditions;
        debugger;
        $scope.gridOptions= {
            multiSelect: false,
            enableRowSelection: true,
            columnDefs: [
              { field: 'ModuleName', name:'Module', width:'27%' },
                { field: 'TermsAndConditionText', name:'Terms And Condition', width:'65%' }
            ],
            data: oTermsAndConditions,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.grid.modifyRows(oTermsAndConditions);
                $scope.gridApi.selection.selectRow(oTermsAndConditions[userSession.getRowIndex()]);
            }
        };
        $scope.SearchByModule = function(e)
        {
            debugger;
            var txtSearchByName = $scope.txtSearchByName;
            var rows = $scope.gridOptions.data;
            var sTempName="";
            var oSearchedList = [];
            var oCurrentList = $scope.gridOptions.data;
            if (e.which == 8)
            {
                oCurrentList = oTermsAndConditions;
            }
            for(i=0;i<oCurrentList.length;++i){
                sTempName=oCurrentList[i].ModuleName;
                n=sTempName.toUpperCase().indexOf(txtSearchByName.toUpperCase())
                if(n!=-1)
                {
                    oSearchedList.push(oCurrentList[i]);
                }
            }
            $scope.gridOptions= {data: oSearchedList};
        }
        $scope.Add=function()
        {
            sessionStorage.setItem("TermsAndConditions", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("TermsAndConditionHeader", "Add TermsAndCondition");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = sessionStorage.getItem('BaseAddress')+ "/TermsAndCondition/ViewTermsAndCondition?id=0";
        }
        $scope.Edit= function ()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oTermsAndCondition= data[0];//get selected index
            if(oTermsAndCondition==null || oTermsAndCondition.TermsAndConditionID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oTermsAndCondition);
            sessionStorage.setItem("TermsAndConditions", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("TermsAndConditionHeader", "Edit TermsAndCondition");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = sessionStorage.getItem('BaseAddress')+  "/TermsAndCondition/ViewTermsAndCondition?id="+oTermsAndCondition.TermsAndConditionID
        }

        $scope.View= function ()
        {
            //debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oTermsAndCondition= data[0];//get selected index
            if(oTermsAndCondition==null || oTermsAndCondition.TermsAndConditionID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oTermsAndCondition);
            sessionStorage.setItem("TermsAndConditions", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("TermsAndConditionHeader", "View TermsAndCondition");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = sessionStorage.getItem('BaseAddress')+  "/TermsAndCondition/ViewTermsAndCondition?id="+oTermsAndCondition.TermsAndConditionID;
        }
        $scope.Delete = function()
        {
            var data=$scope.gridApi.selection.getSelectedRows();
            var oTermsAndCondition= data[0];//get selected index
            if(oTermsAndCondition==null || oTermsAndCondition.TermsAndConditionID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if (!confirm("Confirm to Delete?")) return ;
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oTermsAndCondition);
            if (oTermsAndCondition.TermsAndConditionID > 0)
            {
                $.ajax
                ({
                    type: "GET",
                    dataType: "json",
                    url : sessionStorage.getItem('BaseAddress')+ "/TermsAndCondition/Delete",
                    data: { id: oTermsAndCondition.TermsAndConditionID},
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        debugger;
                        feedbackmessage = jQuery.parseJSON(data);
                        if (feedbackmessage == "Data delete successfully")
                        {
                            alert("Delete sucessfully");
                            $scope.gridOptions.data.splice(SelectedRowIndex,1);
                            $scope.gridApi.core.refresh();
                        }
                        else
                        {
                            alert(feedbackmessage);
                        }
                    },
                    error: function (xhr, status, error)
                    {
                        alert(error);
                    }

                });
            }
        }
  
    });


</script>