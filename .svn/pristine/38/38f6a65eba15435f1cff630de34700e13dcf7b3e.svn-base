<!DOCTYPE HTML>
<html>
<head>
    <title>Add Employee Basic Information</title>
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
</head>
<body>
    @model ESimSol.BusinessObjects.Employee
    <div style="font-family: Tahoma">
        <table border="0" cellspacing="2" cellpadding="2">
            <tr>
                <td style="background-color: #cfb53b; text-align: center; width: 980px; color: White">
                    <label id="lblHeaderName" style="font-size: 15px; font-weight: bold; text-decoration: Underline">
                        Add Employee Basic Information
                    </label>
                </td>
            </tr>
        </table>
        <div id="tt" class="easyui-tabs">
            @*EBI*@
            <div title="Employee Basic Information" data-options="iconCls:'icon-ok'" style="overflow: auto;
                padding: 10px;">
                <fieldset>
                    <legend style="font-weight: bold">Employee Basic Information </legend>@*table1*@
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                        <tr>
                            <td style="width: 220px; text-align: right">
                                B=Bangla,E=English &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp; Code :
                            </td>
                            <td>
                                <input id="txtCode" type="text" style="width: 225px" />
                            </td>
                            <td style="width: 140px; text-align: right">
                                Gender :
                            </td>
                            <td>
                                <select id="cboGender" style="width: 225px;">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                    <option value="3">Otrhers</option>
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 220px; text-align: right">
                                Name(English) :
                            </td>
                            <td>
                                <input id="txtNameInEngilish" type="text" style="width: 225px;" />
                            </td>
                            <td style="width: 140px; text-align: right">
                                Name (Bangla) :
                            </td>
                            <td>
                                <input id="txtNameInBangla" type="text" style="width: 225px;" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 220px; text-align: right">
                                Contact No :
                            </td>
                            <td>
                                <input id="txtContactNmuber" type="text" style="width: 225px" />
                            </td>
                            <td style="width: 140px; text-align: right">
                                Email :
                            </td>
                            <td>
                                <input id="txtEmail" type="text" style="width: 225px" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 220px; text-align: right">
                                <input id="chkFather" type="checkbox" />Father
                                <input id="chkHusband" type="checkbox" />Husband Name(B/E) :
                            </td>
                            <td>
                                <input id="txtFather" type="text" style="width: 225px" />
                            </td>
                            <td style="width: 140px; text-align: right">
                                Mother's Name(B/E) :
                            </td>
                            <td>
                                <input id="txtMotrherName" type="text" style="width: 225px" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 220px; text-align: right">
                                Present Address(B/E) :
                            </td>
                            <td colspan="3">
                                <input id="txtPresentAddress" type="text" style="width: 605px" />
                            </td>
                        </tr>
                        <tr>
                            @*table1*@ @*table2 start*@
                            <td colspan="4">
                                <fieldset>
                                    <legend style="font-weight: bold;">Permanent Address(B/E)</legend>
                                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                                        <tr>
                                            <td style="width: 205px; text-align: right">
                                                House :
                                            </td>
                                            <td>
                                                <input id="txtHouse" type="text" style="width: 225px" />
                                            </td>
                                            <td style="width: 145px; text-align: right">
                                                Post Code :
                                            </td>
                                            <td>
                                                <input id="txtPostCode" type="text" style="width: 210px" />
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width: 205px; text-align: right">
                                                Vill :
                                            </td>
                                            <td>
                                                <input id="txtVill" type="text" style="width: 225px" />
                                            </td>
                                            <td style="width: 145px; text-align: right">
                                                Post Office :
                                            </td>
                                            <td>
                                                <input id="txtPostOffice" type="text" style="width: 210px" />
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width: 205px; text-align: right">
                                                Thana :
                                            </td>
                                            <td>
                                                <input id="txtThana" type="text" style="width: 225px" />
                                            </td>
                                            <td style="width: 145px; text-align: right">
                                                District :
                                            </td>
                                            <td>
                                                <input id="txtDistrict" type="text" style="width: 210px" />
                                            </td>
                                        </tr>
                                    </table>
                                </fieldset>
                                @*table2 end *@ @*table3 start*@
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 200px; text-align: right">
                                Date Of Birth :
                            </td>
                            <td>
                                <input id="dtDateOfBirth" type="text" style="width: 225px" class="easyui-datebox"
                                       required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                            <td style="width: 120px; text-align: right">
                                Birth Reg. ID :
                            </td>
                            <td>
                                <input id="txtBirthID" type="text" style="width: 225px" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 200px; text-align: right">
                                Nationality(B/E) :
                            </td>
                            <td>
                                <input id="txtNationality" type="text" style="width: 225px" value="Bangladeshi" />
                            </td>
                            <td style="width: 120px; text-align: right">
                                National ID :
                            </td>
                            <td>
                                <input id="txtNationalID" type="text" style="width: 225px" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 200px; text-align: right">
                                Religion(B/E) :
                            </td>
                            <td>
                                <select id="cboReligion" style="width:230px">
                                    <option value="0">None</option>
                                    <option value="1">Islam</option>
                                    <option value="2">Hindu</option>
                                    <option value="3">Christian</option>
                                    <option value="4">Buddist</option>
                                </select>
                                @*<input id="txtReligion" type="text" style="width: 225px;" />*@
                            </td>
                            <td style="width: 120px; text-align: right">
                                Marital Status :
                            </td>
                            <td>
                                <select id="cboMaritalStatus" style="width: 225px">
                                    <option value="0">None</option>
                                    <option value="1">Married</option>
                                    <option value="2">UnMarried</option>
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 200px; text-align: right">
                                Children(B/E) :
                            </td>
                            <td colspan="3">
                                <input id="txtChildren" type="text" style="width: 605px" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 200px; text-align: right">
                                Note(B/E) :
                            </td>
                            <td colspan="3">
                                <input id="txtNote" type="text" style="width: 605px" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 200px; text-align: right">
                                Scheme :
                            </td>
                            <td>
                                <input id="txtAttScheme" type="text" style="width: 190px" placeholder="Type Att. Scheme name then enter" />
                                <input id="btnAttScheme" type="button" value="P" onclick="GetAttScheme()" />
                            </td>
                            <td style="width: 120px; text-align: right">
                                Current Shift :
                            </td>
                            <td>
                                <select id="cboCurrentShift" style="width: 225px;"></select>
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 200px; text-align: right">
                                DRP :
                            </td>
                            <td>
                                <input id="txtDepartmentRequirementPolicy" type="text" style="width: 190px" placeholder="Type DRP name then enter" />
                                <input id="btnDRP" type="button" value="P" onclick="GetDRP()" />
                            </td>
                            <td style="width: 120px; text-align: right">
                                Designation :
                            </td>
                            <td>
                                <select id="cboDesignation" style="width: 225px;"></select>
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 200px; text-align: right">
                                Date Of Join :
                            </td>
                            <td>
                                <input id="dtDateOfJoin" type="text" style="width: 225px" class="easyui-datebox"
                                       required="required" data-options="formatter:icsdateformat ,parser:icsdateparser" />
                            </td>
                            <td style="width: 120px; text-align: right">
                                Confirmation :
                            </td>
                            <td>
                                <input id="dtConfirmation" type="text" style="width: 225px" class="easyui-datebox"
                                       required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                        </tr>
                    </table>
                    @*table3 end*@
                </fieldset>
                <fieldset>
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                        <tr>
                            <td style="width: 800px">
                                <a id="btnAddPhoto" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add"
                                   plain="true" onclick="AddEmployeePhoto()">Add Photo</a> <a id="btnEditPhoto" href="javascript:void(0)"
                                                                                              class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddEmployeePhoto()">
                                    Edit Photo
                                </a>
                            </td>
                            <td style="width: 50px">
                                <a id="btnEmpSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save"
                                   plain="true">Save</a>
                            </td>
                            <td style="width: 50px">
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true"
                                   onclick="Close()">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>@*EBI*@ @*ESS*@
            <div title="Employee Salary Structure" data-options="iconCls:'icon-ok'" style="overflow: auto;
                padding: 10px;">
                <fieldset style="height:490px">
                    <legend style="font-weight: bold">Salary Structure Information </legend>@* main table for upper Portion*@
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px;">
                        <tr>
                            <td>
                                @*table1*@
                                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;
                                    margin-top: -35px">
                                    <tr>
                                        <td style=" text-align: right" colspan="2">
                                            <input id="txtCodeSearch" type="text" style="width: 140px;" placeholder="Type code then enter" />
                                            <input type="button" id="btnCopyFromOtherStructure" value="Copy" />
                                        </td>

                                    </tr>
                                    <tr>
                                        <td style="width: 130px; text-align: right">
                                            Employee :
                                        </td>
                                        <td style="width: 200px">
                                            <input type="text" disabled="disabled" style="width: 200px" id="txtEmployee" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 120px; text-align: right">
                                            Types Of Employee :
                                        </td>
                                        <td style="width: 200px;">
                                            <input type="text" disabled="disabled" style="width: 200px;" id="txtTypesOfEmployee" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 120px; text-align: right">
                                            @*Nature Of Employee :*@
                                        </td>
                                        <td style="width: 200px">
                                            @*                                    <input type="text" style="width: 200px" disabled="disabled" id="txtNatureOfEmployee"/>
                                            *@
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 120px; text-align: right">
                                            Scheme :
                                        </td>
                                        <td style="width: 200px">
                                            <input type="text" style="width: 150px" id="txtScheme" placeholder="Type salary scheme name and enter" />
                                            <input type="button" style="width: 45px;" value="Pick" id="btnScheme" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 120px; text-align: right">
                                            Payment Cycle :
                                        </td>
                                        <td style="width: 200px">
                                            <input type="text" style="width: 80px" disabled="disabled" id="txtPaymentCycle" />
                                            Start Day : <select id="cboStatDay" style="width:50px"> </select>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 120px; text-align: right">
                                            Description :
                                        </td>
                                        <td style="width: 200px">
                                            <input type="text" style="width: 200px" id="txtDescription" />
                                        </td>
                                    </tr>
                                </table>
                                @* end table1*@
                            </td>
                            <td>
                                @*table2*@
                                <table style="margin-left: 30px; margin-top: 2px; font-size: 11px; font-weight: bold;">
                                    <tr>
                                        <td>
                                            Gross Salary :
                                        </td>
                                        <td>
                                            <input type="text" style="width: 80px;" id="txtGrossSalary" />BDT
                                        </td>
                                        <td></td>
                                        <td>
                                            <input type="button" id="btnSetStructure" value="Set Structure" onclick="SetStructure()" />
                                            <input type="button" id="btnResetStructure" value="Reset Structure" onclick="ResetStructure()" />
                                        </td>
                                    </tr>
                                </table>
                                @*end table2*@ @*table3*@
                                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; margin-left: 30px;
                                    font-size: 11px;">
                                    <tr>
                                        <td>
                                            @*grid1*@
                                            <table id="tblSalarySchemeDetailBasic" class="easyui-datagrid" style="width: 450px;
                                                height: 155px; font-size: 11px;" fitcolumns="false" pagination="false" toolbar="#toolbar"
                                                   singleselect="true" autorowheight="false" data-options="singleSelect: false, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false, toolbar: '#toolbar1', onClickRow: onClickRow">
                                                <thead>
                                                    <tr>
                                                        <th field="SalaryHeadName" width="100" align="left">
                                                            Salary Head
                                                        </th>
                                                        @*<th field="Calculation" width="225" align="center" style="text-align: center">*@
                                                        <th data-options="field:'Calculation',width:225,align:'right',editor:{type:'numberbox',options:{precision:0}}"
                                                            align="center">
                                                            Equation
                                                        </th>
                                                        <th field="Amount" width="90" align="right" formatter="formatPrice">
                                                            Total Amount
                                                        </th>
                                                    </tr>
                                                </thead>
                                            </table>
                                        </td>
                                    </tr>
                                </table>
                                @*end table3*@ @*table4*@
                                <table style="margin-left: 30px; font-size: 11px; font-weight: bold;">
                                    <tr>
                                        <td style="width: 100px;">
                                            Total :
                                        </td>
                                        <td style="width: 80px; text-align: right;">
                                            <label id="lblTotalPercent" style="text-align: right; width: 125px;">
                                            </label>
                                        </td>
                                        <td style="width: 90px; text-align: right;">
                                            @*<label id="lblTotalAmount" style="text-align: right; width: 95px;">
                                                </label>*@
                                        </td>
                                        <td style="width: 165px; text-align: right;">
                                            <label id="lblTotal" style="text-align: right; width: 130px;">
                                            </label>
                                        </td>
                                    </tr>
                                </table>
                                @*end table4*@
                            </td>
                        </tr>
                    </table>
                    @* end main table for upper Portion*@ @*table for under portion*@
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; margin-left: 140px">
                        <tr>
                            <td style="font-weight: bold;">
                                Allowance
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <table id="tblSalarySchemeDetailAllowance" class="easyui-datagrid" style="width: 690px;
                                    height: 100px; font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="true">
                                    <thead>
                                        <tr>
                                            <th field="SalaryHeadName" width="105" align="left">Allowance</th>
                                            <th field="Calculation" width="100" align="left" style="text-align: right">Value</th>
                                            <th field="PeriodInString" width="125" align="left">Period</th>
                                            <th field="ConditionInString" width="110" align="left">Condition</th>
                                            <th field="ActivationAfterInString" width="120" align="left">Activation After</th>
                                            <th field="Amount" width="95" align="right" formatter="formatPrice">Total Amount</th>
                                        </tr>
                                    </thead>
                                </table>
                            </td>
                        </tr>
                    </table>
                    <table style="margin-left: 140px; font-size: 11px; font-weight: bold;">
                        <tr>
                            <td style="width: 250px;">
                                <input type="checkbox" id="chkAllowBankAdvice" />Allow Bank
                                Advice
                                <input type="checkbox" id="chkAllowOverTime" />Allow Over Time&nbsp;
                            </td>
                            <td id="tdforchkAllowOverTime" style="width: 300px;">
                                <label id="lblAllowOverTime">
                                </label>
                            </td>
                            <td style="width: 130px; text-align: right">
                                Total:&nbsp;
                                <label id="lblTotalValue">
                                </label>
                            </td>
                        </tr>
                    </table>
                    <table style="margin-left: 140px; font-size: 11px; font-weight: bold;">
                        <tr>
                            <td style="width: 450px">
                                <input id="chkProductionBase" type="checkbox" disabled="disabled" />Production Base
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 450px">
                                <input id="chkAttendanceDependent" type="checkbox" />Attendance
                                Dependent
                            </td>
                        </tr>
                        <tbody id="tbdAttendanceDependent">
                            <tr>
                                <td style="width: 450px">
                                    One Day Basic Salary Deduction For
                                    <input id="txtLateCount" type="text" style="width: 85px" />
                                    Days Late
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 450px">
                                    One Day Basic Salary Deduction For
                                    <input id="txtEarlyLeavingCount" type="text" style="width: 85px" />
                                    Days EarlyLeaving
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </fieldset>

                <fieldset>
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                        <tr>
                            <td style="width: 750px"></td>
                            <td style="width: 50px">
                                <a id="btnSaveESS" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            </td>
                            <td style="width: 50px">
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>@*ESS*@
            <div title="Authentication Information" data-options="iconCls:'icon-ok'" style="padding:10px;">
                <fieldset>
                    <legend style="font-weight:bold"> Authentication </legend>
                    <table id="tblEmployeAuthentication" title="Employee Authentication" class="easyui-datagrid" style="width:900px;height:500px;"
                           data-options="
                    singleSelect: true,
                    fitColumns:false,
                    rownumbers:true,
                    pagination:false,
                    autoRowHeight:false,
                    toolbar: '#EmployeAuthenticationtoolbar'
                ">
                        <thead>
                            <tr>
                                <th field="CardNo" width="160" align="left">Card/EnrollNo</th>
                                <th field="Activity" width="120" align="left">Activity</th>
                            </tr>
                        </thead>
                    </table>
                </fieldset>
                <div id="EmployeAuthenticationtoolbar" style="text-align:left;">
                    <table>
                        <tr>
                            <td style="width:40px;font-size:12px;"><a id="btnAddBAC" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddEmployeeAuthentication()">New</a></td>
                            <td style="width:40px;font-size:12px;"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="EditEmployeeAuthentication()">Edit</a></td>
                            <td style="width:40px;font-size:12px;"><a id="btnDeleteBAC" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteEmployeeAuthentication()">Remove</a></td>
                            <td style="width:40px;font-size:12px;"><a id="btnDeleteBAC" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="EmployeeAuthenticationActivity()">Activity</a></td>
                            <td style="width:150px;font-size:12px;"><a id="btnAddBAC" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AutoEmployeeAuthentication()">Auto Number</a></td>
                        </tr>
                    </table>
                </div>

            </div> @*Authentication Information*@

        </div>
    </div>
</body>
</html>
<script type="text/javascript">

    var _sBaseAddress="";
    var _oEmployee = null;
    var _ObName="";
    var _nUserID=0;
    var _objSDetail=null;
    var _nAttSchemeID=0;
    var _nDRPID=0;
    var _obj="";
    var _nEmployeeOfficialID=0;


    //GV for ESS
    var _oSalaryStructure=null;
    var _sBaseAddress="";
    var _oEmployee=null;
    var _oSalaryScheme=null;
    var _oBasicSalarySchemeDetails=[];
    var _oAllowanceSalarySchemeDetails=[];
    var _nFixedAmount=0;
    var _nTotal=0;
    var _nSalarySchemeID = 0;
    var _sOverTimeLabel="";
    var _nLateCount=0;
    var _nEarlyLeavingCount=0;
    // END GV for ESS

    $(document).ready(function()
    {
        debugger
        _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oEmployee = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        $('#dtDateOfBirth').datebox('setValue', _oEmployee.DateOfBirthInString);
        $('#dtDateOfJoin').datebox('setValue', _oEmployee.DateOfBirthInString);
        $('#dtConfirmation').datebox('setValue', _oEmployee.DateOfBirthInString);
        _obj = window.dialogArguments;
        _oSalaryStructure = _oEmployee.EmployeeSalaryStructure;
        if(_obj.Name=="Add Employee")
        {
            document.getElementById("chkFather").checked=true;
            document.getElementById("btnEditPhoto").style.display='none';
        }
        if(_obj.Name=="Edit Employee")
        {
            document.getElementById('lblHeaderName').innerHTML = _obj.Name;
            GetRosterPlanDetail(_oEmployee.AttendanceScheme.RosterPlanID);
            GetDesignationByOrganogram(_oEmployee.DRP.LocationID,_oEmployee.DRP.DepartmentID);
            RefreshControl();
            _nEmployeeOfficialID=_oEmployee.EmployeeOfficial.EmployeeOfficialID;
            document.getElementById("btnAddPhoto").style.display='none';
            if(_oEmployee.EmployeeSalaryStructure.ESSID>0)
            {
                GetsalarySchemeByID(_oEmployee.EmployeeSalaryStructure.SalarySchemeID, true);
                SetControl(_oSalaryStructure);
                _nSalarySchemeID = _oEmployee.EmployeeSalaryStructure.SalarySchemeID;                
            }
            else
            {
                document.getElementById("txtEmployee").value=_oEmployee.Name;
                document.getElementById("txtTypesOfEmployee").value=_oEmployee.EmployeeTypeName;
            }
        }
        document.getElementById("lblAllowOverTime").style.display = 'none';
        document.getElementById("tbdAttendanceDependent").style.display = 'none';
        $('#txtGrossSalary').numberbox();        
        LoadEmployeeAuthenticationGrid();
    });

    function RefreshControl()
    {

        if(_oEmployee.Gender=="Male")
        {
            document.getElementById("cboGender").value=1;
        }
        else  if(_oEmployee.Gender=="Female")
        {
            document.getElementById("cboGender").value=2;
        }
        else  if(_oEmployee.Gender=="Others")
        {
            document.getElementById("cboGender").value=3;
        }

        document.getElementById("txtCode").value=_oEmployee.Code;
        document.getElementById("txtNameInEngilish").value=_oEmployee.Name;
        document.getElementById("txtNameInBangla").value=_oEmployee.NameInBangla;
        document.getElementById("txtContactNmuber").value=_oEmployee.ContactNo;
        document.getElementById("txtEmail").value=_oEmployee.Email;
        document.getElementById("txtFather").value=_oEmployee.FatherName;
        document.getElementById("txtMotrherName").value=_oEmployee. MotherName;
        document.getElementById("txtHouse").value=_oEmployee.ParmanentAddress;
        document.getElementById("txtPresentAddress").value=_oEmployee. PresentAddress;

        document.getElementById("txtVill").value=_oEmployee.Village;
        document.getElementById("txtPostOffice").value=_oEmployee.PostOffice;
        document.getElementById("txtThana").value=_oEmployee.Thana;
        document.getElementById("txtDistrict").value=_oEmployee.District;
        document.getElementById("txtPostCode").value=_oEmployee.PostCode;

        $('#dtDateOfBirth').datebox('setValue',_oEmployee.DateOfBirthInString);
        document.getElementById("txtBirthID").value=_oEmployee.BirthID;
        document.getElementById("txtNationality").value=_oEmployee.Nationalism;
        document.getElementById("txtNationalID").value=_oEmployee.NationalID;

        var Religion = document.getElementById("cboReligion");
        Religion.options[Religion.selectedIndex].text=_oEmployee.Religious;

        if(_oEmployee.MaritalStatus=="Married")
        {
            document.getElementById("cboMaritalStatus").value=1;
        }
        else  if(_oEmployee.MaritalStatus=="UnMarried")
        {
            document.getElementById("cboMaritalStatus").value=2;
        }

        document.getElementById("txtChildren").value=_oEmployee.ChildrenInfo ;
        document.getElementById("txtNote").value=_oEmployee. Note;

        _nAttSchemeID=_oEmployee.EmployeeOfficial.AttendanceSchemeID;
        _nDRPID=_oEmployee.EmployeeOfficial.DRPID;
        document.getElementById("txtAttScheme").value=_oEmployee.EmployeeOfficial.AttendanceSchemeName;
        document.getElementById("txtDepartmentRequirementPolicy").value=_oEmployee.EmployeeOfficial.DRPName;
        $('#dtDateOfJoin').datebox('setValue',_oEmployee.EmployeeOfficial.DateOfJoinInString);
        $('#dtConfirmation').datebox('setValue',_oEmployee.EmployeeOfficial.DateOfConfirmationInString);
        debugger;
        if(_oEmployee.IsFather==false)
        {
            document.getElementById("chkHusband").checked=true;
        }
        else
        {
            document.getElementById("chkFather").checked=_oEmployee.IsFather;
        }
    }

    function  icsdateformat(date)
    {
        var mthNames = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
        var y = date.getFullYear();
        var m = date.getMonth();
        var d = date.getDate();
        var result= d +' '+ mthNames[m]+' '+ y;
        return result;
    }

    $('#chkFather').click(function (e)
    {
        if(document.getElementById("chkFather").checked==true)
        {
            document.getElementById("chkHusband").checked=false;
        }
    });

    $('#chkHusband').click(function (e)
    {
        if(document.getElementById("chkHusband").checked==true)
        {
            document.getElementById("chkFather").checked=false;
        }
    });

    function  GetAttScheme()
    {
        var oParameter = new Object();
        oParameter.Name = "Pick Attendance Scheme";
        oParameter.MultipleItemReturn=false;
        var url = _sBaseAddress + "/AttendanceScheme/AttendanceSchemeSearch";
        var oAttendanceScheme = window.showModalDialog(url, oParameter, 'dialogHeight:423px;dialogWidth:850px;dialogLeft:150;dialogRight:150;dialogTop:200;center:yes;resizable:yes;status:no;scroll:no');
        debugger;
        if (oAttendanceScheme ==null)return;
        if (oAttendanceScheme.AttendanceSchemeID>0)
        {
            document.getElementById("txtAttScheme").value=oAttendanceScheme.Name;
            _nAttSchemeID=oAttendanceScheme.AttendanceSchemeID;
            GetRosterPlanDetail(oAttendanceScheme.RosterPlanID);
        }

    }

    $('#txtAttScheme').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        var sASName = document.getElementById("txtAttScheme").value;

        if (code == 13)//Enter key-13
        {
            var nts=(new Date()).getTime()/1000;
            var oParameter = new Object();
            oParameter.MultipleItemReturn = false;
            var url = _sBaseAddress + "/AttendanceScheme/AttendanceSchemeSearchByName?sASName="+sASName+"&nts="+nts;
            var oAttendanceScheme = window.showModalDialog(url, oParameter, 'dialogHeight:320px;dialogWidth:210px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');

            if (oAttendanceScheme ==null)return;
            if (oAttendanceScheme.AttendanceSchemeID>0)
            {
                document.getElementById("txtAttScheme").value=oAttendanceScheme.Name;
                _nAttSchemeID=oAttendanceScheme.AttendanceSchemeID;
                GetRosterPlanDetail(oAttendanceScheme.RosterPlanID);
            }
        }
    });

    function GetRosterPlanDetail(RosterPlanID)
    {
        if (RosterPlanID<=0 || RosterPlanID==null)
        {
            alert('Invalid Roster plan');
            return;
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/RosterPlan/GetRosterPlanDetail",
            traditional: true,
            data:  JSON.stringify({nID:RosterPlanID}),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oRosterPlanDetails = jQuery.parseJSON(data);
                if (oRosterPlanDetails.length > 0) {
                    _oRosterPlanDetails=[];
                    _oRosterPlanDetails=oRosterPlanDetails;
                    RefreshShift(_oRosterPlanDetails);
                    if(_obj.Name=="Edit Employee")
                    {
                        document.getElementById("cboCurrentShift").value=_oEmployee.EmployeeOfficial.CurrentShiftID;
                    }
                }
                else {
                    alert(_oRosterPlanDetails[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function RefreshShift(oRosterPlanDetails)
    {

        var listSelectedShifts="";
        listSelectedShifts="<option value='"+0+"'>" +"--Select--" + "</option>";
        if(oRosterPlanDetails.length>0)
        {
            for (var j = 0; j <  oRosterPlanDetails.length; j++)
            {
                listSelectedShifts += "<option value='" + oRosterPlanDetails[j].ShiftID+"'>" + oRosterPlanDetails[j].Shift+"</option>";
            }
        }
        $("#cboCurrentShift").html(listSelectedShifts);
    }

    function GetDRP()
    {

        var oParameter = new Object();
        oParameter.MultipleItemReturn = false;
        var url = _sBaseAddress + "/DepartmentRequirementPolicy/DepartmentRequirementPolicySearch";
        var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:300px;dialogWidth:750px;dialogLeft:150;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');

        if (oReturnObject==null)return;
        if (oReturnObject=='undefined')return;
        //debugger;
        $("#txtDepartmentRequirementPolicy")[0].value = oReturnObject.DepartmentName;
        _nDRPID = oReturnObject.DepartmentRequirementPolicyID;
        //$("#txtLocation")[0].value = oReturnObject.LocationName;
        //$("#txtDepartment")[0].value = oReturnObject.DepartmentName;
        GetDesignationByOrganogram(oReturnObject.LocationID,oReturnObject.DepartmentID);
    }

    $('#txtDepartmentRequirementPolicy').keypress(function (e)
    {

        var code = (e.keyCode ? e.keyCode : e.which);
        var sDRPName = document.getElementById("txtDepartmentRequirementPolicy").value;

        if (code == 13)//Enter key-13
        {
            var nts=(new Date()).getTime()/1000;
            var oParameter = new Object();
            oParameter.MultipleItemReturn = false;
            var url = _sBaseAddress + "/DepartmentRequirementPolicy/DRPSearchByName?sDRPName="+sDRPName+"&nts="+nts;
            var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:320px;dialogWidth:205px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');

            if (oReturnObject==null)return;
            if (oReturnObject=='undefined')return;
            $("#txtDepartmentRequirementPolicy")[0].value = oReturnObject.DepartmentName;
            _nDRPID = oReturnObject.DepartmentRequirementPolicyID;
            //$("#txtLocation")[0].value = oReturnObject.LocationName;
            //$("#txtDepartment")[0].value = oReturnObject.DepartmentName;
            GetDesignationByOrganogram(oReturnObject.LocationID,oReturnObject.DepartmentID);
           
        }
    });

    function GetDesignationByOrganogram(nLocationID,nDepartmentID)
    {

        var oOrganograms=[];
        if (nLocationID<=0 || nLocationID==null)
        {
            RefreshDesignation(oOrganograms)
            return;
        }
        if (nDepartmentID<=0 || nDepartmentID==null)
        {
            RefreshDesignation(oOrganograms)
            return;
        }
        var tsv = ((new Date()).getTime()) / 1000;
        $.ajax({
            type: "GET",
            dataType: "json",
            url: _sBaseAddress+ "/DepartmentRequirementPolicy/Gets",
            data: { nLocationID: nLocationID,nDepartmentID:nDepartmentID,ts:tsv },
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                ////debugger;
                oOrganograms = jQuery.parseJSON(data);
                if (oOrganograms.length > 0) {

                    RefreshDesignation(oOrganograms);
                    if(_obj.Name=="Edit Employee")
                    {
                        document.getElementById("cboDesignation").value=_oEmployee.EmployeeOfficial.DesignationID;
                    }
                }
                else {
                    alert(oOrganograms[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function RefreshDesignation(oOrganograms)
    {
        var listSelectedDesignations="";

        listSelectedDesignations="<option value='"+0+"'>" +"--Select--" + "</option>";

        if(oOrganograms.length>0)
        {
            for (var j = 0; j < oOrganograms.length; j++)
            {
                listSelectedDesignations += "<option value='" + oOrganograms[j].DesignationID+"'>" + oOrganograms[j].DesignationName+"</option>";
            }
        }
        $("#cboDesignation").html(listSelectedDesignations);

    }


    function ValidateInput()
    {

        if($("#txtCode").val()=="")
        {
            alert("Please Enter Code !");
            $("#txtCode").focus();
            return false;
        }

        if(document.getElementById("cboGender").selectedIndex==0)
        {
            alert("Please Select Gender !");
            $("#cboGender").focus();
            return false;
        }

        if(document.getElementById("txtNameInEngilish").value=="")
        {
            alert("Please Enter Name In English !");
            $("#txtNameInEngilish").focus();
            return false;
        }

        if(document.getElementById("txtNameInBangla").value=="")
        {
            alert("Please Enter Name In Bangla !");
            $("#txtNameInBangla").focus();
            return false;
        }

        if(document.getElementById("txtContactNmuber").value=="")
        {
            alert("Please Enter Contact Number !");
            $("#txtContactNmuber").focus();
            return false;
        }

        var d = new Date();
        d.setHours(0);
        d.setMinutes(0);
        d.setSeconds(0);
        var UDate =new Date($('#dtDateOfBirth').datebox('getValue'));

        if(Date.parse(UDate)>=Date.parse(d))
        {
            alert("Invalid birth date !");
            $("#dtDateOfBirth").focus();
            return false;
        }

        if(_nAttSchemeID==0)
        {
            alert("Please Enter Att. Scheme !");
            $("#btnAttScheme").focus();
            return false;
        }

        if(_nDRPID==0)
        {
            alert("Please Enter DRP !");
            $("#btnDRP").focus();
            return false;
        }

        if(document.getElementById("cboDesignation").selectedIndex==0)
        {
            alert("Please Select Designation !");
            $("#cboDesignation").focus();
            return false;
        }

        if(document.getElementById("cboCurrentShift").selectedIndex==0)
        {
            alert("Please Select Current Shift !");
            $("#cboCurrentShift").focus();
            return false;
        }
        if(new Date($('#dtDateOfJoin').datebox('getValue'))>=new Date($('#dtConfirmation').datebox('getValue')))
        {
            alert("Invalid confirmation date !");
            $("#dtDateOfJoin").focus();
            return false;
        }
        return true;
    }

    function RefreshObject()
    {

        var Father=0;
        if(document.getElementById("chkFather").checked==true)
        {
            Father=1;

        }
        var EmpOfficial=
        {
            EmployeeOfficialID: _nEmployeeOfficialID,
            AttendanceSchemeID: _nAttSchemeID,
            DRPID : _nDRPID,
            DesignationID : document.getElementById("cboDesignation").value,
            CurrentShiftID : document.getElementById("cboCurrentShift").value,
            DateOfJoin : $('#dtDateOfJoin').datebox('getValue'),
            DateOfConfirmation : $('#dtConfirmation').datebox('getValue')

        };
        var Gender=document.getElementById("cboGender");
        var MarSt=document.getElementById("cboMaritalStatus");
        var Religion=document.getElementById("cboReligion");

        var oEmployee =
        {
            EmployeeID :_oEmployee.EmployeeID,
            Code:$("#txtCode").val(),
            Gender: Gender.options[Gender.selectedIndex].text,
            Name: document.getElementById("txtNameInEngilish").value,
            NameInBangla: document.getElementById("txtNameInBangla").value,
            ContactNo:document.getElementById("txtContactNmuber").value,
            Email : document.getElementById("txtEmail").value,
            IsFather:Father,
            FatherName : document.getElementById("txtFather").value,
            MotherName : document.getElementById("txtMotrherName").value,
            ParmanentAddress : document.getElementById("txtHouse").value,
            PresentAddress : document.getElementById("txtPresentAddress").value,

            Village : document.getElementById("txtVill").value,
            PostOffice : document.getElementById("txtPostOffice").value,
            Thana : document.getElementById("txtThana").value,
            District : document.getElementById("txtDistrict").value,
            PostCode : document.getElementById("txtPostCode").value,

            DateOfBirth : $('#dtDateOfBirth').datebox('getValue'),
            BirthID : document.getElementById("txtBirthID").value,
            Nationalism : document.getElementById("txtNationality").value,
            NationalID : document.getElementById("txtNationalID").value,
            Religious : Religion.options[Religion.selectedIndex].text,
            MaritalStatus : MarSt.options[MarSt.selectedIndex].text,
            ChildrenInfo : document.getElementById("txtChildren").value,
            Note : document.getElementById("txtNote").value,
            EmployeeOfficial : EmpOfficial


        };

        return oEmployee;
    }

    $('#btnEmpSave').click(function (e)
    {
        debugger;
        if (!ValidateInput()) return;
        var oEmployee = RefreshObject();

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeBasicInformation_IU",
            traditional: true,
            data: JSON.stringify(oEmployee),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {

                _oEmployee = jQuery.parseJSON(data);
                if (_oEmployee.ErrorMessage == "")
                {
                    alert("Data Saved sucessfully");
                    window.returnValue = _oEmployee;
                    document.getElementById("txtEmployee").value=_oEmployee.Name;
                    document.getElementById("txtTypesOfEmployee").value=_oEmployee.EmployeeTypeName;

                }
                else
                {
                    alert(_oEmployee.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });
    
    function AddEmployeePhoto()
    {

        if(_oEmployee.EmployeeID<=0)
        {
            alert("Please Save Employee Information !");
            return;
        }
        var oParameter = new Object();
        oParameter.Name = "Add Employee Photo";
        var tsv = ((new Date()).getTime()) / 1000;
        var url =_sBaseAddress+ "/Employee/View_EmployeePhoto?nId="+_oEmployee.EmployeeID+"&sMsg=N/A&ts="+tsv;
        var oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:320px;dialogWidth:340px;dialogLeft:300;dialogTop:150;center:yes;resizable:no;status:no;scroll:no');


    }
    
    var bCopyFromOther = false;
    function SetControl(_oSalaryStructure)
    {
        debugger;
        _sOverTimeLabel=""; _nLateCount=0;  _nEarlyLeavingCount=0;
        document.getElementById("chkAttendanceDependent").checked=false;
        document.getElementById("tbdAttendanceDependent").style.display = 'none';
        document.getElementById("chkAllowBankAdvice").checked=false;
        document.getElementById("chkAllowOverTime").checked=false;
        document.getElementById("lblAllowOverTime").style.display = 'none';        
        if(!bCopyFromOther)
        {
            document.getElementById("txtEmployee").value=_oSalaryStructure.EmployeeName;
            document.getElementById("txtTypesOfEmployee").value=_oSalaryStructure.EmployeeTypeName;
        }
        document.getElementById("txtScheme").value=_oSalaryStructure.SalarySchemeName;
        document.getElementById("txtPaymentCycle").value=_oSalaryStructure.PaymentCycleInString;
        LoadStartDay(_oSalaryStructure.PaymentCycleInString, _oSalaryStructure.StartDay);
        document.getElementById("txtDescription").value=_oSalaryStructure.Description;
        document.getElementById("txtGrossSalary").value=_oSalaryStructure.GrossAmount;
        document.getElementById("chkProductionBase").checked=_oSalaryStructure.IsProductionBase;
        document.getElementById("chkAllowBankAdvice").checked=_oSalaryStructure.IsAllowBankAccount;

        if(_oSalaryStructure.IsAllowOverTime==true)
        {
            _sOverTimeLabel="[Over Time Value : Over Time Hour*("+_oSalaryStructure.OverTimeONInString+"/"+_oSalaryStructure.DividedBy+")*"+_oSalaryStructure.MultiplicationBy+"]";
            document.getElementById("chkAllowOverTime").checked=_oSalaryStructure.IsAllowOverTime;
            document.getElementById("lblAllowOverTime").style.display = '';
            document.getElementById("lblAllowOverTime").innerHTML = _sOverTimeLabel;
        }
        if(_oSalaryStructure.IsAttendanceDependent==true)
        {
            _nLateCount=_oSalaryStructure.LateCount; _nEarlyLeavingCount=_oSalaryStructure.EarlyLeavingCount
            document.getElementById("chkAttendanceDependent").checked=_oSalaryStructure.IsAttendanceDependent;
            document.getElementById("tbdAttendanceDependent").style.display = '';
            document.getElementById("txtLateCount").disabled=true;
            document.getElementById("txtEarlyLeavingCount").disabled=true;
            document.getElementById("txtLateCount").value=_nLateCount;
            document.getElementById("txtEarlyLeavingCount").value=_nEarlyLeavingCount;
        }        
    }

    function LoadStartDay(sPaymentCycle, nStartDay)
    {
        $('#cboStatDay').empty();        
        var listItems= "<option value='0'>0</option>";
        if(sPaymentCycle=="Monthly")    
        {
            var n=30;
            for(i=1; i<=n;i++)
            {
                listItems += "<option value='" + i.toString() +"'>" + i.toString() +"</option>";
            }            
        }
        $("#cboStatDay").html(listItems);  
        $("#cboStatDay").val(nStartDay);  
    }

    function formatPrice(val)
    {

        if(val==null)
        {
            val=0.00;
        }
        val=parseFloat(val);
        var test = val.toFixed(2);
        var tests = addComma(test);
        return tests;
    }

    function addComma(nStr)
    {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var process = /(\d+)(\d{3})/;
        while (process.test(x1))
        {
            x1 = x1.replace(process, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }
    
    $('#btnScheme').click(function (e)
    {
        if(_oEmployee.EmployeeID <=0)
        {
            alert("There is no employee is saved to set salary structure! Please save emloyee information !");
            return;
        }

        var oParameter = new Object();
        oParameter.Name = " Search salary Scheme ";
        oParameter.MultipleItemReturn=false;
        var tsv = ((new Date()).getTime()) / 1000;
        var url = _sBaseAddress + "/SalaryScheme/AdvanceSearch?ts=" + tsv;
        _oSalaryScheme = window.showModalDialog(url, oParameter, 'dialogHeight:380px;dialogWidth:890px;dialogLeft:235;dialogRight:50;dialogTop:100;center:yes;resizable:yes;status:no;scroll:no');
        if(_oSalaryScheme!=null)
        {
            if(_oEmployee.EmployeeTypeName!=_oSalaryScheme.EmployeeTypeName)
            {
                alert("Please Select a Scheme for "+_oEmployee.EmployeeTypeName);
                return;
            }
            if(_oSalaryScheme.IsActive==false)
            {
                alert("Please Select An Active Scheme");
                return;
            }
            $("#txtScheme")[0].value=_oSalaryScheme.Name;
            $("#txtPaymentCycle")[0].value=_oSalaryScheme.PaymentCycleInString;
            LoadStartDay(_oSalaryScheme.PaymentCycleInString, _oSalaryScheme.StartDay);
            _nSalarySchemeID = _oSalaryScheme.SalarySchemeID;
            GetsalarySchemeByID(_oSalaryScheme.SalarySchemeID, false);
        }
    });

    $('#txtScheme').keypress(function (e)
    {
        if(_oEmployee.EmployeeID <=0)
        {
            alert("There is no employee is saved to set salary structure! Please save emloyee information !");
            return;
        }
        var code = (e.keyCode ? e.keyCode : e.which);
        var sSSName = document.getElementById("txtScheme").value;
        if (code == 13)//Enter key-13
        {
            var nts=(new Date()).getTime()/1000;
            var oParameter = new Object();
            oParameter.MultipleItemReturn = false;
            var url = _sBaseAddress + "/SalaryScheme/SalarySchemeSearchByName?sSSName="+sSSName+"&nts="+nts;
            _oSalaryScheme = window.showModalDialog(url, oParameter, 'dialogHeight:320px;dialogWidth:215px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');

            if(_oSalaryScheme!=null)
            {
                if(_oEmployee.EmployeeTypeName!=_oSalaryScheme.EmployeeTypeName)
                {
                    alert("Please Select a Scheme for "+_oEmployee.EmployeeTypeName);
                    return;
                }
                if(_oSalaryScheme.IsActive==false)
                {
                    alert("Please Select An Active Scheme");
                    return;
                }
                $("#txtScheme")[0].value=_oSalaryScheme.Name;
                $("#txtPaymentCycle")[0].value=_oSalaryScheme.PaymentCycleInString;
                LoadStartDay(_oSalaryScheme.PaymentCycleInString, _oSalaryScheme.StartDay);
                _nSalarySchemeID = _oSalaryScheme.SalarySchemeID;
                GetsalarySchemeByID(_oSalaryScheme.SalarySchemeID, false);
            }
        }
    });

    function GetsalarySchemeByID(nSId, bIsEdit)
    {

        if (nSId > 0)
        {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/SalaryScheme/CopyFromOtherGrade",
                data: { nId: nSId},
                contentType: "application/json; charset=utf-8",
                success: function(data)
                {
                    _oSalaryScheme = jQuery.parseJSON(data);
                    if (_oSalaryScheme != null)
                    {
                        LoadSalaryStructure(_oSalaryScheme, bIsEdit);
                    }
                    else
                    {
                        alert(_oSalaryScheme.ErrorMessage);
                    }
                },
                error: function(xhr, status, error)
                {
                    alert(error);
                }
            });
        }

    }

    function LoadSalaryStructure(oSalaryScheme, bIsEdit)
    {        
        _oBasicSalarySchemeDetails=[];
        _oAllowanceSalarySchemeDetails=[];
        _sOverTimeLabel=""; _nLateCount=0; _nEarlyLeavingCount=0;
        _sOverTimeLabel="[Over Time Value : Over Time Hour*("+oSalaryScheme.OverTimeONInString+"/"+oSalaryScheme.DividedBy+")*"+oSalaryScheme.MultiplicationBy+"]";
        _nLateCount=oSalaryScheme.LateCount; _nEarlyLeavingCount=oSalaryScheme.EarlyLeavingCount
        if(bIsEdit==false)
        {   
            document.getElementById("chkAllowBankAdvice").checked=oSalaryScheme.IsAllowBankAccount;
            document.getElementById("chkAllowOverTime").checked=oSalaryScheme.IsAllowOverTime;
            document.getElementById("chkProductionBase").checked=oSalaryScheme.IsProductionBase;

            if(oSalaryScheme.IsAllowOverTime==true)
            {                
                document.getElementById("lblAllowOverTime").style.display = '';
                document.getElementById("lblAllowOverTime").innerHTML = _sOverTimeLabel;
            }
            if(oSalaryScheme.IsAttendanceDependant==true)
            {                
                document.getElementById("chkAttendanceDependent").checked=oSalaryScheme.IsAttendanceDependant;
                document.getElementById("tbdAttendanceDependent").style.display = '';
                document.getElementById("txtLateCount").disabled=true;
                document.getElementById("txtEarlyLeavingCount").disabled=true;
                document.getElementById("txtLateCount").value=_nLateCount;
                document.getElementById("txtEarlyLeavingCount").value=_nEarlyLeavingCount;            
            }
        }

        for(var i=0;i<oSalaryScheme.SalarySchemeDetails.length;i++)
        {

            if(oSalaryScheme.SalarySchemeDetails[i].SalaryHeadType==1 )
            {                
                _oBasicSalarySchemeDetails.push(oSalaryScheme.SalarySchemeDetails[i]);
            }
            else if(oSalaryScheme.SalarySchemeDetails[i].SalaryHeadType!=1)
            {
                _oAllowanceSalarySchemeDetails.push(oSalaryScheme.SalarySchemeDetails[i]);
            }
        }


        RefreshListForSalaryHeadOfBasicType(_oBasicSalarySchemeDetails);
        RefreshListForSalaryHeadOfAllowanceType(_oAllowanceSalarySchemeDetails);

        if(bCopyFromOther || _oEmployee.EmployeeSalaryStructure.ESSID>0)
        {

            SetStructure();
        }
        bCopyFromOther = false;

    }
       
    function LoadSalaryStructureDetail(_oSalaryStructure)
    {
        _sOverTimeLabel="";
        var oNewBasicSalarySchemeDetails=[];
        var oNewAllowanceSalarySchemeDetails=[];

        var nAmount=0;
        var nAAmount=0;
        document.getElementById("chkAllowBankAdvice").checked=_oSalaryStructure.IsAllowBankAccount;
        document.getElementById("chkAllowOverTime").checked=_oSalaryStructure.IsAllowOverTime;

        if(_oSalaryStructure.IsAllowOverTime==true)
        {
            _sOverTimeLabel="[Over Time Value : Over Time Hour*("+_oSalaryStructure.OverTimeONInString+"/"+_oSalaryStructure.DividedBy+")*"+_oSalaryStructure.MultiplicationBy+"]";
            document.getElementById("lblAllowOverTime").style.display = '';
            document.getElementById("lblAllowOverTime").innerHTML =_sOverTimeLabel;
        }

        for(var i=0;i<_oSalaryStructure.EmployeeSalaryStructureDetails.length;i++)
        {

            if(_oSalaryStructure.EmployeeSalaryStructureDetails[i].SalaryHeadType==1)
            {
                oNewBasicSalarySchemeDetails.push(_oSalaryStructure.EmployeeSalaryStructureDetails[i]);
                nAmount=nAmount+_oSalaryStructure.EmployeeSalaryStructureDetails[i].Amount;
            }
            else if(_oSalaryStructure.EmployeeSalaryStructureDetails[i].SalaryHeadType!=1)
            {
                oNewAllowanceSalarySchemeDetails.push(_oSalaryStructure.EmployeeSalaryStructureDetails[i]);
                nAAmount=nAAmount+_oSalaryStructure.EmployeeSalaryStructureDetails[i].Amount;
            }
        }

        RefreshListForSalaryHeadOfBasicType(oNewBasicSalarySchemeDetails);
        RefreshListForSalaryHeadOfAllowanceType(oNewAllowanceSalarySchemeDetails);
        document.getElementById("lblTotal").innerHTML =formatPrice(nAmount);
        document.getElementById("lblTotalValue").innerHTML =formatPrice(nAAmount);

    }

    function RefreshListForSalaryHeadOfBasicType(oSalaryHeadNames)
    {

        data = oSalaryHeadNames;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblSalarySchemeDetailBasic').datagrid('loadData', data);
    }

    function RefreshListForSalaryHeadOfAllowanceType(oSalaryHeadNames)
    {

        data = oSalaryHeadNames;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblSalarySchemeDetailAllowance').datagrid('loadData', data);
    }

    function  SetStructure()
    {
        endEditing();
        if($("#txtScheme").val()=="")
        {
            alert("Please Enter Scheme Name !");
            $("#txtScheme").focus();
            return ;
        }
        if($("#txtGrossSalary").val()=="")
        {
            alert("Please Enter Gross salary ! ");
            $("#txtGrossSalary").focus();
            return ;
        }

        CalcutionBasicTypeSalaryHead();
        CalcutionAllowance();
    }

    var bBracketStart=false;
    var bBracketEnd=false;    
    function CalcutionBasicTypeSalaryHead()
    {
        var oSalarySchemeDetailCalculations= [];
        var oSalarySchemeDetails=[];
        var nGross=0;
        var nTotal = 0;
        var nIndex = 0;
        oSalarySchemeDetailCalculations =_oSalaryScheme.SalarySchemeDetailCalculations;
        oSalarySchemeDetails = NewSSDetail();
        nGross = $("#txtGrossSalary").val();

        for(var i=0 ; i< oSalarySchemeDetails.length ; i++)
        {

            var nTotalPerSHead=0;
            var nOperator=0;
            bBracketStart=false;
            bBracketEnd=false;
            var nOperator = 3;
            var nPercentvalue = 0;
            var bFlag = false;

            if(oSalarySchemeDetails[i].SalaryHeadTypeInt == 1 )
            {

                if(oSalarySchemeDetails[i].Calculation>0)
                {
                    nTotalPerSHead = parseFloat(oSalarySchemeDetails[i].Calculation);
                }
                else
                {
                    for(var j=0 ; j< oSalarySchemeDetailCalculations.length ; j++)
                    {

                        if(oSalarySchemeDetails[i].SalarySchemeDetailID == oSalarySchemeDetailCalculations[j].SalarySchemeDetailID)
                        {
                            if(oSalarySchemeDetailCalculations[j].ValueOperator == 1)
                            {

                                if(oSalarySchemeDetailCalculations[j].CalculationOn == 1)
                                {

                                    if(!bFlag && nOperator == 7)
                                    {
                                        nTotalPerSHead = 0;
                                        oSalarySchemeDetailCalculations[j].PercentValue = nPercentvalue;
                                        nIndex = j;
                                        nTotalPerSHead = GetSSDcalculation(nTotalPerSHead,nOperator,oSalarySchemeDetails,oSalarySchemeDetailCalculations,nIndex);

                                    }
                                    else
                                    {
                                        nIndex = j;
                                        nTotalPerSHead = nGross;
                                        oSalarySchemeDetailCalculations[j].PercentValue = nPercentvalue;
                                        nTotalPerSHead = GetSSDcalculation(nTotalPerSHead,nOperator,oSalarySchemeDetails,oSalarySchemeDetailCalculations,nIndex);


                                    }

                                }

                                else if(oSalarySchemeDetailCalculations[j].CalculationOn == 2)
                                {
                                    oSalarySchemeDetailCalculations[j].PercentValue = nPercentvalue;
                                    nIndex = j;
                                    nTotalPerSHead = GetSSDcalculation(nTotalPerSHead,nOperator,oSalarySchemeDetails,oSalarySchemeDetailCalculations, nIndex);

                                }

                                else if(oSalarySchemeDetailCalculations[j].CalculationOn == 3)
                                {


                                    nIndex = j;
                                    nTotalPerSHead = GetSSDcalculation(nTotalPerSHead,nOperator,oSalarySchemeDetails,oSalarySchemeDetailCalculations,nIndex);


                                }

                            }

                            else if(oSalarySchemeDetailCalculations[j].ValueOperator == 2)
                            {
                                if(oSalarySchemeDetailCalculations[j].Operator==1)
                                {

                                    bBracketStart=true;
                                }

                                else if(oSalarySchemeDetailCalculations[j].Operator==2)
                                {

                                    bBracketEnd=true;
                                }
                                else if(oSalarySchemeDetailCalculations[j].Operator==3)
                                {
                                    nOperator=3;

                                }
                                else if(oSalarySchemeDetailCalculations[j].Operator==4)
                                {
                                    nOperator= 4;

                                }
                                else if(oSalarySchemeDetailCalculations[j].Operator==5)
                                {

                                    nOperator=5;
                                }

                                else if(oSalarySchemeDetailCalculations[j].Operator==6)
                                {
                                    nOperator = 6;

                                }

                                else if(oSalarySchemeDetailCalculations[j].Operator==7)
                                {
                                    nOperator = 7;
                                    nPercentvalue= oSalarySchemeDetailCalculations[j].PercentVelue;


                                }


                            }

                        }


                    }
                }
                if(oSalarySchemeDetails[i].Amount <=0 || oSalarySchemeDetails[i].Amount == undefined)
                {
                    oSalarySchemeDetails[i].Amount = nTotalPerSHead;
                }

                nTotal = nTotal + nTotalPerSHead;
                bFlag = true;
            }


        }
        _nTotal = nTotal;
        document.getElementById("lblTotal").innerHTML = formatPrice(parseFloat(nTotal));

        RefreshListForSalaryHeadOfBasicType(oSalarySchemeDetails);
    }

    function CalcutionAllowance()
    {
        debugger;
        var oSalarySchemes=$('#tblSalarySchemeDetailBasic').datagrid('getRows');
        var oAllowances=$('#tblSalarySchemeDetailAllowance').datagrid('getRows');
        var nGross=document.getElementById('txtGrossSalary').value;
        var nTotalVal=0;

        for(var i=0;i<oAllowances.length;i++)
        {
            var oSchemeDetailCalculations=GetSchemeDetailCalculations(oAllowances[i].SalarySchemeDetailID)
            oAllowances[i].Amount= GetAllowanceAmount(oSchemeDetailCalculations);
            nTotalVal=nTotalVal+parseFloat(oAllowances[i].Amount);
        }

        document.getElementById("lblTotalValue").innerHTML = formatPrice(nTotalVal);
        RefreshListForSalaryHeadOfAllowanceType(oAllowances);
    }


    function GetAllowanceAmount(oSchemeDetailCalculations)
    {
        var sEquation="";
        var sSalaryHeadAmount="";
        var sGrossAmount= document.getElementById('txtGrossSalary').value;

        for(var i=0; i<oSchemeDetailCalculations.length;i++)
        {
            if(parseInt(oSchemeDetailCalculations[i].ValueOperatorInt)==2)//Operator=2
            {
                if(parseInt(oSchemeDetailCalculations[i].OperatorInt)!=7)
                {
                    sEquation=sEquation+oSchemeDetailCalculations[i].OperatorInString;
                }
                else
                {
                    if((i+1)>=oSchemeDetailCalculations.length)
                    {
                        //Must be a head exists
                        alert('Invalid equation!\nPlease check your equation!')
                        return;
                    }
                    if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==1)//Gross = 1
                    {
                        sEquation=sEquation+" ("+sGrossAmount +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==2)//SalaryItem = 2
                    {
                        sSalaryHeadAmount=GetSalaryHeadAmount(oSchemeDetailCalculations[i].SalaryHeadID);
                        sEquation=sEquation+" ("+sSalaryHeadAmount +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==3)//Fixed = 3
                    {
                        sEquation=sEquation+" ("+oSchemeDetailCalculations[i+1].FixedValue +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    i=i+1;
                }
            }
            else
            {
                if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==1)//Gross = 1
                {
                    sEquation=sEquation+" "+sGrossAmount;
                }
                else if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==2)//SalaryItem = 2
                {
                    sSalaryHeadAmount=GetSalaryHeadAmount(oSchemeDetailCalculations[i].SalaryHeadID);
                    sEquation=sEquation+" "+sSalaryHeadAmount+" ";
                }
                else if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==3)//Fixed = 3
                {
                    sEquation=sEquation+" "+oSchemeDetailCalculations[i].FixedValue;
                }
            }
        }
        return parseFloat(eval(sEquation));
    }

    function GetSalaryHeadAmount(nSalaryHeadID){
        var oSalarySchemes=$('#tblSalarySchemeDetailBasic').datagrid('getRows');
        for(var i=0; i<oSalarySchemes.length; i++)
        {
            if(parseInt(oSalarySchemes[i].SalaryHeadID)==parseInt(nSalaryHeadID))
            {
                return  parseFloat(oSalarySchemes[i].Amount);
            }
        }
        return 0.00;
    }
        
    function GetSchemeDetailCalculations(nSchemeDetailID)
    {
        var oSchemeDetailCalculations=[];
        var oSalarySchemeDetailCalculations =_oSalaryScheme.SalarySchemeDetailCalculations;
        for(var i=0; i<oSalarySchemeDetailCalculations.length; i++)
        {
            if(parseInt(oSalarySchemeDetailCalculations[i].SalarySchemeDetailID)==parseInt(nSchemeDetailID))
            {
                oSchemeDetailCalculations.push(oSalarySchemeDetailCalculations[i]);
            }
        }
        return oSchemeDetailCalculations;
    }


    function ESSValidateInput()
    {
        if($("#txtEmployee").val()=="")
        {
            alert("Please Enter Employee!!");
            return false;
        }
        if($("#txtScheme").val()=="")
        {
            alert("Please Enter A Scheme!!");
            return false;
        }
        if($("#txtPaymentCycle").val()=="Monthly")
        {
            var nStartDay=parseInt($("#cboStatDay option:selected").val());
            if(nStartDay<=0)
            {
                alert("Please Select Monthly Stsrt Date!!");
                return false;
            }
        }

        var nGsalary=$("#txtGrossSalary").val();


        if(nGsalary=="")
        {
            alert("Please Enter Gross Salary!!");
            return false;
        }
        var oBasicTypeDetails = $('#tblSalarySchemeDetailBasic').datagrid('getRows');
        if(oBasicTypeDetails.length<= 0)
        {
            alert("Please Set The Salary Structure!!");
            return false;
        }

        //    if(_nTotal!=nGsalary)
        //    {
        //        alert("Total Amount must be equal to Gross Salary ! ");
        //        return false;
        //    }

        return true;
    }

    function ESSRefreshObject()
    {

        var oSalaryStructureDetail=[];
        var oBasicTypeDetails = $('#tblSalarySchemeDetailBasic').datagrid('getRows');
        var oAllowanceTypeDetails = $('#tblSalarySchemeDetailAllowance').datagrid('getRows');       

        for(var i=0;i<oBasicTypeDetails.length;i++)
        {

            if(_oEmployee.EmployeeSalaryStructure !=null )
            {
                for(var j=0;j<_oEmployee.EmployeeSalaryStructure.EmployeeSalaryStructureDetails.length;j++)
                {
                    if(oBasicTypeDetails[i].SalaryHeadID == _oEmployee.EmployeeSalaryStructure.EmployeeSalaryStructureDetails[j].SalaryHeadID)
                    {
                        oBasicTypeDetails[i].ESSSID = _oEmployee.EmployeeSalaryStructure.EmployeeSalaryStructureDetails[j].ESSSID;
                    }
                }
            }
            oSalaryStructureDetail.push(oBasicTypeDetails[i]);
        }

        for(var i=0;i<oAllowanceTypeDetails.length;i++)
        {
            oSalaryStructureDetail.push(oAllowanceTypeDetails[i]);
        }

        var nActualGrossAmount=0;
        var nGrossAmount=0;
        nGrossAmount=$("#txtGrossSalary").val();        
        var nESSID = 0;
        if(_oEmployee.EmployeeSalaryStructure != null)
        {
            nESSID= _oEmployee.EmployeeSalaryStructure.ESSID;
        }

        var oSalaryScheme =
        {
            ESSID : nESSID,
            EmployeeID:_oEmployee.EmployeeID,
            SalarySchemeID:_nSalarySchemeID,
            Description:$("#txtDescription").val(),
            GrossAmount:nGrossAmount,
            IsIncludeFixedItem:false,
            ActualGrossAmount:nGrossAmount,
            CurrencyID:1,//may be changed !
            IsAllowBankAccount : document.getElementById("chkAllowBankAdvice").checked,
            IsAllowOverTime : document.getElementById("chkAllowOverTime").checked,
            IsAttendanceDependent : document.getElementById("chkAttendanceDependent").checked,
            StartDay : parseInt($("#cboStatDay option:selected").val()),
            EmployeeSalaryStructureDetails:oSalaryStructureDetail
        };

        return oSalaryScheme;
    }

    $('#btnSaveESS').click(function (e)
    {
        debugger
        if (!ESSValidateInput()) return;        
        var oEmployeeSalaryStructure = ESSRefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EmployeeSalaryStructure/EmployeeSalaryStructure_IU",
            traditional: true,
            data: JSON.stringify(oEmployeeSalaryStructure),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {

                oEmployeeSalaryStructure = jQuery.parseJSON(data);
                if (oEmployeeSalaryStructure.ErrorMessage == "")
                {
                    alert("Data Saved sucessfully");
                    //                    window.returnValue = oEmployeeSalaryStructure;
                    document.getElementById('txtDescription').disabled = true;
                    document.getElementById('txtGrossSalary').disabled = true;

                    document.getElementById("btnSetStructure").style.display = 'none';
                    document.getElementById("btnResetStructure").style.display = 'none';

                    document.getElementById("btnSaveESS").style.display = 'none';

                    document.getElementById('btnScheme').disabled = true;
                }
                else
                {
                    alert(oEmployeeSalaryStructure.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $('#btnCopyFromOtherStructure').click(function (e)
    {
        var oParameter = new Object();
        oParameter.Name = "Employee Advance Search";
        oParameter.MultipleItemReturn=false;
        var url = _sBaseAddress + "/Employee/EmployeeHRMPiker";
        var nLeft=(window.screen.width/2)-(1000/2);
        var nHeight=(window.screen.height/2)-(500/2);
        var oEmployee= window.showModalDialog(url, oParameter, 'dialogHeight:500px;dialogWidth:1000px;dialogLeft:'+nLeft+';dialogTop:'+nHeight+';center:yes;resizable:no;status:no;scroll:yes');
        //var oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:510px;dialogWidth:940px;dialogLeft:50;dialogRight:50;dialogTop:50;center:yes;resizable:yes;status:no;scroll:no');
        if(oEmployee!=null)
        {
            CopyFromOther(oEmployee);
        }
    });

    $('#chkAllowOverTime').click(function (e)
    {
        debugger;
        if(document.getElementById("chkAllowOverTime").checked==true)
        {
            document.getElementById("lblAllowOverTime").style.display = '';            
            document.getElementById("lblAllowOverTime").innerHTML = _sOverTimeLabel;
        }
        else
        {
            document.getElementById("lblAllowOverTime").style.display = 'none';
            document.getElementById("lblAllowOverTime").innerHTML = "";
        }
    });


    $('#chkAttendanceDependent').click(function (e)
    {
        if(document.getElementById("chkAttendanceDependent").checked==true)
        {
            document.getElementById("tbdAttendanceDependent").style.display = '';
            document.getElementById("txtLateCount").disabled=true;
            document.getElementById("txtEarlyLeavingCount").disabled=true;
            document.getElementById("txtLateCount").value=_nLateCount;
            document.getElementById("txtEarlyLeavingCount").value=_nEarlyLeavingCount;     
        }
        else
        {
            document.getElementById("tbdAttendanceDependent").style.display = 'none';
            document.getElementById("txtLateCount").disabled=true;
            document.getElementById("txtEarlyLeavingCount").disabled=true;
            document.getElementById("txtLateCount").value=0;
            document.getElementById("txtEarlyLeavingCount").value=0;     
        }
    });

    



    function CopyFromOther(oEmployee)
    {
        if (oEmployee.EmployeeID > 0)
        {
            var tsv = ((new Date()).getTime()) / 1000;
            $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/EmployeeSalaryStructure/CopyFromOtherStructure",
                data: { nId: oEmployee.EmployeeID,ts: tsv},
                contentType: "application/json; charset=utf-8",
                success: function(data)
                {

                    var osalaryStructure = jQuery.parseJSON(data);
                    if (osalaryStructure.ESSID <=0)
                    {
                        alert("This Employee has not assigned any salary structure. Please select an employee who has already assigned salary structure !");
                        return;
                    }
                    else
                    {
                        osalaryStructure.ESSID=0;
                        for(var i=0;i<osalaryStructure.EmployeeSalaryStructureDetails.length;i++)
                        {
                            osalaryStructure.EmployeeSalaryStructureDetails[i].ESSSID=0;
                        }
                        osalaryStructure.EmployeeID=0;
                        _nSalarySchemeID = osalaryStructure.SalarySchemeID;
                        bCopyFromOther = true;
                        SetControl(osalaryStructure);
                        GetsalarySchemeByID(osalaryStructure.SalarySchemeID);
                        SetStructure();


                    }
                }

            });
        }
    }

    $('#txtCodeSearch').keypress(function (e)
    {

        var code = (e.keyCode ? e.keyCode : e.which);
        var sEmpCode=document.getElementById("txtCodeSearch").value;

        if (code == 13)//Enter key-13
        {
            if(sEmpCode=="")
            {
                alert("Please Enter Code !");
                return;
            }
            var nts=(new Date()).getTime()/1000;
            var oParameter = new Object();
            oParameter.MultipleItemReturn = false;
            var url = _sBaseAddress + "/Employee/EmployeePikerByCode?sCode="+sEmpCode+"&nDepartmentID=0&nts="+nts;

            var oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:415px;dialogWidth:520px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');

            if(oEmployee!=null)
            {
                document.getElementById("txtCodeSearch").value =oEmployee.Name;
                CopyFromOther(oEmployee);
            }
        }
    });

    function NewSSDetail()
    {

        var oSalarySchemeDetailCalculations =[];
        var oSalarySchemeDetails = [];
        oSalarySchemeDetailCalculations =_oSalaryScheme.SalarySchemeDetailCalculations;
        //    oSalarySchemeDetails = _oSalaryScheme.SalarySchemeDetails;

        oSalarySchemeDetails = $('#tblSalarySchemeDetailBasic').datagrid('getRows');


        var oNewSalarySchemeDetails = [];
        var k=0 ;

        for(var i=0 ; i< oSalarySchemeDetails.length ; i++)
        {
            //        if(oSalarySchemeDetails[i].Calculation > 0)
            //        {
            //           oSalarySchemeDetails[i].Amount =  oSalarySchemeDetails[i].Amount;
            //        }
            //        else
            //        {
            //
            //            oSalarySchemeDetails[i].Amount = 0;
            //        }

            //        var nCount = 0;
            //        for(var j=0 ; j< oSalarySchemeDetailCalculations.length ; j++)
            //        {
            //
            //            if(oSalarySchemeDetails[i].SalarySchemeDetailID == oSalarySchemeDetailCalculations[j].SalarySchemeDetailID)
            //            {
            //                k=j;
            //                nCount++;
            //            }
            //
            //
            //        }
            //        if(nCount == 1)
            //        {
            //            oSalarySchemeDetails[i].Amount=oSalarySchemeDetailCalculations[k].FixedValue;
            //        }


            //=======================

            if(oSalarySchemeDetails[i].Calculation > 0)
            {
                oSalarySchemeDetails[i].Amount =  oSalarySchemeDetails[i].Calculation;
            }
            else
            {

                oSalarySchemeDetails[i].Amount = 0;
            }


            //=======================

            oNewSalarySchemeDetails.push(oSalarySchemeDetails[i]);

        }

        return oNewSalarySchemeDetails;
    }

    function GetSSDcalculation(nTotalPerSHead,nOperator,oSalarySchemeDetails,oSalarySchemeDetailCalculations,nIndex)
    {
        var nSSDCalculation = 0;
        for(var i=0 ; i<oSalarySchemeDetails.length ; i++)
        {
            if(oSalarySchemeDetails[i].SalaryHeadID == oSalarySchemeDetailCalculations[nIndex].SalaryHeadID)
            {
                nSSDCalculation = parseFloat(oSalarySchemeDetails[i].Amount);
                break;

            }
            else if(oSalarySchemeDetailCalculations[nIndex].SalaryHeadID== 0 && oSalarySchemeDetailCalculations[nIndex].FixedValue>0)
            {

                nSSDCalculation = parseFloat(oSalarySchemeDetailCalculations[nIndex].FixedValue);

                break;
            }

            else if(oSalarySchemeDetailCalculations[nIndex].CalculationOn == 1 && oSalarySchemeDetailCalculations[nIndex].SalaryHeadID== 0 && oSalarySchemeDetailCalculations[nIndex].FixedValue == 0 && nOperator == 7)
            {

                nSSDCalculation = parseFloat(document.getElementById("txtGrossSalary").value);
                break;

            }

        }


        if(nOperator == 3)
        {
            nTotalPerSHead = parseFloat(nTotalPerSHead)+ parseFloat(nSSDCalculation);

        }

        if(nOperator == 4)
        {
            nTotalPerSHead = parseFloat(nTotalPerSHead) - parseFloat(nSSDCalculation);

        }

        if(nOperator == 5)
        {

            nTotalPerSHead = parseFloat(nTotalPerSHead) * parseFloat(nSSDCalculation);

        }

        if(nOperator == 6)
        {

            nTotalPerSHead = parseFloat(nTotalPerSHead / nSSDCalculation);

        }

        if(nOperator == 7)
        {
            var nPercentVelue = parseFloat(oSalarySchemeDetailCalculations[nIndex].PercentValue);

            nTotalPerSHead = parseFloat(nTotalPerSHead) + parseFloat(parseFloat(nPercentVelue)/100* parseFloat(nSSDCalculation));

        }


        return nTotalPerSHead;

    }

    function ResetStructure()
    {


        for(var i = 0 ; i <_oBasicSalarySchemeDetails.length ; i++)
        {
            _oBasicSalarySchemeDetails[i].Amount = 0;
        }

        for(var i = 0 ; i <_oAllowanceSalarySchemeDetails.length ; i++)
        {
            _oAllowanceSalarySchemeDetails[i].Amount = 0;
        }

        RefreshListForSalaryHeadOfBasicType(_oBasicSalarySchemeDetails);
        RefreshListForSalaryHeadOfAllowanceType(_oAllowanceSalarySchemeDetails);
        //LoadSalaryStructure(_oSalaryScheme);
        document.getElementById("txtGrossSalary").value = "";
        document.getElementById("lblTotal").innerHTML =formatPrice(0);
        document.getElementById("lblTotalValue").innerHTML =formatPrice(0);
        endEditing();
    }

    var editIndex = undefined;
    function endEditing()
    {
        if (editIndex == undefined){return true}
        if ($('#tblSalarySchemeDetailBasic').datagrid('validateRow', editIndex))
        {

            $('#tblSalarySchemeDetailBasic').datagrid('endEdit', editIndex);
            editIndex = undefined;
            return true;

        }
        else
        {
            return false;
        }

    }

    function onClickRow(index)
    {
        var oSSDBasic = $('#tblSalarySchemeDetailBasic').datagrid('getSelected');
        if(oSSDBasic.Calculation > 0)
        {
            if (editIndex != index)
            {
                if (endEditing())
                {
                    $('#tblSalarySchemeDetailBasic').datagrid('selectRow', index).datagrid('beginEdit', index);
                    editIndex = index;

                }
                else
                {
                    $('#tblSalarySchemeDetailBasic').datagrid('selectRow', editIndex);
                }
            }
        }
    }
    //==================ESS END

    /**************Employee Authentication*************/
    function AddEmployeeAuthentication()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oParameter = new Object();
        oParameter.Name = _oEmployee.Name+"["+_oEmployee.Code+"]";
        var url =_sBaseAddress+ "/Employee/View_EmployeeAuthentication?nEmployeeID="+_oEmployee.EmployeeID+"&nid=0";
        var oEmployeeAuthentication = window.showModalDialog(url, oParameter, 'dialogHeight:158px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        //debugger
        if(oEmployeeAuthentication!=null)
        {
            if(oEmployeeAuthentication.EmployeeAuthenticationID>0)
            {
                //                var oEmployees = $('#tblEmployeEducation').datagrid('getRows');
                //                var nIndex=oEmployees.length;

                $('#tblEmployeAuthentication').datagrid('appendRow',oEmployeeAuthentication);
                $('#tblEmployeAuthentication').datagrid('selectRow', nIndex);
            }
        }
    }

    function AutoEmployeeAuthentication()
    {

        //debugger;
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }

        var oEmployeeAuthentication={
            EmployeeAuthenticationID : 0,
            EmployeeID : _oEmployee.EmployeeID,
            CardNo :''
            //Password: $("#txtPassword").val(),
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/Employee/EmployeeAuthenticationIU",
            traditional: true,
            data:  JSON.stringify(oEmployeeAuthentication),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oEmployeeAuthentication = jQuery.parseJSON(data);
                if (oEmployeeAuthentication.EmployeeAuthenticationID>0) {
                    alert("Data Saved sucessfully");
                    $('#tblEmployeAuthentication').datagrid('appendRow',oEmployeeAuthentication);
                    $('#tblEmployeAuthentication').datagrid('selectRow', nIndex);
                }
                else {
                    alert(oEmployeeAuthentication.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function EditEmployeeAuthentication()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oEmployeeAuthentication= $('#tblEmployeAuthentication').datagrid('getSelected');
        if(oEmployeeAuthentication==null || oEmployeeAuthentication.EmployeeAuthenticationID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblEmployeAuthentication').datagrid('getRowIndex',oEmployeeAuthentication);

        var oParameter = new Object();
        oParameter.Name = _oEmployee.Name+"["+_oEmployee.Code+"]";
        var url =_sBaseAddress+ "/Employee/View_EmployeeAuthentication?nEmployeeID="+_oEmployee.EmployeeID+"&nid="+oEmployeeAuthentication.EmployeeAuthenticationID;
        var oEmployeeAuthentication = window.showModalDialog(url, oParameter, 'dialogHeight:158px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        //debugger
        if(oEmployeeAuthentication!=null)
        {
            if(oEmployeeAuthentication.EmployeeAuthenticationID>0)
            {
                $('#tblEmployeAuthentication').datagrid('updateRow',{index: SelectedRowIndex,	row: oEmployeeAuthentication});
            }
        }
    }

    function DeleteEmployeeAuthentication()
    {
        //debugger;
        var oEmployeeAuthentication= $('#tblEmployeAuthentication').datagrid('getSelected');
        if(oEmployeeAuthentication==null || oEmployeeAuthentication.EmployeeAuthenticationID<=0)
        {
            alert("Please select at least one item!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return ;

        var SelectedRowIndex=$('#tblEmployeAuthentication').datagrid('getRowIndex',oEmployeeAuthentication);

        if (oEmployeeAuthentication.EmployeeAuthenticationID > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/Employee/EmployeeAuthenticationDelete",
                traditional: true,
                data:  JSON.stringify(oEmployeeAuthentication),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    oEmployeeAuthentication = jQuery.parseJSON(data);
                    if (oEmployeeAuthentication.ErrorMessage == null)
                    {
                        alert("Delete sucessfully");
                        $('#tblEmployeAuthentication').datagrid('deleteRow',SelectedRowIndex);

                    }
                    else
                    {
                        alert(oEmployeeAuthentication.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    }

    function EmployeeAuthenticationActivity()
    {
        debugger;
        var oEmployeeAuthentication= $('#tblEmployeAuthentication').datagrid('getSelected');
        if(oEmployeeAuthentication==null || oEmployeeAuthentication.EmployeeAuthenticationID<=0)
        {
            alert("Please select at least one item!");
            return false;
        }

        oEmployeeAuthentication.IsActive=(!oEmployeeAuthentication.IsActive);
        var SelectedRowIndex=$('#tblEmployeAuthentication').datagrid('getRowIndex',oEmployeeAuthentication);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/Employee/EmployeeAuthenticationIU",
            traditional: true,
            data:  JSON.stringify(oEmployeeAuthentication),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                oEmployeeAuthentication = jQuery.parseJSON(data);
                if (oEmployeeAuthentication.ErrorMessage=="") {
                    $('#tblEmployeAuthentication').datagrid('updateRow',{index: SelectedRowIndex,	row: oEmployeeAuthentication});
                }
                else {
                    alert(oEmployeeAuthentication.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function LoadEmployeeAuthenticationGrid()
    {
        data={"total":""+_oEmployee.EmployeeAuthentications.length+"","rows":_oEmployee.EmployeeAuthentications};
        $('#tblEmployeAuthentication').datagrid('loadData',data);
    }

    function Close()
    {
        window.close();
    }

    $(document).keydown(function (e)
    {
        var keyCode = e.keyCode || e.which;
        if (keyCode == 27)
        {
            window.close();
        }
    });
</script>
