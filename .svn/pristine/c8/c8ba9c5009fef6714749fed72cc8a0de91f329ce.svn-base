@{
    ViewBag.Title = "Fabric Batch Production(Sizing)";
}
@model IEnumerable<ESimSol.BusinessObjects.FabricBatchProduction>
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>

    <div id="winTotalBreakageInformation" class="easyui-window" title="Total Breakage Information" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width:915px; margin-left:2px;">
            <table id="tblFBPBreakage" class="easyui-datagrid" style="height:250px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarBreakage" data-options="onClickRow: onClickRowBreakage">
                <thead>
                    <tr>
                        <th field="FabricBreakageName" width="250">Break Description</th>
                        <th data-options="field:'DurationInMin',align:'center',editor:{type:'numberbox',options:{precision:2}}" width="150" align="right">Duration(Min)</th>
                        <th data-options="field:'NoOfBreakage',align:'center',editor:{type:'numberbox',options:{precision:2}}" width="150" align="right">No Of Breakage</th>
                        <th data-options="field:'Note',align:'left',editor:{type:'text'}" width="100">Remark</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarBreakage">
                Break :<select id="cboBreakage" style="width:250px;"></select>&nbsp;
                Duration :<input type="text" id="txtDuration" class="easyui-numberbox" data-options="min:0,precision:0" style="width:100px" />(Min)&nbsp;
                No Of Breakage :<input type="text" id="txtNumberOfBreakage" class="easyui-numberbox" data-options="min:0,precision:0" style="width:100px" />&nbsp;
                <a id="btnAddBreakage" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                <a id="btnDeleteBreakage" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                <a id="btnRefreshBreakage" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
            </div>
            <table>
                <tr>
                    <td style="width:702px;"></td>
                    <td>Total : <label id="lblTotalNoOfBreakage">0</label></td>
                </tr>
            </table>
            <fieldset>
                <legend>Actions : </legend>
                <div style="float:right;">
                    <a id="btnOkTotalBreakageInformation" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                    <a id="btnCloseTotalBreakageInformation" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </div>
            </fieldset>
        </div>
    </div>

    <div id="winColorBreakDown" class="easyui-window" title="Color Break Down" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width:915px; margin-left:2px;">
            <table id="tblFBPColor" class="easyui-datagrid" style="height:250px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarColor" data-options="onClickRow: onClickRowColor">
                <thead>
                    <tr>
                        <th field="Name" width="150">Color</th>
                        <th data-options="field:'Qty',align:'center',editor:{type:'numberbox',options:{precision:2}}" width="100" align="right">Len(Y)</th>
                        <th field="QtyInM" width="100" align="right">Len(M)</th>
                        <th data-options="field:'Note',align:'left',editor:{type:'text'}" width="100">Remark</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarColor">
                Color:<input type="text" id="txtColorName" style="width:250px" />&nbsp;
                Finish Length :<input type="text" id="txtFinishLengthColorWiseY" style="width:100px" class="number" />&nbsp;(Y)&nbsp;<input type="text" id="txtFinishLengthColorWiseM" style="width:100px" class="number" />&nbsp;(M)
                <a id="btnAddColor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                <a id="btnDeleteColor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                <a id="btnRefreshColor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
            </div>
            <table>
                <tr>
                    <td style="width:313px;text-align:right;">Total :</td>
                    <td style="width:300px;text-align:right;"><label id="lblTotalQtyColor">0</label></td>
                    <td style="width:227px;text-align:right;"><label id="lblTotalQtyInMColor">0</label></td>
                    <td style="width:267px;text-align:right;"></td>
                </tr>
            </table>
            <fieldset>
                <legend>Actions : </legend>
                <div style="float:right;">
                    <a id="btnOkColorBreakDown" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                    <a id="btnCloseColorBreakDown" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </div>
            </fieldset>
        </div>
    </div>

    <div class="menuMainCollectionTable" id="regionFabricBatchProduction">
        <table id="tblFabricBatchProductions" title="Fabric Batch Production List" class="easyui-datagrid" fit="true" fitcolumns="false" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbar">
            <thead>
                <tr>
                    <th field="FEONo" width="9%">Order No</th>
                    <th field="BatchNo" width="9%">Batch No</th>
                    <th field="StartTimeSt" width="10%">Start Time</th>
                    <th field="EndTimeSt" width="10%">End Time</th>
                    <th field="Qty" width="10%" align="right" formatter="formatPrice">Qty(Y)</th>
                    <th field="Construction" width="10%">Construction</th>
                    <th field="FabricWeave" width="8%">Fabric Weave</th>
                    <th field="ColorName" width="10%">Color</th>
                    <th field="ProductionStatusSt" width="10%">Status</th>
                    <th field="FabricBatchStatusST" width="10%">Batch Status</th>
                    <th field="FabricMachineName" width="10%">Machine</th>
                    <th field="BuyerName" width="10%">Buyer</th>
                    <th field="LowerUpperType" width="10%" align="left">Type</th>
                </tr>
            </thead>
        </table>
        <div id="toolbar">
            <select id="cboStatus" style="width:130px;height:22px;">
                <option value="0">--Select One--</option>
                <option value="2">Waiting</option>
                <option value="1">Running</option>
            </select>
            <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Search</a>
            <a id="btnAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Adv. Search</a>
            <input type="text" id="txtDispoNoSearch" placeholder="Search by Dispo No" style="width:100px;text-align:left" />
            <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
            <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
            <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
            <a id="btnPrintXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">Excel</a>
            <a id="btnPrintReadyBeam" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Ready Beam</a>
            <a id="btnDrawingLeasingStatus" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Drawing/Leasing</a>
            @*<a id="btnView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
            <a id="btnPreview" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview</a>
            <a id="btnPrintList" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print List</a>*@
        </div>
    </div>

    <div id="winFabricBatchProduction" style="width:1200px;height:600px" class="easyui-window winstyle" title="Fabric Batch Warping" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div class="easyui-panel" style="font-family:Tahoma;text-align:center; width:100%;">
            <div style="padding-top:2px;width:100%;">
                <fieldset>
                    <legend>Fabric Batch Info</legend>
                    <div style="width:100%;">
                        <table border="0" cellpadding="1" cellspacing="1" style="width:100%;">
                            <tr>
                                <td style="width:10%; text-align:right;">Program No :</td>
                                <td style="width:25%;text-align:left;">
                                    <input type="text" style="width:30%;" id="txtBatchNo" />
                                    <input type="text" style="width:30%;" id="txtDispoNo" placeholder="Type Dispo" />
                                    <a id="btnBatchCardPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true"></a>
                                </td>
                                <td style="width:10%; text-align:right;">Order No :</td>
                                <td style="width:25%;text-align:left;">
                                    <input type="text" style="width:30%; text-align:left;" id="txtOrderNo" disabled />
                                    Status:
                                    <input type="text" style="width:30%;" id="txtStatus" disabled />
                                </td>
                                <td style="width:10%; text-align:right;">Construction :</td>
                                <td style="width:20%;text-align:left;">
                                    <input type="text" style="width:100%;" id="txtConstruction" disabled />
                                </td>
                            </tr>

                            <tr>
                                <td style="width:10%; text-align:right;">Machine Name :</td>
                                <td style="width:25%;text-align:left;">
                                    <select style="width:98%;height:22px;" id="cboMachineName" onchange="ChangeMachineType()"></select>
                                </td>
                                <td style="width:10%; text-align:right;">R.Warp Length :</td>
                                <td style="width:25%;text-align:left;">
                                    <input type="text" style="width:30%;" id="txtBatchQtyY" class="number" disabled /> &nbsp;(Y) &nbsp;
                                    <input type="text" style="width:30%;" id="txtBatchQtyM" class="number" disabled />&nbsp;(M)
                                </td>
                                <td style="width:10%; text-align:right;">Buyer :</td>
                                <td style="width:20%;text-align:left;">
                                    <input type="text" style="width:100%;" id="txtBuyer" disabled />
                                </td>
                            </tr>

                            <tr>
                                <td style="width:10%; text-align:right;">Start Time :</td>
                                <td style="width:25%;text-align:left;">
                                    <input id="txtStartDate" style="width:50%;" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    <input id="tpStartTime" class="easyui-timespinner" style="width:25%;" required="required" />
                                    <a id="btnRun" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Run()">Run</a>
                                    <a id="btnHold" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Hold()">Hold</a>
                                </td>
                                <td style="width:10%; text-align:right;"><label id="lblYetQty" style="font-weight:normal">Pending :</label></td>
                                <td style="width:25%;text-align:left;">
                                    <input type="text" style="width:30%;" id="txtYetToWarpLengthY" class="number" disabled /> &nbsp;(Y) &nbsp;
                                    <input type="text" style="width:30%;" id="txtYetToWarpLengthM" class="number" disabled />&nbsp;(M)
                                </td>
                                <td style="width:10%; text-align:right;">Duration :</td>
                                <td style="width:20%;text-align:left;">
                                    <input type="text" style="width:100%;" id="txtWarpingDuration" disabled />
                                </td>
                            </tr>

                            <tr>
                                <td style="width:10%; text-align:right;">End Time :</td>
                                <td style="width:25%;text-align:left;">
                                    <input id="txtEndDate" style="width:50%;" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    <input id="tpEndTime" class="easyui-timespinner" style="width:25%;" required="required" />
                                    <a id="btnRunOut" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="RunOut()">Out</a>
                                </td>
                                <td style="width:10%; text-align:right;">Finish Length :</td>
                                <td style="width:25%;text-align:left;">
                                    <input type="text" style="width:30%;" id="txtProdQtyY" class="number" disabled /> &nbsp;(Y) &nbsp;
                                    <input type="text" style="width:30%;" id="txtProdQtyM" class="number" disabled />&nbsp;(M)
                                </td>
                                <td style="width:10%; text-align:right;">Total Ends :</td>
                                <td style="width:20%;text-align:left;">
                                    <input type="text" style="width:32%; text-align:left;" id="txtTotalEnds" disabled />
                                    Sec/Beam No:
                                    <input type="text" style="width:31%;" id="txtNoOfSection" class="number" disabled />
                                </td>
                            </tr>

                            <tr>
                                <td style="width:10%; text-align:right;">Shift :</td>
                                <td style="width:25%;text-align:left;">
                                    <select style="width:98%;height:22px;" id="cboFBPShift"></select>
                                </td>
                                <td style="width:10%; text-align:right;">Total Finish :</td>
                                <td style="width:25%;text-align:left;">
                                    <input type="text" style="width:30%;" id="txtGrandTotalFinishLengthY" class="number" disabled /> &nbsp;(Y) &nbsp;
                                    <input type="text" style="width:30%;" id="txtGrandTotalFinishLengthM" class="number" disabled />&nbsp;(M)
                                </td>
                                <td style="width:10%; text-align:right;"></td>
                                <td style="width:20%;text-align:left;"></td>
                            </tr>

                        </table>
                    </div>
                </fieldset>
            </div>

            <div class="easyui-accordion" style="height:300px;width:100%" data-options="selected:false">
                <div title="Beams Info" style="width:100%;">
                    <div style="width:29%;float:left;">
                        <table id="tblBeams" class="easyui-datagrid" title="Warping Beams" style="width:100%;height:230px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" showfooter="true">
                            <thead>
                                <tr>
                                    <th field="ChildMachineTypeName" width="30%">Type</th>
                                    <th field="BeamNo" width="25%">Beam No</th>
                                    <th field="Qty" width="15%" align="right" formatter="formatPrice">Qty(Y)</th>
                                    <th field="QtyInMtr" width="15%" align="right" formatter="formatPrice">Qty(M)</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <div style="width:70%;float:right;">
                        <table id="tblFBPDetails" class="easyui-datagrid" title="Fabric Batch Production Detail" style="width:100%;height:230px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarFBatchPDetail" showfooter="true">
                            @*data-options="onClickRow: onClickRowBatchMan"*@
                            <thead>
                                <tr>
                                    <th field="ProductionDateSt" width="10%">Date</th>
                                    <th field="EmployeeName" width="20%">Batch Man</th>
                                    <th field="ShiftNameWithDuration" width="10%">Shift</th>
                                    <th field="Qty" formatter="formatPrice" width="10%" align="right">Len(Y)</th>
                                    <th field="QtyM" formatter="formatPrice" width="10%" align="right">Len(M)</th>
                                    @*<th data-options="field:'Note',align:'left',editor:{type:'text'}" width="15%">Remark</th>*@
                                </tr>
                            </thead>
                        </table>
                        <div id="toolbarFBatchPDetail">
                            @*Type :
                            <select id="cboFabricMachineTypes" style="width:108px;margin-right:10px;" onchange="ReloadFreeBeams()"></select>
                            <a id="btnReloadFabricMachineTypes" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a>
                            Beam No :
                            <select id="cboBeams" style="width:108px;margin-right:10px;"></select>
                            <span id="toolbarBeamSizing">
                                Qty :
                                <input id="txtBeamQty" type="text" style="width:50px;" class="number" />(Y)
                                <input id="txtBeamQtyMeter" type="text" style="width:50px;" class="number" />(M)
                                <a id="btnAddBeam" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                <a id="btnRemoveBeam" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>

                            <a id="btnFinishBeam" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Finish</a>
                            <a id="btnTransferBeam" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Transfer</a>
                                *@
                            <a id="btnAddBatchMan" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddBatchMan()">Add</a>
                            <a id="btnEditBatchMan" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="EditBatchMan()">Edit</a>
                            <a id="btnDeleteBatchMan" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteBatchMan()">Remove</a>
                            
                        </div>
                    </div>
                </div>

                <div title="Fabric Batch Chemical" style="width:100%;">
                    <div style=" width:60%; float:left;">
                        <fieldset>
                            <legend> Raw Material </legend>
                            <table id="tblFabricBatchRawMaterial" class="easyui-datagrid" style="height:220px;width:100%" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarChemical" data-options="onClickRow: onClickRow">
                                @*"*@
                                <thead>
                                    <tr>
                                        <th field="ProductName" width="200">Chemical</th>
                                        <th field="LotNo" width="150">Lot No</th>
                                        <th data-options="field:'Qty',align:'center',editor:{type:'numberbox',options:{precision:2}}" width="150" align="right">Qty(KG)</th>
                                        <th field="ReceiveByDateInString" width="100">Receive Date</th>
                                    </tr>
                                </thead>
                            </table>
                            <div id="toolbarChemical">
                                Store :<select id="cboStore" style="width:105px;"></select>
                                <input type="text" id="txtProductName" placeholder="Type Chemical Name" style="width:140px" /><a id="btnPickProduct" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Chemical</a>
                                <a id="btnPickChemicalPlannedProduct" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Planned Chemical</a>
                                <select id="cboLot" style="width:120px;"></select><a id="btnLotRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshLot()"></a>
                                </br>
                                Qty: <input type="text" id="txtQty" style="width:60px;" value="0" class="number" />(KG)
                                <a id="btnAddChemical" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddChemicalDetail()">Add</a>
                                <a id="btnDeleteChemical" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteChemicalDetail()">Remove</a>
                                <a id="btnOutMaterials" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-receive" plain="true" onclick="Out()">Receive</a>
                            </div>
                        </fieldset>

                    </div>

                    <div style=" width:39%; float:right">
                        <fieldset>
                            <legend> Add Chemical </legend>

                            <div id="toolbarAddChemical">
                                <div class="col-md-12" style="padding-left:10px;">
                                    <div class="col-md-4">
                                        Water Qty
                                    </div>
                                    <div class="col-md-2">
                                        <input id="txtWaterQty" type="text" class="number" placeholder="Water Qty" />
                                    </div>

                                </div>
                                <div class="col-md-12" style="padding-left:10px;">
                                    <div class="col-md-4">
                                        Dry Qty
                                    </div>
                                    <div class="col-md-2">
                                        <input id="txtDry" type="text" class="number" placeholder="Dry" />
                                    </div>
                                </div>
                                <div class="col-md-12" style="padding-left:10px;">
                                    <div class="col-md-4">
                                        Wet Qty
                                    </div>
                                    <div class="col-md-2">
                                        <input id="txtWet" type="text" class="number" placeholder="Wet" />
                                    </div>
                                </div>
                                <div class="col-md-12" style="padding-left:10px;">
                                    <div class="col-md-4">
                                        RF
                                    </div>
                                    <div class="col-md-2">
                                        <input id="txtRF" type="text" class="number" placeholder="RF" />
                                    </div>
                                </div>

                                <div class="col-md-12" style="padding-left:10px;">
                                    <div class="col-md-4">
                                        Viscosity
                                    </div>
                                    <div class="col-md-2">
                                        <input id="txtViscosity" type="text" class="number" placeholder="Viscosity" />
                                    </div>
                                </div>
                                <div class="col-md-12" style="padding-left:10px;">
                                    <div class="col-md-4">
                                        Final Volume
                                    </div>
                                    <div class="col-md-2">
                                        <input id="txtFinalVolume" type="text" class="number" placeholder="Final Volume " />
                                    </div>

                                </div>

                                <div class="col-md-12" style="padding-left:10px;">
                                    <div class="col-md-4">
                                        Use Prev. Qty
                                    </div>
                                    <div class="col-md-8">
                                        <input id="txtPreviousRestQty" type="text" class="number" placeholder=" Use Prev. Qty" />
                                        <span style="font-size:10px;" id="lblSugPreviousRestQty"></span>
                                    </div>


                                </div>
                                <div class="col-md-12" style="padding-left:10px;">
                                    <div class="col-md-4">
                                        New Rest Qty
                                    </div>
                                    <div class="col-md-2">
                                        <input id="txtRestQty" type="text" class="number" placeholder=" New Rest Qty" />
                                    </div>
                                </div>

                                <a id="btnAddFBSSol" style="float:right;" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddFBSSol()">Add Chemical</a>

                            </div>
                        </fieldset>

                    </div>

                </div>

               
            </div>

            <div style="width:100%;">
                <fieldset>
                    <legend>Actions : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size:11px; font-weight:bold;">
                        <tr>
                            <td style="width:60%;text-align:left;"></td>
                            <td style="width:40%;text-align:right;">
                                <a id="btnCloseFBP" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

        
        
    </div>

    <div id="winAdvSearch" class="easyui-window winClass" style=" width:500px;" title=" adv. search" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <table style="width:100%;">
                <tr>
                    <td>
                        <fieldset style="margin-bottom: 0px;">
                            <legend>Searching Criteria</legend>
                            <table>
                                <tr>
                                    <td style=" width:20%;text-align:right;">
                                        <label>Dispo No : </label>
                                    </td>
                                    <td colspan="3" style="width:80%;text-align:left;">
                                        <input id="txtDispoNoAdv" type="text" style="width:98%" />
                                    </td>
                                </tr>
                                <tr>
                                    <td style=" width:20%;text-align:right;">
                                        <label>Batch No : </label>
                                    </td>
                                    <td colspan="3" style="width:80%;text-align:left;">
                                        <input id="txtBatchNoAdv" type="text" style="width:98%" />
                                    </td>
                                </tr>
                                <tr>
                                    <td style=" width:20%;text-align:right;">
                                        <label>Shift: </label>
                                    </td>
                                    <td colspan="3" style="width:80%;text-align:left;">
                                        <select id="cboShiftAdvS" style="width:98%;">
                                        </select>
                                    </td>
                                </tr>
                                <tr>
                                    <td style=" width:20%;text-align:right;">
                                        <label>Prod. Date : </label>
                                    </td>
                                    <td colspan="3">
                                        <select id="cboProductionDateAdv" style="width:30%;height:22px;" onchange="DateActions_ProductionDateAdv(); "></select>
                                        <input id="txtFromProductionDateAdv" type="text" style="width: 100px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />To
                                        <input id="txtToProductionDateAdv" type="text" style="width: 100px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    </td>
                                </tr>
                                <tr>
                                    <td style=" width:20%;text-align:right;">
                                        <label>Start Date : </label>
                                    </td>
                                    <td colspan="3">
                                        <select id="cboStartDateAdv" style="width:30%;height:22px;" onchange="DateActions_StartDateAdv(); "></select>
                                        <input id="txtFromStartDateAdv" type="text" style="width: 100px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />To
                                        <input id="txtToStartDateAdv" type="text" style="width: 100px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    </td>
                                </tr>
                                <tr>
                                    <td style=" width:20%;text-align:right;">
                                        <label>End Date : </label>
                                    </td>
                                    <td colspan="3">
                                        <select id="cboEndDateAdv" style="width:30%;height:22px;" onchange="DateActions_EndDateAdv(); "></select>
                                        <input id="txtFromEndDateAdv" type="text" style="width: 100px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />To
                                        <input id="txtToEndDateAdv" type="text" style="width: 100px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    </td>
                                </tr>
                                <tr>
                                    <td style=" width:20%;text-align:right;">
                                        <label>Status : </label>
                                    </td>
                                    <td colspan="3" style="width:80%;text-align:left;">
                                        <select id="cboStatusAdv" style="width:98%;height:22px;"></select>
                                    </td>
                                </tr>
                                <tr>
                                    <td style=" width:20%;text-align:right;">
                                        <label>Machine : </label>
                                    </td>
                                    <td colspan="3" style="width:80%;text-align:left;">
                                        <select id="cboMachineAdv" style="width:98%;height:22px;"></select>
                                    </td>
                                </tr>
                                <tr>
                                    <td style=" width:20%;text-align:right;">
                                        <label>Beam : </label>
                                    </td>
                                    <td colspan="3" style="width:80%;text-align:left;">
                                        <input id="txtBeamAdv" type="text" style="width:79%" onkeydown="SearchBeamAdv(event)" />
                                        <input type="button" id="btnBeamAdv" value="Pick" style="width:18%" onclick="PickBeamAdv('')" />
                                    </td>
                                </tr>
                                <tr>
                                    <td height="5px" colspan="4"></td>
                                </tr>
                            </table>
                        </fieldset>
                    </td>
                </tr>
            </table>

            <fieldset class="actionfieldsetstyle">
                <legend>Actions : </legend>
                <label class="lblLoadingMessage" style="float: left;">Loading Please Wait...</label>
                <a id="btnSearchAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Search</a>
                <a id="btnCloseAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
            </fieldset>
        </div>

    <div id="winAddDetail" class="easyui-window" title="AddtxtGrandTotalFinishLengthY Detail" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width:600px; margin-left:2px;">
            <div style="width:100%;margin-bottom:10px;">
                <table style="width:100%;">
                    <tr>
                        <td style="width:12%;text-align:right;">Date:</td>
                        <td style="width:30%;"><input id="txtFinishDate" style="width:100%" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                        <td style="width:20%;text-align:right;">Batch Man:</td>
                        <td style="width:30%;"><select id="cboBatchMan" style="width:100%;"></select></td>
                        <td style="width:8%;"></td>
                    </tr>
                    <tr>
                        <td style="width:12%;text-align:right;">Shift:</td>
                        <td style="width:30%;"><select id="cboShift" style="width:100%;"></select></td>
                        <td style="width:20%;text-align:right;"></td>
                        <td style="width:30%;text-align:left;"></td>
                        <td style="width:8%;"></td>
                    </tr>
                </table>
            </div>
            <table id="tblFBPBeam" class="easyui-datagrid" style="height:250px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarDetail" data-options="onClickRow: onClickRowDetail">
                <thead>
                    <tr>
                        <th field="ChildMachineTypeName" width="25%">Type</th>
                        <th field="BeamNo" width="15%">Beam No</th>
                        <th field="Qty" width="12%" align="right" formatter="formatPrice">Qty(Y)</th>
                        <th data-options="field:'QtyM',editor:{type:'numberbox',options:{precision:2}}" width="12%" align="right" formatter="formatPrice">Qty(M)</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarDetail">
                Type : <select id="cboFabricMachineTypes" style="width:108px;margin-right:10px;" ></select>  @*onchange="ReloadFreeBeams()"*@
                <a id="btnSearchFreeBeams" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Free Beams</a>
                <a id="btnSearchRunningBeams" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Running Beams</a>
                <a id="btnDeleteDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                <a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                <a id="btnFinishBeam" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Finish</a>
            </div>
            
            <fieldset>
                <legend>Actions : </legend>
                <div style="float:right;">
                    <a id="btnSaveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Save</a>
                    <a id="btnCloseDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </div>
            </fieldset>
        </div>
    </div>

    <div id="winDrawingSizingStatus" class="easyui-window" title="Add DrawingSizingStatus Detail" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width:600px; margin-left:2px;">
            <table id="tblAllBeams" class="easyui-datagrid" style="height:250px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbarBeamsDetail">
                <thead>
                    <tr>
                        <th data-options="field:'Selected',checkbox:true"></th>
                        <th field="BeamNo" width="25%">Beam No</th>
                        <th field="Qty" width="15%" align="right" formatter="formatPrice">Qty(Y)</th>
                        <th field="QtyInMtr" width="15%" align="right" formatter="formatPrice">Qty(M)</th>
                        <th field="IsDrawingSt" width="25%">Status</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarBeamsDetail">
                <a id="btnForwardDrawing" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-redo" plain="true">Forward Drawing</a>
                @*<a id="btnUndoDrawing" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" plain="true">Undo Drawing</a>*@
                <a id="btnForwardLeasing" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-redo" plain="true">Forward Leasing</a>
                @*<a id="btnUndoLeasing" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" plain="true">Undo Leasing</a>*@
                <a id="btnUndoDrawingLeasing" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" plain="true">Undo</a>
            </div>
            <fieldset>
                <legend>Actions : </legend>
                <div style="float:right;">
                    <a id="btnCloseBeamsDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </div>
            </fieldset>
        </div>
    </div>

    <script type="text/javascript">
    debugger;
    var _oFabricBatchProduction=null;
    var _oFabricBatchProductions=[];
    var _sBaseAddress="";
    var _oAuthorizationRolesMapping=[];
    var _oFabricMachinesWarping=[];
    var _sBaseAddress="";
    var _oStores = [];
    var _lBackLink = "";
    var _oProduct = "";
    var _oFabricBreakages = [];
    var _oFabricMachines =[];
    var _oBatchMans = [];
    var _oHRMShifts = [];
    var _nFBID =0 ;
    var _nBUID=0;
    var _oFB = null;
    var _oFabricMachineTypes=[];
    var _oCompareOperators=[];
    var _oProductionStatusList=[];
    var _IsDirect=false;
    var _nWarpBeam=0;
    var _nSelectedRowIndex=-1;
    var _nGainLossPer=0;
    var _oLots = [];
    $(document).ready(function () {
        debugger;
        _oFabricBatchProductions =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        _nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));

        _oFabricMachines = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.FabricMachines));
        _oFabricMachinesWarping = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.FabricMachinesWarping));
        _oFabricBreakages = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.FabricBreakages));
        _oBatchMans = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.BatchMans));
        _oHRMShifts = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.HRMShifts));
        _oStores = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Stores));
        _oFabricMachineTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.FabricMachineTypes));
        _oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
        _oProductionStatusList = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ProductionStatusList));

        $("#cboStore").icsLoadCombo({List: _oStores,OptionValue: "WorkingUnitID",DisplayText: "WorkingUnitName"});
        $("#cboShiftAdvS").icsLoadCombo({List: _oHRMShifts,OptionValue: "ShiftID",DisplayText: "ShiftWithDuration"});
        sessionStorage.setItem("BUID",_nBUID);
        var oFabricBatchProductions =sessionStorage.getItem("FabricBatchProductions");
        if(oFabricBatchProductions!=null)
        {
            oFabricBatchProductions = jQuery.parseJSON(oFabricBatchProductions);
        }
        else
        {
            oFabricBatchProductions=_oFabricBatchProductions;
        }
        RefreshList(oFabricBatchProductions);
        //RefreshControlLayout();
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
        sessionStorage.setItem("Lots",[]);
        $("#btnDelete").hide();
        if (PermissionChecker('Delete', 'FabricBatchProduction',_oAuthorizationRolesMapping)) {$("#btnDelete").show();}
        $('#txtBeamAdv').data("BeamIDs","");
    });

    function RefreshList(oFabricBatchProductions)
    {
        debugger;
        var data=oFabricBatchProductions;
        data={"total":""+data.length+"","rows":data};
        $('#tblFabricBatchProductions').datagrid('loadData',data);
        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
        $('#tblFabricBatchProductions').datagrid('selectRow',nIndex);
    }
    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }


    $('#btnCloseFBP').click(function(e) {
        $("#winFabricBatchProduction").icsWindow('close');
    });

    $("#btnAdd").click(function(){
        debugger;
        var oFabricBatchProduction= $('#tblFabricBatchProductions').datagrid('getSelected');
        var SelectedRowIndex=$('#tblFabricBatchProductions').datagrid('getRowIndex',oFabricBatchProduction);
        if(oFabricBatchProduction==null){
            alert("Please select a item from list!");
            return;
        }
        if(oFabricBatchProduction.FBPID == 0)
            oFabricBatchProduction.ProductionStatus=0;

        SetDefaultValue();
        _oFabricBatchProduction=oFabricBatchProduction;

        if(oFabricBatchProduction.ProductionStatus==0){
            $('#btnRun').show();
            $('#btnRunOut,#btnHold').hide();
            //$("#toolbarBeam,#toolbarFBatchPDetail").hide();
        }else if(oFabricBatchProduction.ProductionStatus==1){
            $('#btnRun').hide();
            $('#btnRunOut,#btnHold').show();
            $("#toolbarBeam").show();
            $('#btnAddBatchMan,#btnDeleteBatchMan,#btnSaveDetail').show();
        }
        else if(oFabricBatchProduction.ProductionStatus==2 || oFabricBatchProduction.ProductionStatus==3){
            $('#btnRun,#btnRunOut,#btnHold').hide();
            $("#toolbarBeam").hide();
            $('#btnAddBatchMan,#btnDeleteBatchMan,#btnSaveDetail').hide();
        }
        OpenWinAndSetDate(oFabricBatchProduction);


    });

    $("#btnDelete").click(function(){
        debugger;
        var oFabricBatchProduction= $('#tblFabricBatchProductions').datagrid('getSelected');
        var SelectedRowIndex=$('#tblFabricBatchProductions').datagrid('getRowIndex',oFabricBatchProduction);
        if(oFabricBatchProduction==null){
            alert("Please select a item from list!");
            return;
        }
        if(oFabricBatchProduction.FBPID <= 0){
            alert("Production Not Found!");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/FabricBatchProduction/Delete",
                data: JSON.stringify(oFabricBatchProduction),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oFBP = jQuery.parseJSON(data);
                    if (oFBP.ErrorMessage.toLowerCase() == "deleted")
                    {
                        alert("Delete sucessfully");
                        $('#tblFabricBatchProductions').datagrid('deleteRow',SelectedRowIndex);
                        var oFBPs= $('#tblFabricBatchProductions').datagrid('getRows');
                        sessionStorage.setItem("FabricBatchProductions", JSON.stringify(oFBPs));
                    }
                    else
                    {
                        alert(oFBP.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
    });

    function SetDefaultValue()
    {
        $(".number").val(0);
        $("#txtBeamQty,#txtBeamQtyMeter").val("");
        $("#cboStore").icsLoadCombo({List: _oStores,OptionValue: "WorkingUnitID",DisplayText: "WorkingUnitName"});
        $("#cboBreakage").icsLoadCombo({List: _oFabricBreakages,OptionValue: "FBreakageID",DisplayText: "Name"});
        $("#cboShift").icsLoadCombo({List: _oHRMShifts,OptionValue: "ShiftID",DisplayText: "ShiftWithDuration"});
        $("#cboBatchMan").icsLoadCombo({List: _oBatchMans,OptionValue: "EmployeeID",DisplayText: "Name"});
        $("#cboMachineName").icsLoadCombo({List: _oFabricMachines,OptionValue: "FMID",DisplayText: "Name"});
        $("#cboFBPShift").icsLoadCombo({List: _oHRMShifts,OptionValue: "ShiftID",DisplayText: "ShiftWithDuration"});
        $("#cboFabricMachineTypes").icsLoadCombo({List: _oFabricMachineTypes,OptionValue: "FabricMachineTypeID",DisplayText: "ChildWithParent"});

        $('#tpStartTime,#tpEndTime').timespinner('setValue', "00:00");
        $('#txtStartDate,#txtEndDate').datebox('setValue', icsdateformat(new Date));
        var nHour=new Date().getHours();
        var nMin=new Date().getMinutes();
        if(isNaN(nHour))
        {
            nHour=0;
        }
        if(isNaN(nMin))
        {
            nMin=0;
        }

        $('#txtProductName,#cboLot,#cboStore, #btnYarnPickByThisOrder,#btnPickProduct,#btnLotRefresh,#btnAddYarn,#btnDeleteYarn,#btnOutMaterials').show();
        $('#btnAddBreakage,#btnDeleteBreakage,#btnAddBatchMan, #btnDeleteBatchMan,#btnTotalBreakageInformation,#btnColorBreakDown,#btnAddColor,#btnDeleteColor').show();
        $( "#cboMachineName,#cboFBPShift" ).prop( "disabled", false );//#txtProdQtyY,#txtProdQtyM,
        $('#tpStartTime,#tpEndTime').timespinner({disabled:false});
        $('#tpStartTime,#tpEndTime').timespinner('setValue', nHour+":"+nMin);
        $('#txtStartDate,#txtEndDate').datebox({disabled:false});
        $("#txtStartDate,#txtEndDate").datebox("setValue", icsdateformat(new Date()));

        $('#btnBatchCardPrint').hide();
    }

    function OpenWinAndSetDate(oFabricBatchProduction)
    {
        debugger;
        $.ajax
        ({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FabricBatchProduction/GetFabricBatchProductionByIDSizing",
            traditional: true,
            data:  JSON.stringify(oFabricBatchProduction),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                ResetAllTables("tblBeams","tblFBPBeam","tblFabricBatchRawMaterial","tblFBPDetails");
                _oFabricBatchProduction = jQuery.parseJSON(data);
                _nGainLossPer=_oFabricBatchProduction.GainLossPer;
                var oFabricBatch = _oFabricBatchProduction.FabricBatch;
                if(oFabricBatch.FBID > 0){
                    $("#txtBatchNo").val(oFabricBatch.BatchNo);
                    $("#txtDispoNo").val(oFabricBatch.FEONo);
                    $("#txtOrderNo").val(oFabricBatch.OrderNo);
                    $("#txtStatus").val(oFabricBatch.StatusSt);
                    $("#txtConstruction").val(oFabricBatch.Construction);
                    $("#txtBuyer").val(oFabricBatch.BuyerName);
                    $('#txtTotalEnds').val(oFabricBatch.TotalEnds);
                    $('#txtNoOfSection').val(oFabricBatch.NoOfSection);

                    $("#txtBatchQtyY").val(ConvertToFixed2(oFabricBatch.Qty));
                    $("#txtBatchQtyM").val(GetMeter(oFabricBatch.Qty,2));

                    debugger;

                    $("#txtProdQtyY").val(ConvertToFixed2(0));
                    $("#txtProdQtyM").val(GetMeter(0.00,2));
                    $("#txtYetToWarpLengthY").val(ConvertToFixed2(oFabricBatch.Qty));
                    $("#txtYetToWarpLengthM").val(GetMeter(oFabricBatch.Qty,2));
                    //$("#cboMachineName").val(oFabricBatch.FMID);
                    $("#cboFBPShift").val(oFabricBatch.ShiftID);
                    $('#btnBatchCardPrint').show();

                    $("#txtBeamQty").val(ConvertToFixed2(oFabricBatch.Qty));
                    $("#txtBeamQtyMeter").val(GetMeter(oFabricBatch.Qty,2));

                    _oFB =oFabricBatch;
                    //HideToolbarBeamSizing(oFabricBatch.Status);
                    _oFabricBatchProduction.FEOID = oFabricBatch.FEOID;
                    _oFabricBatchProduction.FBID = oFabricBatch.FBID;
                    _oFabricBatchProduction.FabricBatchStatusInInt = oFabricBatch.StatusInInt;
                    _nFBID =oFabricBatch.FBID;

                    if(parseInt(_oFabricBatchProduction.FBPID)>0)
                    {
                        RefreshControl(_oFabricBatchProduction);
                    }
                    DynamicRefreshList(_oFabricBatchProduction.FabricBatchRawMaterials, "tblFabricBatchRawMaterial");
                    //DynamicRefreshList(_oFabricBatchProduction.FabricBatchProductionBreakages, "tblFBPBreakage");
                    DynamicRefreshList(_oFabricBatchProduction.FabricBatchProductionDetails, "tblFBPDetails");
                    //DynamicRefreshList(_oFabricBatchProduction.FabricBatchProductionColors, "tblFBPColor");
                    DynamicRefreshList(_oFabricBatchProduction.FBPBs,"tblBeams");
                    DynamicRefreshList(_oFabricBatchProduction.FBPBList,"tblBeamsSizing");
                    debugger;
                    if(_oFabricBatchProduction.FBPBs.length>0)
                    {
                        _IsDirect = _oFabricBatchProduction.FBPBs[0].IsDirect;
                    }
                    // ChangeMachineType();
                    SetYetToWarp(_oFabricBatchProduction.FabricBatchProductionDetails);
                    $.icsMakeFooterColumn('tblBeams',['BeamNo','Qty','QtyInMtr']);
                    $.icsMakeFooterColumn('tblFBPDetails',['ProductionDateSt','Qty','QtyM']);

                    if(_oFabricBatchProduction.ProductionStatus == 2){
                        if(parseFloat($("#txtYetToWarpLengthY").val()) >= 0)
                            $('#lblYetQty').text("Production Loss: ");
                        else{
                            $('#lblYetQty').text("Production Gain: ");
                            var nYetQTY = parseFloat($("#txtYetToWarpLengthY").val());
                            $("#txtYetToWarpLengthY").val(nYetQTY*-1);
                            var nYetQTYInM = parseFloat($("#txtYetToWarpLengthM").val());
                            $("#txtYetToWarpLengthM").val(nYetQTYInM*-1);
                        }

                    }else{
                        $('#lblYetQty').text("Pending :");
                    }

                    $("#winFabricBatchProduction").icsWindow('open', "Fabric Batch Sizing");
                }else{
                    alert("No Fabric Batch Found!!");
                }
            },
            error: function (xhr, status, error){
                alert(error);
            }
        });



    }

    function HideToolbarBeamSizing(nStatus)
    {
        debugger;
        if(nStatus == 3) //warping_Finish
        {
            $("#toolbarBeam").hide();
            $("#btnRun,#btnRunOut,#btnHold").hide();
        }
        else
        {
            $("#toolbarBeam").show();
        }
    }


    function SetYetToWarp(FBPBs){

        debugger;
        var value =0;
        if(_IsDirect)
        {
            if(FBPBs.length>0)
            {
                value = ConvertToFixed2(FBPBs[0].Qty);
            }
        }
        else{
            for(var i=0; i<FBPBs.length;i++){
                value += ConvertToFixed2(FBPBs[i].Qty);
            }
        }
        $("#txtGrandTotalFinishLengthY").val(ConvertToFixed2(_oFB.QtyPro+value));
        $("#txtGrandTotalFinishLengthM").val(GetMeter((ConvertToFixed2(_oFB.QtyPro+value)),2));

        //value=value+parseFloat($("#txtGrandTotalFinishLengthY").val());

        $("#txtYetToWarpLengthY").val(ConvertToFixed2($('#txtBatchQtyY').val() - parseFloat(_oFB.QtyPro+value)));
        $("#txtYetToWarpLengthM").val(GetMeter((ConvertToFixed2($('#txtBatchQtyY').val() - parseFloat(_oFB.QtyPro+value))),2));

        $("#txtProdQtyY").val(ConvertToFixed2(value));
        $("#txtProdQtyM").val(GetMeter((ConvertToFixed2(value)),2));

        $("#txtBeamQty").val(ConvertToFixed2($('#txtBatchQtyY').val() - parseFloat(_oFB.QtyPro+value)));
        $("#txtBeamQtyMeter").val(GetMeter((ConvertToFixed2($('#txtBatchQtyY').val() - parseFloat(_oFB.QtyPro+value))),2));

    }

    function SetYetToWarpAfterRemove(FBPBs,nBeamQty){
        debugger;
        var nFinishLen = parseFloat($("#txtProdQtyY").val()) - parseFloat(nBeamQty);
        $("#txtProdQtyY").val(ConvertToFixed2(parseFloat(nFinishLen)));
        $("#txtProdQtyM").val(GetMeter((ConvertToFixed2(parseFloat(nFinishLen))),2));

        var nGrandFinish = parseFloat($("#txtGrandTotalFinishLengthY").val()) - parseFloat(nBeamQty);
        $("#txtGrandTotalFinishLengthY").val(ConvertToFixed2(parseFloat(nGrandFinish)));
        $("#txtGrandTotalFinishLengthM").val(GetMeter((ConvertToFixed2(parseFloat(nGrandFinish))),2));

        var nYetLen = parseFloat($("#txtYetToWarpLengthY").val()) + parseFloat(nBeamQty);
        $("#txtYetToWarpLengthY").val(ConvertToFixed2(nYetLen));
        $("#txtYetToWarpLengthM").val(GetMeter((ConvertToFixed2(nYetLen)),2));

        $("#txtBeamQty").val(ConvertToFixed2(parseFloat($('#txtYetToWarpLengthY').val())));
        $("#txtBeamQtyMeter").val(GetMeter((ConvertToFixed2(parseFloat($('#txtYetToWarpLengthY').val()))),2));
    }

    function SetYetToWarpForDirectMachine(FBPBs, nWarpBeam){
        debugger;
        //var value =0;
        //for(var i=0; i<FBPBs.length;i++){
        //    value += FBPBs[i].Qty;
        //}
        //value=value+parseFloat($("#txtGrandTotalFinishLengthY").val());
        var nRWarpLen = parseFloat($("#txtBatchQtyM").val());
        var nWarpPerBeam = nRWarpLen/nWarpBeam;
        var nTotalFinishLengthY=(FBPBs.length*nWarpPerBeam)*1.09361;

        $("#txtProdQtyY").val(ConvertToFixed2(parseFloat(nTotalFinishLengthY)));
        $("#txtProdQtyM").val(GetMeter((ConvertToFixed2(parseFloat(nTotalFinishLengthY))),2));

        $("#txtGrandTotalFinishLengthY").val(ConvertToFixed2(parseFloat(nTotalFinishLengthY)));
        $("#txtGrandTotalFinishLengthM").val(GetMeter((ConvertToFixed2(parseFloat(nTotalFinishLengthY))),2));

        $("#txtYetToWarpLengthY").val(ConvertToFixed2(parseFloat($('#txtBatchQtyY').val()) - parseFloat($('#txtProdQtyY').val())));
        $("#txtYetToWarpLengthM").val(GetMeter((ConvertToFixed2(parseFloat($('#txtBatchQtyY').val()) - parseFloat($('#txtProdQtyY').val()))),2));

        $("#txtBeamQty").val(ConvertToFixed2(parseFloat($('#txtYetToWarpLengthY').val())));
        $("#txtBeamQtyMeter").val(GetMeter((ConvertToFixed2(parseFloat($('#txtYetToWarpLengthY').val()))),2));

    }

    function RefreshControl(oFabricBatchProduction)
    {
        //if(parseInt(oFabricBatchProduction.FabricBatchStatusInInt)==2)
        //{
        //    $('#btnRunOut,#btnHold').show();
        //    $( "#cboMachineName" ).prop( "disabled", true);
        //    $('#tpStartTime').timespinner({disabled:true});
        //    $('#txtStartDate').datebox({disabled:true});
        //}
        debugger

        if(parseInt(oFabricBatchProduction.FMID)>0)
        {
            //var oFM = {FMID:oFabricBatchProduction.FMID, Name:oFabricBatchProduction.FabricMachineName};
            //_oFabricMachines.push(oFM);
            $("#cboMachineName").icsLoadCombo({List: oFabricBatchProduction.FabricMachines,OptionValue: "FMID",DisplayText: "Name"});
            _oFabricMachines=oFabricBatchProduction.FabricMachines;
            $("#cboMachineName").val(oFabricBatchProduction.FMID);
        }

        $('#tpStartTime').timespinner('setValue', oFabricBatchProduction.StartDateStForTimeSpan);
        $('#txtStartDate').datebox('setValue', oFabricBatchProduction.StartDateSt);

        $('#txtWarpingDuration').val(oFabricBatchProduction.BatchDuration);
        $('#txtTotalEnds').val(oFabricBatchProduction.TotalEnds);
        $('#txtNoOfSection').val(oFabricBatchProduction.NoOfSection);

        $('#txtEndDate').datebox('setValue',oFabricBatchProduction.EndDateSt);
        $('#tpEndTime').timespinner('setValue', oFabricBatchProduction.EndDateStForTimeSpan);
        $("#cboFBPShift").val(oFabricBatchProduction.ShiftID);
    }


    $("#txtQtyYard").keyup(function(e){
        $("#txtQtyMeter").val(GetMeter(parseFloat($(this).val()),2));
    });

    $("#txtQtyMeter").keyup(function(e){
        $("#txtQtyYard").val(GetYard(parseFloat($(this).val()),5));
    });

    function ConvertToFixed2(nVal)
    {
        return parseFloat(nVal.toFixed(2));
    }

    $("#txtBeamQty").keyup(function(e){
        $("#txtBeamQtyMeter").val(GetMeter(parseFloat($(this).val()),4));
    });
    $("#txtBeamQtyMeter").keyup(function(e){
        $("#txtBeamQty").val(GetYard(parseFloat($(this).val()),6));
    });

    function ReloadFreeBeams(){
        var nType = parseInt($('#cboFabricMachineTypes').val());
        if (nType > 0)
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : _sBaseAddress+  "/FabricBatchProduction/GetBeamsByTypeForWarping",
                data: { nType:nType},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oBeams = jQuery.parseJSON(data);
                    $("#cboBeams").icsLoadCombo({List: oBeams,OptionValue: "FMID",DisplayText: "Code"});
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    }

    function GetFreeBeams()
    {
        var oFabricMachine={
            WeavingProcess:1, // Warping
            MachineStatus:3 //Free
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFabricMachine,
            ControllerName: "FabricMachine",
            ActionName: "GetsMachine",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if($.trim(response.objs[0].ErrorMessage) == "")
                {
                    $("#cboBeams").icsLoadCombo({
                        List: response.objs,
                        OptionValue: "FMID",
                        DisplayText: "Code"
                    });
                }
                else
                {
                    $("#cboBeams").empty();
                }
            }
        });
    }

    function ValidateInput()
    {
        if(parseInt(_oFabricBatchProduction.FBID)<=0)
        {
            alert("Sorry, there is no Fabric Batch!");
            return false;
        }
        if(parseInt($('#cboMachineName').val())<=0)
        {
            alert("Select machine!");
            $('#cboMachineName').focus();
            return false;
        }
        return true;
    }

    function RefreshObject()
    {
        var dStartDate =$('#txtStartDate').datebox('getValue');
        var startTime= $('#tpStartTime').timespinner('getValue');
        var sTime=startTime.split(':');
        var hStartTime= parseFloat(sTime[0]);
        var mStartTime= parseFloat(sTime[1]);
        dStartDate = new Date(dStartDate);
        dStartDate.setHours(hStartTime);
        dStartDate.setMinutes(mStartTime);

        var oFabricBatchProduction= {
            FBPID:_oFabricBatchProduction.FBPID,
            FBID:_oFabricBatchProduction.FBID,
            WeavingProcess:0,
            FMID:$('#cboMachineName').val(),
            StartTime: dStartDate,
            FabricBatchStatus:4,//Sising
            FBPriviousStatus:3,//Warping Finidh
            WeavingProcess:1,
            Qty:$('#txtProdQtyY').val(),
            ShiftID :$('#cboFBPShift').val(),
            ProductionStatus: 1
        };
        return oFabricBatchProduction;
    }

    function Run()
    {
        var oFabricBatchProduction= $('#tblFabricBatchProductions').datagrid('getSelected');
        var nSelectedRowIndex=$('#tblFabricBatchProductions').datagrid('getRowIndex',oFabricBatchProduction);
        if(oFabricBatchProduction==null){
            alert("Please select a item from list!");
            return;
        }

        var oBeamsWarp = $("#tblBeams").datagrid("getRows");

        if(parseFloat(oBeamsWarp.length)<=0)
        {
            alert("Warping Beam not found!!.");
            return false;
        }

        if(!ValidateInput()) return;
        var oFabricBatchProduction = RefreshObject();

        //oFabricBatchProduction.FBPBs = $("#tblBeamsSizing").datagrid("getRows");

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FabricBatchProduction/Save",
            traditional: true,
            data:  JSON.stringify(oFabricBatchProduction),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oFabricBatchProduction = jQuery.parseJSON(data);
                if (oFabricBatchProduction.FBPID>0)
                {
                    alert("Successfully Run");
                    $('#txtStatus').val(oFabricBatchProduction.FabricBatchStatusInString);
                    $('#tpStartTime').timespinner({disabled:true});
                    $('#txtStartDate').datebox({disabled:true});
                    $('#tpStartTime').timespinner('setValue', oFabricBatchProduction.StartDateStForTimeSpan);
                    $('#txtStartDate').datebox('setValue', oFabricBatchProduction.StartDateSt);
                    $('#txtWarpingDuration').val(oFabricBatchProduction.BatchDuration);
                    $('#txtTotalEnds').val(oFabricBatchProduction.TotalEnds);
                    $('#txtNoOfSection').val(oFabricBatchProduction.NoOfSection);
                    $('#btnRunOut,#btnHold').show();
                    $('#btnRun').hide();
                    $("#toolbarBeam").show();
                    $('#btnAddBatchMan,#btnDeleteBatchMan,#btnSaveDetail').show();
                    _oFabricBatchProduction=oFabricBatchProduction;
                    $('#tblFabricBatchProductions').datagrid('updateRow', { index: nSelectedRowIndex, row: oFabricBatchProduction });
                    return false;

                }
                else {
                    alert(oFabricBatchProduction.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function Hold()
    {
        debugger;
        if(parseInt(_oFabricBatchProduction.FBPID)<=0)
        {
            alert("Sorry, there is no Fabric Batch Production!");
            return false;
        }

        if(parseInt($('#tblFBPDetails').datagrid('getRows').length)<=0)
        {
            alert("Please add at least one batch wise production!");
            return false;
        }

        var oWarpBeams = $("#tblBeams").datagrid("getRows");
        var nWarpBeamQty = 0;
        for(var i=0;i<oWarpBeams.length;i++)
        {
            nWarpBeamQty += parseFloat(oWarpBeams[i].Qty);
            if(oWarpBeams[0].IsDirect){   nWarpBeamQty=_oFabricBatchProduction.QtyPrev;break}
        }
        var nWarpBeamQtyInPercent = nWarpBeamQty *_nGainLossPer;

        var nTotalProty=0
        var oFBPDetails = $("#tblFBPDetails").datagrid("getRows");

        for(var i=0;i<oFBPDetails.length;i++)
            nTotalProty += parseFloat(oFBPDetails[i].Qty.toFixed(2));

        var nDiff =parseFloat(nWarpBeamQty)-parseFloat(_oFB.QtyPro)-parseFloat(nTotalProty)

        if(nDiff <-0.1){
            alert("Hold  not possible untill you finish full Qty!! your can exced your Batch Qty:"+(_oFB.Qty).toFixed(2)+'Y'+' '+parseFloat(GetMeter(_oFB.Qty,2))+'M');
            return false;
        }

        //if(nDiff > nWarpBeamQtyInPercent){
        //    alert("Run Out is not possible untill you finish full Qty!! your tolerance Qty is:"+(_oFB.Qty*_nGainLossPer).toFixed(2)+'Y  or'+parseFloat(GetMeter(_oFB.Qty*_nGainLossPer,2))+"M");

        //    return false;
        //}
        var nDiff =parseFloat(nWarpBeamQty)-parseFloat(_oFB.QtyPro)-parseFloat(nTotalProty)
        if(nDiff >0.4){

            if (!confirm("After Hold your Pending production Qty is:"+parseFloat(GetMeter(nDiff),2)+" as per Batch Qty "+parseFloat(GetMeter(_oFB.Qty,2))+", Cofirm to Run out")) return false;
        }
        else if(nDiff <-0.4){

            if (!confirm("After Hold your Pending production Qty is:"+parseFloat(GetMeter(nDiff),2)+" as per Batch Qty "+parseFloat(GetMeter(_oFB.Qty,2))+", Cofirm to Run out")) return false;
        }
        else
        {
            if (!confirm("After Hold your Pending production Qty is:"+parseFloat(GetMeter(nDiff),2)+" as per Batch Qty "+parseFloat(GetMeter(_oFB.Qty,2))+", Cofirm to Run out")) return false;
        }
        //if(nDiff < 0) nDiff*=-1;
        //if(nDiff >0.3){
        //    alert("Your Beam Length and Production Length should be Equal!!");
        //    return false;
        //}

        var dEndDate =$('#txtEndDate').datebox('getValue');
        var EndTime= $('#tpEndTime').timespinner('getValue');
        var sTime=EndTime.split(':');
        var hEndTime= parseFloat(sTime[0]);
        var mEndTime= parseFloat(sTime[1]);
        dEndDate = new Date(dEndDate);
        dEndDate.setHours(hEndTime);
        dEndDate.setMinutes(mEndTime);

        var oFabricBatchProduction = {
            FBPID:_oFabricBatchProduction.FBPID,
            FBID:_oFabricBatchProduction.FBID,
            WeavingProcess:1,
            FMID:$('#cboMachineName').val(),
            FabricBatchStatus:5,
            FBPriviousStatus:_oFabricBatchProduction.FabricBatchStatusInInt,
            EndTime:dEndDate,
            Qty:$('#txtProdQtyY').val(),
            IsHold:true,
            ShiftID :$('#cboFBPShift').val(),
            ProductionStatus: 3
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FabricBatchProduction/Save",
            traditional: true,
            data:  JSON.stringify(oFabricBatchProduction),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var  oFabricBatchProduction = jQuery.parseJSON(data);
                if (oFabricBatchProduction.FBPID>0)
                {
                    alert("Successfully Hold");
                    $('#txtStatus').val(oFabricBatchProduction.FabricBatchStatusInString);
                    $('#txtWarpingDuration').val(oFabricBatchProduction.BatchDuration);
                    $('#txtTotalEnds').val(oFabricBatchProduction.TotalEnds);
                    $('#txtNoOfSection').val(oFabricBatchProduction.NoOfSection);
                    $("#toolbarBeam").hide();
                    $('#btnAddBatchMan,#btnDeleteBatchMan,#btnSaveDetail').hide();
                    $('#txtProductName,#cboLot,#cboStore, #btnYarnPickByThisOrder,#btnPickProduct,#btnLotRefresh,#btnAddYarn,#btnDeleteYarn,#btnOutMaterials').hide();
                    $('#btnRunOut,#btnAddBreakage,#btnDeleteBreakage,#btnAddBatchMan,#btnDeleteBatchMan,#btnAddColor,#btnDeleteColor,#btnHold').hide();
                    $('#btnTotalBreakageInformation').hide();
                    $('#btnColorBreakDown').hide();
                    $('#tpEndTime').timespinner({disabled:true});
                    $('#txtEndDate').datebox({disabled:true});
                    $('#tpEndTime').timespinner('setValue', oFabricBatchProduction.EndDateStForTimeSpan);
                    $('#txtEndDate').datebox('setValue', oFabricBatchProduction.EndDateSt);
                    return;

                }
                else {
                    alert(oFabricBatchProduction.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function RunOut()
    {
        debugger;
        if(parseInt(_oFabricBatchProduction.FBPID)<=0)
        {
            alert("Sorry, there is no Fabric Batch Production!");
            return false;
        }

        if(parseInt($('#tblFBPDetails').datagrid('getRows').length)<=0)
        {
            alert("Please add at least one batch wise production!");
            return false;
        }

        var oWarpBeams = $("#tblBeams").datagrid("getRows");
        var nWarpBeamQty = 0;
        for(var i=0;i<oWarpBeams.length;i++)
        {
            nWarpBeamQty += parseFloat(oWarpBeams[i].Qty);
            if(oWarpBeams[0].IsDirect){  nWarpBeamQty=_oFabricBatchProduction.QtyPrev;break}
        }
        var nWarpBeamQtyInPercent = nWarpBeamQty *_nGainLossPer;

        var nTotalProty=0
        var oFBPDetails = $("#tblFBPDetails").datagrid("getRows");

        for(var i=0;i<oFBPDetails.length;i++)
            nTotalProty += parseFloat(oFBPDetails[i].Qty.toFixed(2));

        var nDiff =parseFloat(nWarpBeamQty)-parseFloat(_oFB.QtyPro)-parseFloat(nTotalProty)

        if(nDiff <-nWarpBeamQtyInPercent){
            alert("Run Out is not possible untill you finish full Qty!! your can exced your Batch Qty:"+(_oFB.Qty).toFixed(2)+'Y'+' '+parseFloat(GetMeter(_oFB.Qty,2))+'M');
            return false;
        }

        if(nDiff > nWarpBeamQtyInPercent){
            alert("Run Out is not possible untill you finish full Qty!! your tolerance Qty is:"+(_oFB.Qty*_nGainLossPer).toFixed(2)+'Y  or'+parseFloat(GetMeter(_oFB.Qty*_nGainLossPer,2))+"M");

            return false;
        }
        var nDiff =parseFloat(nWarpBeamQty)-parseFloat(_oFB.QtyPro)-parseFloat(nTotalProty)
        if(nDiff >0.4){

            if (!confirm("After Run out your loss Qty is:"+parseFloat(GetMeter(nDiff),2)+" as per Batch Qty "+parseFloat(GetMeter(_oFB.Qty,2))+", Cofirm to Run out")) return false;
        }
        else if(nDiff <-0.4){

            if (!confirm("After Run out your Gain Qty is:"+parseFloat(GetMeter(nDiff),2)+" as per Batch Qty "+parseFloat(GetMeter(_oFB.Qty,2))+", Cofirm to Run out")) return false;
        }
        else{
            if (!confirm("After Run out your loss Qty is:"+parseFloat(GetMeter(nDiff),2)+" as per Batch Qty "+parseFloat(GetMeter(_oFB.Qty,2))+", Cofirm to Run out")) return false;
        }




        var dEndDate =$('#txtEndDate').datebox('getValue');
        var EndTime= $('#tpEndTime').timespinner('getValue');
        var sTime=EndTime.split(':');
        var hEndTime= parseFloat(sTime[0]);
        var mEndTime= parseFloat(sTime[1]);
        dEndDate = new Date(dEndDate);
        dEndDate.setHours(hEndTime);
        dEndDate.setMinutes(mEndTime);

        var oFabricBatchProduction = {
            FBPID:_oFabricBatchProduction.FBPID,
            WeavingProcess:1,
            FBID:_oFabricBatchProduction.FBID,
            FMID:$('#cboMachineName').val(),
            FabricBatchStatus:5,
            FBPriviousStatus:_oFabricBatchProduction.FabricBatchStatusInInt,
            EndTime:dEndDate,
            Qty:$('#txtProdQtyY').val(),
            IsFromRunOut:true,
            ShiftID :$('#cboFBPShift').val(),
            ProductionStatus: 2
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FabricBatchProduction/Save",
            traditional: true,
            data:  JSON.stringify(oFabricBatchProduction),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var  oFabricBatchProduction = jQuery.parseJSON(data);
                if (oFabricBatchProduction.FBPID>0)
                {
                    alert("Successfully Run Out");
                    $('#txtStatus').val(oFabricBatchProduction.FabricBatchStatusInString);
                    $('#txtWarpingDuration').val(oFabricBatchProduction.BatchDuration);
                    $('#txtTotalEnds').val(oFabricBatchProduction.TotalEnds);
                    $('#txtNoOfSection').val(oFabricBatchProduction.NoOfSection);
                    $("#toolbarBeam").hide();
                    $('#btnAddBatchMan,#btnDeleteBatchMan,#btnSaveDetail').hide();
                    $('#txtProductName,#cboLot,#cboStore, #btnYarnPickByThisOrder,#btnPickProduct,#btnLotRefresh,#btnAddYarn,#btnDeleteYarn,#btnOutMaterials').hide();
                    $('#btnRunOut,#btnAddBreakage,#btnDeleteBreakage,#btnAddBatchMan,#btnDeleteBatchMan,#btnAddColor,#btnDeleteColor,#btnHold').hide();
                    $('#btnTotalBreakageInformation').hide();
                    $('#btnColorBreakDown').hide();
                    $('#tpEndTime').timespinner({disabled:true});
                    $('#txtEndDate').datebox({disabled:true});
                    $('#tpEndTime').timespinner('setValue', oFabricBatchProduction.EndDateStForTimeSpan);
                    $('#txtEndDate').datebox('setValue', oFabricBatchProduction.EndDateSt);
                    return;

                }
                else {
                    alert(oFabricBatchProduction.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }


    function SetRemainingLength(){
        var nFinishLength= icsRemoveComma($('#txtTotalFinishLengthY').val());
        var nBeamQty=$('#tblBeamsSizing').datagrid('getRows').select('Qty').sum();
        var nRemainingLength=nFinishLength-nBeamQty;

        $('#txtRemainingLengthInYard').val(formatPrice(nRemainingLength));
        $('#txtRemainingLengthInMeter').val(formatPrice(GetMeter(nRemainingLength,2)));

    }



    function AddBatchMan()
    {
        if(parseInt(_oFabricBatchProduction.FBPID)<=0)
        {
            alert("Please Run the Batch Card then Add BatchMan!");
            return false;
        }
        if(parseInt($('#cboBatchMan').val())<=0)
        {
            alert("Select BatchMan !");
            $('#cboBatchMan').focus();
            return false;
        }
        if(parseInt($('#cboShift').val())<=0)
        {
            alert("Select Shift !");
            $('#cboShift').focus();
            return false;
        }
        debugger;
        var oBeams = $("#tblBeams").datagrid("getRows");
        var oFBPBatchMans = $("#tblFBPDetails").datagrid("getRows");
        var nTotalBeamQty = 0;
        if(_IsDirect)
        {
            if(oBeams.length>0){nTotalBeamQty = parseFloat(oBeams[0].Qty.toFixed(2));}
        }
        else{
            for(var i=0;i<oBeams.length;i++)
                nTotalBeamQty += parseFloat(oBeams[i].Qty.toFixed(2));
        }
        var nBatchManQty = 0;
        for(var i=0;i<oFBPBatchMans.length;i++)
            nBatchManQty += parseFloat(oFBPBatchMans[i].Qty.toFixed(2));

        nTotalBeamQty=nTotalBeamQty.toFixed(2);
        nBatchManQty=nBatchManQty.toFixed(2);



        if(parseFloat(nTotalBeamQty)+0.5 < parseFloat(nBatchManQty)+parseFloat($('#txtQtyYard').val())){
            alert("Total Production Qty can not be greater than Beam Qty!!"+nTotalBeamQty+', '+parseFloat(nBatchManQty)+parseFloat($('#txtQtyYard').val())+''+'');
            return false;
        }

        var oFBPBatchMan = {
            FBPBID:0,
            FBPID:_oFabricBatchProduction.FBPID,
            EmployeeID:$('#cboBatchMan').val(),
            ShiftID:$('#cboShift').val(),
            Qty:$('#txtQtyYard').val(),
            FinishDate:$('#txtFinishDate').datebox('getValue'),
            Note:''
        };

        SaveBatchMan(oFBPBatchMan,false, 0);
        $('#cboBatchMan').val(0);
        $('#cboShift').val(0);
        $('#txtFinishDate').datebox('setValue',icsdateformat(new Date()));

    }

    function SaveBatchMan(oFBPBatchMan,bIsEdit, nSelectedIndex)
    {
        //if(parseInt(_oFabricBatchProduction.FabricBatchStatusInInt)!=2)//warping
        //{
        //    return false;//in this step can't add any data
        //}
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FabricBatchProduction/SaveFBPBatchMan",
            traditional: true,
            data:  JSON.stringify(oFBPBatchMan),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oFBPBatchMan = jQuery.parseJSON(data);
                if (parseInt(_oFBPBatchMan.FBPBID)>0)
                {
                    if(bIsEdit)
                    {
                        $('#tblFBPDetails').datagrid('updateRow', { index: nSelectedIndex, row: _oFBPBatchMan});
                    }else{
                        $("#tblFBPDetails").datagrid("appendRow", _oFBPBatchMan);
                    }
                    return;
                }
                else {
                    alert(_oFBPBatchMan.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }


    var editIndexBatchMan = undefined;
    function endEditingBatchMan(){
        if (editIndexBatchMan == undefined){return true}
        if ($('#tblFBPDetails').datagrid('validateRow', editIndexBatchMan)){
            $('#tblFBPDetails').datagrid('endEdit', editIndexBatchMan);
            $('#tblFBPDetails').datagrid('selectRow',editIndexBatchMan);
            var oFBPBatchMan=$('#tblFBPDetails').datagrid('getSelected');
            oFBPBatchMan.Qty=oFBPBatchMan.Qty;
            oFBPBatchMan.FinishDate= icsdateformat(new Date(oFBPBatchMan.FinishDate)),
            oFBPBatchMan.Note=oFBPBatchMan.Note;
            SaveBatchMan(oFBPBatchMan, true,editIndexBatchMan);
            editIndexBatchMan = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRowBatchMan(index){

        if (editIndexBatchMan != index){
            if (endEditingBatchMan())
            {
                $('#tblFBPDetails').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editIndexBatchMan = index;
            }
            else
            {
                $('#tblFBPDetails').datagrid('selectRow', editIndexBatchMan);
            }
        }
    }

    $("#btnTotalBreakageInformation").click(function(){
        DynamicRefreshList([],"tblFBPBreakage");
        var oFBPBatchMan = $("#tblFBPDetails").datagrid("getSelected");
        if(oFBPBatchMan == null || oFBPBatchMan.FBPBID <=0)
        {
            alert("Please select an item from list.");
            return false;
        }

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFBPBatchMan,
            ControllerName: "FabricBatchProduction",
            ActionName: "GetsTotalBreakageInformation",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if($.trim(response.objs[0].ErrorMessage) == "")
                {
                    DynamicRefreshList(response.objs,"tblFBPBreakage");
                }
                else
                {
                    alert(response.objs[0].ErrorMessage);
                    return false;
                }
            }
            TotalNoOfBreakage();
            $("#winTotalBreakageInformation").icsWindow("open","Total Breakage Information");
        });
    });

    function TotalNoOfBreakage()
    {
        var nTotalNoOfBreakage=0;
        var oFBPBreakages = $("#tblFBPBreakage").datagrid("getRows");
        if(oFBPBreakages.length>0)
        {
            for(var i=0;i<oFBPBreakages.length;i++)
            {
                nTotalNoOfBreakage = parseInt(oFBPBreakages[i].NoOfBreakage) + parseInt(nTotalNoOfBreakage);
            }
        }
        $("#lblTotalNoOfBreakage").text(nTotalNoOfBreakage);
    }

    var editIndexBreakage = undefined;
    function endEditingBreakage(){
        if (editIndexBreakage == undefined){return true}
        if ($('#tblFBPBreakage').datagrid('validateRow', editIndexBreakage)){
            $('#tblFBPBreakage').datagrid('endEdit', editIndexBreakage);
            $('#tblFBPBreakage').datagrid('selectRow',editIndexBreakage);
            var oFBPBreakage=$('#tblFBPBreakage').datagrid('getSelected');
            oFBPBreakage.DurationInMin = parseInt(oFBPBreakage.DurationInMin);
            oFBPBreakage.NoOfBreakage = parseInt(oFBPBreakage.NoOfBreakage);
            oFBPBreakage.Note = oFBPBreakage.Note;
            SaveBreakage(oFBPBreakage, true,editIndexBreakage);
            editIndexBreakage = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }

    function onClickRowBreakage(index){

        if (editIndexBreakage != index){
            if (endEditingBreakage())
            {
                $('#tblFBPBreakage').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndexBreakage = index;
            }
            else
            {
                $('#tblFBPBreakage').datagrid('selectRow', editIndexBreakage);
            }
        }
    }

    $("#btnAddBreakage").click(function(){
        if(parseInt(_oFabricBatchProduction.FBPID)<=0)
        {
            alert("Please Run the Batch Card then Add Breakage!");
            return false;
        }
        if(parseInt($('#cboBreakage').val())<=0)
        {
            alert("Select Breakage !");
            $('#cboBreakage').focus();
            return false;
        }

        var oFBPBatchMan = $("#tblFBPDetails").datagrid("getSelected");
        if(oFBPBatchMan == null || oFBPBatchMan.FBPBID <=0)
        {
            alert("Invalid Fabric Batch Production Batch Man.");
            return false;
        }

        var oFBPBreakage = {
            FBPBreakageID:0,
            FBPBID: oFBPBatchMan.FBPBID,
            FBreakageID:$('#cboBreakage').val(),
            DurationInMin:$('#txtDuration').numberbox('getValue'),
            NoOfBreakage:$('#txtNumberOfBreakage').numberbox('getValue'),
            Note:''
        };

        SaveBreakage(oFBPBreakage,false, 0);
        $('#cboBreakage').val(0);
        $('#txtDuration').numberbox('setValue',0);
        $('#txtNumberOfBreakage').numberbox('setValue',1);
    });

    function SaveBreakage(oFBPBreakage,bIsEdit, nSelectedIndex)
    {
        //
        if(parseInt(_oFabricBatchProduction.FabricBatchStatusInInt)!=2)//warping
        {
            return;//in this step can't add any data
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FabricBatchProduction/SaveFBPBreakage",
            traditional: true,
            data:  JSON.stringify(oFBPBreakage),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oFBPBreakage = jQuery.parseJSON(data);
                if (_oFBPBreakage.FBPBreakageID>0)
                {
                    if(bIsEdit)
                    {
                        $('#tblFBPBreakage').datagrid('updateRow', { index: nSelectedIndex, row: _oFBPBreakage});
                    }else{
                        $("#tblFBPBreakage").datagrid("appendRow", _oFBPBreakage);
                    }
                    TotalNoOfBreakage();
                    $("#cboBreakage").focus();
                    //Update table tblFBPDetails
                    UpdateFBPBatchMan(_oFBPBreakage.FabricBatchProductionBreakages);
                    return;
                }
                else {
                    alert(_oFBPBreakage.ErrorMessage);
                    TotalNoOfBreakage();
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function UpdateFBPBatchMan(oFabricBatchProductionBreakages)
    {
        if(oFabricBatchProductionBreakages.length > 0)
        {
            var nTotalBreakages=0;
            var nTotalNoOfBreakage=0;
            for(var i=0;i<oFabricBatchProductionBreakages.length;i++)
            {
                nTotalBreakages++;
                nTotalNoOfBreakage = parseInt(oFabricBatchProductionBreakages[i].NoOfBreakage) + parseInt(nTotalNoOfBreakage);
            }

            var oFBPBatchMan = $("#tblFBPDetails").datagrid("getSelected");
            var nRowIndex = $("#tblFBPDetails").datagrid("getRowIndex", oFBPBatchMan);

            oFBPBatchMan.TotalFBPBreakage = nTotalBreakages;
            oFBPBatchMan.TotalNoOfBreakage = nTotalNoOfBreakage

            $("#tblFBPDetails").datagrid("updateRow", { index: nRowIndex, row: oFBPBatchMan });
            $('#tblFBPDetails').datagrid('selectRow',nRowIndex);
        }
    }

    $("#btnDeleteBreakage").click(function(){
        var oFBPBreakage= $("#tblFBPBreakage").datagrid("getSelected");
        if (oFBPBreakage == null || parseInt(oFBPBreakage.FBPBreakageID) <= 0) {
            alert("Please select an item from list!");
            return false;
        }

        if (!confirm("Confirm to Delete?")) return false;
        var nRowIndex = $("#tblFBPBreakage").datagrid("getRowIndex", oFBPBreakage);
        if (parseInt(oFBPBreakage.FBPBreakageID) > 0)
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : _sBaseAddress+  "/FabricBatchProduction/DeleteFBPBreakage",
                data: { id: oFBPBreakage.FBPBreakageID},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    feedbackmessage = jQuery.parseJSON(data);

                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $("#tblFBPBreakage").datagrid("deleteRow", nRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                    TotalNoOfBreakage();
                    UpdateFBPBatchMan($("#tblFBPBreakage").datagrid("getRows"));
                    editIndexBreakage = undefined;
                    endEditingBreakage();
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    });

    $("#btnRefreshBreakage").click(function(){
        endEditingBreakage();
    });

    $("#btnOkTotalBreakageInformation").click(function(){
        var oFBPBreakages=$("#tblFBPBreakage").datagrid("getRows");
        if(oFBPBreakages.length == 0)
        {
            alert("Add minimum one item.");
            return false;
        }
        endEditingBreakage();
        $("#winTotalBreakageInformation").icsWindow("close");
    });

    $("#btnCloseTotalBreakageInformation").click(function(){
        $("#winTotalBreakageInformation").icsWindow("close");
    });


    var editIndexColor = undefined;
    function endEditingColor(){
        if (editIndexColor == undefined){return true}
        if ($('#tblFBPColor').datagrid('validateRow', editIndexColor)){
            $('#tblFBPColor').datagrid('endEdit', editIndexColor);
            $('#tblFBPColor').datagrid('selectRow',editIndexColor);
            var oFBPColor=$('#tblFBPColor').datagrid('getSelected');
            oFBPColor.Qty=oFBPColor.Qty;
            oFBPColor.Note=oFBPColor.Note;
            SaveColor(oFBPColor, true,editIndexColor);
            editIndexColor = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRowColor(index){

        if (editIndexColor != index){
            if (endEditingColor())
            {
                $('#tblFBPColor').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editIndexColor = index;
            }
            else
            {
                $('#tblFBPColor').datagrid('selectRow', editIndexColor);
            }
        }
    }

    $("#btnColorBreakDown").click(function(){
        DynamicRefreshList([],"tblFBPColor");
        var oFBPBatchMan = $("#tblFBPDetails").datagrid("getSelected");
        if(oFBPBatchMan == null || oFBPBatchMan.FBPBID <=0)
        {
            alert("Please select an item from list.");
            return false;
        }

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFBPBatchMan,
            ControllerName: "FabricBatchProduction",
            ActionName: "GetsColorBreakDown",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if($.trim(response.objs[0].ErrorMessage) == "")
                {
                    DynamicRefreshList(response.objs,"tblFBPColor");
                }
                else
                {
                    alert(response.objs[0].ErrorMessage);
                    return false;
                }
            }
            TotalCalculationForColor();
            $("#winColorBreakDown").icsWindow("open","Color Break Down");
        });
    });

    function TotalCalculationForColor()
    {
        var nTotalQty=0;
        var nTotalQtyInM=0;
        var oFBPColors = $("#tblFBPColor").datagrid("getRows");
        if(oFBPColors.length>0)
        {
            for(var i=0;i<oFBPColors.length;i++)
            {
                nTotalQty = parseFloat(oFBPColors[i].Qty) + parseFloat(nTotalQty);
                nTotalQtyInM = parseFloat(oFBPColors[i].QtyInM) + parseFloat(nTotalQtyInM);
            }
        }
        $("#lblTotalQtyColor").text(nTotalQty.toFixed(2));
        $("#lblTotalQtyInMColor").text(nTotalQtyInM.toFixed(2));
    }

    $("#btnAddColor").click(function(){
        if(parseInt(_oFabricBatchProduction.FBPID)<=0)
        {
            alert("Please Run the Batch Card then Add Color!");
            return false;
        }
        if($('#txtColorName').val()=="" || $('#txtColorName').val()==null)
        {
            alert("type Color !");
            $('#txtColorName').focus();
            return false;
        }
        if(parseFloat($('#txtFinishLengthColorWiseY').val())<=0)
        {
            alert("Duration Should be greater than 0 ");
            $('#txtFinishLengthColorWiseY').focus();
            return false;
        }

        var oFBPBatchMan = $("#tblFBPDetails").datagrid("getSelected");
        if(oFBPBatchMan == null || oFBPBatchMan.FBPBID <=0)
        {
            alert("Invalid Fabric Batch Production Batch Man.");
            return false;
        }
        var oFBPColor = {
            FBPColorID:0,
            FBPBID: oFBPBatchMan.FBPBID,
            Name:$('#txtColorName').val(),
            Qty:$('#txtFinishLengthColorWiseY').val(),
            Note:''
        };

        SaveColor(oFBPColor,false, 0);
        $('#txtColorName').val("");
        $('#txtFinishLengthColorWiseY').val(0);
        $('#txtFinishLengthColorWiseM').val(0);
    });

    function SaveColor(oFBPColor,bIsEdit, nSelectedIndex)
    {
        if(parseInt(_oFabricBatchProduction.FabricBatchStatusInInt)!=2)//warping
        {
            return false;//in this step can't add any data
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FabricBatchProduction/SaveFBPColor",
            traditional: true,
            data:  JSON.stringify(oFBPColor),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oFBPColor = jQuery.parseJSON(data);
                if (_oFBPColor.FBPColorID>0)
                {
                    if(bIsEdit)
                    {
                        $('#tblFBPColor').datagrid('updateRow', { index: nSelectedIndex, row: _oFBPColor});
                    }else{
                        $("#tblFBPColor").datagrid("appendRow", _oFBPColor);
                    }
                    TotalCalculationForColor();
                    $("#txtColorName").focus();
                    UpdateFBPColor(_oFBPColor.FabricBatchProductionColors);
                    return;
                }
                else {
                    alert(_oFBPColor.ErrorMessage);
                }
                TotalCalculationForColor();
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function UpdateFBPColor(oFabricBatchProductionColors)
    {
        if(oFabricBatchProductionColors.length > 0)
        {
            var nTotalColot=0;
            var nTotalQty=0;
            var nTotalQtyInM=0;
            for(var i=0;i<oFabricBatchProductionColors.length;i++)
            {
                nTotalColot++;
                nTotalQty = parseFloat(oFabricBatchProductionColors[i].Qty) + parseFloat(nTotalQty);
                nTotalQtyInM = parseFloat(oFabricBatchProductionColors[i].QtyInM) + parseFloat(nTotalQtyInM);
            }

            var oFBPBatchMan = $("#tblFBPDetails").datagrid("getSelected");
            var nRowIndex = $("#tblFBPDetails").datagrid("getRowIndex", oFBPBatchMan);

            oFBPBatchMan.TotalColor = nTotalColot;
            oFBPBatchMan.Qty = nTotalQty;
            oFBPBatchMan.QtyInM = parseFloat(nTotalQtyInM.toFixed(2));

            $("#tblFBPDetails").datagrid("updateRow", { index: nRowIndex, row: oFBPBatchMan });
            $('#tblFBPDetails').datagrid('selectRow',nRowIndex);
        }
    }

    $("#btnDeleteColor").click(function(){
        var oFBPColor= $("#tblFBPColor").datagrid("getSelected");
        if (oFBPColor == null || parseInt(oFBPColor.FBPColorID) <= 0) {
            alert("Please select an item from list!");
            return false;
        }

        if (!confirm("Confirm to Delete?")) return false;
        var nRowIndex = $("#tblFBPColor").datagrid("getRowIndex", oFBPColor);
        if (parseInt(oFBPColor.FBPColorID) > 0)
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : _sBaseAddress+  "/FabricBatchProduction/DeleteFBPColor",
                data: { id: oFBPColor.FBPColorID},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $("#tblFBPColor").datagrid("deleteRow", nRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                    TotalCalculationForColor();
                    UpdateFBPColor($("#tblFBPColor").datagrid("getRows"));
                    editIndexColor = undefined;
                    endEditingColor();
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    });

    $("#btnRefreshColor").click(function(){
        endEditingColor();
    });

    $("#btnCloseColorBreakDown").click(function(){
        $("#winColorBreakDown").icsWindow("close");
    });

    $("#btnOkColorBreakDown").click(function(){
        var oFabricBatchProductionColors =$("#tblFBPColor").datagrid("getRows");
        if(oFabricBatchProductionColors.length == 0)
        {
            alert("Add minimum one item.");
            return false;
        }
        endEditingColor();
        $("#winColorBreakDown").icsWindow("close");
    });

    $("#txtFinishLengthColorWiseY").keyup(function (e) {

        var nVal =  $(this).val();
        $('#txtFinishLengthColorWiseM').val(GetMeter(nVal,2));
        if (nVal == "" || nVal == null) {
            $(this).val(0);
        }
    });

    $("#txtFinishLengthColorWiseM").keyup(function (e) {
        var nVal = $(this).val();
        $('#txtFinishLengthColorWiseY').val(GetYard(nVal,2));
        if (nVal == "" || nVal == null) {
            $(this).val(0);
        }
    });

    function ResetAdvSearchWindow() {
        $(".lblLoadingMessage").hide();
        $("#winAdvSearch input").not("input[type='button']").val("");
        $("#winAdvSearch select").val(0);
        $("#txtDispoNoAdv").val("");
        $("#txtBatchNoAdv").val("");
        $("#txtFromProductionDateAdv,#txtToProductionDateAdv,#txtFromStartDateAdv,#txtToStartDateAdv,#txtFromEndDateAdv,#txtToEndDateAdv").datebox({ disabled: true });
        $("#txtFromProductionDateAdv,#txtToProductionDateAdv,#txtFromStartDateAdv,#txtToStartDateAdv,#txtFromEndDateAdv,#txtToEndDateAdv").datebox("setValue", icsdateformat(new Date()));
    }

    function DateActions_ProductionDateAdv() {
        DynamicDateActions("cboProductionDateAdv", "txtFromProductionDateAdv", "txtToProductionDateAdv");
    }
    function DateActions_StartDateAdv() {
        DynamicDateActions("cboStartDateAdv", "txtFromStartDateAdv", "txtToStartDateAdv");
    }
    function DateActions_EndDateAdv() {
        DynamicDateActions("cboEndDateAdv", "txtFromEndDateAdv", "txtToEndDateAdv");
    }

    $("#btnCloseAdvSearch").click(function () {
        $("#winAdvSearch").icsWindow("close");
    });

    $("#btnAdvSearch").click(function () {
        debugger;
        $("#cboProductionDateAdv,#cboStartDateAdv,#cboEndDateAdv").icsLoadCombo({List: _oCompareOperators, OptionValue: "id", DisplayText: "Value"});
        $("#cboStatusAdv").icsLoadCombo({List: _oProductionStatusList, OptionValue: "id", DisplayText: "Value"});
        $("#cboMachineAdv").icsLoadCombo({List: _oFabricMachinesWarping, OptionValue: "FMID", DisplayText: "Name"});
        ResetAdvSearchWindow();
        $("#winAdvSearch").icsWindow("open", " Advance Search");
    });

    $("#btnSearchAdvSearch").click(function () {
        debugger;
        var nCboProductionDateAdv = parseInt($("#cboProductionDateAdv").val());
        var dFromProductionDateAdv = $('#txtFromProductionDateAdv').datebox('getValue');
        var dToProductionDateAdv = $('#txtToProductionDateAdv').datebox('getValue');

        var nCboStartDateAdv = parseInt($("#cboStartDateAdv").val());
        var dFromStartDateAdv = $('#txtFromStartDateAdv').datebox('getValue');
        var dToStartDateAdv = $('#txtToStartDateAdv').datebox('getValue');

        var ncboEndDateAdv = parseInt($("#cboEndDateAdv").val());
        var dFromEndDateAdv = $('#txtFromEndDateAdv').datebox('getValue');
        var dToEndDateAdv = $('#txtToEndDateAdv').datebox('getValue');

        var sDispoNoAdv = $.trim($("#txtDispoNoAdv").val());
        var sBatchNoAdv = $.trim($("#txtBatchNoAdv").val());
        var nCboStatusAdv = parseInt($("#cboStatusAdv").val());
        var nCboShiftAdv = parseInt($("#cboShiftAdvS").val());
        var ncboMachineAdv = parseInt($("#cboMachineAdv").val());
        var sBeamIDs=$('#txtBeamAdv').data("BeamIDs");

        if(nCboProductionDateAdv<=0 && nCboStartDateAdv <= 0 && ncboEndDateAdv <= 0 && sDispoNoAdv == "" && sBatchNoAdv=="" && nCboStatusAdv <= 0 && nCboShiftAdv<=0 && sBeamIDs == "" && ncboMachineAdv <= 0){
            alert("Please enter atleast one searching criteria!!");
            return;
        }

        debugger;
        var sParams =
                        nCboProductionDateAdv + "~" +
                        dFromProductionDateAdv + "~" +
                        dToProductionDateAdv + "~" +
                        nCboStartDateAdv + "~" +
                        dFromStartDateAdv + "~" +
                        dToStartDateAdv + "~" +
                        ncboEndDateAdv+"~" +
                        dFromEndDateAdv+"~"+
                        dToEndDateAdv+"~"+
                        sDispoNoAdv+"~"+
                        nCboStatusAdv+"~"+
                        nCboShiftAdv+"~"+
                        1+"~"+   /// Sizing ==1
                        sBatchNoAdv+"~"+
                        ncboMachineAdv+"~"+
                        sBeamIDs;

        //sessionStorage.setItem("ParamsSO", sParams);
        var oFBP = {
            ErrorMessage : sParams
        };
        Search(oFBP);
    });
    function Search(oFBP)
    {
        $(".lblLoadingMessage").show();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/FabricBatchProduction/AdvSearchForWarpingExecution",
            traditional: true,
            data: JSON.stringify(oFBP),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oFBPs = data;
                debugger;
                if (oFBPs.length > 0)
                {
                    if (oFBPs[0].ErrorMessage=='' || oFBPs[0].ErrorMessage==null)
                    {
                        DynamicRefreshList(oFBPs, "tblFabricBatchProductions");
                        $("#winAdvSearch").icsWindow("close");
                    }
                    else
                    {
                        alert(oFBPs[0].ErrorMessage);
                    }

                }else {
                    alert("Sorry, No data found. ");
                }
                $(".lblLoadingMessage").hide();
            }
        });
    }

    $('#txtDispoNoSearch').keypress(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            debugger;
            if (!$.trim($("#txtDispoNoSearch").val()).length) {

                alert("Please enter Dispo No.");
                $('#txtDispoNoSearch').focus();
                $('#txtDispoNoSearch').val("");
                return;
            }
            var oFabricBatchProduction={FEONo: $.trim($("#txtDispoNoSearch").val()),ProductionStatus:0};
            SearchByType(oFabricBatchProduction);
        }
    });

    $("#btnSearch").click(function(){
        debugger;
        if(parseInt($("#cboStatus").val()) <= 0){
            alert("Please select status!!");
            return;
        }
        var oFabricBatchProduction={FEONo:"",ProductionStatus:parseInt($("#cboStatus").val()) };
        SearchByType(oFabricBatchProduction);
    });
    function SearchByType(oFabricBatchProduction)
    {
        $.ajax
            ({

                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/FabricBatchProduction/GetProductionSizing",
                traditional: true,
                data:  JSON.stringify(oFabricBatchProduction),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oFabricBatchProductions = data;
                    if(oFabricBatchProductions.length > 0){
                        if(oFabricBatchProductions[0].ErrorMessage == "" || oFabricBatchProductions[0].ErrorMessage == null)
                            DynamicRefreshList(oFabricBatchProductions, "tblFabricBatchProductions");
                        else
                            alert(oFabricBatchProductions[0].ErrorMessage);
                    }else{
                        alert("No Data Found!!");
                    }

                },
                error: function (xhr, status, error){
                    alert(error);
                }
            });
    }

    function ChangeMachineType()
    {
        var ncboMachineName= parseInt($('#cboMachineName').val());
        if(ncboMachineName>0)
        {
            for(var i=0;i<_oFabricMachines.length;i++){
                if(_oFabricMachines[i].FMID == ncboMachineName)
                    _IsDirect = _oFabricMachines[i].IsDirect;
                break;
            }
        }
        // alert(_IsDirect);
    }
    $('#btnPrint').click(function (e){
        debugger;
        var oFabricBatchProductions = $('#tblFabricBatchProductions').datagrid('getRows');
        var FBPIDs = ICS_PropertyConcatation(oFabricBatchProductions, 'FBPID');

        var nCboProductionDateAdv = parseInt($("#cboProductionDateAdv").val());
        var dFromProductionDateAdv = $('#txtFromProductionDateAdv').datebox('getValue');
        var dToProductionDateAdv = $('#txtToProductionDateAdv').datebox('getValue');

        var nCboStartDateAdv = parseInt($("#cboStartDateAdv").val());
        var dFromStartDateAdv = $('#txtFromStartDateAdv').datebox('getValue');
        var dToStartDateAdv = $('#txtToStartDateAdv').datebox('getValue');

        var ncboEndDateAdv = parseInt($("#cboEndDateAdv").val());
        var dFromEndDateAdv = $('#txtFromEndDateAdv').datebox('getValue');
        var dToEndDateAdv = $('#txtToEndDateAdv').datebox('getValue');

        var sDispoNoAdv = $.trim($("#txtDispoNoAdv").val());
        var nCboStatusAdv = parseInt($("#cboStatusAdv").val());
        var nCboShiftAdv = parseInt($("#cboShiftAdvS").val());

        if(nCboProductionDateAdv<=0 && nCboStartDateAdv <= 0 && ncboEndDateAdv <= 0 && sDispoNoAdv == "" && nCboStatusAdv <= 0 && nCboShiftAdv<=0){
            alert("Please enter atleast one searching criteria!!");
            return;
        }

        debugger;
        var sParams =    nCboProductionDateAdv + "~" +
                        dFromProductionDateAdv + "~" +
                        dToProductionDateAdv + "~" +
                        nCboStartDateAdv + "~" +
                        dFromStartDateAdv + "~" +
                        dToStartDateAdv + "~" +
                        ncboEndDateAdv+"~" +
                        dFromEndDateAdv+"~"+
                        dToEndDateAdv+"~"+
                        sDispoNoAdv+"~"+
                        nCboStatusAdv+"~"+
                        nCboShiftAdv+"~"+
                        1;   /// Sizing ==1

        var sValue = oFabricBatchProductions;
        var nts=(new Date()).getTime()/1000;
        window.open(_sBaseAddress+"/FabricBatchProduction/FabricBatchProductionPrints?sParams="+sParams+"&nts="+nts);
    });
    $('#btnPrintXL').click(function (e){
        debugger;
        var oFabricBatchProductions = $('#tblFabricBatchProductions').datagrid('getRows');
        var FBPIDs = ICS_PropertyConcatation(oFabricBatchProductions, 'FBPID');

        var nCboProductionDateAdv = parseInt($("#cboProductionDateAdv").val());
        var dFromProductionDateAdv = $('#txtFromProductionDateAdv').datebox('getValue');
        var dToProductionDateAdv = $('#txtToProductionDateAdv').datebox('getValue');

        var nCboStartDateAdv = parseInt($("#cboStartDateAdv").val());
        var dFromStartDateAdv = $('#txtFromStartDateAdv').datebox('getValue');
        var dToStartDateAdv = $('#txtToStartDateAdv').datebox('getValue');

        var ncboEndDateAdv = parseInt($("#cboEndDateAdv").val());
        var dFromEndDateAdv = $('#txtFromEndDateAdv').datebox('getValue');
        var dToEndDateAdv = $('#txtToEndDateAdv').datebox('getValue');

        var sDispoNoAdv = $.trim($("#txtDispoNoAdv").val());
        var nCboStatusAdv = parseInt($("#cboStatusAdv").val());
        var nCboShiftAdv = parseInt($("#cboShiftAdvS").val());

        if(nCboProductionDateAdv<=0 && nCboStartDateAdv <= 0 && ncboEndDateAdv <= 0 && sDispoNoAdv == "" && nCboStatusAdv <= 0 && nCboShiftAdv<=0){
            alert("Please enter atleast one searching criteria!!");
            return;
        }

        debugger;
        var sParams =    nCboProductionDateAdv + "~" +
                        dFromProductionDateAdv + "~" +
                        dToProductionDateAdv + "~" +
                        nCboStartDateAdv + "~" +
                        dFromStartDateAdv + "~" +
                        dToStartDateAdv + "~" +
                        ncboEndDateAdv+"~" +
                        dFromEndDateAdv+"~"+
                        dToEndDateAdv+"~"+
                        sDispoNoAdv+"~"+
                        nCboStatusAdv+"~"+
                        nCboShiftAdv+"~"+
                        1;   /// Sizing ==1

        var sValue = oFabricBatchProductions;
        var nts=(new Date()).getTime()/1000;
        window.open(_sBaseAddress+"/FabricBatchProduction/FabricBatchProductionXL?sParams="+sParams+"&nts="+nts);
    });

    $('#btnPrintReadyBeam').click(function (e){
        debugger;
        var sParams =  1 // SIZING
        var nts=(new Date()).getTime()/1000;
        window.open(_sBaseAddress+"/FabricBatchProduction/ReadyBeamPrints?sParams="+sParams+"&nts="+nts);

    });

    function ReloadFreeBeams(){
        var nType = parseInt($('#cboFabricMachineTypes').val());
        if (nType > 0)
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : _sBaseAddress+  "/FabricBatchProduction/GetBeamsByType",
                data: { nType:nType},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oBeams = jQuery.parseJSON(data);
                    if(oBeams.length > 0)
                        $("#cboBeams").icsLoadCombo({List: oBeams,OptionValue: "FMID",DisplayText: "Code"});
                    else
                        alert("No Beam Found!!");
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    }

    $("#btnReloadFabricMachineTypes").click(function () {
        $("#cboFabricMachineTypes").icsLoadCombo({List: _oFabricMachineTypes,OptionValue: "FabricMachineTypeID",DisplayText: "ChildWithParent"});
    });

    function AddBatchMan()
    {
        _nSelectedRowIndex=-1;
        $('#txtFinishDate').datebox('setValue',icsdateformat(new Date()));
        $("#cboBatchMan").val(0);
        $("#cboShift").val(0);
        $('#tblFBPBeam').datagrid('loadData',[]);
        $("#winAddDetail").icsWindow("open", "Add Detail");
    }

    function EditBatchMan()
    {
        var oFBPDetail= $("#tblFBPDetails").datagrid("getSelected");
        if (oFBPDetail == null || parseInt(oFBPDetail.FBPDetailID) <= 0) {
            alert("Please select an item from list!");
            return false;
        }
        _nSelectedRowIndex = $("#tblFBPDetails").datagrid("getRowIndex", oFBPDetail);
        if (parseInt(oFBPDetail.FBPDetailID) > 0){
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/FabricBatchProduction/GetFBPDetail",
                traditional: true,
                data: JSON.stringify(oFBPDetail),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oData = jQuery.parseJSON(data);
                    if (oData.ErrorMessage=="" || oData.ErrorMessage==null) {
                        $('#txtFinishDate').datebox('setValue',oData.ProductionDateSt);
                        $("#cboBatchMan").val(oData.EmployeeID);
                        $("#cboShift").val(oData.ShiftID);
                        $('#tblFBPBeam').datagrid('loadData',oData.FabricBatchProductionBeams);
                        $("#winAddDetail").icsWindow("open", "Edit Detail");
                    }
                    else {
                        alert(oFBPBeam.ErrorMessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        }
    }

    function DeleteBatchMan()
    {
        var oFBPDetail= $("#tblFBPDetails").datagrid("getSelected");
        if (oFBPDetail == null || parseInt(oFBPDetail.FBPDetailID) <= 0) {
            alert("Please select an item from list!");
            return false;
        }
        var nBeamQty=oFBPDetail.Qty;
        //for(var i=0;i<oFBPDetail.FabricBatchProductionBeams;i++)
        //    nBeamQty += oFBPBatchMan.FabricBatchProductionBeams[i].Qty;

        if (!confirm("Confirm To Delete?")) return false;
        var nRowIndex = $("#tblFBPDetails").datagrid("getRowIndex", oFBPDetail);
        if (parseInt(oFBPDetail.FBPDetailID) > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/FabricBatchProduction/DeleteFabricBatchProductionDetail",
                data: JSON.stringify(oFBPDetail),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    oFabricBatchProductionDetail = jQuery.parseJSON(data);
                    if (oFabricBatchProductionDetail.ErrorMessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $("#tblFBPDetails").datagrid("deleteRow", nRowIndex);
                        SetYetToWarpAfterRemove([],nBeamQty)
                        $.icsMakeFooterColumn('tblFBPDetails',['ProductionDateSt','Qty','QtyM']);
                    }
                    else
                    {
                        alert(oFabricBatchProductionDetail.ErrorMessage);
                    }
                    editIndexBatchMan = undefined;
                    endEditingBatchMan();
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    }

    $("#btnSearchFreeBeams").click(function(){
        if(parseInt($('#cboFabricMachineTypes').val()) <= 0){
            alert("Select Machine Type!!");
            $('#cboFabricMachineTypes').focus();
            return;
        }
        var oFM = {
            ChildMachineTypeID: parseInt($('#cboFabricMachineTypes').val()),
            MachineStatus: 3
        };

        debugger;
        var obj = {
            BaseAddress:_sBaseAddress,
            Object: (oFM) ,
            ControllerName: "FabricBatchProduction",
            ActionName: "GetBeamsByStatusForSizing",
            IsWinClose: false
        };
        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 150, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Code", title: "Code", width: 120, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "MachineStatusInString", title: "Status", width: 120, align: "left" }; tblColums.push(oColumn);
        //oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
        DynamicPiker('Beams',obj,tblColums,true,'Code','FMID',600); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID

    });
    $("#btnSearchRunningBeams").click(function(){
        if(parseInt($('#cboFabricMachineTypes').val()) <= 0){
            alert("Select Machine Type!!");
            $('#cboFabricMachineTypes').focus();
            return;
        }
        var oFM = {
            ChildMachineTypeID: parseInt($('#cboFabricMachineTypes').val()),
            MachineStatus: 1
        };

        debugger;
        var obj = {
            BaseAddress:_sBaseAddress,
            Object: (oFM) ,
            ControllerName: "FabricBatchProduction",
            ActionName: "GetBeamsByStatusForSizing",
            IsWinClose: false
        };
        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 150, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Code", title: "Code", width: 120, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "MachineStatusInString", title: "Status", width: 120, align: "left" }; tblColums.push(oColumn);
        //oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
        //oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
        DynamicPiker('Beams',obj,tblColums,true,'Code','FMID',600); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID

    });

    function SearchBeamAdv(e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)
        {
            PickBeamAdv($.trim($("#txtBeamAdv").val()));
        }
        else if(code==08)
        {
            $('#txtBeamAdv').data("BeamIDs","");
            document.getElementById("txtBeamAdv").style.fontWeight = "normal";
        }
    };
    function PickBeamAdv(sMachineName)
    {
        var oBeam = {
            Name: $.trim(sMachineName)
        };
        var obj = {
            BaseAddress:_sBaseAddress,
            Object: oBeam,
            ControllerName: "FabricMachine", 
            ActionName: "GetBeamByNameCode",
            IsWinClose: false
        };
        var tblColums = [];
        var oColumn = { field: "Code", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Name", title: "Name", width: 100, align: "left" }; tblColums.push(oColumn);

        var oPickerParam = {
            winid: 'winBeamAdv',
            winclass: 'clsBeamAdv',
            winwidth: 400,
            winheight: 460,
            tableid: 'tblBeamAdv',
            tablecolumns: tblColums,
            multiplereturn: true,
            searchingbyfieldName: 'Name',
            windowTittle: 'Beam List',
            paramObj: obj,
            pkID: 'FMID',
            callBack: SetBeamAdv
        };
        $.icsDynamicPicker(oPickerParam);
    }
    function SetBeamAdv(result) 
    {
        if(result.length > 0){
            if(result.length == 1)
                $('#txtBeamAdv').val(result[0].Name+'['+result[0].Code+']');
            else
                $('#txtBeamAdv').val(result.length + " Beams Selected")
            var sIDs = "";
            for(var i=0;i<result.length;i++)
                sIDs += result[i].FMID + ",";
            if(sIDs.length > 0) sIDs = sIDs.substring(0,sIDs.length-1);
            $('#txtBeamAdv').data("BeamIDs",sIDs);
            document.getElementById("txtBeamAdv").style.fontWeight = "bold";
        }
        
    }

    function SetPickerValueAssign(oPickerobj)
    {
        debugger;
        var oResult;
        if (oPickerobj.multiplereturn)
        {
            oResult = $('#'+oPickerobj.tableid).datagrid('getChecked');
        }
        else
        {
            oResult = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }


        if (oPickerobj.winid == 'winBeams')
        {
            var oRows = $("#tblFBPBeam").datagrid("getRows");
            for(var i=0;i<oResult.length;i++){
                var isExist = false;
                for(var k=0;k<oRows.length;k++){
                    if(oRows[k].BeamID == oResult[i].FMID){
                        isExist=true;
                        break;
                    }
                }
                if(!isExist){
                    var oFBPBeam = {
                        FBPBeamID:0,
                        FBPID:_oFabricBatchProduction.FBPID,
                        FBPDetailID: 0,
                        BeamID:oResult[i].FMID,
                        Qty: 0,
                        BeamNo : oResult[i].Code,
                        QtyInMtr : 0,
                        ChildMachineTypeID: parseInt($('#cboFabricMachineTypes').val()),
                        ChildMachineTypeName: $("#cboFabricMachineTypes option:selected").text()
                    };
                    //$("#tblBeams").datagrid("appendRow", oFBPBeam);
                    $("#tblFBPBeam").datagrid("appendRow", oFBPBeam);
                }
            }
        }
        else if(oPickerobj.winid == 'winProduct')
        {
            if (oResult != null && oResult.ProductID> 0)
            {
                _oProduct = oResult;
                $("#txtProductName").val(oResult.ProductName);
                $("#txtProductName").addClass("fontColorOfPickItem");
                $('#txtProductName').focus();
                GetRunningLot();
            }
            else{
                alert("Please select a product.");
                return false;
            }
        }
        else if(oPickerobj.winid == 'winFabricChemicalPlan')
        {
            if (oResult != null && oResult.ProductID> 0)
            {
                _oProduct = oResult;
                _oProduct.ErrorMessage = "FabricChemicalPlan";
                $("#txtProductName").val(oResult.ProductName);
                $("#txtProductName").addClass("fontColorOfPickItem");
                $('#txtProductName').focus();
                GetRunningLot();
            }
            else{
                alert("Please select a product!");
                return false;
            }
        }

        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }
    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 90){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }
    function DynamicPiker(pickerName,obj,pTblColums,pMultiReturn,pSearchField,pID,nWidth)
    {
        debugger;
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        setInterval(updateProgress,250);

        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0][pID] > 0) {
                    debugger;
                    var tblColums = pTblColums;
                    var oPickerParam = {
                        winid: 'win'+pickerName,
                        winclass: 'cls'+pickerName,
                        winwidth: nWidth,
                        winheight: 460,
                        tableid: 'tbl'+pickerName+'s',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: pMultiReturn,
                        searchingbyfieldName: pSearchField,
                        windowTittle: pickerName+' List',
                        colsable:true
                    };
                    $.icsPicker(oPickerParam);
                    $("#progressbar").progressbar({ value: 0 });//hide
                    $("#progressbarParent").hide();
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                    $("#progressbar").progressbar({ value: 0 });//hide
                    $("#progressbarParent").hide();
                }
            }
            else{
                alert("Data Not Found.");
                $("#progressbar").progressbar({ value: 0 });//hide
                $("#progressbarParent").hide();
                return;
            }
        });
    }
    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    $("#btnPickProduct").click(function () {
        PickProduct();
    });
    $("#txtProductName").keydown(function (e){
        if (e.keyCode === 13) // Enter Press
        {
            PickProduct();
        }
        else if (e.keyCode === 8 || e.keyCode==27) // Back spce
        {
            $("#txtProductName").removeClass("fontColorOfPickItem");
            _oProduct = "";
            $('#cboLot').empty();
            _oLots=[];
            sessionStorage.setItem("Lots",[]);//reset lots session storage
        }
    });
    function PickProduct()
    {
        debugger;
        if(parseInt(_oFabricBatchProduction.FBID)<=0)
        {
            alert("Pick Batch.");
            return false;
        }
        if(parseInt($('#cboStore').val())<=0)
        {
            alert("Please select Store.");
            return false;
        }

        var sProductName = $("#txtProductName").val();
        var oLot= { ProductName:$.trim(sProductName), BUID: 0, WorkingUnitID : parseInt($('#cboStore').val())  };

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLot,
            ControllerName: "FabricBatch",
            ActionName: "GetProducts",
            IsWinClose: false
        };
        var tblColums = []; var oColumn = { field: "ProductCode", title: "Product Code", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ProductName", title: "Product Name", width: 200, align: "left" }; tblColums.push(oColumn);
        DynamicPiker('Product',obj,tblColums,false,'ProductName','ProductID',400); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
    }

    $("#btnPickChemicalPlannedProduct").click(function () {
        debugger;
        if(parseInt(_oFabricBatchProduction.FBID)<=0)
        {
            alert("Pick Batch.");
            return false;
        }
        if(parseInt($('#cboStore').val())<=0)
        {
            alert("Please select Store.");
            return false;
        }

        var oObj = {FBID :_oFabricBatchProduction.FBID}

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oObj,
            ControllerName: "FabricBatchProduction",
            ActionName: "GetFabricChemicalPlans",
            IsWinClose: false
        };
        var tblColums = []; var oColumn = { field: "SizingPlanNo", title: "Plan No", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ProductCode", title: "Product Code", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ProductName", title: "Product Name", width: 200, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "BatchNo", title: "Batch No", width: 90, align: "left" }; tblColums.push(oColumn);
        DynamicPiker('FabricChemicalPlan',obj,tblColums,false,'ProductName','ProductID',500); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
    });

    function GetRunningLot(){
        var oLot = {
            ProductID:_oProduct.ProductID,
            WorkingUnitID:parseInt($("#cboStore").val())
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Lot/GetsLot",
            traditional: true,
            data: JSON.stringify(oLot),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oLots =  jQuery.parseJSON(data);
                _oLots=oLots;
                if (oLots != null) {
                    if (oLots.length > 0) {
                        sessionStorage.setItem("Lots",oLots);
                        $("#cboLot").icsLoadCombo({
                            List: oLots,
                            OptionValue: "LotID",
                            DisplayText: "LotWithBalance"
                        });
                        $("#cboLot").val(oLots[0].LotID);
                    }

                }
                else {
                    alert("No Lot Found");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function RefreshLot()
    {
        if (parseInt($("#cboStore").val()) == 0) {
            alert("Please select a store");
            $("#cboStore").focus();
            $("#cboStore").addClass("errorFieldBorder");
            return false;
        } else {
            $("#cboStore").removeClass("errorFieldBorder");
        }

        if ( _oProduct ==null || _oProduct.ProductID <= 0) {
            alert("Please select a product.");
            $("#txtProductName").focus();
            $("#txtProductName").addClass("errorFieldBorder");
            return false;
        } else {
            $("#txtProductName").removeClass("errorFieldBorder");
        }

        var oLot = {
            ProductID: _oProduct.ProductID,
            WorkingUnitID: parseInt($("#cboStore").val())
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Lot/GetsLot",
            traditional: true,
            data: JSON.stringify(oLot),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oLots =  jQuery.parseJSON(data);
                if (oLots != null) {
                    if (oLots.length > 0) {
                        _oLots=oLots;
                        sessionStorage.setItem("Lots",oLots);
                        $("#cboLot").icsLoadCombo({
                            List: oLots,
                            OptionValue: "LotID",
                            DisplayText: "LotWithBalance"
                        });
                    }
                    else {
                        alert("No Lot Found.");
                    }
                }
                else {
                    alert("No Lot Found");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    }

    var editIndexDetail = undefined;
    function endEditingDetail(){
        if (editIndexDetail == undefined){return true}
        if ($('#tblFBPBeam').datagrid('validateRow', editIndexDetail)){
            $('#tblFBPBeam').datagrid('endEdit', editIndexDetail);
            $('#tblFBPBeam').datagrid('selectRow',editIndexDetail);
            var oDetail=$('#tblFBPBeam').datagrid('getSelected');
            var nSelectedRowIndex=$('#tblFBPBeam').datagrid('getRowIndex',oDetail);
            oDetail.Qty=parseFloat(GetYard(parseFloat(oDetail.QtyM),2));

            $('#tblFBPBeam').datagrid('updateRow', { index: nSelectedRowIndex, row: oDetail });

            editIndexDetail = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRowDetail(index){

        if (editIndexDetail != index){
            if (endEditingDetail())
            {
                $('#tblFBPBeam').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndexDetail = index;
            }
            else
            {
                $('#tblFBPBeam').datagrid('selectRow', editIndexDetail);
            }
        }
    }

    $("#btnRefreshDetail").click(function(){
        endEditingDetail();
    });

    $("#btnCloseDetail").click(function () {
        $("#winAddDetail").icsWindow("close");
    });

    $("#btnSaveDetail").click(function(){
        endEditingDetail();
        if(parseInt(_oFabricBatchProduction.FBPID)<=0)
        {
            alert("Please Run the Batch first then you can entry Beam info!");
            return false;
        }
        if(parseInt($('#cboBatchMan').val())<=0)
        {
            alert("Select BatchMan !");
            $('#cboBatchMan').focus();
            return false;
        }
        if(parseInt($('#cboShift').val())<=0)
        {
            alert("Select Shift !");
            $('#cboShift').focus();
            return false;
        }

        var nFBPDetailID=0;
        if(_nSelectedRowIndex >-1)
        {
            nFBPDetailID=$("#tblFBPDetails").datagrid("getSelected").FBPDetailID ;
        }

        var oRows = $("#tblFBPBeam").datagrid("getRows");
        if(oRows.length <= 0){
            alert("Atleast one Detail Required!");
            return false;
        }
        debugger;
        var oWarpBeams = $("#tblBeams").datagrid("getRows");
        var nWarpBeamQty = 0;
        for(var i=0;i<oWarpBeams.length;i++)
        {
            nWarpBeamQty += parseFloat(oWarpBeams[i].Qty);
            if(oWarpBeams[i].IsDirect)
            {
                nWarpBeamQty=_oFabricBatchProduction.QtyPrev;
                break;
            }
        }
        var nWarpBeamQtyInPercent = nWarpBeamQty *_nGainLossPer;
        //nWarpBeamQtyInPercent=nWarpBeamQtyInPercent+nWarpBeamQty;



        var oFBPDetails = $("#tblFBPDetails").datagrid("getRows");
        var nFBPDetailQty = 0;
        for(var i=0;i<oFBPDetails.length;i++)
        {
            if(oFBPDetails[i].FBPDetailID!=nFBPDetailID)
            {
                nFBPDetailQty += parseFloat(oFBPDetails[i].Qty);
            }
        }

        var nBeamQty = 0;
        for(var i=0;i<oRows.length;i++)
            nBeamQty += parseFloat(oRows[i].Qty);

        var nDiff =parseFloat(nWarpBeamQtyInPercent)+parseFloat(nWarpBeamQty)-parseFloat(_oFB.QtyPro)-parseFloat(nFBPDetailQty)-parseFloat(nBeamQty);

        if((parseFloat(nDiff)< -0.5)){
            alert(" your can't exced your warping Length:"+(nWarpBeamQty).toFixed(2)+'Y'+' '+parseFloat(GetMeter(nWarpBeamQty,2))+'M with '+_nGainLossPer*100+' % Gain');
            return false;
        }

        var nDiff =parseFloat(nWarpBeamQty)-parseFloat(_oFB.QtyPro)-parseFloat(nFBPDetailQty)-parseFloat(nBeamQty);

        if(nDiff <-0.4){

            if (!confirm("After Run out your Gain Qty is:"+parseFloat(GetMeter(nDiff),2)+" as per Batch Qty "+parseFloat(GetMeter(_oFB.Qty,2))+", Cofirm to Run out")) return false;
        }
        //else{
        //    if (!confirm("After Run out your Production  Length is:"+parseFloat(GetMeter(nDiff),2)+" as per Batch Qty "+parseFloat(GetMeter(_oFB.Qty,2))+", Cofirm to Run out")) return false;
        //}

        //var nDiff =parseFloat(nWarpBeamQty)-parseFloat(_oFB.QtyPro)-parseFloat(nFBPDetailQty)-parseFloat(nBeamQty);
        //if(nDiff <-0.4){
        //    alert(" your can't exced your warping Length:"+(_oFB.Qty).toFixed(2)+'Y'+' '+parseFloat(GetMeter(_oFB.Qty,2))+'M with 10% Gain');
        //    return false;
        //}

        var oFBPBatchMan = {
            FBPDetailID: (_nSelectedRowIndex > -1) ? nFBPDetailID: 0,
            FBPID:_oFabricBatchProduction.FBPID,
            EmployeeID:$('#cboBatchMan').val(),
            //NoOfBreakage:$('#txtNoOfBreakage').val(),
            ShiftID:$('#cboShift').val(),
            Qty:$('#txtQtyYard').val(),
            ProductionDate:$('#txtFinishDate').datebox('getValue'),
            Note:'',
            FabricBatchProductionBeams: oRows
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/FabricBatchProduction/SaveDetailWithBeam",
            traditional: true,
            data: JSON.stringify(oFBPBatchMan),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oData = jQuery.parseJSON(data);
                if (oData.ErrorMessage=="" || oData.ErrorMessage==null) {
                    if(_nSelectedRowIndex > -1)
                        $('#tblFBPDetails').datagrid('updateRow', { index: _nSelectedRowIndex, row: oData });
                    else
                        $("#tblFBPDetails").datagrid("appendRow", oData);
                    var oRows = $("#tblFBPDetails").datagrid("getRows");
                    SetYetToWarp(oRows);
                    $("#winAddDetail").icsWindow("close");
                    $.icsMakeFooterColumn('tblFBPDetails',['ProductionDateSt','Qty','QtyM']);
                }
                else {
                    alert(oFBPBeam.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });

    $("#btnDeleteDetail").click(function(){
        endEditingDetail();
        var oDetail= $("#tblFBPBeam").datagrid("getSelected");
        if (oDetail == null || parseInt(oDetail.FBPBeamID) <= 0) {
            alert("Please select an item from list!");
            return false;
        }

        if (!confirm("Confirm to Delete?")) return false;
        var nRowIndex = $("#tblFBPBeam").datagrid("getRowIndex", oDetail);
        if (parseInt(oDetail.FBPBeamID) > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/FabricBatchProduction/DeleteFBPBeam",
                data: JSON.stringify(oDetail),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    oFBPBeam = jQuery.parseJSON(data);
                    if (oFBPBeam.ErrorMessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $("#tblFBPBeam").datagrid("deleteRow", nRowIndex);
                    }
                    else
                    {
                        alert(oFBPBeam.ErrorMessage);
                    }

                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    });

    $("#btnFinishBeam").click(function(){


        var oFBPB = $("#tblFBPBeam").datagrid("getSelected");
        if($("#btnRun").is(':visible'))
        {
            alert("First run the batch.");
            return false;
        }
        if(oFBPB == null || oFBPB.FBPBeamID <= 0)
        {
            alert("Select an item from list.");
            return false;
        }
        if(oFBPB.IsFinish)
        {
            alert("Already finished.");
            return false;
        }
        if (!confirm("Confirm finish?")) return false;
        oFBPB.IsFinish = true;
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFBPB,
            ObjectId: oFBPB.FBPBeamID,
            ControllerName: "FabricBatchProductionBeam",
            ActionName: "Finish",
            TableId: "tblFBPBeam",
            IsWinClose: false,
            Message: ""
        };
        $.icsSave(obj);
    });

    var editIndex = undefined;
    function endEditing(){
        if (editIndex == undefined){
            return true;
        }
        if ($('#tblFabricBatchRawMaterial').datagrid('validateRow', editIndex)){
            $('#tblFabricBatchRawMaterial').datagrid('endEdit', editIndex);
            $('#tblFabricBatchRawMaterial').datagrid('selectRow',editIndex);
            var oFabricBatchRawMaterial=$('#tblFabricBatchRawMaterial').datagrid('getSelected');
            if(parseInt(oFabricBatchRawMaterial.ReceiveBy)<=0)
            {
                var oFBRMS =[];
                oFBRMS.push(oFabricBatchRawMaterial);
                Out(oFBRMS, true,editIndex,true);
            }else{
                //alert("Already Received.");
                $('#tblFabricBatchRawMaterial').datagrid('updateRow',{index: editIndex,	row: oFabricBatchRawMaterial});
            }
            editIndex = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }

    function onClickRow(index){
        if (editIndex != index){

            var oRow = $("#tblFabricBatchRawMaterial").datagrid("getSelected");
            if(oRow.ReceiveBy > 0)
            {
                $('#tblFabricBatchRawMaterial').datagrid('endEdit', editIndex);
                editIndex = undefined;
                endEditing();
                return true;
            }

            if (endEditing())
            {
                $('#tblFabricBatchRawMaterial').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else
            {
                $('#tblFabricBatchRawMaterial').datagrid('selectRow', editIndex);
            }
        }
    }

    function GetLotQty(nLotID)
    {
        for(var i=0;i<_oLots.length;i++)
        {
            if(parseInt(_oLots[i].LotID)== parseInt(nLotID))
            {
                return _oLots[i].Balance;
            }
        }
        return 0;
    }

    function AddChemicalDetail()
    {
        debugger;
        if (parseInt($("#cboStore").val()) == 0) {
            alert("Please select a store");
            $("#cboStore").focus();
            $("#cboStore").addClass("errorFieldBorder");
            return false;
        } else {
            $("#cboStore").removeClass("errorFieldBorder");
        }
        if ( _oProduct ==null || _oProduct.ProductID <= 0) {
            alert("Please select a product.");
            $("#txtProductName").focus();
            $("#txtProductName").addClass("errorFieldBorder");
            return false;
        } else {
            $("#txtProductName").removeClass("errorFieldBorder");
        }
        if (parseInt($("#cboLot").val()) == 0) {
            alert("Please select a Lot");
            $("#cboLot").focus();
            $("#cboLot").addClass("errorFieldBorder");
            return false;
        } else {
            $("#cboLot").removeClass("errorFieldBorder");
        }
        if($('#txtQty').val()<=0)
        {
            alert("Qty Should be Greater than 0");
            $("#txtQty").focus();
            $("#txtQty").addClass("errorFieldBorder");
            return false;
        }else{
            $("#txtQty").removeClass("errorFieldBorder");
        }
        var nLotQty = GetLotQty($("#cboLot").val());
        if($('#txtQty').val()>nLotQty)
        {
            alert("Qty Should Less than or Equal to Lot Qty: "+nLotQty);
            $("#txtQty").focus();
            $("#txtQty").addClass("errorFieldBorder");
            return false;
        }else{
            $("#txtQty").removeClass("errorFieldBorder");
        }

        var oNewFBRMaterials = [];
        var oFBRMaterial = {
            FBID :_oFabricBatchProduction.FBID,
            FBRMID :0,
            ProductID :_oProduct.ProductID,
            LotID:$("#cboLot").val(),
            Qty:$('#txtQty').val(),
            WeavingProcess :1,
            FabricChemicalPlanID: (_oProduct.ErrorMessage == '') ? 0 : _oProduct.FabricChemicalPlanID,
            //WaterQty:parseFloat($("#txtWaterQty").val()),
            //Dry:parseFloat($("#txtDry").val()),
            //Wet:parseFloat($("#txtWet").val()),
            //RF:parseFloat($("#txtRF").val()),
            //Viscosity:parseFloat($("#txtViscosity").val()),
            //FinalVolume:parseFloat($("#txtFinalVolume").val()),
            //RestQty:parseFloat($("#txtRestQty").val()),
            IsChemicalOut:true
        };

        oNewFBRMaterials.push(oFBRMaterial);
        $("#txtProductName").removeClass("fontColorOfPickItem");
        $("#txtProductName").val("");
        _oProduct = "";
        $('#cboLot').empty();
        $('#cboStore').val(0);
        $("#txtQty").val(0);
        _oLots=[];
        sessionStorage.setItem("Lots",[])//reset lots session storage
        $('#cboStore').focus();
        $("#txtWaterQty,#txtDry,#txtWet,#txtRF,#txtViscosity,#txtFinalVolume,#txtRestQty").val("");

        Out(oNewFBRMaterials, false,-1, false);
    }

    function ValidateInputRM(bIsCheckList)
    {
        if(parseInt(_oFabricBatchProduction.FBID)<=0)
        {
            alert("Sorry, there is no Fabric Batch!");
            return false;
        }
        if(parseInt(_oFabricBatchProduction.FEOID)<=0)
        {
            alert("Sorry, there is no Fabric Execution Order!");
            return false;
        }

        if(bIsCheckList)
        {
            var oRows = $("#tblFabricBatchRawMaterial").datagrid("getRows");
            var nLength = oRows.length;
            var bIsNotReceivedItemFound = false;
            if(nLength>0)
            {
                for(var i=0;i<nLength;i++)
                {
                    if(oRows[i].ReceiveBy == 0)
                    {
                        bIsNotReceivedItemFound = true;
                        break;
                    }
                }
            }
            else
            {
                alert("No item list.");
                return false;
            }

            if(!bIsNotReceivedItemFound)
            {
                alert("All items in the list already received.");
                return false;
            }
        }

        return true;
    }

    function RefreshObjectRawMaterial()
    {
        var oFabricBatch= {
            FBID:_oFabricBatchProduction.FBID,
            IsRawMaterialOut:true,
            IsYarn:false,
            FabricBatchRawMaterials:$('#tblFabricBatchRawMaterial').datagrid('getRows')
        };
        return oFabricBatch;
    }

    function Out(oFabricBatchRawMaterials, bIsEdit,nSelectedIndex,bIsCheckList)
    {

        debugger;
        if(!ValidateInputRM(bIsCheckList)) return false;

        var oFabricBatch = {
            FabricBatchRawMaterials:[],
            FBID:0,
            IsYarn:false
        };//IsYarn:false; chemical Out
        if(oFabricBatchRawMaterials!=undefined && oFabricBatchRawMaterials!=null && oFabricBatchRawMaterials.length>0)
        {
            for(var i=0;i<oFabricBatchRawMaterials.length;i++){
                oFabricBatchRawMaterials[i].IsChemicalOut=true;
            }

            oFabricBatch.FabricBatchRawMaterials = oFabricBatchRawMaterials;
        }
        else
        {
            endEditing();
            debugger;
            oFabricBatch = RefreshObjectRawMaterial();
            if(oFabricBatch.FabricBatchRawMaterials==null|| oFabricBatch.FabricBatchRawMaterials.length<=0)
            {
                alert("Sorry, there is no Chemicals");
                return false;
            }
            else
            {
                debugger;
                var oChemicalOuts=oFabricBatch.FabricBatchRawMaterials;
                var nChemicalOutItem=0;
                for(var i=0;i<oChemicalOuts.length;i++){
                    if(oChemicalOuts[i].ReceiveBy!=0)
                        nChemicalOutItem++;
                }

                if(nChemicalOutItem==oChemicalOuts.length){
                    alert("Sorry, No remaining item found to out.");
                    return false;
                }
            }
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/FabricBatch/OutRowMaterials",
            traditional: true,
            data:  JSON.stringify(oFabricBatch),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                oFabricBatch = jQuery.parseJSON(data);
                if (oFabricBatch.IsRawMaterialOut==false && (oFabricBatch.ErrorMessage==null || oFabricBatch.ErrorMessage==""))
                {
                    if(bIsEdit)
                    {
                        $('#tblFabricBatchRawMaterial').datagrid('updateRow', { index: nSelectedIndex, row: oFabricBatch.FabricBatchRawMaterials[0] });
                    }else{
                        for(var i=0;i<oFabricBatch.FabricBatchRawMaterials.length;i++)
                        {
                            $("#tblFabricBatchRawMaterial").datagrid("appendRow", oFabricBatch.FabricBatchRawMaterials[i]);
                        }
                    }

                }else if(oFabricBatch.IsRawMaterialOut && (oFabricBatch.ErrorMessage==null || oFabricBatch.ErrorMessage==""))
                {
                    alert("Chemical Out Successfully.");
                    if(oFabricBatch.StatusInInt==3)
                    {
                        $('#btnRun').show();
                    }
                    $('#tblFabricBatchRawMaterial').datagrid('loadData',oFabricBatch.FabricBatchRawMaterials);//refresh Chemicals
                }
                else {
                    alert(oFabricBatch.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function DeleteChemicalDetail()
    {
        var oFBRM= $("#tblFabricBatchRawMaterial").datagrid("getSelected");
        if (oFBRM == null || parseInt(oFBRM.FBRMID) <= 0) {
            alert("Please select an item from list!");
            return false;
        }
        if (parseInt(oFBRM.ReceiveBy)!=0) {
            alert("Sorry, This item already Received!");
            return false;
        }

        if (!confirm("Confirm to Delete?")) return false;
        var nRowIndex = $("#tblFabricBatchRawMaterial").datagrid("getRowIndex", oFBRM);
        if (parseInt(oFBRM.FBRMID) > 0)
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : _sBaseAddress+  "/FabricBatch/DeleteRowMaterial",
                data: { id: oFBRM.FBRMID},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $("#tblFabricBatchRawMaterial").datagrid("deleteRow", nRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    }

    function AddFBSSol()
    {
        if(_oFabricBatchProduction.FBID<=0){
            alert("No Fabric Batch found!");
            return false;
        }
        var oFBSS = {
            FBID :_oFabricBatchProduction.FBID,
            WaterQty:parseFloat($("#txtWaterQty").val()),
            Dry:parseFloat($("#txtDry").val()),
            Wet:parseFloat($("#txtWet").val()),
            RF:parseFloat($("#txtRF").val()),
            Viscosity:parseFloat($("#txtViscosity").val()),
            FinalVolume:parseFloat($("#txtFinalVolume").val()),
            RestQty:parseFloat($("#txtRestQty").val()),
            PreviousRestQty:parseFloat($("#txtPreviousRestQty").val())
        }

        $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/FabricBatchProduction/SaveFBSS",
                data: JSON.stringify(oFBSS),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var result = jQuery.parseJSON(data);
                    if(result !=null){
                        alert("Save Successfully !");
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
    }

    ////-----------------------Drawing/Leasing--------------------------------------
    $("#btnCloseBeamsDetail").click(function () {
        $("#winDrawingSizingStatus").icsWindow("close");
    });
    
    $("#btnDrawingLeasingStatus").click(function () {
        var oFBP = $('#tblFabricBatchProductions').datagrid('getSelected');
        if(oFBP == null){
            alert("Please select an Item!!");
            return;
        }
        if(oFBP.ProductionStatus == 0){
            alert("Operation is not possible for initialize item!!");
            return;
        }
        GetAllBeams(oFBP);
        
    });

    function GetAllBeams(oFBP){

        $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/FabricBatchProduction/GetBeamsForSizing",
                traditional: true,
                data:  JSON.stringify(oFBP),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    oFBP = jQuery.parseJSON(data);
                    ResetAllTables("tblAllBeams");
                    DynamicRefreshList(oFBP.FBPBs,"tblAllBeams");
                    $("#winDrawingSizingStatus").icsWindow("open", "Drawing/Leasing Operation");
                },
                error: function (xhr, status, error){
                    alert(error);
                }
            });
    }

    $("#btnForwardDrawing").click(function () {
        var oRows = $("#tblAllBeams").datagrid("getChecked");
        if(oRows.length <= 0){
            alert("No Checked Item Found! Please Check Item(s)!!");
            return false;
        }
        for(var i=0;i<oRows.length;i++)
            oRows[i].IsDrawing = 6; //Drawing
        DrawingLeasingOperation(oRows);
    });

    $("#btnForwardLeasing").click(function () {
        var oRows = $("#tblAllBeams").datagrid("getChecked");
        if(oRows.length <= 0){
            alert("No Checked Item Found! Please Check Item(s)!!");
            return false;
        }
        for(var i=0;i<oRows.length;i++)
            oRows[i].IsDrawing = 16; //Leasing
        DrawingLeasingOperation(oRows);
    });

    $("#btnUndoDrawingLeasing").click(function () { //btnUndoDrawing,#btnUndoLeasing
        var oRows = $("#tblAllBeams").datagrid("getChecked");
        if(oRows.length <= 0){
            alert("No Checked Item Found! Please Check Item(s)!!");
            return false;
        }
        for(var i=0;i<oRows.length;i++)
            oRows[i].IsDrawing = 0;
        DrawingLeasingOperation(oRows);
    });

    function DrawingLeasingOperation(oRows){
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/FabricBatchProduction/DrawingLeasingOperation",
            traditional: true,
            data: JSON.stringify(oRows),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oDatas = jQuery.parseJSON(data);
                if(oDatas.length > 0){
                    if(oDatas[0].ErrorMessage == "" || oDatas[0].ErrorMessage == null){
                        DynamicRefreshList(oDatas,"tblAllBeams");
                    }else{
                        alert(oDatas[0].ErrorMessage);
                    }
                }else{
                    alert("No Data Found!!");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }
    

    ////-----------------------Drawing/Leasing--------------------------------------

</script>
