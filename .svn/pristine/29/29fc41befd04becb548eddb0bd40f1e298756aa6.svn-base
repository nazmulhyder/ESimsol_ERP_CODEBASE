@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Confirm PTU Distrubition";
}
@model ESimSol.BusinessObjects.Lot
    <div ng-app="LotAPP" class="form-horizontal regionLot menuMainCollectionTable">
        <div ng-controller="LotCtrl" style="width:100%">
            <div class=" ui-grid-top-panel" style="margin:5px;">
                <div class="form-inline">
                    Lot No : <input type="text" ng-model="Lot.LotNo" class="form-control" ng-keydown="PickLot($event)" placeholder="Search By Lot No" />
                    Current Balance : <input type="text" style="width:100px; text-align:right" ng-model="Lot.Balance" class="form-control" disabled="disabled" />
                    <input type="text" ng-model="Lot.MUName" style="width:40px" class="form-control" disabled="disabled" />
                </div>
            </div>
            <div ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid-angular ui-grid-selectable" style="width:99%; height:475px"></div>
            <fieldset>
                <label ng-bind="LodingText" style="color:green; font-size:19px; font-weight:bold; margin-left:20px; float:left"></label>
                <button type="button" style="float:right; margin-right:50px" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="SaveList()"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Confirm</button>
            </fieldset>
        </div>
        
    </div>

    <style type="text/css">
        .regionLot .form-horizontal .control-label {
            padding-top: 3px;
        }

        .regionLot .form-control {
            height: 26px;
            padding: 0px 6px;
            font-size: 12px;
        }

        .regionLot .col-md-12 {
            width: 70%;
            padding-right: 5px;
            padding-left: 5px;
            margin-bottom: 5px;
            margin-left: 90px;
        }

        .regionLot .col-md-1 {
            width: 4%;
            padding-right: 2px;
            padding-left: 2px;
            padding-top: 3px;
        }

        .regionLot .col-md-2 {
            width: 22%;
            padding-right: 5px;
            padding-left: 5px;
        }

        .regionLot .col-md-3 {
            width: 24%;
            padding-right: 5px;
            padding-left: 5px;
        }

        .regionLot .col-md-4 {
            width: 28%;
            padding-right: 5px;
            padding-left: 5px;
        }

        .regionLot .col-md-5 {
            width: 40%;
            padding-right: 5px;
            padding-left: 0px;
        }

        .regionLot .col-md-6 {
            width: 54.5%;
            padding-right: 5px;
            padding-left: 5px;
        }

        .regionLot .col-md-10 {
            width: 88%;
            padding-right: 5px;
            padding-left: 5px;
        }

        .regionLot .col-md-7 {
            width: 54.6%;
            padding-right: 5px;
            padding-left: 5px;
        }

        .regionLot .col-md-8 {
            width: 69%;
            padding-right: 0px;
            padding-left: 0px;
        }

        .regionLot .col-md-9 {
            width: 69%;
            padding-right: 0px;
            padding-left: 0px;
        }

        .regionLot .btn-sm {
            padding: 3px 10px;
        }

        .regionLot .input-group-addon {
            padding: 4px 8px;
        }
    </style>

    <script type="text/javascript">
    var oLot =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var nBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oPTUUnit2Distributions =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PTUUnit2Distributions));

    var LotModule = angular.module('LotAPP', ['ngAnimate', 'ui.bootstrap', 'ui.grid', 'ui.grid.selection', 'ui.grid.edit','ui.grid.resizeColumns','ui.grid.cellNav','ms.service']);
    LotModule.controller('LotCtrl', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal,icsMethod, userSession,msGridControl,userSession,advanceSearch,uiGridConstants) {
        debugger;
        var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        sessionStorage.setItem('BaseAddress',_sBaseAddress)

        $scope.gridOptions= {
            enableRowSelection: true,
            enableRowHeaderSelection: false,
            showColumnFooter: true,
            enableColumnResizing: true,
            enableCellEdit:false,
            multiSelect: false,
            enableFullRowSelection: true,

            columnDefs: [
                    {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                    { field: 'BuyerName',       name:'Buyer Name',        width:'20%' },
                    { field: 'PINo',            name:'PINo',              width:'15%' },
                    { field: 'ProductName',     name:'ProductName',       width:'20%' },
                    { field: 'MUName',          name:'Unit Name',         width:'10%' },
                    { field: 'Qty',             name:'Qty',               width:'10%',     cellClass: 'text-right',  cellFilter: 'number:2'    ,  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:0'},
            ],
            data: oPTUUnit2Distributions,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                if(oPTUUnit2Distributions.length>0 && userSession.getRowIndex()>=0)
                {
                    $scope.gridApi.grid.modifyRows(oPTUUnit2Distributions);
                    $scope.gridApi.selection.selectRow(oPTUUnit2Distributions[userSession.getRowIndex()]);
                }
            }
        };
        
        $scope.SaveList = function (e){
            debugger;
            var oLists = $scope.gridOptions.data;
            var dTotal = oLists.select("Qty").sum();
            if(oLists.length==0)
            {
                alert("There Is No Data In Grid");
                return;
            }
            if(dTotal!=$scope.Lot.Balance)
            {
                alert("Balance Not Same");
                return;
            }

            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/PTUUnit2/SavePTUUnit2List',oLists).then(
                                function (response)
                                {
                                    var results=jQuery.parseJSON(response.data);
                                    if(results.length>0)
                                    {
                                        if(results[0].ErrorMessage === "")
                                        {
                                            alert("Saved Successful");
                                        }
                                        else
                                        {
                                            alert(results[0].ErrorMessage);
                                        }
                                    }
                                },
                                  function (response) { alert((response.data).Message);}
                            );
        };
        $scope.GetsLot= function ()
        {
            if($scope.Lot.LotNo=="" || $scope.Lot.LotNo == null)
            {
                alert("Please Enter Lot No ANd Search");
                return;
            }
            var oLot = {
                LotNo: $scope.Lot.LotNo,
                BUID : nBUID
            };
            $scope.LodingText = "Please Wait....................";
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/PTUUnit2/GetsLot',$.param(oLot), config).then(
                                function (response)
                                {
                                    $scope.LodingText = "";
                                    debugger;
                                    var results=jQuery.parseJSON(response.data);
                                    if(results.length<=0 || (results[0].ErrorMessage!=null && results[0].ErrorMessage!=""))
                                    {
                                        //alert(results[0].ErrorMessage); 
                                        alert("No Data Found"); 
                                        return;
                                    }
                                    var oColumns = [];
                                    oColumn = { field: 'LotNo', name: 'Lot No',width: '60%', enableSorting: false  };oColumns.push(oColumn);
                                    oColumn = { field: 'BalanceSt', name: 'Balance',width: '30%', enableSorting: false  };oColumns.push(oColumn);

                                    var modalObj={
                                        size:'md',
                                        modalcontroller:'ModalCommonListCtrl',
                                        appcontroller:'SaleInvoiceController',
                                        objs:results,
                                        multiSelect:false,
                                        pickertitle:'Lot List',
                                        searchingbyfieldName:'LotNo',
                                        columns:oColumns
                                    }
                                    var modalInstance=msModal.Instance(modalObj);
                                    modalInstance.result.then(function (result)
                                    {
                                        debugger;
                                        if(result.LotID>0)
                                        {
                                            $scope.Lot=result;
                                            $scope.GetDetailList();
                                            $scope.Lot.Balance = Math.round(result.Balance);
                                        }
                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert((response.data).Message);}
                            );

        };
        $scope.PickLot = function (e){
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var sLotNo = $.trim($scope.Lot.LotNo);
                if(sLotNo=="" || sLotNo==null)
                {
                    alert("Type Lot No and Press Enter");
                    return;
                }
                $scope.GetsLot();
            }else if (code == 8) //backspace=8
            {
                $scope.Lot.LotNo="";
                $scope.Lot.LotID="";
            }
        };
        $scope.GetDetailList = function (e){
            debugger;
            if($scope.Lot.LotID<0)
            {
                alert("There Is No Lot");
                return;
            }
            var oPTUUnit2Distribution = {
                LotID: $scope.Lot.LotID
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/PTUUnit2/GetsPTUUnit2DistributionByLotID',$.param(oPTUUnit2Distribution), config).then(
                                function (response)
                                {
                                    var results=jQuery.parseJSON(response.data);
                                    if(results.length<=0 || (results[0].ErrorMessage!=null && results[0].ErrorMessage!=""))
                                    {
                                        alert(results[0].ErrorMessage); return;
                                    }
                                    else
                                    {
                                        $scope.gridOptions.data = results;
                                    }
                                },
                                  function (response) { alert((response.data).Message);}
                            );
        };
        
    });
    </script>








