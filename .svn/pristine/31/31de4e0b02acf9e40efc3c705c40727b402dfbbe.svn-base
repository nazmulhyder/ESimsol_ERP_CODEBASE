<html>
<head>
    @{ViewBag.Title = "Sub Contract";}
</head>
<body>
    @model ESimSol.BusinessObjects.Subcontract
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>

    <div class="menuMainCollectionTable">
        <div id="divSubcontract" class="easyui-panel" title="Sub Contract" style="font-family:Tahoma; text-align:center; height:89%;">
            <div style="width:100%; height:95%">
                <fieldset style="height:100%">
                    <legend style=" font-weight:bold">
                    Sub Contract info: </legend>
                    <table style="width:100%" cellpadding="1" cellspacing="1">
                        <tr>
                            <td style="width: 10%; text-align: right">
                                Contract No:
                            </td>
                            <td style="width: 25%; text-align: left">
                                @Html.TextBoxFor(model => model.SubcontractNo, new { style = "width: 98%;", id = "txtSubcontractNo", disabled = "disabled" })
                            </td>
                            <td style="width: 10%; text-align:right;">
                                Issue BU:
                            </td>
                            <td style="width:20%; text-align:left;">
                                @Html.TextBoxFor(model => model.IssueBUName, new { style = "width: 97%;", id = "txtIssueBUName", disabled = "disabled" })
                            </td>
                            <td style="width:10%; text-align: right">
                                Issue Date :
                            </td>
                            <td style="width: 25%; text-align: right">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:40%"><input id="txtIssueDate" type="text" class="easyui-datebox" style="width: 100%;" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                        <td style="width:60%; text-align:right;">Currency:<select id="cboCurrency" style="width:55%"></select></td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 10%; text-align: right">
                                Customer :
                            </td>
                            <td style="width: 25%; text-align: left">
                                @Html.TextBoxFor(model => model.ContractorName, new { style = "width: 98%;", id = "txtContractorName", disabled = "disabled" })
                            </td>
                            <td style="width: 10%; text-align: right">
                                Contract BU:
                            </td>
                            <td style="width: 20%; text-align: left">
                                <select id="cboContractBU" style="width:100%"></select>
                            </td>
                            <td style="width:10%; text-align: right">
                                C. Rate :
                            </td>
                            <td style="width: 25%; text-align: right">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:40%"><input type="text" style="width:95%; text-align:left" id="txtCRate" /></td>
                                        <td style="width:60%; text-align:right;">Rate On: <input type="number" style="width:50%;text-align:right;" id="txtRateUnit" /></td>
                                    </tr>
                                </table>
                            </td>
                        </tr>     
                        <tr>
                            <td style="width: 10%; text-align: right">
                               Mother Buyer :
                            </td>
                            <td style="width: 25%; text-align: left">
                                @Html.TextBoxFor(model => model.BuyerName, new { style = "width: 98%;", id = "txtBuyerName", disabled = "disabled" })
                            </td>
                            <td style="width: 10%; text-align: right">
                                PI No:
                            </td>
                            <td style="width: 20%; text-align: left">
                                @Html.TextBoxFor(model => model.PINo, new { style = "width: 98%;", id = "txtPINo", disabled = "disabled" })
                            </td>
                            <td style="width:10%; text-align: right">
                                Sales Contract Date :
                            </td>
                            <td style="width: 25%; text-align: right">
                                @Html.TextBoxFor(model => model.ExportSCDateSt, new { style = "width: 98%;", id = "txtPIDate", disabled = "disabled" })
                            </td>
                        </tr>                            
                        <tr>
                            <td style="width: 10%; text-align: right">
                                Product Code :
                            </td>
                            <td style="width: 25%; text-align: left">
                                @Html.TextBoxFor(model => model.ProductCode, new { style = "width: 98%;", id = "txtProductCode", disabled = "disabled" })
                            </td>
                            <td style="width: 10%; text-align: right">
                                Product Name:
                            </td>
                            <td style="width: 20%; text-align: left">
                                @Html.TextBoxFor(model => model.ProductName, new { style = "width: 98%;", id = "txtProductName", disabled = "disabled" })
                            </td>
                            <td style="width:10%; text-align: right">
                                Mold Ref :
                            </td>
                            <td style="width: 25%; text-align: right">
                                @Html.TextBoxFor(model => model.MoldName, new { style = "width: 98%;", id = "txtMoldName", disabled = "disabled" })
                            </td>
                        </tr>   
                        <tr>
                            <td style="width: 10%; text-align: right">
                                Color :
                            </td>
                            <td style="width: 25%; text-align: left">
                                @Html.TextBoxFor(model => model.ColorName, new { style = "width: 98%;", id = "txtColorName", disabled = "disabled" })
                            </td>
                            <td style="width: 10%; text-align: right">
                                Product Capacity:
                            </td>
                            <td style="width: 20%; text-align: left">
                                @Html.TextBoxFor(model => model.ProductionCapacitySt, new { style = "width: 98%;text-align:right", id = "txtProductionCapacity", disabled = "disabled" })
                            </td>
                            <td style="width:10%; text-align: right">
                                Qty (<label id="lblUnit">Pcs</label>) :
                            </td>
                            <td style="width: 25%; text-align: right">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:40%"><input type="text" style="width:95%; text-align:left" id="txtQty" /></td>
                                        <td style="width:60%; text-align:right;">Rate: <input type="text" style="width:50%; text-align:left" id="txtRate" /></td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 10%; text-align: right">
                                Remarks :
                            </td>
                            <td colspan="3" style="width: 55%; text-align: left">
                                @Html.TextBoxFor(model => model.Remarks, new { style = "width: 99.5%;", id = "txtRemarks" })
                            </td>                            
                            <td style="width:10%; text-align: right">
                                Amount :
                            </td>
                            <td style="width: 25%; text-align: right">
                                @Html.TextBoxFor(model => model.AmountSt, new { style = "width: 98%;text-align:right", id = "txtAmount", disabled = "disabled" })
                            </td>
                        </tr>            
                    </table>
                </fieldset>
            </div>
        </div>
        <fieldset style="height:8%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:83%; text-align:right"></td>
                    <td style="width:17%;text-align:right;">                        
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">
    $(document).ready(function () {
        var oSubcontract =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oCompany =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));
        var oCurrencys =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oBusinessUnits =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));

        $('#divSubcontract').data('Subcontract', oSubcontract);
        $('#divSubcontract').data('Company', oCompany);
        $('#cboCurrency').data('Currencys', oCurrencys);
        $('#cboContractBU').data('BusinessUnits', oBusinessUnits);
        
        RefreshCombobox();
        $('#txtCRate,#txtQty,#txtRate').icsCurrencyBox();
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();        
        RefreshControl(oSubcontract);
    });

    function RefreshCombobox()
    {
        var oCurrencys = $('#cboCurrency').data('Currencys');        
        var oBusinessUnits = $('#cboContractBU').data('BusinessUnits');

        $("#cboCurrency").icsLoadCombo({List: oCurrencys, OptionValue: "CurrencyID",DisplayText: "CurrencyName"});
        $("#cboContractBU").icsLoadCombo({List: oBusinessUnits, OptionValue: "BusinessUnitID",DisplayText: "Name"});
    }

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }

    $('#cboCurrency').change(function(){
        SetCurrency(true);
    });

    function SetCurrency(bIsComboChange)
    {
        if(parseInt($('#cboCurrency').val())!=0)
        {
            var oCurrencys = $('#cboCurrency').data('Currencys');
            var oCompany= $('#divSubcontract').data('Company');

            for(var i=0;i<oCurrencys.length;i++)
            {
                if(parseInt(oCurrencys[i].CurrencyID)== parseInt($('#cboCurrency').val()))
                {
                    if(parseInt(oCurrencys[i].CurrencyID) === parseInt(oCompany.BaseCurrencyID))
                    {
                        $('#txtCRate').val(1);
                        $("#txtCRate" ).prop( "disabled", true );
                    }else{
                        if(bIsComboChange)
                        {
                            $('#txtCRate').val(0.00);
                            $("#txtCRate" ).prop( "disabled", false);
                        }
                    }
                    $('#lblCurrencySymbol').html(oCurrencys[i].Symbol);
                    break;
                }
            }
        }
    }

    function RefreshControl(oSubcontract)
    {
        $('#txtIssueDate').datebox('setValue',oSubcontract.IssueDateSt);
        $('#cboCurrency').val(oSubcontract.CurrencyID);
        $('#cboContractBU').val(oSubcontract.ContractBUID);
        $('#txtCRate').val(oSubcontract.CRateSt);
        $('#txtRateUnit').val(oSubcontract.RateUnitSt);        
        $('#lblUnit').text(oSubcontract.UnitSymbol);
        $('#txtQty').val(oSubcontract.QtySt);
        $('#txtRate').val(oSubcontract.UnitPriceSt);
        $('#txtAmount').val(oSubcontract.AmountSt);
        SetCurrency(false);
        SetTotal();
        var sSubcontractHeader = sessionStorage.getItem("SubcontractHeader");
        if(sSubcontractHeader=="View Sub Contract")
        {
            $('#btnSave').hide();
            $("#divSubcontract :input").prop('disabled', true);
        }        
    }

    $('#txtRateUnit').change(function(){
        SetTotal();
    });

    $('#txtQty,#txtRate').keyup(function(){
        SetTotal();
    });

    function Validation()
    {    
        var oSubcontract = $('#divSubcontract').data('Subcontract');
        if(oSubcontract === 'undefined' || oSubcontract === null || parseInt(oSubcontract.PTU2ID)<=0)
        {
            alert('Invalid PTU!');
            return false;
        }
        
        if(parseInt(oSubcontract.IssueBUID) <=0)
        {
            alert('Invalid Issue Business Unit!');
            return false;
        }
        
        if(parseInt(oSubcontract.ExportSCID) <=0 || parseInt(oSubcontract.ExportSCDetailID)<=0)
        {
            alert('Invalid Sales Contract!');
            return false;
        }

        if(parseInt(oSubcontract.ProductID) <=0)
        {
            alert('Invalid Product!');
            return false;
        }

        if(parseInt(oSubcontract.UintID) <=0)
        {
            alert('Invalid Unit!');
            return false;
        }
        var sIssueDate = $('#txtIssueDate').datebox('getValue');
        if(sIssueDate===null || sIssueDate==="")
        {
            alert('Please select Issue Date!');
            return false;
        }
                
        if($('#cboCurrency').val()<=0){
            $('#cboCurrency').focus();
            $('#cboCurrency').addClass("errorFieldBorder");
            alert('Select Currency');
            return false;
        }
        else{
            $('#cboCurrency').removeClass("errorFieldBorder");
        }

        if(parseInt($('#cboContractBU').val())<=0){
            $('#cboContractBU').focus();
            $('#cboContractBU').addClass("errorFieldBorder");
            alert('Select Contract Business Unit!');
            return false;
        }
        else{
            $('#cboContractBU').removeClass("errorFieldBorder");
        }

        if(icsRemoveComma($('#txtCRate').val())<=0){
            $('#txtCRate').focus();
            $('#txtCRate').addClass("errorFieldBorder");
            alert('C. Rate Should be Greater than 0.');
            return false;
        }
        else{
            $('#txtCRate').removeClass("errorFieldBorder");
        }

        if(parseInt($('#txtRateUnit').val())<=0){
            $('#txtRateUnit').focus();
            $('#txtRateUnit').addClass("errorFieldBorder");
            alert('Rate Should be Greater than 0.');
            return false;
        }
        else{
            $('#txtRateUnit').removeClass("errorFieldBorder");
        }

        if(parseInt(icsRemoveComma($('#txtQty').val()))<=0)
        {
            $('#txtQty').focus();
            $('#txtQty').addClass("errorFieldBorder");
            alert('Qty Should be Greater than 0');
            return false;
        }

        if(parseFloat(icsRemoveComma($('#txtRate').val()))<=0)
        {
            $('#txtRate').focus();
            $('#txtRate').addClass("errorFieldBorder");
            alert('Rate Should be Greater than 0');
            return false;
        }  
        if(parseInt(icsRemoveComma($('#txtQty').val()))>parseInt(icsRemoveComma($('#txtProductionCapacity').val())))
        {
            $('#txtQty').focus();
            $('#txtQty').addClass("errorFieldBorder");
            alert('Qty Should be Less than or Equal Production Capacity.');
            return false;
        }

        return true;
    }

    function RefreshObject()
    {
        var oTempSubcontract = $('#divSubcontract').data('Subcontract');

        var oSubcontract={
            SubcontractID : parseInt(oTempSubcontract.SubcontractID),
            SubcontractNo : $.trim($('#txtSubcontractNo').val()),            
            ContractStatusInt : parseInt(oTempSubcontract.ContractStatusInt),
            IssueBUID : parseInt(oTempSubcontract.IssueBUID),
            ContractBUID : parseInt($('#cboContractBU').val()),
            PTU2ID : parseInt(oTempSubcontract.PTU2ID),
            IssueDate : $('#txtIssueDate').datebox('getValue'),
            ExportSCID : parseInt(oTempSubcontract.ExportSCID),
            ExportSCDetailID : parseInt(oTempSubcontract.ExportSCDetailID),
            ProductID : parseInt(oTempSubcontract.ProductID),
            ColorID : parseInt(oTempSubcontract.ColorID),
            MoldRefID : parseInt(oTempSubcontract.MoldRefID),
            UintID : parseInt(oTempSubcontract.UintID),
            Qty : icsRemoveComma($('#txtQty').val()),
            RateUnit : parseInt($('#txtRateUnit').val()),
            UnitPrice : icsRemoveComma($('#txtRate').val()),
            CurrencyID : parseInt($('#cboCurrency').val()),
            CRate : icsRemoveComma($('#txtCRate').val()),
            ApprovedBy : parseInt(oTempSubcontract.ApprovedBy),
            Remarks : $.trim($('#txtRemarks').val())            
        };
        return oSubcontract;
    }

    $("#btnSave").click(function (){        
        if(!Validation()) return false;
        var oSubcontract=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/Subcontract/Save",
            traditional: true,
            data:  JSON.stringify(oSubcontract),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oSubcontract = jQuery.parseJSON(data);
                if (oSubcontract.ErrorMessage==null || oSubcontract.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    var oSubcontracts = sessionStorage.getItem("Subcontracts");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oSubcontracts != null) {
                        oSubcontracts = jQuery.parseJSON(oSubcontracts);
                    }
                    else {
                        oSubcontracts = [];
                    }
                    if (nIndex != -1) {
                        oSubcontracts[nIndex] = oSubcontract;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oSubcontracts.length);
                        oSubcontracts.push(oSubcontract);
                    }
                    sessionStorage.setItem("Subcontracts", JSON.stringify(oSubcontracts));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oSubcontract.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    function SetTotal()
    {
        if(parseInt($('#txtRateUnit').val())<=0)
        {
            alert("Price Unit Should be Greater than 0");
            $('#txtRateUnit').val(1);
        }
        var nAmount = (parseFloat(parseFloat(icsRemoveComma($('#txtQty').val()))/parseInt($('#txtRateUnit').val())) * parseFloat(icsRemoveComma($('#txtRate').val())));
        $('#txtAmount').val(formatPrice(nAmount,0));
    }

    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    $('#txtQty').tooltip({
        position: 'bottom',
        content: '<span style="color:#fff">Type Qty.</span>',
        onShow: function(){$(this).tooltip('tip').css({backgroundColor: '#666',borderColor: '#666'});}
    });

    $('#txtRate').tooltip({
        position: 'bottom',
        content: '<span style="color:#fff">Type Price.</span>',
        onShow: function(){$(this).tooltip('tip').css({backgroundColor: '#666',borderColor: '#666'});}
    });
</script>