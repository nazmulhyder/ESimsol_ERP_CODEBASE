<html>
@{
    ViewBag.Title = "View Import PI";
}

<body>
    @model ESimSol.BusinessObjects.ImportPI
    <div class="menuMainCollectionTable" id="divImportPI" title="Add ImportPI" style="font-family:Tahoma; height:100%; width:100%">
            <div title="Create Order" style="font-size: 11px; width: 100%;height:100%">
                <div class="easyui-tabs">
                    <div title="Basic Info" style="width: 100%;">
                        <fieldset>
                            <legend> <span style=" font-weight:bold; color:Gray;">Purchase Informations</span>  </legend>
                            <table cellpadding="1" cellspacing="1" style=" width:100%; font-size:12px;">
                                <tr>
                                    <td style=" width:10%;text-align:right; font-size:12px;">
                                        Type
                                    </td>
                                    <td style=" width:30%;text-align:left; font-size:12px;">
                                        <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                            <tr>
                                                <td style="width:30%;"><select id="cboImportPIType" style="width:100%;" disabled></select></td>
                                                <td style=" width:30%;text-align:right; font-size:12px;">Ref no/PI No</td>
                                                <td style=" width:40%;text-align:left; font-size:12px;">
                                                    @Html.TextBoxFor(model => model.PINoWithVersion, new { style = "width:100%;", id = "txtSLNo", disabled = "disabled" })
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                    <td style=" width:13%;text-align:right; font-size:12px;">
                                        PI date/ Ref Date
                                    </td>
                                    <td colspan="3" style=" width:47%;text-align:left; font-size:12px;">
                                        <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                            <tr>
                                                <td style="width:40%;text-align:left">
                                                    <input id="issueDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style=" width:100%;" />
                                                </td>
                                                <td style="width:25%;text-align:right;">Validity Date:</td>
                                                <td style="width:35%"><input id="validityDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style=" width:100%;" /></td>
                                            </tr>
                                        </table>
                                    </td>
                                   
                                </tr>
                                <tr>
                                    <td style=" width:10%;text-align:right; font-size:12px;">
                                        Party PI No
                                    </td>
                                    <td style=" width:30%;text-align:left; font-size:12px;">
                                        @Html.TextBoxFor(model => model.ImportPINo, new { style = "width: 100%;", id = "txtImportPI", disabled = "disabled" })
                                    </td>

                                    <td style=" width:13%;text-align:right; font-size:12px;">
                                        LC Term
                                    </td>
                                    <td colspan="3" style=" width:47%;text-align:left; font-size:12px;">
                                        <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                            <tr>
                                                <td style="width:40%;text-align:left">
                                                    <select id="cboLCTerm" style="width:100%;float:left;"disabled></select>
                                                </td>
                                                <td style="width:25%;text-align:right;">From :</td>
                                                <td style="width:35%"><select id="cboPaymentInstructionType" style="width:100%;float:right;" disabled></select></td>
                                            </tr>
                                        </table>
                                   </td>
                                </tr>
                                <tr>
                                    <td style=" width:10%;text-align:right; font-size:12px;">
                                        Supplier Name
                                    </td>
                                    <td style=" width:30%;text-align:left; font-size:12px;">
                                         <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                            <tr>
                                                <td style="width:100%;text-align:left"><input type="text" style="width:100%; float: left;" id="txtVendorName" placeholder="Type part Name then press enter" disabled /></td>
                                            </tr>
                                        </table>
                                    </td>
                                    <td style=" width:13%;text-align:right; font-size:12px;">
                                        Contact Personnel
                                    </td>

                                    <td colspan="3" style=" width:47%;text-align:left; font-size:12px;">
                                        <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                            <tr>
                                                <td style="width:40%;text-align:left">
                                                    <select id="cboSCPerson" style=" width:100%;" disabled></select>
                                                </td>
                                                <td style="width:25%;text-align:right;">Currency </td>
                                                <td style="width:35%;text-align:right;"><select id="cboCurrency" class="changeCurrency" style=" width:100%;" name="cboCurrency" disabled></select></td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="width: 10%;text-align:right">
                                        Beneficiary bank
                                    </td>
                                    <td style="width: 30%;">
                                        <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                            <tr>
                                                <td style="width:100%;text-align:left"><input type="text" style="width: 100%; float: left;" id="txtBranchName" placeholder="Type part Name then press enter" disabled /></td>
                                                
                                            </tr>
                                        </table>
                                    </td>
                                    <td style=" width:13%;text-align:right; font-size:12px;">
                                        Concern Person
                                    </td>
                                    <td colspan="3" style=" width:47%;text-align:left; font-size:12px;">
                                        <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                            <tr>
                                                <td style="width:40%;text-align:left">
                                                    <select id="cboConcernPerson" style="width: 100%" disabled></select>
                                                </td>
                                                <td style="width:25%;text-align:right;">Description</td>
                                                <td style="width:35%;text-align:right;">@Html.TextBoxFor(model => model.Note, new { style = "width:99%;", id = "txtNote", disabled = "disabled" })</td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                              </table>
                        </fieldset>
                      </div>
                    <div title="Terms and Conditions" style="width:100%; height:50%">
                        <fieldset id="fsTemsCondition">
                            <legend style="font-weight:bold"> Terms & Conditions : </legend>
                            <table border="0" cellspacing="2" cellpadding="2" class="CaptionStyle" style="width:100%;">
                                <tr>
                                    <td style="width:15%; text-align:right">Libor Rate</td>
                                    <td style="width:18%"><input type="radio" name="LiborRate"  value="1" />Yes&nbsp;<input type="radio" name="LiborRate"  value="0" />No</td>
                                    <td style="width:15%; text-align:right">Trans Shipment Allow</td>
                                    <td style="width:18%"><input type="radio" name="TransShipment" value="1" />Yes&nbsp;<input type="radio" name="TransShipment"  value="0" />No</td>
                                    <td style="width:15%; text-align:right">Part Shipment Allow</td>
                                    <td style="width:18%"><input type="radio" name="PartShipment" value="1" />Yes&nbsp;<input type="radio" name="PartShipment"  value="0" />No</td>
                                </tr>
                                <tr>
                                    <td style="width:15%; text-align:right">Over Due Rate(%)</td>
                                    <td style="width:18%">@Html.TextBoxFor(model => model.OverDueRate, new { style = "width:100%;", id = "txtOverDueRate", disabled = "disabled" })</td>
                                    <td style="width:15%; text-align:right">Asking Contract Date</td>
                                    <td style="width:18%"><input type="text" style="width:102%; text-align:right;" id="txtAskingContractDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                    <td style="width:15%; text-align:right">Asking Delivery Date</td>
                                    <td style="width:18%"><input type="text" style="width:100%;" id="txtAskingDeliveryDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                </tr>
                                <tr>
                                    <td style="width:15%; text-align:right">Delivery Clause</td>
                                    <td style="width:33%" colspan="2"><input type="text" id="txtDeliveryClause" style="width:100%" disabled /></td>
                                    <td style="width:18%;">@Html.TextBoxFor(model => model.ContainerNo, new { style = "width:100%;", id = "txtContainerNo", placeholder = "Container No", disabled = "disabled" })</td>
                                    <td style="width:15%; text-align:right">Asking LC Date</td>
                                    <td style="width:18%"><input type="text" style="width:100%;" id="txtAskingLCDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                </tr>
                                <tr>
                                    <td style="width:15%; text-align:right">Payment Clause</td>
                                    <td style="width:51%" colspan="3"><input type="text" id="txtPaymentClause" style="width:100%" disabled /></td>
                                    <td style="width:15%; text-align:right">Shipment By</td>
                                    <td style="width:18%"><select id="cboShipmentBy" style="width:100%" disabled></select> </td>
                                </tr>
                            </table>
                        </fieldset>
                    </div>
                 </div>
             <div title="Product" style="width: 100%; height:305px">
                <table id="tblImportPIGRNDetails" title="Import PI Details" style="width:100%;height:305px" class="easyui-datagrid"
                        data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbar',onClickRow:onClickRow ">
                    <thead>
                        <tr>
                            <th field="ProductCode" width="12%" align="left">Item Code</th>
                            <th field="ProductName" width="25%" align="left">Item Name</th>
                            <th data-options="field:'Note',width:150,align:'left',editor:{type:'text'}">Remarks</th>
                            <th data-options="field:'Qty',width:120,align:'right',editor:{type:'numberbox',options:{precision:2}},formatter:formatPrice" align="right">
                                Quantity
                            </th>
                            <th field="MUName" width="7%" align="left">Unit</th>
                            <th data-options="field:'UnitPrice',width:100,align:'right',editor:{type:'numberbox',options:{precision:2}},formatter:formatPrice" align="right">
                                Unit Price
                            </th>
                            <th field="TotalValue" width="100" align="right">
                                Value
                            </th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbar">
                    <span class="lblRefType"></span>&nbsp;<input type="text" id="txtProduct" placeholder="Type Product & Press Enter" style="width:210px;" />
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnProduct">Pick</a>
                    <select id="cboUnit" style="width:150px;"></select>&nbsp;<input type="text" id="txtQty" placeholder="Type Qty" style="width:100px;" />&nbsp;<input type="text" id="txtUnitPrice" placeholder="Type Unit Price" style="width:100px;" />
                    <a id="btnAddDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" onclick="AddDetail()" plain="true">Add</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteDetail()" id="btnRemove">Remove</a>
                    <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshDetails()">Refresh </a>
                </div>
                <table style=" width:100%; font-size:12px;">
                    <tr>
                        <td id="tdTotalCaption" style="width:55%; text-align: right; font-size: 12px; font-weight:bold"> Total : </td>
                        <td style="width:10%; text-align: right; font-size: 12px"> <label id="lblTotalQty" style="text-align: right; font-size:12px; float: right; font-weight:bold">0.00</label></td>
                        <td style="width:22%; text-align: right; font-size: 12px"> <label id="lblTotalValue" style="text-align: right; font-size:12px; float: right; font-weight:bold">0.00</label></td>
                        <td style="width: 8%; text-align: right; font-size: 12px"></td>
                    </tr>
                </table>
                <fieldset>
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; width: 100%;height:8%;font-weight: bold; font-size: 12px">
                        <tr>
                            <td style="width: 85%; text-align: right"></td>
                            <td style="width: 10%; font-size: 13px">
                                <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                            </td>
                            <td style="width: 5%; font-size: 13px">
                                <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-closed" plain="true" onclick="Close()">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
             </div>
          </div>
   </div>
</body>
</html>
<script type="text/javascript">

    $(document).ready(function () {
        var sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oImportPI = @Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oLCTerms = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LCTerms));
        var oImportPITypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ImportPITypeObj));
        var oShipmentByObj= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ShipmentByObj));
        var oPaymentInstructionObj= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PaymentInstructionObj));
        var oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oConcernPersones = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ConcernPersons));
        var oImportPIGRNDetails=oImportPI.ImportPIGRNDetails;
        $('#txtOverDueRate,#txtQty,#txtUnitPrice').icsCurrencyBox();
        $('#divImportPI').data('ImportPI', oImportPI);
        $('#divImportPI').data('TotalAmount', oImportPI.TotalValue);
        $('#divImportPI').data('Currencys', oCurrencys);
        $('#divImportPI').data('BaseAddress', sBaseAddress);
        $("#cboCurrency").icsLoadCombo({List: oCurrencys,OptionValue: "CurrencyID",DisplayText: "CurrencyName"});
        $("#cboLCTerm").icsLoadCombo({List: oLCTerms,OptionValue: "LCTermID",DisplayText: "NameDaysInString"});
        $("#cboImportPIType").icsLoadCombo({List: oImportPITypes,OptionValue: "id",DisplayText: "Value"});
        $("#cboPaymentInstructionType").icsLoadCombo({List: oPaymentInstructionObj,OptionValue: "id",DisplayText: "Value"});
        $("#cboConcernPerson").icsLoadCombo({List: oConcernPersones,OptionValue: "MarketingAccountID",DisplayText: "Name"});
        $("#cboShipmentBy").icsLoadCombo({List: oShipmentByObj,OptionValue: "id",DisplayText: "Value"});
        LoadDates();
        if(oImportPIGRNDetails!=null)
        {
            LoadImportPIGRNDetails(oImportPIGRNDetails);
        }
        RefreshControll();
        $('#divImportPIHeader').panel({ title:sessionStorage.getItem("ImportPIHeader")});
        SetTotal();
    });

    function LoadDates()
    {
        var oImportPI=$('#divImportPI').data('ImportPI');
        $('#issueDate').datebox('setValue',oImportPI.IssueDateSt);
        $('#validityDate').datebox('setValue',oImportPI.validityDateSt);
        $('#txtAskingContractDate').datebox('setValue',oImportPI.AskingContractDateSt);
        $('#txtAskingDeliveryDate').datebox('setValue',oImportPI.AskingDeliveryDateInString);
        $('#txtAskingLCDate').datebox('setValue',oImportPI.AskingLCDateInString);
    }

    function DisableAllFields()
    {
        $("#PurchaseField input").attr("disabled","disabled");
        $("#PurchaseField select").attr("disabled","disabled");
        $("#VerifyOrder input").attr("disabled","disabled");
        $("#VerifyOrder select").attr("disabled","disabled");
        $("#VerifyOrder input[Type='CheckBox']").attr("disabled","disabled");
        $("#PaymentCondition input").attr("disabled","disabled");
        $("#PaymentCondition select").attr("disabled","disabled");
        $("#DelivarySpecification input").attr("disabled","disabled");
        $("#DelivarySpecification select").attr("disabled","disabled");
        $("#btnSave").hide();
        $("#Action").find("#btnSave").hide();
    }
    //Supplier Part
    $("#txtVendorName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var TextBox=$(this);
            var oContractor = { Params:1+'~'+$('#txtVendorName').val()+'~'+sessionStorage.getItem('BUID') };
            var obj = {
                BaseAddress: $('#divImportPI').data('BaseAddress'),
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {
                        var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 250, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Address", title: "Address", width: 200, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winContractors',
                            winclass:'clsSupplier',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblSuppliers',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Vendor List',
                            TextBox:TextBox
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else { alert("Data not Found"); }
            });
        }
    });
    $("#btnPickVendor").click(function ()
    {
        var oContractor = { Params:1+'~~'+sessionStorage.getItem('BUID') };
        var obj = {
            BaseAddress: $('#divImportPI').data('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 250, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 200, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winContractors',
                        winclass: 'clsSupplier',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblSuppliers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Vendor List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else { alert("Data not Found"); }
        });

    });
    $('#txtVendorName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtVendorName = document.getElementById("txtVendorName");
            txtVendorName.value = '';
            txtVendorName.style.color = "black";
            txtVendorName.style.fontWeight = "normal";
            $('#divImportPI').data('ImportPI').SupplierID = 0;
            _oSCPersons = [];
            $("#cboSCPerson").icsLoadCombo({
                List: _oSCPersons,
                OptionValue: "ContactPersonnelID",
                DisplayText: "Name"
            });
        }
    });

    $('#txtBranchName').keydown(function (e){
        if(e.which === 13 || e.which === 9)
        {
            var txtBranchName = $('#txtBranchName').val();
            var oBankBranch = {
                BranchName : txtBranchName,
                BankID : 0
            };
            var obj = {
                BaseAddress: $('#divImportPI').data('BaseAddress'),
                Object: oBankBranch,
                ControllerName: "BankBranch",
                ActionName: "GetsBankBranchSearchByBankName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (parseInt(response.objs[0].BankBranchID) > 0) {
                        var tblColums = []; var oColumn = { field: "BranchCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "BankName", title: "Bank Name", width: 150, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "BranchName", title: "Branch Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "PhoneNo", title: "Phone No", width: 100, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winBranch',
                            winclass: 'clsBranch',
                            winwidth: 500,
                            winheight: 420,
                            tableid: 'tblBranch',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'BranchName',
                            windowTittle: 'Branch List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else
                {
                    alert("Data Not Found!");
                }
            });

        }
    });
    $('#btnPickBranch').click(function (e){
        var txtBranchName = $('#txtBranchName').val();
        var oBankBranch = {
            BranchName : txtBranchName,
            BankID : 0
        };
        var obj = {
            BaseAddress: $('#divImportPI').data('BaseAddress'),
            Object: oBankBranch,
            ControllerName: "BankBranch",
            ActionName: "GetsBankBranchSearchByBankName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (parseInt(response.objs[0].BankBranchID) > 0) {
                    var tblColums = []; var oColumn = { field: "BranchCode", title: "Code", width: 60, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BankName", title: "Bank Name", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BranchName", title: "Branch Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "PhoneNo", title: "Phone No", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBranch',
                        winclass: 'clsBranch',
                        winwidth: 500,
                        winheight: 420,
                        tableid: 'tblBranch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'BranchName',
                        windowTittle: 'Branch List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("Data Not Found!");
            }
        });
    });
    $('#txtBranchName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtVendorName = document.getElementById("txtBranchName");
            txtVendorName.value = '';
            txtVendorName.style.color = "black";
            txtVendorName.style.fontWeight = "normal";
            $('#divImportPI').data('ImportPI').BankBranchID_Advise = 0;
        }
    });

    $("#txtProduct").keydown(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtProduct').val()=="" || $('#txtProduct').val()==null)
            {
                alert("Please Type Product Name And Press Enter.");
                return;
            }
            var oProduct = { BUID: sessionStorage.getItem('BUID'),ProductName:$('#txtProduct').val()};
            var obj = {
                BaseAddress: $('#divImportPI').data('BaseAddress'),
                Object: oProduct,
                ControllerName: "ImportPI",
                ActionName: "GetProducts",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0)
                {
                    if (response.objs[0].ProductID > 0) {
                        var tblColums = [], searcingField = "", windowTittle = "";
                        var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "FullName", title: "Item Name", width: 250, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winProduct',
                            winclass: 'clsProduct',
                            winwidth: 450,
                            winheight: 460,
                            tableid: 'tblProduct',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: searcingField,
                            windowTittle: windowTittle
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiple return
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }


                }
                else { alert("Data not Found"); }
            });
        }
        if (code == 8) //backspace=8
        {
            //
            $("#txtProduct").val('');
            $("#txtProduct").removeClass('fontColorOfPickItem');
            _oTempProducts = [];
        }
    });
    $("#btnProduct").click(function () {
        var oProduct = { BUID:sessionStorage.getItem('BUID'),ProductName:''};
        var obj = {
            BaseAddress: $('#divImportPI').data('BaseAddress'),
            Object: oProduct,
            ControllerName: "ImportPI",
            ActionName: "GetProducts",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0)
            {
                if ( response.objs[0].ProductID > 0) {

                    var tblColums = [], searcingField = "", windowTittle = "";
                    var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "FullName", title: "Item Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    searcingField = "FullName";
                    windowTittle = "Item List";
                    var oPickerParam = {
                        winid: 'winProduct',
                        winclass: 'clsProduct',
                        winwidth: 450,
                        winheight: 460,
                        tableid: 'tblProduct',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: searcingField,
                        windowTittle: windowTittle
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("Data Not Fund");
                return;
            }

        });
    });
    $('#txtProduct').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtProduct").val('');
            $("#txtProduct").removeClass("fontColorOfPickItem");
        }
    });

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }
    function SetPickerValueAssign(oPickerobj) {

        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winContractors') {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                $('#txtVendorName').val(oreturnObj.Name);
                $('#txtVendorName').addClass('fontColorOfPickItem');
                $('#divImportPI').data('ImportPI').SupplierID = oreturnObj.ContractorID;
                LoadContractPersonals(oreturnObj.ContractorID);
                $('#txtVendorName').focus();
            }
        }
        if (oPickerobj.winid === 'winBranch') {
            if (oreturnObj != null && parseInt(oreturnObj.BankBranchID) > 0) {
                $('#txtBranchName').val(oreturnObj.BankBranchName);
                $('#txtBranchName').addClass('fontColorOfPickItem');
                $('#divImportPI').data('ImportPI').BankBranchID_Advise= parseInt(oreturnObj.BankBranchID);
            }
        }
        if (oPickerobj.winid == 'winProduct')
        {
            if (oreturnObj!=null && oreturnObj.ProductID> 0)
            {
                $("#txtProduct").val(oreturnObj.ProductName);
                $("#txtProduct").addClass('fontColorOfPickItem');
                $('#divImportPI').data('Product',oreturnObj);
                LoadUnits(oreturnObj.UnitTypeInInt);
                $('#cboUnit').focus();
            }
        }
    }

    function LoadUnits(nUnitTypeInt)
    {
        //debugger;
        var oMeasurementUnit={
            UnitTypeInInt : nUnitTypeInt
        };
        $.ajax ({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/MeasurementUnit/GetbyUnitType",
            data:  JSON.stringify(oMeasurementUnit),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var  oUnits = jQuery.parseJSON(data);
                if (oUnits!=null)
                {
                    if(oUnits.length>0)
                    {
                        $("#cboUnit").icsLoadCombo({List: oUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }
    function AddDetail()
    {
        debugger;
        var oImportPIGRNDetails =  $('#tblImportPIGRNDetails').datagrid('getRows');
        if( $('#divImportPI').data('Product')==null || $('#divImportPI').data('Product')=="")
        {
            alert("Please select Product");
            return;
        }
        if($('#cboUnit').val()==null || $('#cboUnit').val()<=0)
        {
            alert("Please select Unit");
            $('#cboUnit').focus();
            return;
        }
        if($('#txtQty').val()==null || $('#txtQty').val()<=0)
        {
            alert("Quantity Should be greater than 0.");
            $('#txtQty').focus();
            return;
        }
        if($('#txtUnitPrice').val()==null || $('#txtUnitPrice').val()<=0)
        {
            alert("Unit Price Should be greater than 0.");
            $('#txtUnitPrice').focus();
            return;
        }
        if(!ICS_IsExist(oImportPIGRNDetails,'ProductID', $('#divImportPI').data('Product').ProductID))
        {
            var oImportPIGRNDetail =
            {
                ImportPIGRNDetailID:0,
                ImportPIID:$('#divImportPI').data('ImportPI').ImportPIID,
                ProductID:$('#divImportPI').data('Product').ProductID,
                ProductCode:$('#divImportPI').data('Product').ProductCode,
                ProductName:$('#divImportPI').data('Product').ProductName,
                Note:'',
                UnitPrice :icsRemoveComma($('#txtUnitPrice').val()),
                Qty:icsRemoveComma($('#txtQty').val()),
                MUnitID:$('#cboUnit').val(),
                MUName:$('#cboUnit option:selected').text(),
                TotalValue:parseFloat( icsRemoveComma($('#txtQty').val()))*parseFloat(icsRemoveComma($('#txtUnitPrice').val()))

            };
            $('#tblImportPIGRNDetails').datagrid('appendRow',oImportPIGRNDetail);
        }
        $("#txtProduct").val('');
        $("#txtProduct").removeClass('fontColorOfPickItem');
        $('#cboUnit').empty();
        $('#txtQty,#txtUnitPrice').val('');
        $('#divImportPI').data('Product',"");
        $("#txtProduct").focus();
        SetTotal();
    }

    function LoadContractPersonals(nSupplierID)
    {

        if (nSupplierID=="" || nSupplierID==null)
        {
            alert(" Please Select an Vendor!");
            return;
        }
        var obj = window.dialogArguments;
        var tsv= (new Date().getTime())/1000;
        var listItems= "<option value='"+0+"'>" +"--Select Contact Person--" + "</option>";
        var Contractor={ContractorId:nSupplierID};

        $.ajax
           ({
               type: "POST",
               dataType: "json",
               url : $('#divImportPI').data('BaseAddress')+  "/Contractor/GetContactPersonnels",
               data:  JSON.stringify(Contractor),
               contentType: "application/json; charset=utf-8",
               success: function (data) {

                   var  oContactPersonnels = jQuery.parseJSON(data);
                   if (oContactPersonnels!=null)
                   {
                       if(oContactPersonnels.length>0)
                       {
                           for (i = 0; i < oContactPersonnels.length; i++)
                           {
                               listItems += "<option value='" + oContactPersonnels[i].ContactPersonnelID+"'>" + oContactPersonnels[i].Name+"</option>";
                           }
                           $("#cboSCPerson").html(listItems);
                           $('#cboSCPerson').val($('#divImportPI').data('ImportPI').ContactPersonID);
                       }
                       else
                       {
                           $("#cboSCPerson").html(listItems);
                       }
                   }
                   else
                   {
                       $("#cboSCPerson").html(listItems);
                   }
               },
               error: function (xhr, status, error)
               {
                   alert(error);
               }

           });

    }
    function ResetBankAdvice()
    {
        document.getElementById('txtBranchName').value="";
    }

    function DeleteDetail()
    {
        var oImportPIGRNDetail= $('#tblImportPIGRNDetails').datagrid('getSelected');
        if (oImportPIGRNDetail == null || parseInt(oImportPIGRNDetail.ProductID)<= 0) {

            $('#tblImportPIGRNDetails').datagrid('deleteRow',nSelectedIndex);
            alert("Delete sucessfully");
        }
        if (!confirm("Confirm to Delete?")) return;
        var nSelectedIndex = $('#tblImportPIGRNDetails').datagrid('getRowIndex', oImportPIGRNDetail);
        $('#tblImportPIGRNDetails').datagrid('deleteRow',nSelectedIndex);
        alert("Delete sucessfully");
        debugger;
        endEditing();
    }

    function Validation()
    {
        debugger;
        if( parseInt($('#divImportPI').data('ImportPI').ImportPIID)<=0)
        {
            alert("Sorry, there is no Import PI.");
            return false;
        }
              
        var getRows=$('#tblImportPIGRNDetails').datagrid('getRows');
        var nTotalAmount = 0;
        if(getRows.length==0)
        {
            alert(" Please enter al least one detail.");
            return false;
        }
        else if(getRows.length>1)
        {
            for(var i=0; i<getRows.length;i++)
            {
                if(getRows[i].Qty==0 && getRows[i].UnitPrice!=0)
                {
                    alert(" In row number "+ Number(i+1) +" 'Quantity' must be greater than zero. ");
                    return false;
                }
                else if(getRows[i].UnitPrice==0 && getRows[i].Qty!=0)
                {
                    alert(" In row number "+ Number(i+1) +" 'Unit price' must be greater than zero. ");
                    return false;
                }
                else if(getRows[i].Qty==0 && getRows[i].UnitPrice==0)
                {
                    alert(" In row number "+ Number(i+1) +" 'Quantity' and 'Unit price' must be greater than zero. ");
                    return false;
                }
                nTotalAmount+=parseFloat(getRows[i].Qty * getRows[i].UnitPrice);
            }
        }
        var nTotalPIValue = parseFloat($('#divImportPI').data('TotalAmount'));
        var nDifferenceValue  = parseFloat(nTotalPIValue) - parseFloat(nTotalAmount);
        if(nDifferenceValue<0)
        {
            debugger;
            if(parseFloat(parseFloat(nDifferenceValue)*-1)>0.1)
            {
                alert("Amount should be equal Total Value.");
                return false;
            }
        }else if(parseFloat(nDifferenceValue)>1)
        {
            alert(" Amount should be equal Total Value.");
            return false;
        }
        return true;

    }

    function RefreshObject() {
        debugger;
        var oImportPIGRNDetails=$('#tblImportPIGRNDetails').datagrid('getRows');
        if(oImportPIGRNDetails.length==0 || oImportPIGRNDetails==null)
        {
            alert("Please, Entry at least one Product");
            return ;
        }
        

        var oImportPIGRNDetails =
                      {
                          ImportPIID   :  $('#divImportPI').data('ImportPI').ImportPIID,
                          ImportPIGRNDetails  : oImportPIGRNDetails
                      }
        return oImportPIGRNDetails;
    }

    function Save() 
    {
       // debugger;
        endEditing();
        var oImportPIGRNDetail=RefreshObject();
        if(!Validation())
        {
            return;
        }
        if( oImportPIGRNDetail==null)
        {
            alert(" Something wrong, Please correct it. !!");
            return;
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url: $('#divImportPI').data('BaseAddress') +"/ImportPI/SaveImportPIGRNDetail",
            traditional: true,
            data: JSON.stringify(oImportPIGRNDetail),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oImportPIGRNDetails = jQuery.parseJSON(data);
                if (oImportPIGRNDetails.length>0 && (oImportPIGRNDetails[0].ErrorMessage==null || oImportPIGRNDetails[0].ErrorMessage==""))
                {
                    alert("Data Saved successfully");
                    var oImportPIs =sessionStorage.getItem("ImportPIs");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oImportPIs!=null)
                    {
                        oImportPIs = jQuery.parseJSON(oImportPIs);
                    }
                    else
                    {
                        oImportPIs=[];
                    }
                    if(nIndex!=-1)
                    {
                        oImportPIs[nIndex]=$('#divImportPI').data('ImportPI');
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oImportPIs.length);
                        oImportPIs.push(oImportPI);
                    }
                    sessionStorage.setItem("ImportPIs", JSON.stringify(oImportPIs));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else
                {
                    alert(oImportPIGRNDetails[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    var editIndex = undefined;
    function endEditing()
    {
        if (editIndex == undefined) { return true }
        if ($('#tblImportPIGRNDetails').datagrid('validateRow', editIndex))
        {
            $('#tblImportPIGRNDetails').datagrid('endEdit', editIndex);
            $('#tblImportPIGRNDetails').datagrid('selectRow', editIndex);
            var oImportPIGRNDetail = $('#tblImportPIGRNDetails').datagrid('getSelected');
            var sTemp="";
            var oCurrencys = $('#divImportPI').data('Currencys', oCurrencys);
            for (var i = 0; i < oCurrencys.length; i++)
            {
                if(oCurrencys[i].CurrencyID== $('#cboCurrency').val())
                {
                    sTemp=oCurrencys[i].Symbol;
                }
            }
            $('#divImportPI').data('ImportPI').CurrencySymbol=sTemp
            if(oImportPIGRNDetail!=null)
            {
                oImportPIGRNDetail.TotalValue=formatPrice(oImportPIGRNDetail.Qty*parseFloat(oImportPIGRNDetail.UnitPrice));
                $('#tblImportPIGRNDetails').datagrid('updateRow',{index: editIndex,	row: oImportPIGRNDetail});
            }
            SetTotal();
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRow(index) {
        if (editIndex != index) {
            if (endEditing()) {
                $('#tblImportPIGRNDetails').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else {
                $('#tblImportPIGRNDetails').datagrid('selectRow', editIndex);
            }
        }
    }

    function RefreshDetails()
    {
        endEditing();
        var oImportPIGRNDetails = $('#tblImportPIGRNDetails').datagrid('getRows');
        if($('#divImportPI').data('ImportPI').CurrencyID<=0)
        {
            $('#divImportPI').data('ImportPI').CurrencyID=$('#cboCurrency').val();
            var sCUR="";
            var oCurrencys = $('#divImportPI').data('Currencys', oCurrencys);
            for (var i = 0; i < oCurrencys.length; i++)
            {
                if(oCurrencys[i].CurrencyID==$('#divImportPI').data('ImportPI').CurrencyID)
                {
                    sCUR=oCurrencys[i].Symbol;
                }
            }
            $('#divImportPI').data('ImportPI').CurrencySymbol=sCUR
        }
        for(var i =0;i<oImportPIGRNDetails.length;i++)
        {
            oImportPIGRNDetails[i].AmountSt= $('#divImportPI').data('ImportPI').CurrencySymbol+''+ formatPrice(oImportPIGRNDetails[i].Qty*oImportPIGRNDetails[i].UnitPrice);
        }
        LoadImportPIGRNDetails(oImportPIGRNDetails);
        SetTotal();
    }

    function RefreshControll()
    {
        debugger;
        var oImportPI = $('#divImportPI').data('ImportPI');
        $('#cboImportPIType').val(oImportPI.ImportPITypeInt);
        $('#txtVendorName').val(oImportPI.SupplierName);
        if(parseInt(oImportPI.SupplierID)>0)
        {
            $('#txtVendorName').addClass('fontColorOfPickItem');
            LoadContractPersonals(oImportPI.SupplierID);
        }
        if(parseInt(oImportPI.ContactPersonID)>0)
        {
            $("#cboSCPerson").val(oImportPI.ContactPersonID);
        }
        document.getElementById('cboCurrency').value =oImportPI.CurrencyID;
        document.getElementById('txtNote').value=oImportPI.Note;
        $('#txtBranchName').val(oImportPI.BankName);
        if(parseInt(oImportPI.BankBranchID_Advise)>0)
        {
            $('#txtBranchName').addClass('fontColorOfPickItem');
        }
        $("#cboConcernPerson").val(oImportPI.ConcernPersonID);
        $('#txtDeliveryClause').val(oImportPI.DeliveryClause);
        $('#txtPaymentClause').val(oImportPI.PaymentClause);
        $('#cboLCTerm').val(oImportPI.LCTermID);
        $('#cboShipmentBy').val(oImportPI.ShipmentBy);
        $('#txtOverDueRate').val(oImportPI.OverDueRate);
        $('#cboPaymentInstructionType').val(oImportPI.PaymentInstructionTypeInt);
        document.getElementById('txtSLNo').value=oImportPI.SLNo;
        document.getElementById('txtImportPI').value=oImportPI.ImportPINo;

        if(oImportPI.IsLIBORrate)
        {
            $('input:radio[name="LiborRate"][value=1]').prop('checked', true);
        }else
        {
            $('input:radio[name="LiborRate"][value=0]').prop('checked', true);
        }
        if(oImportPI.IsTransShipmentAllow)
        {
            $('input:radio[name="TransShipment"][value=1]').prop('checked', true);
        }else
        {
            $('input:radio[name="TransShipment"][value=0]').prop('checked', true);
        }
        if(oImportPI.IsPartShipmentAllow)
        {
            $('input:radio[name="PartShipment"][value=1]').prop('checked', true);
        }else
        {
            $('input:radio[name="PartShipment"][value=0]').prop('checked', true);
        }
        //$('input:radio[name="PartShipment"][value="'+oImportPI.IsPartShipmentAllow+'"]').prop('checked', true);
        //$('input:radio[name="TransShipment"][value="'+oImportPI.IsTransShipmentAllow+'"]').prop('checked', true);

    }

    function LoadImportPIGRNDetails(oImportPIGRNDetails)
    {
        var data=oImportPIGRNDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblImportPIGRNDetails').datagrid('loadData',data);
    }

    function SetTotal()
    {
        var oImportPIGRNDetails = $('#tblImportPIGRNDetails').datagrid('getRows');
        var nTotalQty=0;
        var nTotalValue=0;
        var sMunit="";
        if(oImportPIGRNDetails.length>0)
        {
            for(var i =0;i<oImportPIGRNDetails.length;i++)
            {
                nTotalQty = nTotalQty+ parseInt(oImportPIGRNDetails[i].Qty);
                nTotalValue= nTotalValue+parseFloat(oImportPIGRNDetails[i].Qty)* parseFloat(oImportPIGRNDetails[i].UnitPrice);
                sMunit=oImportPIGRNDetails[i].MUName;
            }
        }
        if(oImportPIGRNDetails.length>0)
        {
            document.getElementById('lblTotalQty').innerHTML = nTotalQty+"" +sMunit;
            document.getElementById('lblTotalValue').innerHTML = $('#divImportPI').data('ImportPI').CurrencySymbol+" "+ formatPrice(nTotalValue);
        }
        $('#divImportPI').data('ImportPI').TotalValue = nTotalValue;
    }

    $('.changeCurrency').change(function(){
        debugger;
        if($('#cboCurrency').val()>0)
        {
            //editIndex=0;
            endEditing();
        }
    });

    //Contact person
    $('#btnNewContactPerson').click(function(e){
        debugger;

        if(parseInt($('#divImportPI').data('ImportPI').SupplierID)<=0)
        {
            alert("Please Pick Supplier!");
            return;
        }
        sessionStorage.setItem("ContractorBackTo", "");
        sessionStorage.setItem("SelectedRowIndex", 0);
        sessionStorage.setItem("ContractorHeader", "Add ContactPersonnel");
        window.open(_sBaseAddress+  "/Contractor/ViewContactPersonnel?id="+$('#divImportPI').data('ImportPI').SupplierID+"&buid="+sessionStorage.getItem("BUID"),"_blank");

    });
    $('#btnReload').click(function(e){
        LoadContractPersonals($('#divImportPI').data('ImportPI').SupplierID);
    });

    function Close()
    {
        window.location.href = sessionStorage.getItem("BackLink");
    }

</script>
