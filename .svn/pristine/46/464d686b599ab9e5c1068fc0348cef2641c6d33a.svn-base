<html>
@{
    Layout = "~/Views/Shared/_AngularLayout.cshtml";
    ViewBag.Title = "FN Production";
   
}
<body>
    @model ESimSol.BusinessObjects.FNProduction
    <div class="menuMainCollectionTable" ng-app="FNProductionApp" ng-controller="FNProductionController as CS" id="divCS" style="width:98%">
        <div style="font-family:Tahoma;text-align:center;height:100%;" class="regionCS">
            <section style="height:100%;">
                <ul class="nav nav-tabs" style="background:#d6dbdf;color:white;">
                    <li ng-class="{active:CS.IsSet(1)}">
                        <a href="" ng-click="CS.SetTab(1)" style="color:black;">Production Information</a>
                    </li>
                    <li ng-class="{active:CS.IsSet(2)}">
                        <a href="" ng-click="CS.SetTab(2)" style="color:black;">Production Batch</a>
                    </li>
                </ul>
                <div ng-show="CS.IsSet(1)" style="overflow-y: scroll;height:83%;" ng-disabled="diFNProduction">
                    <fieldset style="width:auto">
                        <legend>FN ProductionInfo :</legend>
                        <div class="col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label">FN Machine:</label></div>
                            <div class="col-md-3 text-left">
                                <div class="input-group">
                                    <input ng-model="FNProduction.FNMachineName" id="txtFNMachineName" class="form-control" placeholder="Type Machine Name & Press Enter" ng-keydown="SearchKeyDownMachine($event)" />
                                    <span class="input-group-btn">
                                        <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="SearchMachine()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                                    </span>
                                </div>
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">Treatment:</label></div>
                            <div class="col-md-3 text-left">
                                @*<select class="form-control" ng-model="FNProduction.FNTPID" id="cboFNTreatment" ng-change="ChangeTreatment()" ng-options="item.FNTPID as item.FNTreatmentSt for item in FNMachineProcessList"></select>*@    
                                <select class="form-control" ng-model="FNProduction.FNTPID" id="cboFNTreatment"  ng-options="item.FNTPID as item.FNProcess for item in FNMachineProcessList">
                                   
                                </select>    
                            </div>
                        
                        </div>

                        <div class="  col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label">Issue Date:</label></div>
                            <div class="col-md-3 text-left">
                                <div class="input-group date date-container">
                                    <input type="text" class="form-control" ng-model="FNProduction.IssueDateSt"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                                </div>
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">Start Time:</label></div>
                            <div class="col-md-3 text-left rigionDate">
                                <div class="col-md-9 text-left">
                                    <div class="input-group date date-time-container">
                                        <input type="text" class="form-control" ng-model="FNProduction.StartDateTimeSt" id="txtStartTime" ng-disabled="txtStartTime"><span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                                    </div>
                                </div>
                                <div class="col-md-3 text-right">
                                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-show="btnRun" ng-click="Run()"><span class="glyphicon glyphicon-refresh" aria-hidden="true">Run</span></button>
                                </div>
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">End Time:</label></div>
                            <div class="col-md-3 text-left rigionDate">
                                <div class="col-md-9 text-left">
                                    <div class="input-group date date-time-container">
                                        <input type="text" class="form-control" ng-model="FNProduction.EndDateTimeSt" id="txtEndTime" ng-disabled="txtEndTime"><span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                                    </div>
                                </div>
                                <div class="col-md-3 text-right">
                                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-show="btnRunOut" ng-click="RunOut()"><span class="glyphicon glyphicon-adjust" aria-hidden="true">RunOut</span></button>
                                </div>
                            </div>
                        </div>

                    </fieldset>
                    <div class="col-md-12">
                        <div class="ui-grid-top-panel" style="text-align:left;">
                            Material:<input type="text" ng-model="ProductName" id="txtProductName" style="width:150px;" ng-keydown="SearchKeyMaterial($event)" placeholder="Type Material Name & press Enter" />
                            @*<select style="width:120px;" ng-model="cboMaterialUnit" ng-options="item.UnitID as item.UnitName for item in MaterialUnits" disabled></select>*@
                            Lot:<select style="width:120px;" ng-model="cboLot" ng-change="ChangeLot()" ng-options="item.LotID as item.LotNo for item in Lots"></select>
                            Lot Qty:<input type="text" ng-model="LotQty" class="number-box" style="width:80px;" disabled />
                            Qty:<input type="text" ng-model="txtQty" class="number-box" style="width:80px;" />
                            <button type="button" id="btnAddConsumption" class="btn btn-default btn-sm" aria-label="right Align" ng-click="AddConsumption()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>
                            <button type="button" id="btnRemoveConsumption" class="btn btn-default btn-sm" aria-label="right Align" ng-mousemove="Delete" ng-click="RemoveConsumption()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Remove</span></button>
                            <button type="button" id="btnRefreshFNPConsumption" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RefreshConsumption()"><span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                        </div>
                        <div style="width: 100%; height:343px;" ui-grid="gridOptionsConsumption" ui-grid-selection ui-grid-edit ui-grid-resize-columns ui-grid-key-nav class="ui-grid-selectable"></div>
                    </div>
                </div>
                <div ng-show="CS.IsSet(2)">
                    <div class="form-inline" style="text-align:left;">
                        <input type="text" ng-model="BatchNo" style="width:160px;" ng-keydown="SearchKeyBatch($event)" placeholder="Batch No & press Enter" />&nbsp;OR
                        <input type="text" ng-model="ExecNo" style="width:160px;" ng-keydown="SearchKeyFNExecution($event)" placeholder="Dispo No & press Enter" />&nbsp;&nbsp;&nbsp;
                        Start Batcher: <input type="text" ng-model="StartBatcherName" id="txtStartBatcherName" style="width:200px;" ng-keydown="SearchKeyStartBatcher($event)" placeholder="Start Batcher Name" />&nbsp;&nbsp;&nbsp;&nbsp;
                        End Batcher: <input type="text" ng-model="EndBatcherName" id="txtEndBatcherName" style="width:255px;" ng-keydown="SearchKeyEndBatcher($event)" placeholder="End Batcher Name" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        Start Time:<div class="input-group date date-time-container"><input type="text" class="form-control" ng-model="txtFNBStartTime" id="txtFNBStartTime" style="width:180px;"><span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span></div>&nbsp;&nbsp;
                        End Time:<div class="input-group date date-time-container"><input type="text" class="form-control" ng-model="txtFNBEndTime" id="txtFNBEndTime" ng-disabled="txtFNPBEndTime" style="width:180px;"><span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span></div>
                        Start Qty:<input type="text" ng-model="txtFNPBQty" class="number-box" style="width:120px;" />
                        <button type="button" id="btnAddFNPBatch" class="btn btn-default btn-sm" aria-label="right Align" ng-click="AddFNPBatch()"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span></button>
                        <button type="button" id="btnDeleteFNPBatch" class="btn btn-default btn-sm" aria-label="right Align" ng-click="DeleteFNPBatch()"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>
                        <button type="button" id="btnReProcessFNPBatch" class="btn btn-default btn-sm" aria-label="right Align" ng-click="ReProcessFNPBatch()"><span class="glyphicon glyphicon-repeat" aria-hidden="true"></span>Re Process</button>
                        <button type="button" id="btnRefreshFNPBatch" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RefreshFNPBatch()"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                        <button type="button" id="btnStartProcess" class="btn btn-default btn-sm" aria-label="right Align"  ng-click="StartProcess()"><span class="glyphicon glyphicon-repeat" aria-hidden="true"></span>Finish</button>
                    </div>
                    <div ng-if="CS.IsSet(2)" style="width:100%; height:390px;" ui-grid="gridOptionsFNPBatch" ui-grid-selection ui-grid-edit ui-grid-selectable ui-grid-row-edit ui-grid-resize-columns ui-grid-cellnav class="grid"></div>
                </div>

                <fieldset style="height:10%;">
                    <legend>Action</legend>
                    <div class="col-md-12 text-right">
                        <button type="button" ng-hide="btnSave" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Save()"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true" ng-bind="SaveCaption"></span> </button>
                        <button type="button" id="btnclose" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
                    </div>
                </fieldset>
            </section>
        </div>

    </div>
</body>
</html>
<style type="text/css">
    .regionCS .form-horizontal .control-label {
        padding-top: 1px;
        font-size: 11px;
    }

    .regionCS .form-control {
        height: 22px;
        padding: 0px 4px;
        font-size: 12px;
    }

    .regionCS .col-md-12 {
        width: 100%;
        padding-right: 5px;
        padding-left: 5px;
        margin-bottom: 5px;
    }

    
    .regionCS .col-md-2 {
        width: 10%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionCS .col-md-3 {
        width: 23%;
        padding-right: 5px;
        padding-left: 5px;
    }



    .rigionDate .col-md-9 {
        width:72%;
        padding-right: 2px;
        padding-left:2px;
    }

      .rigionDate .col-md-3 {
        width:28%;
        padding-right: 2px;
        padding-left:2px;
    }

    .regionCS .btn-sm {
        padding: 2px 7px;
    }

    .regionCS .input-group-addon {
        padding: 3px 6px;
    }
     .ui-grid-cell.lightGreen {
        background-color:  #B5DA69!important ;  /*90EE90*/ /*8ab92d*/
        color: #000 !important;
        font-size:12px;
        font-weight:bold;
    }
        .ui-grid-cell.blue {
        background-color:  #f1c40f!important ;  /*90EE90*/ /*8ab92d*/
        color: #000 !important;
        font-size:12px;
        font-weight:bold;
    }
    /*.ui-grid-cell {
     background-color: #3498db !important;
  }*/

    .ui-grid-cell.ui-grid-disable-selection.ui-grid-row-header-cell {
        pointer-events: auto;
    }
</style>
<script type="text/javascript">
    var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oFNProduction =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oFNProductionConsumptions = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.FNProductionConsumptions));
    var oFNProductionBatchs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.FNProductionBatchs));
    var oFNMachineProcessList = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FNMachineProcessList));

    var FNProductionApp = angular.module('FNProductionApp', ['ngAnimate', 'ui.bootstrap','ui.grid','ui.grid.selection','ui.grid.edit', 'ui.grid.rowEdit','ui.grid.cellNav','ui.grid.resizeColumns','ms.service','uiKeyUpDown']);
    FNProductionApp.controller('FNProductionController', function ($scope,uiGridConstants, $http,$uibModal,$log,msModal,icsMethod,userSession,msGridControl) {

        debugger;
        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });

        $('.date-time-container').datetimepicker({
            format: "DD MMM YYYY hh:mm A" //'LT'
        });
        //$scope.RowSelect =  function (entity){
        //    debugger;  
        //    if(entity.FAStatus==1){
        //        $scope.btnStartHide=false;
        //    }
        //    if(entity.FAStatus==1){
        //        $scope.btnStartHide=false;
        //    }
        //}
        
        $('.number-box').icsCurrencyBox();
        oFNMachineProcessList.push({FNTPID:0,FNProcess:'--Select One--'});
        $scope.SaveCaption = "Save";

        if(sessionStorage.getItem("FNProductionHeader")=="View FN Production")
        {
            $("#divCS :input").prop('disabled', true);
            $('#btnclose').prop('disabled', false);
        }
       

        $scope.FNMachineProcessList = oFNMachineProcessList;
        $scope.FNProduction=oFNProduction;
        $scope.FNProductionConsumptions=oFNProductionConsumptions;
        $scope.FNProductionBatchs = oFNProductionBatchs;
        $scope.FNProductionConsumption =null;
        $scope.txtStartTime=$scope.txtEndTime =$scope.txtFNPBEndTime= true;
        $scope.btnRun=$scope.btnRunOut= false;
       
        $scope.ChangeTreatment = function()
        {
            if(parseInt($scope.FNProduction.FNTPID)>0)
            {
                $scope.FNProduction.FNProcessSt = ICS_FindObject($scope.FNMachineProcessList,'FNTPID',$scope.FNProduction.FNTPID).FNProcess;
            }
        }
        $scope.ChangeLot = function()
        {
            if(parseInt($scope.cboLot)>0)
            {
                $scope.LotQty= ICS_FindObject( $scope.Lots,'LotID',$scope.cboLot).YetToConsumptionQty;
            }
        }
        $scope.FNPBRowIndex=$scope.FNPConsumptionIndex =-1;$scope.bIsCellEdit = false;
        
        //FN ProductionDetail
        $scope.gridOptionsConsumption = {
            enableFullRowSelection: true,
            enableHighlighting : true,
            multiSelect: false,
            enableCellEditOnFocus: true,
            enableRowSelection: true,
            enableSelectAll: false,
            columnDefs: [
              { field: 'ProductCode', name:'Code', width:'10%',cellClass: 'text-left',enableCellEdit:false },
              { field: 'ProductName', name:'Material Name', width:'20%',cellClass: 'text-left',enableCellEdit:false },
              { field: 'LotNo', name: 'Lot', width: '10%',align:'left', cellClass: 'text-left',enableSorting: false,enableCellEdit:false},
              { field: 'MUName', name: 'Unit', width: '8%',align:'left',  enableSorting: false,enableCellEdit:false },
              { field: 'LotBalance', name: 'Lot Qty', width: '10%',  cellFilter: 'number:2', cellClass: 'text-right',  enableSorting: false,enableCellEdit:false},
              { field: 'YetToConsumption', name: 'Yet To Consumption', width: '15%',  cellFilter: 'number:2', cellClass: 'text-right',  enableSorting: false,enableCellEdit:false},
              { field: 'Qty', name: 'Qty', width: '15%',  cellFilter: 'number:2', cellClass: 'text-right',  enableSorting: false,enableCellEdit:true }
            ],
            data:oFNProductionConsumptions,
            onRegisterApi: function (gridApi) {
                $scope.gridApiFNPConsumptions = gridApi;
                gridApi.edit.on.afterCellEdit($scope,
                 function (rowEntity, colDef, newValue, oldValue)
                 {
                     debugger;
                     rowEntity.Qty =rowEntity.Qty==null?0:rowEntity.Qty;
                     $scope.FNPConsumptionIndex = $scope.gridOptionsConsumption.data.indexOf(rowEntity);
                     if(parseFloat(rowEntity.YetToConsumption)<parseFloat(rowEntity.Qty))
                     {
                         alert("Qty Can't Greater than."+parseFloat(rowEntity.YetToConsumption));
                         rowEntity.Qty = oldValue;
                         return rowEntity;
                     }
                     $scope.SaveFNPConsumption(rowEntity,true);
                     return rowEntity;
                 });
            }
        };


        //packges
        $scope.gridOptionsFNPBatch = {
            enableFullRowSelection: true,
            enableHighlighting : true,
            //enableRowHeaderSelection: false,
            enableCellEditOnFocus: true,
            multiSelect: false,
            enableRowSelection: true,
            enableSelectAll: false,

            //enableFullRowSelection: true,
            //enableHighlighting : true,
            //enableRowHeaderSelection: false,
            //enableCellEditOnFocus: true,
            //multiSelect: false,
            //enableRowSelection: true,
            //enableSelectAll: false,
            columnDefs: [
               {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false , cellClass: function(grid, row, col) {return (row.entity.EndDateTimeSt!='-')?"lightGreen": "blue"} },
              { field: 'BatchNo', name:'Batch No', width:'10%',  cellClass: 'text-left', enableCellEdit:false, cellClass: function(grid, row, col) {return (row.entity.EndDateTimeSt!='-')?"lightGreen": "blue"} },
              { field: 'Dispo No', name:'Exe No', width:'10%', cellClass:'text-left',enableCellEdit:false, cellClass: function(grid, row, col) {return (row.entity.EndDateTimeSt!='-')?"lightGreen": "blue"} },
              { field: 'StartDateTimeSt', name:'Start Time', width:'13%',enableCellEdit:false ,cellClass: function(grid, row, col) {return (row.entity.EndDateTimeSt!='-')?"lightGreen": "blue"} },
              { field: 'EndDateTimeSt', name:'End Time', width:'13%',enableCellEdit:false ,cellClass: function(grid, row, col) {return (row.entity.EndDateTimeSt!='-')?"lightGreen": "blue"} },
              { field: 'StartWidth', name:'Start Width', width:'10%', cellFilter: 'number:0',  enableCellEdit:true },
              { field: 'EndWidth', name:'End Width', width:'10%', cellFilter: 'number:0',  enableCellEdit:true },
              { field: 'StartBatcherName', name:'Start Batcher',  cellClass: 'text-left',  width:'10%',enableCellEdit:false,cellClass: function(grid, row, col) {return (row.entity.EndDateTimeSt!='-')?"lightGreen": "blue"} },
              { field: 'EndBatcherName', name:'End Batcher',  cellClass: 'text-left',  width:'10%',enableCellEdit:false ,cellClass: function(grid, row, col) {return (row.entity.EndDateTimeSt!='-')?"lightGreen": "blue"}},
              { field: 'StartQty', name:'Start Qty', width:'10%', cellFilter: 'number:0', cellClass: 'text-right',  enableCellEdit:true },
              { field: 'EndQty', name:'End Qty', width:'10%', cellFilter: 'number:0', cellClass: 'text-right',  enableCellEdit:true },
              { field: 'MachineSpeed', name: 'Machine Speed', width: '12%',align:'left',  cellFilter: 'number:0', cellClass: 'text-right',  enableSorting: false,enableCellEdit:true  },
              { field: 'FlameIntensity', name: 'Flame Intensity', width: '12%',align:'left',  cellFilter: 'number:0', cellClass: 'text-right',  enableSorting: false,enableCellEdit:true  },
              { field: 'FlamePosition', name: 'Position', width: '8%',align:'left',  cellFilter: 'number:0', cellClass: 'text-right',  enableSorting: false,enableCellEdit:true  },
              { field: 'Pressure_Bar', name: 'Pressure(Bar)', width: '10%',align:'left',  cellFilter: 'number:2', cellClass: 'text-right',  enableSorting: false,enableCellEdit:true  },
              { field: 'Temp_C', name: 'Tempreature(°C)', width: '12%',align:'left',  cellFilter: 'number:2', cellClass: 'text-right',  enableSorting: false,enableCellEdit:true  },
              { field: 'Remark', name: 'Remark', width: '8%',align:'left', cellClass: 'text-left',  enableSorting: false,enableCellEdit:true  }
            ],
            data:$scope.FNProductionBatchs,
            onRegisterApi: function (gridApi) {
                $scope.gridApiFNPBatchs=gridApi;
                $scope.gridApiFNPBatchs.selection.on.rowSelectionChanged($scope, function (row)
                {
                    debugger;
                    if(row.entity.EndDateTimeSt!='-')
                    {   
                       //$scope.gridApi.selection.unSelectRow(row.entity);
                        alert("Sorry,Already Complete This Batch");
                        return;
                    }
                    $scope.FNProductionBatch = row.entity;
                    $scope.BatchNo = row.entity.BatchNo;
                    $scope.ExecNo = row.entity.FNExONo;
                    $scope.StartBatcherName = row.entity.StartBatcherName;
                    $scope.EndBatcherName = row.entity.EndBatcherName;
                    $scope.txtFNPBQty = row.entity.StartQty;
                    $scope.txtFNBStartTime = row.entity.StartDateTimeSt;
                    $scope.txtFNBEndTime = row.entity.EndDateTimeSt;
                    $scope.txtFNPBEndTime= false;//Enabled
                    $scope.FNPBRowIndex = $scope.gridOptionsFNPBatch.data.indexOf(row.entity);
                });

                gridApi.edit.on.afterCellEdit($scope,
                function (rowEntity, colDef, newValue, oldValue)
                {
                    debugger;     
                    if(rowEntity.EndDateTimeSt!='-')
                    {
                  
                        alert("Sorry,Already Complete This Batch");
                        return;
                    }
                   
                    rowEntity.StartWidth =rowEntity.StartWidth==null?0:rowEntity.StartWidth;
                    rowEntity.EndWidth =rowEntity.EndWidth==null?0:rowEntity.EndWidth;
                    rowEntity.StartQty =rowEntity.StartQty==null?0:rowEntity.StartQty;
                    rowEntity.EndQty =rowEntity.EndQty==null?0:rowEntity.EndQty;
                    rowEntity.MachineSpeed =rowEntity.MachineSpeed==null?0:rowEntity.MachineSpeed;
                    rowEntity.FlameIntensity =rowEntity.FlameIntensity==null?0:rowEntity.FlameIntensity;
                    rowEntity.FlamePosition =rowEntity.FlamePosition==null?0:rowEntity.FlamePosition;
                    rowEntity.Pressure_Bar =rowEntity.Pressure_Bar==null?0:rowEntity.Pressure_Bar;
                    rowEntity.Temp_C =rowEntity.Temp_C==null?0:rowEntity.Temp_C;
                    rowEntity.Remark =rowEntity.Remark==null?'':rowEntity.Remark;
                    $scope.FNPBRowIndex = $scope.gridOptionsFNPBatch.data.indexOf(rowEntity);
                    $scope.bIsCellEdit = true;
                    rowEntity =$scope.SaveFNPBatch(rowEntity,true, false);
                    return rowEntity;
                });
            }
        };


        //Run 
        $scope.Run = function()
        {
            if($scope.FNProduction.FNProductionID<=0)
            {
                alert("Without Save FN Production Can't Run.");
                return;
            }
            $.icsProgressBar(true);
            var oFNProduction = {FNProductionID:$scope.FNProduction.FNProductionID,StartDateTime:icsdatetimeformat(new Date($("#txtStartTime").val())) };
            $http.post(_sBaseAddress+'/FNProduction/Run',JSON.stringify(oFNProduction)).then(
                               function (response)
                               {
                                   $.icsProgressBar(false);
                                   alert("Successfully Started.");
                                   $scope.FNProduction = JQuery.parseJSON(response.data);
                                   $scope.btnRun=false;//hide button
                                   $scope.txtStartTime= true;//Disabled
                               },
                                 function (response) { alert(jQuery.parseJSON(response.data).Message);}
                           );

           
        }
        //Out
        $scope.RunOut  = function()
        {
            var oFNPBatchList = $scope.gridOptionsFNPBatch.data;
            if(oFNPBatchList.length<=0)
            {
                alert("Witout Batch Production Can't Finished.");
                return;
            }
            if(ICS_IsExist(oFNPBatchList,'EndDateTimeSt','-'))
            {
                alert("Single Batch Exist Which is not Finished.");
            }
            if (!confirm("Confirm to Finished?")) return ;
            $.icsProgressBar(true);
            var oFNProduction = {FNProductionID:$scope.FNProduction.FNProductionID,EndDateTime:icsdatetimeformat(new Date($("#txtEndTime").val())) };
            $http.post(_sBaseAddress+'/FNProduction/RunOut',JSON.stringify(oFNProduction)).then(
                               function (response)
                               {
                                   $.icsProgressBar(false);
                                   $scope.btnRunOut = false;
                                   
                                   $scope.btnSave = $scope.diFNProduction = true;
                                   alert("Successfully Finished.");
                                   var oFNProduction =jQuery.parseJSON(response.data);
                                   var oFNProductions = sessionStorage.getItem("FNProductions");
                                   var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                                   if (oFNProductions != null)
                                   {
                                       oFNProductions = jQuery.parseJSON(oFNProductions);
                                   }
                                   else {
                                       oFNProductions = [];
                                   }
                                   if (nIndex != -1)
                                   {
                                       oFNProductions[nIndex] = oFNProduction;
                                   }
                                   else {
                                       sessionStorage.setItem("SelectedRowIndex", oFNProductions.length);
                                       oFNProductions.push(oFNProduction);
                                   }
                                   sessionStorage.setItem("FNProductions", JSON.stringify(oFNProductions));
                                   window.location.href = sessionStorage.getItem("BackLink");
                               },
                                 function (response) { alert(jQuery.parseJSON(response.data).Message);}
                           );
           
        }

        //search Machine
        $scope.SearchKeyDownMachine=function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtFNMachine = $.trim($scope.FNProduction.FNMachineName);
                if(txtFNMachine==""||txtFNMachine==null)
                {
                    alert("Type Machine Name and Press Enter");
                    return;
                }
                $scope.SearchMachine();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.FNProduction.FNMachineName='';
                $scope.FNProduction.FNMachineID = 0;
                $scope.FNProduction.FNTPID = 0;
                $scope.FNProduction.FNProcessSt = 'None'
                $scope.FNMachineProcessList = [];

            }
        };
        $scope.SearchMachine= function () {
            debugger;
            var oFNMachine = {
                Name: $.trim($scope.FNProduction.FNMachineName),
                CheckActiveProcess:true,
                Params:1//forEnumFNMachineType None = 0,Machine = 1,Batcher_Trolly = 2
            };
            $.icsProgressBar(true);
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FNMachine/GetFNMachines',$.param(oFNMachine), config).then(
                                function (response)
                                {
                                    debugger;
                                    $.icsProgressBar(false);
                                    var oColumns = [];
                                    var oColumn = { field: 'Code', name: 'Code',width: '15%'};oColumns.push(oColumn);
                                    oColumn = { field: 'Name', name: 'Name',width: '40%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'FreeTime', name: 'Free Time',width: '40%'};oColumns.push(oColumn);

                                    var results=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        size:'md',
                                        url:_sBaseAddress+'/Home/Modal',
                                        modalcontroller:'MachineModalCtrl',
                                        appcontroller:'FNProductionController',
                                        objs:results,
                                        multiSelect:false,
                                        pickertitle:'Machine List',
                                        searchingbyfieldName:'Name',
                                        columns:oColumns
                                    }
                                    var modalInstance=msModal.Instance(modalObj);
                                    modalInstance.result.then(function (result)
                                    {
                                        debugger;
                                        $scope.FNProduction.FNMachineName=result.Name+'['+result.Code+']';
                                        $scope.FNProduction.FNMachineID = result.FNMachineID;
                                        $scope.LoadFNMachineProcess(result.FNMachineID);

                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );
        };
        $scope.LoadFNMachineProcess= function (nFNMachineID)
        {
            if(nFNMachineID<=0)
            {
                alert("Please Pick FN Machine");
                $('#txtFNMachineName').focus();
                return;
            }
            var oFNMachineProcess = {FNMachineID:nFNMachineID};
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FNMachine/GetFNMProcessList',$.param(oFNMachineProcess), config).then(
                                function (response)
                                {
                                    var oFNMachineProcessList=jQuery.parseJSON(response.data);
                                    if(oFNMachineProcessList.length>0)
                                    {
                                        $scope.FNMachineProcessList =oFNMachineProcessList;
                                        $scope.FNProduction.FNTPID = oFNMachineProcessList[0].FNTPID;
                                        //$scope.FNProduction.FNProcess = oFNMachineProcessList[0].FNProcess;
                                    }
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );
        };


        // add , edit & Delete Consumption
        $scope.AddConsumption = function()
        {
            debugger;
            if(!$scope.ValidateInput()) return;
            if($scope.FNProductionConsumption==null || parseInt($scope.FNProductionConsumption.ProductID)<=0 )
            {
                alert("Please Pick Raw Material ");
                return;
            }
            if(ICS_IsExist($scope.gridOptionsConsumption.data,'ProductID', $scope.FNProductionConsumption.ProductID))
            {
                alert("Already Exist");
                return;
            }
            if($scope.cboMaterialUnit<=0)
            {
                alert("Please Select Unit.");
                return;
            }
            if($scope.cboLot<=0)
            {
                alert("Please Select Lot.");
                return;
            }

            if(parseFloat($scope.txtQty)<=0)
            {
                alert("Qty Should be Greater than 0.");
                return;
            }

            if(parseFloat($scope.LotQty)<parseFloat($scope.txtQty))
            {
                alert("Qty Should be less than or equal Lot Qty.");
                return;
            }
            $scope.FNProductionConsumption.MUID = $scope.cboMaterialUnit;
            $scope.FNProductionConsumption.LotID = $scope.cboLot;
            $scope.FNProductionConsumption.Qty = $scope.txtQty;
            var oFNProductionConsumption = $scope.FNProductionConsumption;
            oFNProductionConsumption.FNProduction = $scope.FNProductionRefreshObject();
            $scope.SaveFNPConsumption(oFNProductionConsumption,false);
        }
        $scope.SaveFNPConsumption = function(oFNProductionConsumption, bIsEdit)
        {
            debugger;
            if(!bIsEdit)
            {
                $.icsProgressBar(true);
            }
            $http.post(_sBaseAddress+'/FNProduction/SaveFNPConsumption',JSON.stringify(oFNProductionConsumption)).then(
                function (response)
                {
                    if(!bIsEdit)
                    {
                        $.icsProgressBar(false);
                    }
                    var oFNProductionConsumption= jQuery.parseJSON(response.data);
                    if (parseInt(oFNProductionConsumption.FNPConsumptionID)>0 && (oFNProductionConsumption.ErrorMessage==null || oFNProductionConsumption.ErrorMessage==""))
                    {
                        if(!bIsEdit)
                        {
                            $scope.gridOptionsConsumption.data.push(oFNProductionConsumption);
                            alert("Data Save Successfully!!");
                            $scope.ProductName = "";
                            $scope.Lots=  $scope.MaterialUnits = [];
                            $scope.cboLot =$scope.LotQty=$scope.txtQty = 0;
                            $scope.FNProductionConsumption = null;
                            $scope.FNProduction = oFNProductionConsumption.FNProduction;
                            $('#txtProductName').focus();
                        }else{
                            $scope.gridOptionsConsumption.data[$scope.FNPConsumptionIndex]=oFNProductionConsumption;
                        }
                        $scope.SetRunOrOut();
                    }
                    else
                    {
                        alert(oFNProductionConsumption.ErrorMessage);
                    }
                },
                    function (response) { alert(jQuery.parseJSON(response.data).Message);}
            );
        }
    
         $scope.RemoveConsumption =function ()
        {
            var oFNPC = $scope.gridApiFNPConsumptions.selection.getSelectedRows()[0];
            if(oFNPC==null || oFNPC.MaterialID<=0)
            {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex=$scope.gridOptionsConsumption.data.indexOf(oFNPC);
            if (!confirm("Confirm to Delete?")) return ;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FNProduction/DeleteFNPConsumption',$.param(oFNPC), config).then(
                                function (response)
                                {
                                    var sMessage= jQuery.parseJSON(response.data).toLowerCase();
                                    if(sMessage=='deleted')
                                    {
                                        alert("Successfully Deleted.");
                                        $scope.gridOptionsConsumption.data.splice(SelectedRowIndex,1);
                                    }
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );

        }
        $scope.RefreshConsumption = function ()
        {
            var oFNPConsumptions = $scope.gridOptionsConsumption.data;
            if(oFNPConsumptions !=null)
            {
                $scope.gridOptionsConsumption.data = oFNPConsumptions;
            }
        }

      
        $scope.SearchKeyMaterial =  function(e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                debugger;
                if($scope.FNProduction.FNTPID<=0)
                {
                    alert("Please Select Treatment");
                    return;
                }
               
               
                    var oProductBase = {
                        ProductName:$.trim($scope.ProductName),
                        Params:1//only Pre Treatment Req Product
                    };

                    $.icsProgressBar(true);
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(_sBaseAddress+'/FNRequisition/GetProductsByNameFROMFNReq',$.param(oProductBase), config).then(
                                        function (response)
                                        {
                                            debugger;
                                            var oColumns = [];
                                            var oColumn = { field: 'ProductCode', name: 'Code',width: '20%'  };oColumns.push(oColumn);
                                            oColumn = { field: 'ProductName', name: 'Product',width: '60%', enableSorting: false  };oColumns.push(oColumn);
                                            
                                            var results=response.data;
                                            var modalObj={
                                                size:'md',
                                                modalcontroller:'ModalCommonListCtrl',
                                                appcontroller:'FNProductionController',
                                                objs:results,
                                                multiSelect:false,
                                                pickertitle:'RawMaterial List',
                                                searchingbyfieldName:'ProductName',
                                                columns:oColumns
                                            }

                                            $.icsProgressBar(false);

                                            var modalInstance=msModal.Instance(modalObj);
                                            modalInstance.result.then(function (result)
                                            {
                                                debugger;
                                                if(parseInt(result.ProductID)>0)
                                                {
                                                    debugger;
                                                    $scope.ProductName  = result.ProductName;
                                                    var oFNProductionConsumption = {
                                                        FNPConsumptionID: 0,
                                                        FNProductionID : $scope.FNProduction.FNProductionID,
                                                        ProductID:result.ProductID,
                                                        LotID:0,
                                                        Qty:0,
                                                        MUID:0,
                                                        ProductCode :result.ProductCode,
                                                        ProductName :result.ProductName,
                                                        LotNo : "",
                                                        MUName : "",
                                                        FNProduction:null
                                                    };
                                                    $scope.FNProductionConsumption =oFNProductionConsumption;
                                                    //$scope.LoadUnits(result.ProductID, result.MeasurementUnitID);
                                                    $scope.LoadLots(result.ProductID);
                                                }
                                            }, function () {
                                                $log.info('Modal dismissed at: ' + new Date());
                                            });
                                        },
                                          function (response) { alert(jQuery.parseJSON(response.data).Message);}
                                    );
              
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.FNProductionConsumption =null;
                $scope.Lots=  $scope.MaterialUnits = [];
                $scope.cboLot =$scope.LotQty=$scope.txtQty = 0;
                $scope.LoadUnits(0, 0);
            }
        };
        $scope.LoadUnits = function (nProductID, nMesurementUnitID)
        {
            debugger;
            $scope.MaterialUnits = [];
            if (parseInt(nProductID)>0)
            {
                var oProduct = {ProductID:nProductID};
                var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                $http.post(_sBaseAddress+'/MeasurementUnit/GetMUs',$.param(oProduct), config).then(
                                    function (response)
                                    {
                                        var oMeasurementUnits=jQuery.parseJSON(response.data);
                                        if(oMeasurementUnits.length>0)
                                        {
                                            $scope.MaterialUnits = oMeasurementUnits;
                                            $scope.cboMaterialUnit= nMesurementUnitID;
                                        }
                                    },
                                      function (response) { alert(jQuery.parseJSON(response.data).Message);}
                                );
            }
        }
        $scope.LoadLots = function (nProductID)
        {
            debugger;
            $scope.Lots = [];
            if (parseInt(nProductID)>0)
            {
                var oPreTreatment = ICS_FindObject($scope.FNMachineProcessList,'FNTPID',$scope.FNProduction.FNTPID);
                var oPreTreatmentStock = {ProductID:nProductID,TreatmentID:1};//1 For Pre Treatment
                var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                $http.post(_sBaseAddress+'/FNRequisition/GetLots',$.param(oPreTreatmentStock), config).then(
                                    function (response)
                                    {
                                        var oLots=jQuery.parseJSON(response.data);
                                        if(oLots.length>0)
                                        {
                                            $scope.Lots = oLots;
                                        }
                                    },
                                      function (response) { alert(jQuery.parseJSON(response.data).Message);}
                                );
            }
        }

        //FN Production Batch Control
        $scope.SearchKeyBatch=function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtBatchNo = $.trim($scope.BatchNo);
                var oFNBatch = {
                    Params:txtBatchNo+'~false~'+icsdateformat(new Date())+'~'+icsdateformat(new Date())+'~',
                    bIsPlanWise:true
                };
                $.icsProgressBar(true);
                var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                $http.post(_sBaseAddress+'/FNBatch/Gets',$.param(oFNBatch), config).then(
                                    function (response)
                                    {
                                        debugger;
                                        var oColumns = [];
                                        var oColumn = { field: 'BatchNo', name: 'BatchNo',width: '20%'};oColumns.push(oColumn);
                                        oColumn = { field: 'FNExONo', name: 'Dispo No',width: '20%',enableSorting: false};oColumns.push(oColumn);
                                        oColumn = { field: 'BuyerName', name: 'Buyer',width: '40%',enableSorting: false};oColumns.push(oColumn);
                                        oColumn = { field: 'YetToOutQty', name: 'Qty',width: '15%'};oColumns.push(oColumn);
                                        var results=jQuery.parseJSON(response.data);
                                        var modalObj={
                                            size:'md',
                                            url:_sBaseAddress+'/Home/Modal',
                                            modalcontroller:'MachineModalCtrl',
                                            appcontroller:'FNProductionController',
                                            objs:results,
                                            multiSelect:false,
                                            pickertitle:'Batch List',
                                            searchingbyfieldName:'BatchNo',
                                            columns:oColumns
                                        }
                                        $.icsProgressBar(false);
                                        var modalInstance=msModal.Instance(modalObj);
                                        modalInstance.result.then(function (result)
                                        {
                                            debugger;
                                            var oFNProductionBatch = {
                                                FNPBatchID:0,
                                                FNProductionID:$scope.FNProduction.FNProductionID,
                                                FNBatchID:result.FNBatchID,
                                                StartQty:result.YetToFNPBatchQty,
                                                EndQty:0,
                                                StartDateTime:null,
                                                StartDateTimeSt:'-',
                                                EndDateTime:null,
                                                EndDateTimeSt:'-',
                                                StartBatcherID:0,
                                                EndBatcherID:0,
                                                MachineSpeed:100,
                                                StartWidth:result.FabricWidth,
                                                EndWidth:0,
                                                FlameIntensity:0,
                                                FlamePosition:0,
                                                Pressure_Bar:0,
                                                Temp_C:0,
                                                Remark:"",
                                                FNProduction:null
                                            };
                                            $scope.BatchNo=result.BatchNo;
                                            $scope.ExecNo=result.FNExONo;
                                            $scope.txtFNPBQty = result.Qty;
                                            $scope.FNProductionBatch = oFNProductionBatch;
                                            $("#txtFNBStartTime").val(icsdatetimeformat(new Date()));
                                            $('#txtStartBatcherName').focus();
                                        }, function () {
                                            $log.info('Modal dismissed at: ' + new Date());
                                        });
                                    },
                                      function (response) { alert(jQuery.parseJSON(response.data).Message);}
                                );

            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.BatchNo='';
                $scope.txtFNPBQty = 0;
                $scope.FNProductionBatch.FNProductionID = 0;
                $scope.FNProductionBatch.FNBatchID = 0;
                $scope.FNProductionBatch.StartQty = 0;
                $scope.FNProductionBatch.StartWidth = 0;
            }
        };
        $scope.SearchKeyFNExecution=function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtExecNo = $.trim($scope.ExecNo);
                var oFNBatch = {
                    Params:'~false~'+icsdateformat(new Date())+'~'+icsdateformat(new Date())+'~'+txtExecNo,
                    bIsPlanWise:false
                };
                $.icsProgressBar(true);
                var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                $http.post(_sBaseAddress+'/FNBatch/Gets',$.param(oFNBatch), config).then(
                                    function (response)
                                    {
                                        debugger;
                                        var oColumns = [];
                                        var oColumn = { field: 'BatchNo', name: 'BatchNo',width: '20%'};oColumns.push(oColumn);
                                        oColumn = { field: 'FNExONo', name: 'Dispo No',width: '20%',enableSorting: false};oColumns.push(oColumn);
                                        oColumn = { field: 'BuyerName', name: 'Buyer',width: '40%',enableSorting: false};oColumns.push(oColumn);
                                        oColumn = { field: 'Qty', name: 'Qty(Batch)',width: '15%'};oColumns.push(oColumn);
                                        //oColumn = { field: 'YetToFNPBatchQty', name: 'Yet to Production',width: '15%'};oColumns.push(oColumn);
                                        var results=jQuery.parseJSON(response.data);
                                        var modalObj={
                                            size:'md',
                                            url:_sBaseAddress+'/Home/Modal',
                                            modalcontroller:'MachineModalCtrl',
                                            appcontroller:'FNProductionController',
                                            objs:results,
                                            multiSelect:false,
                                            pickertitle:'Batch List',
                                            searchingbyfieldName:'BatchNo',
                                            columns:oColumns
                                        }
                                        $.icsProgressBar(false);
                                        var modalInstance=msModal.Instance(modalObj);
                                        modalInstance.result.then(function (result)
                                        {
                                            debugger;
                                            var oFNProductionBatch = {
                                                FNPBatchID:0,
                                                FNProductionID:$scope.FNProduction.FNProductionID,
                                                FNBatchID:result.FNBatchID,
                                                StartQty:result.YetToFNPBatchQty,
                                                EndQty:0,
                                                StartDateTime:null,
                                                StartDateTimeSt:'-',
                                                EndDateTime:null,
                                                EndDateTimeSt:'-',
                                                StartBatcherID:0,
                                                EndBatcherID:0,
                                                MachineSpeed:100,
                                                StartWidth:result.FabricWidth,
                                                EndWidth:0,
                                                FlameIntensity:0,
                                                FlamePosition:0,
                                                Pressure_Bar:0,
                                                Temp_C:0,
                                                Remark:"",
                                                FNProduction:null
                                            };
                                            $scope.BatchNo=result.BatchNo;
                                            $scope.ExecNo=result.FNExONo;
                                            $scope.txtFNPBQty = result.Qty;
                                            $scope.FNProductionBatch = oFNProductionBatch;
                                            $("#txtFNBStartTime").val(icsdatetimeformat(new Date()));
                                            $('#txtStartBatcherName').focus();
                                        }, function () {
                                            $log.info('Modal dismissed at: ' + new Date());
                                        });
                                    },
                                      function (response) { alert(jQuery.parseJSON(response.data).Message);}
                                );

            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.BatchNo='';
                $scope.txtFNPBQty = 0;
                $scope.FNProductionBatch.FNProductionID = 0;
                $scope.FNProductionBatch.FNBatchID = 0;
                $scope.FNProductionBatch.StartQty = 0;
                $scope.FNProductionBatch.StartWidth = 0;

            }
        };

        $scope.SearchKeyStartBatcher=function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtStartBatcherName = $.trim($scope.StartBatcherName);
                $scope.SearchBatcher(true,txtStartBatcherName);
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.StartBatcherName='';
                $scope.FNProductionBatch.StartBatcherID = 0;
            }
        };
        $scope.SearchKeyEndBatcher=function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtEndBatcherName = $.trim($scope.EndBatcherName);

                $scope.SearchBatcher(false,txtEndBatcherName);
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.EndBatcherName='';
                $scope.FNProductionBatch.EndBatcherID = 0;
            }
        };
        $scope.SearchBatcher= function (bIsStartBatcher,sBatcherName ) {

            var oFNMachine = {
                Name: $.trim(sBatcherName),
             
                Params:"2,3"//Batcher = 2,Trolly=3
            };
            $.icsProgressBar(true);
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FNMachine/GetFNBatcherTrolly',$.param(oFNMachine), config).then(
                                function (response)
                                {
                                    debugger;
                                    var oColumns = [];
                                    var oColumn = { field: 'Code', name: 'Code',width: '15%'};oColumns.push(oColumn);
                                    oColumn = { field: 'Name', name: 'Name',width: '40%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'FNMachineTypeSt', name: 'Type',width: '30%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'FreeTime', name: 'Free Time',width: '15%'};oColumns.push(oColumn);

                                    var results=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        size:'md',
                                        url:_sBaseAddress+'/Home/Modal',
                                        modalcontroller:'MachineModalCtrl',
                                        appcontroller:'FNProductionController',
                                        objs:results,
                                        multiSelect:false,
                                        pickertitle:'Machine List',
                                        searchingbyfieldName:'Name',
                                        columns:oColumns
                                    }
                                    $.icsProgressBar(false);
                                    var modalInstance=msModal.Instance(modalObj);
                                    modalInstance.result.then(function (result)
                                    {
                                        debugger;
                                        if(bIsStartBatcher)
                                        {
                                            $scope.StartBatcherName = result.Name+'['+result.Code+']';
                                            $scope.FNProductionBatch.StartBatcherID = result.FNMachineID;
                                            $('#txtEndBatcherName').focus();

                                        }else
                                        {
                                            $scope.EndBatcherName = result.Name+'['+result.Code+']';
                                            $scope.FNProductionBatch.EndBatcherID = result.FNMachineID;
                                            $('#txtFNBStartTime').focus();
                                        }

                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );
        };
        $scope.StartProcess = function()
        {
            debugger;
            if($('#txtFNBEndTime').val()=="" || $('#txtFNBEndTime').val()=="-")
            {
                alert("Please Enter the End Time");
                $('#txtFNBEndTime').focus();
                return;
            }
            
            $scope.AddFNPBatch();

        };
        $scope.AddFNPBatch = function()
        {
            debugger;
            if(!$scope.ValidateInput()) return;
            if($scope.FNProduction.StartDateTimeSt=="-")
            {
                alert("Sorry, Without Run Can't Add FN Batch");
                return;
            }
            if($scope.FNProductionBatch.EndDateTimeSt!="-" && ($scope.FNProductionBatch.EndDateTimeSt!="" || $scope.FNProductionBatch.EndDateTimeSt!=null))
            {
                alert("Sorry, Already Complete Selected Batch");
                return;
            }
            if($scope.FNProductionBatch==null || parseInt($scope.FNProductionBatch.FNBatchID)<=0 )
            {
                alert("Please Pick Batch");
                return;
            }
            if(parseInt($scope.FNPBRowIndex)==-1)
            {
                var oFNPBatchList = $scope.gridOptionsFNPBatch.data;
                if(ICS_IsExist(oFNPBatchList,'EndDateTimeSt','-'))
                {
                    alert("Sorry, Last Batch Yet not Finished. Please Complete Last Batch After that Add more.");
                    return;
                }
            }
            if($scope.FNProductionBatch.StartBatcherID<=0)
            {
                alert("Please Pick Start Batch.");
                return;
            }

           if(parseFloat($scope.txtFNPBQty)<=0)
            {
                alert("Qty Should be Greater than 0.");
                return;
            }
           $scope.FNProductionBatch.StartQty = $scope.txtFNPBQty;
           if(parseFloat($scope.FNProductionBatch.EndQty)<=0)
           {
               $scope.FNProductionBatch.EndQty = $scope.FNProductionBatch.StartQty;
           }
           if(parseFloat($scope.FNProductionBatch.EndWidth)<=0)
           {
                $scope.FNProductionBatch.EndWidth = $scope.FNProductionBatch.StartWidth;
           }
            $scope.FNProductionBatch.StartDateTime = icsdatetimeformat(new Date($("#txtFNBStartTime").val()));
            if(parseInt($scope.FNPBRowIndex)!=-1)//for Edit
            {
        
                if($("#txtFNBEndTime").val()!="-")
                {
                    if(parseFloat($scope.FNProductionBatch.EndQty)<=0)
                    {
                        alert("End Qty Should be Greater than 0.");
                        return;
                    }
                    
                    if(parseInt($scope.FNProductionBatch.EndBatcherID)<=0)
                    {
                        alert("Sorry, There is No End Batcher. Please Pick Batcher.");
                        return;
                    }
                    if(new Date($scope.FNProductionBatch.StartDateTimeSt)>new Date($("#txtFNBEndTime").val()))
                    {
                        alert("Sorry, End time Should be greater than Start Time.");
                        return;
                    }
                }

                $scope.FNProductionBatch.EndDateTime = icsdatetimeformat(new Date($("#txtFNBEndTime").val()));
            }
            var oFNProductionBatch = $scope.FNProductionBatch;
            oFNProductionBatch.FNProduction = $scope.FNProductionRefreshObject();
            $scope.SaveFNPBatch(oFNProductionBatch,false, true);

        };
        $scope.SaveFNPBatch = function(oFNProductionBatch, bIsGridEdit, bIsShowMessage)
        {
            if(parseInt(oFNProductionBatch.StartBatcherID)===parseInt(oFNProductionBatch.EndBatcherID))
            {
                alert("Sorry, Start Batch & End Batch Can't Same.");
                return;
            }
            //$.icsProgressBar(true);
            $http.post(_sBaseAddress+'/FNProduction/SaveFNPBatch',JSON.stringify(oFNProductionBatch)).then(
                function (response)
                {
                    //$.icsProgressBar(false);
                    var oFNProductionBatch= jQuery.parseJSON(response.data);
                    if (parseInt(oFNProductionBatch.FNPBatchID)>0 && (oFNProductionBatch.ErrorMessage==null || oFNProductionBatch.ErrorMessage==''))
                    {
                        if(bIsShowMessage)
                        {
                            alert("Data Save Successfully!!");
                        }
                        if(parseInt($scope.FNPBRowIndex)==-1)
                        {
                            $scope.gridOptionsFNPBatch.data.push(oFNProductionBatch);
                            $scope.BatchNo = "";
                            $('#txtBatchNo').focus();
                        }else{
                           
                            if($scope.bIsCellEdit)
                            {
                                $scope.bIsCellEdit = false;
                                return oFNProductionBatch;
                            }else
                            {
                                $scope.gridOptionsFNPBatch.data[$scope.FNPBRowIndex]=oFNProductionBatch;
                            }
                        } 

                        $scope.FNProductionBatch = null;
                        $scope.FNProduction = oFNProductionBatch.FNProduction;
                        $scope.BatchNo=$scope.ExecNo=$scope.StartBatcherName = $scope.EndBatcherName = '';
                        $("#txtFNBStartTime").val(icsdatetimeformat(new Date()));
                        $("#txtFNBEndTime").val('');
                        $scope.txtFNPBQty = 0;
                        $scope.FNPBRowIndex = -1;
                        //$scope.txtFNPBEndTime= true;//disabled
                        $scope.SetRunOrOut();
                    }
                    else
                    {
                        alert(oFNProductionBatch.ErrorMessage);
                    }
                },
                    function (response) { alert(jQuery.parseJSON(response.data).Message);}
            );
        }
        $scope.ReProcessFNPBatch = function()
        {

            var oFNPBatchList = $scope.gridOptionsFNPBatch.data;
            if(ICS_IsExist(oFNPBatchList,'EndDateTimeSt','-'))
            {
                alert("Sorry, Last Batch Yet not Finished. Please Complete Last Batch After that Add more.");
                return;
            }
            var oFNProductionBatch = {};
            $.icsProgressBar(true);
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FNProduction/GetReProcessBatches',$.param(oFNProductionBatch), config).then(
                                function (response)
                                {
                                    var oColumns = [];
                                    var oColumn = { field: 'BatchNo', name: 'Batch No',width: '18%'  };oColumns.push(oColumn);
                                    oColumn = { field: 'FNExONo', name: 'Dispo No',width: '15%', enableSorting: false  };oColumns.push(oColumn);
                                    oColumn =  { field: 'EndBatcherName', name:'Start Batcher',cellClass: 'text-left', width:'20%' };oColumns.push(oColumn);
                                    oColumn =  { field: 'EndQty', name:'Start Qty',cellClass: 'text-right', width:'20%' };oColumns.push(oColumn);
                                    oColumn =  { field: 'EndWidth', name:'Start Width',cellClass: 'text-right', width:'18%' };oColumns.push(oColumn);
                                            
                                    var results= jQuery.parseJSON(response.data);
                                    if(results.length<=0)
                                    {
                                        alert("Data Not Found");
                                        return;
                                    }
                                    var modalObj={
                                        size:'md',
                                        modalcontroller:'ModalCommonListCtrl',
                                        appcontroller:'FNProductionController',
                                        objs:results,
                                        multiSelect:false,
                                        pickertitle:'Batch List',
                                        searchingbyfieldName:'BatchNo',
                                        columns:oColumns
                                    }

                                    $.icsProgressBar(false);
                                    var modalInstance=msModal.Instance(modalObj);
                                    modalInstance.result.then(function (result)
                                    {
                                        debugger;
                                        if(parseInt(result.FNPBatchID)>0)
                                        {
                                            debugger;
                                            var oFNProductionBatch = {
                                                FNPBatchID:0,
                                                FNProductionID:$scope.FNProduction.FNProductionID,
                                                FNBatchID:result.FNBatchID,
                                                Ref_FNPBatchID:result.FNPBatchID,
                                                StartQty:result.EndQty,
                                                EndQty:0,
                                                StartDateTime:result.EndDateTime,
                                                StartDateTimeSt:result.EndDateTimeSt,
                                                EndDateTime:null,
                                                EndDateTimeSt:'-',
                                                StartBatcherID:result.EndBatcherID,
                                                EndBatcherID:0,
                                                MachineSpeed:result.MachineSpeed,
                                                StartWidth:result.EndWidth,
                                                EndWidth:0,
                                                FlameIntensity:result.FlameIntensity,
                                                FlamePosition:result.FlamePosition,
                                                Pressure_Bar:result.Pressure_Bar,
                                                Temp_C:result.Temp_C,
                                                Remark:"",
                                                FNProduction:$scope.FNProductionRefreshObject()
                                            };
                                            $scope.SaveFNPBatch(oFNProductionBatch,false,true);

                                        }
                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );

        }
        $scope.DeleteFNPBatch =function ()
        {
            var oFNProductionBatch = $scope.gridApiFNPBatchs.selection.getSelectedRows()[0];
            if(oFNProductionBatch==null || oFNProductionBatch.FNBatchID<=0)
            {
                alert("Select At least One item !");
                return;
            }
            if(oFNProductionBatch.EndDateTimeSt!='-')
            {
                alert("Sorry, Already complete this Batch.");
                return;
            }
            var SelectedRowIndex=$scope.gridOptionsFNPBatch.data.indexOf(oFNProductionBatch);
            if (!confirm("Confirm to Delete?")) return ;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FNProduction/DeleteFNPBatch',$.param(oFNProductionBatch), config).then(
                                function (response)
                                {
                                    var sMessage= jQuery.parseJSON(response.data).toLowerCase();
                                    if(sMessage=='deleted')
                                    {
                                        alert("Successfully Deleted.");
                                        $scope.gridOptionsFNPBatch.data.splice(SelectedRowIndex,1);
                                    }
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );
        }
        $scope.RefreshFNPBatch = function ()
        {
            var oFNProductionPackages = $scope.gridOptionsFNPBatch.data;
            if(oFNProductionPackages.length>0)
            {
                $scope.gridOptionsFNPBatch.data = $scope.gridOptionsFNPBatch.data;
                $scope.SetTotal();
            }
        }


        $scope.Save = function ()
        {
            //debugger;
            if(!$scope.ValidateInput()) return;
            var oFNProduction = $scope.FNProductionRefreshObject();
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/FNProduction/Save",
                traditional: true,
                data:  JSON.stringify(oFNProduction),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    var oFNProduction= jQuery.parseJSON(data);
                    if (oFNProduction.ErrorMessage=="" || oFNProduction.ErrorMessage==null)
                    {
                        alert("Data Save Successfully!!");
                        var oFNProductions = sessionStorage.getItem("FNProductions");
                        var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        if (oFNProductions != null)
                        {
                            oFNProductions = jQuery.parseJSON(oFNProductions);
                        }
                        else {
                            oFNProductions = [];
                        }
                        if (nIndex != -1)
                        {
                            oFNProductions[nIndex] = oFNProduction;
                        }
                        else {
                            sessionStorage.setItem("SelectedRowIndex", oFNProductions.length);
                            oFNProductions.push(oFNProduction);
                        }
                        sessionStorage.setItem("FNProductions", JSON.stringify(oFNProductions));
                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                    else
                    {
                        alert(oFNProduction.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });

        }
        $scope.ValidateInput = function ()
        {
            //debugger;
            if(parseInt($scope.FNProduction.FNMachineID) <=0) { alert("Please Pick Machine!"); return false; }
            if($scope.FNProduction.FNTPID<=0) { alert("Please Select FN Treatement Process"); return false; }
            if((new Date($("#txtStartTime").val())> new Date($("#txtEndTime").val())))
            {
                msModal.Message({headerTitle : '', bodyText:'End Date Should be Greater than Start Date', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            return true;
        }
        $scope.FNProductionRefreshObject = function ()
        {
            debugger;
            var oFNProduction = $scope.FNProduction;
            oFNProduction.IssueDate = new Date($scope.FNProduction.IssueDate);
            oFNProduction.StartDateTime = icsdatetimeformat(new Date($("#txtStartTime").val()));
            oFNProduction.EndDateTime= icsdatetimeformat(new Date($("#txtEndTime").val()));
            return oFNProduction;
        }

        $scope.SetRunOrOut = function()
        {
            debugger;
            if(parseInt($scope.FNProduction.FNProductionID)>0 && $scope.FNProduction.StartDateTimeSt==="-")
            {
                $scope.btnRun=true;
                $scope.txtStartTime= false;//Enabled
                $scope.FNProduction.StartDateTimeSt = icsdatetimeformat(new Date());
            }else if(parseInt($scope.FNProduction.FNProductionID)>0 && $scope.gridOptionsFNPBatch.data.length>0 && $scope.FNProduction.StartDateTimeSt!="-" && $scope.FNProduction.EndDateTimeSt==="-" )
            {
                $scope.btnRunOut= true;
                $scope.txtEndTime= false;//Enabled
                $scope.FNProduction.EndDateTimeSt = icsdatetimeformat(new Date());
            }else if($scope.FNProduction.EndDateTimeSt!="-")//Already Run OUt
            {
                $scope.btnSave =$scope.diFNProduction =true;
            }
        }
        $scope.SetRunOrOut();
        $scope.Close=function ()
        {
            window.location.href = sessionStorage.getItem("BackLink");
        };

        //TAb selection
        this.tab = 1;
        this.SetTab = function (tabId)
        {
            this.tab = tabId;
        }
        this.IsSet = function (tabid)
        {
            return this.tab === tabid;
        }
    });


</script>
