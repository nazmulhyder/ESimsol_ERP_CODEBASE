@model IEnumerable<ESimSol.BusinessObjects.PerformanceIncentiveMember>
@{
    ViewBag.Title = "Performance Incentive Member";
}

<div style="margin-left:0px;width:100%; height:100%" class="menuMainCollectionTable">

    <table id="tblPIMembers" title="Performance Incentive Member List" class="easyui-datagrid" style="width:100%; height:92%" fitcolumns="false" rownumbers="true" pagination="fasle" singleselect="true" selectoncheck="false" checkonselect="false" autorowheight="false" toolbar="#toolbar">
        <thead>
            <tr>
                <th data-options="field:'Selected',checkbox:true"></th>
                <th field="EmployeeCode" width="150" align="left">Code</th>
                <th field="EmployeeName" width="150" align="left">Name</th>
                <th field="PIName" width="100" align="left">PI</th>
                <th field="Rate" width="150" align="left">Rate</th>
                <th field="InactiveByName" width="200" align="left">InActive By</th>
                <th field="ApproveByName" width="200" align="left">Approve By</th>
            </tr>
        </thead>
    </table>

    <div>
        <input id="chkRange_Colection" type="checkbox" />Range
        <label id="lblRange1_Colection">
            <input id="txtFrom_Colection" type="text" style="width:40px" />&nbsp; To &nbsp;
        </label>
        <label id="lblRange2_Colection">
            <input id="txtTo_Colection" type="text" style="width:40px" />
        </label>
        &nbsp; &nbsp;
        <label id="lblcount_Colection"></label>
        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next_Collection()">Next</a>
    </div>

    <div id="toolbar" style="height:auto;">
        <table style="width:100%">
            <tr style="width:100%">
                <td style="width:100%">
                    <input id="txtEmployee" style="width:120px;" type="text" placeholder="Type Code & Enter" />
                    <a id="btnEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                    <a id="btnCEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
                    <select id="cboPIScheme" style="width:15%"></select>
                    <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="Search()" ></a>
                    <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddPIMember()">New</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="Delete()">Delete</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="ChangeActiveStatus()">InActive</a>
                    <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Approve</a>
                </td>
            </tr>
            <tr style="width:100%">
                <td style="width:100%">
                    @using (Html.BeginForm("View_PIMembers", "PerformanceIncentive", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <table style="width:100%;">
                            <tr style="width:100%;">
                                <td style="width:100%;text-align:left;">
                                    <input type="file" id="filePIMs" name="filePIMs" />
                                    <input type="submit" id="btnImportPIMXL" value="Import" class="icon-up PrintList" style="margin-top: 4px;" />
                                </td>
                            </tr>
                        </table>
                    }
                </td>
            </tr>
    </table>
    </div>

    <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="locationtree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:175px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Gender :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboGender" class="selection-search cboReset">
                                <option value="0">None</option>
                                <option value="1">Male</option>
                                <option value="2">Female</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 65px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 45px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 50px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 45px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 50px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 425px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
            </div>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

</div>

<style>
    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 305px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 259px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>

<script type="text/javascript">
    var _oPIMembers=[];
    var _sBaseAddress="";
    var _sPIMemberHeader="";
    var _sFeedBack=null;

    var _sDepartmentNames = "";
    var _sDepartmentIds = "";
    var _sDesignationNames = "";
    var _sDesignationIds = "";
    var _sSalarySchemeIDs = "";

    var _nLastEmployeeID = 0;
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];

    var _sLocationID = "";
    var _oPIs=[];
    var _sEmployeeIDs="";

    var _nLastPIMemberID = 0;

    $(document).ready(function () {

        _oPIMembers =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _sFeedBack=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FeedBack));

        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _oPIs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.PIs));

        var oPIMembers =sessionStorage.getItem("PIMembers");
        _sPIMemberHeader=sessionStorage.getItem("PIMemberHeader");

        if(_oPIs != null)
        {
            $("#cboPIScheme").icsLoadCombo({
                List: _oPIs,
                OptionValue: "PIID",
                DisplayText: "Name",
                InitialValue:"--PI Scheme--"
            });
        }

        if(oPIMembers!=null)
        {
            oPIMembers = jQuery.parseJSON(oPIMembers);
        }
        else
        {
            oPIMembers=_oPIMembers;
        }

        sessionStorage.clear();

        if(_sFeedBack!=null){alert(_sFeedBack);}
        else if(_oPIMembers.length>0 && _oPIMembers[0].ErrorMessage=="Uploaded Successfully!"){
            alert(_oPIMembers[0].ErrorMessage);
            oPIMembers=_oPIMembers;
        }

        //DynamicRefreshList(oPIMembers, "tblPIMembers");
        InitializeAdvSearch();
        Pasig();

    });

    function Pasig()
    {
        $('#txtFrom_Colection').numberbox({min:0, precision:0 });
        $('#txtTo_Colection').numberbox({min:0, precision:0 });
        $('#txtFrom_Colection').numberbox('setValue',1);
        $('#txtTo_Colection').numberbox('setValue',50);
        document.getElementById("lblRange1_Colection").style.display = 'none';
    }

    $('#chkRange_Colection').click(function()
    {
        if(document.getElementById("chkRange_Colection").checked == true)
        {
            $("#lblRange1_Colection").show();
        }
        else
        {
            $("#lblRange1_Colection").hide();
        }
    });

    function AddPIMember()
    {
        var oPIMembers= $('#tblPIMembers').datagrid('getRows');
        sessionStorage.setItem("PIMembers", JSON.stringify(oPIMembers));
        sessionStorage.setItem("SelectedRowIndex", -1);
        sessionStorage.setItem("PIMemberHeader", "New PIMember");
        window.location.href = _sBaseAddress+ "/PerformanceIncentive/View_PIMember?sid=0&sMsg=N/A";
    }

    function RefreshList(oPIMembers) {
        data = oPIMembers;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblPIMembers').datagrid('loadData', data);
    }

    function EditPIMember()
    {
        var oPIMember = $('#tblPIMembers').datagrid('getSelected');
        if (oPIMember == null || oPIMember.PIMemberID <= 0) {
            alert("Please select an item from list!");
            return;
        }
        var SelectedRowIndex = $('#tblPIMembers').datagrid('getRowIndex', oPIMember);
        var oPIMembers= $('#tblPIMembers').datagrid('getRows');
        sessionStorage.setItem("PIMembers", JSON.stringify(oPIMembers));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("PIMemberHeader", "Edit PIMember");
        window.location.href = _sBaseAddress+ "/PerformanceIncentive/View_PIMember?sid="+oPIMember.EncryptPIID+"&sMsg=N/A";
    }

    function Delete()
    {
        var oPIMembers = $('#tblPIMembers').datagrid('getChecked');

        if (oPIMembers == null || oPIMembers.length <= 0)
        {
            alert("Please select an item from the list!");
            return ;
        }
        var nIndexes = [];
        for(var i =0; i<oPIMembers.length; i++)
        {
            if (oPIMembers[i].ApproveBy> 0) {
                alert("Some items are approved!");
                return;
            }
            var SelectedRowIndex = $('#tblPIMembers').datagrid('getRowIndex', oPIMembers[i]);
            nIndexes.push(SelectedRowIndex);
        }

        if (!confirm("Confirm to Delete?")) return;

        $.ajax
        ({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/PerformanceIncentive/PerformanceIncentiveMember_Delete",
            traditional: true,
            data: JSON.stringify({oPIMembers:oPIMembers}),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var sMsg="";
                sMsg = jQuery.parseJSON(data);
                if (sMsg == "Deleted" )
                {
                    for (var i =nIndexes.length-1 ; i >=0; i--) {
                        $('#tblPIMembers').datagrid('deleteRow', nIndexes[i]);
                    }

                    //for(var i=0; i<oPIMembers.length; i++)
                    //{
                    //    $('#tblPIMembers').datagrid('deleteRow',nIndexes[i]);
                    //}
                    alert("Delete sucessfully");
                }
                else
                {
                    alert(sMsg);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function ViewPIMember()
    {
        var oPIMember = $('#tblPIMembers').datagrid('getSelected');
        if (oPIMember == null || oPIMember.PIID <= 0) {
            alert("Please select an item from list!");
            return;
        }
        var SelectedRowIndex = $('#tblPIMembers').datagrid('getRowIndex', oPIMember);
        var oPIMembers= $('#tblPIMembers').datagrid('getRows');
        sessionStorage.setItem("PIMembers", JSON.stringify(oPIMembers));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("PIMemberHeader", "View PIMember");
        window.location.href = _sBaseAddress+ "/PerformanceIncentive/View_PIMember?sid="+oPIMember.EncryptPIID+"&sMsg=N/A";
    }

    function ChangeActiveStatus() {
        var oPIMember = $('#tblPIMembers').datagrid('getSelected');
        if (oPIMember == null || oPIMember.PIID <= 0) {
            alert("Please select an item from list!");
            return;
        }
        if (oPIMember == null || oPIMember.InactiveBy > 0) {
            alert("Already Inactive !");
            return;
        }
        var SelectedRowIndex = $('#tblPIMembers').datagrid('getRowIndex', oPIMember);

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/PerformanceIncentive/PerformanceIncentiveMember_InActive",
            traditional: true,
            data: JSON.stringify(oPIMember),
            contentType: "application/json; charset=utf-8",

            success: function(data) {
                debugger;
                oPIMember = jQuery.parseJSON(data);
                if (oPIMember.PIID > 0) {
                    alert("Data Saved sucessfully");
                    $('#tblPIMembers').datagrid('updateRow', { index: SelectedRowIndex, row: oPIMember });

                } else {
                    alert(oPIMember.ErrorMessage);
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    }

    $('#btnImportPIMXL').click( function ()
    {
        if ($.trim($("#filePIMs").val()) == "") {
            alert("Please select a file.");
            $("#filePIMs").addClass("errorFieldBorder");
            $("#filePIMs").focus();
            return false;
        } else {
            $("#filePIMs").removeClass("errorFieldBorder");
        }
        return true;
    });

    $('#btnApprove').click(function (e) {
        var oPIMs = $('#tblPIMembers').datagrid('getChecked');
        var nIndexes = [];
        var sPIMemberIDs = "";
        if (oPIMs.length <= 0) {
            alert("please select at least one Item!");
            return false;
        }
        for (var i = 0; i < oPIMs.length; i++) {
            if (oPIMs[i].ApproveBy>0) {
                alert("Some of items are already approved!");
                return;
            }
            var SelectedRowIndex = $('#tblPIMembers').datagrid('getRowIndex', oPIMs[i]);
            nIndexes.push(SelectedRowIndex);
            sPIMemberIDs += oPIMs[i].PIMemberID + ",";
        }
        sPIMemberIDs = sPIMemberIDs.substring(0, sPIMemberIDs.length - 1);
        if (!confirm("Confirm to approve? !!")) return;
        var tsv = ((new Date()).getTime()) / 1000;

        $.ajax
        ({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/PerformanceIncentive/PIM_Approve",
            traditional: true,
            data: JSON.stringify({ sPIMIDs: sPIMemberIDs, nts: tsv }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oPIMs = [];
                oPIMs = jQuery.parseJSON(data);
                if (oPIMs[0].ErrorMessage == "" && oPIMs.length > 0) {
                    for (var i = 0; i < oPIMs.length; i++) {
                        $('#tblPIMembers').datagrid('updateRow', { index: nIndexes[i], row: oPIMs[i] });
                    }
                    alert("Approved Successfully !");
                }
                else {
                    alert(oEmployees[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    /*---------------- emp Search Start click----------------*/

    function InitializeAdvSearch(){
        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });

        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                    {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                    {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
    }

    $("#btnEmployee").click(function () {
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            $("#lblRange1").show();
        }
        else
        {
            $("#lblRange1").hide();
        }
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }

        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = false;
        var dtDateFrom = "1 jan 1900";
        var dtDateTo ="2 jan 1900";

        debugger;
        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
            nEmployeeTypeID==0 && sGender=="" &&  nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
            bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 && !bIsnotEnroll)
        {
            alert("Please enter you selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                    sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                    bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                    sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo+"~"+sEnrollNo+"~"+bIsnotEnroll;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnEmployeePickerOk").click(function () {
        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length<=0) { alert("please select atleast one item");return; }
        var sEmpIDs="";
        var sEmpNames="";
        for(var i=0;i<oEmployees.length;i++)
        {
            sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
            sEmpNames=sEmpNames+oEmployees[i].Name+",";
        }
        _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
        sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
        $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
        $("#txtEmployee").val(sEmpNames);
        $("#winEmployeePicker").icsWindow('close');

    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });

    $('#btnCEmployee').click(function (e)
    {
        document.getElementById("txtEmployee").value = "" ;
        $('#txtEmployeeName').data("EmployeeIDs","");
        _sEmployeeIDs = "";
    });

    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    /*-------------Location Picker----------------*/
    var btnLocation="";
    $("#btnLocationPicker").click(function(e){
        btnLocation = $(this).attr("id");
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        var oLocation = $('#locationtree').tree('getSelected');
        if(oLocation!=null && oLocation.id>0){
            $("#winLocationPicker").icsWindow('close');
             $('#txtLocation').val(oLocation.text);
            _sLocationID= oLocation.id;
        }
        else{
            alert("Please select a location.");
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker").click(function(e){
        $('#txtLocation').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){
        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){
        _sDepartmentNames = "";
        _sDepartmentIds= "";
        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentIds= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
    });

    $("#btnResetDepartmentPicker").click(function(e){
        $('#txtDepartment').val("");
        _sDepartmentIds="";
        _sDepartmentNames = "";
    });

    /*-------------Designation Picker----------------*/
    var btnDesignation="";
    $("#btnDesignationPicker").click(function(e){
        DesignationPicker();
    });

    function DesignationPicker()
    {
        var oDesignation={
            DesignationID:0,
            Params: (($.trim(_sLocationID)=="")? 0:_sLocationID)+'~'+ (($.trim(_sDepartmentIds)=="")? "":_sDepartmentIds)
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            _sDesignationNames = "";
            _sDesignationIds = "";
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function ()
        {
            var oDesignations=[];
            var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
            oDesignations.push(oDesignation);

            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignations!=null && oDesignations.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames+=oDesignations[i].Name+",";
                        _sDesignationIds+=oDesignations[i].DesignationID+",";
                    }

                    _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                    _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);

                    $("#txtDesignation").val(_sDesignationNames);
                }
                else
                {
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker").click(function(e){
        $('#txtDesignation').val("");
        _sDesignationIds="";
        _sDesignationNames = "";
    });

    /*---------------- emp Search End click ----------------*/

    /*---------------- emp Search Start keyprees----------------*/
    $('#txtEmployee').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
            SearchEmployeeByText(sCodeName);
        }
    });

    function SearchEmployeeByText(sEmpNameCode){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {
                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _sEmployeeIDs=oreturnObj.EmployeeID;
                    $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
                    $("#txtEmployee").val(oreturnObj.Name);
                    $("#winEmployeePicker").icsWindow('close');
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        _sEmployeeIDs=oreturnObj.EmployeeID;
                        $('#txtEmployee').data("EmployeeIDs",_sEmployeeIDs);
                        $("#txtEmployee").val(oreturnObj.Name);
                        $("#winEmployeePicker").icsWindow('close');
                    }
                }
            }
        });
    }

    $('#btnCEmployee').click(function (e)
    {
        document.getElementById("txtEmployee").value = "" ;
        $('#txtEmployeeName').data("EmployeeIDs","");
        _sEmployeeIDs = "";
    });

    /*---------------- emp Search Start keyprees----------------*/

    function Search()
    {
        var nPISchemeID=$("#cboPIScheme").val();
        if(_sEmployeeIDs == "" && nPISchemeID<=0)
        {
            alert("Please select at least one searching criteria!");
            return;
        }
        
        if(!_bNext)
        {
            _nRowLength = 0;
            _nLastPIMemberID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        if(document.getElementById("chkRange").checked == true)
        {
            var RangeFrom = 0;
            var RangeTo = 0;
            RangeFrom = parseFloat(document.getElementById("txtFrom").value);
            RangeTo = parseFloat(document.getElementById("txtTo").value);

            if(RangeFrom > RangeTo)
            {
                alert("Invalid Range !");
                return;
            }
            _nRowLength = 0;
            _nLoadRecords = 0;

            _nRowLength = RangeFrom-1;
            _nLoadRecords = RangeTo - RangeFrom +1;
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/PerformanceIncentive/GetsPIMember",
            traditional: true,
            data: JSON.stringify({sEmployeeIDs :_sEmployeeIDs,nPISchemeID:nPISchemeID,nLoadRecords : _nLoadRecords, nRowLength : _nRowLength}),
            contentType: "application/json; charset=utf-8",
            
            success: function(data)
            {
                var oPIMembers =[];
                oPIMembers = jQuery.parseJSON(data);
                if(oPIMembers.length>0 && oPIMembers[0].ErrorMessage=="")
                {
                    if(!_bNext)
                    {
                        _oPIMembers=[];
                        DynamicRefreshList(_oPIMembers, "tblPIMembers");
                    }

                    for (var j = 0; j < oPIMembers.length; j++)
                    {
                        $('#tblPIMembers').datagrid('appendRow',oPIMembers[j]);
                    }
                }
                else
                {
                    if(_bNext == false)
                    {
                        alert("Data not found !!");
                        _oPIMembers=[];
                        DynamicRefreshList(_oPIMembers, "tblPIMembers");
                    }
                    else
                    {
                        alert("No more data found !");
                    }
                }
                var oPIMembers=$('#tblPIMembers').datagrid('getRows');
                document.getElementById("lblcount_Colection").innerHTML = " | Count ="+ oPIMembers.length;
                _bNext = false;

                //var oPIMembers = jQuery.parseJSON(data);
                //if (oPIMembers.length>0 && oPIMembers[0].ErrorMessage=="")
                //{
                //    DynamicRefreshList(oPIMembers, "tblPIMembers");
                //}
                //else
                //{
                //    DynamicRefreshList(oPIMembers, "tblPIMembers");
                //}
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function Next_Collection()
    {
        var oPIMembers =[];
        oPIMembers=$('#tblPIMembers').datagrid('getRows');
        _nRowLength = oPIMembers.length;
        _bNext = true;

        if (oPIMembers.length<=0)
        {
            alert('Please Select Criteria and click on "Search" to find information.!!');
            return;
        }
        var oPIMember = oPIMembers[oPIMembers.length-1];

        if (_nLastPIMemberID==oPIMember.PIMemberID)
        {
            alert('No more data found .');
            return;
        }
        _nLastPIMemberID=oPIMember.PIMemberID;
        SearchByDepartmentAndDateRangeWithPasignation();
    }
</script>
