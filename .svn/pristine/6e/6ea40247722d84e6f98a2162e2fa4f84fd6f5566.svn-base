@model IEnumerable<ESimSol.BusinessObjects.SalaryCorrection>
    @{
        ViewBag.Title = "Salary Correction";
    }

    <div class="menuMainCollectionTable" style="margin-left:0px; height:550px">

        <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
            <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
                <label style="font-size:18px;">Please wait</label>
                <div id="progressbar" style="width:100%;height:37px;"></div>
            </div>
        </div>
        <table id="tblSalaryCorrection" title="Salary Correction List" class="easyui-datagrid" style="width:1030px;height:530px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" toolbar="#toolbar">
            <thead>
                <tr>
                    <th data-options="field:'Selected',checkbox:true"></th>
                    <th field="Code" width="150" align="left">Code</th>
                    <th field="Name" width="150" align="left">Name</th>
                    <th field="BUName" width="150" align="left">BusinessUnit</th>
                    <th field="LocationName" width="150" align="left">Location</th>
                    <th field="Reason" data-options="formatter:cellFormatter" width="200" align="left">Reason</th>
                    @*<th field="CountString" width="155" align="left">Count</th>*@
                </tr>
            </thead>
        </table>
        <table>
            <tr>
                <td>
                    <input id="chkRange" type="checkbox" />Range
                    <label id="lblRange1">
                        <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                    </label>
                    <label id="lblRange2">
                        <input id="txtTo" type="text" style="width:40px" />
                    </label>
                    <label id="lblcount"></label>
                </td>
                <td>
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                </td>
            </tr>
            <tr>
                <td style="text-align: left"></td>
                <td style="text-align: right"></td>
            </tr>
        </table>
        <div id="toolbar">
            <input id="txtBusinessUnit_Collection" style="width:13%;" placeholder="Pick Business Unit" type="text" />
            <input id="btnBusinessUnitPicker_Collection" type="button" value="P" />
            <input id="btnResetBusinessUnitPicker_Collection" type="button" value="C" />
            <input id="txtLocation_Colection" style="width:14%;" placeholder="Pick Location" type="text" />
            <input id="btnLocationPicker_Colection" type="button" value="P" />
            <input id="btnResetLocationPicker_Colection" type="button" value="C" />
            <input id="txtEmployee_Collection" style="width:11.3%;" type="text" placeholder="Type Code & Enter" />
            <input id="btnEmployee" type="button" value="P" />
            <input id="btnCEmployee" type="button" value="C" />
            <select id="cboSalaryMonth_Collection" class="selection-search" style="width: 9%;"></select>
            <select id="cboYear" style="width:70px;"></select>
            <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true"> Search</a>
            <a id="btnSingleProcess" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">SingleProcess</a>
            <a id="btnExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true"> Excel</a>
        </div>

        <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="locationtree" data-options="checkbox:true" singleselect="false"></ul>
                </div>

                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:400px; text-align:right"></td>

                            <td style="width:50px">
                                <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

        <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="width: 100%; font-family: Tahoma;">
                <div style="width: 47%; float: left;">
                    <table class="tbl-AdvSearch">
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Employee Name :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Code :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Present Address :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Permanent Address :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Authentication No :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                                <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Attendance Scheme :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                                <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                BU :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboBU" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Location :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Dept./Section :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Designation :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        @*<tr>
                            <td class="td-AdvSearch-Level">
                                Block :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEmployeeBlockAdv" class="txtfield-picker txtReset" type="text" />
                                <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                                <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                            </td>
                        </tr>*@
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Employee Type :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeType" style="width:130px; float:left;" class="selection-search cboReset"></select>
                                &nbsp; Group:
                                <input id="txtEmployeeGroupAdv" style="width:90px;" type="text" />
                                <input id="btnEmployeeGroupPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                                <input id="btnEmployeeGroupResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Category:
                            </td>
                            <td class="td-AdvSearch-Level">
                                <div>
                                    <select id="cboCategory" style="width:130px; float:left;"></select>
                                    &nbsp; Gender :
                                    <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                        <option value="0">None</option>
                                        <option value="1">Male</option>
                                        <option value="2">Female</option>
                                    </select>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Current Shift :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboShift_EmpSearch" style="width:130px; float:left;" class="selection-search cboReset"></select>

                                &nbsp; Block:
                                <input id="txtEmployeeBlockAdv" style="width:90px;" type="text" />
                                <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                                <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Card Status :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Working Status :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Date Of Birth :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboDateType" style="width: 75px" class="cboReset">
                                    <option value='0'>None</option>
                                    <option value='1'>Equal</option>
                                    <option value='2'>Between</option>
                                </select>
                                <span></span>
                                <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                                <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                                <span id="regionDateTo">
                                    <span>To</span>
                                    <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                    <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                                </span>

                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Joining Date :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                                <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                                <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkActive" class="chkReset" /> Active
                                <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                                <input type="checkbox" id="chkUser" class="chkReset" /> User
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                                <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                            </td>
                        </tr>
                    </table>
                </div>
                <div style="width: 52%; float: right;">
                    <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                        <thead>
                            <tr>
                                <th data-options="field:'Selected',checkbox:true"></th>
                                <th field="Code" width="200"> Code</th>
                                <th field="Name" width="150">Employee Name</th>
                                <th field="DepartmentName" width="100">Department</th>
                                <th field="DesignationName" width="100">Designation</th>
                            </tr>
                        </thead>
                    </table>
                    <table style="width: 485px; font-size: 12px; font-weight: bold;">
                        <tr>
                            <td style="text-align: left">
                                <input id="chkRangeEmp" type="checkbox" />Range
                                <label id="lblRange1Emp">
                                    <input id="txtFromEmp" type="text" style="width:40px" />&nbsp; To &nbsp;
                                </label>
                                <label id="lblRange2Emp">
                                    <input id="txtToEmp" type="text" style="width:40px" />
                                </label>
                                <label id="lblcountEmp"></label>
                            </td>
                            <td style="text-align: right">
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="NextEmp()">Next</a>
                                <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                                <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align: left"></td>
                            <td style="text-align: right"></td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>

    </div>
    <style type="text/css">
    .lblStar {
        color: #ff0000;
        font-weight: bold;
    }

    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>
    <script type="text/javascript">
    var _oSalaryCorrections=[];
    var _sBaseAddress="";
    var _oMonths=[];
    var _sLocationID = "";
    var _sBusinessUnitIds="";
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;
        
    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _oBusinessUnits=[];
        
    var _oEmployees = [];
    var _sEmployeeIDs = "";
    var _sDepartmentNames = "";
    var _sDepartmentIds = "";
    var _sDesignationNames = "";
    var _sDesignationIds = "";
        
    var _sShiftNames="";
    var _sShiftIds = "";
    var _sBlockNamesAdv="";
    var _sBlockIDsAdv="";

    
    var _sGroupNamesAdv="";
    var _sGroupIDsAdv="";
    var _nLastEmployeeID = 0;

        
    var _bNextEmp = false;
    var _nLoadRecordsEmp = 0;
    var _nRowLengthEmp = 0;

    $(document).ready(function ()
    {
        _oSalaryCorrections =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oMonths= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Months));
        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));

            $("#cboSalaryMonth_Collection").icsLoadCombo({
                List:_oMonths,
                OptionValue: "Value",
                DisplayText: "Text",
                InitialValue:"Month"
            });
            InitializeAdvSearch();
            LoadBU();
            LoadCateGory(oEmployeeCategorys);
        
            $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
            $('#txtFrom').numberbox('setValue',1);
            $('#txtTo').numberbox('setValue',50);
            $("#lblRange1").hide();

        
            $('#txtFromEmp,#txtToEmp').numberbox({min:0, precision:0 });
            $('#txtFromEmp').numberbox('setValue',1);
            $('#txtToEmp').numberbox('setValue',50);
            $("#lblRange1Emp").hide();

            LoadYear();
            SetDateTime();
            var oDate=new Date();
            SetStartTime(oDate);
        
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").hide();
        });
        
        function LoadCateGory(oEmployeeCategorys)
        {
            $("#cboCategory").icsLoadCombo({
                List: oEmployeeCategorys,
                OptionValue: "Value",
                DisplayText: "Text"
            });
        }
        function LoadBU()
        {
            $('#cboBU_Collection').combobox({
                data:_oBusinessUnits,
                valueField:'BusinessUnitID',
                textField:'Name',
                multiple:true
            });
            $('#cboBU_Collection').combobox('setValue',  _oBusinessUnits.length>0?_oBusinessUnits[0].BusinessUnitID:0);
        }
        function InitializeAdvSearch(){
            $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
            $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));
            $("#cboEmployeeType").icsLoadCombo({
                List: _oEmployeeTypes,
                OptionValue: "EmployeeTypeID",
                DisplayText: "Name"
            });
            $("#cboShift_EmpSearch").icsLoadCombo({
                List: _oShifts,
                OptionValue: "ShiftID",
                DisplayText: "ShiftWithDuration"
            });
            $("#cboEmployeeCardStatus").icsLoadCombo({
                List: _oEmployeeCSs,
                OptionValue: "Value",
                DisplayText: "Text"
            });
            $("#cboEmployeeWorkigStatus").icsLoadCombo({
                List: _oEmployeeWSs,
                OptionValue: "Value",
                DisplayText: "Text"
            });
            $("#cboBU").icsLoadCombo({
                List: _oBusinessUnits,
                OptionValue: "BusinessUnitID",
                DisplayText: "Name"
            });

            $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
            $('#txtFrom').numberbox('setValue',1);
            $('#txtTo').numberbox('setValue',50);
            $("#lblRange1").hide();

            var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                        {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                        {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

            $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
                List: oMonths,
                OptionValue: "MonthID",
                DisplayText: "Name",
                InitialValue:''
            });

            LoadDaysInMonth();
        }

        function LoadDaysInMonth(){
            $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
            var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

            var oDays=[];
            for(var i=1;i<=nDaysInMonth;i++){
                oDays.push({DayID:i,Day:i});
            }
            $("#cboDayFrom,#cboDayTo").icsLoadCombo({
                List: oDays,
                OptionValue: "DayID",
                DisplayText: "Day",
                InitialValue:''
            });
        }

        $("#cboDateType").change(function(e){
            if($("#cboDateType").val()==1){
                $("#regionDateTo").hide();
            }
            else{
                $("#regionDateTo").show();
            }
        });

        $("#cboMonthFrom").change(function(e){
            var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
            var oDays=[];
            for(var i=1;i<=nDaysInMonth;i++){
                oDays.push({DayID:i,Day:i});
            }
            $("#cboDayFrom").icsLoadCombo({
                List: oDays,
                OptionValue: "DayID",
                DisplayText: "Day",
                InitialValue:''
            });
        });

        $("#cboMonthTo").change(function(e){
            var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
            var oDays=[];
            for(var i=1;i<=nDaysInMonth;i++){
                oDays.push({DayID:i,Day:i});
            }
            $("#cboDayTo").icsLoadCombo({
                List: oDays,
                OptionValue: "DayID",
                DisplayText: "Day",
                InitialValue:''
            });
        });

        function EmployeePickerReset(){
            _nLastEmployeeID = 0;
            _sEmployeeIDs = "";
            _bNext = false;
            _nLoadRecords = 0;
            _nRowLength = 0;
            _sAttendanceSchemeID="";
            _sLocationID = "";
            _sDepartmentIds = "";
            _sDesignationIds = "";
            $(".txtReset").val("");
            $(".cboReset").val(0);
            $(".chkReset").prop("checked",false);

            $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
            LoadDaysInMonth();

            DynamicRefreshList([], "tblEmployeesForPicker");
            $("#lblcount").html("");
            $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
            $('#txtFrom').numberbox('setValue',1);
            $('#txtTo').numberbox('setValue',50);
            $("#lblRange1").hide();
            $('#txtEmployeeGroupAdv').val("");
            $('#txtEmployeeBlockAdv').val("");
            _sBlockIDsAdv = "";
            _sGroupIDsAdv = "";
        }
        $('#chkRange').click(function()
        {
            if(document.getElementById("chkRange").checked == true)
            {
                document.getElementById("lblRange1").style.display = '';
            }
            else
            {
                document.getElementById("lblRange1").style.display = 'none';
            }
        });

        
        $('#chkRangeEmp').click(function()
        {
            if(document.getElementById("chkRangeEmp").checked == true)
            {
                document.getElementById("lblRange1Emp").style.display = '';
            }
            else
            {
                document.getElementById("lblRange1Emp").style.display = 'none';
            }
        });

        function cellFormatter(value,row,index) {
            //return '<a id="btnTask" href="javascript:void(0)" class="easyui-linkbutton" iconcls="" plain="true" onclick="OpenTask('+row.RefTaskID+')">'+row.TaskNo+'</a>';
            return (value=="Now you can process salary for this employee")?'<div style="background-color:green; color:white">'+value+'</div>':'<div style="background-color:red; color:white">'+value+'</div>';
        }

        function updateProgress()
        {
            var value =$('#progressbar').progressbar('getValue');
            if (value < 96){
                value += Math.floor(Math.random() * 5);
                $('#progressbar').progressbar('setValue', value);
            }
        }

        function hideShow(miliseconds)
        {
            $("#progressbarParent").hide();
        }
        
        function LoadYear()
        {
            var oDate=new Date();
            oDate.setFullYear(2014);
            var sYear="";
            sYear +="<option value='0'>"+'Year'+"</option>";
            for(var i=0; i<=15; i++)
            {
                sYear += "<option value='" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"'>" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"</option>";
            }
            $('#cboYear').html(sYear);
            var oDate=new Date();
            $("#cboSalaryMonth_Collection").val(oDate.getMonth()+1);
            $("#cboYear").val(oDate.getFullYear());

        }
        /*-------------Start Business Unit Picker----------------*/
        $("#btnBusinessUnitPicker_Collection").click(function(e){
            BusinessUnitPicker();
        });

        $("#txtBusinessUnit_Collection").keypress(function(e){
            if (e.which == 13)//enter=13
            {
                BusinessUnitPicker();
            }
        });

        function BusinessUnitPicker()
        {
            var oBusinessUnit={
                BusinessUnitID:0
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBusinessUnit,
                ControllerName: "BusinessUnit",
                ActionName: "GetsBusinessUnitWithPermission",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].BusinessUnitID > 0) {
                        var tblColums = [];
                        var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                        var bmultiplereturn=true;

                        var oPickerParam = {
                            winid: 'winBusinessUnit',
                            winclass:'clsBusinessUnit',
                            winwidth: 320,
                            winheight: 400,
                            tableid: 'tblBusinessUnit',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: bmultiplereturn,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Business Unit List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeBusinessUnitPickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                var oBusinessUnits=[];
                oBusinessUnits = $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winBusinessUnit')
                {
                    if(oBusinessUnits!=null && oBusinessUnits.length>0)
                    {
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                        var sBusinessUnitName = "";
                        for(var i=0; i<oBusinessUnits.length; i++)
                        {
                            sBusinessUnitName+=oBusinessUnits[i].Name+",";
                            _sBusinessUnitIds+=oBusinessUnits[i].BusinessUnitID+",";
                        }

                        sBusinessUnitName=sBusinessUnitName.substring(0,sBusinessUnitName.length-1);
                        _sBusinessUnitIds=_sBusinessUnitIds.substring(0,_sBusinessUnitIds.length-1);
                        $("#txtBusinessUnit_Collection").val(sBusinessUnitName);
                    }
                    else
                    {
                        alert("Please select a Business Unit.");
                    }
                }
            });
        }

        $("#btnResetBusinessUnitPicker_Collection").click(function(e){
            $('#txtBusinessUnit_Collection').val("");
            _sBusinessUnitIds="";
        });
        /*-------------End Business Unit Picker----------------*/

        /*-------------Location Picker----------------*/
        var btnLocation="";
        $("#btnLocationPicker,#btnLocationPicker_Colection").click(function(e){
            debugger;
            btnLocation = $(this).attr("id");
            var sBusinessUnitIDs ="";
            var nBusinessUnitID=0;
            if(btnLocation=="btnLocationPicker")
            {
                nBusinessUnitID = $("#cboBU").val();
                sBusinessUnitIDs = String(nBusinessUnitID);
            }
            else{sBusinessUnitIDs=_sBusinessUnitIds;}
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {
                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        });

        $("#btnLocationPickerOk").click(function(e){
            if(btnLocation=="btnLocationPicker")
            {
                var oLocation = $('#locationtree').tree('getSelected');
                if(oLocation!=null && oLocation.id>0){
                    $("#winLocationPicker").icsWindow('close');
                    _sLocationID=oLocation.id;
                    $('#txtLocation').val(oLocation.text);
                }
                else{
                    alert("Please select a location.");
                }
            }
            else
            {
                var oLocations = $('#locationtree').tree('getChecked');
                if(oLocations!=null && oLocations.length>0)
                {
                    var LocationName="";
                    for(var i=0; i<oLocations.length; i++)
                    {
                        if(oLocations[i].id !=1)
                        {
                            LocationName+=oLocations[i].text+",";
                            _sLocationID+=oLocations[i].id+",";
                        }
                    }

                    LocationName=LocationName.substring(0,LocationName.length-1);
                    _sLocationID=_sLocationID.substring(0,_sLocationID.length-1);
                    $("#winLocationPicker").icsWindow('close');
                    $('#txtLocation_Colection').val(LocationName);
                }
                else
                {
                    alert("Please select a location.");
                }
            }
        });

        $('#txtLocation_Colection').keypress(function (e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                var sBusinessUnitIDs ="";
                sBusinessUnitIDs=_sBusinessUnitIds;
                $("#winLocationPicker").icsWindow('open');
                var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
                var obj = {
                    BaseAddress: _sBaseAddress,
                    Object: oLocation,
                    ControllerName: "Location",
                    ActionName: "GetsLocationMenuTree",
                    IsWinClose: false
                };
                $.icsDataGet(obj, function (response) {

                    if (response.status && response.obj!=null) {
                        if (response.obj.TLocation.id > 0) {
                            $('#locationtree').tree({ data: [response.obj.TLocation] });
                        }
                    }
                });
            }
        });

        $("#btnLocationPickerClose").click(function(e){
            $("#winLocationPicker").icsWindow('close');
        });

        $("#btnResetLocationPicker,#btnResetLocationPicker_Colection").click(function(e){
            $('#txtLocation').val("");
            $('#txtLocation_Colection').val("");
            _sLocationID="";
        });

        //sagor datetime start
        function SetDateTime()
        {
            var oDate=new Date();
            oDate.setFullYear(2014);
            /*---------------------------------------- Start Set Year-------------------------------------------*/
            var sYear="";
            sYear +="<option value='0'>"+'Year'+"</option>";
            for(var i=0; i<=10; i++)
            {
                sYear += "<option value='" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"'>" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"</option>";
            }
            $('#cboYear').html(sYear);

            /*---------------------------------------- End Set Year-------------------------------------------*/


            /*---------------------------------------- Start Set Month-------------------------------------------*/
            var sMonth="";
            var oMonths=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
            sMonth +="<option value='0'>"+'Month'+"</option>";
            for(var i=0; i<oMonths.length; i++)
            {
                sMonth += "<option value='" +(parseInt(i)+1)+"'>" + oMonths[i] +"</option>";
            }
            $('#cboMonth').html(sMonth);

            /*---------------------------------------- End Set Month-------------------------------------------*/


            /*---------------------------------------- Start Set Date-------------------------------------------*/
            var sDay ="<option value='0'>"+'Day'+"</option>";
            $('#cboDay').html(sDay);

            /*---------------------------------------- End Set Date-------------------------------------------*/
        }

        $('#cboYear').change(function(e)
        {
            var nYear=$('#cboYear').val();
            var nMonth=$('#cboMonth').val();
            if(nYear>0 && nMonth>0)
            {
                $('#cboDay').html(SetDateEvent(nYear, nMonth));
            }

        });

        $('#cboMonth').change(function(e)
        {
            var nYear=$('#cboYear').val();
            var nMonth=$('#cboMonth').val();
            if(nYear>0 && nMonth>0)
            {
                $('#cboDay').html(SetDateEvent(nYear, nMonth));
            }

        });

        function SetDateEvent(nYear, nMonth)
        {

            var oDate=new Date();
            var sDay="";
            if( parseInt(nMonth)>0)
            {
                var nDay= new Date(parseInt(nYear), parseInt(nMonth), 0).getDate();
                sDay +="<option value='0'>"+'Day'+"</option>";
                for(var i=1; i<=parseInt(nDay); i++)
                {
                    if(i<10)
                    {
                        sDay += "<option value='" +i+"'>" + '0'+i +"</option>";
                    }
                    else
                    {
                        sDay += "<option value='" +i+"'>" + i +"</option>";
                    }

                }
            }
            return sDay;
        }

        function SetStartTime(oDate)
        {

            var nyear=oDate.getFullYear();
            var nmonth=oDate.getMonth()+1;
            var nday=oDate.getDate();
            $('#cboYear').val(nyear);
            $('#cboMonth').val(nmonth);
            $('#cboDay').html(SetDateEvent(nyear,nmonth));
            $('#cboDay').val(nday);
        }

        function GenerateStartTimeInString()
        {
            var sDate=  $('#cboMonth').val() +'/'+ $('#cboDay').val() +'/'+ $('#cboYear').val();
            return sDate;
        }

        function ValidationOfStartTime()
        {
            if($('#cboYear').val()==0)
            {
                alert("Please select a year.");
                document.getElementById('cboYear').focus();
                return false;
            }
            if($('#cboMonth').val()==0)
            {
                alert("Please select a month.");
                document.getElementById('cboMonth').focus();
                return false;
            }
            if($('#cboDay').val()==0)
            {
                alert("Please select a day.");
                document.getElementById('cboDay').focus();
                return false;
            }
            return true;
        }

        $('#btnSearch').click(function (e)
        {
            _bNext = false;
            //_nLoadRecords = document.getElementById("txtTo").value;
            AdvSearch();
        });
        $('#btnExcel').click(function (e)
        {
            if (!_bNext) {
                _nRowLength = 0;
                //_nLastEmployeeID = 0;
            }
            debugger;
            _nLoadRecords = document.getElementById("txtTo").value;
            _nRowLength = parseInt(_nRowLength) + parseInt(_nLoadRecords);

            if ($("#chkRange").is(':checked')) {
                if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
                var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
                var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
                if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
                _nRowLength = nRangeFrom - 1;
                _nLoadRecords = nRangeTo - nRangeFrom + 1;
            }
            var nMonthID=$("#cboSalaryMonth_Collection").val();
            var nYear= $('#cboYear option:selected').text();

            sString = _sBusinessUnitIds + "~" + _sLocationID + "~" + nMonthID + "~" + nYear + "~" + _nRowLength + "~" + _nLoadRecords + "~" + _sEmployeeIDs;
            window.open(_sBaseAddress+ "/PayrollProcess/PrintExcel?sString="+sString);
        });
        function Next() {
            //var oEmployees = [];
            //oEmployees = $('#tblEmployees').datagrid('getRows');
            //if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
            _nRowLength = _nRowLength;
            _bNext = true;
            AdvSearch();
        }
        function AdvSearch(){
            if (!_bNext) {
                _nRowLength = 0;
                //_nLastEmployeeID = 0;
            }
            debugger;
            _nLoadRecords = document.getElementById("txtTo").value;
            _nRowLength = parseInt(_nRowLength) + parseInt(_nLoadRecords);

            if ($("#chkRange").is(':checked')) {
                if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
                var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
                var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
                if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
                _nRowLength = nRangeFrom - 1;
                _nLoadRecords = nRangeTo - nRangeFrom + 1;
            }


            var nMonthID=$("#cboSalaryMonth_Collection").val();
            var nYear= $('#cboYear option:selected').text();

            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/PayrollProcess/SearchSalaryCorrection",
                traditional: true,
                data: JSON.stringify({sBU:_sBusinessUnitIds,sLocationID:_sLocationID, nMonthID:nMonthID,nYear:nYear, nRowLength:_nRowLength, nLoadRecords:_nLoadRecords, sEmployeeIDs:_sEmployeeIDs}),
                contentType: "application/json; charset=utf-8",

                success: function(data)
                {
                    //debugger
                    var oSalaryCorrections=[];
                    oSalaryCorrections = jQuery.parseJSON(data);

                    if (oSalaryCorrections.length > 0 && oSalaryCorrections[0].ErrorMessage == "") 
                    {
                        if (oSalaryCorrections.length > 0) {

                            if(!_bNext){
                                DynamicRefreshList(oSalaryCorrections,'tblSalaryCorrection');
                            }
                            else{
                                var bAppend=false;
                                var oTEmps=$('#tblSalaryCorrection').datagrid('getRows');
                                if(oTEmps.length>0){
                                    for (var i = 0; i < oSalaryCorrections.length; i++) {
                                        var IsAppend=true;
                                        for (var j = 0; j < oTEmps.length; j++) {

                                            if(oSalaryCorrections[i].EmployeeID==oTEmps[j].EmployeeID){
                                                IsAppend=false;
                                                break;
                                            }
                                        }
                                        if(IsAppend){
                                            bAppend=true;
                                            $('#tblSalaryCorrection').datagrid('appendRow', oSalaryCorrections[i]);
                                        }
                                    }
                                }
                                else{
                                    for (var j = 0; j < oSalaryCorrections.length; j++) {
                                        bAppend=true;
                                        $('#tblSalaryCorrection').datagrid('appendRow', oSalaryCorrections[j]);
                                    }
                                }
                                if(!bAppend){
                                    alert("No more data found!");
                                }
                            }

                        }
                        else {
                            alert("No more data found!");
                        }
                        //var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                        //document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                        _bNext = false;
                    }
                    else {
                        alert(oSalaryCorrections[0].ErrorMessage);
                        DynamicRefreshList([],'tblSalaryCorrection');
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
        //$('#btnSearch').click(function (e)
        //{
        //    var nMonthID=$("#cboSalaryMonth_Collection").val();
        //    var nYear= $('#cboYear option:selected').text();

        //    $.ajax({
        //        type: "POST",
        //        dataType: "json",
        //        url: _sBaseAddress + "/PayrollProcess/SearchSalaryCorrection",
        //        traditional: true,
        //        data: JSON.stringify({sBU:_sBusinessUnitIds,sLocationID:_sLocationID, nMonthID:nMonthID,nYear:nYear}),
        //        contentType: "application/json; charset=utf-8",

        //        success: function(data)
        //        {
        //            //debugger
        //            var oSalaryCorrections=[];
        //            oSalaryCorrections = jQuery.parseJSON(data);
        //            if (oSalaryCorrections.length>0 && oSalaryCorrections[0].ErrorMessage == '')
        //            {
        //                DynamicRefreshList(oSalaryCorrections,'tblSalaryCorrection');
        //            }
        //            else
        //            {
        //                alert(oSalaryCorrections[0].ErrorMessage);
        //                oSalaryCorrections=[];
        //                DynamicRefreshList([],'tblSalaryCorrection');

        //            }
        //        },

        //    });
        //});
        
        $('#btnSingleProcess').click(function (e)
        {
            
            var oSalaryCorrections = $('#tblSalaryCorrection').datagrid('getChecked');
            if(oSalaryCorrections.length <= 0)
            {
                alert("Please select at least one item !");
                return;
            }
            var empIDs = "";
            for(var i =0; i < oSalaryCorrections.length; i++) {
                
                empIDs+=oSalaryCorrections[i].EmployeeID+",";
            }
            empIDs=empIDs.substring(0,empIDs.length-1);
            
            var nMonthID=$("#cboSalaryMonth_Collection").val();
            var nYear= $('#cboYear option:selected').text();

            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/PayrollProcess/SingleProcess",
                traditional: true,
                data: JSON.stringify({sEmployeeIDs:empIDs, nMonthID:nMonthID,nYear:nYear}),
                contentType: "application/json; charset=utf-8",

                success: function(data)
                {
                    debugger
                    var oPPM = jQuery.parseJSON(data);
                    var oPPMSC = oPPM.PayrollProcessManagement;
                    if (oPPMSC.ErrorMessage == '')
                    {
                        alert("Data processed successfully.");
                    }
                    else
                    {
                        alert(oPPMSC.ErrorMessage);

                    }
                },

            });
        });


        /*---------------- emp Search Start keyprees----------------*/
        $('#txtEmployee_Collection').keypress(function (e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                var sCodeName = $.trim($("#txtEmployee_Collection").val());
                if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
                SearchEmployeeByText(sCodeName);
            }
        });

        function SearchEmployeeByText(sEmpNameCode){
            var oEmployee = { Params: sEmpNameCode +'~'+ 0};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oEmployee,
                ControllerName: "Employee",
                ActionName: "GetsByEmpCode",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].EmployeeID > 0) {

                        var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winEmployeePickerTextSearch',
                            winclass:'clsEmployeePickerTextSearch',
                            winwidth: 455,
                            winheight: 460,
                            tableid: 'tblEmployeePickerTextSearch',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Employee list'
                        };

                        $.icsPicker(oPickerParam);
                        IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeEmployeePickerTextSearch(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                if (oPickerobj.winid == 'winEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        _sEmployeeIDs=oreturnObj.EmployeeID;
                        $("#txtEmployee_Collection").val(oreturnObj.Name);
                        $("#winEmployeePicker").icsWindow('close');
                    }
                }
            });

            $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
                if (e.which == 13)//enter=13
                {
                    var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                    if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                    {
                        if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                        {
                            _sEmployeeIDs=oreturnObj.EmployeeID;
                            $("#txtEmployee_Collection").val(oreturnObj.Name);
                            $("#winEmployeePicker").icsWindow('close');
                        }
                    }
                }
            });
        }

        $('#btnCEmployee').click(function (e)
        {
            document.getElementById("txtEmployee_Collection").value = "" ;
            _sEmployeeIDs = "";
        });

        /*---------------- emp Search Start keyprees----------------*/
        $("#btnEmployee").click(function () {

            EmployeePickerReset();
            $("#winEmployeePicker").icsWindow("open", " Employee Picker");
        });


        $("#btnEmployeePickerOk").click(function () {
            var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
            if (oEmployees.length<=0) { alert("please select atleast one item");return; }
            var sEmpIDs="";
            var sEmpNames="";
            for(var i=0;i<oEmployees.length;i++)
            {
                sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
                sEmpNames=sEmpNames+oEmployees[i].Name+",";
            }
            _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
            sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
            $("#txtEmployee_Collection").val(sEmpNames);
            $("#winEmployeePicker").icsWindow('close');
        });

        $("#btnEmployeePickerClose").click(function () {
            $("#winEmployeePicker").icsWindow('close');
        });

        $('#btnEmpPickerSearch').click(function () {
            _bNextEmp = false;
            AdvSearchEmp();
        });

        function NextEmp() {
            var oEmployees = [];
            oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
            if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
            _nRowLength = oEmployees.length;
            _bNext = true;
            AdvSearch();
        }

        function AdvSearchEmp(){
            if (!_bNextEmp) {
                _nRowLengthEmp = 0;
                _nLastEmployeeID = 0;
            }
            _nLoadRecords = document.getElementById("txtToEmp").value;
            debugger
            if ($("#chkRangeEmp").is(':checked')) {
                if($('#txtFromEmp').numberbox('getValue').length=='' || $('#txtToEmp').numberbox('getValue').length==''){alert("Please enter valid range.")}
                var nRangeFrom = parseInt($('#txtFromEmp').numberbox('getValue'));
                var nRangeTo = parseInt( $('#txtToEmp').numberbox('getValue'));
                if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
                _nRowLengthEmp = nRangeFrom - 1;
                _nLoadRecordsEmp = nRangeTo - nRangeFrom + 1;
            }

            var sName = $.trim($("#txtEmployeeName").val());
            var sCode = $.trim($("#txtEmpCodeForSearch").val());
            var sEnrollNo = $.trim($("#txtEnrollNo").val());
            var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
            var nEmployeeTypeID=$("#cboEmployeeType").val();
            var nShiftID=$("#cboShift_EmpSearch").val();
            var nCardStatus=$("#cboEmployeeCardStatus").val();
            var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
            var nDateType=$("#cboDateType").val();
            var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
            var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
            var sGender= $("#cboGender option:selected").text();

            var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
            var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
            var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

            var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
            var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

            var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
            var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

            var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
            var dtDateFrom = $('#dtDateFrom').datebox('getValue');
            var dtDateTo = $('#dtDateTo').datebox('getValue');

            if(bIsJoiningDate)
            {
                if(new Date(dtDateFrom)>new Date(dtDateTo))
                {
                    alert("Invalid Joining Date Range!");
                    return;
                }
            }

            var nBusinessUnitID = $("#cboBU").val();
            var nCategory=$('#cboCategory').val();
            var sPresentAddress=$('#txtPresentAddress').val();
            var sPermanentAddress=$('#txtPermanentAddress').val();

            debugger;
            if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
                nEmployeeTypeID==0 && sGender=="" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
                bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 
                && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBlockIDsAdv=="" && _sGroupIDsAdv=="")
            {
                alert("Please enter you selection criteria."); return false;
            }

            var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                        sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                        bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                        sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                        +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBlockIDsAdv+"~"+_sGroupIDsAdv;

            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/Employee/EmployeeSearch",
                traditional: true,
                data: JSON.stringify({ sParam: sParam }),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oEmps = jQuery.parseJSON(data);
                    if (oEmps != null) {
                        if (oEmps.length > 0) {
                            if(!_bNextEmp){
                                DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                            }
                            else{
                                var bAppendEmp=false;
                                var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                                if(oTEmps.length>0){
                                    for (var i = 0; i < oEmps.length; i++) {
                                        var IsAppendEmp=true;
                                        for (var j = 0; j < oTEmps.length; j++) {

                                            if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                                IsAppendEmp=false;
                                                break;
                                            }
                                        }
                                        if(IsAppendEmp){
                                            bAppend=true;
                                            $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                        }
                                    }
                                }
                                else{
                                    for (var j = 0; j < oEmps.length; j++) {
                                        bAppendEmp=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                    }
                                }
                                if(!bAppendEmp){
                                    alert("No more data found!");
                                }
                            }

                        }
                        else {
                            alert("No more data found!");
                        }
                        var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                        document.getElementById("lblcountEmp").innerHTML = " | Count =" + oEmployees.length;
                        _bNextEmp = false;
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }

        /*------------EmployeeBlockAdv--------------*/

        $('#txtEmployeeBlockAdv').keydown(function (e) {

            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                var txtSearchByBlock = $("#txtEmployeeBlockAdv").val();
                var sTempName = "";
                SearchEmployeeBlockAdv(txtSearchByBlock);
                $("#txtEmployeeBlockAdv").val('');
            }
        });

        $("#btnEmployeeBlockPickerAdv").click(function(e){
            SearchEmployeeBlockAdv("");
        });
        function SearchEmployeeBlockAdv(name) {
            $("#txtEmployeeBlockAdv").val("");
            _sBlockNamesAdv = "";
            _sBlockIDsAdv = "";
            var oBlock={
                Name : name
            };
            debugger
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBlock,
                ControllerName: "Employee",
                ActionName: "GetsEmployeeBlockAdvSrc",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].EmployeeTypeID > 0) {
                        debugger;
                        var tblColums = [];
                        var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winBlock',
                            winclass:'clsBlock',
                            winwidth: 320,
                            winheight: 460,
                            tableid: 'tblBlock',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Employee Block List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeBlockPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeBlockPickerbuttonAdv(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {

                var oGroups=[];
                oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winBlock')
                {
                    if(oBlocks!=null && oBlocks.length>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();

                        for(var i=0; i<oBlocks.length; i++)
                        {
                            _sBlockNamesAdv += oBlocks[i].Name+",";
                            _sBlockIDsAdv += oBlocks[i].EmployeeTypeID+",";

                        }
                        _sBlockNamesAdv=_sBlockNamesAdv.substring(0,_sBlockNamesAdv.length-1);
                        _sBlockIDsAdv=_sBlockIDsAdv.substring(0,_sBlockIDsAdv.length-1);
                        $("#txtEmployeeBlockAdv").val(_sBlockNamesAdv);
                    }
                    else
                    {
                        alert("Please select a Employee Block.");
                    }
                }
            });
        }
    

        $("#btnEmployeeBlockResetAdv").click(function(e){
            debugger;
            _sBlockNamesAdv = "";
            $('#txtEmployeeBlockAdv').val("");
            _sBlockIDsAdv = "";
        });




         
        $("#btnEmployeeGroupResetAdv").click(function(e){
            $("#txtEmployeeGroupAdv").val("");
            _sGroupNamesAdv = "";
            _sGroupIDsAdv = "";
        });

        $('#txtEmployeeGroupAdv').keydown(function (e) {

            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                var txtSearchByGroup = $("#txtEmployeeGroupAdv").val();
                var sTempName = "";
                SearchEmployeeGroupAdv(txtSearchByGroup);
                $("#txtEmployeeGroupAdv").val('');
            }
        });


        $("#btnEmployeeGroupPickerAdv").click(function(e){
            SearchEmployeeGroupAdv("");
        });
        function SearchEmployeeGroupAdv(name) {
            $("#txtEmployeeGroupAdv").val("");
            _sGroupNamesAdv = "";
            _sGroupIDsAdv = "";
            var oGroup={
                Name : name
            };
            debugger
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oGroup,
                ControllerName: "Employee",
                ActionName: "GetsEmployeeGroupAdvSrc",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].EmployeeTypeID > 0) {
                        debugger;
                        var tblColums = [];
                        var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winGroup',
                            winclass:'clsGroup',
                            winwidth: 320,
                            winheight: 460,
                            tableid: 'tblGroup',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Employee Group List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeGroupPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeGroupPickerbuttonAdv(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {

                var oGroups=[];
                oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winGroup')
                {
                    if(oGroups!=null && oGroups.length>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();

                        for(var i=0; i<oGroups.length; i++)
                        {
                            _sGroupNamesAdv += oGroups[i].Name+",";
                            _sGroupIDsAdv += oGroups[i].EmployeeTypeID+",";

                        }
                        _sGroupNamesAdv=_sGroupNamesAdv.substring(0,_sGroupNamesAdv.length-1);
                        _sGroupIDsAdv=_sGroupIDsAdv.substring(0,_sGroupIDsAdv.length-1);
                        $("#txtEmployeeGroupAdv").val(_sGroupNamesAdv);
                    }
                    else
                    {
                        alert("Please select a Employee Group.");
                    }
                }
            });
        }

    </script>
