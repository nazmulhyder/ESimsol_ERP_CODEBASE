<html>
@{
    ViewBag.Title = "Production Procedure";
}
<body>
@model ESimSol.BusinessObjects.ProductionSheet
    <div class="menuMainCollectionTable" id="divPP">
        <fieldset>
            <legend> Production Sheet Information </legend>
            <table border="0" style="font-size:12px" width="100%">
                <tr>
                    <td style="width:10%; text-align:right">Sheet No:</td>
                    <td style="width:20%; text-align:left">
                        @Html.TextBoxFor(model => model.SheetNo, new { style = "width: 100%;", id = "txtProductionSheetNo", disabled = "disabled" })
                    </td>
                    <td style="width:10%; text-align:right">Buyer Name:</td>
                    <td style="width:20%; text-align:left">
                        @Html.TextBoxFor(model => model.ContractorName, new { style = "width: 100%;", id = "txtContractorName", disabled = "disabled" })
                    </td>
                    <td style="width:10%; text-align:right">Mold Name:</td>
                    <td style="width:20%; text-align:left">
                        @Html.TextBoxFor(model => model.ModelReferencenName, new { style = "width: 100%;", id = "txtModelReferencenName", disabled = "disabled" })
                    </td>
                </tr>
                <tr>
                    <td style="width:10%; text-align:right">Order No:</td>
                    <td style="width:20%; text-align:left">
                        @Html.TextBoxFor(model => model.PONo, new { style = "width: 100%;", id = "txtProductionSheetNo", disabled = "disabled" })
                    </td>
                    <td style="width:10%; text-align:right">Product Name:</td>
                    <td style="width:20%; text-align:left">
                        @Html.TextBoxFor(model => model.ProductName, new { style = "width: 100%;", id = "txtProductName", disabled = "disabled" })
                    </td>
                    <td style="width:10%; text-align:right">Sheet Qty:</td>
                    <td style="width:20%; text-align:left">
                        @Html.TextBoxFor(model => model.Quantity, new { style = "width: 100%;text-align:right", id = "txtOrderQty", disabled = "disabled" })
                    </td>
                </tr>
            </table>
        </fieldset>
        <div title="Production Procedure Details" style="padding:0px; margin-left:3px;">
            <table id="tblProductionProcedure" title="Production Procedure Detail" class="easyui-datagrid" style="width:100%; height:410px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#DetailtoolBar"
                   data-options="singleSelect: false, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false,  onClickRow: onClickRow">
                <thead>
                    <tr>
                        <th field="StepName" width="200" align="left">Step Name</th>
                        <th field="Sequence" width="100" align="center">Sequence</th>
                        <th width="120" align="left" data-options="field:'Measurement',editor:{type:'text'}"> Measurement </th>
                        <th width="120" align="left" data-options="field:'ThickNess',editor:{type:'text'}"> ThickNess </th>
                        <th width="150" align="left" data-options="field:'Remarks',editor:{type:'text'}"> Remarks </th>
                    </tr>
                </thead>
            </table>
            <div id="DetailtoolBar">
                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshDetail()"></a>
                @*<a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true" onclick="ProductionProcedureTemplatePicker()">Template</a>*@
                Production Step:<select id="cboProductionStep" style="width:135px"></select>
                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddDetail()">Add</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="RemoveDetail()">Delete</a>
                <a id="btnUp" style=" text-align:left;" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-up" plain="true" onclick="UP()">Up</a>
                <a id="btnDown" style=" text-align:left;" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-down" plain="true" onclick="Down()">Down</a>
            </div>
        </div>
        <fieldset style="font-weight:bold;width:100%; ">
            <legend> Action : </legend>
            <table border="0" style="font-size:11px;font-weight:bold" width="100%">
                <tr>
                    <td style="width:85%; text-align:right"></td>
                    <td style="width:15%;">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>

<script type="text/javascript"> 
 var _sBaseAddress="";
 $(document).ready(function () {
     debugger;     
     _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));                  
     var oProductionSheet =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model)); 
     $('#divPP').data('ProductionSheet',oProductionSheet);
     $('#divPP').data('ProductionProcedures', oProductionSheet.ProductionProcedures);
     var oTempSteps = [];
     for(var i =0;i<oProductionSheet.ProductionSteps.length;i++)
     {
         //Enum ProductNature-2:Poly
         if(sessionStorage.getItem('ProductNature')==2)
         {
             if(parseInt(oProductionSheet.ProductionSteps[i].ProductionStepTypeInt)>1)
             {
                 oTempSteps.push(oProductionSheet.ProductionSteps[i]);
             }
         }else{
             if(parseInt(oProductionSheet.ProductionSteps[i].ProductionStepTypeInt)<=1)
             {
                 oTempSteps.push(oProductionSheet.ProductionSteps[i]);
             }
         }
     }
     $('#divPP').data('ProductionSteps',oTempSteps);
     $("#cboProductionStep").icsLoadCombo({ List: oTempSteps, OptionValue: "ProductionStepID", DisplayText: "StepName" });
     RefreshListDetails(oProductionSheet.ProductionProcedures);
     if(parseInt(oProductionSheet.SheetStatus)>1)
     {
         $('#btnSave').hide();
     }
});

function ProductionProcedureTemplatePicker()
{
    var oParameter = new Object();
    oParameter.Name = "Search Package Template";
    var url = _sBaseAddress+"/ProductionProcedureTemplate/ProductionProcedureTemplatePicker"
    var oProductionProcedureTemplateDetails = window.showModalDialog(url, oParameter, 'dialogHeight:530px;dialogWidth:750px;dialogLeft:375;dialogTop:80;center:yes;resizable:no;status:no;scroll:no');
    if(oProductionProcedureTemplateDetails!=null)
    {
        if(oProductionProcedureTemplateDetails.length>0)
        {
            var oProductionProcedures=[];
            RefreshListDetails(oProductionProcedures);            
            for(var i=0; i<oProductionProcedureTemplateDetails.length; i++)
            {
                var oProductionProcedure ={
                                                ProductionProcedureID : 0,
                                                ProductionSheetID : _oProductionSheet.ProductionSheetID,
                                                ProductionStepID : oProductionProcedureTemplateDetails[i].ProductionStepID,
                                                Sequence : oProductionProcedures.length + 1,
                                                Remarks : "",
                                                StepName : oProductionProcedureTemplateDetails[i].StepName
                                           };
                oProductionProcedures.push(oProductionProcedure);
            }
            RefreshListDetails(oProductionProcedures);
        }
    }
}


function RefreshListDetails(oProductionProcedures)
{
    data=oProductionProcedures;
    data={"total":""+data.length+"","rows":data};
    $('#tblProductionProcedure').datagrid('loadData',data);
 }
 


  function AddDetail()
 {
    debugger;
    var cboProductionStep = document.getElementById("cboProductionStep");
    var nProductionStepID=cboProductionStep.options[cboProductionStep.selectedIndex].value;
    if(parseInt(nProductionStepID)<=0)
    {
        alert("Please Select Production Step!");
        return;
    }
    if(IsExists(nProductionStepID) == true)
    {
         alert("Your Selected Production Step Already Exists");
         return;
    }    
    
    var oProductionProcedure ={
                                ProductionProcedureID : 0,
                                ProductionSheetID :  $('#divPP').data('ProductionSheet').ProductionSheetID,
                                ProductionStepID : nProductionStepID,
                                Sequence : ($('#tblProductionProcedure').datagrid('getRows')).length + 1,
                                Remarks : "",
                                StepName : cboProductionStep.options[cboProductionStep.selectedIndex].text
                             };
    $('#tblProductionProcedure').datagrid('appendRow',oProductionProcedure);       
 }

 function IsExists(nProductionStepID)
 {
    var oProductionProcedures = $('#tblProductionProcedure').datagrid('getRows');
    for(var i =0;i<oProductionProcedures.length;i++)
    {
        if(oProductionProcedures[i].ProductionStepID==nProductionStepID)
        {
            return true;
        }
    }
    return false;
 }


function RemoveDetail()
{
    var oPSTDetail =$('#tblProductionProcedure').datagrid('getSelected'); 
    if(oPSTDetail==null)
    {
        alert("Select At least One item !");
        return;
    }
    var SelectedRowIndex=$('#tblProductionProcedure').datagrid('getRowIndex',oPSTDetail);
    if (!confirm("Confirm to Delete?")) return ;
    $('#tblProductionProcedure').datagrid('deleteRow',SelectedRowIndex);
    
    //Reset Sequence Number
    var oProductionProcedures = $('#tblProductionProcedure').datagrid('getRows');
    for(var i =0;i<oProductionProcedures.length;i++)
    {
        oProductionProcedures[i].Sequence = i+1;        
    }
    RefreshListDetails(oProductionProcedures);
}

function UP()
{
    debugger;
    var oProductionProcedure = $('#tblProductionProcedure').datagrid('getSelected'); 
    if(oProductionProcedure==null || parseInt(oProductionProcedure.ProductionStepID)<=0)
    {
        alert("Please select a production Step");
        return;
    }
         
    var SelectedRowIndex=$('#tblProductionProcedure').datagrid('getRowIndex',oProductionProcedure);    
    if(SelectedRowIndex==0) return;        
    var oTempProductionProcedures =[];
    oTempProductionProcedures = $('#tblProductionProcedure').datagrid('getRows');
    var oProductionProcedures=[];          
    oProductionProcedures=oTempProductionProcedures;
    oTempProductionProcedures=[];       
    for(var i=0; i<oProductionProcedures.length; i++)
    {
        if(i==(SelectedRowIndex-1))
        {
            oTempProductionProcedures[i]=oProductionProcedures[i+1];                
        }
        else if(i==SelectedRowIndex)
        {
            oTempProductionProcedures[i]=oProductionProcedures[i-1];    
        }
        else
        {
            oTempProductionProcedures[i]=oProductionProcedures[i]; 
        }
        oTempProductionProcedures[i].Sequence=i+1;
    }

    data = oTempProductionProcedures;
    data={"total":""+data.length+"","rows":data};
    $('#tblProductionProcedure').datagrid('loadData',data);    
    var newSelectedRowIndex=SelectedRowIndex-1;
    $('#tblProductionProcedure').datagrid('selectRow',newSelectedRowIndex); 
    
}



function Down()
{
    debugger;
    var oTempProcedures = $('#divPP').data('ProductionProcedures');
    var oProductionProcedure = $('#tblProductionProcedure').datagrid('getSelected'); 
    if(oProductionProcedure==null || parseInt(oProductionProcedure.ColorCategoryID)<=0)
    {
        alert("Please select a item from list!");
        return;
    }                       
    var SelectedRowIndex=$('#tblProductionProcedure').datagrid('getRowIndex',oProductionProcedure);    
    if(SelectedRowIndex==(oTempProcedures.length-1))return; 
    
    oTempProcedures =[];
    oTempProcedures = $('#tblProductionProcedure').datagrid('getRows');

    var oProductionProcedures=[];          
    oProductionProcedures=oTempProcedures;
    oTempProcedures=[];       
    for(var i=0; i<oProductionProcedures.length; i++)
    {
        if(i==(SelectedRowIndex+1))
        {
            oTempProcedures[i]=oProductionProcedures[i-1];                
        }
        else if(i==SelectedRowIndex)
        {
            oTempProcedures[i]=oProductionProcedures[i+1];    
        }
        else
        {
            oTempProcedures[i]=oProductionProcedures[i]; 
        }
        oTempProcedures[i].Sequence=i+1;
    }            
    data = oTempProcedures;
    data={"total":""+data.length+"","rows":data};
    $('#tblProductionProcedure').datagrid('loadData',data);
    var newSelectedRowIndex=SelectedRowIndex+1;
    $('#tblProductionProcedure').datagrid('selectRow',newSelectedRowIndex);                   
 } 


function RefreshDetail()
{
    endEditing();
    var oProductionProcedures = $('#tblProductionProcedure').datagrid('getRows');
    if(oProductionProcedures!=null)
    {
        RefreshProductionProcedures(oProductionProcedures);
    }
}

var editIndex = undefined;  
function endEditing(){  
        if (editIndex == undefined){return true}  
        if ($('#tblProductionProcedure').datagrid('validateRow', editIndex)){
            $('#tblProductionProcedure').datagrid('endEdit', editIndex);  
            editIndex  = undefined;  
            return true;  
        } 
        else
        {  
            return false;  
        }  
}  

function onClickRow(index){
    if (editIndex != index){  
        if (endEditing())
        {  
            $('#tblProductionProcedure').datagrid('selectRow', index)  
                    .datagrid('beginEdit', index);  
            editIndex  = index;  
        } 
        else
        {  
            $('#tblProductionProcedure').datagrid('selectRow', editIndex);  
        }  
    }  
}  

function Save()
{
    debugger;
    endEditing();
    if(!ValidateInput()) return;
    var oProductionSheet =  $('#divPP').data('ProductionSheet');
    oProductionSheet.ProductionProcedures= $('#tblProductionProcedure').datagrid('getRows');
    $.ajax({
            type: "POST",
            dataType: "json",            
            url : _sBaseAddress+"/ProductionSheet/SaveProductionProcedure",
            traditional: true,
            data:  JSON.stringify(oProductionSheet),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oProductionProcedures= jQuery.parseJSON(data);
                if(oProductionProcedures!=null)
                {
                    if(oProductionProcedures.length>0)
                    {
                        if (oProductionProcedures[0].ErrorMessage=="") 
                        {                   
                            alert("Data Save Successfully!!");    
                            window.location.href = sessionStorage.getItem("BackLink");
                        }
                        else 
                        {
                                alert(oProductionProcedures[0].ErrorMessage);
                        }
                    }
                    else
                    {                    
                        alert("Invlid Operations");
                    }
                }
                else
                {
                    alert("Invlid Operations");
                }
            },
            error: function (xhr, status, error) 
            {
                alert(error);
            }
        });
}



function ValidateInput()
{
    debugger;
    var oProductionSheet =  $('#divPP').data('ProductionSheet');
    if(oProductionSheet==null || parseInt(oProductionSheet.ProductionSheetID)<=0) 
   { 
        alert("Invalid Production Order!");         
        return false; 
   }

   var oProductionProcedures =  $('#tblProductionProcedure').datagrid('getRows');
   if(oProductionProcedures.length<=0)
   {
        alert("Please Add at least one Production Step!");
        return false;
   }  
   return true;
}
    
function Close()
{
    window.location.href = sessionStorage.getItem("BackLink");
}



</script>