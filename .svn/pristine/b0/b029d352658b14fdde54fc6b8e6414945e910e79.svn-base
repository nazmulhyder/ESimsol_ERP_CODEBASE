@{
    ViewBag.Title = "Earn Leave Setup";
}

@model IEnumerable <ESimSol.BusinessObjects.ELSetup>

<div ng-app="ELSetupModule" ng-controller="ELSetupController as MLCC">
    <div class="ui-grid-top-panel"><h6><b>Earn Leave Setup</b></h6></div>

    <section>
        <ul class="nav nav-tabs" style="background:#d6dbdf; color:white;">
            <li ng-class="{active:MLCC.IsSet(1)}">
                <a href="" ng-click="MLCC.SetTab(1)" style="color:black;">EL Setup</a>
            </li>
            <li ng-class="{active:MLCC.IsSet(2)}">
                <a href="" ng-click="MLCC.SetTab(2)" style="color:black;">EL Setup List</a>
            </li>
        </ul>
        <div ng-show="MLCC.IsSet(1)">
            <div class="form-inline">
                <div class="row" style="margin-top: 5px; margin-left:5px;">
                    <div class="col-md-6" style="border: 1px solid; padding: 10px 10px 10px 10px">
                        <h3 class="text-info">Earn Leave Setup</h3>
                        <div class="checkbox">
                            <label><input ng-model="chkIsConsiderLeave" type="checkbox" /> Consider Leave</label>
                        </div><br />
                        <div class="checkbox">
                            <label><input ng-model="chkIsConsiderDayOff" type="checkbox" /> Consider DayOff</label>
                        </div><br />
                        <div class="checkbox">
                            <label><input ng-model="chkIsConsiderHoliday" type="checkbox" /> Consider Holiday</label>
                        </div><br />
                        <div class="checkbox">
                            <label><input ng-model="chkIsConsiderAbsent" type="checkbox" /> Consider Absent</label>
                        </div><br />

                        <div style="margin-top:20px;"></div>

                        
                        <button type="button" class="btn btn-sm btn-primary pull-right" aria-label="Left Align" ng-click="btnSave()"><span class="glyphicon glyphicon-floppy-saved" aria-hidden="true"></span> Save</button>
                        
                        
                        
                        
                    </div>
                </div>
            </div>
            
        </div>
        <div ng-if="MLCC.IsSet(2)">
            <div class="form-inline">
                <button style="margin-left: 5px;" type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="btnInactive()"><span class="glyphicon glyphicon-off" aria-hidden="true"></span> {{ActiveInactive}}</button>
                <button style="margin-left: 5px;" type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="btnApprove()"><span class="glyphicon glyphicon-saved" aria-hidden="true"></span> Approve</button>
                <button style="margin-left: 5px;" type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="btnDelete()"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Delete</button>
            </div>
            <div ui-grid="ELSetupgridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav class="grid ui-grid-selectable"></div>
        </div>
    </section>
</div>

<style type="text/css">
        .form-control {
            height: 26px;
            padding: 0px 6px;
            font-size: 12px;
        }

        .grid {
            height: 480px;
            width: 100%;
        }

        .angular-grid {
            height: 480px;
            width: 100%;
        }

        .custom-pagination {
            margin-top: -15px;
            margin-bottom: -15px;
        }

        .spacing {
            padding-bottom: 5px;
        }
        .ui-grid-top-panel{
                background: linear-gradient(to bottom,#EFF5FF 0,#E0ECFF 100%);
        }
    </style>


                       

<script type="text/javascript">
    var  _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));

    var oELSetups =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    
    var oELSetupActive=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ELSetupActive));

    var  vELSetupModule = angular.module('ELSetupModule', ['ngAnimate','ui.bootstrap','ui.grid','ui.grid.selection','ui.grid.resizeColumns','ms.service']);
    vELSetupModule.controller('ELSetupController', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession) {
      
        $scope.ActiveInactive = "Inactive";

        $scope.chkIsConsiderLeave = oELSetupActive.IsConsiderLeave;
        $scope.chkIsConsiderDayOff = oELSetupActive.IsConsiderDayOff;
        $scope.chkIsConsiderHoliday = oELSetupActive.IsConsiderHoliday;
        $scope.chkIsConsiderAbsent = oELSetupActive.IsConsiderAbsent;

        $scope.ELSetupgridOptions ={
            enableRowHeaderSelection: false,
            enableRowSelection: true,
            enableFullRowSelection: true,
            multiSelect: false,
            enableColumnResizing: true,
            noUnselect : true,
            enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
            columnDefs: [
                { name: ' ', width: '3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>', cellClass: 'text-center', enableCellEdit: false, enableSorting: false, enableColumnResizing: false, enableColumnMenu: false },
                { field: 'IsConsiderLeave', name: 'ConsiderLeave', width: '12%', enableCellEdit: false,cellTemplate: '<input type="checkbox" ng-model="row.entity.IsConsiderLeave" ng-disabled="true">'
                },
                { field: 'IsConsiderDayOff', name: 'ConsiderDayOff', width: '12%', enableCellEdit: false,cellTemplate: '<input type="checkbox" ng-model="row.entity.IsConsiderDayOff" ng-disabled="true">' },
                { field: 'IsConsiderHoliday', name: 'ConsiderHoliday', width: '12%', enableCellEdit: false,cellTemplate: '<input type="checkbox" ng-model="row.entity.IsConsiderHoliday" ng-disabled="true">' },
                { field: 'IsConsiderAbsent', name: 'ConsiderAbsent', width: '12%', enableCellEdit: false,cellTemplate: '<input type="checkbox" ng-model="row.entity.IsConsiderAbsent" ng-disabled="true">' },
                { field: 'InactiveByName', name: 'InactiveBy', width: '12%', enableCellEdit: false },
                { field: 'InactiveDateInString', name: 'InactiveDate', width: '12%', enableCellEdit: false },
                { field: 'ApproveByName', name: 'ApproveBy', width: '12%', enableCellEdit: false },
                { field: 'ApproveDateInString', name: 'ApproveDate', width: '12%', enableCellEdit: false },
                
            ],
            data:oELSetups,
            onRegisterApi:function(ELSetupgridApi) {
                $scope.ELSetupgridApi = ELSetupgridApi;

                $scope.ELSetupgridApi.selection.on.rowSelectionChanged($scope, function (row) {
                    $scope.RowSelect(row.entity ); });
            }
        };
        $scope.RowSelect =  function (entity){
            debugger;
            if(entity.InactiveBy > 0) {
                $scope.ActiveInactive = "Active";
            } else {
                $scope.ActiveInactive = "Inactive";
            }
        }

        $scope.btnSave = function () {

            //alert( $scope.chkIsConsiderLeave);
            

            debugger;
            var oELSetup = {
                IsConsiderLeave : $scope.chkIsConsiderLeave,
                IsConsiderDayOff : $scope.chkIsConsiderDayOff,
                IsConsiderHoliday : $scope.chkIsConsiderHoliday,
                IsConsiderAbsent : $scope.chkIsConsiderAbsent
            };           
          
            $http.post(_sBaseAddress+'/ELSetup/Save', oELSetup).then(
                    function (response) {   
                        debugger;
                        var result=jQuery.parseJSON(response.data);
                        if(result.ELSetupID>0)
                        {
                            $scope.ELSetupgridOptions.data.push(result);

                            $scope.chkIsConsiderLeave = result.IsConsiderLeave;
                            $scope.chkIsConsiderDayOff = result.IsConsiderDayOff;
                            $scope.chkIsConsiderHoliday = result.IsConsiderHoliday;
                            $scope.chkIsConsiderAbsent = result.IsConsiderAbsent;

                            msModal.Message({headerTitle : '', bodyText:'Setup Saved Successfully', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                        }
                        else{
                            msModal.Message({headerTitle : '', bodyText:result.ErrorMessage, sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                        }
                    },
                    function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
            );
        };

        $scope.btnDelete = function () {
            debugger;
            var data=$scope.ELSetupgridApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            $scope.index=$scope.ELSetupgridOptions.data.indexOf(data[0]);
            msModal.Message({headerTitle : '', bodyText:'Are you sure to Delete?.', sucessText : ' Ok', cancelText : ' Cancel', feedbackType:true, autoClose : false}).result.then(function(result){
                if(result){
                    $http.post(_sBaseAddress+'/ELSetup/Delete',JSON.stringify(data[0])).then(
                                function (response) {
                                    if(jQuery.parseJSON(response.data)=='Deleted'){

                                        $scope.ELSetupgridOptions.data.splice($scope.index,1);
                                        msModal.Message({headerTitle : '', bodyText:'Deleted Successfully.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});

                                        

                                        $scope.chkIsConsiderLeave = false;
                                        $scope.chkIsConsiderDayOff = false;
                                        $scope.chkIsConsiderHoliday = false;
                                        $scope.chkIsConsiderAbsent = false;
                                    } 
                                    else{
                                        msModal.Message({headerTitle : '', bodyText:jQuery.parseJSON(response.data), sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                    }
                                },
                                function (response) {alert(jQuery.parseJSON(response.data));}
                            );
                }
            });
        };

        $scope.btnApprove = function ()
        {
            var data=$scope.ELSetupgridApi.selection.getSelectedRows();
            if(data==null || data.length<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            else if(data[0].ApproveBy!=0)
            {
                msModal.Message({headerTitle : '', bodyText:'Already approved.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            msModal.Message({headerTitle : '', bodyText:'Are you sure to approve?.', sucessText : ' Ok', cancelText : ' Cancel', feedbackType:true, autoClose : false}).result.then(function(result){
                if(result){
                    angular.forEach($scope.ELSetupgridOptions.data,function(value,index)
                    {
                        if(value.ELSetupID==data[0].ELSetupID)
                        {
                            $http.post(_sBaseAddress+'/ELSetup/ApproveELSetup', JSON.stringify(data[0])).then(
                                 function (response) 
                                 {
                                     var result=jQuery.parseJSON(response.data);
                                     if(result.ELSetupID>0)
                                     {
                                         debugger;
                                         $scope.ELSetupgridOptions.data[index]=result;
                                         $scope.ELSetupgridApi.grid.modifyRows($scope.ELSetupgridOptions.data);
                                         $scope.ELSetupgridApi.selection.selectRow(result);
                                     }
                                     else
                                     {
                                         alert(result.ErrorMessage);
                                     }
                                 },
                                 function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                           );
                        }
                    },$scope.ELSetupgridOptions.data);
            
                }
            
            });
               
        };

        
        $scope.btnInactive = function ()
        {debugger;
            var data=$scope.ELSetupgridApi.selection.getSelectedRows();
            if(data==null || data.length<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            var sStatus = "";
            if(data[0].InactiveBy > 0) {
                sStatus = "Active";
            }
            else {
                sStatus = "InActive";
            }
            msModal.Message({headerTitle : '', bodyText:'Are you sure to ' + sStatus + ' ?', sucessText : ' Ok', cancelText : ' Cancel', feedbackType:true, autoClose : false}).result.then(function(result){
                if(result){
                    angular.forEach($scope.ELSetupgridOptions.data,function(value,index)
                    {
                        if(value.ELSetupID==data[0].ELSetupID)
                        {
                            $http.post(_sBaseAddress+'/ELSetup/InactiveELSetup', JSON.stringify(data[0])).then(
                                 function (response) 
                                 {
                                     var result=jQuery.parseJSON(response.data);
                                     if(result.ELSetupID>0)
                                     {
                                         debugger;
                                         $scope.ELSetupgridOptions.data[index]=result;
                                         $scope.ELSetupgridApi.grid.modifyRows($scope.ELSetupgridOptions.data);
                                         $scope.ELSetupgridApi.selection.selectRow(result);
                                         if(result.InactiveBy > 0) {
                                             $scope.ActiveInactive = "Active";
                                         } else {
                                             $scope.ActiveInactive = "Inactive";
                                         }
                                     }
                                     else
                                     {
                                         alert(result.ErrorMessage);
                                     }
                                 },
                                 function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                           );
                        }
                    },$scope.ELSetupgridOptions.data);
            
                }
            
            });
               
        };




        //TAb selection
        this.tab = 1;
        this.SetTab = function (tabId)
        {

            this.tab = tabId;
        }
        this.IsSet = function (tabid)
        {
            debugger;
            return this.tab === tabid;
        }

        //$scope.IsSet(2);

    });


</script>




