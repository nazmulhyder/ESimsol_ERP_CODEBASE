@model IEnumerable<ESimSol.BusinessObjects.SampleOutStanding>
  
    @{
        ViewBag.Title = "Sample OutStanding Report(Adjustment)";
    }

     <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
                          <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
                              <label style="font-size:18px;">Please wait</label>
                              <div id="progressbar" style="width:100%;height:37px;"></div>
                          </div>
                      </div>
    <div class="easyui-panel menuMainCollectionTable" style="font-family:Tahoma; margin-left: 0px; height: 100%; width:100%">
        <table id="tblSORs" title="ample Outstanding Report(Adjustment)" style="width:100%; height:100%" class="easyui-datagrid" fit="true" fitcolumns="false" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="rowStyler: function(index,row){
                                         if (row.ContractorName=='Total'){
                                            return 'color:#016B18; font-weight:bold;';
                                        }
                                    }
                    ">
            <thead>
                <tr>
                    <th data-options=" field:'selected',checkbox:true"></th>
                    <th field="ContractorID" width="8%" align="left">Code</th>
                    <th field="ContractorName" width="30%" align="left">Buyer Name</th>
                    <th field="Opening" width="13%" align="right" formatter="formatPrice">Opening Value</th>
                    <th field="Debit" width="13%" align="right" formatter="formatPrice">Debit Value</th>
                    <th field="Credit" width="13%" align="right" formatter="formatPrice">Credit Value</th>
                    <th field="Closing" width="13%" align="right" formatter="formatPriceABS">Closing Value</th>


                </tr>
            </thead>
        </table>


            <div id="toolbar">
                <table style="width:100%" border="0" cellpadding="2" cellspacing="2">
                    <tr>
                        <td colspan="2" style="width:100%;font-size:12px; text-align:left;vertical-align:top">
                            Date<select id="cboDateSearch" style="width:10%;" onchange="DateActions();"></select>
                            <input id="txtStartDate" type="text" style="width: 110px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            To
                            <input id="txtEndDate" type="text" style="width: 110px;height:20px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>

                    </tr>
                    <tr>
                        <td style="width:30%;  font-size:12px;">
                            Party  <input type="text" style="width: 40%;" id="txtContractorName" placeholder="Search By Party" />
                            <a id="btnContractor" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnclrContractor" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>
                        <td style="width:70%;  font-size:12px; text-align:right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="Refresh()">Refresh </a>
                            <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview(Detail)</a>
                            <a id="btnPrintSummary" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview(Summary)</a>
                            <a id="btnPrintXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">ExportToXL(Detail)</a>
                            <a id="btnPrintXLSummary" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">ExportToXL(Summary)</a>
                        </td>

                    </tr>

                </table>
            </div>
</div>
    <script type="text/javascript">
        var _oSampleOutStandings=[];
        var _oSampleOutStanding=null;
        var _sBaseAddress="";
        var _oCompareOperators=[];
        var _sContractorIds="";
        var _nBUID=0;
        $(document).ready(function () {
            debugger;
            _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
            _oSampleOutStandings=@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
            _oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
            _nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
            $("#cboDateSearch").icsLoadCombo({
                List: _oCompareOperators,
                OptionValue: "id",
                DisplayText: "Value"
            });
            sessionStorage.setItem("Params", "");
            $("#progressbar").progressbar({value: 0});
            $("#progressbarParent").hide();
            $(".lblLoadingMessage").hide();
            $("txtContractorName").val("");
            
        });
        function updateProgress() {
            var value =$('#progressbar').progressbar('getValue');
            if (value < 96){
                value += Math.floor(Math.random() * 10);
                $('#progressbar').progressbar('setValue', value);
            }
        }
        function hideShow(miliseconds) {
            $("#progressbarParent").hide();
        }
        function DateActions() {
            DynamicDateActions("cboDateSearch", "txtStartDate", "txtEndDate");
        }
        function CheckFromAndToDateValidation(OperationComboId, FromDateId, ToDateId) {
            $("#" + OperationComboId).parent().parent().parent().find("select").removeClass("errorFieldBorder");
            var nCboVal = $("#" + OperationComboId).val();
            if (parseInt(nCboVal) == 5 || parseInt(nCboVal) == 6) {
                var fromDate = $("#" + FromDateId).datebox("getValue");
                var toDate = $("#" + ToDateId).datebox("getValue");
                if (new Date(fromDate) > new Date(toDate)) {
                    $("#" + ToDateId).focus();
                    $("#" + OperationComboId).addClass("errorFieldBorder");
                    $(".lblLoadingMessage").hide();
                    return false;
                } else {
                    $("#" + OperationComboId).removeClass("errorFieldBorder");
                    return true;
                }
            } else {
                return true;
            }
        }
      
  

        function Refresh()
        {
            debugger
            var Date = document.getElementById("cboDateSearch");
            var nDateType = Date.options[Date.selectedIndex].value;
            var date1=$('#txtStartDate').datebox('getValue');
            var date2= $('#txtEndDate').datebox('getValue');
            if(parseInt(nDateType) <=0 || nDateType==null)//Equ
            {  
                alert("Please, select Date caritria.");
                $('#cboDateSearch').focus();
                return ;
            }

            if(parseInt(nDateType) == 1)//Equ
            {  
                date2=date1;
            }
            var checkDate = CheckFromAndToDateValidation("cboDateSearch", "txtStartDate", "txtEndDate");
            if (!checkDate) {
                alert("Start date must be greater than end date.");
                return false;
            }

            var sParams = _sContractorIds + "~" +
                      nDateType + "~" +
                      date1 + "~" +
                      date2 ;
            //sessionStorage.setItem("Params", sParams);

            var oSampleOutStanding= {
                ErrorMessage : sParams
            }

            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
         
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/SampleOutStanding/AdvSearch_Party",
                traditional: true,
                data:  JSON.stringify(oSampleOutStanding),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    clearInterval(intervalID);
                    $("#progressbarParent").hide();
                    var _oSampleOutStandings = data;
                    if (_oSampleOutStandings.length>0)
                    {
                        RefreshList(_oSampleOutStandings);
                       
                    }
                    else {
                        alert("Data not Found");
                        DynamicRefreshList([], 'tblSORs');
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
        function RefreshList(oSampleOutStandings)
        {
            $('#tblSORs').empty();
            $('#tblSORs').datagrid({ selectOnCheck: false, checkOnSelect: false });
            data = oSampleOutStandings;
            data = { "total": "" + data.length + "", "rows": data };
            $('#tblSORs').datagrid('loadData', data);
           
            RefreshSummary();
        }
        function RefreshSummary()
        {
            debugger;
            var oRows = $('#tblSORs').datagrid('getRows');
            if(oRows.length>0)
            {
               
                var nOpening = 0,nDebit=0,nCredit=0,nClosing=0;
                for(var i=0;i<oRows.length;i++)
                {
                    nOpening = parseFloat(nOpening)+parseFloat(oRows[i].Opening);
                    nDebit = parseFloat(nDebit)+parseFloat(oRows[i].Debit);
                    nCredit = parseFloat(nCredit)+parseFloat(oRows[i].Credit);
                    nClosing = parseFloat(nClosing)+parseFloat(oRows[i].Closing);
                }
                
                nOpening = parseFloat(nOpening).toFixed(2);
                nDebit = parseFloat(nDebit).toFixed(2);
                nCredit = parseFloat(nCredit).toFixed(2);
                nClosing = parseFloat(nClosing).toFixed(2);
                debugger
                var oRow =
                {   ContractorID:0,
                    ContractorName : 'Total',
                    Opening:nOpening,
                    Debit:nDebit,
                    Credit:nCredit,
                    Closing:nClosing
                }
         
                $('#tblSORs').datagrid('appendRow',oRow); 
            } 
        }
        

      

       
       


        $("#txtContractorName").keydown(function (e) {
            if (e.keyCode === 13) // Enter Press
            {
                PickContractor();
            }
            else if (e.keyCode === 08) 
            {
                $("#txtContractorName").removeClass("fontColorOfPickItem");
                _sContractorIds ="";
            }
        });

        $("#btnclrContractor").click(function () {
            $("#txtContractorName").removeClass("fontColorOfPickItem");
            $("#txtContractorName").val("");
            _sContractorIds ="";
        });

        $("#btnContractor").click(function () {
            PickContractor();
        });
        function PickContractor() {
            var oContractor = {
                Params: '2,3' + '~' + $.trim($("#txtContractorName").val()+"~"+_nBUID)
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            
            $.icsDataGets(obj, function (response) {
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {
                        var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 280, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winContractors',
                            winclass: 'clsContractor',
                            winwidth: 400,
                            winheight: 460,
                            tableid: 'tblContractor',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Buyer List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }
                }
                else {
                    alert("Sorry, No Contactor Found.");
                }
            });
        }
        function IntializePickerbutton(oPickerobj) {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                //for Single Select
                SetPickerValueAssign(oPickerobj);
            });
            $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
                if (e.which == 13)//enter=13
                {
                    SetPickerValueAssign(oPickerobj);

                }
            });
        }
        function SetPickerValueAssign(oPickerobj) {
            var oreturnObj = null, oreturnobjs = [];
            if (oPickerobj.multiplereturn) {
                oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
            } else {
                oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
            }
            $("#" + oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
           
            if (oPickerobj.winid == 'winContractors')
            {
                if (oreturnobjs != null && oreturnobjs.length > 0)
                {
                    _sContractorIds=''; var sMessage='';
                    sMessage=(oreturnobjs.length>1)? oreturnobjs.length +" Buyer's Selected" : oreturnobjs[0].Name;
                   
                    $("#txtContractorName").addClass("fontColorOfPickItem");
                    $('#txtContractorName').val(sMessage);

                    for(var i=0;i<oreturnobjs.length;i++){
                        _sContractorIds=_sContractorIds+oreturnobjs[i].ContractorID+',';
                    }
                    _sContractorIds=_sContractorIds.substring(0,_sContractorIds.length-1);
                }
            }

        }
      
        function formatPriceABS(val,row)
        {
   
            val=parseFloat(val);
            var test = val.toFixed(2);
            if (val < 0)
            {
                test=(-1*test);
            }
            var tests = addComma(test);
            if (val < 0)
            {
                return '<span style="color:red;">('+tests+')</span>';
            }
            else 
            {
                return tests;
            }

        }


        function addComma(nStr)
        {

            nStr += '';
            x = nStr.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
            }
            return x1 + x2;
        }
       
        $("#btnPrint").click(function(){

            var oSampleOutStandings = $('#tblSORs').datagrid('getChecked');
            if(oSampleOutStandings.length<=0)
            {
                alert("Please checked at least one Buyer Name.");
                return;
            }
            var nContractorIDs ="";

            for(var i=0;i<oSampleOutStandings.length;i++){
                if(oSampleOutStandings[i].ContractorID>0)
                {
                    nContractorIDs=nContractorIDs+oSampleOutStandings[i].ContractorID+',';
                }
            }
            nContractorIDs=nContractorIDs.substring(0,nContractorIDs.length-1);

            var Date = document.getElementById("cboDateSearch");
            var nDateType = Date.options[Date.selectedIndex].value;
            var date1=$('#txtStartDate').datebox('getValue');
            var date2= $('#txtEndDate').datebox('getValue');

            if(parseInt(nDateType) <=0 || nDateType==null)//Equ
            {  
                alert("Please, select Date caritria.");
                $('#cboDateSearch').focus();
                return ;
            }

            var checkDate = CheckFromAndToDateValidation("cboDateSearch", "txtStartDate", "txtEndDate");
            if (!checkDate) {
                alert("Start date must be greater than end date.");
                return false;
            }

            if(parseInt(nDateType) == 1)//Equ
            {  
                date2=date1;
            }
            var sParams =    nContractorIDs + "~" +
                       nDateType + "~" +
                       date1 + "~" +
                       date2 ;

            window.open(_sBaseAddress + '/SampleOutStanding/Print_SampleOutStanding?sTempString='+sParams, "_blank");
        });
        
        $("#btnPrintSummary").click(function(){

            var oSampleOutStandings = $('#tblSORs').datagrid('getChecked');
            //if(oSampleOutStandings.length<=0)
            //{
            //    alert("Please checked at least one Buyer Name.");
            //    return;
            //}

            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);

            var nContractorIDs ="";

            for(var i=0;i<oSampleOutStandings.length;i++){
                if(oSampleOutStandings[i].ContractorID>0)
                {
                    nContractorIDs=nContractorIDs+oSampleOutStandings[i].ContractorID+',';
                }
            }
            nContractorIDs=nContractorIDs.substring(0,nContractorIDs.length-1);

            var Date = document.getElementById("cboDateSearch");
            var nDateType = Date.options[Date.selectedIndex].value;
            var date1=$('#txtStartDate').datebox('getValue');
            var date2= $('#txtEndDate').datebox('getValue');

            if(parseInt(nDateType) <=0 || nDateType==null)//Equ
            {  
                alert("Please, select Date caritria.");
                $('#cboDateSearch').focus();
                return ;
            }

            var checkDate = CheckFromAndToDateValidation("cboDateSearch", "txtStartDate", "txtEndDate");
            if (!checkDate) {
                alert("Start date must be greater than end date.");
                return false;
            }

            if(parseInt(nDateType) == 1)//Equ
            {  
                date2=date1;
            }
            var sParams =    nContractorIDs + "~" +
                       nDateType + "~" +
                       date1 + "~" +
                       date2 ;

            window.open(_sBaseAddress + '/SampleOutStanding/Print_SampleOutStandingSummary?sTempString='+sParams, "_blank");

            clearInterval(intervalID);
            $("#progressbarParent").hide();
        });

        $("#btnPrintXL").click(function(){
            var oSampleOutStandings = $('#tblSORs').datagrid('getChecked');
            if(oSampleOutStandings.length<=0)
            {
                alert("Please checked at least one Buyer Name.");
                return;
            }
            var nContractorIDs ="";

            for(var i=0;i<oSampleOutStandings.length;i++){
                if(oSampleOutStandings[i].ContractorID>0)
                {
                    nContractorIDs=nContractorIDs+oSampleOutStandings[i].ContractorID+',';
                }
            }
            nContractorIDs=nContractorIDs.substring(0,nContractorIDs.length-1);

            var Date = document.getElementById("cboDateSearch");
            var nDateType = Date.options[Date.selectedIndex].value;
            var date1=$('#txtStartDate').datebox('getValue');
            var date2= $('#txtEndDate').datebox('getValue');

            if(parseInt(nDateType) <=0 || nDateType==null)//Equ
            {  
                alert("Please, select Date caritria.");
                $('#cboDateSearch').focus();
                return ;
            }

            var checkDate = CheckFromAndToDateValidation("cboDateSearch", "txtStartDate", "txtEndDate");
            if (!checkDate) {
                alert("Start date must be greater than end date.");
                return false;
            }

            if(parseInt(nDateType) == 1)//Equ
            {  
                date2=date1;
            }
            var sParams =    nContractorIDs + "~" +
                       nDateType + "~" +
                       date1 + "~" +
                       date2 ;

            window.open(_sBaseAddress + '/SampleOutStanding/Print_SampleOutStandingXL?sTempString='+sParams, "_blank");
        });
        $("#btnPrintXLSummary").click(function(){
         
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);

            debugger
            var Date = document.getElementById("cboDateSearch");
            var nDateType = Date.options[Date.selectedIndex].value;
            var date1=$('#txtStartDate').datebox('getValue');
            var date2= $('#txtEndDate').datebox('getValue');
            if(parseInt(nDateType) <=0 || nDateType==null)//Equ
            {  
                alert("Please, select Date caritria.");
                $('#cboDateSearch').focus();
                return ;
            }

            if(parseInt(nDateType) == 1)//Equ
            {  
                date2=date1;
            }
            var checkDate = CheckFromAndToDateValidation("cboDateSearch", "txtStartDate", "txtEndDate");
            if (!checkDate) {
                alert("Start date must be greater than end date.");
                return false;
            }

            var sParams = _sContractorIds + "~" +
                      nDateType + "~" +
                      date1 + "~" +
                      date2 ;

            window.open(_sBaseAddress + '/SampleOutStanding/Print_SampleOutStandingSummartXL?sTempString='+sParams, "_blank");

            clearInterval(intervalID);
            $("#progressbarParent").hide();
        });

    </script>
