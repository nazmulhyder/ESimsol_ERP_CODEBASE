<html>
@{
    ViewBag.title = "Master LC With Order";
}
<body>
    @model ESimSol.BusinessObjects.MasterLC
    <script src="~/Views/CommonModal/CommonHistoryModal.js"></script>
    <div id="divMLC" class="menuMainCollectionTable" ng-app="MasterLCApp" ng-controller="MasterLCController as MLCC">
        <div style="font-family:Tahoma;text-align:center;height:75vh;width:99%;" class="regionMLC">
            <section>
                <fieldset style="width:100%">
                    <legend>Master LC Info :</legend>
                    <div class="row col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label"> File No:</label></div>
                        <div class="col-md-3 text-left">
                            <input ng-model="MasterLC.FileNo" class="form-control" disabled />
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">LC No:</label></div>
                        <div class="col-md-3 text-left">
                            <input ng-model="MasterLC.MasterLCNo" class="form-control" disabled />
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Applicant:</label></div>
                        <div class="col-md-3 text-left">
                            <input ng-model="MasterLC.ApplicantName" class="form-control" disabled />
                        </div>
                    </div>
                    <div class="row col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label"> Issue Date:</label></div>
                        <div class="col-md-3 text-left">
                            <input class="form-control" ng-model="MasterLC.MasterLCDateSt" disabled>
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Receive Date:</label></div>
                        <div class="col-md-3 text-left">
                            <input class="form-control" ng-model="MasterLC.ReceiveDateInString" disabled>
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Beneficiary:</label></div>
                        <div class="col-md-3 text-left">
                            <input class="form-control" ng-model="MasterLC.BeneficiaryName" disabled>
                        </div>
                    </div>
                    <div class="row col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label"> Shipment Date:</label></div>
                        <div class="col-md-3 text-left">
                            <input class="form-control" ng-model="MasterLC.LastDateofShipmentSt" disabled>
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Expire Date:</label></div>
                        <div class="col-md-3 text-left">
                            <input class="form-control" ng-model="MasterLC.ExpireDateSt" disabled>
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Issue Bank:</label></div>
                        <div class="col-md-3 text-left">
                            <input ng-model="MasterLC.IssueBankName" class="form-control" disabled>
                        </div>
                    </div>
                    <div class="row col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label"> Currency:</label></div>
                        <div class="col-md-3 text-left">
                            <input class="form-control" ng-model="MasterLC.CurrencySymbol" disabled>
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Amount:</label></div>
                        <div class="col-md-3 text-right">
                            <input type="text" class="form-control" ng-model="MasterLC.LCValue" disabled>
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Advice Bank:</label></div>
                        <div class="col-md-3 text-left">
                            <input class="form-control" ng-model="MasterLC.AdviceBankName" disabled>
                        </div>
                    </div>
                    <div class="row col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label"> LC Status:</label></div>
                        <div class="col-md-3 text-left">
                            <input ng-model="MasterLC.LCStatusInString" class="form-control" disabled />
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Consignee:</label></div>
                        <div class="col-md-3 text-left">
                            <input class="form-control" ng-model="MasterLC.ConsigneeName" disabled>
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Notify Party:</label></div>
                        <div class="col-md-3 text-left">
                            <input ng-model="MasterLC.NotifyPartyName" class="form-control" disabled>
                        </div>
                    </div>
                    <div class="row col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label">Remark:</label></div>
                        <div class="col-md-10 text-left">
                            <input ng-model="MasterLC.Remark" class="form-control" disabled />
                        </div>
                    </div>
                </fieldset>

                <div class="ui-grid-top-panel" style="text-align:left;">
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="AddMLCDetail()" ng-disabled="disableAllButton"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="EditMLCDetail()" ng-disabled="disableAllButton"><span class="glyphicon glyphicon-edit" aria-hidden="true"> Edit</span></button>
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RemoveMLCDetail()" ng-disabled="disableAllButton"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Remove</span></button>
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="PIHistory()" ng-disabled="disableAllButton"><span class="glyphicon glyphicon-remove" aria-hidden="true"> PI History</span></button>
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="PIRevise()" ng-disabled="disableAllButton"><span class="glyphicon glyphicon-share-alt" aria-hidden="true"> PI Revise</span></button>
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RefreshMLCDetail()" ng-disabled="disableAllButton"><span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                </div>
                <div style="width: 100%; height:255px;" ui-grid="gridOptionsMLCDetail" ui-grid-selection></div>
            </section>
        </div>

        <fieldset>
            <legend>Action</legend>
            <div class="row col-md-12 text-right">
                @*<button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="save()"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Save</span> </button>*@
                <button type="button" id="btnclose" class="btn btn-sm" aria-label="Left Align" ng-click="MLCWOTClose()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
            </div>
        </fieldset>
    
        <script type="text/ng-template" id="ProformaInvoice.html">
            <div class="modal-header">
                <h4 class="modal-title" id="modal-title">Proforma Invoice (PI)</h4>
            </div>
            <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
                <div style="font-family:Tahoma; text-align:center;width:100%;" class="regionMLC">
                    <fieldset>
                        <legend>PI Info :</legend>
                        <div class="row col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label">Buyer Name:</label></div>
                            <div class="col-md-3 text-left">
                                <input ng-model="PI.BuyerName" class="form-control" disabled />
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">Issue Date:</label></div>
                            <div class="col-md-3 text-left">
                                <input ng-model="PI.IssueDateInString" class="form-control" disabled />
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">PI No:</label></div>
                            <div class="col-md-3 text-left">
                                <input ng-model="PI.PINo" class="form-control" disabled />
                            </div>
                        </div>
                        <div class="row col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label">LC Favor Of:</label></div>
                            <div class="col-md-3 text-left">
                                <input ng-model="PI.LCFavorOfName" class="form-control" disabled />
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">Currency:</label></div>
                            <div class="col-md-3 text-left">
                                <input ng-model="PI.CurrencyName" class="form-control" disabled />
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">M.Unit:</label></div>
                            <div class="col-md-3 text-left">
                                <select class="form-control" ng-model="PI.UnitID" ng-options="item.MeasurementUnitID as item.UnitNameSymbol for item in MUs"></select>
                            </div>
                        </div>
                        <div class="row col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label">Transfer Bank :</label></div>
                            <div class="col-md-3 text-left">
                                <input ng-model="PI.BankName" class="form-control" disabled />
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">Delivery Term :</label></div>
                            <div class="col-md-3 text-left">
                                <select class="form-control" ng-model="PI.DeliveryTerm" ng-options="item.id as item.Value for item in DTs"></select>
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">Origin :</label></div>
                            <div class="col-md-3 text-left">
                                <input ng-model="PI.Origin " class="form-control" ng-disabled="disabled" />
                            </div>
                        </div>
                        <div class="row col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label">Payment Term :</label></div>
                            <div class="col-md-3 text-left">
                                <select class="form-control" ng-model="PI.PaymentTerm" ng-options="item.id as item.Value for item in PTs"></select>
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">L.Port(Sea) :</label></div>
                            <div class="col-md-3 text-left">
                                <input ng-model="PI.PortOfLoadingSea" class="form-control" ng-disabled="disabled" required />
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">L.Port(Air) :</label></div>
                            <div class="col-md-3 text-left">
                                <input ng-model="PI.PortOfLoadingAir" class="form-control" ng-disabled="disabled" required />
                            </div>
                        </div>
                        <div class="row col-md-12">
                            <div class="col-md-2 text-right"><label class="control-label">Applicant :</label></div>
                            <div class="col-md-3 text-left">
                                <input ng-model="PI.ApplicantName" class="form-control" disabled />
                            </div>
                            <div class="col-md-2 text-right"><label class="control-label">Remarks :</label></div>
                            <div class="col-md-3 text-left">
                                <input ng-model="PI.Note" class="form-control" ng-disabled="disabled" />
                            </div>
                        </div>
                    </fieldset>
                    <div class="ui-grid-top-panel" style="text-align:left;">
                        <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="PickOrder()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Pick Order</span></button>
                        <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RemovePIDetail()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Remove</span></button>
                        <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RefreshPIDetail()"><span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                    </div>
                    <div style="width: 100%; height:200px;" ui-grid="gridOptionForPIDetail" ui-grid-selection></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-primary btn-sm" aria-label="Left Align" ng-click="PISave()" ng-hide="hidebtnSave"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Save</button>
                <button type="button" class="btn-primary btn-sm" aria-label="Left Align" ng-click="PIAcceptRevise()" ng-hide="hidebtnAcceptRevise"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Accept Revise</button>
                <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="PICancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
            </div>
        </script>
    </div>
</body>
</html>
<style type="text/css">
  .regionMLC .form-horizontal .control-label {
        padding-top:1px;
    }

  .regionMLC .form-control {
        height: 26px;
        padding: 0px 6px;
        font-size: 12px;
    }

    .regionMLC .col-md-12 {
        width: 100%;
        padding-right: 5px;
        padding-left: 5px;
        margin-bottom: 5px;
    }

    .regionMLC .col-md-2 {
        width: 13%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionMLC .col-md-3 {
        width: 20%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionMLC .col-md-4 {
        width: 28%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionMLC .col-md-5 {
        width: 33.33%;
        padding-right: 5px;
        padding-left: 0px;
    }

    .regionMLC .col-md-6 {
        width: 60%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionMLC .col-md-10 {
        width: 86%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionMLC .btn-sm {
        padding: 3px 10px;
    }

    .regionMLC .input-group-addon {
        padding: 4px 8px;
    }
</style>
<script type="text/javascript">
    var oMasterLC =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oCurrencies =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.Currencies));
    var oBusinessUnits =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.BusinessUnits));
    var oMasterLCDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.MasterLCDetails));
    var oMasterLCTermsAndConditions =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.MasterLCTermsAndConditions));
    var oPaymentTerms = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PaymentTerms));
    var oDeliveryTerms = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DeliveryTerms));
    var oMeasurementUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.MeasurementUnits));
    debugger;
    var MasterLCApp = angular.module('MasterLCApp', ['ngAnimate', 'ui.bootstrap','ui.grid','ui.grid.selection','ui.grid.edit', 'ui.grid.rowEdit','ui.grid.cellNav','ms.service','CommonHistory.service']);
    MasterLCApp.controller('MasterLCController', function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession,msGridControl,commonhistoryservice) {
        debugger;
        oMasterLC.BUID = sessionStorage.getItem('BUID');
        $scope.Currencies = oCurrencies;
        $scope.BusinessUnits = oBusinessUnits;
        $scope.MasterLCDetails = oMasterLCDetails;
        $scope.MasterLCTermsAndConditions = oMasterLCTermsAndConditions;
        $scope.PaymentTerms = oPaymentTerms;
        $scope.DeliveryTerms = oDeliveryTerms;
        $scope.MeasurementUnits = oMeasurementUnits;
        $scope.MasterLC = oMasterLC;
        $scope.disableAllButton = false;

        if (sessionStorage.getItem("MasterLCHeader") == "View Master LC With Order")
            $scope.disableAllButton = true;

        $scope.gridOptionsMLCDetail = {
            showColumnFooter: true,
            multiSelect: false,
            enableRowSelection: true,
            enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
            columnDefs: [
              { field: 'PINo', name:'PI No', width:'15%' },
              { field: 'PIStatusInString', name:'PI Status', width:'15%' },
              { field: 'BuyerName', name: 'Buyer', width: '20%',align:'left', enableSorting: false },
              { field: 'PIIssueDateInString', name: 'Issue Date', width: '10%', enableSorting: false },
              { field: 'PIQty', name: 'PI Qty',aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, width: '10%',align:'right' },
              { field: 'Amount', name: 'Total Amount',aggregationType: uiGridConstants.aggregationTypes.sum,aggregationHideLabel: true,  width: '15%', enableSorting: false }
            ],
            data : oMasterLCDetails,
            onRegisterApi : function (gridApi) {
                $scope.gridDetailApi = gridApi;
            }
        };
        
        $scope.PIHistory =function () {
            debugger;
            var oProformaInvoice = $scope.gridDetailApi.selection.getSelectedRows()[0];
            if(oProformaInvoice == null || oProformaInvoice.ProformaInvoiceID <= 0) {
                alert("Please select a item from list!");
                return;
            }
            if(oProformaInvoice.PIStatus<2 ) {
                alert("There is No Revise History!");
                return;
            }
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/ProformaInvoice/GetProformaInvoiceReviseHistory',$.param(oProformaInvoice), config).then(
                function (response) {
                    var oProformaInvoices = jQuery.parseJSON(response.data);
                    var oColumns = [{ field: 'PINo', name: 'PI No', width: '10%' },
                                    { field: 'PIStatusInString', name: 'Status', width: '10%' },
                                    { field: 'BuyerName', name: 'Buyer', width: '15%' },
                                    { field: 'IssueDateInString', name: 'Issue Date', width: '10%' },
                                    { field: 'LCFavorOfName', name: 'LC Favor Of', width: '10%' },
                                    { field: 'TransferingBankName', name: 'Transferin Bank', width: '15%' },
                                    { field: 'ApprovedByName', name: 'Approved By', width: '15%' },
                                    { field: 'Quantity', name: 'Quantity', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, width: '10%' },
                                    { field: 'NetAmount', name: 'Total Amount', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, width: '15%' }];

                    var modalObj={
                        size : 'lg',
                        appcontroller : 'MasterLCController',
                        result : oProformaInvoices,
                        multiSelect : false,
                        showColumnFooter : true,
                        pickertitle : 'PI Revise History List',
                        objectFieldName : 'ProformaInvoiceLogID',
                        controllerName : 'ProformaInvoice',
                        controlleractionName : 'PrintProformaInvoiceLogPreview',
                        columnDefs : oColumns
                    }
                    var modalInstance = commonhistoryservice.Instance(modalObj);               
                },
                function (response) { 
                    alert(jQuery.parseJSON(response.data).Message);
                });
        };

        $scope.AddMLCDetail = function () {
            debugger;
            var oProformaInvoice = $scope.RefreshObject();
            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'lg',
                templateUrl: 'ProformaInvoice.html',
                controller: 'ProformaInvoiceCtrl',
                controllerAs: 'ProformaInvoiceController',
                resolve: {
                    obj: function () {
                        return { 
                                MasterLCID : $scope.MasterLC.MasterLCID,
                                MLCDetails : $scope.gridOptionsMLCDetail.data,
                                MLCValue : $scope.MasterLC.LCValue,
                                MasterLCDetailID : 0, 
                                PI : oProformaInvoice, 
                                PTs : $scope.PaymentTerms, 
                                DTs : $scope.DeliveryTerms, 
                                MUs : $scope.MeasurementUnits,
                                tempPIStatus : 2
                        };
                    }
                }
            });
            modalInstance.result.then(
                function (result) {
                    debugger;
                    if(result.ErrorMessage == "" && result != null){
                        $scope.gridOptionsMLCDetail.data.push(result);
                    }
                },
                function () {
                    $log.info('Modal dismissed at: ' + new Date());
                });
        };

        $scope.EditMLCDetail = function () {
            debugger;
            var oMLCDetail = $scope.gridDetailApi.selection.getSelectedRows()[0];
            if(oMLCDetail == null || oMLCDetail.length <= 0) {
                alert("Please Select an item from list");
                return;
            }
            var SelectedRowIndex = $scope.gridOptionsMLCDetail.data.indexOf(oMLCDetail);
            var config = { headers: { 'Content-Type': 'application/json; charset=utf-8;' } };
            $http.post(_sBaseAddress + '/MasterLC/getPIWithPIDetails',JSON.stringify(oMLCDetail), config).then(
                function (response) {
                    debugger;
                    var oPI = jQuery.parseJSON(response.data);
                    if (oPI.ErrorMessage == "" || oPI.ErrorMessage == null) {
                        debugger;
                        var modalInstance = $uibModal.open({
                            ariaLabelledBy: 'modal-title',
                            ariaDescribedBy: 'modal-body',
                            size: 'lg',
                            templateUrl: 'ProformaInvoice.html',
                            controller: 'ProformaInvoiceCtrl',
                            controllerAs: 'ProformaInvoiceController',
                            resolve: {
                                obj: function () {
                                    return { 
                                            MasterLCID : $scope.MasterLC.MasterLCID, 
                                            MLCDetails : $scope.gridOptionsMLCDetail.data,
                                            MLCValue : $scope.MasterLC.LCValue,
                                            MasterLCDetailID : oMLCDetail.MasterLCDetailID, 
                                            PI : oPI, 
                                            PTs : $scope.PaymentTerms, 
                                            DTs : $scope.DeliveryTerms, 
                                            MUs : $scope.MeasurementUnits,
                                            tempPIStatus : 2
                                    };
                                }
                            }
                        });
                        modalInstance.result.then(
                            function (result) {
                                debugger;
                                if (result.ErrorMessage == "" && result != null) {
                                    $scope.gridOptionsMLCDetail.data[SelectedRowIndex] = result;
                                }
                            },
                            function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                    }
                    else{
                        alert(oPI.ErrorMessage);
                    }
                },
                function (response) {
                    alert(response.statusText);
                });
        };

        $scope.RefreshObject = function () {
            debugger;
            var oProformaInvoice = {
                ProformaInvoiceID : 0,
                PINo : "",
                IssueDate : $scope.MasterLC.MasterLCDate,
                IssueDateInString : $scope.MasterLC.MasterLCDateSt,
                PIStatus : 0,
                PIStatusInInt : 0,
                BuyerID : $scope.MasterLC.Applicant,
                BuyerName : $scope.MasterLC.ApplicantName,
                LCFavorOf : $scope.MasterLC.Beneficiary,
                LCFavorOfName : $scope.MasterLC.BeneficiaryName,
                TransferBankAccountID : $scope.MasterLC.AdviceBankID,
                BankName : $scope.MasterLC.AdviceBankName,
                UnitID  : 0,
                Quantity : 0,
                CurrencyID  : $scope.MasterLC.CurrencyID,
                CurrencyName : $scope.MasterLC.CurrencyName,
                CurrencySymbol : $scope.MasterLC.CurrencySymbol,
                PaymentTerm : 0,
                PaymentTermInInt : 0,
                Origin : "",
                DeliveryTerm : 0,
                DeliveryTermInInt : 0,
                PortOfLoadingAir : "",
                PortOfLoadingSea : "",
                Note : "",
                ApplicantID : $scope.MasterLC.Applicant,
                ApplicantName : $scope.MasterLC.ApplicantName,
                BUID : parseInt(sessionStorage.getItem('BUID')),
                GrossAmount : 0,
                DiscountAmount : 0,
                AdditionalAmount : 0,
                NetAmount : 0,
                CauseOfAddition : "",
                CauseOfDiscount : "",
                ProformaInvoiceDetails : [],
                ProformaInvoiceRequiredDocs : [],
                ProformaInvoiceTermsAndConditions : []
            };
            return oProformaInvoice;
        };

        $scope.RefreshMLCDetail = function () {
            $scope.gridOptionsMLCDetail.data =  $scope.gridOptionsMLCDetail.data;
        };

        $scope.RemoveMLCDetail = function () {
            debugger;
            var oMLCDetail = $scope.gridDetailApi.selection.getSelectedRows()[0];
            if(oMLCDetail==null){
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex = $scope.gridOptionsMLCDetail.data.indexOf(oMLCDetail);
            if (!confirm("Confirm to Delete?")) return ;

            var config = { headers: { 'Content-Type': 'application/json; charset=utf-8;' } };
            $http.post(_sBaseAddress + '/MasterLC/DeleteMLCDeatil',JSON.stringify(oMLCDetail), config).then(
                function (response) {
                    debugger;
                    if (jQuery.parseJSON(response.data) == 'Deleted') {
                        alert("Successfully Deleted.");
                        $scope.gridOptionsMLCDetail.data.splice(SelectedRowIndex,1);
                    }
                    else {
                        alert(jQuery.parseJSON(response.data));
                    }
                },
                function (response) {
                    alert(response.statusText);
                });
        };

        $scope.PIRevise = function () {
            debugger;
            var oMLCDetail = $scope.gridDetailApi.selection.getSelectedRows()[0];
            if(oMLCDetail == null || oMLCDetail.length <= 0) {
                alert("Please Select an item from list");
                return;
            }
            var SelectedRowIndex = $scope.gridOptionsMLCDetail.data.indexOf(oMLCDetail);
            var config = { headers: { 'Content-Type': 'application/json; charset=utf-8;' } };
            $http.post(_sBaseAddress + '/MasterLC/getPIWithPIDetails',JSON.stringify(oMLCDetail), config).then(
                function (response) {
                    debugger;
                    var oPI = jQuery.parseJSON(response.data);
                    if (oPI.ErrorMessage == "" || oPI.ErrorMessage == null) {
                        debugger;
                        var modalInstance = $uibModal.open({
                            ariaLabelledBy: 'modal-title',
                            ariaDescribedBy: 'modal-body',
                            size: 'lg',
                            templateUrl: 'ProformaInvoice.html',
                            controller: 'ProformaInvoiceCtrl',
                            controllerAs: 'ProformaInvoiceController',
                            resolve: {
                                obj: function () {
                                    return { 
                                                MasterLCID : $scope.MasterLC.MasterLCID, 
                                                MLCDetails : $scope.gridOptionsMLCDetail.data,
                                                MLCValue : $scope.MasterLC.LCValue,
                                                MasterLCDetailID : oMLCDetail.MasterLCDetailID, 
                                                PI : oPI, 
                                                PTs : $scope.PaymentTerms, 
                                                DTs : $scope.DeliveryTerms, 
                                                MUs : $scope.MeasurementUnits,
                                                tempPIStatus : 5
                                           };
                                }
                            }
                        });
                        modalInstance.result.then(
                            function (result) {
                                debugger;
                                if (result.ErrorMessage == "" && result != null) {
                                    $scope.gridOptionsMLCDetail.data[SelectedRowIndex] = result;
                                }
                            },
                            function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                    }
                    else{
                        alert(oPI.ErrorMessage);
                    }
                },
                function (response) {
                    alert(response.statusText);
                });
        };

        $scope.MLCWOTClose = function () {
            window.location.href = sessionStorage.getItem("BackLink");
        };
    });

    MasterLCApp.controller('ProformaInvoiceCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) {
        debugger;
        $(document).on('mousemove', '.modal-body', function () {
            $('.date-container').datepicker({
                format: "dd M yyyy",
                calendarWeeks: true,
                autoclose: true,
                todayHighlight: true
            });
        });

        $scope.hidebtnSave = false;
        $scope.hidebtnAcceptRevise = false;

        $scope.MasterLCID = obj.MasterLCID;
        $scope.MLCDetails = obj.MLCDetails;
        $scope.MLCValue = obj.MLCValue;
        $scope.MasterLCDetailID = obj.MasterLCDetailID;
        $scope.PI = obj.PI;     // PI stands for Proforma Invoice
        $scope.PTs = obj.PTs;   // PTs stands for PaymentTerms
        $scope.DTs = obj.DTs;   // DTs stands for DeliveryTerms
        $scope.MUs = obj.MUs;   // MUs stands for MeasurementUnits
        $scope.TempPIStatus = obj.tempPIStatus;

        if ($scope.TempPIStatus == 5) {
            $scope.hidebtnSave = true;
        }
        else {
            $scope.hidebtnAcceptRevise = true;
        }

        $scope.gridOptionForPIDetail = {
            multiSelect: false,
            enableRowSelection: true,
            enableHorizontalScrollbar: true,
            columnDefs: [
              { field: 'StyleNo', name:'StyleNo', width:'15%' },
              { field: 'DeptName', name:'DeptName', width:'15%' },
              { field: 'OrderRecapNo', name: 'OrderRecapNo', width: '20%',align:'left', enableSorting: false },
              { field: 'SessionName', name: 'SessionName', width: '10%', enableSorting: false },
              { field: 'ProductName', name: 'ProductName', width: '10%',align:'right' },
              { field: 'FabricName', name:'FabricName', width:'15%' },
              { field: 'ShipmentDateInString', name:'ShipmentDate', width:'15%' },
              { field: 'OrderRecapQty', name: 'OrderRecapQty', width: '20%',align:'left', enableSorting: false },
              { field: 'Quantity', name: 'Quantity', width: '10%', enableSorting: false },
              { field: 'FOB', name: 'FOB', width: '10%',align:'right' },
              { field: 'Amount', name: 'Amount', width: '15%', enableSorting: false }
            ],
            data : $scope.PI.ProformaInvoiceDetails,
            onRegisterApi : function (gridApi) {
                $scope.gridPIDetailApi = gridApi;
            }
        };

        $scope.IsValidateInput = function () {
            debugger;
            if($scope.PI.UnitID <= 0) {
                alert("Please select M. Unit!");
                return false;
            }
            if(parseInt($scope.PI.DeliveryTerm) <= 0) {
                alert("Please select Delivery Term!");
                return false;
            }
            if(parseInt($scope.PI.PaymentTerm) <= 0) {
                alert("Please Enter Origin Name!");
                return false;
            }
            if($scope.PI.Origin === null || $scope.PI.Origin === "") {
                alert("Please Enter Origin Name!");
                return false;
            }
            if($scope.PI.PortOfLoadingSea === null || $scope.PI.PortOfLoadingSea === "") {
                alert("Please Enter Loading Port(Sea)!");
                return false;
            }
            if($scope.PI.PortOfLoadingAir === null || $scope.PI.PortOfLoadingAir === "") {
                alert("Please Enter Loading Port(Air)!");
                return false;
            }
            if($scope.gridOptionForPIDetail.data.length <= 0) {
                alert("Please Add Proforma Invoice Details");
                return false;
            }
            if($scope.gridOptionForPIDetail.data.length > 0) {
                angular.forEach($scope.gridOptionForPIDetail.data, function (oItem, index) {
                    if(parseInt(oItem.Quantity) <= 0) {
                        alert("PI quantity should be grater than zero of " + oItem.StyleNo);
                        return false;
                    }
                    if(parseInt(oItem.Quantity) > parseInt(oItem.OrderRecapQty)) {
                        alert(" PI Quantity Should be less than or Equal Recap Qty of "+ oItem.StyleNo);
                        return false;
                    }
                    if(parseFloat(oItem.UnitPrice) <= 0) {
                        alert("unit Price Should be greater than  0 "+ oItem.StyleNo);
                        return false;
                    }
                });
            }
            return true;
        };

        $scope.GetPIDetails = function () {
            debugger;
            var oPIDetails = $scope.gridOptionForPIDetail.data;
            angular.forEach(oPIDetails, function (oItem, index) {
                oItem.ShipmentDate = new Date(oItem.ShipmentDateInString);
            });
            return oPIDetails;
        };

        $scope.GetTotalAmountOfPIDetails = function () {
            debugger;
            var nTotalAmount = 0;
            var oPIDetails = $scope.gridOptionForPIDetail.data;
            angular.forEach(oPIDetails, function (oItem, index) {
                nTotalAmount += parseFloat(oItem.Amount);
            });
            return nTotalAmount;
        };

        $scope.GetTotalQuantityOfPIDetails = function () {
            debugger;
            var nTotalQuantity = 0;
            var oPIDetails = $scope.gridOptionForPIDetail.data;
            angular.forEach(oPIDetails, function (oItem, index) {
                nTotalQuantity += parseInt(oItem.Quantity);
            });
            return nTotalQuantity;
        };

        $scope.GetTotalAmountOfMLCDetails = function (oMLCDetail) {
            debugger;
            var nTotalLCAmount = 0;
            angular.forEach($scope.MLCDetails, function (oItem, index) {
                if (oItem.MasterLCDetailID != oMLCDetail.MasterLCDetailID) {
                    nTotalLCAmount += parseFloat(oItem.Amount);
                }
            });
            return nTotalLCAmount;
        };

        $scope.PickOrder = function () {
            debugger;
            var oProformaInvoice =  {
                BUID : parseInt($scope.PI.BUID),
                BuyerID : parseInt($scope.PI.BuyerID),
                ProformaInvoiceID : parseInt($scope.PI.ProformaInvoiceID)
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8;' } };
            $http.post(_sBaseAddress + '/ProformaInvoice/GetsBuyerWiseOrderRecap',$.param(oProformaInvoice), config).then(
                function (response) {
                    debugger;
                    var oOrderRecaps = response.data;
                    if(oOrderRecaps != null && oOrderRecaps.length > 0){
                        debugger;
                        var oColumns = [ 
                            {field : 'StyleNo', name : 'StyleNo', width : '25%'},
                            {field : 'OrderRecapNo', name : 'RecapNo', width : '25%'},
                            {field : 'BuyerName', name : 'Buyer', width : '25%'},
                            {field : 'DeptName', name : 'Dept', width : '25%'},
                            {field : 'SessionName', name : 'Session', width : '25%'},
                            {field : 'ProductName', name : 'ProductName', width : '25%'},
                            {field : 'ShipmentDateInString', name : 'ShipmentDate', width : '25%'},
                            {field : 'UnitPriceInString', name : 'UnitPrice', width : '25%'},
                            {field : 'TotalQuantityInString', name : 'OrderQty', width : '25%'},
                            {field : 'AmountInString', name : 'Amount', width : '25%'},
                            {field : 'PIAttachQty', name : 'PIAttachQty', width : '25%'},
                            {field : 'YetToAttachQty', name : 'YetToAttachQty', width : '25%'},
                            
                        ];
                        var modalObj = {
                            size:'md',
                            modalcontroller : 'ModalCommonListCtrl',
                            appcontroller : 'MasterLCController',
                            objs : oOrderRecaps,
                            multiSelect : true,
                            enableHorizontalScrollbar : true,
                            pickertitle : 'Order Recap List',
                            searchingbyfieldName : 'OrderRecapWithStyleNo',
                            columns : oColumns
                        }
                        var modalInstance = msModal.Instance(modalObj);
                        modalInstance.result.then(
                            function (result) {
                                debugger;
                                var oPIDetails = $scope.gridOptionForPIDetail.data;
                                angular.forEach(result, function(oItem, index) {
                                    if(!ICS_IsExist(oPIDetails,'OrderRecapID', oItem.OrderRecapID)) {
                                        var oPIDetail = {
                                            ProformaInvoiceDetailID : 0,
                                            ProformaInvoiceID : parseInt(oProformaInvoice.ProformaInvoiceID),
                                            OrderRecapID : oItem.OrderRecapID,
                                            TechnicalSheetID : oItem.TechnicalSheetID,
                                            ShipmentDate : oItem.ShipmentDate,
                                            ShipmentDateInString : oItem.ShipmentDateInString,
                                            SessionName : oItem.SessionName,
                                            Quantity  : oItem.TotalQuantity,
                                            FOB  : oItem.UnitPrice,
                                            BuyerCommissionInPercent : 0,
                                            BuyerCommission : 0,
                                            AdjustAdditon : 0,
                                            AdjustDeduction : 0,
                                            UnitPrice : oItem.UnitPrice,
                                            Amount : (oItem.TotalQuantity * oItem.UnitPrice),
                                            OrderRecapNo : oItem.OrderRecapNo,
                                            StyleNo : oItem.StyleNo,
                                            ProductName : oItem.ProductName,
                                            FabricName : oItem.FabricName,
                                            OrderRecapQty : oItem.TotalQuantity,
                                            DEPT : oItem.Dept,
                                            DeptName : oItem.DeptName
                                        };
                                        $scope.gridOptionForPIDetail.data.push(oPIDetail);
                                    }
                                });
                            }, 
                            function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                    }
                    else{
                        alert("Data Not Found");
                    }
                },
                function (response) { 
                    alert(response.statusText);
                });
        };
        
        $scope.RemovePIDetail = function () {
            debugger;
            var oPIDetail = $scope.gridPIDetailApi.selection.getSelectedRows()[0];
            if(oPIDetail == null) {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex = $scope.gridOptionForPIDetail.data.indexOf(oPIDetail);
            if (!confirm("Confirm to Remove?")) return ;
            $scope.gridOptionForPIDetail.data.splice(SelectedRowIndex, 1);
        };

        $scope.RefreshPIDetail = function () {
            debugger;
            $scope.gridOptionForPIDetail.data =  $scope.gridOptionForPIDetail.data;
        };

        $scope.PISave = function () {
            debugger;
            if(!$scope.IsValidateInput()) return;

            $scope.PI.ProformaInvoiceDetails = $scope.GetPIDetails();
            $scope.PI.Quantity = parseInt($scope.GetTotalQuantityOfPIDetails());
            $scope.PI.GrossAmount = parseFloat($scope.GetTotalAmountOfPIDetails());
            $scope.PI.NetAmount = $scope.PI.GrossAmount;
            $scope.PI.PIStatus = $scope.TempPIStatus;

            var oMLCDetail = {
                MasterLCID : $scope.MasterLCID,
                MasterLCDetailID : $scope.MasterLCDetailID,
                Amount : (($scope.PI.NetAmount > 0)? $scope.PI.NetAmount : 0),
                PIStatus : $scope.PI.PIStatus,
                PIStatusInInt : parseInt($scope.PI.PIStatus),
                PIQty : $scope.PI.Quantity,
                PIIssueDateInString : $scope.PI.IssueDateInString,
                PIIssueDate : new Date($scope.PI.IssueDateInString),
                ProformaInvoice : $scope.PI,
            };

            if ( (parseFloat($scope.GetTotalAmountOfMLCDetails(oMLCDetail))+ parseFloat(oMLCDetail.Amount)) > parseFloat($scope.MLCValue) ) {
                alert("LC Detail amount should be less than or equal MLC amount"); 
                return;
            }

            var config = { headers: { 'Content-Type': 'application/json; charset=utf-8;' } };
            $http.post(_sBaseAddress + '/MasterLC/SaveMLCDetailByOrderTrack',JSON.stringify(oMLCDetail), config).then(
                function (response) {
                    debugger;
                    var oMLCD = jQuery.parseJSON(response.data);
                    if (oMLCD.ErrorMessage == "" || oMLCD.ErrorMessage == null) {
                        debugger;
                        $uibModalInstance.close(oMLCD);
                    }
                    else{
                        alert(oMLCD.ErrorMessage);
                    }
                },
                function (response) {
                    alert(response.statusText);
                });   
        };

        $scope.PIAcceptRevise = function () {
            debugger;
            if(!$scope.IsValidateInput()) return;

            $scope.PI.ProformaInvoiceDetails = $scope.GetPIDetails();
            $scope.PI.Quantity = parseInt($scope.GetTotalQuantityOfPIDetails());
            $scope.PI.GrossAmount = parseFloat($scope.GetTotalAmountOfPIDetails());
            $scope.PI.NetAmount = $scope.PI.GrossAmount;
            $scope.PI.PIStatus = $scope.TempPIStatus;

            var oMLCDetail = {
                MasterLCID : $scope.MasterLCID,
                MasterLCDetailID : $scope.MasterLCDetailID,
                Amount : (($scope.PI.NetAmount > 0)? $scope.PI.NetAmount : 0),
                PIStatus : $scope.PI.PIStatus,
                PIStatusInInt : parseInt($scope.PI.PIStatus),
                PIQty : $scope.PI.Quantity,
                PIIssueDateInString : $scope.PI.IssueDateInString,
                PIIssueDate : new Date($scope.PI.IssueDateInString),
                ProformaInvoice : $scope.PI,
            };

            if ( (parseFloat($scope.GetTotalAmountOfMLCDetails(oMLCDetail))+ parseFloat(oMLCDetail.Amount)) > parseFloat($scope.MLCValue) ) {
                alert("LC Detail amount should be less than or equal MLC amount"); 
                return;
            }

            var config = { headers: { 'Content-Type': 'application/json; charset=utf-8;' } };
            $http.post(_sBaseAddress + '/MasterLC/AcceptPIReviseWithMLCDetail',JSON.stringify(oMLCDetail), config).then(
                function (response) {
                    debugger;
                    var oMLCD = jQuery.parseJSON(response.data);
                    if (oMLCD.ErrorMessage == "" || oMLCD.ErrorMessage == null) {
                        debugger;
                        $uibModalInstance.close(oMLCD);
                    }
                    else{
                        alert(oMLCD.ErrorMessage);
                    }
                },
                function (response) {
                    alert(response.statusText);
                });   
        };

        $scope.PICancel = function () {
            $uibModalInstance.close();
        };

    });

</script>
