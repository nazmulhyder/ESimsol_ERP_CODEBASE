@{
    ViewBag.Title = "SampleInvoiceSetup";
}

@model IEnumerable <ESimSol.BusinessObjects.SampleInvoiceSetup>

<div ng-app="SampleInvoiceSetupModule">
    <div ng-controller="SampleInvoiceSetupController" style="width:99.6%">
        <div class="ui-grid-top-panel" style="width:100%">
            <div class="container">
                <div class="form-inline">
                    <button type="button" class="btn btn-xs btn-primary" aria-label="Left Align" ng-click="add()"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> New</button>
                    <button type="button" class="btn btn-xs btn-primary" aria-label="Left Align" ng-click="edit()"> <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit</button>
                    <button type="button" class="btn btn-xs btn-primary" aria-label="Left Align" ng-click="delete()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Delete</button>
                    <button type="button" class="btn btn-xs btn-primary" aria-label="Left Align" ng-click="view()"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> View</button>
                </div>
            </div>
        </div>
        <div style="width:100%; height:520px" ui-grid="gridOptions" ui-grid-selection class="grid"></div>
        @*<div class="custom-pagination">
                <ul uib-pagination boundary-links="true" total-items="totalItems" ng-model="currentPage" items-per-page="itemPerPage" max-size="maxSize" ng-change="pageChanged()" class="pagination-sm" previous-text="&lsaquo;" next-text="&rsaquo;" first-text="&laquo;" last-text="&raquo;"></ul>
            </div>*@
    </div>
</div>

<style type="text/css">

     .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .grid {
        height: 450px;
        width: 100%;
    }

    .custom-pagination {
        margin-top: -15px;
        margin-bottom: -15px;
    }

    .spacing {
        padding-bottom: 5px;
    }
</style>

<script type="text/javascript">

    var pager =[];
    var _nBUID=0;
    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oSampleInvoiceSetups =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    _nBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
   
    debugger;
    var  SampleInvoiceSetupModule = angular.module('SampleInvoiceSetupModule', ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.cellNav','ms.service']);
    SampleInvoiceSetupModule.controller('SampleInvoiceSetupController', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession) {
        debugger;
        oSampleInvoiceSetups= (userSession.getData('SampleInvoiceSetups').length>0)? userSession.getData('SampleInvoiceSetups'):oSampleInvoiceSetups;
      
        $scope.gridOptions ={
            enableSorting: true,
            enableFullRowSelection: true,
            //enableRowHeaderSelection: false,
            enableSelectAll: false,
            multiSelect:false,
            enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
            //enableVerticalScrollbar : false,
            columnDefs: [
                { field: 'Code', name: 'Code', width: '15%' },
                { field: 'Name', name: 'Name', width: '18%' },
                { field: 'ShortName', name: 'Short Name', width: '15%' },
                { field: 'PrintName', name: 'Print Name', width: '18%' },
                { field: 'InvoiceTypeST', name: 'Invoice Type', width: '18%' },
                { field: 'ActivitySt', name: 'Activity', width: '10%' }
            ],
            data:oSampleInvoiceSetups,
            onRegisterApi:function(gridApi) 
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                debugger;
                if(oSampleInvoiceSetups.length>0 && userSession.getRowIndex()>=0)
                {
                    $scope.gridApi = gridApi;
                    $scope.gridApi.selection.clearSelectedRows();
                    $scope.gridApi.core.refresh();
                    if(oSampleInvoiceSetups.length>0 && userSession.getRowIndex()>=0)
                    {
                        $scope.gridApi.grid.modifyRows(oSampleInvoiceSetups);
                        $scope.gridApi.selection.selectRow(oSampleInvoiceSetups[userSession.getRowIndex()]);
                        $scope.RowSelect(oSampleInvoiceSetups[userSession.getRowIndex()]);
                    }
                }
                userSession.clear();
            }
        };

        $scope.add = function () {
            sessionStorage.setItem("Operation", "New");
            sessionStorage.removeItem("SelectedRowIndex");
            sessionStorage.setItem("SelectedRowIndex",-1);
            sessionStorage.setItem("SampleInvoiceSetupHeader", "Add SampleInvoiceSetup");
            sessionStorage.setItem("SampleInvoiceSetups", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("BackLink", window.location.href);
         
            var tsv=((new Date()).getTime())/1000;
            window.location.href = _sBaseAddress+ "/SampleInvoiceSetup/ViewSampleInvoiceSetup?nId=0&buid="+_nBUID+"&ts="+tsv;
        };

        $scope.edit = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
          
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
           
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.SampleInvoiceSetupID==data[0].SampleInvoiceSetupID){
                  
                    sessionStorage.setItem("Operation", "Edit");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("SampleInvoiceSetupHeader", "Edit SampleInvoiceSetup");
                    sessionStorage.setItem("SampleInvoiceSetups", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/SampleInvoiceSetup/ViewSampleInvoiceSetup?nId="+value.SampleInvoiceSetupID+"&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };

        $scope.delete = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
           
            if (!confirm("Confirm to Delete?")) return ;
          
            $http.post('/SampleInvoiceSetup/Delete',JSON.stringify(data[0])).then(
                            function (response) {
                                if(jQuery.parseJSON(response.data)=='Deleted'){
                                    angular.forEach($scope.gridOptions.data,function(value,index){
                                        if(value.SampleInvoiceSetupID==data[0].SampleInvoiceSetupID){
                                            $scope.gridOptions.data.splice(index,1);
                                        }
                                    },$scope.gridOptions.data);
                                    alert("Delete Successfully.");
                                } 
                                else{
                                    alert(jQuery.parseJSON(response.data));
                                }
                            },
                            function (response) {alert(jQuery.parseJSON(response.data));}
                        );

        };

        $scope.view = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.SampleInvoiceSetupID==data[0].SampleInvoiceSetupID){
                    sessionStorage.setItem("Operation", "View");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("SampleInvoiceSetupHeader", "View SampleInvoiceSetup");
                    sessionStorage.setItem("SampleInvoiceSetups", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/SampleInvoiceSetup/ViewSampleInvoiceSetup?nId="+value.SampleInvoiceSetupID+"&buid="+_nBUID+"&ts="+tsv;
                }
            },$scope.gridOptions.data);
        };
     
     
        $scope.PrintPreview = function ()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            var oSampleInvoiceSetup = data[0];
            if(oSampleInvoiceSetup==null || oSampleInvoiceSetup.SampleInvoiceSetupID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress + '/SampleInvoiceSetup/PrintSampleInvoiceSetupPreview?id='+oSampleInvoiceSetup.SampleInvoiceSetupID);
        };

     
      
     
    


        //button hide
      

       

    });


</script>
                       


              
