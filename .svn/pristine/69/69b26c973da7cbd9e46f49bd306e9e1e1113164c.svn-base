@model IEnumerable<ESimSol.BusinessObjects.Product>
    @{
        ViewBag.Title = "View Product";
    }
    <div class="menuMainCollectionTable" style="margin-left: 0px; height:100%; width:100%">
        <table id="tblProducts" title="Product List" class="easyui-datagrid" style="width:100%; height:100%" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" selectoncheck="false" checkonselect="true" autorowheight="false" toolbar="#toolbar">
            <thead>
                <tr>
                    <th data-options="field:'checked',checkbox:true"></th>
                    <th field="ProductCode" width="10%">Code</th>
                    <th field="ProductCategoryName" width="15%">Category Name</th>
                    <th field="GroupName" width="15%">Group Name</th>
                    <th field="ProductName" width="25%"> Name</th>
                    <th field="ShortName" width="10%">Short Name</th>
                    <th field="Brand" width="10%">Brand</th>
                    <th field="MUnit" width="10%">Unit</th>
                    <th field="ActivityInString" width="120">Activity</th>
                    <th field="LastUpdateByName" width="15%">Update By</th>
                    <th field="LastUpdateDateTimeInSt" width="12%"> Update Date</th>
                </tr>
            </thead>
        </table>
            <div id="toolbar">
                <input type="text" id="txtSearchbyProductName" style="width:200px" placeholder="Type Name & press enter" />
                <input type="text" id="txtSearchbyProductCategory" style="width:200px" placeholder="Type Category Name & press enter" />
                <input type="text" id="txtSearchbyGroupName" style="width:200px" placeholder="Type Group Name & press enter" />
                <a href="javascript:void(0)" id="btnSearch" class="easyui-linkbutton" iconcls="icon-search" plain="true">Search</a>
                <a href="javascript:void(0)" id="btnAdd" class="easyui-linkbutton" iconcls="icon-add" plain="true">New</a>
                <a href="javascript:void(0)" id="btnEdit" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
                <a href="javascript:void(0)" id="btnView" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
                <a href="javascript:void(0)" id="btnDelete" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                <a href="javascript:void(0)" id="btnPropertyInfo" class="easyui-linkbutton" iconcls="icon-add" plain="true">Property Info</a>
                <a href="javascript:void(0)" id="btnProductSort" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add info</a>
                <a id="btnActivity" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Active/InActive</a>
                <a href="javascript:void(0)" id="btnExportToExcel" class="easyui-linkbutton" iconcls="icon-print" plain="true">Export To XL</a>
                <a id="btnChange" href="javascript:void(0)" id="btnChange" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Group Change</a>
            </div>
</div>
    <div id="winProduct" class=" easyui-window winclass" title="Edit Payment info" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size: 12px">

                    <tr>
                        <td id="tdCategory" style="width: 20%; text-align: right; font-weight: bold">
                            Product Category
                        </td>
                        <td id="tdCategoryCbo" style="width:30%; font-size:12px; text-align:left">
                            <input type="text" id="txtProductCategory" style="width:135px" /><input type="button" value="Pick" id="btnPickProductCategory" style="text-align:center; width:40px" />
                        </td>
                        <td id="tdGroup" style="width: 20%; text-align: right; font-weight: bold">
                            Product Group
                        </td>
                        <td id="tdGroupCbo" style="width:30%; font-size:12px; text-align:left">
                            <input type="text" id="txtProductGroup" style="width:135px" /><input type="button" value="Pick" id="btnPickProductGroup" style="text-align:center; width:40px" />
                        </td>
                    </tr>


                </table>
            </fieldset>
            <fieldset style="height:97%">
                <legend style="font-weight:bold;text-align:left;"> Item Informations : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px;width:100%;">
                    <tr>
                        <td style="width:10%;  text-align:right">
                           <label id="lblCodeCaption">Code</label>
                        </td>
                        <td style="width:40%;  text-align:left">
                            <input type="text" style="width:99%; font-size:11px;" id="txtProductCode" disabled="disabled" />
                        </td>
                        <td style="width:10%; text-align:right">
                            Brand
                        </td>
                        <td style="width:40%; text-align:left">
                            <input type="text" style="width:99%; font-size:11px;" id="txtBrand" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%;  text-align:right">
                            Name
                        </td>
                        <td style="width:40%;  text-align:left">
                            <input type="text" style="width:99%; font-size:11px;" id="txtProductName" />
                        </td>
                        <td style="width:10%;  text-align:right">
                            Short Name
                        </td>
                        <td style="width:40%; text-align:left">
                            <table cellpadding="0" cellspacing="2" style="width:100%;">
                                <tr>
                                    <td style="width:35%;  text-align:left">
                                        <input type="text" style="width:99%; font-size:11px;" id="txtShortName" />
                                    </td>
                                    <td style="width:33%;text-align:right">
                                        Product Description:
                                    </td>
                                    <td style="width:35%;  text-align:left;">
                                        <input type="text" style="width:99%; font-size:11px;" id="txtProductDescription" />
                                    </td>
                                </tr>
                            </table>
                        </td>

                    </tr>

                    <tr>
                        <td style="width:10%;  text-align:right">
                            Unit Type
                        </td>
                        <td style="width:40%;   text-align:left">
                            <table cellpadding="0" cellspacing="2" style="width:100%;">
                                <tr>
                                    <td style="width:18%;  text-align:left">
                                        <select style="width:100%" id="cboMeasurmentUniteType" class="_ChangeIssueA"> </select>
                                    </td>
                                    <td style="width:10%;text-align:right">
                                        <label>Unit</label>
                                    </td>
                                    <td style="width:26%;  text-align:left;">
                                        <select id="cboMeasurmentUnit" style="width:100%;"></select>
                                    </td>
                                    <td style="width:20%;text-align:right">
                                        <label>Report Unit</label>
                                    </td>
                                    <td style="width:26%;  text-align:left;">
                                        <select id="cboReportUnit" style="width:100%;"></select>
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width:10%;  text-align:right">
                            H.S. Code
                        </td>
                        <td style="width:40%; text-align:left">
                            <table cellpadding="0" cellspacing="2" style="width:100%;">
                                <tr>
                                    <td style="width:35%;  text-align:left">
                                        <input type="text" style="width:99%; font-size:11px;" id="txtAddOne" />

                                    </td>
                                    <td style="width:33%;text-align:right">
                                        <label> Size</label>
                                    </td>
                                    <td style="width:35%;  text-align:left;">
                                        <input type="text" style="width:99%; font-size:11px;" id="txtAddTwo" />
                                    </td>
                                </tr>
                            </table>

                        </td>
                    </tr>
                    <tr id="trProductType">
                        <td style="width:10%;  text-align:right">
                            Product Type
                        </td>
                        <td style="width:40%;  text-align:left">
                            <table cellpadding="0" cellspacing="0" style="width:100%;">
                                <tr>
                                    <td style="width:35%;text-align:left">
                                        <select id="cboProductType" style="width:100%;"></select>
                                    </td>
                                    <td style="width:25%;text-align:right">
                                        Model Reference
                                    </td>
                                    <td style="width:33%;  text-align:left;">
                                        <input type="text" id="txtMoldName" style="width:100%;" />
                                    </td>
                                    <td style="width:7%; text-align:left;">
                                        <input type="button" value="Pick" id="btnPickMold" style="text-align:right; width:100%" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width:10%;  text-align:right">
                            <label>Account Head</label>
                        </td>
                        <td style="width:40%;   text-align:left">
                            <input type="text" style="width:85%; font-size:11px;" id="txtAccountHeadName" placeholder="Type Head Name & Press Enter" />
                            <input type="button" value="Pick" id="btnPickAccountHead" style="text-align:right; width:12%" />
                        </td>
                    </tr>
                    <tr>
                        <td colspan="4" style="width:100%;">
                            <div style="width:100%;">
                                <table border="0" cellspacing="2" cellpadding="2" style="width:100%">
                                    <tr>
                                        <td style=" text-align:left; width:50%;">
                                            <div style="float:left; width:100%">
                                                <div id="tdApplyPlantNo" style="float:left; width:10%;  text-align:right;">
                                                    Apply Plant No
                                                </div>
                                                <div id="tdApplyPlantNo" style="float:left; width:30%;  text-align:left; margin-left:5px">
                                                    <input type="checkbox" style="font-size:11px;" id="chkIsSerialNoApply" />
                                                </div>
                                                <div id="tdApplyProperty1" style="float:left; width:20%;   text-align:right;">
                                                    Apply Property
                                                </div>
                                                <div id="tdApplyProperty2" style="float:left; width:30%;   text-align:left;margin-left:5px">
                                                    <input type="checkbox" style="font-size:11px;" id="chkApplyProperty" />
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%;  text-align:right">
                            <label id="lblCaption"> Full Name : </label>
                        </td>
                        <td colspan="3" style="background-color:darkturquoise; text-align:left; width:90%; color:White">
                            <label id="lblFullName" style="font-size:13px; font-weight:bold">  </label>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="4" style="width:100%;">
                            <div id="divPropertyValues" style="width:100%;">
                                <table id="tblPorpertyValues" class="easyui-datagrid" title="Property List" style="width:100%;height:250px;" data-options="singleSelect: true,fitColumns:true,rownumbers:true,pagination:false,autoRowHeight:false,toolbar: '#toolbarTwo' ">
                                    <thead>
                                        <tr>
                                            <th field="PropertyName" width="40%">Property Name</th>
                                            <th field="ValueOfProperty" width="50%">Value</th>
                                        </tr>
                                    </thead>
                                </table>
                                <div id="toolbarTwo">
                                    <input id="txtPropertyName" type="text" placeholder="Property Name" style="width:120px;" />
                                    <a id="btnPickProperty" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" title="Pick Properties" iconcls="icon-pick" plain="true"></a>                                   
                                    <a id="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                </table>
            </fieldset>
            <div style="width:100%;">
                <fieldset>
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                        <tr>
                            <td style="width:80%; text-align:right"></td>
                            <td style="width: 10%">
                                <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            </td>
                            <td style="width: 10%">
                                <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
    </div>



    <div id="winProductTypeChange" class=" easyui-window winclass" title="Edit Payment info" style="width:500px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <fieldset>
            <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size: 12px">
                <tr>
                    <td id="tdCategory" style="width: 30%; text-align: right; font-weight: bold">
                        Product Category
                    </td>
                    <td id="tdCategoryCbo" style="width:60%; font-size:12px; text-align:left">
                        <input type="text" id="txtProductCategoryChange" style="width:80%" /><input type="button" value="Pick" id="btnPickProductCategoryChange" style="text-align:center; width:40px" />
                    </td>
                </tr>
                <tr>
                    <td id="tdGroup" style="width: 30%; text-align: right; font-weight: bold">
                        Product Group
                    </td>
                    <td id="tdGroupCbo" style="width:60%; font-size:12px; text-align:left">
                        <input type="text" id="txtProductGroupChange" style="width:80%" /><input type="button" value="Pick" id="btnPickProductGroupChange" style="text-align:center; width:40px" />
                    </td>
                </tr>
            </table>
        </fieldset>



        <div style="width:100%;">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:80%; text-align:right"></td>
                        <td style="width: 10%">
                            <a id="btnProductGroupChangeSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        </td>
                        <td style="width: 10%">
                            <a id="btnProductGroupChangeClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>



    </div>


    <script type="text/javascript">
    var _oProducts=[];
    var _sBaseAddress="";
    var _oProduct = null;
    var _oUniteTypeObj=[];
    var _oMeasurementUnits=[];
    var _oProductTypes=[];
    var _sProductHeader="";
    var _oProductCategory=null;
    var _oIsAdd=false;
    var _nSelectedRowIndex=0;
    var _oClientOperationSetting = null;
    var _nBUID = 0;
    $(document).ready(function ()
    {
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oProducts =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oUniteTypeObj= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.UniteTypeObj));
        _oMeasurementUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.MeasurementUnits));
        _oProductTypes=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ProductTypeObjs));
        _oProductCategory=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ProductCategory));
        _oClientOperationSetting= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ClientOperationSetting));
        _nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));

        RefreshCom();
        _oProduct= {
            ProductID : 0,
            ProductCategoryID :0,
            ProductBaseID : 0,
            AccountHeadID:0 ,
            MeasurementUnitID:0,
            ReportingUnitID:0
        };

        if(sessionStorage.getItem("Products")!=null && sessionStorage.getItem("Products").length>0)
        {
            _oProducts= jQuery.parseJSON(sessionStorage.getItem('Products'));
            var nIndex= sessionStorage.getItem('SelectedRowIndex');
            LoadintoGrid(_oProducts);
            $('#tblProducts').datagrid('selectRow',nIndex);
        }
        //GetsInitializeData(_nBUID)
        RefreshControl_ProductType();
        RefreshByProductSetup();
    });

    function GetsInitializeData(nBUID)
    {
        var oBusinessUnit = { BusinessUnitID : nBUID };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/Product/GetsInitializeData",
            traditional: true,
            data:  JSON.stringify(oBusinessUnit),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oProducts = data;
                LoadintoGrid(_oProducts);
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnActivity").click(function(){
        var bIsActive = null;
        var oProduct = $('#tblProducts').datagrid('getSelected');
        if(oProduct==null || parseInt(oProduct.ProductID)<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(oProduct.Activity)
        {
            if (!confirm("Confirm to In Active?")) return ;
            bIsActive =false;
        }
        else
        {
            if (!confirm("Confirm to Active?")) return ;
            bIsActive =true;
        }
        var SelectedRowIndex=$('#tblProducts').datagrid('getRowIndex',oProduct);
        $.ajax
        ({
            type: "GET",
            dataType: "json",
            url : _sBaseAddress+ "/Product/CommitActivity",
            data: { id: oProduct.ProductID, IsActive:bIsActive},
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oProduct = jQuery.parseJSON(data);
                if (parseInt(oProduct.ProductID)>0)
                {
                    if(bIsActive ==true)
                    {
                        alert("Active sucessfully");
                    }else
                    {
                        alert("In Active sucessfully");
                    }
                    $('#tblProducts').datagrid('updateRow',{index: SelectedRowIndex,row: oProduct});
                }
                else
                {
                    alert(oProduct.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $('#btnExportToExcel').click(function(e){
        if(_nBUID===null || parseInt(_nBUID)<=0)
        {
            alert("Invalid Business Unit Please Try Again!");
            return;
        }
        var tsv= ((new Date()).getTime())/1000;
        window.open(_sBaseAddress + "/Product/ExportToExcel?buid="+parseInt(_nBUID)+"&ts="+tsv, "_blank");
    });

    function RefreshByProductSetup()
    {
        if(_oProductCategory.ApplyProductType_IsShow)   {$('#trProductType').show();} else {$('#trProductType').hide();}
        if(_oProductCategory.ApplyProperty_IsShow) {$('#tdApplyProperty1, #tdApplyProperty2').show();} else {$('#tdApplyProperty1, #tdApplyProperty2').hide();}
        if(_oProductCategory.ApplyPlantNo_IsShow){$('#tdApplyPlantNo').show();} else {$('#tdApplyPlantNo').hide();}

        if(_oProductCategory.IsApplyCategory)
        {
            $('#tdCategory').show();
            $('#tdCategoryCbo').show();
        }
        else
        {
            $('#tdCategory').hide();
            $('#tdCategoryCbo').hide();
        }
        if(_oProductCategory.ApplyGroup_IsShow)
        {
            $('#tdGroup').show();
            $('#tdGroupCbo').show();
        }
        else
        {
            $('#tdGroup').hide();
            $('#tdGroupCbo').hide();
        }

    }

    function RefreshCom()
    {
        $("#cboMeasurmentUniteType").icsLoadCombo({
            List: _oUniteTypeObj,
            OptionValue: "id",
            DisplayText: "Value"
        });
        $("#cboProductType").icsLoadCombo({List: _oProductTypes,OptionValue:"id",DisplayText:"Value"});

    }
    function RefreshControl_ProductType()
    {
        debugger;
        if(parseInt($("#cboProductType").val())==1)
        {
            _oProduct.AccountHeadID = 0;
            document.getElementById("txtAccountHeadName").disabled = true;
            $('#txtAccountHeadName').val('');
            $("#btnPickAccountHead").hide();
        }else  if(parseInt($("#cboProductType").val())>1)
        {
            document.getElementById("txtAccountHeadName").disabled = false;
            var txtAccountHeadName = document.getElementById("txtAccountHeadName");
            txtAccountHeadName.style.color = "blue";
            txtAccountHeadName.style.fontWeight = "bold";
            $("#btnPickAccountHead").show();
        }
        if(_sProductHeader=="View Item")
        {
            $('#btnPickAccountHead').hide();
            $('#btnSave').hide();
        }
        $('#chkApplyProperty').change();
        FullName_keyup();
    }

    $('#chkApplyProperty').change(function ()
    {
        PropertyShowHide(this.checked)
    });
    function PropertyShowHide(bIsShow)
    {
        if(bIsShow){
            $('#divPropertyValues').show();
            DynamicRefreshList(_oProduct.PPIs, 'tblPorpertyValues');
        }
        else{
            $('#divPropertyValues').hide();
            DynamicRefreshList([], 'tblPorpertyValues');
        }
    }

    function LoadintoGrid(oProducts) {
        data = oProducts;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblProducts').datagrid('loadData', data);

    }

    $("#btnDelete").click(function(){
        //var oProduct = $('#tblProducts').datagrid('getSelected');

        //if(oProduct==null || oProduct.ProductID<=0)
        //{
        //    alert("Invalid Field!!! please select a valid Field!");
        //    return false;
        //}
        var oProducts = $('#tblProducts').datagrid('getChecked');

        if(oProducts.length<=0)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        //var SelectedRowIndex=$('#tblProducts').datagrid('getRowIndex',oProduct);
        if (!confirm("Confirm to Delete?")) return ;
        var oProduct ={Products:oProducts}
        if (oProducts.length> 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                //url : _sBaseAddress+  "/Product/Delete",
                url : _sBaseAddress+  "/Product/DeleteMultiple",
                data:  JSON.stringify(oProduct),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //var feedbackmessage = jQuery.parseJSON(data);
                    //if (feedbackmessage == "Deleted")
                    //{
                    //    alert("Data Delete Successfully");
                    //    $('#tblProducts').datagrid('deleteRow',SelectedRowIndex);
                    //}
                    //else
                    //{
                    //    alert(feedbackmessage);
                    //}
                    debugger;
                    var result=jQuery.parseJSON(data);
                    var feedbackmessage = result.ErrorMease;
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Data Delete Successfully");
                        $('#tblProducts').datagrid('deleteRow',SelectedRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                    for(var i=0; i<oProducts.length;i++){
                        for(var j=0; j<result.Products.length;j++){
                            if(oProducts[i].ProductID!=result.Products[j].ProductID){
                                var SelectedRowIndex=$('#tblProducts').datagrid('getRowIndex',oProducts[i]);
                                $('#tblProducts').datagrid('deleteRow',SelectedRowIndex);
                                break;
                            }
                        }
                        
                    }
                    if(result.NonDeleteProducts.length>0){
                        var objs= [{key: 'Products',  data: JSON.stringify(result.NonDeleteProducts)}];
                        OpenWindowWithPost(_sBaseAddress+"/Product/PrintExcelForProduct", objs);
                    }
                },
                error: function (xhr, status, error)
                {
                   
                    alert(error);
                }
            });
        }
    });

    $('#txtProductCategory').keydown(function (e){
        if(e.which === 13 || e.which === 9)
        {

            var nBUID= sessionStorage.getItem('BUID');
            if(nBUID===null || nBUID===undefined)
            {
                nBUID =0;
            }
            var txtProductCategory = $('#txtProductCategory').val();
            var oProductCategory = {
                ProductCategoryName : txtProductCategory,
                IsLastLayer : true,
                BusinessUnitID : nBUID
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProductCategory,
                ControllerName: "ProductCategory",
                ActionName: "GetByName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (parseInt(response.objs[0].ProductCategoryID) > 0) {
                        var tblColums = []; var oColumn = { field: "ProductCategoryID", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductCategoryName", title: "Category Name", width: 200, align: "left" }; tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winProductCategory',
                            winclass: 'clsProductCategory',
                            winwidth: 500,
                            winheight: 420,
                            tableid: 'tblProductCategory',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'ProductCategoryName',
                            windowTittle: 'Product Category List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else
                {
                    alert("Data Not Found!");
                }
            });
        }
    });

    $('#btnPickProductCategory').click(function (e){
        var nBUID= sessionStorage.getItem('BUID');
        if(nBUID===null || nBUID===undefined)
        {
            nBUID =0;
        }
        var txtProductCategory = $('#txtProductCategory').val();
        var oProductCategory = {
            ProductCategoryName : txtProductCategory,
            IsLastLayer : true,
            BusinessUnitID : nBUID
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProductCategory,
            ControllerName: "ProductCategory",
            ActionName: "GetByName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (parseInt(response.objs[0].ProductCategoryID) > 0) {
                    var tblColums = []; var oColumn = { field: "ProductCategoryID", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductCategoryName", title: "Category Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductCategory',
                        winclass: 'clsProductCategory',
                        winwidth: 500,
                        winheight: 420,
                        tableid: 'tblProductCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ProductCategoryName',
                        windowTittle: 'Product Category List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("Data Not Found!");
            }
        });
    });

    $('#txtProductGroup').keydown(function (e){
        if(e.which === 13 || e.which === 9)
        {

            if(parseInt(_oProduct.ProductCategoryID)<=0)
            {
                alert("Please Select an Bank Branch!");
                return false;
            }
            var txtProductGroup = $('#txtProductGroup').val();
            var oProductBase = {
                ProductName : txtProductGroup,
                ProductCategoryID : _oProduct.ProductCategoryID
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProductBase,
                ControllerName: "ProductBase",
                ActionName: "GetByCategoryOrName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (parseInt(response.objs[0].ProductBaseID) > 0) {
                        var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width: 150, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Group Name", width: 200, align: "left" }; tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winProductGroup',
                            winclass: 'clsProductGroup',
                            winwidth: 500,
                            winheight: 420,
                            tableid: 'tblProductGroup',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'ProductName',
                            windowTittle: 'Product Group  List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else
                {
                    alert("Data Not Found!");
                }
            });
        }
    });

    $('#btnPickProductGroup').click(function (e){

        if(parseInt(_oProduct.ProductCategoryID)<=0)
        {
            alert("Please Select an Bank Branch!");
            return false;
        }
        var txtProductGroup = $('#txtProductGroup').val();
        var oProductBase = {
            ProductName : txtProductGroup,
            ProductCategoryID : _oProduct.ProductCategoryID
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProductBase,
            ControllerName: "ProductBase",
            ActionName: "GetByCategoryOrName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (parseInt(response.objs[0].ProductBaseID) > 0) {
                    var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Group Name", width: 200, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winProductGroup',
                        winclass: 'clsProductGroup',
                        winwidth: 500,
                        winheight: 420,
                        tableid: 'tblProductGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ProductName',
                        windowTittle: 'Product Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("Data Not Found!");
            }
        });
    });


    //Capita Resource
    $("#txtMoldName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var txtModelName = $('#txtMoldName').val();
            if(txtModelName==null || txtModelName=="")
            {
                alert("Please Type Model Name");
                return;
            }
            GetModelReference(txtModelName);
        }
    });
    $("#btnPickMold").click(function(){
        debugger;
        GetModelReference("");
    });
    $('#txtMoldName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtMoldName").removeClass("fontColorOfPickItem");
            _oProduct.ModelReferenceID = 0;
        }
    });
    function GetModelReference(txtModelName)
    {
        var oCapitalResource = {BUID:_nBUID,ResourcesTypeInInt:1, Name:txtModelName };//Resources type : 1 =Mold
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oCapitalResource,
            ControllerName: "CapitalResource",
            ActionName: "GetsByBUandResourceTypeWithName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].CRID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "Name", title: "Mold Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winCapitalResource',
                        winclass: 'clsCapitalResource',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblCapitalResource',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Mold List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }

    //pick Account Head
    $("#txtAccountHeadName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var nComponentID=0;
            if(parseInt($('#cboProductType').val()) && parseInt($('#cboProductType').val())=== 2)
            {
                nComponentID=2;
            }
            else if(parseInt($('#cboProductType').val()) && parseInt($('#cboProductType').val())=== 3)
            {
                nComponentID=6;
            }
            var oChartsOfAccount= {ComponentID:nComponentID,AccountTypeInInt:5, AccountHeadName: $.trim($('#txtAccountHeadName').val()) };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oChartsOfAccount,
                ControllerName: "ChartsOfAccount",
                ActionName: "GetsAccountsHeadByComponentAndAccountType",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].AccountHeadID> 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: "AccountHeadCodeName", title: "Account Head", width: 300, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winAccountHeads',
                            winclass: 'clsAccountHead',
                            winwidth: 450,
                            winheight: 460,
                            tableid: 'tblAccountHeads',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'AccountHeadName',
                            windowTittle: 'AccountHead List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
        if (code == 8|| code == 46) //backspace=8,delete=46
        {
            $("#txtAccountHeadName").val('');
            var txtAccountHeadName = document.getElementById("txtAccountHeadName");
            txtAccountHeadName.style.color = "black";
            txtAccountHeadName.style.fontWeight = "normal";
            //debugger;
            _oProduct.AccountHeadID = 0;
        }
    });
    $("#btnPickAccountHead").click(function () {

        var oChartsOfAccount= {ComponentID:2,AccountTypeInInt:5 };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oChartsOfAccount,
            ControllerName: "ChartsOfAccount",
            ActionName: "GetsAccountsHeadByComponentAndAccountType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AccountHeadID> 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "AccountHeadCodeName", title: "Account Head", width: 300, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winAccountHeads',
                        winclass: 'clsAccountHead',
                        winwidth: 450,
                        winheight: 460,
                        tableid: 'tblAccountHeads',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'AccountHeadName',
                        windowTittle: 'AccountHead List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });

    });

    ///property
    $("#txtPropertyName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {


            var oProperty= { PropertyName: $.trim($('#txtPropertyName').val()) };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProperty,
                ControllerName: "Property",
                ActionName: "GetsByName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].PropertyID> 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: "PropertyName", title: "Property", width: 200, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winPropertys',
                            winclass: 'clsProperty',
                            winwidth: 450,
                            winheight: 460,
                            tableid: 'tblPropertys',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'PropertyName',
                            windowTittle: 'Property List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
        if (code == 8|| code == 46) //backspace=8,delete=46
        {
            $("#txtPropertyName").val('');
            $("#txtPropertyName").removeClass('fontColorOfPickItem');
            //debugger;
            _oBOQ.PropertyValueID = 0;
        }
    });
    $("#btnPickProperty").click(function () {

        var oProperty= { PropertyName: '' };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProperty,
            ControllerName: "Property",
            ActionName: "GetsByName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PropertyID> 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "PropertyName", title: "Property", width: 200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPropertys',
                        winclass: 'clsProperty',
                        winwidth: 450,
                        winheight: 460,
                        tableid: 'tblPropertys',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'PropertyName',
                        windowTittle: 'Property List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });

    });
    ///value
    $("#txtValueOfProperty").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oPropertyValue = $('#tblPorpertyValues').datagrid('getSelected');
            if(oPropertyValue==null || oPropertyValue.PropertyID<=0)
            {
                alert("Please select a item from list!");
                return false;
            }


            var oPropertyValue = { ValueOfProperty: $.trim($('#txtValueOfProperty').val()),PropertyID:oPropertyValue.PropertyID };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oPropertyValue,
                ControllerName: "PropertyValue",
                ActionName: "GetsByName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].PropertyValueID> 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: "PropertyName", title: "Property", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ValueOfProperty", title: "Value", width: 80, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winPropertyValues',
                            winclass: 'clsPropertyValue',
                            winwidth: 450,
                            winheight: 460,
                            tableid: 'tblPropertyValues',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'PropertyValue List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
        if (code == 8|| code == 46) //backspace=8,delete=46
        {
            $("#txtValueOfProperty").val('');
            $("#txtValueOfProperty").removeClass('fontColorOfPickItem');
            //debugger;
            _oBOQ.PropertyValueID = 0;
        }
    });

    function IntializePickerbutton(oPickerobj) {

        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj)
    {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid === 'winProductCategory') {
            if (oreturnObj != null && parseInt(oreturnObj.ProductCategoryID) > 0) {

                _oProductCategory=oreturnObj;
                _oProduct.ProductCategoryID=parseInt(oreturnObj.ProductCategoryID);
                RefreshByProductSetup();
                if(parseInt(_oProduct.ProductBaseID)!=parseInt(oreturnObj.ProductCategoryID))
                {
                    _oProduct.ProductBaseID=0;
                    $('#txtProductGroup').val("");
                }
                $('#txtProductCategory').val(oreturnObj.ProductCategoryName);
                $('#txtProductGroup').focus();

            }
        }
        if (oPickerobj.winid === 'winProductCategoryChange') {
            if (oreturnObj != null && parseInt(oreturnObj.ProductCategoryID) > 0) {

                _oProductCategory=oreturnObj;
                _oProduct.ProductCategoryID=parseInt(oreturnObj.ProductCategoryID);
                RefreshByProductSetup();
                if(parseInt(_oProduct.ProductBaseID)!=parseInt(oreturnObj.ProductCategoryID))
                {
                    _oProduct.ProductBaseID=0;
                    $('#txtProductGroupChange').val("");
                }
                $('#txtProductCategoryChange').val(oreturnObj.ProductCategoryName);
                $('#txtProductGroupChange').focus();

            }
        }
        else if (oPickerobj.winid === 'winProductGroupChange')
        {
            _oProduct.ProductBaseID= parseInt(oreturnObj.ProductBaseID);
            $('#txtProductGroupChange').val(oreturnObj.ProductName);
            _oProduct.GroupName =oreturnObj.ProductName;
        }
        else if (oPickerobj.winid === 'winProductGroup')
        {
            _oProduct.ProductBaseID= parseInt(oreturnObj.ProductBaseID);
            $('#txtProductGroup').val(oreturnObj.ProductName);
            _oProduct.GroupName =oreturnObj.ProductName;
        }
        else if (oPickerobj.winid == 'winPropertyValues') {
            if (oreturnObj != null && oreturnObj.PropertyValueID > 0) {
                $("#txtValueOfProperty").val(oreturnObj.ValueOfProperty);
                $("#txtValueOfProperty").addClass('fontColorOfPickItem');

                var oPropertyValue = $('#tblPorpertyValues').datagrid('getSelected');
                var SelectedRowIndex=$('#tblPorpertyValues').datagrid('getRowIndex',oPropertyValue);
                oPropertyValue.PropertyValueID=oreturnObj.PropertyValueID;
                oPropertyValue.ValueOfProperty=oreturnObj.ValueOfProperty;
                $('#tblPorpertyValues').datagrid('updateRow',{index:SelectedRowIndex,row:oPropertyValue});
                $('#txtValueOfProperty').focus();
            }
        }
        else if (oPickerobj.winid=='winPropertys') {

            $("#txtPropertyName").addClass('fontColorOfPickItem');
            debugger;
            if(oPickerobj.multiplereturn)
            {
                if (oreturnobjs.length > 0)
                {

                    $("#txtPropertyName").val((oreturnobjs.length>1) ? oreturnobjs.length+" Item(s) Selected":oreturnobjs[0].PropertyName);
                    for(var i=0;i<oreturnobjs.length;i++){
                        if(!IsExit(oreturnobjs[i].PropertyID)){
                            var oPPI={ProductPropertyInfoID : 0,
                                ProductID : _oProduct==null?0: _oProduct.ProductID,
                                PropertyID :oreturnobjs[i].PropertyID,
                                PropertyValueID :0,
                                PropertyName :oreturnobjs[i].PropertyName,
                                ValueOfProperty:''};
                            $('#tblPorpertyValues').datagrid('appendRow',oPPI);
                        }
                    }
                }
            }else{
                if (oreturnObj != null && oreturnObj.PropertyID > 0 ) {
                    $("#txtPropertyName").val(oreturnObj.PropertyName);
                    if(!IsExit(oreturnObj.PropertyID)){
                        var oPPI={ProductPropertyInfoID : 0,
                            ProductID : _oProduct==null?0: _oProduct.ProductID,
                            PropertyID :oreturnObj.PropertyID,
                            PropertyValueID :0,
                            PropertyName :oreturnObj.PropertyName,
                            ValueOfProperty:''};
                        $('#tblPorpertyValues').datagrid('appendRow',oPPI);
                    }
                }
            }
            $('#txtPropertyName').focus();
        }else  if (oPickerobj.winid == 'winAccountHeads')
        {
            if (oreturnObj != null && oreturnObj.AccountHeadID > 0) {
                $("#txtAccountHeadName").val(oreturnObj.AccountHeadCodeName);
                var txtAccountHeadName = document.getElementById("txtAccountHeadName");
                txtAccountHeadName.style.color = "blue";
                txtAccountHeadName.style.fontWeight = "bold";
                _oProduct.AccountHeadID = oreturnObj.AccountHeadID;
                $('#txtAccountHeadName').focus();
            }
        } else if (oPickerobj.winid == 'winCapitalResource')
        {
            if (oreturnObj != null && oreturnObj.CRID > 0)
            {
                $('#txtMoldName').val(oreturnObj.Name);
                $('#txtMoldName').addClass('fontColorOfPickItem');
                _oProduct.ModelReferenceID = oreturnObj.CRID;
                $('#txtMoldName').focus();
            }
        }
    }


    $("#btnRemove").click(function (){
        var oPropertyValue = $('#tblPorpertyValues').datagrid('getSelected');
        if(oPropertyValue==null || oPropertyValue.PropertyID<=0)
        {
            alert("Please select a item from list!");
            return false;
        }
        var SelectedRowIndex=$('#tblPorpertyValues').datagrid('getRowIndex',oPropertyValue);
        $('#tblPorpertyValues').datagrid('deleteRow',SelectedRowIndex);
    });

    function IsExit(nPropertyID)
    {
        var oPPIs = $('#tblPorpertyValues').datagrid('getRows');
        if(oPPIs.length>0)
        {
            for(var i = 0;i<oPPIs.length;i++)
            {
                if(parseInt(oPPIs[i].PropertyID)=== parseInt(nPropertyID))
                {
                    return true;
                }
            }
        }
        return false;
    }
    ///end PPI
    $('._ChangeIssueA').change(function () {

        LoadUnits();
    })
    ///end PPI
    $('._ChangeIssueProductType').change(function ()
    {
        _oProduct.AccountHeadID = 0;
        $("#txtAccountHeadName").val('');
        var txtAccountHeadName = document.getElementById("txtAccountHeadName");
        txtAccountHeadName.style.color = "black";
        txtAccountHeadName.style.fontWeight = "normal";
        if(parseInt($("#cboProductType").val())==1)
        {
            document.getElementById("txtAccountHeadName").disabled = true;
            $("#btnPickAccountHead").hide();
        }else  if(parseInt($("#cboProductType").val())>1)
        {
            document.getElementById("txtAccountHeadName").disabled = false;
            $("#btnPickAccountHead").show();
        }

    })
    function LoadUnits()
    {
        debugger;
        var nUnitType= $('#cboMeasurmentUniteType').val();// scboMeasurmentUniteType.options[scboMeasurmentUniteType.selectedIndex].index;
        $('#cboMeasurmentUnit,#cboReportUnit').empty();
        var listItems= "<option value='"+0+"'>" +"--Select Unit--" + "</option>";
        if (_oMeasurementUnits !=null)
        {
            if(_oMeasurementUnits.length>0)
            {
                for (var i = 0; i < _oMeasurementUnits.length; i++)
                {
                    if(_oMeasurementUnits[i].UnitType==nUnitType)
                    {
                        listItems += "<option value='" + _oMeasurementUnits[i].MeasurementUnitID+"'>" + _oMeasurementUnits[i].UnitName+"</option>";
                    }
                }
            }
            $("#cboMeasurmentUnit,#cboReportUnit").html(listItems);
            $('#cboMeasurmentUnit').val(_oProduct.MeasurementUnitID);
            $('#cboReportUnit').val(_oProduct.ReportingUnitID);
        }
    }
    function RefreshControl(oProduct)
    {
        debugger;
        $("#txtProductCode" ).prop( "disabled", true );
        $("#txtProductCategory").val(oProduct.ProductCategoryName);
        $("#txtProductGroup").val(oProduct.GroupName);
        $("#txtProductCode").val(oProduct.ProductCode);
        $("#txtProductName").val(oProduct.ProductName);
        $("#txtAddOne").val(oProduct.AddOne);
        $("#txtAddTwo").val(oProduct.AddTwo);
        $("#txtShortName").val(oProduct.ShortName);
        $("#txtProductDescription").val(oProduct.ProductDescription);
        $("#cboMeasurmentUniteType").val(oProduct.UnitTypeInInt);
        $("#txtBrand").val(oProduct.Brand);
        $("#cboProductType").val(oProduct.ProductType);
        if(_oClientOperationSetting.Value=="0" || _oClientOperationSetting.Value=="")//if is Not Menual
        {
            document.getElementById("txtProductCode").disabled = true;
            $('#lblCodeCaption').html('Code');
        }else{
            document.getElementById("txtProductCode").disabled = false;
            $('#lblCodeCaption').html('Part No');
        }
        _oProduct.ProductID=oProduct.ProductID;
        _oProduct.ProductCategoryID=oProduct.ProductCategoryID;
        _oProduct.ProductBaseID=oProduct.ProductBaseID;
        _oProduct.AccountHeadID=oProduct.AccountHeadID;
        _oProduct.MeasurementUnitID=oProduct.MeasurementUnitID;
        _oProduct.ReportingUnitID = oProduct.ReportingUnitID;
        _oProduct.ModelReferenceID= oProduct.ModelReferenceID;
        if(parseInt(oProduct.ModelReferenceID)>0)
        {
            $('#txtMoldName').val(oProduct.ModelReferenceName);
            $('#txtMoldName').addClass('fontColorOfPickItem');
        }
        document.getElementById("chkApplyProperty").checked=oProduct.ApplyProperty;
        document.getElementById("chkIsSerialNoApply").checked=oProduct.IsSerialNoApply;
        FullName_keyup();
        LoadUnits();
    }


    $("#btnChange").click(function (){
        debugger;
        var oProducts = $('#tblProducts').datagrid('getChecked');
        if(oProducts==null || oProducts.length<=0)
        {
            alert("Please Select atleast one item!");            
            return false;
        }
        $('#txtProductCategoryChange').val("");
        $('#txtProductGroupChange').val("");
        $("#winProductTypeChange input,select").prop('disabled',false);
        $("#winProductTypeChange").icsWindow('open', "Product Type Change");
    })




    $("#btnAdd").click(function () {
        debugger;
        RefreshByProductSetup();
        _oIsAdd=true;
        oProduct= {
            ProductID : 0,
            ProductCategoryID :0,
            ProductBaseID : 0,
            AccountHeadID:0 ,
            MeasurementUnitID:0,
            ReportingUnitID:0,
            ProductCategoryName:"",
            GroupName:"",
            ProductCode:"",
            ProductName:"",
            AddOne:"",
            AddTwo:"",
            ShortName:"",
            UnitTypeInInt:0,
            Brand:"",
            ProductType:0,
            ApplyProperty:0,
            IsSerialNoApply:0

        };
        PropertyShowHide(false);
        RefreshControl(oProduct);
        $('#btnSave').show();
        $('#winProduct input[type=text]').val('');
        $("#winProduct input,select").prop('disabled',false);
        $("#winProduct").icsWindow('open', "Product Entry");
    });
    $("#btnEdit").click(function () {
        debugger;
        _oIsAdd=false;
        oProduct= $('#tblProducts').datagrid('getSelected');
        if(oProduct==null || oProduct.ProductID<=0)
        {
            alert("Please Select a item from list.");
            return;
        }
        _oProductCategory.ApplyProductType_IsShow=oProduct.ApplyProductType_IsShow;
        _oProductCategory.ApplyProperty_IsShow=oProduct.ApplyProperty_IsShow;
        _oProductCategory.ApplyPlantNo_IsShow=oProduct.ApplyPlantNo_IsShow;
        _oProductCategory.IsApplyCategory=oProduct.IsApplyCategory;
        _oProductCategory.ApplyGroup_IsShow=oProduct.IsApplyGroup;
        _oProduct.PPIs=[];
        RefreshByProductSetup();
       // GetsProperty(oProduct);
        PropertyShowHide(oProduct.ApplyProperty);
        _nSelectedRowIndex=$('#tblProducts').datagrid('getRowIndex',oProduct);
        $("#winProduct input,select").prop('disabled',false);
        $('#btnSave').show();
        $('#winProduct input[type=text]').val('');
        RefreshControl(oProduct);
        $("#winProduct").icsWindow('open', "Product Entry");
    });

    $("#btnView").click(function () {
        debugger;
        RefreshByProductSetup();

        _oIsAdd=false;
        oProduct= $('#tblProducts').datagrid('getSelected');
        if(oProduct==null || oProduct.ProductID<=0)
        {
            alert("Please Select a item from list.");
            return;
        }
        _oProduct.PPIs=[];
        RefreshByProductSetup();
       // GetsProperty(oProduct);
        PropertyShowHide(oProduct.ApplyProperty);

        $("#winProduct input,select").prop('disabled',true);
        $('#btnSave').hide();
        _nSelectedRowIndex=$('#tblProducts').datagrid('getRowIndex',oProduct);
        $('#winProduct input[type=text]').val('');
        RefreshControl(oProduct);
        $("#winProduct").icsWindow('open', "Product Entry");
    });

    $("#btnClose").click(function () {
        debugger;
        $("#winProduct").icsWindow('close');
    });

    $('#btnPropertyInfo').click(function(){
        var oProduct = $("#tblProducts").datagrid("getSelected");
        if (oProduct == null || parseInt(oProduct.ProductID) <= 0) { alert("Please select a Product from list!"); return; }
        //if (_nBUID <=0) { alert("Sorry there is no Business Unit. Please Refresh Menu."); return; }
        sessionStorage.setItem('ProductName', oProduct.ProductName);
        sessionStorage.setItem("BackLink", window.location.href);
        window.open(_sBaseAddress+'/Product/ViewProductPropertyInformation?ProductID='+parseInt(oProduct.ProductID)+'&BUID='+_nBUID, '_blank');
    });

    $('#btnProductSort').click(function(){
        var oProduct = $("#tblProducts").datagrid("getSelected");
        if (oProduct == null || parseInt(oProduct.ProductID) <= 0) { alert("Please select a Product from list!"); return; }
        //if (_nBUID <=0) { alert("Sorry there is no Business Unit. Please Refresh Menu."); return; }
        var nIndex=$('#tblProducts').datagrid('getRowIndex',oProduct);
        sessionStorage.setItem("SelectedRowIndex", nIndex);
        sessionStorage.setItem("Header", "Product");
        sessionStorage.setItem("Products", JSON.stringify($('#tblProducts').datagrid('getRows')));
        sessionStorage.setItem("BackLink", window.location.href);
        window.open(_sBaseAddress+'/Product/ViewProductSort?ProductID='+parseInt(oProduct.ProductID)+'&BUID='+_nBUID, '_blank');
    });
    function RefreshObject()
    {
        var oProduct= {
            ProductID : _oProduct.ProductID,
            ProductCategoryID : _oProduct.ProductCategoryID,
            ProductBaseID : _oProduct.ProductBaseID,
            ProductCode: $.trim($("#txtProductCode").val()),
            ProductName: $.trim($("#txtProductName").val()),
            AddOne:  $.trim($("#txtAddOne").val()),
            AddTwo :  $.trim($("#txtAddTwo").val()),
            ShortName :  $.trim($("#txtShortName").val()),
            ProductDescription:$.trim($("#txtProductDescription").val()),
            UnitTypeInInt:parseInt($("#cboMeasurmentUniteType").val()),
            MeasurementUnitID : parseInt($("#cboMeasurmentUnit").val()),
            ReportingUnitID:parseInt($("#cboReportUnit").val()),
            Brand :  $.trim($("#txtBrand").val()),
            ProductTypeInInt:$("#cboProductType").val(),
            AccountHeadID:_oProduct.AccountHeadID,
            ModelReferenceID:_oProduct.ModelReferenceID,
            ApplyProperty:$('#chkApplyProperty').is(':checked'),
            IsSerialNoApply:$('#chkIsSerialNoApply').is(':checked'),
            PPIs: $('#chkApplyProperty').is(':checked')? $('#tblPorpertyValues').datagrid('getRows'):[]
        };
        return oProduct;
    }
    function ValidateInput()
    {
        if(_oProduct==null)
        {
            alert("Invalid Product Category!");
            return false;
        }
        if(document.getElementById('txtProductName').value ==null || document.getElementById('txtProductName').value =="")
        {
            alert("Please Type Item.");
            $('#txtProductName').focus();
            return false;
        }
        if(_oProductCategory.IsApplyCategory)
        {
            if(parseInt(_oProduct.ProductCategoryID)<=0)
            {
                alert("Select Product Category!");
                $("#txtProductCategory").focus();
                return false;
            }
        }
        if(_oProductCategory.ApplyGroup_IsShow)
        {
            if(parseInt(_oProduct.ProductBaseID)<=0)
            {
                alert("Select Product Group!");
                $("#txtProductGroup").focus();
                return false;
            }
        }

        if(_oProductCategory.IsApplyProductType)
        {
            if(parseInt($("#cboProductType").val())<=0)
            {
                alert("Select Product Type!");
                $("#cboProductType").focus();
                return false;
            }
            if(parseInt($("#cboProductType").val())>1)
            {
                if(_oProduct.AccountHeadID==0)
                {
                    alert("Please Pick Account Head!");
                    $("#txtAccountHeadName").focus();
                    return false;
                }
            }
        }
        var nUnitType = $('#cboMeasurmentUniteType').val();
        if(parseInt(nUnitType)<=0)
        {
            alert("Please Select Unit Type");
            $('#cboMeasurmentUniteType').focus();
            return false;
        }
        var cboMeasurmentUnit =document.getElementById("cboMeasurmentUnit");
        var nUnitID = cboMeasurmentUnit.options[cboMeasurmentUnit.selectedIndex].value;

        if( parseInt(nUnitID)==0)
        {
            alert("Please select Unit");
            $('#cboMeasurmentUnit').focus();
            return false;
        }
        if($('#chkApplyProperty').is(':checked')){
            var oPPIs=$('#tblPorpertyValues').datagrid('getRows');
            if(oPPIs==null||oPPIs.length<=0){
                alert('Please select Some Property Values!');
                $('#txtValueOfProperty').focus();
                return false;
            }
        }
        return true;
    }
    $('#btnSave').click(function(e){
        debugger;
        if(!ValidateInput()) return false;
        var oProduct = RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: '@Url.Action("Save", "Product")',
            data:  JSON.stringify(oProduct),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oProduct = jQuery.parseJSON(data);
                if (oProduct.ErrorMessage == '' || oProduct.ErrorMessage == null)
                {
                    _oProduct=oProduct;
                    alert("Date Save Successfully");
                    if(_oIsAdd==true)
                    {
                        var oProducts= $('#tblProducts').datagrid('getRows');
                        var nIndex=oProducts.length;
                        $('#tblProducts').datagrid('appendRow', oProduct);
                        $('#tblProducts').datagrid('selectRow', nIndex);
                    }
                    else
                    {
                        $('#tblProducts').datagrid('updateRow', { index: _nSelectedRowIndex, row: oProduct });
                        $('#tblProducts').datagrid('selectRow', _nSelectedRowIndex);
                    }

                    $("#winProduct").icsWindow('close');
                }
                else
                {
                    alert(oProduct.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(xhr+'~' +status+'~'+error);
            }
        });
    });

    $("#txtProductName").keyup(function (e){

        FullName_keyup()
    });
    $("#txtShortName").keyup(function (e){

        FullName_keyup()
    });
    $("#txtProductName").keyup(function (e){

        FullName_keyup()
    });
    $("#txtBrand").keyup(function (e){

        FullName_keyup()
    });
    function FullName_keyup()
    {
        var sFullName="";
        var sTemp="";
        sFullName=$('#txtProductCategory').val();
        sFullName=sFullName+" "+$('#txtProductGroup').val();
        sTemp=$("#txtBrand").val();
        if( sTemp.length>0)
        {
            sFullName=sFullName+" - "+sTemp;
        }
        sTemp=$("#txtProductName").val();
        if( sTemp.length>0)
        {
            sFullName=sFullName+" - "+sTemp;
        }
        sTemp=$("#txtShortName").val();
        if( sTemp.length>0)
        {
            sFullName=sFullName+" - "+sTemp;
        }
        document.getElementById("lblFullName").innerHTML = sFullName;
    }

    $('#txtSearchbyProductName').keydown(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code== 13) {
            var nName_Product = $('#txtSearchbyProductName').val();
            if(nName_Product!="")
            {
                var oProduct={ProductName: nName_Product,BUID:_nBUID}
                GetsByName(oProduct);
            }
        }

    });
    //$('#txtSearchbyProductName').keydown(function (e) {
    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    if (code == 8) //backspace=8
    //    {
    //        var nName_Product=document.getElementById("txtSearchbyProductName");
    //        nName_Product.value='';
    //        nName_Product.style.color="Normal";
    //        nName_Product.style.fontWeight="Black";
    //        if(_oProducts.length>0)
    //        {
    //            LoadintoGrid(_oProducts);
    //        }
    //    }
    //});
    $('#txtSearchbyProductCategory').keydown(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code== 13) {
            var nName_Product = $('#txtSearchbyProductCategory').val();
            if(nName_Product!="")
            {
                var oProduct={ProductCategoryName: nName_Product,BUID:_nBUID}
                GetsByName(oProduct);
            }
        }

    });
    //$('#txtSearchbyProductCategory').keydown(function (e) {
    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    if (code == 8) //backspace=8
    //    {
    //        var nName_Product=document.getElementById("txtSearchbyProductCategory");
    //        nName_Product.value='';
    //        nName_Product.style.color="Normal";
    //        nName_Product.style.fontWeight="Black";
    //        if(_oProducts.length>0)
    //        {
    //            LoadintoGrid(_oProducts);
    //        }
    //    }
    //});

    $('#txtSearchbyGroupName').keydown(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code== 13) {
            var nName_Product = $('#txtSearchbyGroupName').val();
            if(nName_Product!="")
            {
                var oProduct={GroupName: nName_Product,BUID:_nBUID}
                GetsByName(oProduct);
            }
        }

    });
    //$('#txtSearchbyGroupName').keydown(function (e) {
    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    if (code == 8) //backspace=8
    //    {
    //        var nName_Product=document.getElementById("txtSearchbyGroupName");
    //        nName_Product.value='';
    //        nName_Product.style.color="Normal";
    //        nName_Product.style.fontWeight="Black";
    //        if(_oProducts.length>0)
    //        {
    //            LoadintoGrid(_oProducts);
    //        }
    //    }
    //});
        //btnSearch
    $('#btnSearch').click(function(e){
        var oProduct = {BUID:_nBUID,GroupName:$.trim($('#txtSearchbyGroupName').val()),ProductCategoryName:$.trim($('#txtSearchbyProductCategory').val()), ProductName: $.trim($('#txtSearchbyProductName').val()) };
        GetsByName(oProduct);
    });
    function GetsByName(oProduct)
    {
        $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/Product/Gets_ByName",
                data:  JSON.stringify(oProduct),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oProducts =data;
                    if (oProducts.length>0)
                    {
                        LoadintoGrid(oProducts);
                    }
                    else
                    {
                        alert("Data Not found");
                        LoadintoGrid([]);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
    }
    function GetsProperty(oProduct)
    {
        $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/Product/GetsProperty",
                data:  JSON.stringify(oProduct),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    var oPPIs = jQuery.parseJSON(data);
                    if (oPPIs.length>0)
                    {
                        DynamicRefreshList(oPPIs, 'tblPorpertyValues');
                        _oProduct.PPIs=oPPIs;
                    }
                    else
                    {
                        DynamicRefreshList([], 'tblPorpertyValues');
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
    }



    $('#txtProductCategoryChange').keydown(function (e){
        if(e.which === 13 || e.which === 9)
        {

            var nBUID= sessionStorage.getItem('BUID');
            if(nBUID===null || nBUID===undefined)
            {
                nBUID =0;
            }
            var txtProductCategory = $('#txtProductCategoryChange').val();
            var oProductCategory = {
                ProductCategoryName : txtProductCategory,
                IsLastLayer : true,
                BusinessUnitID : nBUID
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProductCategory,
                ControllerName: "ProductCategory",
                ActionName: "GetByName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (parseInt(response.objs[0].ProductCategoryID) > 0) {
                        var tblColums = []; var oColumn = { field: "ProductCategoryID", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductCategoryName", title: "Category Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winProductCategoryChange',
                            winclass: 'clsProductCategory',
                            winwidth: 500,
                            winheight: 420,
                            tableid: 'tblProductCategory',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'ProductCategoryName',
                            windowTittle: 'Product Category List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else
                {
                    alert("Data Not Found!");
                }
            });
        }
    });



    $('#txtProductGroupChange').keydown(function (e){
        if(e.which === 13 || e.which === 9)
        {

            if(parseInt(_oProduct.ProductCategoryID)<=0)
            {
                alert("Please Select an Bank Branch!");
                return false;
            }
            var txtProductGroup = $('#txtProductGroupChange').val();
            var oProductBase = {
                ProductName : txtProductGroup,
                ProductCategoryID : _oProduct.ProductCategoryID
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProductBase,
                ControllerName: "ProductBase",
                ActionName: "GetByCategoryOrName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (parseInt(response.objs[0].ProductBaseID) > 0) {
                        var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width: 150, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Group Name", width: 200, align: "left" }; tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winProductGroupChange',
                            winclass: 'clsProductGroup',
                            winwidth: 500,
                            winheight: 420,
                            tableid: 'tblProductGroup',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'ProductName',
                            windowTittle: 'Product Group List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else
                {
                    alert("Data Not Found!");
                }
            });
        }
    });



    $('#btnProductGroupChangeClose').click(function(e){
        $("#winProductTypeChange").icsWindow('close');
    })



    $('#btnPickProductCategoryChange').click(function (e){
        var nBUID= sessionStorage.getItem('BUID');
        if(nBUID===null || nBUID===undefined)
        {
            nBUID =0;
        }
        var txtProductCategory = $('#txtProductCategoryChange').val();
        var oProductCategory = {
            ProductCategoryName : txtProductCategory,
            IsLastLayer : true,
            BusinessUnitID : nBUID
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProductCategory,
            ControllerName: "ProductCategory",
            ActionName: "GetByName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (parseInt(response.objs[0].ProductCategoryID) > 0) {
                    var tblColums = []; var oColumn = { field: "ProductCategoryID", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductCategoryName", title: "Category Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductCategoryChange',
                        winclass: 'clsProductCategory',
                        winwidth: 500,
                        winheight: 420,
                        tableid: 'tblProductCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ProductCategoryName',
                        windowTittle: 'Product Category List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("Data Not Found!");
            }
        });
    });



    $('#btnPickProductGroupChange').click(function (e){

        if(parseInt(_oProduct.ProductCategoryID)<=0)
        {
            alert("Please Select an Bank Branch!");
            return false;
        }
        var txtProductGroup = $('#txtProductGroupChange').val();
        var oProductBase = {
            ProductName : txtProductGroup,
            ProductCategoryID : _oProduct.ProductCategoryID
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProductBase,
            ControllerName: "ProductBase",
            ActionName: "GetByCategoryOrName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (parseInt(response.objs[0].ProductBaseID) > 0) {
                    var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Group Name", width: 200, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winProductGroupChange',
                        winclass: 'clsProductGroup',
                        winwidth: 500,
                        winheight: 420,
                        tableid: 'tblProductGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ProductName',
                        windowTittle: 'Product Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("Data Not Found!");
            }
        });
    });



    function ValidateInputProductGroupChange()
    {
        var oProducts = $('#tblProducts').datagrid('getChecked');
        if(oProducts==null && oProducts.length<=0)
        {
            alert("Please Select atleast one item!");            
            return false;
        }

        if(parseInt(_oProduct.ProductCategoryID)<=0)
        {
            alert("Select Product Category!");
            $("#txtProductCategoryChange").focus();
            return false;
        }

        if(parseInt(_oProduct.ProductBaseID)<=0)
        {
            alert("Select Product Group!");
            $("#txtProductGroupChange").focus();
            return false;
        }
        return true;

    }



    function RefreshObjectProductGroupChange()
    {
        var oProduct= {
            ProductID : _oProduct.ProductID,
            ProductCategoryID : _oProduct.ProductCategoryID,
            ProductBaseID : _oProduct.ProductBaseID,
            ProductCode: $.trim($("#txtProductCode").val()),
            ProductName: $.trim($("#txtProductName").val()),
            AddOne:  $.trim($("#txtAddOne").val()),
            AddTwo :  $.trim($("#txtAddTwo").val()),
            ShortName :  $.trim($("#txtShortName").val()),
            ProductDescription:$.trim($("#txtProductDescription").val()),
            UnitTypeInInt:parseInt($("#cboMeasurmentUniteType").val()),
            MeasurementUnitID : parseInt($("#cboMeasurmentUnit").val()),
            ReportingUnitID:parseInt($("#cboReportUnit").val()),
            Brand :  $.trim($("#txtBrand").val()),
            ProductTypeInInt:$("#cboProductType").val(),
            AccountHeadID:_oProduct.AccountHeadID,
            ModelReferenceID:_oProduct.ModelReferenceID,
            ApplyProperty:$('#chkApplyProperty').is(':checked'),
            IsSerialNoApply:$('#chkIsSerialNoApply').is(':checked'),
            PPIs: $('#chkApplyProperty').is(':checked')? $('#tblPorpertyValues').datagrid('getRows'):[]
        };
        return oProduct;
    }



    $('#btnProductGroupChangeSave').click(function(e){
        debugger;
        if(!ValidateInputProductGroupChange()) return false;
        var ids = "";
        var oProducts = $('#tblProducts').datagrid('getChecked');



        for (var i = 0; i < oProducts.length; i++)
        {
            ids = ids + oProducts[i].ProductID + ',';
        }
        ids = ids.substr(0, ids.length-1);
        

        var oProduct = {
            ProductName : ids,
            ProductCategoryID : _oProduct.ProductCategoryID,
            ProductBaseID : _oProduct.ProductBaseID
        }

        
                
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: _sBaseAddress+"/Product/ProductGroupChangeSave",
                    data:  JSON.stringify(oProduct),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        debugger;
                        var oProducts = jQuery.parseJSON(data);
                        
                            if (oProducts[0].ErrorMessage == '' || oProducts[0].ErrorMessage == null)
                            {
                                alert("Date Save Successfully");
                                LoadintoGrid(oProducts);
                                
                            }
                            else
                            {
                                alert(oProducts[0].ErrorMessage);
                                $("#winProduct").icsWindow('close');
                            }
                        
                        

                        $("#winProduct").icsWindow('close');
                        
                        
                
                    },
                    error: function (xhr, status, error)
                    {
                        alert(xhr+'~' +status+'~'+error);
                    }
                });
                
            
    });



    </script>


