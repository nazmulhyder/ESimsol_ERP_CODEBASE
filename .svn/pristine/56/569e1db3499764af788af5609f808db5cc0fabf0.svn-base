<html>
@{
    ViewBag.title = "RMClosingStock";
}
<body>
    @model ESimSol.BusinessObjects.RMClosingStock
    <div class="menuMainCollectionTable panel-group" ng-app="RMClosingStockapp" ng-controller="RMClosingStockController" id="divCC" style="height:530px">
        <div class=" panel-primary" >
        <div style="height:490px;" class="panel-body regionRMClosingStock">
            <fieldset style="height:150px; text-align:center;">
                <legend style="font-weight:bold;">Closing Stock : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold; text-align:center; width:90%;">

                    <tr>
                        <td style="width:15%; text-align:right">
                           SL No :
                        </td>
                        <td style="width:35%">
                            <input type="text" ng-model="RMClosingStock.SLNo" class="form-control" style="width:100%" disabled/>
                        </td>

                        <td style="width:15%; text-align:right">
                            Stock Date :
                        </td>
                        <td style="width:35%" class="input-group date date-container">
                            <input type="text" class="form-control" style="width:280px" ng-model="RMClosingStock.StockDateST"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                        </td>
                    </tr>

                    <tr>
                        <td style="width:15%; text-align:right">
                           Business Unit :
                        </td>
                        <td style="width:35%;">
                            <select ng-model="RMClosingStock.BUID" class="form-control" ng-options="oItem.BusinessUnitID as oItem.ShortName for oItem in BUnits" style="width:100%">
                                <option value="">--Select Business Unit--</option>
                            </select>
                        </td>
                        <td style="width:15%; text-align:right">
                            A/C Session :
                        </td>
                        <td style="width:35%;">
                            <select ng-model="RMClosingStock.AccountingSessionID" class="form-control" ng-options="oItem.AccountingSessionID as oItem.SessionName for oItem in AccountingSessions" style="width:100%">
                                <option value="">--Select Business Session--</option>
                            </select>
                        </td>
                    </tr>
                   
                    <tr>
                        <td style="width:15%; text-align:right">
                            Stock value :
                        </td>
                        <td style="width:35%;">
                            <input type="text" ng-model="RMClosingStock.ClosingStockValue" class="form-control number number-precision" style="width:100%" disabled />
                        </td>
                        <td style="width:15%; text-align:right">
                            Approved By:
                        </td>
                        <td style="width:35%;">
                            <input type="text" ng-model="RMClosingStock.ApprovedByName" class="form-control" style="width:100%" disabled/>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:15%; text-align:right">
                            Remarks :
                        </td>
                        <td style="width:85%;" colspan="3">
                            <input type="text" ng-model="RMClosingStock.Remarks" class="form-control" style="width:100%" />
                        </td>
                    </tr>
                </table>
            </fieldset>

            <div class="ui-grid-top-panel" style="text-align:left;">
                <label>A/C Head:</label><input ng-model="txtAccountName" placeholder="Type A/C Name & Press Enter" ng-keydown="SearchKeyACHeadName($event)" style="width:150px; height:24px;" required />
                <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="PickACHead()"><span class="glyphicon glyphicon-ok" aria-hidden="true"> Pick</span></button>
                <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RemoveDetail()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Remove</span></button>
                <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RefreshDetail()"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
            </div>
            <div style="width: 100%; height:290px;" ui-grid="gridOptionsCSDetail" ui-grid-selection ui-grid-cellnav ui-grid-edit></div>
        </div>
        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold; width:100%;">
                <tr>
                    <td style="width:100%;text-align:right">
                        <button type="button" ng-hide="btnUndoApprove" class="btn btn-default btn-sm btn-info" aria-label="right Align" ng-click="UndoApprove()"><span class="glyphicon glyphicon-refresh" aria-hidden="true">Undo Approve</span></button>
                        <button type="button" ng-hide="btnApprove" class="btn btn-default btn-sm btn-primary" aria-label="right Align" ng-click="Approve()"><span class="glyphicon glyphicon-ok" aria-hidden="true"> Approve</span></button>
                        <button type="button" ng-hide="btnSave" class="btn btn-default btn-sm btn-success" aria-label="right Align" ng-click="Save()"><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Save</span></button>
                        <button type="button" ng-hide="btnClose" class="btn btn-default btn-sm btn-danger" aria-label="right Align" ng-click="Close()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span></button>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
            
   </div>
</body>
</html>
<style type="text/css">
    .regionRMClosingStock .form-horizontal .control-label {
        padding-top: 1px;
    }

    .regionRMClosingStock .form-control {
        height: 26px;
        padding: 0px 6px;
        font-size: 12px;
        width:100%;
    }
</style>


<script type="text/javascript">
    //debugger;
    var oRMClosingStock =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oAccountingSessions =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.AccountingSessions));
    var oBUnits =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUnits));
    var RMClosingStockApp = angular.module('RMClosingStockapp', ['ngAnimate', 'ui.bootstrap','ui.grid', 'ui.grid.selection','ui.grid.edit', 'ms.service']);
    debugger;
    RMClosingStockApp.controller('RMClosingStockController', function ($scope, $http,$uibModal,$log,uiGridConstants,msModal,userSession,icsMethod,msGridControl) {

        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });
        $scope.RMClosingStock = oRMClosingStock;
        $scope.RMClosingStock.StockDate=icsdateformat(new Date($scope.RMClosingStock.StockDateST));
        $scope.RMClosingStockDetails=oRMClosingStock.RMClosingStockDetails;
        $scope.AccountingSessions = oAccountingSessions;
        $scope.BUnits = oBUnits;

        $(".number-int").icsNumberField({ min: 0, precision: 0 });
        $(".number-precision").icsNumberField({ min: 0,precision: 2 });

        var oDetailColumns = [];
        var oColumn ={ field: 'AccountCode', name: 'Code', width: '15%', cellClass: 'text-left',enableSorting: false ,enableCellEdit:false};oDetailColumns.push(oColumn);
        oColumn ={ field: 'AccountHeadName', name: 'A/C Head', width: '30%',align:'left',cellClass: 'text-left', enableSorting: false ,enableCellEdit:false};oDetailColumns.push(oColumn);
        oColumn ={ field: 'ParentHeadName', name: 'Parent Head', width: '30%',align:'left', enableSorting: false ,enableCellEdit:false};oDetailColumns.push(oColumn);
        oColumn ={ field: 'Amount', name: 'Amount',cellClass: 'text-right',enableCellEdit:true, width: '14%',align:'left',cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum,aggregationHideLabel: true,footerCellClass: 'text-right',footerCellFilter: 'number:0' };oDetailColumns.push(oColumn);

        ////Commercial invoice LC Detail
        $scope.gridOptionsCSDetail = {
            showColumnFooter: true,
            multiSelect: false,
            enableRowSelection: true,
            enableSelectAll: false,
            columnDefs:oDetailColumns,
            data:$scope.RMClosingStockDetails,
            onRegisterApi: function (gridApi) {
                $scope.gridDetailApi = gridApi;
                gridApi.edit.on.afterCellEdit($scope,
                  function (rowEntity, colDef, newValue, oldValue)
                  {
                      debugger;
                      rowEntity.Amount= parseFloat(rowEntity.Amount);
                      $scope.SetTotal();
                      return rowEntity;
                  });
            }
        };
        $scope.SetTotal = function()
        {
            var oDetails = $scope.gridOptionsCSDetail.data;
            var nTotalAmount = 0;
            if(oDetails.length>0)
            {
               for(var i =0;i<oDetails.length;i++)
                {
                   nTotalAmount += parseFloat(oDetails[i].Amount);
               }
            }
            $scope.RMClosingStock.ClosingStockValue = nTotalAmount.toFixed(2);
        };

        $scope.RefreshDetail = function ()
        {
            $scope.gridOptionsCSDetail.data =  $scope.gridOptionsCSDetail.data;
        };
   

        $scope.PickACHead=   function ()
        {
            var oChartsOfAccount = {AccountHeadName:$.trim($scope.txtAccountName)};
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/ChartsOfAccount/GetChartsOfAccountsForClosingStock',$.param(oChartsOfAccount), config).then(
                        function (response)
                        {
                            var oColumns = [];
                            var oColumn = { field: 'AccountCode', name: 'Code',width: '30%'  };oColumns.push(oColumn);
                            oColumn = { field: 'AccountHeadName', name: 'Account Head Name',width: '40%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'ParentHeadName', name: 'Parent Head Name',width: '30%', enableSorting: false  };oColumns.push(oColumn);
                            var results=jQuery.parseJSON(response.data);
                            var modalObj={
                                size:'md',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:true,
                                pickertitle:'Chart Of Account List',
                                searchingbyfieldName:'AccountCode',
                                columns:oColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                debugger;
                                for(var i =0;i<result.length;i++)
                                {
                                    var oRMClosingStockDetails = $scope.gridOptionsCSDetail.data;
                                    var oRMClosingStockDetail = {
                                        RMClosingStockDetailID :0, 
                                        RMClosingStockID:$scope.RMClosingStock.RMClosingStockID,
                                        RMAccountHeadID : result[i].AccountHeadID,
                                        Amount:0,
                                        AccountCode :result[i].AccountCode,
                                        AccountHeadName:result[i].AccountHeadName,
                                        ParentHeadName:result[i].ParentHeadName
                                    };
                                    if(!icsMethod.ICS_IsExist(oRMClosingStockDetails,'RMAccountHeadID', oRMClosingStockDetail.RMAccountHeadID))
                                    {
                                        $scope.gridOptionsCSDetail.data.push(oRMClosingStockDetail);
                                    }
                                }
                                

                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );

        };
        $scope.SearchKeyACHeadName = function (e) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtAccountName = $.trim($scope.txtAccountName);
                if(txtAccountName=="" || txtAccountName==null)
                {
                    alert("Type Sheet No and Press Enter");
                    return;
                }
                $scope.PickACHead();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtAccountName='';
            }
        };
        $scope.RemoveDetail = function ()
        {
            debugger;
            var oRMClosingStockDetail = $scope.gridDetailApi.selection.getSelectedRows()[0];
            if(oRMClosingStockDetail==null)
            {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex=$scope.gridOptionsCSDetail.data.indexOf(oRMClosingStockDetail);
            if (!confirm("Confirm to Delete?")) return ;
            $scope.gridOptionsCSDetail.data.splice(SelectedRowIndex,1);
        };

        $scope.RefreshClosingValue= function ()
        {
           // $scope.RMClosingStock.ClosingStockValue=formatPrice($scope.RMClosingStock.ClosingStockValue,0);
        }

        $scope.Save=function()
        {
            debugger;
            if(!$scope.ValidateInput()) return;
            var oRMClosingStock=$scope.RMClosingStock;
            oRMClosingStock.StockDate = new Date(oRMClosingStock.StockDateST);
            oRMClosingStock.RMClosingStockDetails = $scope.gridOptionsCSDetail.data;

            $http.post(sessionStorage.getItem('BaseAddress')+'/RMClosingStock/Save',oRMClosingStock).then(
                  function (response)
                  {
                      var oRMClosingStock= jQuery.parseJSON(response.data);
                      if (oRMClosingStock.ErrorMessage=="" || oRMClosingStock.ErrorMessage==null)
                      {
                          alert("Data Save Successfully!!");
                          var oRMClosingStocks = sessionStorage.getItem("RMClosingStocks");
                          var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                          if (oRMClosingStocks != null)
                          {
                              oRMClosingStocks = jQuery.parseJSON(oRMClosingStocks);
                          }
                          else {
                              oRMClosingStocks = [];
                          }
                          if (nIndex != -1) {
                              oRMClosingStocks[nIndex] = oRMClosingStock;
                          }
                          else {
                              sessionStorage.setItem("SelectedRowIndex", oRMClosingStocks.length);
                              oRMClosingStocks.push(oRMClosingStock);
                          }
                          sessionStorage.setItem("RMClosingStocks", JSON.stringify(oRMClosingStocks));
                          window.location.href = sessionStorage.getItem("BackLink");
                      }
                      else
                      {
                          alert(oRMClosingStock.ErrorMessage);
                      }

                  },
                      function (response) { alert(jQuery.parseJSON(response.data).Message);$scope.MeasurementUnits=[];}
              );
        }
        
        $scope.Approve=function()
        {
            debugger;
            if(!$scope.ValidateInput()) return;
            var oRMClosingStock=$scope.RMClosingStock;
            $http.post(sessionStorage.getItem('BaseAddress')+'/RMClosingStock/Approve',oRMClosingStock).then(
                  function (response)
                  {
                      var oRMClosingStock= jQuery.parseJSON(response.data);
                      if (oRMClosingStock.ErrorMessage=="" || oRMClosingStock.ErrorMessage==null)
                      {
                          alert("Approve Successfully!!");
                          debugger;
                          var oRMClosingStocks = sessionStorage.getItem("RMClosingStocks");
                          var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                          if (oRMClosingStocks != null)
                          {
                              oRMClosingStocks = jQuery.parseJSON(oRMClosingStocks);
                          }
                          else {
                              oRMClosingStocks = [];
                          }
                          if (nIndex != -1) {
                              oRMClosingStocks[nIndex] = oRMClosingStock;
                          }
                          else {
                              sessionStorage.setItem("SelectedRowIndex", oRMClosingStocks.length);
                              oRMClosingStocks.push(oRMClosingStock);
                          }
                          sessionStorage.setItem("RMClosingStocks", JSON.stringify(oRMClosingStocks));
                          window.location.href = sessionStorage.getItem("BackLink");
                      }
                      else
                      {
                          alert(oRMClosingStock.ErrorMessage);
                      }

                  },
                      function (response) { alert(jQuery.parseJSON(response.data).Message);$scope.MeasurementUnits=[];}
              );
        }      
        $scope.UndoApprove=function()
        {
            debugger;
            $scope.SetTotal();
            if(!$scope.ValidateInput()) return;
            var oRMClosingStock=$scope.RMClosingStock;
            $http.post(sessionStorage.getItem('BaseAddress')+'/RMClosingStock/UndoApprove',oRMClosingStock).then(
                  function (response)
                  {
                      var oRMClosingStock= jQuery.parseJSON(response.data);
                      if (oRMClosingStock.ErrorMessage=="" || oRMClosingStock.ErrorMessage==null)
                      {
                          alert("Undo Approve Successfully!!");
                          debugger;
                          var oRMClosingStocks = sessionStorage.getItem("RMClosingStocks");
                          var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                          if (oRMClosingStocks != null)
                          {
                              oRMClosingStocks = jQuery.parseJSON(oRMClosingStocks);
                          }
                          else {
                              oRMClosingStocks = [];
                          }
                          if (nIndex != -1) {
                              oRMClosingStocks[nIndex] = oRMClosingStock;
                          }
                          else {
                              sessionStorage.setItem("SelectedRowIndex", oRMClosingStocks.length);
                              oRMClosingStocks.push(oRMClosingStock);
                          }
                          sessionStorage.setItem("RMClosingStocks", JSON.stringify(oRMClosingStocks));
                          window.location.href = sessionStorage.getItem("BackLink");
                      }
                      else
                      {
                          alert(oRMClosingStock.ErrorMessage);
                      }

                  },
                      function (response) { alert(jQuery.parseJSON(response.data).Message);$scope.MeasurementUnits=[];}
              );
        }

        $scope.ValidateInput = function()
        {
            debugger;
            if(new Date($scope.RMClosingStock.StockDate)=="Invalid Date")
            {
                alert("Please Select Stock Date!");
                return false;
            }
            if($scope.RMClosingStock.BUID==null || $scope.RMClosingStock.BUID==0)
            {
                alert("Please Select Business Unit!");
                return false;
            }
            if($scope.RMClosingStock.AccountingSessionID==null || $scope.RMClosingStock.AccountingSessionID==0)
            {
                alert("Please Select Accounting Session!");
                return false;
            }
         
            if($scope.RMClosingStock.ClosingStockValue==null || $scope.RMClosingStock.ClosingStockValue==0)
            {
                alert("Closing Stock Value Can Not Be Zero!");
                return false;
            }
            var oDetails = $scope.gridOptionsCSDetail.data;
            if(oDetails.length<=0)
            {
                alert("Sorry, there is No A/C Head. Please add detail.");
                return false;
            }
            var nTotalAmount = 0;
            if(oDetails.length>0)
            {
                for(var i =0;i<oDetails.length;i++)
                {
                    if(parseFloat(oDetails[i].Amount)<=0)
                    {
                        alert("Sorry,  Amount Should be Greater than 0. For  A/C Head ."+oDetails[i].AccountHeadName);
                        return false;
                    }
                }
            }
            return true;
        }
        $('#btnApprove').prop('disabled', true);
        if(sessionStorage.getItem("RMClosingStocksHeader")=="Add RMClosingStocks" || sessionStorage.getItem("RMClosingStocksHeader")=="Edit RMClosingStocks")
        {
            $scope.btnApprove=$scope.btnUndoApprove= true;   
        }

        if(sessionStorage.getItem("RMClosingStocksHeader")=="View RMClosingStocks")
        {
            $scope.btnSave =$scope.btnApprove=$scope.btnUndoApprove= true;   
        }
        if(sessionStorage.getItem("RMClosingStocksHeader")=="Approve RMClosingStocks")
        {                        
            $scope.btnSave=$scope.btnUndoApprove= true; 
        }
        if(sessionStorage.getItem("RMClosingStocksHeader")=="UndoApprove RMClosingStocks")
        {
            $scope.btnSave=$scope.btnApprove= true; 
        }

        $scope.Close = function()
        {
            window.location.href = sessionStorage.getItem("BackLink");
        }
        $scope.keydown = function(e)
        {
            if(e.which == 27)//escape=27
            {
                //debugger;
                window.location.href = sessionStorage.getItem("BackLink");
            }
        }
    });

</script>