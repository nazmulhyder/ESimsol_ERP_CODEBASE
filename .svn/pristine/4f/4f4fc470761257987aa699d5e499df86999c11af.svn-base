<html>
@{
    ViewBag.Title = "Lot";
}
<body>

    @model ESimSol.BusinessObjects.Lot
    <div class="menuMainCollectionTable">
        <div id="divLot" class="easyui-panel" title="Lot Creation" style="font-family:Tahoma; text-align:center; height:88%;">
            <fieldset style="height:95%; text-align:center;">
                <legend style="font-weight:bold;"> Lot Informations : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold; text-align:center; width:80%">
                    <tr>
                        <td style="height:50px;">&nbsp;</td>
                        <td style="height:50px;">&nbsp;</td>
                    </tr>
                    <tr>
                        <td style="width:30%; text-align:right">
                            Lot No :
                        </td>
                        <td style="width:70%; text-align:left">
                            @Html.TextBoxFor(model => model.LotNo, new { style = "width:99%;", id = "txtLotNo" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:30%; text-align:right">
                            Product Name :
                        </td>
                        <td style="width:70%;">
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td style="width:85%">                                        
                                        @Html.TextBoxFor(model => model.ProductNameCode, new { style = "width:99%;", id = "txtProduct", placeholder = "Search By Product Name" })
                                    </td>
                                    <td style="width:15%; text-align:right">
                                        <input id="btnResetProduct" type="button" value="C" style="width:30%" />
                                        <input id="btnPickProduct" type="button" value="Pick" style="width:60%" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:30%; text-align:right">
                            Supplier Name :
                        </td>
                        <td style="width:70%;">
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td style="width:85%">
                                        @Html.TextBoxFor(model => model.ContractorName, new { style = "width:99%;", id = "txtContractorName", placeholder = "Search By Supplier Name" })
                                    </td>
                                    <td style="width:15%; text-align:right">
                                        <input id="btnResetContractor" type="button" value="C" style="width:30%" />
                                        <input id="btnPickContractor" type="button" value="Pick" style="width:60%" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:30%; text-align:right">
                            Color :
                        </td>
                        <td style="width:70%;">
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td style="width:85%">
                                        @Html.TextBoxFor(model => model.ColorName, new { style = "width:99%;", id = "txtColor", placeholder = "Search By Color Name" })
                                    </td>
                                    <td style="width:15%; text-align:right">
                                        <input id="btnResetColor" type="button" value="C" style="width:30%" />
                                        <input id="btnPickColor" type="button" value="Pick" style="width:60%" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:30%; text-align:right">
                            Store :
                        </td>
                        <td style="width:70%">
                            <select style="width:100%;height:22px;" id="cboStore"> </select>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:30%; text-align:right">
                            Base Currency :
                        </td>
                        <td style="width:70%">
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td style="width:35%">
                                        <select style="width:100%;height:22px;" id="cboCurrency"> </select>
                                    </td>
                                    <td style="width:30%; text-align:right">
                                        Base Unit Price :
                                    </td>
                                    <td style="width:35%">
                                        <input type="text" id="txtUnitPrice" style="width:97%; text-align:right"/>
                                    </td>
                                </tr>
                            </table>                            
                        </td>
                    </tr>
                    <tr>
                        <td style="width:30%; text-align:right">
                            Foreign Currency :
                        </td>
                        <td style="width:70%">
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td style="width:35%">
                                        <select style="width:100%;height:22px;" id="cboFCCurrency"> </select>
                                    </td>
                                    <td style="width:30%; text-align:right">
                                        Foreign Unit Price :
                                    </td>
                                    <td style="width:35%">
                                        <input type="text" id="txtFCUnitPrice" style="width:97%; text-align:right" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>

                    <tr>
                        <td style="width:30%; text-align:right">
                            Weight/Carton :
                        </td>
                        <td style="width:70%">
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td style="width:35%">
                                        <input type="text" id="txtWeightPerCartoon" style="width:100%; text-align:right" />
                                    </td>
                                    <td style="width:30%; text-align:right">
                                        Cone/ Carton:
                                    </td>
                                    <td style="width:35%">
                                        <input type="text" id="txtConePerCartoon" style="width:97%; text-align:right" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:30%; text-align:right">
                            Rack :
                        </td>
                        <td style="width:70%">
                            <input type="text" id="txtRack" style="width:100%" placeholder="Enter Shelf Name" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold; width:100%;">
                <tr>
                    <td style="width:100%;text-align:right">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>

<script type="text/javascript">
    $(document).ready(function () {
        var oLot =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oStores = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Stores));
        var oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        $("#cboStore").icsLoadCombo({List: oStores, OptionValue: "WorkingUnitID",DisplayText: "WorkingUnitName",InitialValue:"Default"});
        $("#cboCurrency").icsLoadCombo({List: oCurrencys, OptionValue: "CurrencyID",DisplayText: "NameSymbol",InitialValue:"Default"});
        $("#cboFCCurrency").icsLoadCombo({List: oCurrencys, OptionValue: "CurrencyID",DisplayText: "NameSymbol",InitialValue:"Default"});
        $("#cboStore").val(oLot.WorkingUnitID);
        $("#cboCurrency").val(oLot.CurrencyID);
        $("#cboFCCurrency").val(oLot.FCCurrencyID);
        $('#txtProduct').data('ProductID', oLot.ProductID);
        $('#txtContractorName').data('ContractorID', oLot.ContractorID);
        $('#txtColor').data('ColorID', oLot.ColorID);
        $('#divLot').data('Lot', oLot);
        $('#txtUnitPrice').icsCurrencyBox();
        $('#txtUnitPrice').val(oLot.UnitPriceSt);
        $('#txtFCUnitPrice').icsCurrencyBox();
        $('#txtFCUnitPrice').val(oLot.FCUnitPriceSt);
        $('#txtWeightPerCartoon').val(oLot.WeightPerCartoon);
        $('#txtConePerCartoon').val(oLot.ConePerCartoon);
        $('#txtRack').val(oLot.ShelfWithRackNo);
        var oLotHeader=sessionStorage.getItem('LotHeader');
        if(oLotHeader==='View Lot')
        {
            $("#divLot :input").attr("disabled", true);
            $('#btnSave').hide()
        }
        RefreshAutoComplete();
        $('#divLot').data('RackID',0);
    });

    function Validation()
    {
        if(parseInt($('#divLot').data('Lot').LotID)>0)
        {
            var sLotNo = $.trim($('#txtLotNo').val());
            if(sLotNo===null || sLotNo==="")
            {
                alert("Please Enter a Lot Number!");
                return false;
            }
        }
        var nProductID = parseInt($('#txtProduct').data('ProductID'));
        if(nProductID===null || nProductID === 'NaN' || nProductID === 'undefined' || nProductID<=0)
        {
            alert("Please select Product!");
            return false;
        }

        var nCurrencyID =parseInt($('#cboCurrency').val());
        if(nCurrencyID===null || nCurrencyID === 'NaN' || nCurrencyID === 'undefined' || nCurrencyID<=0)
        {
            alert("Please Select Currency!");
            return false;
        }
        var nStoreID =parseInt($('#cboStore').val());
        if(nStoreID===null || nStoreID === 'NaN' || nStoreID === 'undefined' || nStoreID<=0)
        {
            alert("Please Select Store!");
            return false;
        }
        if(parseFloat(icsRemoveComma($('#txtUnitPrice').val()))<=0)
        {
            alert('Unit Price Should be Greater than 0');            
            $('#txtUnitPrice').focus();
            return false;
        }
        return true;
    }

    function RefreshObject()
    {
        var oLot={
            LotID: parseInt($('#divLot').data('Lot').LotID),
            ProductID: parseInt($('#txtProduct').data('ProductID')),
            ContractorID : parseInt($('#txtContractorName').data('ContractorID')),
            WorkingUnitID: parseInt($('#cboStore').val()),
            LotNo: $.trim($('#txtLotNo').val()),
            BUID: parseInt(sessionStorage.getItem('BUID')),
            ColorID : parseInt($('#txtColor').data('ColorID')),
            CurrencyID: parseInt($('#cboCurrency').val()),
            FCCurrencyID: parseInt($('#cboFCCurrency').val()),
            UnitPrice : parseFloat(icsRemoveComma($('#txtUnitPrice').val())),
            FCUnitPrice : parseFloat(icsRemoveComma($('#txtFCUnitPrice').val())),
            WeightPerCartoon : parseFloat(icsRemoveComma($('#txtWeightPerCartoon').val())),
            ConePerCartoon : parseFloat(icsRemoveComma($('#txtConePerCartoon').val())),
            RackID: parseInt($('#divLot').data('RackID'))
        };
        return oLot;
    }

    $("#btnSave").click(function (){
        if(!Validation()) return false;
        var oLot=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/Lot/Save",
            traditional: true,
            data:  JSON.stringify(oLot),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oLot = jQuery.parseJSON(data);
                if (oLot.ErrorMessage=="" || oLot.ErrorMessage==null)
                {
                    alert("Data Save Succesfully!!");
                    var oLots =sessionStorage.getItem("Lots");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oLots!=null)
                    {
                        oLots = jQuery.parseJSON(oLots);
                    }
                    else
                    {
                        oLots=[];
                    }
                    if(nIndex!=-1)
                    {
                        oLots[nIndex]=oLot;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oLots.length);
                        oLots.push(oLot);
                    }
                    sessionStorage.setItem("Lots", JSON.stringify(oLots));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else
                {
                    alert(oLot.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    $("#btnResetProduct").click(function () {
        $('#txtProduct').data('ProductID', 0);
        $("#txtProduct").val("");
    });

    $("#btnPickProduct").click(function () {
        var sProductName=$.trim($("#txtProduct").val());
        if(sProductName=="")
        {
            alert("Type product name to search.");
            return false;
        }
        GetProducts(sProductName);
    });

    $("#txtProduct").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var sProductName=$.trim($("#txtProduct").val());
            if(sProductName=="")
            {
                alert("Type product name to search.");
                return false;
            }
            GetProducts(sProductName);
        }
        else if(nkeyCode==8){
            $('#txtProduct').data('ProductID', 0);
        }
    });

    function GetProducts(sProductName){
        var oProduct = { BUID:sessionStorage.getItem("BUID"),ProductName:sProductName};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oProduct,
            ControllerName: "Product",
            ActionName: "SearchByProductBUWise",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Code", width: 80, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Name", width: 280, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "MUnit", title: "Unit", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ProductCategoryName", title: "Category", width:200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass:'clsProductPicker',
                        winwidth: 700,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'ProductName',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No product found.");
            }
        });
    }

    $("#btnResetContractor").click(function () {
        $('#txtContractorName').data('ContractorID', 0);
        $("#txtContractorName").val("");
    });

    $("#btnPickContractor").click(function () {
        var sContractorName=$.trim($("#txtContractorName").val());
        if(sContractorName=="")
        {
            alert("Type Supplier name to search.");
            return false;
        }
        GetContractors(sContractorName);
    });

    $("#txtContractorName").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var sContractorName=$.trim($("#txtContractorName").val());
            if(sContractorName=="")
            {
                alert("Type Supplier name to search.");
                return false;
            }
            GetContractors(sContractorName);
        }
        else if(nkeyCode==8){
            $('#txtContractorName').data('ContractorID', 0);
        }
    });

    function GetContractors(sContractorName){
        var oContractor = {  Params : '1~'+sContractorName+'~'+ parseInt(sessionStorage.getItem("BUID")) };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "ContractorID", title: "Code", width: 80, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Supplier Name", width: 270, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 70, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winContractorPicker',
                        winclass:'clsContractorPicker',
                        winwidth: 520,
                        winheight: 460,
                        tableid: 'tblContractorPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Supplier List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No product found.");
            }
        });
    }

    $("#btnResetColor").click(function () {
        $('#txtColor').data('ColorID', 0);
        $("#txtColor").val("");
    });

    $("#btnPickColor").click(function () {
        var sColorName=$.trim($("#txtColor").val());
        if(sColorName=="")
        {
            alert("Type color name to search.");
            return false;
        }
        GetColor(sColorName);
    });

    $("#txtColor").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var sColorName=$.trim($("#txtColor").val());
            if(sColorName=="")
            {
                alert("Type color name to search.");
                return false;
            }
            GetColor(sColorName);
        }
        else if(nkeyCode==8){
            $('#txtColor').data('ColorID', 0);
        }
    });

    function GetColor(sColorName){
        var oColorCategory = {Param:sColorName };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oColorCategory,
            ControllerName: "ColorCategory",
            ActionName: "SearchColor",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ColorCategoryID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "ColorName", title: "Color Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winColorCategory',
                        winclass: 'clsColorCategory',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblColorCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ColorName',
                        windowTittle: 'Color Category List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();


        if (oPickerobj.winid == 'winProductPicker')
        {
            if(oreturnObj !=null  && parseInt(oreturnObj.ProductID)>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                $('#txtProduct').val(oreturnObj.ProductNameCode);
                $('#txtProduct').addClass('fontColorOfPickItem');
                $('#txtProduct').data('ProductID', parseInt(oreturnObj.ProductID));
            }
            else{
                alert("Please select product.");
            }
        }
        else if (oPickerobj.winid == 'winContractorPicker')
        {
            if(oreturnObj !=null  && parseInt(oreturnObj.ContractorID)>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                $('#txtContractorName').val(oreturnObj.Name);
                $('#txtContractorName').addClass('fontColorOfPickItem');
                $('#txtContractorName').data('ContractorID', parseInt(oreturnObj.ContractorID));
            }
            else{
                alert("Please select Supplier.");
            }
        }
        else if (oPickerobj.winid=='winColorCategory')
        {
            if (oreturnObj != null && parseInt(oreturnObj.ColorCategoryID) > 0)
            {
                $('#txtColor').val(oreturnObj.ColorName);
                $('#txtColor').addClass('fontColorOfPickItem');
                $('#txtColor').data('ColorID',  parseInt(oreturnObj.ColorCategoryID));
                $('#txtColor').focus();
            }
        }
    }

    function RefreshAutoComplete()
    {
        debugger;
        $('#txtRack').autocomplete({
            serviceUrl: sessionStorage.getItem('BaseAddress')+'/Shelf/GetsRackByAutocomplete',
            paramName: "ShelfWithRackNo",
            delimiter: ",",
            minChars : 2,
            transformResult: function(response) {
                debugger;
                return {
                    suggestions: $.map($.parseJSON(response), function(item) {
                        return { value: item.ShelfWithRackNo, data: item.RackID };
                    })
                };
            },
            onSelect: function (suggestion) { 
                debugger;
                //document.getElementById("txtRack").value = suggestion.data;
                $('#divLot').data('RackID',suggestion.data);
                txtRack.style.color = "green";
                txtRack.style.fontWeight = "bold";
                //alert($('#divLot').data('RackID'));
            },
            onSearchStart: function (query) {
                debugger;
                //document.getElementById("txtRack").value = 0;
                $('#divLot').data('RackID',0);
                txtRack.style.color = "black";
                txtRack.style.fontWeight = "normal";
            }
        });
    }

</script>