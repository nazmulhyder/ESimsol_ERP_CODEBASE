
@{
    ViewBag.Title = "Service Order";
}
 @model IEnumerable<ESimSol.BusinessObjects.ServiceOrder>

<script src="~/Views/ServiceOrder/AdvSearch.js"></script>
<div class="menuMainCollectionTable" ng-app="ServiceOrderApp">
    <div ng-controller="ServiceOrderController" title="Recycle Process">
        <div style="margin-bottom:2px; display:block" class="form-inline ui-grid-top-panel regionInvoice">
            @*<input class="easyui-datetimebox" label="Select DateTime:" labelposition="top" style="width:100%;">*@
            <input type="text" class="form-control" ng-model="RegNo" ng-keydown="searchByRegNo($event)" ng-keyup="searchByRegNo($event)" placeholder="Type Reg No & Press Enter">
            @*<button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="AdvanceSearch()" ng-hide="btnAdvSearch"> <span class="glyphicon glyphicon-search" aria-hidden="true"> Adv.Search</span></button>*@
            <button type="button" ng-show="btnView" class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="View()"><span class="glyphicon glyphicon-th" aria-hidden="true"> View</span></button>
            <button type="button" ng-show="btnView" class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="GetsByStatus(1)"><span class="glyphicon glyphicon-save-file" aria-hidden="true">Wait For Approve</span></button>
            <button type="button" ng-show="btnView" class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="GetsByStatus(2)"><span class="glyphicon glyphicon-save-file" aria-hidden="true">Wait For Receive</span></button>
            <button type="button" ng-show="btnView" class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="GetsByStatus(3)"><span class="glyphicon glyphicon-save-file" aria-hidden="true">Wait For Deliver</span></button>
            @*<button type="button" ng-show="btnView" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="GetsByStatus(4)"><span class="glyphicon glyphicon-print" aria-hidden="true"> Canceled Order</span></button>*@
            <button type="button" ng-show="btnPriview" class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="Comments()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Comments</span></button>
            @*<button type="button" ng-show="btnPriview" class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="PrintPreview()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Priview</span></button>*@
            <button type="button" ng-show="btnPrintList" class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="PrintList()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Print List</span></button>
            @*<button type="button" id="btnPriviewXL" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="PrintPreviewXL()"><span class="glyphicon glyphicon-print" aria-hidden="true"> XL</span></button>*@
        </div>
        <div ui-grid="gridOptions" ui-grid-selection ui-grid-pinning style=" width: 99%; height: 525px;"></div>
    </div>
</div>
<style type="text/css">
    .regionInvoice .form-control {
        height: 26px;
        width: 15%;
        padding: 0px 6px;
        font-size: 12px;
    }
</style>
<script type="text/javascript">
    var oServiceOrderList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var _nBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    var oServiceOrderTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ServiceOrderTypes));
    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));

    var CInvoiceapp= angular.module('ServiceOrderApp',   ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.cellNav','ms.service','ui.grid.pinning','ServiceOrder.service']);
    CInvoiceapp.controller('ServiceOrderController',  function ($scope, $http, $uibModal,$interval,$timeout,  $log, uiGridConstants, msModal, userSession,ServiceOrderservice)  {
        oServiceOrderList= (userSession.getData('ServiceOrderList').length>0)? userSession.getData('ServiceOrderList'):oServiceOrderList;
        
        $scope.CompareOperators= oCompareOperators;
        $scope.ServiceOrderTypes=oServiceOrderTypes;

        sessionStorage.setItem("BackLink", window.location.href);
        $scope.gridOptions = 
            {
            enableRowSelection: true,
            enableSelectAll: true,
            multiSelect: false,
            enableFullRowSelection: true,
            columnDefs: [
                { field: 'ServiceOrderNo', name:'Order No', width:'12%',pinnedLeft:true },
                { field: 'ServiceOrderDateSt', name:'Order Date', width:'10%' },
                { field: 'IssueDateSt', name:'Issue Date', width:'10%' },
                { field: 'RcvDateTimeSt', name:'Rcv Date', width:'14%' },
                { field: 'DelDateTimeSt', name:'Del Date', width:'14%' },
                { field: 'ActualRcvDateTimeSt', name:'Act. Rcv Date', width:'14%' },
                { field: 'ActualDelDateTimeSt', name:'Act. Del Date', width:'14%' },
                { field: 'ServiceOrderTypeSt', name:'Type', width:'10%' },
                { field: 'OrderStatusSt', name:'Status', width:'10%' },
                { field: 'CustomerName', name:'Customer', width:'25%' },
                { field: 'VehicleRegNo', name:'Reg No', width:'15%' },
                { field: 'VehicleModelNo', name:'Model No', width:'14%' },
                { field: 'ChassisNo', name:'Chassis No', width:'14%' },
                { field: 'EngineNo', name:'Engine No', width:'14%' },
                { field: 'VehicleTypeName', name:'Vehicle TypeName', width:'12%' },
                { field: 'Remarks', name: 'Remarks', width: '10%' }
            ],
            data: oServiceOrderList,
            onRegisterApi : function(gridApi)
            {
                debugger;
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                debugger;
                if(oServiceOrderList.length>0 && userSession.getRowIndex()>=0)
                {
                    $scope.gridApi.grid.modifyRows(oServiceOrderList);
                    $scope.gridApi.selection.selectRow(oServiceOrderList[userSession.getRowIndex()]);
                    $scope.RowSelect(oServiceOrderList[userSession.getRowIndex()]);
                }
                //$scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                //    $scope.RowSelect(row.entity ); });
                userSession.clear();
            }
        };
        
        $scope.AdvanceSearch = function ()
        {
            debugger;
            
            var modalObj={
                modalcontroller:'ModalServiceOrderAdvanceSearchCtrl',
                appcontroller:'ServiceOrderController',
                CompareOperators:$scope.CompareOperators,
                ServiceOrderTypes:$scope.ServiceOrderTypes,
            }
            var modalInstance=ServiceOrderservice.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                debugger;
                $scope.gridOptions.data = result;
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        $scope.GetsByRegNoOrOrderNo = function(sServiceOrderNo)
        {
            debugger;
            var oServiceOrder = {
                ServiceOrderNo:sServiceOrderNo
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/ServiceOrder/GetsByRegOrOrderNo',$.param(oServiceOrder), config).then(
                                function (response) {
                                    debugger;
                                    $scope.gridOptions.data=[];
                                    result=jQuery.parseJSON(response.data);
                                    $scope.gridOptions.data=(result);
                                }, function () {
                                    $log.info('GetServiceOrder Dismissed at: ' + new Date());
                                });
        }
        $scope.GetsByStatus = function(nOrderStatus)
        {
            debugger;
            var oServiceOrder = {
                OrderStatus:nOrderStatus
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/ServiceOrder/GetsByStatus',$.param(oServiceOrder), config).then(
                                function (response) {
                                    debugger;
                                    $scope.gridOptions.data=[];
                                    result=jQuery.parseJSON(response.data);
                                    $scope.gridOptions.data=(result);
                                }, function () {
                                    $log.info('GetServiceOrder Dismissed at: ' + new Date());
                                });
        }
      
        $scope.Modal = function (objSQ, operation) {
            
            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'lg',
                templateUrl: 'ServiceOrderStatus.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'ServiceOrderController',
                resolve: {
                    obj: function () {
                      
                        return { ServiceOrder:objSQ, Operation: operation  };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                debugger;
                if(result.ServiceOrderID>0)
                {
                    if(operation=='add'){
                        $scope.gridOptions.data.push(result);
                        $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                        $scope.gridApi.selection.selectRow(result);
                    }
                    else
                    {
                        $scope.gridOptions.data[$scope.index]=result;
                        $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                        $scope.gridApi.selection.selectRow($scope.gridOptions.data[$scope.index]);
                    }
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };
        $scope.searchByRegNo = function(e)
        {
            debugger;
            var RegNo="";
            RegNo = $scope.RegNo;
            var oServiceOrders = oServiceOrderList;
            var sTempName="";
            var oSearchedList = [];
            var oCurrentList = $scope.gridOptions.data;
            if (e.which == 8)
            {
                oCurrentList = oServiceOrders;
            }
            if(e.which==13)
            {
                $scope.GetsByRegNoOrOrderNo(RegNo);
            }
        }
        $scope.View =  function ()
        {
            //debugger;
            var oServiceOrder = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceOrder==null || oServiceOrder.ServiceOrderID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.ServiceOrderID == oServiceOrder.ServiceOrderID)
                {
                    sessionStorage.setItem("ServiceOrderList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("ServiceOrderHeader", "View Service Order");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/ServiceOrder/ViewServiceOrder?id="+oServiceOrder.ServiceOrderID;
                }
            }, $scope.gridOptions.data);
        }
        $scope.PrintPreview = function ()
        {
            debugger;
            var oServiceOrder = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceOrder==null || oServiceOrder.ServiceOrderID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/ServiceOrder/PrintServiceOrderPreview?id='+oServiceOrder.ServiceOrderID);
        };
        $scope.PrintPreviewXL = function ()
        {
            debugger;
            var oServiceOrder = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceOrder==null || oServiceOrder.ServiceOrderID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            //window.open(sessionStorage.getItem('BaseAddress') + '/ServiceOrder/PrintServiceOrderPreview?id='+oServiceOrder.ServiceOrderID);
            window.open(sessionStorage.getItem('BaseAddress') + '/ServiceOrder/PrintServiceOrderXL?id='+oServiceOrder.ServiceOrderID);
        };
        $scope.PrintList = function ()
        {
            var oServiceOrders=  $scope.gridOptions.data;//$('#tblServiceOrder').datagrid('getRows');
            var ids ="";
            if(oServiceOrders.length >0)
            {
                for(var i =0;i<oServiceOrders.length;i++)
                {
                    ids =ids+oServiceOrders[i].ServiceOrderID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else
            {
                alert("Data not found ");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/ServiceOrder/PrintSchedules?ids='+ids+'&buid='+ _nBUID );
        };
      
        $scope.PrintListXL = function ()
        {
            debugger;
            //var oServiceOrder = $scope.gridApi.selection.getSelectedRows()[0];
            //if(oServiceOrder==null || oServiceOrder.ServiceOrderID<=0)
            //{
            //    alert("Please select a item from list!");
            //    return;
            //}
            //window.open(sessionStorage.getItem('BaseAddress') + '/ServiceOrder/PrintServiceOrderPreview?id='+oServiceOrder.ServiceOrderID);
            window.open(sessionStorage.getItem('BaseAddress') + '/ServiceOrder/PrintServiceOrderListXL');
        }

        $scope.Comments =  function ()
        {
            //debugger;
            var oServiceOrder = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceOrder==null || oServiceOrder.ServiceOrderID<=0)
            {
                alert("Please Select an item from list");
                return;
            } 

            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.ServiceOrderID == oServiceOrder.ServiceOrderID)
                {
                    sessionStorage.setItem("ServiceOrderList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/CommentsHistory/ViewCommentsHistory?nModuleID=163&nModuleObjID="+oServiceOrder.ServiceOrderID+"&sTitle=Reg. No:"+oServiceOrder.VehicleRegNo+"|| Order No:"+oServiceOrder.ServiceOrderNo;
                }
            }, $scope.gridOptions.data);
            
        }

        $scope.Attachment = function ()
        {
            var oServiceOrder = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceOrder==null || oServiceOrder.ServiceOrderID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
  
            window.open(_sBaseAddress + '/AttachDocument/Attachment?id='+oServiceOrder.ServiceOrderID+'&RefType=20&OperationInfo= Attachment of Order No : '+oServiceOrder.ServiceOrderNo, '_blank');
        }
        $scope.close = function()
        {
            window.location.href =sessionStorage.getItem("BackLink");
        }

        //button hide
        $scope.btnAdd = $scope.btnEdit = $scope.btnDetails = $scope.btnDelete = $scope.btnImage=  $scope.btnPrintList= $scope.btnPriview = $scope.btnApprove =false;
        //button show
        if(PermissionChecker('Add','ServiceOrder',oAuthorizationRolesMapping)){$scope.btnAdd =$scope.btnImage = true; }
        if(PermissionChecker('Edit','ServiceOrder',oAuthorizationRolesMapping)){$scope.btnEdit = true;}
        if(PermissionChecker('View','ServiceOrder',oAuthorizationRolesMapping)){$scope.btnView = true;}
        if(PermissionChecker('Delete','ServiceOrder',oAuthorizationRolesMapping)){$scope.btnDelete = true;}
        if(PermissionChecker('Preview','ServiceOrder',oAuthorizationRolesMapping)){$scope.btnPriview = true;}
        if(PermissionChecker('Print','ServiceOrder',oAuthorizationRolesMapping)){$scope.btnPrintList = true;}
        if(PermissionChecker('Print','ServiceOrder',oAuthorizationRolesMapping)){$scope.btnXLList = true;}
        if(PermissionChecker('Edit','ServiceOrder',oAuthorizationRolesMapping)){$scope.btnAttachment = true;}
        if(PermissionChecker('Approve','ServiceOrder',oAuthorizationRolesMapping)){$scope.btnApprove = true;}

    });

    </script>
