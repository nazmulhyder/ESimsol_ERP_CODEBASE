@{
    ViewBag.Title = "Purchase Return Note List";
}
@model IEnumerable<ESimSol.BusinessObjects.PurchaseReturn>
<head>
</head>
<body>
    <div id="progbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div id="winAdvanceSearch" class="easyui-window" title="Advance Search" style="width:540px;height:280px;padding:2px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <legend style="font-weight:bold"> Searching Criteria : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:170px; text-align:right">
                           Return No :
                        </td>
                        <td style="width:370px">
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td style="width:40%"><input type="text" style="width: 100%" id="txtPurchaseReturnNo" /></td>
                                    <td style="width:20%; text-align:right">Return Type</td>
                                    <td style="width:40%"><select id="cboPurchaseReturnType" style="width:100%"></select></td>
                                </tr>
                            </table>
                            
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Return Date :
                        </td>
                        <td style="width:370px">
                            <table border="0" cellpadding="0" cellspacing="0" style="font-size: 12px">
                                <tr>
                                    <td style="width: 120px; font-size: 12px; text-align: left">
                                        <select id="cboPurchaseReturnDate" style="width:120px"></select>
                                    </td>
                                    <td style="width: 120px; font-size: 12px">
                                        <input id="txtPurchaseReturnStartDate" type="text" style="width: 120px;" class="easyui-datebox" disabled="disabled" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    </td>
                                    <td style="width: 10px; font-size: 12px">
                                        To
                                    </td>
                                    <td style="width: 120px; font-size: 12px">
                                        <input id="txtPurchaseReturnEndDate" type="text" style="width: 120px;" class="easyui-datebox" disabled="disabled" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>

                    <tr>
                        <td style="width:170px; text-align:right">
                            Disbursed By :
                        </td>
                        <td style="width:370px">
                            <select id="cboDisbursedBy" style="width:375px"></select>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Supplier(s) :
                        </td>
                        <td style="width:370px">
                            <input type="text" style="width: 282px;" id="txtSupplierName" placeholder="Press enter with supplier name/code" />
                            <input type="button" style="width: 30px;" id="btnSupplierClear" value="C" />
                            <input type="button" style="width: 50px;" id="btnSupplierPicker" value="Pick" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Product(s) :
                        </td>
                        <td style="width:370px">
                            <input type="text" style="width: 282px;" id="txtProductName" placeholder="Press enter with product name/code" />
                            <input type="button" style="width: 30px;" id="btnProductClear" value="C" />
                            <input type="button" style="width: 50px;" id="btnProductPicker" value="Pick" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <fieldset style="width:498px; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:100px;text-align:right">
                        <a id="btnAdvSearchReset" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"> Reset</a>
                    </td>
                    <td style="width:408px;text-align:right;">
                        <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Search</a>
                        <a id="btnAdvSearchClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
    <div class="menuMainCollectionTable">
        <div style="margin-left:0px; height:100%; width:100%; font-family:Tahoma">
            <table id="tblPurchaseReturns" title="PurchaseReturn List" class="easyui-datagrid" fit="true" fitcolumns="true" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbarPurchaseReturn">
                <thead data-options="frozen:true">
                    <tr>
                        <th field="ReturnNo" width="6%">Return No</th>
                        <th field="ReturnDateInString" width="10%">Return Date</th>
                        <th field="SupplierName" width="15%">Supplier Name</th>
                    </tr>
                </thead>
                <thead>
                    <tr>                        
                        <th field="RefTypeInString" width="7%">Return Type</th>
                        <th field="RefNo" width="10%">Ref No</th>
                        <th field="WorkingUnitName" width="10%">Store Name</th>
                        <th field="ApprovedByName" width="12%">Approve By</th>
                        <th field="ApprovedDateInString" width="10%">Approve Date</th>
                        <th field="Remarks" width="12%">Remarks</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarPurchaseReturn">
                <table>
                    <tr>
                        <td>
                            <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" title="Refresh" iconcls="icon-reload" plain="true"></a>
                            <input type="text" id="txtSearchByPurchaseReturn" placeholder="Press Enter With PurchaseReturn NO/Part Name/Ref No" style="width:250px" />                            
                            <a id="btnAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Adv Search</a>
                            <a id="btnAddPurchaseReturn" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" iconcls="icon-add" title="Add PurchaseReturn" plain="true">New</a>
                            <a id="btnEditPurchaseReturn" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" iconcls="icon-edit" title="Edit PurchaseReturn" plain="true">Edit</a>
                            <a id="btnViewPurchaseReturn" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" iconcls="icon-details" title="View PurchaseReturn" plain="true">View</a>
                            <a id="btnDeletePurchaseReturn" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" iconcls="icon-remove" title="Delete PurchaseReturn" plain="true">Delete</a>
                            <a id="btnApprovePurchaseReturn" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" iconcls="icon-approved" title="Approve PurchaseReturn" plain="true">Approve</a>
                            <a id="btnDisbursePurchaseReturn" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" iconcls="icon-disburse"  plain="true">Disburse</a>
                            <a id="btnPrintPreview" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" iconcls="icon-print" title="Preview PurchaseReturn" plain="true">Preview</a>
                            <a id="btnPrintRateView" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" iconcls="icon-print" title="Preview PurchaseReturn with Rate" plain="true">Bill Preview</a>
                            <a id="btnPrintPurchaseReturn" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print List</a>
                            <a id="btnPrintInXLPurchaseReturn" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" hidden="hidden">Print in XL</a>
                        </td>
                    </tr>
                </table>
            </div>
        </div>       
    </div>
</body>

<script type="text/javascript">
    var _oPurchaseReturn = null;
    var _oPurchaseReturns = [];
    $(document).ready(function() {
        _oPurchaseReturns = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oPurchaseReturnTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PurchaseReturnTypes));
        var oDateCompareOperatorObjs =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DateCompareOperatorObjs));
        var oDisbursedUsers  = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DisbursedUsers));
        var oAuthorizationRolesMapping = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        $('#cboPurchaseReturnType').data('PurchaseReturnTypes', oPurchaseReturnTypes);
        $('#cboPurchaseReturnDate').data('DateCompareOperatorObjs',oDateCompareOperatorObjs);
        //DisbursedUsers
        $('#cboDisbursedBy').data('DisbursedUsers',oDisbursedUsers);
        
        debugger;
        var oPurchaseReturns =sessionStorage.getItem("PurchaseReturns");
        if(oPurchaseReturns!=null)
        {
            oPurchaseReturns = jQuery.parseJSON(oPurchaseReturns);
        }
        else
        {
            oPurchaseReturns=_oPurchaseReturns;
        }
        DynamicRefreshList(oPurchaseReturns, 'tblPurchaseReturns');
        var nIndex =parseInt(sessionStorage.getItem("SelectedRowIndex"));
        if(nIndex!=-1)
        {
            $('#tblPurchaseReturns').datagrid('selectRow', nIndex);
        }
        RefreshControlLayout(oAuthorizationRolesMapping);
        $('#btnPrintInXLPurchaseReturn').hide();
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").hide();
        $('#txtSupplierName').data('Suppliers', []);
        $('#txtProductName').data('Products', []);

        $('#tblPurchaseReturns').data('PurchaseReturns', oPurchaseReturns);
        $('#txtPurchaseReturnAmountStart,#txtPurchaseReturnAmountEnd').icsCurrencyBox();
        $('#tblPurchaseReturns').datagrid({onSelect: function(rowIndex, rowData){ RowSelect(rowData);}});

    });
    function RowSelect(oPurchaseReturns)
    {
        debugger;
        if(parseInt(oPurchaseReturns.ApprovedBy)!=0)
        {
            document.getElementById("btnApprovePurchaseReturn").style.display = 'none';
        }
        if(parseInt(oPurchaseReturns.ApprovedBy)==0)
        {
            document.getElementById("btnApprovePurchaseReturn").style.display = '';
        }
    }

    $('#btnWaitForDisbursed').click(function (e) {
        var oPurchaseReturn = {
            PurchaseReturnID : 0,
            BUID : parseInt(sessionStorage.getItem("BUID"))
        };

        $.ajax({
            type: "POST",
            dataType: "JSON",
            url: sessionStorage.getItem("BaseAddress")+  "/PurchaseReturn/WaitForDisbursed",
            data:  JSON.stringify(oPurchaseReturn),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var  oPurchaseReturns = jQuery.parseJSON(data);
                if (oPurchaseReturns != null) {
                    if(oPurchaseReturns.length>0)
                    {
                        if(oPurchaseReturns[0].ErrorMessage=="")
                        {
                            RefreshList(oPurchaseReturns);
                            $('#tblPurchaseReturns').data('PurchaseReturns', oPurchaseReturns);
                        }
                        else
                        {
                            alert(oPurchaseReturns[0].ErrorMessage);
                        }
                    }
                    else
                    {
                        alert("Data not found!!");
                    }
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });
    $('#btnPrintPreview').click(function (){
        var oPurchaseReturn= $('#tblPurchaseReturns').datagrid('getSelected');
        if(oPurchaseReturn==null || oPurchaseReturn.PurchaseReturnID<=0)
        {
            return false;
        }
        window.open(sessionStorage.getItem("BaseAddress")+"/PurchaseReturn/PreviewPurchaseReturn?id="+oPurchaseReturn.PurchaseReturnID,'_blank');

    });
    $('#btnPrintRateView').click(function (){
        var oPurchaseReturn= $('#tblPurchaseReturns').datagrid('getSelected');
        if(oPurchaseReturn==null || oPurchaseReturn.PurchaseReturnID<=0)
        {
            return false;
        }
        window.open(sessionStorage.getItem("BaseAddress")+ "/PurchaseReturn/PreviewPurchaseReturnWithRate?id="+oPurchaseReturn.PurchaseReturnID,'_blank');
    });
    $('#btnRefresh').click(function(){
        var oPurchaseReturns=$('#tblPurchaseReturns').datagrid('getRows');
        DynamicRefreshList(oPurchaseReturns, 'tblPurchaseReturns');
    });

    $('#btnPrintPurchaseReturn').click(function(){
        var oPurchaseReturns=$('#tblPurchaseReturns').datagrid('getRows');
        if(oPurchaseReturns==null||oPurchaseReturns.length<=0)
        {
            alert("Sorry, there is no PurchaseReturn.");
            return false;
        }
        var sPurchaseReturnIDs = ICS_PropertyConcatation(oPurchaseReturns,'PurchaseReturnID');

        window.open(sessionStorage.getItem("BaseAddress")+ "/PurchaseReturn/PrintPurchaseReturns?Param="+sPurchaseReturnIDs,'_blank');

    });

    $("#btnAddPurchaseReturn").click(function()
    {
        debugger;
        var oPurchaseReturns= $('#tblPurchaseReturns').datagrid('getRows');
        sessionStorage.setItem("PurchaseReturns", JSON.stringify(oPurchaseReturns));
        sessionStorage.setItem("SelectedRowIndex", -1);
        sessionStorage.setItem("PurchaseReturnHeader", "Add Purchase Return");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href = sessionStorage.getItem("BaseAddress")+ "/PurchaseReturn/ViewPurchaseReturn?id=0&buid="+sessionStorage.getItem('BUID');
    });

    $("#btnEditPurchaseReturn").click(function(){
        var oPurchaseReturn= $('#tblPurchaseReturns').datagrid('getSelected');
        if(oPurchaseReturn==null || oPurchaseReturn.PurchaseReturnID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(parseInt(oPurchaseReturn.ApprovedBy)!=0)
        {
            alert("Already Approved!");
            return false;
        }
        var SelectedRowIndex=$('#tblPurchaseReturns').datagrid('getRowIndex',oPurchaseReturn);
        var oPurchaseReturns= $('#tblPurchaseReturns').datagrid('getRows');
        sessionStorage.setItem("PurchaseReturns", JSON.stringify(oPurchaseReturns));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("PurchaseReturnHeader", "Edit Purchase Return");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href = sessionStorage.getItem("BaseAddress")+  "/PurchaseReturn/ViewPurchaseReturn?id="+parseInt(oPurchaseReturn.PurchaseReturnID)+"&buid="+parseInt(sessionStorage.getItem('BUID'));
    });

    $("#btnViewPurchaseReturn").click(function(){
        var oPurchaseReturn= $('#tblPurchaseReturns').datagrid('getSelected');
        if(oPurchaseReturn==null || oPurchaseReturn.PurchaseReturnID<=0)
        {
            alert("Please select a item from list!");
            return;
        }

        var SelectedRowIndex=$('#tblPurchaseReturns').datagrid('getRowIndex',oPurchaseReturn);
        var oPurchaseReturns= $('#tblPurchaseReturns').datagrid('getRows');
        sessionStorage.setItem("PurchaseReturns", JSON.stringify(oPurchaseReturns));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("PurchaseReturnHeader", "View Purchase Return");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href = sessionStorage.getItem("BaseAddress")+  "/PurchaseReturn/ViewPurchaseReturn?id="+parseInt(oPurchaseReturn.PurchaseReturnID)+"&buid="+parseInt(sessionStorage.getItem('BUID'));
    });

    $("#btnApprovePurchaseReturn").click(function(){
        var oPurchaseReturn= $('#tblPurchaseReturns').datagrid('getSelected');
        if(oPurchaseReturn==null || oPurchaseReturn.PurchaseReturnID<=0)
        {
            alert("Please select a item from list!");
            return false;
        }
        if(parseInt(oPurchaseReturn.ApprovedBy)!=0)
        {
            alert("Already Approved!");
            return false;
        }

        var SelectedRowIndex=$('#tblPurchaseReturns').datagrid('getRowIndex',oPurchaseReturn);
        var oPurchaseReturns= $('#tblPurchaseReturns').datagrid('getRows');
        sessionStorage.setItem("PurchaseReturns", JSON.stringify(oPurchaseReturns));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("PurchaseReturnHeader", "Approve Purchase Return");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href = sessionStorage.getItem("BaseAddress")+ "/PurchaseReturn/ViewPurchaseReturn?id="+parseInt(oPurchaseReturn.PurchaseReturnID)+"&buid="+parseInt(sessionStorage.getItem('BUID'));
    });

    $("#btnDisbursePurchaseReturn").click(function(){
        var oPurchaseReturn= $('#tblPurchaseReturns').datagrid('getSelected');
        if(oPurchaseReturn==null || oPurchaseReturn.PurchaseReturnID<=0)
        {
            alert("Please select a item from list!");
            return false;
        }
        if(parseInt(oPurchaseReturn.DisbursedBy)!=0)
        {
            alert("Already Disbursed!");
            return false;
        }
        var SelectedRowIndex=$('#tblPurchaseReturns').datagrid('getRowIndex',oPurchaseReturn);
        var oPurchaseReturns= $('#tblPurchaseReturns').datagrid('getRows');
        sessionStorage.setItem("PurchaseReturns", JSON.stringify(oPurchaseReturns));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("PurchaseReturnHeader", "Disburse Purchase Return");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href = sessionStorage.getItem("BaseAddress")+ "/PurchaseReturn/ViewPurchaseReturn?id="+parseInt(oPurchaseReturn.PurchaseReturnID)+"&buid="+parseInt(sessionStorage.getItem('BUID'));
    });

    $("#btnDeletePurchaseReturn").click(function(){
        var oPurchaseReturn = $('#tblPurchaseReturns').datagrid('getSelected');
        if(oPurchaseReturn==null || parseInt(oPurchaseReturn.PurchaseReturnID)<=0)
        {
            alert("Invalid Field!!! please select a valid Field!");                  
            return false;
        }
        if(parseInt(oPurchaseReturn.ApprovedBy)!=0)
        {
            alert("Already Approved!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblPurchaseReturns').datagrid('getRowIndex',oPurchaseReturn);
        if (parseInt(oPurchaseReturn.PurchaseReturnID) > 0) 
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",                
                url : sessionStorage.getItem("BaseAddress") +  "/PurchaseReturn/Delete",
                data: { id: parseInt(oPurchaseReturn.PurchaseReturnID)},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Data delete successfully") 
                    {
                        alert("Delete sucessfully");                        
                        $('#tblPurchaseReturns').datagrid('deleteRow',SelectedRowIndex);
                        var oPurchaseReturns = $('#tblPurchaseReturns').datagrid('getRows');
                        sessionStorage.setItem("PurchaseReturns", JSON.stringify(oPurchaseReturns));   
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error) 
                {
                    alert(error);
                }
            });
        }
    });


    //Start Search
    function RefreshComboBoxControls()
    {

        var oDateCompareOperatorObjs = $('#cboPurchaseReturnDate').data('DateCompareOperatorObjs');
        var oPurchaseReturnTypes = $('#cboPurchaseReturnType').data('PurchaseReturnTypes');
        var oDisbursedUsers =  $('#cboDisbursedBy').data('DisbursedUsers');
        $("#cboPurchaseReturnDate").icsLoadCombo({ List: oDateCompareOperatorObjs, OptionValue: "id", DisplayText: "Value" });
        $("#cboPurchaseReturnType").icsLoadCombo({ List: oPurchaseReturnTypes, OptionValue: "id", DisplayText: "Value" });
        $("#cboDisbursedBy").icsLoadCombo({ List: oDisbursedUsers, OptionValue: "UserID", DisplayText: "UserName" });

    }

    function ValidateSearch()
    {
        var sPurchaseReturnNo =$.trim($('#txtPurchaseReturnNo').val());

        var nPurchaseReturnDate = parseInt($('#cboPurchaseReturnDate').val());
        if(nPurchaseReturnDate===1 || nPurchaseReturnDate===2 || nPurchaseReturnDate===3 || nPurchaseReturnDate===4)
        {
            var sPurchaseReturnStartDate   = $('#txtPurchaseReturnStartDate').datebox('getValue');
            if(sPurchaseReturnStartDate===null || sPurchaseReturnStartDate==="")
            {
                alert("Please select PurchaseReturn start date!");
                $('#txtPurchaseReturnStartDate').focus();
                return false;
            }
        }
        if(nPurchaseReturnDate===5 || nPurchaseReturnDate===6)
        {
            var sPurchaseReturnStartDate   = $('#txtPurchaseReturnStartDate').datebox('getValue');
            var sPurchaseReturnEndDate   = $('#txtPurchaseReturnEndDate').datebox('getValue');
            if(sPurchaseReturnStartDate===null || sPurchaseReturnStartDate==="")
            {
                alert("Please select PurchaseReturn start date!");
                $('#txtPurchaseReturnStartDate').focus();
                return false;
            }
            if(sPurchaseReturnEndDate===null || sPurchaseReturnEndDate==="")
            {
                alert("Please select PurchaseReturn end date!");
                $('#txtPurchaseReturnEndDate').focus();
                return false;
            }
            if(new Date(sPurchaseReturnStartDate) > new Date(sPurchaseReturnEndDate))
            {
                alert("Start date must be smallar than or equal end date!");
                $('#txtPurchaseReturnStartDate').focus();
                return false;
            }
        }

        var nPurchaseReturnAmount = parseInt($('#cboPurchaseReturnAmount').val());
        if(nPurchaseReturnAmount===1 || nPurchaseReturnAmount===2 || nPurchaseReturnAmount===3 || nPurchaseReturnAmount===4)
        {
            var sPurchaseReturnAmountStart   = $.trim($('#txtPurchaseReturnAmountStart').val());
            if(sPurchaseReturnAmountStart===null || sPurchaseReturnAmountStart==="")
            {
                alert("Please enter PurchaseReturn start Amount!");
                $('#txtPurchaseReturnAmountStart').focus();
                return false;
            }
            if(icsRemoveComma(sPurchaseReturnAmountStart)<=0)
            {
                alert("Please enter PurchaseReturn start Amount!");
                $('#txtPurchaseReturnAmountStart').focus();
                return false;
            }
        }
        if(nPurchaseReturnAmount===5 || nPurchaseReturnAmount===6)
        {
            var sPurchaseReturnAmountStart = $.trim($('#txtPurchaseReturnAmountStart').val());
            if(sPurchaseReturnAmountStart===null || sPurchaseReturnAmountStart==="")
            {
                alert("Please enter PurchaseReturn start Amount!");
                $('#txtPurchaseReturnAmountStart').focus();
                return false;
            }
            if(icsRemoveComma(sPurchaseReturnAmountStart)<=0)
            {
                alert("Please enter PurchaseReturn start Amount!");
                $('#txtPurchaseReturnAmountStart').focus();
                return false;
            }

            var sPurchaseReturnAmountEnd = $.trim($('#txtPurchaseReturnAmountEnd').val());
            if(sPurchaseReturnAmountEnd===null || sPurchaseReturnAmountEnd==="")
            {
                alert("Please enter PurchaseReturn end Amount!");
                $('#txtPurchaseReturnAmountEnd').focus();
                return false;
            }
            if(icsRemoveComma(sPurchaseReturnAmountEnd)<=0)
            {
                alert("Please enter PurchaseReturn end Amount!");
                $('#txtPurchaseReturnAmountEnd').focus();
                return false;
            }
            if(icsRemoveComma(sPurchaseReturnAmountStart) >= icsRemoveComma(sPurchaseReturnAmountEnd))
            {
                alert("Start amount must be smallar than end amount!");
                $('#txtPurchaseReturnAmountStart').focus();
                return false;
            }
        }

        var nDisbursedBy = parseInt($('#cboDisbursedBy').val());
        var oSuppliers = $('#txtSupplierName').data('Suppliers');
        var oProducts = $('#txtProductName').data('Products');
        var nPurchaseReturnType =  $("#cboPurchaseReturnType").val();

        if(sPurchaseReturnNo===""  && nPurchaseReturnDate===0 && nPurchaseReturnAmount===0 && nDisbursedBy===0 && parseInt(nPurchaseReturnType)==0 && parseInt(nPurchaseReturnStatus)==-1 &&  oSuppliers.length<=0 && oProducts.length<=0)
        {
            alert("Please select atleast one searching criteriea!");
            return false;
        }
        return true;
    }

    $('#btnAdvSearch').click(function(e){
        $("#winAdvanceSearch").icsWindow('open', "Advance Search");
        $("#winAdvanceSearch input").not("input[type='button']").val("");
        $('#txtPurchaseReturnStartDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtPurchaseReturnEndDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtSupplierName').data('Suppliers', []);
        $('#txtProductName').data('Products', []);
        RefreshComboBoxControls();
    });

    $('#btnAdvSearchClose').click(function(e){
        $("#winAdvanceSearch").icsWindow('close');
    });

    $('#cboPurchaseReturnDate').change(function(e){
        //EqualTo = 1, NotEqualTo = 2, GreaterThen = 3, SmallerThen = 4, Between = 5, NotBetween = 6
        var nCompareOperator =   parseInt($('#cboPurchaseReturnDate').val());
        if(nCompareOperator===0)
        {
            $('#txtPurchaseReturnStartDate').datebox({ disabled : true });
            $('#txtPurchaseReturnEndDate').datebox({ disabled : true });
        }
        else if (nCompareOperator===1 || nCompareOperator===2 || nCompareOperator===3 || nCompareOperator===4)
        {
            $('#txtPurchaseReturnStartDate').datebox({ disabled : false });
            $('#txtPurchaseReturnEndDate').datebox({ disabled : true });
        }
        else
        {
            $('#txtPurchaseReturnStartDate').datebox({ disabled : false });
            $('#txtPurchaseReturnEndDate').datebox({ disabled : false });
        }
        $('#txtPurchaseReturnStartDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtPurchaseReturnEndDate').datebox('setValue', icsdateformat(new Date()));
    });


    $('#btnAdvSearchReset').click(function(e){
        $("#winAdvanceSearch input").not("input[type='button']").val("");
        $('#cboPurchaseReturnDate').val(0);
        $('#txtPurchaseReturnStartDate').datebox({ disabled : true });
        $('#txtPurchaseReturnEndDate').datebox({ disabled : true });
        $('#txtPurchaseReturnStartDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtPurchaseReturnEndDate').datebox('setValue', icsdateformat(new Date()));


        $('#cboPurchaseReturnType,#cboDisbursedBy').val(0);
        $('#txtSupplierName').data('Suppliers', []);
        $("#txtSupplierName").removeClass("fontColorOfPickItem");
        $('#txtProductName').data('Products', []);
        $("#txtProductName").removeClass("fontColorOfPickItem");
    });

    $('#btnSearch').click(function(e){
        if(!ValidateSearch()) return;
        var sPurchaseReturnNo =$.trim($('#txtPurchaseReturnNo').val());

        var nPurchaseReturnDate = parseInt($('#cboPurchaseReturnDate').val());
        var sPurchaseReturnStartDate   = $('#txtPurchaseReturnStartDate').datebox('getValue');
        var sPurchaseReturnEndDate   = $('#txtPurchaseReturnEndDate').datebox('getValue');


        var nDisbursedBy = parseInt($('#cboDisbursedBy').val());
        var oSuppliers = $('#txtSupplierName').data('Suppliers');
        var oProducts = $('#txtProductName').data('Products');
        var nPurchaseReturnType =  $("#cboPurchaseReturnType").val();


        if(oSuppliers===null) {oSuppliers = []; }
        if(oProducts===null) {oProducts = []; }
        var sSupplierIDs =""; var sProductIDs ="";

        for(var i=0; i<oSuppliers.length; i++)
        {
            sSupplierIDs  = sSupplierIDs + oSuppliers[i].ContractorID+ ",";
        }
        if(sSupplierIDs.length>0)
        {
            sSupplierIDs=sSupplierIDs.substring(0, sSupplierIDs.length-1);
        }
        for(var i=0; i<oProducts.length; i++)
        {
            sProductIDs  = sProductIDs + oProducts[i].ProductID+ ",";
        }
        if(sProductIDs.length>0)
        {
            sProductIDs=sProductIDs.substring(0, sProductIDs.length-1);
        }

        var sSearchingData  =  sPurchaseReturnNo+'~';
        sSearchingData = sSearchingData + nPurchaseReturnDate+'~';
        sSearchingData = sSearchingData + sPurchaseReturnStartDate+'~';
        sSearchingData = sSearchingData + sPurchaseReturnEndDate+'~';

        sSearchingData = sSearchingData + nDisbursedBy+'~';
        sSearchingData = sSearchingData + sSupplierIDs +'~';
        sSearchingData = sSearchingData + sProductIDs;

        var oPurchaseReturn = {
            RefTypeInt:nPurchaseReturnType,
            Remarks : sSearchingData,
            BUID : parseInt(sessionStorage.getItem("BUID"))
        };

        $.ajax({
            type: "POST",
            dataType: "JSON",
            url: sessionStorage.getItem("BaseAddress")+  "/PurchaseReturn/AdvanceSearch",
            data:  JSON.stringify(oPurchaseReturn),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var  oPurchaseReturns = jQuery.parseJSON(data);
                if (oPurchaseReturns != null) {
                    if(oPurchaseReturns.length>0)
                    {
                        if(oPurchaseReturns[0].ErrorMessage=="")
                        {
                            DynamicRefreshList(oPurchaseReturns, 'tblPurchaseReturns');
                            $('#tblPurchaseReturns').data('PurchaseReturns', oPurchaseReturns);
                            $("#winAdvanceSearch").icsWindow('close');
                        }
                        else
                        {
                            alert(oPurchaseReturns[0].ErrorMessage);
                        }
                    }
                    else
                    {
                        alert("Data not found!!");
                    }
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#txtSearchByPurchaseReturn").keyup(function (e) {
        if (e.keyCode == 13) {
            if($.trim($('#txtSearchByPurchaseReturn').val())===null || $.trim($('#txtSearchByPurchaseReturn').val())==="")
            {
                alert("Press enter with Return No!");
                return;
            }
            var nBUID = parseInt(sessionStorage.getItem('BUID'));
            if(nBUID<=0)
            {
                alert("Invalid Business Unit!");
                return;
            }

            var oPurchaseReturn = {
                PurchaseReturnNo : $("#txtSearchByPurchaseReturn").val(),
                BUID : nBUID
            };

            $.ajax({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem('BaseAddress') + "/PurchaseReturn/GetsByPurchaseReturnNo",
                traditional: true,
                data: JSON.stringify(oPurchaseReturn),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oPurchaseReturns = jQuery.parseJSON(data);
                    if (oPurchaseReturns != null) {
                        if (oPurchaseReturns.length > 0) {
                            DynamicRefreshList(oPurchaseReturns, "tblPurchaseReturns");
                        }
                        else {
                            //alert("There is no Data!");
                            DynamicRefreshList([], "tblPurchaseReturns");
                        }
                    } else {
                        //alert("There is no Data!");
                        DynamicRefreshList([], "tblPurchaseReturns");
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    });

    ///Supplier Pick
    $("#txtSupplierName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var nBUID = parseInt(sessionStorage.getItem("BUID"));
            var oContractor = { Params: 1 + '~' + $.trim($('#txtSupplierName').val())+'~'+ nBUID };//here 1 is Supplier
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $("#progbar").progressbar({ value: 0 });
            $("#progbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {
                clearInterval(intervalID);
                $("#progbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {
                        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winSuppliers',
                            winclass: 'clsSupplier',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblSuppliers',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Supplier List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Found.");
                    return;
                }
            });
        }
    });
    $("#btnSupplierPicker").click(function () {
        var nBUID = parseInt(sessionStorage.getItem("BUID"));
        var oContractor = { Params: "1~~"+nBUID };//here 1 Is Supplier
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSuppliers',
                        winclass: 'clsSupplier',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblSuppliers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Supplier List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });

    });
    $('#txtSupplierName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtSupplierName").removeClass("fontColorOfPickItem");
            $('#txtSupplierName').data('SupplierID', 0);
        }
    });
    $('#btnSupplierClear').click(function(e){
        $("#txtSupplierName").val("");
        $('#txtSupplierName').data('Suppliers', []);
        $("#txtSupplierName").removeClass("fontColorOfPickItem");
    });
    //End Supplier Picker

    //Product Pick
    $("#txtProductName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtProductName').val()==null || $('#txtProductName').val()=="")
            {
                alert("Please Type Product and Press Enter.");
                $('#txtProductName').focus();
                return;
            }
            var nBUID = parseInt(sessionStorage.getItem("BUID"));
            var oProduct = { BUID: nBUID, ProductName: $.trim($('#txtProductName').val())};
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oProduct,
                ControllerName: "Product",
                ActionName: "SearchByProductBUWise",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ProductID > 0) {
                        var tblColums = [];
                        var oColumn = { field: "ProductCode", title: "Product Code", width: 80, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Product Name", width: 300, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductCategoryName", title: "Category", width: 100, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winProductPicker',
                            winclass: 'clsProductPicker',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblProductPicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'NameCode',
                            windowTittle: 'Product List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                }else{
                    alert("Data Not Found.");
                }
            });
        }
    });
    $("#btnProductPicker").click(function () {
        var nBUID = parseInt(sessionStorage.getItem("BUID"));
        var oProduct = { BUID: nBUID};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oProduct,
            ControllerName: "Product",
            ActionName: "SearchByProductBUWise",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Product Code", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Product Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductCategoryName", title: "Category", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });

    });
    $('#txtProductName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtProductName").removeClass("fontColorOfPickItem");
            $('#txtProductName').data('Product', null);
        }
    });
    $('#btnProductClear').click(function(e){
        $("#txtProductName").val("");
        $('#txtProductName').data('Products', []);
        $("#txtProductName").removeClass("fontColorOfPickItem");
    });
    //End Product

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid === 'winSuppliers')
        {
            if (oreturnobjs != null && oreturnobjs.length > 0) {
                $('#txtSupplierName').val(oreturnobjs.length+"'s suppliers seleted");
                $('#txtSupplierName').addClass('fontColorOfPickItem');
                $('#txtSupplierName').data('Suppliers', oreturnobjs);
                $('#txtSupplierName').focus();
            }
        }
        else if (oPickerobj.winid == 'winProductPicker')
        {
            if (oreturnobjs != null && oreturnobjs.length > 0)
            {
                $('#txtProductName').val(oreturnobjs.length+"'s products seleted");
                $('#txtProductName').addClass('fontColorOfPickItem');
                $('#txtProductName').data('Products', oreturnobjs);
            }
        }
    }

    function updateProgress() {
        var value =$('#progbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds) {
        $("#progbarParent").hide();
    }

    function RefreshControlLayout(oAuthorizationRolesMapping)
    {
        $("#btnAddPurchaseReturn,#btnEditPurchaseReturn,#btnViewPurchaseReturn,#btnDeletePurchaseReturn,#btnPrintListPurchaseReturn,#btnPrintInXLPurchaseReturn,#btnPrintRateView").hide();

        if (PermissionChecker('Add', 'PurchaseReturn',oAuthorizationRolesMapping)) {$("#btnAddPurchaseReturn").show();}
        if (PermissionChecker('Edit', 'PurchaseReturn',oAuthorizationRolesMapping)) {$("#btnEditPurchaseReturn").show();}
        if (PermissionChecker('View', 'PurchaseReturn',oAuthorizationRolesMapping)) {$("#btnViewPurchaseReturn").show();}
        if (PermissionChecker('Delete', 'PurchaseReturn',oAuthorizationRolesMapping)) {$("#btnDeletePurchaseReturn").show();}
        if (PermissionChecker('PrintList', 'PurchaseReturn',oAuthorizationRolesMapping)) {$("#btnPrintListPurchaseReturn").show();}
        if (PermissionChecker('XLPrint', 'PurchaseReturn',oAuthorizationRolesMapping)) {$("#btnPrintInXLPurchaseReturn").show();}
        if (PermissionChecker('RateView', 'PurchaseReturn',oAuthorizationRolesMapping)) {$("#btnPrintRateView").show();}

    }

</script>