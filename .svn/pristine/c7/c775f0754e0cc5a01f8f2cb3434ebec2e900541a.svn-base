<html>
@{
    ViewBag.Title = "Job List";
}
<body>
    @model IEnumerable<ESimSol.BusinessObjects.Job>
<div class="menuMainCollectionTable" ng-app="JobApp">
    <div ng-controller="JobController" title="Job List">
        <div style="margin-bottom:2px; display:block" class="form-inline ui-grid-top-panel regionInvoice">
            <button type="button" ng-show="btnAdvSearch" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="AdvanceSearch()"><span class="glyphicon glyphicon-search" aria-hidden="true"> Search</span></button>
            <button type="button" ng-show="btnAdd" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Add()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>
            <button type="button" ng-show="btnEdit" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Edit()"><span class="glyphicon glyphicon-edit" aria-hidden="true"> Edit</span></button>
            <button type="button" ng-show="btnView" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="View()"><span class="glyphicon glyphicon-th" aria-hidden="true"> View</span></button>
            <button type="button" ng-show="btnDelete" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Delete()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Delete</span></button>
            <button type="button" ng-show="btnJobApproved" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="JobApprove()"><span class="glyphicon glyphicon-ok" aria-hidden="true">Approve</span></button>
            <button type="button" ng-show="btnJobUndoApprove" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="UndoApprove()"><span class="glyphicon glyphicon-arrow-left" aria-hidden="true">Undo Approve</span></button>
            <button type="button" ng-show="btnTAPCreate" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="TAPCreate()"><span class="glyphicon glyphicon-plus" aria-hidden="true">Create TAP</span></button>
            <button type="button" ng-show="btnViewTAP" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="ViewTAP()"><span class="glyphicon glyphicon-th" aria-hidden="true">View TAP</span></button>
            <button type="button" ng-show="btnTAPApproved" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="TAPApprove()"><span class="glyphicon glyphicon-ok" aria-hidden="true">TAP Approve</span></button>
            <button type="button" ng-show="btnTAPOrderFollowUPPriview" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="TAPOrderFollowUP()"><span class="glyphicon glyphicon-print" aria-hidden="true"> FollowUP(TAP)</span></button>
            <button type="button" ng-show="btnPrintList" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PrintList()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Print List</span></button>
            <button type="button" ng-show="btnPriview" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PrintPreview()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Priview</span></button>
        </div>
        <div ui-grid="gridOptions" ui-grid-selection ui-grid-cellnav style=" width: 100%; height: 485px;"></div>
    </div>
</div>
<style type="text/css">
    .regionInvoice .form-control {
        height: 26px;
        width: 15%;
        padding: 0px 6px;
        font-size: 12px;
    }
</style>

<script type="text/javascript">
    debugger;
    var oJobList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    var BusinessSessionList = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessSessions));
debugger;
//sessionStorage.setItem("ProductNature",nProductNature);
var CInvoiceapp= angular.module('JobApp', ['ui.grid','ui.bootstrap','ui.grid.selection', 'ms.service']);
CInvoiceapp.controller('JobController',  function ($scope,$http,$uibModal,$log,uiGridConstants,userSession,msModal,advanceSearch) {
oJobList= (userSession.getData('JobList').length>0)? userSession.getData('JobList'):oJobList;
debugger;
$scope.gridOptions = {
    enableRowSelection: true,
    enableSelectAll: true,
    multiSelect: false,
    enableFullRowSelection:true,
    columnDefs: [
        { field: 'JobNo', name:'Job No', width:'8%' },
        { field: 'StyleNo', name:'Style No', width:'12%' },
        { field: 'IssueDateInString', name:'Issue Date', width:'8%' },
        { field: 'MerchandiserName', name:'Merchandiser', width: '15%', enableSorting: false },
        { field: 'BuyerName', name: 'Buyer', width: '15%', enableSorting: false },
        { field: 'ApprovedByName', name: 'Approve By', width: '15%', enableSorting: false },
        { field: 'IsTAPExistInString', name: 'Tap Exist', width: '8%' },
        { field: 'IsTAPApprovedInString', name: 'Tap Approved', width: '8%' }
    ],
    data: oJobList,
    onRegisterApi : function(gridApi)
    {
        debugger;
        $scope.gridApi = gridApi;
        $scope.gridApi.selection.clearSelectedRows();
        debugger;
        if(oJobList.length>0 && userSession.getRowIndex()>=0){
            debugger;
            $scope.gridApi.grid.modifyRows(oJobList);
            $scope.gridApi.selection.selectRow(oJobList[userSession.getRowIndex()]);
        }
        userSession.clear();
        //$scope.gridApi.grid.modifyRows(oJobList);
    }
};

$scope.BUIID = sessionStorage.getItem("BUID");
$scope.CompareOperators = oCompareOperators;


$scope.AdvanceSearch=function()
{
    debugger;
    oColumns = [];
    var oColumn = { field: 'StyleNo', name: 'Style No',width: '50%', enableSorting: false  };oColumns.push(oColumn);
    oColumn = { field: 'BuyerName', name: 'Buyer Name',width: '50%', enableSorting: false  };oColumns.push(oColumn);

    var paramObj_StyleNo={
        obj:{
                StyleNo: '@@TechnicalSheetID',
                BUID:sessionStorage.getItem('BUID')
        },
        objName:'StyleNo',  //changeable
        objField:'TechnicalSheetID',
        url:_sBaseAddress+'/TechnicalSheet/StyleSearch',
        title:'Style No',
        multiSelect:true,
        columns:oColumns
    }


    oColumn2s = [];
    var oColumn2 = { field: 'Name', name: 'Merchandiser Name',width: '50%', enableSorting: false  };oColumn2s.push(oColumn2);

    var paramObj_Merchandiser={
        obj:{
            Name:'@@EmployeeID',
            EmployeeTypeID:23,
            BUID:8,
            EmplooyeeType:4
        },
        objName:'Name',  //changeable
        objField:'EmployeeID',
        url:_sBaseAddress+'/Employee/EmployeeSearchByName',
        title:'Merchandiser List',
        multiSelect:true,
        columns:oColumn2s
    }


    oColumn3s = [];
    var oColumn3 = { field: 'Name', name: 'Name',width: '50%', enableSorting: false  };oColumn3s.push(oColumn3);
    //oColumn3 = { field: 'ContractorTypeInString', name: 'ContractorType',width: '50%', enableSorting: false  };oColumn3s.push(oColumn3);

    var paramObj_Contractor={
        obj         :   {Params: '2' + '~' +'@@ContractorID'+'~'+sessionStorage.getItem('BUID')},
        objName     :'Params',
        objField    :'ContractorID',
        url         :_sBaseAddress+'/Contractor/ContractorSearchByNameType',
        title       :'Contractor List',
        multiSelect :true,
        columns     :oColumn3s
    }

    var oJobModal = [
                        { DisplayName: "Style No",    BOField: "StyleNo",      InputType: 'picker', PickerObject:paramObj_StyleNo },
                        //{ DisplayName: "Style No",       BOField: "StyleNo",        InputType: 'text' },
                        { DisplayName: "Issue Date",         BOField: "IssueDate",           InputType: 'date' },
                        { DisplayName: "Merchandiser",    BOField: "MerchandiserName",      InputType: 'picker', PickerObject:paramObj_Merchandiser },
                        { DisplayName: "Buyer",    BOField: "BuyerName",      InputType: 'picker', PickerObject:paramObj_Contractor },
                        //{ BOField:     "BUID",               Value:_nBUID,                   InputType: 'hidden'},
                        { DisplayName: "Session",    BOField: "SessionName",       InputType: 'select', OptionList:BusinessSessionList, OptionValue:{id:'BusinessSessionID', Value:'SessionName'}},
    ];
    var modalObj={
        size:'md',
        title:"Advance Search",
        CompareOperators:oCompareOperators,
        HtmlElements:oJobModal,
        isAdvanceSearch:true, // if TRUE: 'urlAdvanceSearch' should be define
        urlAdvanceSearch:_sBaseAddress + '/Job/AdvSearch'
    }
    var modalInstance=advanceSearch.Instance(modalObj);
    modalInstance.result.then(function (result)
    {
        debugger;
        console.log(result.length);
        if(result.length > 0){
            $scope.gridOptions.data=result;
        }else{
            alert("Data Not Found !!");
        }
        

    }, function ()
    {
        $log.info('Modal dismissed at: ' + new Date());
    });
};

$scope.Add  = function ()
{
    debugger;
    sessionStorage.setItem("JobList", JSON.stringify($scope.gridOptions.data));
    sessionStorage.setItem("SelectedRowIndex", -1);
    sessionStorage.setItem("JobHeader", "Add Job");
    sessionStorage.setItem("BackLink", window.location.href);
    window.location.href =sessionStorage.getItem('BaseAddress')+"/Job/ViewJob?id=0&buid="+$scope.BUIID;
}
$scope.Edit =  function ()
{
    debugger;
    var oJob = $scope.gridApi.selection.getSelectedRows()[0];
    if(oJob==null || oJob.JobID<=0)
    {
        alert("Please Select an item from list");
        return;
    }
    if(parseInt(oJob.ApprovedBy)!=0)
    {
        alert("Please Select item Already Approved");
        return;
    }
    var SelectedRowIndex=$scope.gridOptions.data.indexOf(oJob);
    sessionStorage.setItem("JobList", JSON.stringify($scope.gridOptions.data));
    sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
    sessionStorage.setItem("JobHeader", "Edit Job");
    sessionStorage.setItem("BackLink", window.location.href);
    window.location.href =sessionStorage.getItem('BaseAddress')+"/Job/ViewJob?id="+oJob.JobID+"&buid="+$scope.BUIID;

}
$scope.View =  function ()
{
    //debugger;
    var oJob = $scope.gridApi.selection.getSelectedRows()[0];
    if(oJob==null || oJob.JobID<=0)
    {
        alert("Please Select an item from list");
        return;
    }

    var SelectedRowIndex=$scope.gridOptions.data.indexOf(oJob);

    sessionStorage.setItem("JobList", JSON.stringify($scope.gridOptions.data));
    sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
    sessionStorage.setItem("JobHeader", "View Job");
    sessionStorage.setItem("BackLink", window.location.href);
    window.location.href =sessionStorage.getItem('BaseAddress')+"/Job/ViewJob?id="+oJob.JobID+"&buid="+$scope.BUIID;

  
}
$scope.Delete= function ()
{
    debugger;
    var oJob = $scope.gridApi.selection.getSelectedRows()[0];
    if(oJob==null || oJob.JobID<=0)
    {
        alert("Please Select an item from list");
        return;
    }
    if(parseInt(oJob.ApprovedBy)!=0)
    {
        alert("Please Select item Already Approved");
        return;
    }
    if (!confirm("Confirm to Delete?")) return ;
    $http.post(sessionStorage.getItem('BaseAddress')+'/Job/Delete', oJob).then(   //JSON.stringify(oJob)
                    function (response) {
                        if (jQuery.parseJSON(response.data) == 'Deleted') {
                            angular.forEach($scope.gridOptions.data, function (value, index)
                            {
                                if (value.JobID == oJob.JobID)
                                {
                                    alert("Successfully Deleted.");
                                    $scope.gridOptions.data.splice(index, 1);
                                }
                            }, $scope.gridOptions.data);
                        }
                        else {
                            alert(jQuery.parseJSON(response.data));
                        }
                    },
                    function (response) { alert(jQuery.parseJSON(response.data)); }
                );

};
$scope.JobApprove =  function ()
{
    //debugger;
    var oJob = $scope.gridApi.selection.getSelectedRows()[0];
    if(oJob==null || oJob.JobID<=0)
    {
        alert("Please Select an item from list");
        return;
    }
    if(parseInt(oJob.ApprovedBy)!=0)
    {
        alert("Please Selected item Already Approved");
        return;
    }
    var SelectedRowIndex=$scope.gridOptions.data.indexOf(oJob);
    sessionStorage.setItem("JobList", JSON.stringify($scope.gridOptions.data));
    sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
    sessionStorage.setItem("JobHeader", "Approve Job");
    sessionStorage.setItem("BackLink", window.location.href);
    window.location.href =sessionStorage.getItem('BaseAddress')+"/Job/ViewJob?id="+oJob.JobID+"&buid="+$scope.BUIID;
}
  //UndoApprove()
$scope.UndoApprove =  function ()
{
    //debugger;
    var oJob = $scope.gridApi.selection.getSelectedRows()[0];
    if(oJob==null || oJob.JobID<=0)
    {
        alert("Please Select an item from list");
        return;
    }
    if(parseInt(oJob.ApprovedBy)==0)
    {
        alert("Please Select Only Approved item.");
        return;
    }
    if(oJob.IsTAPExist==true)
    {
        alert("Sorry,TAP Exist in Selected Item.");
        return;
    }
    var SelectedRowIndex=$scope.gridOptions.data.indexOf(oJob);
    $http.post(sessionStorage.getItem('BaseAddress')+'/Job/UndoApprove', oJob).then(   
                   function (response)
                   {
                       var oJob = jQuery.parseJSON(response.data) ;
                       if (oJob.ErrorMessage == '' || oJob.ErrorMessage ==null)
                       {
                           alert("Successfully Undo.");
                           $scope.gridOptions.data[SelectedRowIndex]=oJob;
                           $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                           $scope.gridApi.selection.selectRow(oJob);
                       }
                       else {
                           alert(jQuery.parseJSON(response.data));
                       }
                   },
                   function (response) { alert(jQuery.parseJSON(response.data)); }
               );
    
}

$scope.TAPCreate =  function ()
{
    debugger;
    var oJob = $scope.gridApi.selection.getSelectedRows()[0];
    if(oJob==null || oJob.JobID<=0)
    {
        alert("Please Select an item from list");
        return;
    }
    if(parseInt(oJob.ApprovedBy)==0)
    {
        alert("Please Select Approved Job From List.");
        return;
    }
    if(oJob.IsTAPApproved==true)
    {
        alert("Already TAP Approved.");
        return;
    }

    var SelectedRowIndex=$scope.gridOptions.data.indexOf(oJob);
    sessionStorage.setItem("JobList", JSON.stringify($scope.gridOptions.data));
    sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
    sessionStorage.setItem("JobHeader", "TAP Create");
    sessionStorage.setItem("BackLink", window.location.href);
    window.location.href =sessionStorage.getItem('BaseAddress')+"/Job/ViewTAPCreation?id="+oJob.JobID;
}
$scope.ViewTAP =  function ()
{
    debugger;
    var oJob = $scope.gridApi.selection.getSelectedRows()[0];
    if(oJob==null || oJob.JobID<=0)
    {
        alert("Please Select an item from list");
        return;
    }
    if(parseInt(oJob.ApprovedBy)==0)
    {
        alert("Please Select Approved Job From List.");
        return;
    }
    if(oJob.IsTAPExist==false)
    {
        alert("Sorry, There is No TAP, Please Create TAP.");
        return;
    }

    var SelectedRowIndex=$scope.gridOptions.data.indexOf(oJob);
    sessionStorage.setItem("JobList", JSON.stringify($scope.gridOptions.data));
    sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
    sessionStorage.setItem("JobHeader", "View TAP");
    sessionStorage.setItem("BackLink", window.location.href);
    window.location.href =sessionStorage.getItem('BaseAddress')+"/Job/ViewTAPCreation?id="+oJob.JobID;
}
$scope.TAPApprove =  function ()
{
    debugger;
    var oJob = $scope.gridApi.selection.getSelectedRows()[0];
    if(oJob==null || oJob.JobID<=0)
    {
        alert("Please Select an item from list");
        return;
    }
    if(oJob.IsTAPExist==false)
    {
        alert("Sorry, There is No TAP, Please Create TAP.");
        return;
    }
    if(oJob.IsTAPApproved==true)
    {
        alert("Already TAP Approved.");
        return;
    }
    var SelectedRowIndex=$scope.gridOptions.data.indexOf(oJob);
    sessionStorage.setItem("JobList", JSON.stringify($scope.gridOptions.data));
    sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
    sessionStorage.setItem("JobHeader", "TAP Approve");
    sessionStorage.setItem("BackLink", window.location.href);
    window.location.href =sessionStorage.getItem('BaseAddress')+"/Job/ViewTAPCreation?id="+oJob.JobID;
}
$scope.TAPOrderFollowUP = function ()
{
    debugger;
    var oJob = $scope.gridApi.selection.getSelectedRows()[0];
    if(oJob==null || oJob.JobID<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    if(oJob.IsTAPExist==false)
    {
        alert("Sorry, There is No TAP, Please Create TAP.");
        return;
    }
    window.open(sessionStorage.getItem('BaseAddress') + '/TAP/OrderFollowUpPreviewJobWise?id='+oJob.JobID);
};
$scope.PrintPreview = function ()
{
    debugger;
    var oJob = $scope.gridApi.selection.getSelectedRows()[0];
    if(oJob==null || oJob.JobID<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    window.open(sessionStorage.getItem('BaseAddress') + '/Job/PrintJobPreview?id='+oJob.JobID);
};
$scope.PrintList = function ()
{
    var oJobs=  $scope.gridOptions.data;//$('#tblJob').datagrid('getRows');
    var ids ="";
    if(oJobs.length >0)
    {

        for(var i =0;i<oJobs.length;i++)
        {
            ids =ids+oJobs[i].JobID+",";
        }
        ids= ids.substring(0, ids.length - 1);
    }
    else
    {
        alert("Data not found ");
        return;
    }
    window.open(sessionStorage.getItem('BaseAddress') + '/Job/PrintList?sIDs='+ids);
};

$scope.close = function()
{
    window.location.href =sessionStorage.getItem("BackLink");
}

//button hide
$scope.btnAdd = $scope.btnAdvSearch= $scope.btnEdit = $scope.btnDetails = $scope.btnTAPCreate = $scope.btnTAPApproved = $scope.btnJobApproved =  $scope.btnJobUndoApprove =  $scope.btnViewTAP= $scope.btnPrintList= $scope.btnPriview = $scope.btnTAPOrderFollowUPPriview  = $scope.btnDelete = false;

//button show
if(PermissionChecker('AdvSearch','Job',oAuthorizationRolesMapping)){$scope.btnAdvSearch = true; }
if(PermissionChecker('Add','Job',oAuthorizationRolesMapping)){$scope.btnAdd = true; }
if(PermissionChecker('Edit','Job',oAuthorizationRolesMapping)){$scope.btnEdit = true;}
if(PermissionChecker('View','Job',oAuthorizationRolesMapping)){$scope.btnView = true;}
if(PermissionChecker('Delete','Job',oAuthorizationRolesMapping)){$scope.btnDelete = true;}
if(PermissionChecker('Approved','Job',oAuthorizationRolesMapping)){$scope.btnJobApproved= $scope.btnJobUndoApprove= true;}
if(PermissionChecker('Add','TAP',oAuthorizationRolesMapping)){$scope.btnTAPCreate = true;}
if(PermissionChecker('Approved','TAP',oAuthorizationRolesMapping)){$scope.btnTAPApproved = true;}
if(PermissionChecker('View','TAP',oAuthorizationRolesMapping)){$scope.btnViewTAP = true;}

if(PermissionChecker('Preview','Job',oAuthorizationRolesMapping)){$scope.btnPriview =$scope.btnTAPOrderFollowUPPriview= true; }
if(PermissionChecker('Print','Job',oAuthorizationRolesMapping)){$scope.btnPrintList = true;}


});





</script>
