@model ESimSol.BusinessObjects.Voucher
@{
    ViewBag.Title = "Voucher Creation";
}
@{var MenuID = HttpContext.Current.Session[SessionInfo.MenuID];}
<div class="menuMainCollectionTable" style="font-family:Tahoma; margin-left: 0px; height: 100%; width:100%">
    <div id="divVoucher" class="easyui-panel" title="Voucher Creation" fit="true" style="width:100%;padding:1px">
        <div id="divVoucherInfo" style="width:100%">
            <table border="0" cellpadding="2" cellspacing="2" style="width:100%">
                <tr>                    
                    <td style="width:20%; font-size:12px; text-align:right">
                        Journal : <select style="width:70%" id="cboVoucherType"> </select>
                    </td>
                    <td style="width:24%; font-size:12px; text-align:right">
                        Voucher No : <input type="text" id="txtVoucherNo" style="width: 50%" />
                    </td>
                    <td style="width:5%; font-size:12px; text-align:left">
                        <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="false"></a>
                    </td>
                    <td style="width:15%; font-size:12px; text-align:right">
                        Currency : <select style="width:57%" id="cboCurrency"> </select>
                    </td>
                    <td style="width:16%; font-size:12px; text-align:right">
                        Tax Effect : <select style="width:50%" id="cboTex"><option>No</option><option>Yes</option> </select>
                    </td>
                    <td style="width:20%; font-size:12px; text-align:right">
                        Business Unit : <select style="width:57%" id="cboBusinessUnit"> </select>
                    </td>
                </tr>
                <tr>                    
                    <td style="width:20%; font-size:12px; text-align:right">
                        Batch : <select style="width:70%" id="cboBatch"> <option> Sep/15/1 </option> </select>
                    </td>
                    <td style="width:24%; font-size:12px; text-align:right">
                        Control Amount <span class="lblCurrency"></span>: <input type="text" id="txtControlAmount" style="width:50%" />
                    </td>
                    <td  colspan="2" style="width:20%; font-size:12px; text-align:right">
                        Conversion Rate : <input type="text" id="txtCRate" style="width:40%" />
                    </td>
                    <td style="width:16%; font-size:12px; text-align:right">
                        GL Date : <input id="txtVoucherDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:50%" />
                    </td>
                    <td style="width:20%; font-size:12px; text-align:right">
                        Posting Date : <input id="txtPostingDate" type="text" style="width:55%" disabled="disabled" value="04 Sep 2015 04.30 PM" />                        
                    </td>
                </tr>
            </table>
        </div>
        <div style="width:100%; overflow:auto">
            <div style="width:116%; margin-top:4px">
                <table id="tblVoucherDetailHeader" class="tablebordaer" cellpadding="0" cellspacing="0" style="width:100%">
                    <tr>
                        <td style="width:3%; text-align:left">Del</td>
                        <td style="width:5%; text-align:center">Dr/Cr</td>                        
                        <td style="width:5%; text-align:center">Area Code</td>
                        <td style="width:5%; text-align:center">Zonal Code</td>
                        <td style="width:5%; text-align:center">Site Code</td>
                        <td style="width:6%; text-align:center">Product Code</td>
                        <td style="width:5%; text-align:center">Dept Code</td>
                        <td style="width:5%; text-align:center">Ledger Code</td>                        
                        <td style="width:16%; text-align:center">Accounts</td>
                        <td style="width:14%; text-align:center">Narrations</td>                        
                        <td style="width:7%; text-align:right">Debit<span class="lblCurrency"></span></td>
                        <td style="width:7%; text-align:right">Credit<span class="lblCurrency"></span></td>
                        <td style="width:7%; text-align:right">Debit<span class="lblBaseCurrency"></span></td>
                        <td style="width:7%; text-align:right">Credit<span class="lblBaseCurrency"></span></td>
                    </tr>
                </table>

                <div class="tablebordaer" id="divVoucherDetails" style="height:290px; width:99.80%; overflow:auto">
                    <table class="tablebordaer" id="tblVoucherDetail" border="0" cellpadding="0" cellspacing="0"></table>
                </div>
                <div style="width:100%">
                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                        <tr>
                            <td style="width:72%; text-align:left; font-size:12px; font-weight:bold"></td>
                            <td colspan="4" style="width:28%; text-align:right; font-size:12px; font-weight:bold"><hr /></td>
                        </tr>
                        <tr style="vertical-align:bottom">
                            <td style="width:72%; text-align:left; font-size:10px; font-weight:bold"></td>
                            <td style="width:7%; text-align:right; font-size:11px; font-weight:bold"><span style="margin-right:2px;"></span><label id="lblTotalDebitAmount">0.00</label></td>
                            <td style="width:7%; text-align:right; font-size:11px; font-weight:bold"><span style="margin-right:2px;"></span><label id="lblTotalCreditAmount"> 0.00</label>&nbsp;&nbsp;</td>
                            <td style="width:7%; text-align:right; font-size:11px; font-weight:bold"><span style="margin-right:2px;"></span><label id="lblBCTotalDebitAmount">0.00</label></td>
                            <td style="width:7%; text-align:right; font-size:11px; font-weight:bold"><span style="margin-right:2px;"></span><label id="lblBCTotalCreditAmount"> 0.00</label>&nbsp;&nbsp;</td>
                        </tr>
                        <tr>
                            <td style="width:72%; text-align:right; font-size:12px; font-weight:bold"></td>
                            <td colspan="4" style="width:28%; text-align:right; font-size:12px; font-weight:bold"><hr /><hr /></td>
                        </tr>
                    </table>
                </div>

            </div>
        </div>
        <div id="divNarration" style="width:100%">
            <table border="0" cellpadding="0" cellspacing="0" style="width:100%">               
                <tr>
                    <td style="width:2%; text-align:right">
                        <input type="button" id="btnLastNarration" style="height:40px; width:20px" />
                    </td>
                    <td style="width:98%;font-size:12px; font-weight:bold; text-align:center; vertical-align:top">                                                
                        <textarea rows="1" id="txtNarration" style="text-align:left; width:99%; font-family:Tahoma; font-size:12px" placeholder="Narration" ></textarea>
                    </td>
                </tr>
                <tr style="height:40px">
                    <td colspan="2" style="width:100%; text-align:right; font-size:12px; font-weight:bold">
                        <div style="width: 25%;margin: 0 auto;text-align: left;font-size: 24px;float: left;"><label id="lblVoucherMode" style="text-align:center;color:#00F;font-family:Tahoma;"></label></div>
                        <div style="width: 55%;margin: 0 auto;text-align: center;font-size: 15px; float: left;">
                            <span class="lblToolTip"></span>
                        </div>
                        <a id="btnApproved" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="false">Approve</a>
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="false">Save</a>
                        <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="false">Print</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="false">Cancel</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>    

    <div id="winBillNo" class="easyui-window" title="Bill" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:770px;height:490px;padding:1px">
        <div style="margin-left:0px; height:400px">
            <input type="text" id="txtSearchByBillNo" style="width:745px" />
            <table id="tblBillNo" title="" class="easyui-datagrid" style="width:750px;height:380px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                <thead>
                    <tr>
                        <th field="BillNo" width="280" align="left">Bill No</th>
                        <th field="BillDateInString" width="90" align="center">Bill Date</th>
                        <th field="DueDateInString" width="90" align="center">Due Date</th>
                        <th data-options="field:'Amount',formatter:formatPrice" width="90" align="right" class="easyui-numberbox" data-options="min:0,precision:2">Amount</th>
                        <th field="RemainningBalanceCFormat" width="150" align="right">Remainning Balance</th>                        
                    </tr>
                </thead>
            </table>
            <table border="0" cellpadding="1" cellspacing="1">
                <tr style="height:35px;vertical-align:middle;">
                    <td style="width:100px"><input type="button" id="btnCreateNewBill" value="Create New Bill (+)" onclick="CreateNewBill();" /></td>
                    <td style="width:500px"><input type="button" id="btnEditVoucherBill" value="Edit Bill" onclick="EditVoucherBill();" /></td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnOkBillNo">Ok</a> </td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" id="btnCloseBillNo">Close</a> </td>
                </tr>
            </table>
        </div>
    </div>   

    <div id="winVoucherBill" class="easyui-window" title="Voucher Bill" style="width:540px;height:402px;padding:2px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <legend style="font-weight:bold"> Voucher Bill Info : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:170px; text-align:right">
                            Business Unit :
                        </td>
                        <td style="width:370px">
                            <input type="text" style="width: 370px;" id="txtVBBusinessUnit" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Account Head :
                        </td>
                        <td style="width:370px">
                            <input type="text" style="width: 370px;" id="txtVBAccountHead" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Sub Ledger :
                        </td>
                        <td style="width:370px">
                            <input type="text" style="width: 370px;" id="txtVBSubLedger" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Bill No :
                        </td>
                        <td style="width:370px">
                            <input type="text" style="width: 370px;" id="txtVBBillNo" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Bill Date :
                        </td>
                        <td style="width:370px">
                            <table border="0" cellpadding="0" cellspacing="0" style="font-size: 12px">
                                <tr>
                                    <td style="width: 140px; font-size: 12px; text-align: left">
                                        <input id="txtVBBillDate" type="text" style="width: 140px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    </td>
                                    <td style="width: 110px; text-align:right; font-size: 12px">
                                        Credit Days :
                                    </td>                                    
                                    <td style="width: 120px; text-align:right; font-size: 12px">
                                        <input id="txtVBCreditDays" style="width:118px" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Maturity Date :
                        </td>
                        <td style="width:370px">
                            <table border="0" cellpadding="0" cellspacing="0" style="font-size: 12px">
                                <tr>
                                    <td style="width: 140px; font-size: 12px; text-align: left">
                                        <input id="txtVBMaturityDate" type="text" style="width: 140px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    </td>
                                    <td style="width: 110px; text-align:right; font-size: 12px">
                                        Currency :
                                    </td>
                                    <td style="width: 120px; text-align:right; font-size: 12px">
                                        <select id="cboVBCurrency" style="width:123px"></select>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Currency Amount :
                        </td>
                        <td style="width:370px">
                            <table border="0" cellpadding="0" cellspacing="0" style="font-size: 12px">
                                <tr>
                                    <td style="width: 140px; font-size: 12px; text-align: left">
                                        <input id="txtVBCurrencyAmount" style="width:134px" />
                                    </td>
                                    <td style="width: 110px; text-align:right; font-size: 12px">
                                        C Rate :
                                    </td>
                                    <td style="width: 120px; text-align:right; font-size: 12px">
                                        <input id="txtVBCRate" style="width:118px" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Amount In BDT :
                        </td>
                        <td style="width:370px">
                            <input type="text" style="width: 368px;" id="txtVBAmountInBDT" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Remarks :
                        </td>
                        <td style="width:370px">
                            <input type="text" style="width:368px;" id="txtVBRemarks" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <fieldset style="width:498px; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:100px;text-align:right">                        
                    </td>
                    <td style="width:408px;text-align:right;">
                        <a id="btnVBSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnVBClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>

    <div id="winCheque" class="easyui-window" title="Received Cheque List" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:900px;height:400px;padding:1px">
        <div style="margin-left:0px; height:298px">
            <table id="tblCheque" class="easyui-datagrid" style="width:883px; height:295px" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarCheque">
                <thead>
                    <tr>
                        <th field="ChequeNo" width="120" align="left">Cheque No</th>
                        <th field="ChequeDateSt" width="100" align="center">Cheque Date</th>
                        <th field="BankName" width="150" align="left">Bank Name</th>
                        <th field="BranchName" width="150" align="left">Branch Name</th>
                        <th field="AccountNo" width="150" align="left">Account Number</th>
                        <th field="ContractorName" width="180" align="left">Party Name</th>
                        <th data-options="field:'Amount',formatter:formatPrice" width="100" align="right" class="easyui-numberbox" data-options="min:0,precision:2">Amount</th>
                    </tr>
                </thead>
            </table>
                <div id="toolbarCheque">
                    Cheque Type : <select id="cboChequeType"></select>
                    <input type="text" id="txtChequeNo" style="width:100px" placeholder="Cheque No" />
                    <input type="text" id="txtAccountNo" style="width:100px" placeholder="Account No" />
                    <input type="text" id="txtBankName" style="width:100px" placeholder="Bank Name" />                    
                    <input type="text" id="txtParty" style="width:100px" placeholder="Party Name" />
                    <a id="btnRefreshCheque" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" title="Refresh" iconcls="icon-reload" plain="true">Refresh</a>
                    <a id="btnAddCheque" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                    <a id="btnEditCheque" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
                    <a id="btnViewCheque" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
                    <a id="btnDeleteCheque" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                </div>
                <div style="width:885px; height:33px">
                    <fieldset>
                        <legend style="font-weight: bold">Action : </legend>
                        <table border="0" cellpadding="1" cellspacing="1">
                            <tr style="height:33px;vertical-align:middle;">
                                <td style="width:780px"> </td>
                                <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnOkCheque">Ok</a> </td>
                                <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" id="btnCloseCheque">Close</a> </td>
                            </tr>
                        </table>
                    </fieldset>
                </div>
            </div>
        </div>
</div>


<style type="text/css">
    .tablebordaer {
        border: 1px solid black;
    }
        
    #tblVoucherDetail td{
        border-left: 1px solid #D8D8D8;
        border-bottom: 1px solid #D8D8D8;
    }

    #tblVoucherDetailHeader  td{
        border-left: 1px solid black;
    }

    .highlight {
        background-color: #CFB53B !important;
        color: white !important;
    }

    .textboxstyle {
        background-color: black !important;
        color: white !important;
        border: none !important;
        font-weight: bold !important;
    }

    .textboxstyle2 {
        background-color: #CFB53B !important;
        color: white !important;
        border: none !important;
    }

    .delClass, .debitcreditclass, .acodeclass, .zcodeclass, .scodeclass, .pcodeclass, .dcodeclass, .ahcodeclass, .cccodeclass, .accountcodeclass, .narrationclass, .cccodeclass, .ccnameclass, .ccnarrationclass, .bttrtypeclass, .btbillnoclass, .btbilldateclass, .btnarrationclass, .itemcodeclass, .itemnameclass, .itemworkingunitclass, .itemmeasurementunitclass, .chequenoclass, .chequedateclass, .banknameclass, .branchnameclass, .accountnoclass, .ordernoclass, .projectnameclass, .orderremarksclass {
        border: none !important;
    }

    .debitclass, .creditclass, .bcdebitclass, .bccreditclass, .ccamountclass, .btamountclass, .bteffectamountclass, .itemqtyclass, .itemunitpriceclass, .itemamountclass, .chequeamountclass, .orderamountclass {
        border: none !important;
        text-align: right !important;
    }        

    .tableclass tr td {
        background-color: white !important;
    }

    .tableclass tr:hover td {
        background-color: #CFB53B !important;
        color: white !important;
    }
    </style>

<script type="text/javascript">
    var _oVoucher=null;
    var _nInputBoxIndex=-1;
    var _sInputBoxClass='';    
    var _oVoucherBills=[];
    var _oChequeTypes=[];
    var _oThis=null;
    $(document).ready(function () {        
        _oVoucher = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oCompany = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));
        var oVoucherTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.VoucherTypes));
        var oRunningAccountingYear = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.RunningAccountingYear));
        var oTaxEffects = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.TaxEffects));
        var oBusinessUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oVoucherBatchs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.VoucherBatchs));
        var oClientSetting =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ClientSetting));
        _oChequeTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ChequeTypes));        

        $('#txtControlAmount').icsCurrencyBox();
        $('#cboCurrency').data('Currencys', oCurrencys);
        $('#divVoucher').data('Company', oCompany);
        $('#cboVoucherType').data('VoucherTypes', oVoucherTypes);
        $('#divVoucher').data('RunningAccountingYear', oRunningAccountingYear);
        $('#divVoucher').data('TaxEffects', oTaxEffects);
        $('#cboBusinessUnit').data('BusinessUnits', oBusinessUnits);
        $('#divVoucher').data('VoucherBatchs', oVoucherBatchs);
        $('#divVoucher').data('ClientSetting', oClientSetting);

        $("#txtCurrencyAmount").prop("disabled",true);
        InitializeEvent();
        RemakeGrid(_oVoucher.VDObjs);
        RefreshControl();
        RefreshSummery();
        LoadComboBoxes();

        $('#txtVBCreditDays').icsCurrencyBox(null, null, 0);
        $('#txtVBCurrencyAmount').icsCurrencyBox(null, null, 2);
        $('#txtVBCRate').icsCurrencyBox(null, null, 2);
        $('#txtVBAmountInBDT').icsCurrencyBox(null, null, 2);
    });

    function LoadComboBoxes(){
        debugger;
        $("#cboChequeType").icsLoadCombo({
            List: _oChequeTypes,
            OptionValue: "Value",
            DisplayText: "Text"
        });
    }

    $(document).on('keydown', function(event) {
        if (event.keyCode == 9) {   //tab
            event.preventDefault(); // stops tab's default action
        }
    });

    $("#txtCRate").keypress(function (e) {
        if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
            return false;
        }
    });

    $("#txtCRate").keyup(function (e){
        ResetConversionRate();
    });

    function ResetConversionRate()
    {
        if($('#txtCRate').val()===null || $('#txtCRate').val()==="")
        {
            $('#txtCRate').val(0);
        }
        var nCID = parseInt($('#cboCurrency').val());
        var nCRate = parseFloat($('#txtCRate').val());
        var oVDObjs= $('#tblVoucherDetail').data('rows');
        if(oVDObjs!=null)
        {
            var nCRate = parseFloat($('#txtCRate').val());
            for(var i=0; i<oVDObjs.length; i++)
            {
                oVDObjs[i].CID = nCID;
                oVDObjs[i].CRate = nCRate;
                oVDObjs[i].Amount = (oVDObjs[i].CAmount * nCRate)
                oVDObjs[i].BCDrAmount = (oVDObjs[i].DrAmount * nCRate)
                oVDObjs[i].BCCrAmount = (oVDObjs[i].CrAmount * nCRate)
            }
            RemakeGrid(oVDObjs);
            RefreshSummery();
        }
    }

    function RefreshControl()
    {
        RefreshComboBoxes();
        var oCompany = $('#divVoucher').data('Company');
        $('#txtVoucherNo').val(_oVoucher.VoucherNo);
        $('#cboVoucherType').val(_oVoucher.VoucherTypeID);
        $('#cboCurrency').val(_oVoucher.CurrencyID);
        $('#cboTex').val(_oVoucher.TaxEffectInt);
        $('#cboBusinessUnit').val(_oVoucher.BUID);
        $('#cboBatch').val(_oVoucher.BatchID);
        $('#txtControlAmount').val(parseFloat(_oVoucher.VoucherAmount).toFixed(2));
        $('#txtCRate').val(parseFloat(_oVoucher.CRate).toFixed(3));
        $('#txtVoucherDate').datebox('setValue', _oVoucher.VoucherDateAsString);
        $("#txtPostingDate").val(_oVoucher.DBServerDateInString);
        $('#txtNarration').val(_oVoucher.Narration);
        if(parseInt(_oVoucher.VoucherTypeID) <=0)
        {
            $('#divVoucher').panel({ title: 'Voucher Type'});
        }
        else
        {
            $('#divVoucher').panel({ title:_oVoucher.VoucherName});
        }
        $(".lblCurrency").html("("+_oVoucher.CUSymbol+")");
        $(".lblBaseCurrency").html("("+oCompany.CurrencySymbol+")");
        $("#txtControlAmount").select();
        ChangeCurrency(false);
        DisabledVoucherNo(_oVoucher);
        $('#btnApproved').hide();
        $('#Mainlayout').layout('collapse', 'west');
        var sVoucherHeader = sessionStorage.getItem("VoucherHeader");
        $("#lblVoucherMode").text(sVoucherHeader);
        if(sVoucherHeader==="View Voucher" || sVoucherHeader==="Approved Voucher")
        {
            $("#divVoucherInfo :input").prop("disabled", true);
            $("#divNarration :input").prop("disabled", true);
            $("#txtVoucherNo").width($("#txtControlAmount").width());
            $('#btnSearch').hide();
            $('#btnSave').hide();
            var oVDObjs = $("#tblVoucherDetail").data('rows');
            if(oVDObjs!=null)
            {
                for(var i=0; i<$('.debitcreditclass').length; i++)
                {
                    $(".delClass").eq(i).prop('readonly', true);
                    $(".debitcreditclass").eq(i).prop('readonly', true);
                }

                for(var i=0; i<$('.acodeclass').length; i++)
                {
                    $(".acodeclass").eq(i).prop('readonly', true);
                    $(".zcodeclass").eq(i).prop('readonly', true);
                    $(".scodeclass").eq(i).prop('readonly', true);
                    $(".pcodeclass").eq(i).prop('readonly', true);
                    $(".dcodeclass").eq(i).prop('readonly', true);
                    $(".ahcodeclass").eq(i).prop('readonly', true);
                    $(".accountcodeclass").eq(i).prop('readonly', true);
                    $(".narrationclass").eq(i).prop('readonly', true);
                    $(".debitclass").eq(i).prop('readonly', true);
                    $(".creditclass").eq(i).prop('readonly', true);
                }

                for(var i=0; i<$('.cccodeclass').length; i++)
                {
                    $(".cccodeclass").eq(i).prop('readonly', true);
                    $(".ccnameclass").eq(i).prop('readonly', true);
                    $(".ccnarrationclass").eq(i).prop('readonly', true);
                    $(".ccamountclass").eq(i).prop('readonly', true);
                }

                for(var i=0; i<$('.bttrtypeclass').length; i++)
                {
                    $(".bttrtypeclass").eq(i).prop('readonly', true);
                    $(".btbillnoclass").eq(i).prop('readonly', true);
                    $(".btbilldateclass").eq(i).prop('readonly', true);
                    $(".btnarrationclass").eq(i).prop('readonly', true);
                    $(".btamountclass").eq(i).prop('readonly', true);
                    $(".bteffectamountclass").eq(i).prop('readonly', true);
                }

                for(var i=0; i<$('.chequenoclass').length; i++)
                {
                    $(".chequenoclass").eq(i).prop('readonly', true);
                    $(".chequedateclass").eq(i).prop('readonly', true);
                    $(".banknameclass").eq(i).prop('readonly', true);
                    $(".branchnameclass").eq(i).prop('readonly', true);
                    $(".accountnoclass").eq(i).prop('readonly', true);
                    $(".chequeamountclass").eq(i).prop('readonly', true);
                }

                for(var i=0; i<$('.itemcodeclass').length; i++)
                {
                    $(".itemcodeclass").eq(i).prop('readonly', true);
                    $(".itemnameclass").eq(i).prop('readonly', true);
                    $(".itemworkingunitclass").eq(i).prop('readonly', true);
                    $(".itemmeasurementunitclass").eq(i).prop('readonly', true);
                    $(".itemqtyclass").eq(i).prop('readonly', true);
                    $(".itemunitpriceclass").eq(i).prop('readonly', true);
                    $(".itemamountclass").eq(i).prop('readonly', true);
                }

                for(var i=0; i<$('.ordernoclass').length; i++)
                {
                    $(".ordernoclass").eq(i).prop('readonly', true);
                    $(".projectnameclass").eq(i).prop('readonly', true);
                    $(".orderremarksclass").eq(i).prop('readonly', true);
                    $(".orderamountclass").eq(i).prop('readonly', true);
                }
            }
        }

        if(sVoucherHeader==="Approved Voucher")
        {
            $('#btnApproved').show();
        }
        if(sVoucherHeader!="Add New Voucher")
        {
            $('#cboVoucherType').prop('disabled', true);
        }
    }

    function RefreshComboBoxes() {

        var oVoucherTypes=$('#cboVoucherType').data('VoucherTypes');
        var oCurrencys =$('#cboCurrency').data('Currencys');
        var oTaxEffects =$('#divVoucher').data('TaxEffects');
        var oBusinessUnits = $('#cboBusinessUnit').data('BusinessUnits');
        var oVoucherBatchs= $('#divVoucher').data('VoucherBatchs');

        $("#cboVoucherType").icsLoadCombo({
            List: oVoucherTypes,
            OptionValue: "VoucherTypeID",
            DisplayText: "VoucherName"
        });

        $("#cboCurrency").icsLoadCombo({
            List: oCurrencys,
            OptionValue: "CurrencyID",
            DisplayText: "NameSymbol",
            InitialValue : "Custom"
        });

        $("#cboTex").icsLoadCombo({
            List: oTaxEffects,
            OptionValue: "id",
            DisplayText: "Value",
            InitialValue : "Custom"
        });
        $("#cboBusinessUnit").icsLoadCombo({
            List: oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "ShortNameCode",
            InitialValue : "Custom"
        });
        $("#cboBatch").icsLoadCombo({
            List: oVoucherBatchs,
            OptionValue: "VoucherBatchID",
            DisplayText: "BatchNO",
            InitialValue : "Custom"
        });
    }

    $('#cboBusinessUnit').change(function(){
        var nVoucherType =parseInt($("#cboVoucherType").val());
        var nBUID =parseInt($("#cboBusinessUnit").val());        
        window.location.href =  sessionStorage.getItem('BaseAddress') +'/Voucher/ViewSingleCurrencyVoucher?buid='+parseInt(nBUID)+'&id=0&nvtid='+nVoucherType+'&copyid=0';
    });

    $('#cboVoucherType').change(function(){
        //Full Cheque Reload
        //var nVoucherType =parseInt($("#cboVoucherType").val());
        //if(nVoucherType>0)
        //{
        //    window.location.href =  sessionStorage.getItem('BaseAddress') +'/Voucher/ViewSingleCurrencyVoucher?id=0&nvtid='+nVoucherType;
        //}

        //Don't use reload full voucher
        var oVoucher = {
            BUID : parseInt($('#cboBusinessUnit').val()),
            VoucherTypeID : parseInt($('#cboVoucherType').val()),
            VoucherDate : $('#txtVoucherDate').datebox('getValue')
        };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/Voucher/GetVoucherInfo",
            traditional: true,
            data:  JSON.stringify(oVoucher),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oVoucher = jQuery.parseJSON(data);
                var nVoucherTypeID = parseInt($('#cboVoucherType').val());
                if(nVoucherTypeID <=0)
                {
                    $('#divVoucher').panel({ title: 'Voucher Type'});
                }
                else
                {
                    $('#divVoucher').panel({ title: oVoucher.VoucherName});
                }
                $("#txtVoucherNo").val(oVoucher.VoucherNo);
                $('#txtVoucherDate').datebox('setValue', oVoucher.VoucherDateAsString);
                DisabledVoucherNo(oVoucher);
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $('#cboCurrency').change(function(){
        ChangeCurrency(true);
    });

    function ChangeCurrency(bIsComboChange)
    {
        var nCurrencyID = parseInt($('#cboCurrency').val());
        var oCurrencys =$('#cboCurrency').data('Currencys');
        for(var i=0; i<oCurrencys.length; i++)
        {
            if(parseInt(oCurrencys[i].CurrencyID) === nCurrencyID)
            {
                $(".lblCurrency").html("("+oCurrencys[i].Symbol+")");
                break;
            }
        }

        var oCompany = $('#divVoucher').data('Company');
        if(nCurrencyID=== parseInt(oCompany.BaseCurrencyID))
        {
            $('#txtCRate').val(parseFloat(1).toFixed(3));
            $("#txtCRate").prop("disabled", true);
        }
        else
        {
            if(bIsComboChange)
            {
                $('#txtCRate').val(parseFloat(0).toFixed(3));
            }
            $("#txtCRate").prop("disabled", false);
        }
        ResetConversionRate();
    }

    function GetSymbol()
    {
        var nCurrencyID = parseInt($('#cboCurrency').val());
        var oCurrencys =$('#cboCurrency').data('Currencys');
        for(var i=0; i<oCurrencys.length; i++)
        {
            if(parseInt(oCurrencys[i].CurrencyID) === nCurrencyID)
            {
                return oCurrencys[i].Symbol;
            }
        }
        return "";
    }

    function DisabledVoucherNo(oVoucher)
    {
        if(parseInt(oVoucher.NumberMethodInInt) === 2)
        {
            $("#txtVoucherNo").prop("disabled",true);
        }
        else
        {
            $("#txtVoucherNo").prop("disabled",false);
        }
    }

    $('#txtControlAmount').keydown(function (e)
    {
        if (e.which === 13) {

            var oVDObjs = $("#tblVoucherDetail").data('rows');
            if(oVDObjs=='undefined'  || oVDObjs==null || oVDObjs.length<=0)
            {
                var oVDObj=NewObject(0);
                AddVoucherDetail(oVDObj);
            }
            var nNextRowIndex = 0;
            $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
            $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
            $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
            $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
            ResetAllInputBox(0, '.debitcreditclass');
            RefreshSummery();
            InitializeKeyDownEvent(".debitcreditclass"); return;
        }
    });

    function isNumber(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
    }

    function SplitCurrencyAndAmount(nRowIndex,userInput)
    {
        var editOrNewEntry = "";
        var currency = "";
        var amountInString = "";
        var result = "";
        var count = 0;
        var nAmountInCurrency = 0;
        var nBaseCurrencyAmount = 0;
        var nConversionRate=0;

        for(var i=0;i<userInput.length;i++)
        {
            var char = userInput.charAt(i);
            var charForCheck = char;
            char = char.match(/\d+/g);
            if(char == null && count==0)
            {
                currency = currency + userInput.charAt(i);
            }
            else if(char != null)
            {
                amountInString = amountInString + userInput.charAt(i);
                count=1;
            }
            else if(charForCheck == ",")
            {
                continue;
            }
            else if(charForCheck == ".")
            {
                amountInString = amountInString + userInput.charAt(i);
            }
            else
            {
                result = "WrongInput" + "," + "Please Give Valid Amount.";
                break;
            }
        }

        if(amountInString.length == 0 || parseFloat(amountInString) == 0)
        {
            result = "WrongInput" + "," + "Please Give Amount.";
        }
        if(result == "")
        {
            var userInputAmount = parseFloat(RemoveComma(amountInString));
            var checkAmount = isNumber(userInputAmount);
            if(checkAmount == false)
            {
                result = "WrongInput" + "," + "Please Give Valid Amount.";
            }
            else
            {
                result = userInputAmount + ", Valid Input";
            }
        }
        result = result.split(",");
        return result;
    }

    function IntializePickerbutton(oPickerobj) {

        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            SetPickerValueAssign(oPickerobj);
        });

        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }

        });
    }

    function SetPickerValueAssign(oPickerobj)
    {

        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid == 'winArea') {
            if (oreturnObj != null && parseInt(oreturnObj.LocationID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var acodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var acodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.acodeclass');
                $(acodeControll).val(oreturnObj.LocCode);
                $(acodeControll).removeClass("textboxstyle");
                $(acodeControll).addClass("highlight");
                $(acodeControll).addClass("textboxstyle2");
                $("#tblVoucherDetail").data('rows')[nRowIndex].AID=parseInt(oreturnObj.LocationID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].ACode=oreturnObj.LocCode;
                $("#tblVoucherDetail").data('rows')[nRowIndex].AName=oreturnObj.Name;
                $("#tblVoucherDetail").data('rows')[nRowIndex].ASName=oreturnObj.ShortName;
                var bIsZoneEnable = $("#tblVoucherDetail").data('rows')[nRowIndex].IsZEfct;
                var sClassName = ".zcodeclass";
                if(!bIsZoneEnable)
                {
                    sClassName =".pcodeclass";
                }

                var nInputBoxIndex=$('.acodeclass').index(acodeControll);
                ResetAllInputBox(nInputBoxIndex, sClassName);
                ResetAccountCode(nRowIndex);
                InitializeKeyDownEvent(sClassName); return;
            }
            else{$(oPickerobj.TextBox).select();}
        }
        else if (oPickerobj.winid == 'winZone') {
            if (oreturnObj != null && parseInt(oreturnObj.LocationID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var zcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var zcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.zcodeclass');
                $(zcodeControll).val(oreturnObj.LocCode);
                $(zcodeControll).removeClass("textboxstyle");
                $(zcodeControll).addClass("highlight");
                $(zcodeControll).addClass("textboxstyle2");
                $("#tblVoucherDetail").data('rows')[nRowIndex].ZID=parseInt(oreturnObj.LocationID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].ZCode=oreturnObj.LocCode;
                $("#tblVoucherDetail").data('rows')[nRowIndex].ZName=oreturnObj.Name;
                $("#tblVoucherDetail").data('rows')[nRowIndex].ZSName=oreturnObj.ShortName;
                var bIsSiteEnable = $("#tblVoucherDetail").data('rows')[nRowIndex].IsSEfct;
                var sClassName = ".scodeclass";
                if(!bIsSiteEnable)
                {
                    sClassName =".pcodeclass";
                }
                var nInputBoxIndex=$('.zcodeclass').index(zcodeControll);
                ResetAllInputBox(nInputBoxIndex, sClassName);
                ResetAccountCode(nRowIndex);
                InitializeKeyDownEvent(sClassName); return;
            }
            else{$(oPickerobj.TextBox).select();}
        }
        else if (oPickerobj.winid == 'winSite') {
            if (oreturnObj != null && parseInt(oreturnObj.LocationID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var scodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var scodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.scodeclass');
                $(scodeControll).val(oreturnObj.LocCode);
                $(scodeControll).removeClass("textboxstyle");
                $(scodeControll).addClass("highlight");
                $(scodeControll).addClass("textboxstyle2");
                var nInputBoxIndex=$('.scodeclass').index(scodeControll);
                ResetAllInputBox(nInputBoxIndex, '.pcodeclass');
                $("#tblVoucherDetail").data('rows')[nRowIndex].SID=parseInt(oreturnObj.LocationID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].SCode=oreturnObj.LocCode;
                $("#tblVoucherDetail").data('rows')[nRowIndex].SName=oreturnObj.Name;
                $("#tblVoucherDetail").data('rows')[nRowIndex].SSName=oreturnObj.ShortName;
                ResetAccountCode(nRowIndex);
                InitializeKeyDownEvent(".pcodeclass"); return;
            }
            else{$(oPickerobj.TextBox).select();}
        }
        else if (oPickerobj.winid == 'winProduct') {

            if (oreturnObj != null && parseInt(oreturnObj.VProductID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var pcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var pcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.pcodeclass');
                $(pcodeControll).val(oreturnObj.ProductCode);
                $(pcodeControll).removeClass("textboxstyle");
                $(pcodeControll).addClass("highlight");
                $(pcodeControll).addClass("textboxstyle2");
                var nInputBoxIndex=$('.pcodeclass').index(pcodeControll);
                ResetAllInputBox(nInputBoxIndex, '.dcodeclass');
                $("#tblVoucherDetail").data('rows')[nRowIndex].PID=parseInt(oreturnObj.VProductID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].PCode=oreturnObj.ProductCode;
                $("#tblVoucherDetail").data('rows')[nRowIndex].PName=oreturnObj.ProductName;
                $("#tblVoucherDetail").data('rows')[nRowIndex].PSName=oreturnObj.ShortName;
                ResetAccountCode(nRowIndex);
                InitializeKeyDownEvent(".dcodeclass"); return;
            }
            else{$(oPickerobj.TextBox).select();}
        }
        else if (oPickerobj.winid == 'winDepartment') {
            if (oreturnObj != null && parseInt(oreturnObj.DepartmentID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var dcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var dcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.dcodeclass');
                $(dcodeControll).val(oreturnObj.Code);
                $(dcodeControll).removeClass("textboxstyle");
                $(dcodeControll).addClass("highlight");
                $(dcodeControll).addClass("textboxstyle2");
                var nInputBoxIndex=$('.dcodeclass').index(dcodeControll);
                ResetAllInputBox(nInputBoxIndex, '.ahcodeclass');
                $("#tblVoucherDetail").data('rows')[nRowIndex].DptID=parseInt(oreturnObj.DepartmentID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].DCode=oreturnObj.Code;
                $("#tblVoucherDetail").data('rows')[nRowIndex].DName=oreturnObj.Name;
                $("#tblVoucherDetail").data('rows')[nRowIndex].DSName=oreturnObj.ShortName;
                ResetAccountCode(nRowIndex);
                InitializeKeyDownEvent(".ahcodeclass"); return;
            }
            else{$(oPickerobj.TextBox).select();}
        }
        else if (oPickerobj.winid == 'winChartsOfAccount') {
            if (oreturnObj != null && parseInt(oreturnObj.AccountHeadID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var ahcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var ahcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.ahcodeclass');
                $(ahcodeControll).val(oreturnObj.AccountCode);
                $(ahcodeControll).removeClass("textboxstyle");
                $(ahcodeControll).addClass("highlight");
                $(ahcodeControll).addClass("textboxstyle2");
                $("#tblVoucherDetail").data('rows')[nRowIndex].AHID=parseInt(oreturnObj.AccountHeadID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].AHCode=oreturnObj.AccountCode;
                $("#tblVoucherDetail").data('rows')[nRowIndex].AHName=oreturnObj.AccountHeadName;
                $("#tblVoucherDetail").data('rows')[nRowIndex].IsCCAply=oreturnObj.IsCostCenterApply;
                $("#tblVoucherDetail").data('rows')[nRowIndex].IsBTAply=oreturnObj.IsBillRefApply;
                $("#tblVoucherDetail").data('rows')[nRowIndex].IsChkAply=oreturnObj.IsChequeApply;
                $("#tblVoucherDetail").data('rows')[nRowIndex].IsIRAply=oreturnObj.IsInventoryApply;
                $("#tblVoucherDetail").data('rows')[nRowIndex].IsOrderaAply=oreturnObj.IsOrderReferenceApply;
                $("#tblVoucherDetail").data('rows')[nRowIndex].IsPaidChk=oreturnObj.IsPaymentCheque;
                var oVDobj = $("#tblVoucherDetail").data('rows')[nRowIndex];
                EnableDisableControl(nRowIndex, oVDobj);
                var sClassName = ".narrationclass";
                var nInputBoxIndex=$('.ahcodeclass').index(ahcodeControll);
                ResetAllInputBox(nInputBoxIndex, sClassName);
                ResetAccountCode(nRowIndex);
                InitializeKeyDownEvent(sClassName); return;
            }
            else{$(oPickerobj.TextBox).select();}
        }
        else if (oPickerobj.winid == 'winCostCenter') {
            if (oreturnObj != null && parseInt(oreturnObj.ACCostCenterID) > 0) {
                debugger;
                // Edit by faruk for avoid duplicate cheque orginally :Duplicate
                //var result = CheckDuplicateOrNot(parseInt(oreturnObj.ACCostCenterID),"Subledger");
                var result = "";
                if(result == "Duplicate")
                {
                    alert("Can't take same Cost center for one debit or credit.");
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var cccodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.cccodeclass');
                    cccodeControll.select();
                    return;
                }
                else
                {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var cccodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                    var cccodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.cccodeclass');
                    $(cccodeControll).val(oreturnObj.Code);
                    var index = $('.cccodeclass').index(cccodeControll);
                    $('.ccnameclass').eq(index).text(oreturnObj.Name);
                    $(cccodeControll).removeClass("textboxstyle");
                    $(cccodeControll).addClass("highlight");
                    $(cccodeControll).addClass("textboxstyle2");
                    var nInputBoxIndex=$('.cccodeclass').index(cccodeControll);
                    ResetAllInputBox(nInputBoxIndex, '.ccnarrationclass');
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CCID=parseInt(oreturnObj.ACCostCenterID);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CCCode=oreturnObj.Code;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CCName=oreturnObj.Name;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].IsBTAply=oreturnObj.IsBillRefApply;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].IsChkAply=oreturnObj.IsChequeApply;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].IsPaidChk=oreturnObj.IsPaymentCheque;
                    var currentAmount = parseFloat(RemoveComma($('#tblVoucherDetail tr').eq(nRowIndex).find('.ccamountclass').val()));
                    var amount = AmountCalculation(nRowIndex,"Subledger",currentAmount);
                    amount = parseFloat(amount.toFixed(2));
                    $('#tblVoucherDetail tr').eq(nRowIndex).find('.ccamountclass').val(formatPrice(amount,null));
                    InitializeKeyDownEvent(".ccnarrationclass"); return;
                }
            }
            else{$(oPickerobj.TextBox).select();}
        }
        else if (oPickerobj.winid == 'winBillTransactionType') {
            if (oreturnObj != null && parseInt(oreturnObj.EnumId) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var oControl = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var oControl = $('#tblVoucherDetail tr').eq(nRowIndex).find('.bttrtypeclass');
                $(oControl).val(oreturnObj.EnumValue);
                $(oControl).removeClass("textboxstyle");
                $(oControl).addClass("highlight");
                $(oControl).addClass("textboxstyle2");
                var nInputBoxIndex=$('.bttrtypeclass').index(oControl);
                ResetAllInputBox(nInputBoxIndex, '.btbillnoclass');
                $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt=parseInt(oreturnObj.EnumId);
                $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeStr=oreturnObj.EnumValue;
                var currentAmount = parseFloat(RemoveComma($('#tblVoucherDetail tr').eq(nRowIndex).find('.bteffectamountclass').val()));
                var amount = AmountCalculation(nRowIndex,"Bill",currentAmount);
                amount = parseFloat(amount.toFixed(2));
                $('#tblVoucherDetail tr').eq(nRowIndex).find('.bteffectamountclass').val(formatPrice(amount,null));
                InitializeKeyDownEvent(".btbillnoclass"); return;
            }
            else{$(oPickerobj.TextBox).select();}
        }
        else if (oPickerobj.winid == 'winItem') {
            if (oreturnObj != null && parseInt(oreturnObj.ProductID) > 0) {
                // Edit by faruk for avoid duplicate cheque orginally :Duplicate
                //var result = CheckDuplicateOrNot(parseInt(oreturnObj.ProductID),"Inventory");
                var result="";
                if(result == "Duplicate")
                {
                    alert("Can't take same item for one debit or credit.");
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var oControl = $('#tblVoucherDetail tr').eq(nRowIndex).find('.itemcodeclass');
                    oControl.select();
                    return;
                }
                else
                {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var oControl = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                    var oControl = $('#tblVoucherDetail tr').eq(nRowIndex).find('.itemcodeclass');
                    $(oControl).val(oreturnObj.ProductCode);
                    var index = $('.itemcodeclass').index(oControl);
                    $('.itemnameclass').eq(index).text(oreturnObj.ProductName);
                    $(oControl).removeClass("textboxstyle");
                    $(oControl).addClass("highlight");
                    $(oControl).addClass("textboxstyle2");
                    var nInputBoxIndex=$('.itemcodeclass').index(oControl);
                    ResetAllInputBox(nInputBoxIndex, '.itemworkingunitclass');
                    $("#tblVoucherDetail").data('rows')[nRowIndex].PID=parseInt(oreturnObj.ProductID);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].PCode=oreturnObj.ProductCode;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].PName=oreturnObj.ProductName;
                    InitializeKeyDownEvent(".itemworkingunitclass"); return;
                }
            }
            else{$(oPickerobj.TextBox).select();}
        }
        else if (oPickerobj.winid == 'winWorkingUnit') {
            if (oreturnObj != null && parseInt(oreturnObj.WorkingUnitID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var oControl = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var oControl = $('#tblVoucherDetail tr').eq(nRowIndex).find('.itemworkingunitclass');
                $(oControl).val(oreturnObj.WorkingUnitName);
                $(oControl).removeClass("textboxstyle");
                $(oControl).addClass("highlight");
                $(oControl).addClass("textboxstyle2");
                var nInputBoxIndex=$('.itemworkingunitclass').index(oControl);
                ResetAllInputBox(nInputBoxIndex, '.itemmeasurementunitclass');
                $("#tblVoucherDetail").data('rows')[nRowIndex].WUID=parseInt(oreturnObj.WorkingUnitID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].WUName=oreturnObj.WorkingUnitName;
                InitializeKeyDownEvent(".itemmeasurementunitclass"); return;
            }
            else{$(oPickerobj.TextBox).select();}
        }
        else if (oPickerobj.winid == 'winMeasurementUnit') {
            if (oreturnObj != null && parseInt(oreturnObj.MeasurementUnitID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var oControl = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var oControl = $('#tblVoucherDetail tr').eq(nRowIndex).find('.itemmeasurementunitclass');
                $(oControl).val(oreturnObj.UnitName);
                $(oControl).removeClass("textboxstyle");
                $(oControl).addClass("highlight");
                $(oControl).addClass("textboxstyle2");
                var nInputBoxIndex=$('.itemmeasurementunitclass').index(oControl);
                ResetAllInputBox(nInputBoxIndex, '.itemqtyclass');
                $("#tblVoucherDetail").data('rows')[nRowIndex].MUID=parseInt(oreturnObj.MeasurementUnitID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].MUName=oreturnObj.UnitName;
                InitializeKeyDownEvent(".itemqtyclass"); return;
            }
            else{$(oPickerobj.TextBox).select();}
        }
        else if (oPickerobj.winid == 'winSaleOrder') {
            if (oreturnObj != null && parseInt(oreturnObj.SaleOrderID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');

                var oControl = $('#tblVoucherDetail tr').eq(nRowIndex).find('.ordernoclass');
                $(oControl).val(oreturnObj.SalesNo);
                $(oControl).removeClass("textboxstyle");
                $(oControl).addClass("highlight");
                $(oControl).addClass("textboxstyle2");

                var oProjectNameControl = $('#tblVoucherDetail tr').eq(nRowIndex).find('.projectnameclass');
                $(oProjectNameControl).text(oreturnObj.ProjectName);
                $(oProjectNameControl).removeClass("textboxstyle");
                $(oProjectNameControl).addClass("highlight");
                $(oProjectNameControl).addClass("textboxstyle2");

                var nInputBoxIndex=$('.ordernoclass').index(oControl);
                ResetAllInputBox(nInputBoxIndex, '.orderremarksclass');
                $("#tblVoucherDetail").data('rows')[nRowIndex].OrderID=parseInt(oreturnObj.SaleOrderID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].SalesNo=oreturnObj.SalesNo;
                $("#tblVoucherDetail").data('rows')[nRowIndex].ProjectName=oreturnObj.ProjectName;
                InitializeKeyDownEvent(".orderremarksclass"); return;
            }
            else{$(oPickerobj.TextBox).select();}
        }

    }

    function ResetAccountCode(nRowIndex)
    {
        var oDVObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        var sNewAccountCode = MakeAccountCode(oDVObj);
        $("#tblVoucherDetail").data('rows')[nRowIndex].AccountCode=sNewAccountCode;
        var accountcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountcodeclass');
        $(accountcodeControll).val(sNewAccountCode);
    }

    function InitializeKeyDownEvent(classname)
    {
        $('.delClass').unbind("keydown");
        $('.debitcreditclass').unbind("keydown");
        $('.acodeclass').unbind("keydown");
        $('.zcodeclass').unbind("keydown");
        $('.scodeclass').unbind("keydown");
        $('.pcodeclass').unbind("keydown");
        $('.dcodeclass').unbind("keydown");
        $('.ahcodeclass').unbind("keydown");
        $('.accountcodeclass').unbind("keydown");
        $('.narrationclass').unbind("keydown");
        $('.debitclass').unbind("keydown");
        $('.creditclass').unbind("keydown");

        $('.cccodeclass').unbind("keydown");
        $('.ccnameclass').unbind("keydown");
        $('.ccnarrationclass').unbind("keydown");
        $('.ccamountclass').unbind("keydown");

        $('.bttrtypeclass').unbind("keydown");
        $('.btbillnoclass').unbind("keydown");
        $('.btbilldateclass').unbind("keydown");
        $('.btnarrationclass').unbind("keydown");
        $('.btamountclass').unbind("keydown");
        $('.bteffectamountclass').unbind("keydown");

        $('.chequenoclass').unbind("keydown");
        $('.chequedateclass').unbind("keydown");
        $('.banknameclass').unbind("keydown");
        $('.branchnameclass').unbind("keydown");
        $('.accountnoclass').unbind("keydown");
        $('.chequeamountclass').unbind("keydown");

        $('.itemcodeclass').unbind("keydown");
        $('.itemnameclass').unbind("keydown");
        $('.itemworkingunitclass').unbind("keydown");
        $('.itemmeasurementunitclass').unbind("keydown");
        $('.itemqtyclass').unbind("keydown");
        $('.itemunitpriceclass').unbind("keydown");
        $('.itemamountclass').unbind("keydown");

        $('.ordernoclass').unbind("keydown");
        $('.projectnameclass').unbind("keydown");
        $('.orderremarksclass').unbind("keydown");
        $('.orderamountclass').unbind("keydown");

        if(classname===".debitcreditclass")
        {
            $('.debitcreditclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var sDebitCredit=$.trim($(this).val());
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    if(sDebitCredit==""||sDebitCredit==null)
                    {
                        if(IsDebitCreditEqual())
                        {
                            var oVDObjs=[];
                            var oTempVDObjs = $("#tblVoucherDetail").data('rows');
                            for(var i=0; i<oTempVDObjs.length-1; i++)
                            {
                                oVDObjs.push(oTempVDObjs[i]);
                            }
                            $('#tblVoucherDetail').data('rows', oVDObjs);
                            document.getElementById("tblVoucherDetail").deleteRow(nRowIndex);
                            $('#txtNarration').focus();
                        }
                        else
                        {
                            alert("Please define debit or credit!");
                            return false;
                        }
                    }
                    else
                    {
                        if(sDebitCredit=="Debit")
                        {
                            $("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR="Debit";
                            $("#tblVoucherDetail").data('rows')[nRowIndex].IsDr=true;
                        }
                        else if(sDebitCredit=="Credit")
                        {
                            $("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR="Credit";
                            $("#tblVoucherDetail").data('rows')[nRowIndex].IsDr=false;
                        }
                        else
                        {
                            alert("Invalid Voucher Detail");
                            return false;
                        }
                        var index = $('.debitcreditclass').index(this);
                        ResetAllInputBox(index, '.acodeclass');

                        var oVDObjs= $("#tblVoucherDetail").data('rows');
                        var nTotalDebitAmount=0; var nTotalCreditAmount=0;
                        var nBalanceAmount=0; var nTempBalanceAmount=0;
                        for(var i=0;i<oVDObjs.length;i++)
                        {
                            nTotalDebitAmount = parseFloat(nTotalDebitAmount)+ parseFloat(oVDObjs[i].DrAmount);
                            nTotalCreditAmount = parseFloat(nTotalCreditAmount)+ parseFloat(oVDObjs[i].CrAmount);
                        }

                        if($("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR == "Debit")
                        {
                            nBalanceAmount = nTotalCreditAmount - nTotalDebitAmount;
                        }
                        else
                        {
                            nBalanceAmount = nTotalDebitAmount - nTotalCreditAmount;
                        }
                        if(nBalanceAmount<0)
                        {
                            nBalanceAmount=0;
                        }
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR == "Debit")
                        {
                            nTempBalanceAmount= parseFloat(RemoveComma($(".debitclass").eq(index).val()));
                            if(nTempBalanceAmount>0)
                            {
                                nBalanceAmount = nTempBalanceAmount;
                            }

                            $(".debitclass").eq(index).val(formatPrice(nBalanceAmount,null));
                            $(".creditclass").eq(index).val(formatPrice(0.00,null));
                            $(".bccreditclass").eq(index).val(formatPrice(0.00,null));
                            $(".creditclass").eq(index).prop('disabled', true);
                            $(".debitclass").eq(index).prop('disabled', false);

                            $("#tblVoucherDetail").data('rows')[nRowIndex].DrAmount=parseFloat(nBalanceAmount);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].CrAmount=parseFloat(0.00);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].BCDrAmount=parseFloat(0.00);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].BCCrAmount=parseFloat(0.00);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=parseFloat(0.00);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].IsDr=true;
                        }
                        else
                        {
                            nTempBalanceAmount= parseFloat(RemoveComma($(".creditclass").eq(index).val()));
                            if(nTempBalanceAmount>0)
                            {
                                nBalanceAmount = nTempBalanceAmount;
                            }
                            $(".creditclass").eq(index).val(formatPrice(nBalanceAmount,null));
                            $(".debitclass").eq(index).val(formatPrice(0.00,null));
                            $(".bcdebitclass").eq(index).val(formatPrice(0.00,null));
                            $(".debitclass").eq(index).prop('disabled', true);
                            $(".creditclass").eq(index).prop('disabled', false);

                            $("#tblVoucherDetail").data('rows')[nRowIndex].DrAmount=0.00;
                            $("#tblVoucherDetail").data('rows')[nRowIndex].CrAmount=parseFloat(nBalanceAmount);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].BCDrAmount=parseFloat(0.00);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].BCCrAmount=parseFloat(0.00);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=parseFloat(0.00);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].IsDr=false;
                        }
                        RefreshSummery();
                        InitializeKeyDownEvent(".acodeclass"); return;
                    }
                }
            });
        }
        else if(classname===".acodeclass")
        {
            $('.acodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var TextBox=$(this);
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.acodeclass').index(this);
                    var txtareacode = $(this).val();
                    if(txtareacode===null || txtareacode==="")
                    {
                        alert("Please Press Enter With Area Code OR Name!");
                        return false;
                    }

                    if(txtareacode==="00")
                    {
                        SkipBusinessLayer(".acodeclass");
                        return false;
                    }

                    var nBUsinessUnitID = parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].BUID);
                    if(nBUsinessUnitID===null || nBUsinessUnitID<=0)
                    {
                        alert("Please Enter Business Code!");
                        return false;
                    }

                    var oLocation = {
                        BusinessUnitID : nBUsinessUnitID,
                        ParentID : 1,
                        LocationNameCode : txtareacode
                    };
                    var obj = {
                        BaseAddress: sessionStorage.getItem('BaseAddress'),
                        Object: oLocation,
                        ControllerName: "Location",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    if(e.which===9){
                        debugger;
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].AID>0){
                            var bIsZoneEnable = $("#tblVoucherDetail").data('rows')[nRowIndex].IsZEfct;
                            var sClassName = ".zcodeclass";
                            if(!bIsZoneEnable)
                            {
                                sClassName =".pcodeclass";
                            }

                            var nInputBoxIndex=$('.acodeclass').index(this);
                            ResetAllInputBox(nInputBoxIndex, sClassName);
                            ResetAccountCode(nRowIndex);
                            InitializeKeyDownEvent(sClassName);
                            return;
                        }
                    }
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].LocationID) > 0) {
                                var tblColums = []; var oColumn = { field: "LocCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "Name", title: "Area Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winArea',
                                    winclass: 'clsArea',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblArea',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'LocationNameCode',
                                    windowTittle: 'Area List',
                                    TextBox:TextBox
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbutton(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".zcodeclass")
        {
            $('.zcodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var TextBox=$(this);
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.zcodeclass').index(this);
                    var txtzonecode = $(this).val();
                    if(txtzonecode===null || txtzonecode==="")
                    {
                        alert("Please Press Enter With Zone Code OR Name!");
                        return false;
                    }

                    if(txtzonecode==="00")
                    {
                        SkipBusinessLayer(".zcodeclass");
                        return false;
                    }

                    var nBUsinessUnitID = parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].BUID);
                    if(nBUsinessUnitID===null || nBUsinessUnitID<=0)
                    {
                        alert("Please Press Enter With Business Code!");
                        return false;
                    }
                    var nAreaID = parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].AID);
                    if(nAreaID===null || nAreaID<=0)
                    {
                        alert("Please Press Enter With Area Code!");
                        return false;
                    }

                    var oLocation = {
                        BusinessUnitID : nBUsinessUnitID,
                        ParentID : nAreaID,
                        LocationNameCode : txtzonecode
                    };
                    var obj = {
                        BaseAddress: sessionStorage.getItem('BaseAddress'),
                        Object: oLocation,
                        ControllerName: "Location",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    if(e.which===9){
                        debugger;
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].ZID>0){
                            var bIsSiteEnable = $("#tblVoucherDetail").data('rows')[nRowIndex].IsSEfct;
                            var sClassName = ".scodeclass";
                            if(!bIsSiteEnable)
                            {
                                sClassName =".pcodeclass";
                            }
                            var nInputBoxIndex=$('.zcodeclass').index(this);
                            ResetAllInputBox(nInputBoxIndex, sClassName);
                            ResetAccountCode(nRowIndex);
                            InitializeKeyDownEvent(sClassName);
                            return;
                        }
                    }
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].LocationID) > 0) {
                                var tblColums = []; var oColumn = { field: "LocCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "Name", title: "Area Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winZone',
                                    winclass: 'clsZone',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblZone',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'LocationNameCode',
                                    windowTittle: 'Zone List',
                                    TextBox:TextBox
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbutton(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".scodeclass")
        {
            $('.scodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var TextBox=$(this);
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.scodeclass').index(this);
                    var txtsitecode = $(this).val();
                    if(txtsitecode===null || txtsitecode==="")
                    {
                        alert("Please Press Enter With Site Code OR Name!");
                        return false;
                    }

                    if(txtsitecode==="0000")
                    {
                        SkipBusinessLayer(".scodeclass");
                        return false;
                    }

                    var nBUsinessUnitID = parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].BUID);
                    if(nBUsinessUnitID===null || nBUsinessUnitID<=0)
                    {
                        alert("Please Press Enter With Business Code!");
                        return false;
                    }
                    var nZoneID = parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ZID);
                    if(nZoneID===null || nZoneID<=0)
                    {
                        alert("Please Press Enter With Zone Code!");
                        return false;
                    }

                    var oLocation = {
                        BusinessUnitID : nBUsinessUnitID,
                        ParentID : nZoneID,
                        LocationNameCode : txtsitecode
                    };
                    var obj = {
                        BaseAddress: sessionStorage.getItem('BaseAddress'),
                        Object: oLocation,
                        ControllerName: "Location",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    if(e.which===9){
                        debugger;
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].SID>0){
                            ResetAccountCode(nRowIndex);
                            InitializeKeyDownEvent(".pcodeclass");
                            return;
                        }
                    }
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].LocationID) > 0) {
                                var tblColums = []; var oColumn = { field: "LocCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "Name", title: "Area Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winSite',
                                    winclass: 'clsSite',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblSite',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'LocationNameCode',
                                    windowTittle: 'Site List',
                                    TextBox:TextBox
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbutton(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".pcodeclass")
        {
            $('.pcodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var TextBox=$(this);
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.pcodeclass').index(this);
                    var txtproductcode = $(this).val();
                    if(txtproductcode===null || txtproductcode==="")
                    {
                        alert("Please Press Enter With Product Code OR Name!");
                        return false;
                    }

                    if(txtproductcode==="00000")
                    {
                        SkipBusinessLayer(".pcodeclass");
                        return false;
                    }

                    var oVProduct = {
                        NameCode : txtproductcode
                    };
                    var obj = {
                        BaseAddress: sessionStorage.getItem('BaseAddress'),
                        Object: oVProduct,
                        ControllerName: "VProduct",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    if(e.which===9){
                        debugger;
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].PID>0){
                            ResetAccountCode(nRowIndex);
                            InitializeKeyDownEvent(".dcodeclass");
                            return;
                        }
                    }
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].VProductID) > 0) {
                                var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ProductName", title: "Product Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winProduct',
                                    winclass: 'clsProduct',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblProduct',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'NameCode',
                                    windowTittle: 'Product List',
                                    TextBox:TextBox
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbutton(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".dcodeclass")
        {
            $('.dcodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var TextBox=$(this);
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.dcodeclass').index(this);
                    var txtdeptcode = $(this).val();
                    if(txtdeptcode===null || txtdeptcode==="")
                    {
                        alert("Please Press Enter With Department Code OR Name!");
                        return false;
                    }

                    if(txtdeptcode==="00")
                    {
                        SkipBusinessLayer(".dcodeclass");
                        return false;
                    }

                    var oDepartment = {
                        NameCode : txtdeptcode
                    };
                    var obj = {
                        BaseAddress: sessionStorage.getItem('BaseAddress'),
                        Object: oDepartment,
                        ControllerName: "Department",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    if(e.which===9){
                        debugger;
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].DptID>0){
                            ResetAccountCode(nRowIndex);
                            InitializeKeyDownEvent(".ahcodeclass");
                            return;
                        }
                    }
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].DepartmentID) > 0) {
                                var tblColums = []; var oColumn = { field: "Code", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "Name", title: "Department Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winDepartment',
                                    winclass: 'clsDepartment',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblDepartment',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'NameCode',
                                    windowTittle: 'Department List',
                                    TextBox:TextBox
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbutton(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".ahcodeclass")
        {
            $('.ahcodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var TextBox=$(this);
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.ahcodeclass').index(this);
                    var txtahcode = $(this).val();
                    if(txtahcode===null || txtahcode==="" || txtahcode==="0000000")
                    {
                        alert("Please Press Enter With ledger Code OR Name!");
                        return false;
                    }

                    var nVoucherTypeID = parseInt($('#cboVoucherType').val());
                    if(nVoucherTypeID <=0)
                    {
                        alert("Invalid Voucher Type!");
                        return false;
                    }
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var bIsDebit = $("#tblVoucherDetail").data('rows')[nRowIndex].IsDr;
                    var nBusinessUnitID = parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].BUID);
                    if(nBusinessUnitID <=0)
                    {
                        alert("Invalid Business Unit!");
                        return false;
                    }

                    var oChartsOfAccount = {
                        AccountHeadCodeName : txtahcode,
                        VoucherTypeID : nVoucherTypeID,
                        BusinessUnitID : nBusinessUnitID,
                        IsDebit : bIsDebit
                    };
                    var obj = {
                        BaseAddress: sessionStorage.getItem('BaseAddress'),
                        Object: oChartsOfAccount,
                        ControllerName: "Voucher",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    if(e.which===9){
                        debugger;
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].AHID>0){
                            var oVDobj = $("#tblVoucherDetail").data('rows')[nRowIndex];
                            EnableDisableControl(nRowIndex, oVDobj);
                            var sClassName = ".narrationclass";
                            var nInputBoxIndex=$('.ahcodeclass').index(this);
                            ResetAllInputBox(nInputBoxIndex, sClassName);
                            ResetAccountCode(nRowIndex);
                            InitializeKeyDownEvent(sClassName);
                            return;
                        }
                    }
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].AccountHeadID) > 0) {
                                var tblColums = []; var oColumn = { field: "AccountCode", title: "Code", width: 80, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "AccountHeadName", title: "Ledger Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ParentHeadName", title: "Sub Group", width: 140, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ComponentType", title: "Ledger Type", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "LedgerBalance", title: "Ledger Balance", width: 150, align: "right" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winChartsOfAccount',
                                    winclass: 'clsChartsOfAccount',
                                    winwidth: 750,
                                    winheight: 420,
                                    tableid: 'tblChartsOfAccount',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'AccountHeadCodeName',
                                    windowTittle: 'Ledger List',
                                    TextBox:TextBox
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbutton(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".narrationclass")
        {
            $('.narrationclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var sClassName="";
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    $("#tblVoucherDetail").data('rows')[nRowIndex].Detail = $(this).val();
                    var index = $('.narrationclass').index(this);
                    if($("#tblVoucherDetail").data('rows')[nRowIndex].IsDr)
                    {
                        ResetAllInputBox(index, '.debitclass');
                        sClassName=".debitclass";
                    }
                    else
                    {
                        ResetAllInputBox(index, '.creditclass');
                        sClassName=".creditclass";
                    }
                    InitializeKeyDownEvent(sClassName); return;
                }
            });
        }
        else if(classname===".debitclass")
        {
            $('.debitclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {

                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var sAmount=$(this).val();
                    var editOrNewEntry="";

                    var nAccountHeadID = $("#tblVoucherDetail").data('rows')[nRowIndex].AHID;
                    if(parseInt(nAccountHeadID) <= 0)
                    {
                        alert("Please Select an Ledger.");
                        return false;
                    }
                    var splitCurrencyAmount = SplitCurrencyAndAmount(nRowIndex,sAmount);
                    if(splitCurrencyAmount[0] == "WrongInput")
                    {
                        alert(splitCurrencyAmount[1]);
                        return false;
                    }
                    if($('#txtCRate').val()==null || $('#txtCRate').val()=="" || parseFloat($('#txtCRate').val())<=0)
                    {
                        alert("Please Enter Conversion Rate!");
                        return false;
                    }

                    var bcdebitclasscontroll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.bcdebitclass');
                    var nAmountInCurrency = parseFloat(splitCurrencyAmount[0]).toFixed(2);
                    var nAmountInBaseCurrency = (parseFloat(nAmountInCurrency)*parseFloat($('#txtCRate').val()));

                    $(this).val(formatPrice(nAmountInCurrency,null));
                    $(bcdebitclasscontroll).val(formatPrice(nAmountInBaseCurrency,null));

                    $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount = parseFloat(nAmountInCurrency);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].DrAmount=parseFloat(nAmountInCurrency);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CrAmount=parseFloat(0.00);

                    $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=nAmountInBaseCurrency;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].BCDrAmount=parseFloat(nAmountInBaseCurrency);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].BCCrAmount=parseFloat(0.00);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CID = parseInt($('#cboCurrency').val());
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CRate = parseFloat($('#txtCRate').val());
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CSymbol = GetSymbol();
                    RefreshSummery();
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
        else if(classname===".creditclass")
        {
            $('.creditclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {

                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var sAmount=$(this).val();

                    var nAccountHeadID = $("#tblVoucherDetail").data('rows')[nRowIndex].AHID;
                    if(parseInt(nAccountHeadID) <= 0)
                    {
                        alert("Please Select an Ledger.");
                        return false;
                    }
                    var splitCurrencyAmount = SplitCurrencyAndAmount(nRowIndex,sAmount);
                    if(splitCurrencyAmount[0] == "WrongInput")
                    {
                        alert(splitCurrencyAmount[1]);
                        return false;
                    }
                    if($('#txtCRate').val()==null || $('#txtCRate').val()=="" || parseFloat($('#txtCRate').val())<=0)
                    {
                        alert("Please Enter Conversion Rate!");
                        return false;
                    }
                    var bccreditclasscontroll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.bccreditclass');
                    var nAmountInCurrency = parseFloat(splitCurrencyAmount[0]).toFixed(2);
                    var nAmountInBaseCurrency = (parseFloat(nAmountInCurrency)*parseFloat($('#txtCRate').val()));

                    $(this).val(formatPrice(nAmountInCurrency,null));
                    $(bccreditclasscontroll).val(formatPrice(nAmountInBaseCurrency,null));

                    $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount = parseFloat(nAmountInCurrency);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].DrAmount=parseFloat(0.00);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CrAmount=parseFloat(nAmountInCurrency);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=nAmountInBaseCurrency;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].BCDrAmount=parseFloat(0.00);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].BCCrAmount=parseFloat(nAmountInBaseCurrency);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CID = parseInt($('#cboCurrency').val());
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CRate = parseFloat($('#txtCRate').val());
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CSymbol = GetSymbol();
                    RefreshSummery();
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
        else if(classname===".cccodeclass")
        {
            $('.cccodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var TextBox=$(this);
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.cccodeclass').index(this);
                    var txtcccode = $(this).val();
                    if(txtcccode===null || txtcccode==="" || txtcccode==="0000")
                    {
                        alert("Please Press Enter With Subledger/Costcenter Code OR Name!");
                        return false;
                    }
                    var parentDrCrIndex = 0;
                    for(var i=nRowIndex;i>=0;i--)
                    {
                        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit" || $("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                        {
                            parentDrCrIndex = i;
                            break;
                        }

                    }
                    var nAccountHeadID =parseInt($("#tblVoucherDetail").data('rows')[parentDrCrIndex].AHID);
                    var nBUID = parseInt($("#tblVoucherDetail").data('rows')[parentDrCrIndex].BUID);
                    if(nAccountHeadID===0)
                    {
                        alert("Please select an Account Head!");
                        return false;
                    }

                    var nVoucherTypeID = parseInt($('#cboVoucherType').val());
                    if(nVoucherTypeID <=0)
                    {
                        alert("Invalid Voucher Type!");
                        return false;
                    }

                    var oACCostCenter = {
                        NameCode : txtcccode,
                        VoucherTypeID : nVoucherTypeID,
                        AccountHeadID : nAccountHeadID,
                        BUID : nBUID
                    };

                    var obj = {
                        BaseAddress: sessionStorage.getItem('BaseAddress'),
                        Object: oACCostCenter,
                        ControllerName: "ACCostCenter",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    if(e.which===9){
                        debugger;
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].CCID>0){
                            var currentAmount = parseFloat(RemoveComma($('#tblVoucherDetail tr').eq(nRowIndex).find('.ccamountclass').val()));
                            var amount = AmountCalculation(nRowIndex,"Subledger",currentAmount);
                            amount = parseFloat(amount.toFixed(2));
                            $('#tblVoucherDetail tr').eq(nRowIndex).find('.ccamountclass').val(formatPrice(amount,null));
                            var nInputBoxIndex=$('.cccodeclass').index(this);
                            ResetAllInputBox(nInputBoxIndex, '.ccnarrationclass');
                            InitializeKeyDownEvent(".ccnarrationclass");
                            return;
                        }
                    }
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].ACCostCenterID) > 0) {
                                var tblColums = []; var oColumn = { field: "Code", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "Name", title: "Sub Ledger Name", width: 300, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "CategoryName", title: "Category", width: 150, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winCostCenter',
                                    winclass: 'clsCostCenter',
                                    winwidth: 650,
                                    winheight: 420,
                                    tableid: 'tblCostCenter',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'NameCode',
                                    windowTittle: 'Subledger/CostCenter List',
                                    TextBox:TextBox
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbutton(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".ccnarrationclass")
        {
            $('.ccnarrationclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var sClassName="";
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    $("#tblVoucherDetail").data('rows')[nRowIndex].Detail = $(this).val();
                    var index = $('.ccnarrationclass').index(this);
                    ResetAllInputBox(index, '.ccamountclass');
                    InitializeKeyDownEvent(".ccamountclass"); return;
                }
            });
        }
        else if(classname===".ccamountclass")
        {
            $('.ccamountclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var sCCAmount=$.trim(RemoveComma($(this).val()));
                    if(sCCAmount==""||sCCAmount==null ||isNaN(sCCAmount))
                    {
                        alert("Please enter amount!");
                        return false;
                    }
                    if(parseFloat(sCCAmount)<= 0)
                    {
                        alert("Please enter amount!");
                        return false;
                    }
                    sCCAmount = RemoveComma(sCCAmount);
                    sCCAmount = parseFloat(sCCAmount.toFixed(2));
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount=  parseFloat(sCCAmount);
                    var totalCreditOrDebitAmount = 0;
                    var totalCCAmount = 0;
                    var debitOrCredit = "";
                    for(var i = nRowIndex;i >= 0;i--)
                    {
                        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Subledger")
                        {
                            totalCCAmount = parseFloat(totalCCAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Credit";
                            break;
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Debit";
                            break;
                        }
                    }

                    totalCCAmount = parseFloat(totalCCAmount.toFixed(2));
                    totalCreditOrDebitAmount = parseFloat(totalCreditOrDebitAmount).toFixed(2);
                    if(parseFloat(totalCCAmount) > parseFloat(totalCreditOrDebitAmount))
                    {
                        alert("Sorry,Total Amount for this "+ debitOrCredit +" is " + totalCreditOrDebitAmount);
                        return false;
                    }
                    $(this).val(formatPrice(parseFloat(sCCAmount),null));
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
        else if(classname===".bttrtypeclass")
        {
            $('.bttrtypeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var TextBox=$(this);
                    var txtTrType = $(this).val();
                    var oVoucherBill = {VoucherBillID : 0 };
                    var obj = {
                        BaseAddress: sessionStorage.getItem('BaseAddress'),
                        Object: oVoucherBill,
                        ControllerName: "VoucherBill",
                        ActionName: "GetsTrType",
                        IsWinClose: false
                    };
                    if(e.which===9){
                        debugger;
                        var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt>0){
                            var currentAmount = parseFloat(RemoveComma($('#tblVoucherDetail tr').eq(nRowIndex).find('.bteffectamountclass').val()));
                            var amount = AmountCalculation(nRowIndex,"Bill",currentAmount);
                            amount = parseFloat(amount.toFixed(2));
                            $('#tblVoucherDetail tr').eq(nRowIndex).find('.bteffectamountclass').val(formatPrice(amount,null));
                            var nInputBoxIndex=$('.bttrtypeclass').index(this);
                            ResetAllInputBox(nInputBoxIndex, '.btbillnoclass');
                            InitializeKeyDownEvent(".btbillnoclass");
                            return;
                        }
                    }
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].EnumId) > 0) {
                                var tblColums = []; var oColumn = { field: "EnumValue", title: "Transaction Type", width: 400, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winBillTransactionType',
                                    winclass: 'clsBillTransactionType',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblBillTransactionType',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'EnumValue',
                                    windowTittle: 'Transaction Type List',
                                    TextBox:TextBox
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbutton(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".btbillnoclass")
        {
            $('.btbillnoclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
                    var nBTTypeInt = $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt;
                    var billNo = $(this).val();
                    var isDr = false;
                    var nAccountHeadID = 0;
                    var nBUID = 0;
                    for(var i=nRowIndex;i>=0;i--)
                    {
                        var sDR_CR = $("#tblVoucherDetail").data('rows')[i].DR_CR
                        if(sDR_CR == "Debit" || sDR_CR == "Credit")
                        {
                            isDr = $("#tblVoucherDetail").data('rows')[i].IsDr;
                            nAccountHeadID = $("#tblVoucherDetail").data('rows')[i].AHID;
                            nBUID = parseInt($("#tblVoucherDetail").data('rows')[i].BUID);
                            break;
                        }
                    }

                    var oVoucherBill = {
                        AccountHeadID : nAccountHeadID,
                        TrTypeInInt : parseInt(nBTTypeInt),
                        VoucherBillID : parseInt(_oVoucher.VoucherID),
                        SubLedgerID : $("#tblVoucherDetail").data('rows')[nRowIndex].CCID,
                        BillNo : billNo,
                        IsDebit : isDr,
                        BUID : nBUID
                    };
                    if(e.which===9){
                        debugger;
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].BillID>0){
                            var nInputBoxIndex = $(".btbillnoclass").index(this);
                            ResetAllInputBox(nInputBoxIndex, '.btnarrationclass');
                            InitializeKeyDownEvent(".btnarrationclass");
                            return;
                        }
                    }
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        url : sessionStorage.getItem('BaseAddress')+  "/VoucherBill/GetsBill",
                        traditional: true,
                        data:  JSON.stringify(oVoucherBill),
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            var oVoucherBills = jQuery.parseJSON(data);
                            _oVoucherBills = oVoucherBills;
                            RefreashBillNos(oVoucherBills);
                            $("#txtSearchByBillNo").val(billNo);
                            $('#winBillNo').window('open');
                            $("#btnCreateNewBill").hide();
                            $("#btnEditVoucherBill").hide();
                            if(parseInt(nBTTypeInt) == 1 || parseInt(nBTTypeInt) == 3)
                            {
                                $("#btnCreateNewBill").show();
                                $("#btnEditVoucherBill").show();
                            }
                            else
                            {
                                $("#btnCreateNewBill").hide();
                                $("#btnEditVoucherBill").hide();
                            }
                            $("#txtSearchByBillNo").select();
                        },
                        error: function (xhr, status, error) {
                            alert(error);
                        }
                    });
                }
            });
        }
        else if(classname===".btnarrationclass")
        {
            $('.btnarrationclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var sClassName="";
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    $("#tblVoucherDetail").data('rows')[nRowIndex].Detail = $(this).val();
                    var index = $('.btnarrationclass').index(this);
                    ResetAllInputBox(index, '.bteffectamountclass');
                    InitializeKeyDownEvent(".bteffectamountclass"); return;
                }
            });
        }
        else if(classname==".bteffectamountclass")
        {
            $('.bteffectamountclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var sBTAmount= RemoveComma($(this).val());
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');

                    if(sBTAmount==""||sBTAmount==null ||isNaN(sBTAmount))
                    {
                        alert("Please enter amount!");
                        return false;
                    }
                    if(parseFloat(sBTAmount)<= 0)
                    {
                        alert("Please enter amount!");
                        return false;
                    }

                    var totalCreditOrDebitAmount = 0;
                    var totalBTAmount = 0;
                    var debitOrCredit = "";
                    var CSymbol = "";


                    for(var i = nRowIndex-1;i >= 0;i--)
                    {
                        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Bill")
                        {
                            totalBTAmount = parseFloat(totalBTAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Credit";
                            CSymbol = $("#tblVoucherDetail").data('rows')[i].CSymbol;
                            break;
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Debit";
                            CSymbol = $("#tblVoucherDetail").data('rows')[i].CSymbol;
                            break;
                        }
                    }
                    totalBTAmount = parseFloat(totalBTAmount) + parseFloat(sBTAmount);
                    totalBTAmount = parseFloat(totalBTAmount.toFixed(2));
                    totalCreditOrDebitAmount = parseFloat(totalCreditOrDebitAmount).toFixed(2);


                    var nBTTypeInt = $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt;

                    if(parseInt(nBTTypeInt) == 1 || parseInt(nBTTypeInt) == 3)
                    {
                        var billTrType = "";
                        if(parseInt(nBTTypeInt)== 1)
                        {
                            billTrType = "New Bill";
                        }
                        else
                        {
                            billTrType = "Advance Bill";
                        }
                        var nBillAmount = $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount;
                        nBillAmount = parseFloat(nBillAmount.toFixed(2));
                        $(this).val(nBillAmount);
                        if(parseFloat(nBillAmount) != parseFloat(sBTAmount))
                        {
                            alert("Sorry, Cannot be changed. Amount for this " + billTrType+ " is " + nBillAmount);
                            return false;
                        }
                    }

                    var maxBillAmount = $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount;
                    maxBillAmount = parseFloat(maxBillAmount.toFixed(2));
                    if(parseFloat(sBTAmount) > parseFloat(maxBillAmount))
                    {
                        alert("Sorry, Maximum amount of this bill is " + CSymbol.toUpperCase() + " " + maxBillAmount);
                        return false;
                    }
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount=parseFloat(sBTAmount);


                    if(parseFloat(totalBTAmount) > parseFloat(parseFloat(totalCreditOrDebitAmount) + 0.01) )
                    {
                        alert("Sorry, Total Amount for this "+ debitOrCredit +" is "  + CSymbol.toUpperCase() + " " + totalCreditOrDebitAmount);
                        return false;
                    }
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
        else if(classname===".itemcodeclass")
        {
            $('.itemcodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var TextBox=$(this);
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.itemcodeclass').index(this);
                    var txtproductcode = $(this).val();
                    if(txtproductcode===null || txtproductcode==="" || txtproductcode==="00000")
                    {
                        alert("Please Press Enter With Product Code OR Name!");
                        $(this).select();
                        return false;
                    }

                    var oProduct = {
                        NameCode : txtproductcode
                    };
                    var obj = {
                        BaseAddress: sessionStorage.getItem('BaseAddress'),
                        Object: oProduct,
                        ControllerName: "Product",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    if(e.which===9){
                        debugger;
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].PID>0){
                            var nInputBoxIndex=$('.itemcodeclass').index(this);
                            ResetAllInputBox(nInputBoxIndex, '.itemworkingunitclass');
                            InitializeKeyDownEvent(".itemworkingunitclass");
                            return;
                        }
                    }
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].ProductID) > 0) {
                                var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ProductName", title: "Item Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winItem',
                                    winclass: 'clsItem',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblItem',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'NameCode',
                                    windowTittle: 'Item List',
                                    TextBox:TextBox
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbutton(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".itemworkingunitclass")
        {
            $('.itemworkingunitclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var TextBox=$(this);
                    var txtWorkingUnit = $(this).val();
                    var oWorkingUnit = {
                        LOUNameCode : txtWorkingUnit
                    }
                    var obj = {
                        BaseAddress: sessionStorage.getItem('BaseAddress'),
                        Object: oWorkingUnit,
                        ControllerName: "WorkingUnit",
                        ActionName: "GetsWorkingUnit",
                        IsWinClose: false
                    };
                    if(e.which===9){
                        debugger;
                        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].WUID>0){
                            var nInputBoxIndex=$('.itemworkingunitclass').index(this);
                            ResetAllInputBox(nInputBoxIndex, '.itemmeasurementunitclass');
                            InitializeKeyDownEvent(".itemmeasurementunitclass");
                            return;
                        }
                    }
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].WorkingUnitID) > 0) {
                                var tblColums = []; var oColumn = { field: "WorkingUnitCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "WorkingUnitName", title: "Store Name", width: 300, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winWorkingUnit',
                                    winclass: 'clsWorkingUnit',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblWorkingUnit',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'WorkingUnitName',
                                    windowTittle: 'Store List',
                                    TextBox:TextBox
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbutton(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".itemmeasurementunitclass")
        {
            $('.itemmeasurementunitclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var TextBox=$(this);
                    var txtMUnit = $(this).val();
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var productId = $("#tblVoucherDetail").data('rows')[nRowIndex].PID;
                    if(parseInt(productId)<=0)
                    {
                        alert("Please select Item!");
                        $(this).select();
                        return false;
                    }
                    var oMeasurementUnit = {
                        ProductID : productId
                    }
                    var obj = {
                        BaseAddress: sessionStorage.getItem('BaseAddress'),
                        Object: oMeasurementUnit,
                        ControllerName: "MeasurementUnit",
                        ActionName: "GetsMUnits",
                        IsWinClose: false
                    };
                    if(e.which===9){
                        debugger;
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].MUID>0){
                            var nInputBoxIndex=$('.itemmeasurementunitclass').index(this);
                            ResetAllInputBox(nInputBoxIndex, '.itemqtyclass');
                            InitializeKeyDownEvent(".itemqtyclass");
                            return;
                        }
                    }
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].MeasurementUnitID) > 0) {
                                var tblColums = []; var oColumn = { field: "UnitName", title: "Unit Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "Symbol", title: "Unit Symbol", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "UnitTypeInString", title: "Unit Type", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winMeasurementUnit',
                                    winclass: 'clsMeasurementUnit',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblMeasurementUnit',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'UnitName',
                                    windowTittle: 'Measurement Unit List',
                                    TextBox:TextBox
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbutton(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".itemqtyclass")
        {
            $('.itemqtyclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {

                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var irQty=$.trim($(this).val());
                    irQty = RemoveComma(irQty);
                    if(irQty==""||irQty==null ||isNaN(irQty))
                    {
                        alert("Please enter some Qty!");
                        return false;
                    }
                    if(parseFloat(irQty)<= 0)
                    {
                        alert("Please enter some Qty!");
                        return false;
                    }

                    var qty = parseFloat(irQty.toFixed(2));
                    $(this).val(formatPrice(qty,null));
                    $("#tblVoucherDetail").data('rows')[nRowIndex].Qty = qty;
                    var index = $('.itemqtyclass').index(this);
                    ResetAllInputBox(index, '.itemunitpriceclass');
                    InitializeKeyDownEvent(".itemunitpriceclass"); return;
                }
            });
        }
        else if(classname===".itemunitpriceclass")
        {
            $('.itemunitpriceclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var unitPrice = RemoveComma($(this).val());
                    if(unitPrice==""||unitPrice==null ||isNaN(unitPrice))
                    {
                        alert("Please enter Unit Price!");
                        return false;
                    }
                    if(parseFloat(unitPrice)<= 0)
                    {
                        alert("Please enter Unit Price!");
                        return false;
                    }

                    //unitPrice = Math.round(unitPrice * 10000) / 10000;
                    unitPrice = parseFloat(unitPrice.toFixed(3));
                    $(this).val(formatPrice(unitPrice,null));
                    $("#tblVoucherDetail").data('rows')[nRowIndex].UPrice = parseFloat(unitPrice);
                    var qty = $("#tblVoucherDetail").data('rows')[nRowIndex].Qty

                    var amount = parseFloat(unitPrice) * parseFloat(qty);
                    amount = parseFloat(amount.toFixed(2));
                    $('#tblVoucherDetail tr').eq(nRowIndex).find('.itemamountclass').val(formatPrice(parseFloat(amount),null));

                    var index = $('.itemunitpriceclass').index(this);
                    ResetAllInputBox(index, '.itemamountclass');
                    InitializeKeyDownEvent(".itemamountclass"); return;
                }
            });
        }
        else if(classname===".itemamountclass")
        {
            $('.itemamountclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var irAmount = RemoveComma($(this).val());
                    if(irAmount==""||irAmount==null ||isNaN(irAmount))
                    {
                        alert("Please give Amount!");
                        return false;
                    }
                    if(parseFloat(irAmount)<= 0)
                    {
                        alert("Please give Amount!");
                        return false;
                    }

                    //var fractionIrAmount=  Math.round(irAmount * 10000) / 10000; //this variable is used only for taking four digit after dot in unit price

                    irAmount = parseFloat(irAmount.toFixed(3));

                    $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount = irAmount;
                    var qty = $("#tblVoucherDetail").data('rows')[nRowIndex].Qty;
                    qty = parseFloat(qty.toFixed(3));
                    var unitPrice = parseFloat(irAmount) / parseFloat(qty);
                    unitPrice = Math.round(unitPrice * 10000) / 10000;

                    var txtUnitPrice= $('#tblVoucherDetail tr').eq(nRowIndex).find('.itemunitpriceclass');
                    txtUnitPrice.val(formatPrice(unitPrice,null));
                    $("#tblVoucherDetail").data('rows')[nRowIndex].UPrice = parseFloat(unitPrice);

                    var totalCreditOrDebitAmount = 0;
                    var totalIRAmount = 0;
                    var debitOrCredit = "";

                    for(var i = nRowIndex;i >= 0;i--)
                    {
                        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Inventory")
                        {
                            totalIRAmount = parseFloat(totalIRAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Credit";
                            break;
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Debit";
                            break;
                        }
                    }
                    totalIRAmount = parseFloat(totalIRAmount.toFixed(2));
                    if(parseFloat(totalIRAmount) > parseFloat(totalCreditOrDebitAmount))
                    {
                        alert("Sorry, Total Amount for this "+ debitOrCredit  +" is " + formatPrice(totalCreditOrDebitAmount, null) + ", But Item wise total is "+formatPrice(totalIRAmount, null) + ", please correct "+formatPrice((parseFloat(totalCreditOrDebitAmount)-parseFloat(totalIRAmount)), null)+"!!");
                        return false;
                    }
                    RefreshSummery();
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
        else if(classname===".chequenoclass")
        {
            $('.chequenoclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var TextBox=$(this);
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    _oThis=this;
                    var index = $('.chequenoclass').index(this);
                    $('.chequeamountclass').eq(index).prop('disabled',true);
                    //Ratin
                    if($.trim($(this).val()).toLowerCase()!='cash' && $.trim($(this).val()).toLowerCase()!='transfer'){


                        if(e.which===9){
                            if($("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID>0){
                                IdentifyConfiguration(nRowIndex,this);
                                return;
                            }
                        }

                        DynamicRefreshList([],"tblCheque");
                        $('#winCheque').window('open');
                        $("#txtChequeNo").select();
                    }
                    else if($.trim($(this).val()).toLowerCase()==='cash'){
                        $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID=0;
                        $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeNo='Cash';
                        $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeType=3;
                        $('.chequeamountclass').eq(index).prop('disabled',false);
                        ResetAllInputBox(index, '.chequeamountclass');
                        RefreshSummery();
                        InitializeKeyDownEvent(".chequeamountclass"); return;
                    }
                    else if($.trim($(this).val()).toLowerCase()==='transfer'){
                        $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID=0;
                        $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeNo='Transfer';
                        $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeType=4;
                        $('.chequeamountclass').eq(index).prop('disabled',false);
                        ResetAllInputBox(index, '.chequeamountclass');
                        RefreshSummery();
                        InitializeKeyDownEvent(".chequeamountclass"); return;
                    }
                }
            });
        }
        else if(classname===".chequeamountclass")
        {
            $('.chequeamountclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var irAmount = RemoveComma($(this).val());
                    if(irAmount==""||irAmount==null ||isNaN(irAmount))
                    {
                        alert("Please give Amount!");
                        return false;
                    }
                    if(parseFloat(irAmount)<= 0)
                    {
                        alert("Please give Amount!");
                        return false;
                    }


                    $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount = irAmount;

                    var totalCreditOrDebitAmount = 0;
                    var totalIRAmount = 0;
                    var debitOrCredit = "";

                    for(var i = nRowIndex;i >= 0;i--)
                    {
                        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Cheque")
                        {
                            totalIRAmount = parseFloat(totalIRAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Credit";
                            break;
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Debit";
                            break;
                        }
                    }
                    totalIRAmount = parseFloat(totalIRAmount.toFixed(2));
                    if(parseFloat(totalIRAmount) > parseFloat(totalCreditOrDebitAmount))
                    {
                        alert("Sorry, Total Amount for this "+ debitOrCredit  +" is " + formatPrice(totalCreditOrDebitAmount, null) + ", But Item wise total is "+formatPrice(totalIRAmount, null) + ", please correct "+formatPrice((parseFloat(totalCreditOrDebitAmount)-parseFloat(totalIRAmount)), null)+"!!");
                        return false;
                    }
                    RefreshSummery();
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
        else if(classname===".ordernoclass")
        {
            $('.ordernoclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    if($(this).val()===null || $(this).val()==="")
                    {
                        alert("Please enter 'Order No/Ref No/Customer Name/Do No/Remarks'!");
                        return false;
                    }
                    var TextBox=$(this);
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.chequenoclass').index(this);
                    $('.chequeamountclass').eq(index).prop('disabled',true);

                    if($.trim($(this).val()).toLowerCase()!=''){

                        if(e.which===9){
                            if(parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].OrderID)>0){
                                IdentifyConfiguration(nRowIndex,this);
                                return;
                            }
                        }

                        var oSaleOrder = {
                            SalesNo : $(this).val()
                        };
                        var obj = {
                            BaseAddress: sessionStorage.getItem('BaseAddress'),
                            Object: oSaleOrder,
                            ControllerName: "Voucher",
                            ActionName: "GetsOrderReferences",
                            IsWinClose: false
                        };

                        $.icsDataGets(obj, function (response) {
                            if (response.status && response.objs.length > 0) {
                                if (parseInt(response.objs[0].SaleOrderID) > 0) {
                                    var tblColums = []; var oColumn = { field: "RefNo", title: "Ref No", width: 125, align: "left" }; tblColums.push(oColumn);
                                    oColumn = { field: "SalesNo", title: "Sales No", width: 125, align: "left" }; tblColums.push(oColumn);
                                    oColumn = { field: "ProjectName", title: "Project Name", width: 100, align: "left" }; tblColums.push(oColumn);
                                    oColumn = { field: "ClientName", title: "Customer Name", width: 150, align: "left" }; tblColums.push(oColumn);
                                    oColumn = { field: "DONo", title: "DO No", width: 100, align: "left" }; tblColums.push(oColumn);
                                    oColumn = { field: "Note", title: "Remarks", width: 150, align: "left" }; tblColums.push(oColumn);
                                    var oPickerParam = {
                                        winid: 'winSaleOrder',
                                        winclass: 'clsSaleOrder',
                                        winwidth: 800,
                                        winheight: 420,
                                        tableid: 'tblSaleOrder',
                                        tablecolumns: tblColums,
                                        datalist: response.objs,
                                        multiplereturn: false,
                                        searchingbyfieldName: 'SalesNo',
                                        windowTittle: 'Sale Order List',
                                        TextBox:TextBox
                                    };
                                    $.icsPicker(oPickerParam);
                                    IntializePickerbutton(oPickerParam);
                                }
                                else { alert(response.objs[0].ErrorMessage); }
                            }
                            else
                            {
                                alert("Data Not Found!");
                            }
                        });
                    }
                    else
                    {
                        $("#tblVoucherDetail").data('rows')[nRowIndex].OrderID=0;
                        $("#tblVoucherDetail").data('rows')[nRowIndex].SalesNo='';
                        $("#tblVoucherDetail").data('rows')[nRowIndex].ProjectName='';
                        ResetAllInputBox(index, '.orderremarksclass');
                        RefreshSummery();
                        InitializeKeyDownEvent(".orderremarksclass"); return;
                    }
                }
            });
        }
        else if(classname===".orderremarksclass")
        {
            $('.orderremarksclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.orderremarksclass').index(this);

                    $("#tblVoucherDetail").data('rows')[nRowIndex].ORemarks=$(this).val();
                    ResetAllInputBox(index, '.orderamountclass');
                    RefreshSummery();
                    InitializeKeyDownEvent(".orderamountclass"); return;
                }
            });
        }
        else if(classname===".orderamountclass")
        {
            $('.orderamountclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var OrderAmount = RemoveComma($(this).val());
                    if(OrderAmount==""||OrderAmount==null ||isNaN(OrderAmount))
                    {
                        alert("Please give Amount!");
                        return false;
                    }
                    if(parseFloat(OrderAmount)<= 0)
                    {
                        alert("Please give Amount!");
                        return false;
                    }

                    $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount = parseFloat(OrderAmount);

                    var totalCreditOrDebitAmount = 0;
                    var totalOrderAmount = 0;
                    var debitOrCredit = "";

                    for(var i = nRowIndex;i >= 0;i--)
                    {
                        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Order Ref")
                        {
                            totalOrderAmount = parseFloat(totalOrderAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Credit";
                            break;
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Debit";
                            break;
                        }
                    }
                    totalOrderAmount = parseFloat(totalOrderAmount.toFixed(2));
                    if(parseFloat(totalOrderAmount) > parseFloat(totalCreditOrDebitAmount))
                    {
                        alert("Sorry, Total Amount for this "+ debitOrCredit  +" is " + formatPrice(totalCreditOrDebitAmount, null) + ", But sales wise total is "+formatPrice(totalOrderAmount, null) + ", please correct "+formatPrice((parseFloat(totalCreditOrDebitAmount)-parseFloat(totalOrderAmount)), null)+"!!");
                        return false;
                    }
                    RefreshSummery();
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
    }

    function SkipBusinessLayer(classname)
    {
        if(classname===".acodeclass")
        {
            var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
            var acodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
            var acodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.acodeclass');
            $(acodeControll).val("00");
            $(acodeControll).removeClass("textboxstyle");
            $(acodeControll).addClass("highlight");
            $(acodeControll).addClass("textboxstyle2");
            var nInputBoxIndex=$('.acodeclass').index(acodeControll);
            ResetAllInputBox(nInputBoxIndex, '.pcodeclass');
            $("#tblVoucherDetail").data('rows')[nRowIndex].AID=0;
            $("#tblVoucherDetail").data('rows')[nRowIndex].ACode="00";
            $("#tblVoucherDetail").data('rows')[nRowIndex].AName="";
            $("#tblVoucherDetail").data('rows')[nRowIndex].ASName="";
            var oDVObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
            var sNewAccountCode = MakeAccountCode(oDVObj);
            $("#tblVoucherDetail").data('rows')[nRowIndex].AccountCode=sNewAccountCode;
            var accountcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountcodeclass');
            $(accountcodeControll).val(sNewAccountCode);
            InitializeKeyDownEvent(".pcodeclass"); return;
        }
        else if(classname===".zcodeclass")
        {
            var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
            var zcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
            var zcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.zcodeclass');
            $(zcodeControll).val("00");
            $(zcodeControll).removeClass("textboxstyle");
            $(zcodeControll).addClass("highlight");
            $(zcodeControll).addClass("textboxstyle2");
            var nInputBoxIndex=$('.zcodeclass').index(zcodeControll);
            ResetAllInputBox(nInputBoxIndex, '.pcodeclass');
            $("#tblVoucherDetail").data('rows')[nRowIndex].ZID=0;
            $("#tblVoucherDetail").data('rows')[nRowIndex].ZCode="00";
            $("#tblVoucherDetail").data('rows')[nRowIndex].ZName="";
            $("#tblVoucherDetail").data('rows')[nRowIndex].ZSName="";
            var oDVObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
            var sNewAccountCode = MakeAccountCode(oDVObj);
            $("#tblVoucherDetail").data('rows')[nRowIndex].AccountCode=sNewAccountCode;
            var accountcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountcodeclass');
            $(accountcodeControll).val(sNewAccountCode);
            InitializeKeyDownEvent(".pcodeclass"); return;
        }
        else if(classname===".scodeclass")
        {
            var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
            var scodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
            var scodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.scodeclass');
            $(scodeControll).val("0000");
            $(scodeControll).removeClass("textboxstyle");
            $(scodeControll).addClass("highlight");
            $(scodeControll).addClass("textboxstyle2");
            var nInputBoxIndex=$('.scodeclass').index(scodeControll);
            ResetAllInputBox(nInputBoxIndex, '.pcodeclass');
            $("#tblVoucherDetail").data('rows')[nRowIndex].SID=0;
            $("#tblVoucherDetail").data('rows')[nRowIndex].SCode="0000";
            $("#tblVoucherDetail").data('rows')[nRowIndex].SName="";
            $("#tblVoucherDetail").data('rows')[nRowIndex].SSName="";
            var oDVObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
            var sNewAccountCode = MakeAccountCode(oDVObj);
            $("#tblVoucherDetail").data('rows')[nRowIndex].AccountCode=sNewAccountCode;
            var accountcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountcodeclass');
            $(accountcodeControll).val(sNewAccountCode);
            InitializeKeyDownEvent(".pcodeclass"); return;
        }
        else if(classname===".pcodeclass")
        {
            var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
            var pcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
            var pcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.pcodeclass');
            $(pcodeControll).val("00000");
            $(pcodeControll).removeClass("textboxstyle");
            $(pcodeControll).addClass("highlight");
            $(pcodeControll).addClass("textboxstyle2");
            var nInputBoxIndex=$('.pcodeclass').index(pcodeControll);
            ResetAllInputBox(nInputBoxIndex, '.dcodeclass');
            $("#tblVoucherDetail").data('rows')[nRowIndex].PID=0;
            $("#tblVoucherDetail").data('rows')[nRowIndex].PCode="00000";
            $("#tblVoucherDetail").data('rows')[nRowIndex].PName="";
            $("#tblVoucherDetail").data('rows')[nRowIndex].PSName="";
            var oDVObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
            var sNewAccountCode = MakeAccountCode(oDVObj);
            $("#tblVoucherDetail").data('rows')[nRowIndex].AccountCode=sNewAccountCode;
            var accountcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountcodeclass');
            $(accountcodeControll).val(sNewAccountCode);
            InitializeKeyDownEvent(".dcodeclass"); return;
        }
        else if(classname===".dcodeclass")
        {
            var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
            var dcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
            var dcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.dcodeclass');
            $(dcodeControll).val("00");
            $(dcodeControll).removeClass("textboxstyle");
            $(dcodeControll).addClass("highlight");
            $(dcodeControll).addClass("textboxstyle2");
            var nInputBoxIndex=$('.dcodeclass').index(dcodeControll);
            ResetAllInputBox(nInputBoxIndex, '.ahcodeclass');
            $("#tblVoucherDetail").data('rows')[nRowIndex].DptID=0;
            $("#tblVoucherDetail").data('rows')[nRowIndex].DCode="00";
            $("#tblVoucherDetail").data('rows')[nRowIndex].DName="";
            $("#tblVoucherDetail").data('rows')[nRowIndex].DSName="";
            var oDVObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
            var sNewAccountCode = MakeAccountCode(oDVObj);
            $("#tblVoucherDetail").data('rows')[nRowIndex].AccountCode=sNewAccountCode;
            var accountcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountcodeclass');
            $(accountcodeControll).val(sNewAccountCode);
            InitializeKeyDownEvent(".ahcodeclass"); return;
        }
    }

    function RemoveComma(stringValue)
    {
        var stringValues = stringValue.split(',');
        var result = "";
        if(stringValues.length <= 0)
        {
            result = stringValue;
        }
        else
        {
            for(var i=0;i<stringValues.length;i++)
            {
                result = result + stringValues[i];
            }
        }
        return parseFloat(result);
    }

    function IdentifyConfiguration(nRowIndex,InputControl) //Identify what will be the parameter of function "AddVoucherDetail"
    {
        debugger;
        //VoucherDetail = 0
        //CostCenter = 1
        //BillReference = 2
        //ChequeReference = 3
        //InventoryReference = 4
        //SubledgerBill = 5
        //SubledgerCheque = 6
        //OrderReference =7

        var parentIndex = 0;
        var bIsSubLedgerBillApply=false;
        var bIsSubLedgerChequeApply=false;
        var oCurrentObj=$("#tblVoucherDetail").data('rows')[nRowIndex];
        var nRowCount=$("#tblVoucherDetail").data('rows').length;
        var getAmounts = GetTotalAmounts();
        getAmounts = getAmounts.split(",");

        if(parseInt(oCurrentObj.ObjTypeInt)===1) //CostCenter = 1
        {
            if(oCurrentObj.IsBTAply || oCurrentObj.IsChkAply)
            {
                bIsSubLedgerBillApply=oCurrentObj.IsBTAply;
                bIsSubLedgerChequeApply=oCurrentObj.IsChkAply;
                parentIndex = nRowIndex;
            }
            else
            {
                for(var i=nRowIndex ; i>=0;i--)
                {
                    if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 0)
                    {
                        parentIndex = i;
                        break;
                    }
                }
            }
        }
        else if(parseInt(oCurrentObj.ObjTypeInt)===5) //SubledgerBill = 5
        {
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1)//CostCenter = 1
                {
                    bIsSubLedgerBillApply=true;
                    parentIndex = i;
                    break;
                }
            }

            var nSLBillGapAmount=0; var nSubledgerBillTotal=0;
            var ParentObj=$("#tblVoucherDetail").data('rows')[parentIndex];
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1 && $("#tblVoucherDetail").data('rows')[i].IsBTAply)//CostCenter = 1
                {
                    break;
                }
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 5 && parseInt($("#tblVoucherDetail").data('rows')[i].CCID)>0)//SubledgerBill = 5
                {
                    nSubledgerBillTotal=nSubledgerBillTotal+ parseFloat(parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount));
                }

            }
            nSLBillGapAmount = parseFloat(ParentObj.CAmount) - parseFloat(nSubledgerBillTotal);
            nSLBillGapAmount = parseFloat(nSLBillGapAmount.toFixed(2));
            if(nSLBillGapAmount<0)
            {
                nSLBillGapAmount=nSLBillGapAmount*(-1);
            }
            if(nSLBillGapAmount<=0.01)
            {
                bIsSubLedgerBillApply=false;
                if(ParentObj.IsChkAply)
                {
                    bIsSubLedgerChequeApply=true;
                }
                else{
                    for(var i=nRowIndex ; i>=0;i--)
                    {
                        if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 0)
                        {
                            parentIndex = i;
                            break;
                        }
                    }
                }
            }
        }
        else if(parseInt(oCurrentObj.ObjTypeInt)===6) //SubledgerCheque = 6
        {
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1)//CostCenter = 1
                {
                    bIsSubLedgerChequeApply=true;
                    parentIndex = i;
                    break;
                }
            }

            var nSLChequeGapAmount=0; var nSubledgerChequeTotal=0;
            var ParentObj=$("#tblVoucherDetail").data('rows')[parentIndex];
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1 && $("#tblVoucherDetail").data('rows')[i].IsChkAply)//CostCenter = 1
                {
                    break;
                }
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 6 && parseInt($("#tblVoucherDetail").data('rows')[i].CCID)>0)//SubledgerCheque = 6
                {
                    nSubledgerChequeTotal=nSubledgerChequeTotal+ parseFloat(parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount))
                }
            }
            nSLChequeGapAmount = parseFloat(ParentObj.CAmount) - parseFloat(nSubledgerChequeTotal);
            nSLChequeGapAmount = parseFloat(nSLChequeGapAmount.toFixed(2));
            if(nSLChequeGapAmount<0)
            {
                nSLChequeGapAmount=nSLChequeGapAmount*(-1);
            }
            if(nSLChequeGapAmount<=0.01)
            {
                for(var i=nRowIndex ; i>=0;i--)
                {
                    if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 0)
                    {
                        bIsSubLedgerChequeApply=false;
                        parentIndex = i;
                        break;
                    }
                }
            }
        }
        else
        {
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 0)
                {
                    parentIndex = i;
                    break;
                }
            }
        }


        var ParentObj=$("#tblVoucherDetail").data('rows')[parentIndex];
        var bIsCostCenterApply = ParentObj.IsCCAply;
        var bIsBillRefApply = ParentObj.IsBTAply;
        var bIsChequeApply = ParentObj.IsChkAply;
        var bIsInventoryApply = ParentObj.IsIRAply;
        var bIsOrderaAply = ParentObj.IsOrderaAply;

        var nCCGapAmount = parseFloat(parseFloat(getAmounts[0]).toFixed(2)) - parseFloat(parseFloat(getAmounts[1]).toFixed(2));
        nCCGapAmount = parseFloat(nCCGapAmount.toFixed(2));
        if(nCCGapAmount<0)
        {
            nCCGapAmount=nCCGapAmount*(-1);
        }

        var nSLBillGapAmount=0; var nSubledgerBillTotal=0;
        if(bIsSubLedgerBillApply)
        {
            debugger;
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt(oCurrentObj.ObjTypeInt)===1 || parseInt(oCurrentObj.ObjTypeInt)===5) //CostCenter = 1, SubledgerBill = 5
                {
                    if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1 && $("#tblVoucherDetail").data('rows')[i].IsBTAply)//CostCenter = 1
                    {
                        break;
                    }
                    if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 5 && parseInt($("#tblVoucherDetail").data('rows')[i].CCID)>0)//SubledgerBill = 5
                    {
                        nSubledgerBillTotal=nSubledgerBillTotal+ parseFloat(parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount))
                    }
                }
            }
            nSLBillGapAmount = parseFloat(ParentObj.CAmount) - parseFloat(nSubledgerBillTotal);
            nSLBillGapAmount = parseFloat(nSLBillGapAmount.toFixed(2));
            if(nSLBillGapAmount<0)
            {
                nSLBillGapAmount=nSLBillGapAmount*(-1);
            }
        }

        var nSLChequeGapAmount=0; var nSubledgerChequeTotal=0;
        if(bIsSubLedgerChequeApply)
        {
            debugger;
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt(oCurrentObj.ObjTypeInt)===1 || parseInt(oCurrentObj.ObjTypeInt)===6) //CostCenter = 1, SubledgerCheque = 6
                {
                    if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1 && $("#tblVoucherDetail").data('rows')[i].IsChkAply)//CostCenter = 1
                    {
                        break;
                    }
                    if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 6 && parseInt($("#tblVoucherDetail").data('rows')[i].CCID)>0)//SubledgerCheque = 6
                    {
                        nSubledgerChequeTotal=nSubledgerChequeTotal+ parseFloat(parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount))
                    }
                }

            }
            nSLChequeGapAmount = parseFloat(ParentObj.CAmount) - parseFloat(nSubledgerChequeTotal);
            nSLChequeGapAmount = parseFloat(nSLChequeGapAmount.toFixed(2));
            if(nSLChequeGapAmount<0)
            {
                nSLChequeGapAmount=nSLChequeGapAmount*(-1);
            }
        }

        var nBTGapAmount = parseFloat(parseFloat(getAmounts[0]).toFixed(2)) - parseFloat(parseFloat(getAmounts[2]).toFixed(2));
        nBTGapAmount = parseFloat(nBTGapAmount.toFixed(2));
        if(nBTGapAmount<0)
        {
            nBTGapAmount=nBTGapAmount*(-1);
        }

        var nChkGapAmount = parseFloat(parseFloat(getAmounts[0]).toFixed(2)) - parseFloat(parseFloat(getAmounts[3]).toFixed(2));
        nChkGapAmount = parseFloat(nChkGapAmount.toFixed(2));
        if(nChkGapAmount<0)
        {
            nChkGapAmount=nChkGapAmount*(-1);
        }

        var nIRGapAmount = parseFloat(parseFloat(getAmounts[0]).toFixed(2)) - parseFloat(parseFloat(getAmounts[4]).toFixed(2));
        nIRGapAmount = parseFloat(nIRGapAmount.toFixed(2));
        if(nIRGapAmount<0)
        {
            nIRGapAmount=nIRGapAmount*(-1);
        }

        var nOrderGapAmount = parseFloat(parseFloat(getAmounts[0]).toFixed(2)) - parseFloat(parseFloat(getAmounts[5]).toFixed(2));
        nOrderGapAmount = parseFloat(nOrderGapAmount.toFixed(2));
        if(nOrderGapAmount<0)
        {
            nOrderGapAmount=nOrderGapAmount*(-1);
        }


        if(bIsCostCenterApply == Boolean(1) && parseFloat(nCCGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 1,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nExplanationType=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nExplanationType!=1)
                {
                    var oVDObjs = PushObject(nRowIndex, 1,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleCostCenter(InputControl);
        }
        else if(bIsSubLedgerBillApply == Boolean(1) && parseFloat(nSLBillGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 5,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nObjTypeInt!=5)
                {
                    var oVDObjs = PushObject(nRowIndex, 5,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleBillTransaction(InputControl);
        }
        else if(bIsBillRefApply == Boolean(1) && parseFloat(nBTGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 2,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nObjTypeInt!=2)
                {
                    var oVDObjs = PushObject(nRowIndex, 2,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleBillTransaction(InputControl);
        }
        else if(bIsSubLedgerChequeApply == Boolean(1) && parseFloat(nSLChequeGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 6,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nObjTypeInt!=6)
                {
                    var oVDObjs = PushObject(nRowIndex, 6,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleChequeReference(InputControl);
        }
        else if(bIsChequeApply == Boolean(1) && parseFloat(nChkGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 3,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nObjTypeInt!=3)
                {
                    var oVDObjs = PushObject(nRowIndex, 3,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleChequeReference(InputControl);
        }
        else if(bIsInventoryApply == Boolean(1) && parseFloat(nIRGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 4,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nObjTypeInt!=4)
                {
                    var oVDObjs = PushObject(nRowIndex, 4,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleInventoryReference(InputControl);
        }
        else if(bIsOrderaAply == Boolean(1) && parseFloat(nOrderGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 7,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nObjTypeInt!=7)
                {
                    var oVDObjs = PushObject(nRowIndex, 7,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleOrderReference(InputControl);
        }
        else
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 0);
                RemakeGrid(oVDObjs);
            }
            ResetAllRows();
            GridStyleVoucherDetail(InputControl);
        }
    }

    function GetTotalSLBTAmounts()
    {
        var rowCount = $("#tblVoucherDetail").data("selectedIndex");
        var totalBTAmount = 0;

        var maxAmount = 0;
        for(var i=rowCount;i>=0;i--)
        {
            if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Subledger" && $("#tblVoucherDetail").data('rows')[i].IsBTAply)
            {
                maxAmount = parseFloat(maxAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                break;
            }
            if($("#tblVoucherDetail").data('rows')[i].DR_CR == "SL Bill" && $("#tblVoucherDetail").data('rows')[i].CCID > 0)
            {
                totalBTAmount = parseFloat(totalBTAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
            }
        }
        return parseFloat(maxAmount.toFixed(2))+','+totalBTAmount.toFixed(2);
    }

    function GetTotalAmounts()
    {
        var rowCount = $("#tblVoucherDetail").data("selectedIndex");
        var totalCCAmount = 0;
        var totalBTAmount = 0;
        var totalChequeAmount = 0;
        var totalIRAmount = 0;
        var totalOrderRefAmount=0;

        var maxAmount = 0;
        for(var i=rowCount;i>=0;i--)
        {
            if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Subledger" )
            {
                totalCCAmount = parseFloat(totalCCAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
            }
            else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Bill" && $("#tblVoucherDetail").data('rows')[i].CCID <= 0)
            {
                totalBTAmount = parseFloat(totalBTAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
            }
            else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Cheque" && $("#tblVoucherDetail").data('rows')[i].CCID <= 0)
            {
                totalChequeAmount = parseFloat(totalChequeAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
            }
            else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Inventory" )
            {
                totalIRAmount = parseFloat(totalIRAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
            }
            else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Order Ref" )
            {
                totalOrderRefAmount = parseFloat(totalOrderRefAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
            }
            else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
            {
                maxAmount = parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                break;
            }
            else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
            {
                maxAmount = parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                break;
            }
        }
        totalCCAmount = parseFloat(totalCCAmount.toFixed(2));
        totalBTAmount = parseFloat(totalBTAmount.toFixed(2));
        totalChequeAmount = parseFloat(totalChequeAmount.toFixed(2));
        totalIRAmount = parseFloat(totalIRAmount.toFixed(2));
        totalOrderRefAmount = parseFloat(totalOrderRefAmount.toFixed(2));
        maxAmount = parseFloat(maxAmount.toFixed(2));

        return parseFloat(maxAmount) + ',' + parseFloat(totalCCAmount) + ',' + parseFloat(totalBTAmount) + ','+ parseFloat(totalChequeAmount) + ',' + parseFloat(totalIRAmount)+','+parseFloat(totalOrderRefAmount);
    }

    function AmountCalculation(nRowIndex,ReferenceType,currentAmount)
    {
        debugger;
        var totalRow = $("#tblVoucherDetail tr").length;
        var refAmount = 0;
        var calculateAmounts = GetTotalAmounts();
        calculateAmounts = calculateAmounts.split(",");
        var SLBTAmounts=GetTotalSLBTAmounts();
        SLBTAmounts=SLBTAmounts.split(',');
        var previousTotalAmount = 0;
        var oCurrentObj=$("#tblVoucherDetail").data('rows')[nRowIndex];
        if(isNaN(currentAmount))
        {
            currentAmount = 0;
        }
        if(ReferenceType == "Subledger")
        {
            previousTotalAmount = parseFloat(calculateAmounts[1]);
        }
        else if(ReferenceType == "Bill")
        {
            previousTotalAmount = parseFloat(calculateAmounts[2]);
        }
        else if(ReferenceType == "Cheque")
        {
            previousTotalAmount = parseFloat(calculateAmounts[3]);
        }
        else if(ReferenceType == "Inventory")
        {
            previousTotalAmount = parseFloat(calculateAmounts[4]);
        }
        else if(ReferenceType == "Order Ref")
        {
            previousTotalAmount = parseFloat(calculateAmounts[5]);
        }
        var minIndex = 0;
        var maxIndex = 0;
        for(var i=nRowIndex ; i>=0;i--)
        {
            if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
            {
                minIndex = i;
                break;
            }
            else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
            {
                minIndex = i;
                break;
            }
        }
        for(var i=nRowIndex ; i < totalRow;i ++)
        {
            if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
            {
                maxIndex = i;
                break;
            }
            else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
            {
                maxIndex = i;
                break;
            }
        }


        if(maxIndex == 0)
        {
            maxIndex = totalRow;
        }
        for(var i = minIndex ;  i < maxIndex ; i++)
        {
            if($("#tblVoucherDetail").data('rows')[i].DR_CR === ReferenceType )
            {
                if(i != nRowIndex)
                {
                    refAmount = parseFloat(refAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                }
            }
        }
        var resultAmount =  0;
        resultAmount =  RemainingDrOrCrAmount(parseFloat(calculateAmounts[0]),parseFloat(refAmount));
        return parseFloat(resultAmount);
    }

    function RemainingDrOrCrAmount(drOrCrTotalAmount,referenceTotalAmount)
    {
        var remainingAmount = 0;
        remainingAmount = parseFloat(drOrCrTotalAmount)- parseFloat(referenceTotalAmount);
        return parseFloat(remainingAmount);
    }

    function CheckDuplicateOrNot(searchItem,configType)
    {
        var rowCount = $("#tblVoucherDetail").data("selectedIndex");
        var totalCount = $('#tblVoucherDetail tr').length;
        var ccIDs = [];
        var irIDs = [];
        var chequeIDs = [];
        var btIDs = [];
        var OrderIDs = [];
        var currentID = 0;
        var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
        if(parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===1)//Subledger
        {
            currentID = $("#tblVoucherDetail").data('rows')[nRowIndex].CCID;
        }
        else if(parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===2 || parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===5)//Bill
        {
            currentID = $("#tblVoucherDetail").data('rows')[nRowIndex].BillID;
        }
        else if(parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===3 || parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===6)//Cheque
        {
            currentID = $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID;
        }
        else if(parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===4)//Inventory
        {
            currentID = $("#tblVoucherDetail").data('rows')[nRowIndex].PID;
        }
        else if(parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===7)//Inventory
        {
            currentID = $("#tblVoucherDetail").data('rows')[nRowIndex].OrderID;
        }

        var currentExplanationDescription = $("#tblVoucherDetail").data('rows')[nRowIndex].Detail;
        if(parseInt(searchItem) == parseInt(currentID) || currentExplanationDescription == searchItem)
        {
            result = "Not Duplicate";
        }
        else
        {
            for(var i=rowCount;i>=0;i--)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===1)//Subledger
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].CCID);
                    if(indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        ccIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===2 || parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===5)//Bill
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].BillID);
                    if(indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        btIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===3 || parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===6)//Cheque
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].ChequeID);
                    if(indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        chequeIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===4)//Inventory
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].PID);
                    if($("#tblVoucherDetail").data('rows')[i].DR_CR == "IR" && indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        irIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===7)//Order Ref
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].OrderID);
                    if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Order Ref" && indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        OrderIDs.push(parseInt(indexExplanationID));
                    }
                }
                else
                {
                    break;
                }

            }
            for(var i=rowCount+1;i<totalCount;i++)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===1)//Subledger
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].CCID);
                    if(indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        ccIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===2 || parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===5)//Bill
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].BillID);
                    if(indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        btIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===3 || parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===6)//Cheque
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].ChequeID);
                    if(indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        chequeIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===4)//Inventory
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].PID);
                    if($("#tblVoucherDetail").data('rows')[i].DR_CR == "IR" && indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        irIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===7)//Order Ref
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].OrderID);
                    if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Order Ref" && indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        OrderIDs.push(parseInt(indexExplanationID));
                    }
                }
                else
                {
                    break;
                }
            }
            var result = "Not Duplicate";
            if(configType == "Subledger")
            {
                for(var i=0;i<ccIDs.length;i++)
                {
                    if(parseInt(searchItem) == parseInt(ccIDs[i]))
                    {
                        result = "Duplicate";
                        break;
                    }
                    else
                    {
                        result = "Not Duplicate";
                    }
                }
            }
            else if(configType == "Bill" || configType == "SL Bill")
            {
                for(var i=0;i<btIDs.length;i++)
                {
                    if(parseInt(searchItem) == parseInt(btIDs[i]))
                    {
                        result = "Duplicate";
                        break;
                    }
                    else
                    {
                        result = "Not Duplicate";
                    }
                }
            }
            else if(configType == "Cheque" || configType == "SL Cheque")
            {
                for(var i=0;i<chequeIDs.length;i++)
                {
                    if(parseInt(searchItem) == parseInt(chequeIDs[i]))
                    {
                        result = "Duplicate";
                        break;
                    }
                    else
                    {
                        result = "Not Duplicate";
                    }
                }
            }
            else if(configType == "Inventory")
            {
                for(var i=0;i<irIDs.length;i++)
                {

                    if(parseInt(searchItem) == parseInt(irIDs[i]))
                    {
                        result = "Duplicate";
                        break;
                    }
                    else
                    {
                        result = "Not Duplicate";
                    }
                }
            }
            else if(configType == "Order Ref")
            {
                for(var i=0;i<OrderIDs.length;i++)
                {

                    if(parseInt(searchItem) == parseInt(OrderIDs[i]))
                    {
                        result = "Duplicate";
                        break;
                    }
                    else
                    {
                        result = "Not Duplicate";
                    }
                }
            }
        }
        return result;
    }

    function CalculateIRAmount(qty,unitPrice)
    {
        var amount = parseFloat(qty) * parseFloat(unitPrice);
        return parseFloat(amount);
    }

    function DateValidation(InputDate)
    {
        var MonthArray = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
        var sInputDate = InputDate.split(" ");
        var dateLength =  sInputDate[0].length;
        var monthLength = sInputDate[1].length;
        var trimYear = $.trim(sInputDate[2]);
        var yearLength =  trimYear.length;
        var monthNumber=0;
        var result = "";
        if(parseInt(dateLength) != 2 || parseInt(monthLength) != 3 || parseInt(yearLength) != 4 || parseInt(trimYear) < 2000)
        {
            result = "Invalid Date";
        }
        if(result != "Invalid Date")
        {
            for(var i=0; i<MonthArray.length; i++)
            {
                var makeUpperCase = sInputDate[1].toUpperCase();
                if(makeUpperCase == MonthArray[i].toUpperCase())
                {
                    result = "Valid Month";
                    monthNumber = (i+1);
                    break;
                }
                else
                {
                    result = "Invalid Date";
                }
            }
        }
        if(result == "Valid Month")
        {
            var year = parseInt(trimYear);
            var month = monthNumber;
            var days = Math.round(((new Date(year, month))-(new Date(year, month-1)))/86400000);
            if(parseInt(sInputDate[0]) < 0 || parseInt(sInputDate[0]) > days)
            {
                result = "Invalid Date";
            }
            else
            {
                result = "Valid Date";
            }
        }
        if(result == "Valid Date")
        {
            var sInputDate = InputDate.split(" ");
            sInputDate[1] = CapitaliseFirstLetter(sInputDate[1]);
            result = sInputDate[0] + " " + sInputDate[1] + " " + sInputDate[2];
        }
        return result;
    }

    function CapitaliseFirstLetter(string)
    {
        var result = string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
        return result;
    }

    function PushObject(nCurrentRowIndex, nExplationType, ParentObj)
    {
        var oVDObjs=[];
        var oTempVDObjs= $("#tblVoucherDetail").data('rows');
        for(var i=0; i<oTempVDObjs.length; i++)
        {
            oVDObjs.push(oTempVDObjs[i]);
            if(i==nCurrentRowIndex)
            {
                var oVDObj=NewObject(nExplationType);
                if(nExplationType===1){
                    oVDObj.AHID=ParentObj==null?0:ParentObj.AHID;
                    oVDObj.AHCode=ParentObj==null?'0000000':ParentObj.AHCode;
                    oVDObj.AHName=ParentObj==null?'':ParentObj.AHName;
                }
                if(nExplationType===2 || nExplationType===5){
                    oVDObj.AHID=ParentObj==null?0:ParentObj.AHID;
                    oVDObj.AHCode=ParentObj==null?'0000000':ParentObj.AHCode;
                    oVDObj.AHName=ParentObj==null?'':ParentObj.AHName;

                    oVDObj.CCID=ParentObj==null?0:ParentObj.CCID;
                    oVDObj.CCCode=ParentObj==null?'0000':ParentObj.CCCode;
                    oVDObj.CCName=ParentObj==null?'':ParentObj.CCName;
                }
                if(nExplationType===3 ||nExplationType===6){
                    oVDObj.CCID=ParentObj==null?0:ParentObj.CCID;
                    oVDObj.CCCode=ParentObj==null?'0000':ParentObj.CCCode;
                    oVDObj.CCName=ParentObj==null?'':ParentObj.CCName;
                }
                if(nExplationType===3 ||nExplationType===6){
                    oVDObj.IsPaidChk=ParentObj.IsPaymentCheque;
                }
                oVDObjs.push(oVDObj);
            }
        }
        return oVDObjs;
    }

    function GridStyleCostCenter(InputControl)
    {
        var nCurrentRowIndex =parseInt(InputControl.attributes["rowIndex"].value);
        var nNextRowIndex =nCurrentRowIndex+1;
        $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
        var nDebitCreditIndex= $('.cccodeclass').index($('#tblVoucherDetail tr').eq(nNextRowIndex).find('input.cccodeclass'));
        ResetAllInputBox(nDebitCreditIndex, '.cccodeclass');
        RefreshSummery();
        InitializeKeyDownEvent(".cccodeclass"); return;
    }

    function GridStyleBillTransaction(InputControl)
    {
        var nCurrentRowIndex =parseInt(InputControl.attributes["rowIndex"].value);
        var nNextRowIndex =nCurrentRowIndex+1;
        $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
        var nDebitCreditIndex= $('.bttrtypeclass').index($('#tblVoucherDetail tr').eq(nNextRowIndex).find('input.bttrtypeclass'));
        ResetAllInputBox(nDebitCreditIndex, '.bttrtypeclass');
        RefreshSummery();
        InitializeKeyDownEvent(".bttrtypeclass"); return;
    }

    function GridStyleChequeReference(InputControl)
    {
        var nCurrentRowIndex =parseInt(InputControl.attributes["rowIndex"].value);
        var nNextRowIndex =nCurrentRowIndex+1;
        $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
        var nExplanationdescriptionIndex= $('.chequenoclass').index($('#tblVoucherDetail tr').eq(nNextRowIndex).find('input.chequenoclass'));
        ResetAllInputBox(nExplanationdescriptionIndex, '.chequenoclass');
        RefreshSummery();
        InitializeKeyDownEvent(".chequenoclass"); return;
    }

    function GridStyleInventoryReference(InputControl)
    {
        var nCurrentRowIndex =parseInt(InputControl.attributes["rowIndex"].value);
        var nNextRowIndex =nCurrentRowIndex+1;
        $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
        var nDebitCreditIndex= $('.itemcodeclass').index($('#tblVoucherDetail tr').eq(nNextRowIndex).find('input.itemcodeclass'));
        ResetAllInputBox(nDebitCreditIndex, '.itemcodeclass');
        RefreshSummery();
        InitializeKeyDownEvent(".itemcodeclass"); return;
    }

    function GridStyleOrderReference(InputControl)
    {
        var nCurrentRowIndex =parseInt(InputControl.attributes["rowIndex"].value);
        var nNextRowIndex =nCurrentRowIndex+1;
        $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
        var nDebitCreditIndex= $('.ordernoclass').index($('#tblVoucherDetail tr').eq(nNextRowIndex).find('input.ordernoclass'));
        ResetAllInputBox(nDebitCreditIndex, '.ordernoclass');
        RefreshSummery();
        InitializeKeyDownEvent(".ordernoclass"); return;
    }

    function GridStyleVoucherDetail(InputControl)
    {
        var nCurrentRowIndex =parseInt(InputControl.attributes["rowIndex"].value);
        var nNextRowIndex =nCurrentRowIndex+1;
        $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
        var nDebitCreditIndex= $('.debitcreditclass').index($('#tblVoucherDetail tr').eq(nNextRowIndex).find('input.debitcreditclass'));
        ResetAllInputBox(nDebitCreditIndex, '.debitcreditclass');
        RefreshSummery();
        InitializeKeyDownEvent(".debitcreditclass"); return;
    }

    function InitializeEvent()
    {
        $("#tblVoucherDetail tr").click(function() {
            ResetAllRows();
            $(this).addClass("highlight");
            $(this).find('input').addClass("textboxstyle2");
            $("#tblVoucherDetail").data("selectedIndex", this.rowIndex);
            ResetAllInputBox(_nInputBoxIndex, _sInputBoxClass);
        });

        $('.debitcreditclass').keyup(function (e) {
            if (e.which == 67) {
                $(this).val("Credit");
            }
            else if (e.which == 68) {
                $(this).val("Debit");
            }
        });

        $('.debitcreditclass').click(function (e) {
            _nInputBoxIndex = $('.debitcreditclass').index(this);
            _sInputBoxClass='.debitcreditclass';
            InitializeKeyDownEvent(".debitcreditclass"); return;
        });

        $('.acodeclass').click(function (e) {
            _nInputBoxIndex = $('.acodeclass').index(this);
            _sInputBoxClass='.acodeclass';
            InitializeKeyDownEvent(".acodeclass"); return;
        });

        $('.zcodeclass').click(function (e) {
            _nInputBoxIndex = $('.zcodeclass').index(this);
            _sInputBoxClass='.zcodeclass';
            InitializeKeyDownEvent(".zcodeclass"); return;
        });

        $('.scodeclass').click(function (e) {
            _nInputBoxIndex = $('.scodeclass').index(this);
            _sInputBoxClass='.scodeclass';
            InitializeKeyDownEvent(".scodeclass"); return;
        });

        $('.pcodeclass').click(function (e) {
            _nInputBoxIndex = $('.pcodeclass').index(this);
            _sInputBoxClass='.pcodeclass';
            InitializeKeyDownEvent(".pcodeclass"); return;
        });

        $('.dcodeclass').click(function (e) {
            _nInputBoxIndex = $('.dcodeclass').index(this);
            _sInputBoxClass='.dcodeclass';
            InitializeKeyDownEvent(".dcodeclass"); return;
        });

        $('.ahcodeclass').click(function (e) {
            _nInputBoxIndex = $('.ahcodeclass').index(this);
            _sInputBoxClass='.ahcodeclass';
            InitializeKeyDownEvent(".ahcodeclass"); return;
        });

        $('.accountcodeclass').click(function (e) {
            _nInputBoxIndex = $('.accountcodeclass').index(this);
            _sInputBoxClass='.accountcodeclass';
            InitializeKeyDownEvent(".accountcodeclass"); return;
        });

        $('.narrationclass').click(function (e) {
            _nInputBoxIndex = $('.narrationclass').index(this);
            _sInputBoxClass='.narrationclass';
            InitializeKeyDownEvent(".narrationclass"); return;
        });

        $('.debitclass').click(function (e) {
            _nInputBoxIndex = $('.debitclass').index(this);
            _sInputBoxClass='.debitclass';
            InitializeKeyDownEvent(".debitclass"); return;
        });

        $('.creditclass').click(function (e) {
            _nInputBoxIndex = $('.creditclass').index(this);
            _sInputBoxClass='.creditclass';
            InitializeKeyDownEvent(".creditclass"); return;
        });

        ////number allow only numeric value
        $(".debitclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".creditclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $('.cccodeclass').click(function (e) {
            _nInputBoxIndex = $('.cccodeclass').index(this);
            _sInputBoxClass='.cccodeclass';
            InitializeKeyDownEvent(".cccodeclass"); return;
        });

        $('.ccnameclass').click(function (e) {
            _nInputBoxIndex = $('.ccnameclass').index(this);
            _sInputBoxClass='.ccnameclass';
            InitializeKeyDownEvent(".ccnameclass"); return;
        });

        $('.ccnarrationclass').click(function (e) {
            _nInputBoxIndex = $('.ccnarrationclass').index(this);
            _sInputBoxClass='.ccnarrationclass';
            InitializeKeyDownEvent(".ccnarrationclass"); return;
        });

        $('.ccamountclass').click(function (e) {
            _nInputBoxIndex = $('.ccamountclass').index(this);
            _sInputBoxClass='.ccamountclass';
            InitializeKeyDownEvent(".ccamountclass"); return;
        });

        $('.bttrtypeclass').click(function (e) {
            _nInputBoxIndex = $('.bttrtypeclass').index(this);
            _sInputBoxClass='.bttrtypeclass';
            InitializeKeyDownEvent(".bttrtypeclass"); return;
        });

        $('.btbillnoclass').click(function (e) {
            _nInputBoxIndex = $('.btbillnoclass').index(this);
            _sInputBoxClass='.btbillnoclass';
            InitializeKeyDownEvent(".btbillnoclass"); return;
        });

        $('.btbilldateclass').click(function (e) {
            _nInputBoxIndex = $('.btbilldateclass').index(this);
            _sInputBoxClass='.btbilldateclass';
            InitializeKeyDownEvent(".btbilldateclass"); return;
        });

        $('.btnarrationclass').click(function (e) {
            _nInputBoxIndex = $('.btnarrationclass').index(this);
            _sInputBoxClass='.btnarrationclass';
            InitializeKeyDownEvent(".btnarrationclass"); return;
        });

        $('.btamountclass').click(function (e) {
            _nInputBoxIndex = $('.btamountclass').index(this);
            _sInputBoxClass='.btamountclass';
            InitializeKeyDownEvent(".btamountclass"); return;
        });

        $('.bteffectamountclass').click(function (e) {
            _nInputBoxIndex = $('.bteffectamountclass').index(this);
            _sInputBoxClass='.bteffectamountclass';
            InitializeKeyDownEvent(".bteffectamountclass"); return;
        });

        $('.chequenoclass').keyup(function (e) {
            if (e.which == 67) {
                $(this).val("Cash");
            }
            else if (e.which == 84) {
                $(this).val("Transfer");
            }
        });

        $('.chequenoclass').click(function (e) {
            _nInputBoxIndex = $('.chequenoclass').index(this);
            _sInputBoxClass='.chequenoclass';
            InitializeKeyDownEvent(".chequenoclass"); return;
        });

        $('.chequedateclass').click(function (e) {
            _nInputBoxIndex = $('.chequedateclass').index(this);
            _sInputBoxClass='.chequedateclass';
            InitializeKeyDownEvent(".chequedateclass"); return;
        });

        $('.banknameclass').click(function (e) {
            _nInputBoxIndex = $('.banknameclass').index(this);
            _sInputBoxClass='.banknameclass';
            InitializeKeyDownEvent(".banknameclass"); return;
        });

        $('.branchnameclass').click(function (e) {
            _nInputBoxIndex = $('.branchnameclass').index(this);
            _sInputBoxClass='.branchnameclass';
            InitializeKeyDownEvent(".branchnameclass"); return;
        });

        $('.accountnoclass').click(function (e) {
            _nInputBoxIndex = $('.accountnoclass').index(this);
            _sInputBoxClass='.accountnoclass';
            InitializeKeyDownEvent(".accountnoclass"); return;
        });

        $('.chequeamountclass').click(function (e) {
            _nInputBoxIndex = $('.chequeamountclass').index(this);
            _sInputBoxClass='.chequeamountclass';
            InitializeKeyDownEvent(".chequeamountclass"); return;
        });

        $('.itemcodeclass').click(function (e) {
            _nInputBoxIndex = $('.itemcodeclass').index(this);
            _sInputBoxClass='.itemcodeclass';
            InitializeKeyDownEvent(".itemcodeclass"); return;
        });

        $('.itemnameclass').click(function (e) {
            _nInputBoxIndex = $('.itemnameclass').index(this);
            _sInputBoxClass='.itemnameclass';
            InitializeKeyDownEvent(".itemnameclass"); return;
        });

        $('.itemworkingunitclass').click(function (e) {
            _nInputBoxIndex = $('.itemworkingunitclass').index(this);
            _sInputBoxClass='.itemworkingunitclass';
            InitializeKeyDownEvent(".itemworkingunitclass"); return;
        });

        $('.itemmeasurementunitclass').click(function (e) {
            _nInputBoxIndex = $('.itemmeasurementunitclass').index(this);
            _sInputBoxClass='.itemmeasurementunitclass';
            InitializeKeyDownEvent(".itemmeasurementunitclass"); return;
        });

        $('.itemqtyclass').click(function (e) {
            _nInputBoxIndex = $('.itemqtyclass').index(this);
            _sInputBoxClass='.itemqtyclass';
            InitializeKeyDownEvent(".itemqtyclass"); return;
        });

        $('.itemunitpriceclass').click(function (e) {
            _nInputBoxIndex = $('.itemunitpriceclass').index(this);
            _sInputBoxClass='.itemunitpriceclass';
            InitializeKeyDownEvent(".itemunitpriceclass"); return;
        });

        $('.itemamountclass').click(function (e) {
            _nInputBoxIndex = $('.itemamountclass').index(this);
            _sInputBoxClass='.itemamountclass';
            InitializeKeyDownEvent(".itemamountclass"); return;
        });

        $('.ordernoclass').click(function (e) {
            _nInputBoxIndex = $('.ordernoclass').index(this);
            _sInputBoxClass='.ordernoclass';
            InitializeKeyDownEvent(".ordernoclass"); return;
        });

        $('.orderremarksclass').click(function (e) {
            _nInputBoxIndex = $('.orderremarksclass').index(this);
            _sInputBoxClass='.orderremarksclass';
            InitializeKeyDownEvent(".orderremarksclass"); return;
        });

        $('.orderamountclass').click(function (e) {
            _nInputBoxIndex = $('.orderamountclass').index(this);
            _sInputBoxClass='.orderamountclass';
            InitializeKeyDownEvent(".orderamountclass"); return;
        });

        $(".ccamountclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".btamountclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".bteffectamountclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".chequeamountclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".itemqtyclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".itemunitpriceclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".itemamountclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".orderamountclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });
    }

    function ResetAllRows()
    {
        var tblVoucherDetail=document.getElementById("tblVoucherDetail");
        if(tblVoucherDetail.rows!=null)
        {
            for(var i=0; i<tblVoucherDetail.rows.length; i++)
            {
                $('#tblVoucherDetail tr').eq(i).removeClass("highlight");
                $('#tblVoucherDetail tr').eq(i).find('input').removeClass("textboxstyle2");
            }
        }
    }

    function ResetAllInputBox(index, sClass)
    {
        for(var i=0; i<$('.debitcreditclass').length; i++)
        {
            $('.delClass').eq(i).removeClass("highlight");
            $('.delClass').eq(i).removeClass("textboxstyle");

            $('.debitcreditclass').eq(i).removeClass("highlight");
            $('.debitcreditclass').eq(i).removeClass("textboxstyle");
        }


        for(var i=0; i<$('.acodeclass').length; i++)
        {
            $('.acodeclass').eq(i).removeClass("highlight");
            $('.acodeclass').eq(i).removeClass("textboxstyle");

            $('.zcodeclass').eq(i).removeClass("highlight");
            $('.zcodeclass').eq(i).removeClass("textboxstyle");

            $('.scodeclass').eq(i).removeClass("highlight");
            $('.scodeclass').eq(i).removeClass("textboxstyle");

            $('.pcodeclass').eq(i).removeClass("highlight");
            $('.pcodeclass').eq(i).removeClass("textboxstyle");

            $('.dcodeclass').eq(i).removeClass("highlight");
            $('.dcodeclass').eq(i).removeClass("textboxstyle");

            $('.ahcodeclass').eq(i).removeClass("highlight");
            $('.ahcodeclass').eq(i).removeClass("textboxstyle");

            $('.accountcodeclass').eq(i).removeClass("highlight");
            $('.accountcodeclass').eq(i).removeClass("textboxstyle");

            $('.narrationclass').eq(i).removeClass("highlight");
            $('.narrationclass').eq(i).removeClass("textboxstyle");

            $('.debitclass').eq(i).removeClass("highlight");
            $('.debitclass').eq(i).removeClass("textboxstyle");

            $('.creditclass').eq(i).removeClass("highlight");
            $('.creditclass').eq(i).removeClass("textboxstyle");

            $('.bcdebitclass').eq(i).removeClass("highlight");
            $('.bcdebitclass').eq(i).removeClass("textboxstyle");

            $('.bccreditclass').eq(i).removeClass("highlight");
            $('.bccreditclass').eq(i).removeClass("textboxstyle");
        }

        for(var i=0; i<$('.cccodeclass').length; i++)
        {
            $('.cccodeclass').eq(i).removeClass("highlight");
            $('.cccodeclass').eq(i).removeClass("textboxstyle");

            $('.ccnameclass').eq(i).removeClass("highlight");
            $('.ccnameclass').eq(i).removeClass("textboxstyle");

            $('.ccnarrationclass').eq(i).removeClass("highlight");
            $('.ccnarrationclass').eq(i).removeClass("textboxstyle");

            $('.ccamountclass').eq(i).removeClass("highlight");
            $('.ccamountclass').eq(i).removeClass("textboxstyle");
        }

        for(var i=0; i<$('.bttrtypeclass').length; i++)
        {
            $('.bttrtypeclass').eq(i).removeClass("highlight");
            $('.bttrtypeclass').eq(i).removeClass("textboxstyle");

            $('.btbillnoclass').eq(i).removeClass("highlight");
            $('.btbillnoclass').eq(i).removeClass("textboxstyle");

            $('.btbilldateclass').eq(i).removeClass("highlight");
            $('.btbilldateclass').eq(i).removeClass("textboxstyle");

            $('.btnarrationclass').eq(i).removeClass("highlight");
            $('.btnarrationclass').eq(i).removeClass("textboxstyle");

            $('.btamountclass').eq(i).removeClass("highlight");
            $('.btamountclass').eq(i).removeClass("textboxstyle");

            $('.bteffectamountclass').eq(i).removeClass("highlight");
            $('.bteffectamountclass').eq(i).removeClass("textboxstyle");
        }

        for(var i=0; i<$('.chequenoclass').length; i++)
        {
            $('.chequenoclass').eq(i).removeClass("highlight");
            $('.chequenoclass').eq(i).removeClass("textboxstyle");

            $('.chequedateclass').eq(i).removeClass("highlight");
            $('.chequedateclass').eq(i).removeClass("textboxstyle");

            $('.banknameclass').eq(i).removeClass("highlight");
            $('.banknameclass').eq(i).removeClass("textboxstyle");

            $('.branchnameclass').eq(i).removeClass("highlight");
            $('.branchnameclass').eq(i).removeClass("textboxstyle");

            $('.accountnoclass').eq(i).removeClass("highlight");
            $('.accountnoclass').eq(i).removeClass("textboxstyle");

            $('.chequeamountclass').eq(i).removeClass("highlight");
            $('.chequeamountclass').eq(i).removeClass("textboxstyle");
        }

        for(var i=0; i<$('.bttrtypeclass').length; i++)
        {
            $('.bttrtypeclass').eq(i).removeClass("highlight");
            $('.bttrtypeclass').eq(i).removeClass("textboxstyle");

            $('.btbillnoclass').eq(i).removeClass("highlight");
            $('.btbillnoclass').eq(i).removeClass("textboxstyle");

            $('.btbilldateclass').eq(i).removeClass("highlight");
            $('.btbilldateclass').eq(i).removeClass("textboxstyle");

            $('.btnarrationclass').eq(i).removeClass("highlight");
            $('.btnarrationclass').eq(i).removeClass("textboxstyle");

            $('.btamountclass').eq(i).removeClass("highlight");
            $('.btamountclass').eq(i).removeClass("textboxstyle");

            $('.bteffectamountclass').eq(i).removeClass("highlight");
            $('.bteffectamountclass').eq(i).removeClass("textboxstyle");
        }

        for(var i=0; i<$('.itemcodeclass').length; i++)
        {
            $('.itemcodeclass').eq(i).removeClass("highlight");
            $('.itemcodeclass').eq(i).removeClass("textboxstyle");

            $('.itemnameclass').eq(i).removeClass("highlight");
            $('.itemnameclass').eq(i).removeClass("textboxstyle");

            $('.itemworkingunitclass').eq(i).removeClass("highlight");
            $('.itemworkingunitclass').eq(i).removeClass("textboxstyle");

            $('.itemmeasurementunitclass').eq(i).removeClass("highlight");
            $('.itemmeasurementunitclass').eq(i).removeClass("textboxstyle");

            $('.itemqtyclass').eq(i).removeClass("highlight");
            $('.itemqtyclass').eq(i).removeClass("textboxstyle");

            $('.itemunitpriceclass').eq(i).removeClass("highlight");
            $('.itemunitpriceclass').eq(i).removeClass("textboxstyle");

            $('.itemamountclass').eq(i).removeClass("highlight");
            $('.itemamountclass').eq(i).removeClass("textboxstyle");
        }

        for(var i=0; i<$('.ordernoclass').length; i++)
        {
            $('.ordernoclass').eq(i).removeClass("highlight");
            $('.ordernoclass').eq(i).removeClass("textboxstyle");

            $('.projectnameclass').eq(i).removeClass("highlight");
            $('.projectnameclass').eq(i).removeClass("textboxstyle");

            $('.orderremarksclass').eq(i).removeClass("highlight");
            $('.orderremarksclass').eq(i).removeClass("textboxstyle");

            $('.orderamountclass').eq(i).removeClass("highlight");
            $('.orderamountclass').eq(i).removeClass("textboxstyle");
        }

        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('input').addClass("highlight");
        $(sClass).eq(index).removeClass("textboxstyle2");
        $(sClass).eq(index).addClass("textboxstyle");
        $(sClass).eq(index).show();
        $(sClass).eq(index).focus();
        $(sClass).eq(index).select();
    }

    function RefreshSummery()
    {
        var nTotalDebitAmount=0; var nTotalCreditAmount=0;
        var nBCTotalDebitAmount=0; var nBCTotalCreditAmount=0;
        var oVDObjs= $("#tblVoucherDetail").data('rows');
        if(oVDObjs==null)oVDObjs=[];
        for(var i=0; i<oVDObjs.length; i++)
        {
            nTotalDebitAmount=nTotalDebitAmount+ parseFloat(oVDObjs[i].DrAmount)
            nTotalCreditAmount=nTotalCreditAmount+parseFloat(oVDObjs[i].CrAmount);
            nBCTotalDebitAmount=nBCTotalDebitAmount+parseFloat(oVDObjs[i].BCDrAmount);
            nBCTotalCreditAmount=nBCTotalCreditAmount+parseFloat(oVDObjs[i].BCCrAmount);
        }
        $('#lblTotalDebitAmount').html(formatPrice(nTotalDebitAmount, null));
        $('#lblTotalCreditAmount').html(formatPrice(nTotalCreditAmount, null));
        $('#lblBCTotalDebitAmount').html(formatPrice(nBCTotalDebitAmount, null));
        $('#lblBCTotalCreditAmount').html(formatPrice(nBCTotalCreditAmount, null));


        //document.getElementById('lblTotalCreditAmount').innerHTML =formatPrice(nTotalCreditAmount, null);
    }

    function NewObject(nObjType)
    {
        //VoucherDetail = 0
        //CostCenter = 1
        //BillReference = 2
        //ChequeReference = 3
        //InventoryReference = 4
        //SubledgerBill = 5
        var sDR_CR="";
        if(nObjType==0)
        {
            sDR_CR= 'Debit';
        }
        else if(nObjType==1)
        {
            sDR_CR= 'Subledger';
        }
        else if(nObjType==2)
        {
            sDR_CR= 'Bill';
        }
        else if(nObjType==3)
        {
            sDR_CR= 'Cheque';
        }
        else if(nObjType==4)
        {
            sDR_CR= 'Inventory';
        }
        else if(nObjType==5)
        {
            sDR_CR= 'SL Bill';
        }
        else if(nObjType==6)
        {
            sDR_CR= 'SL Cheque';
        }
        else if(nObjType==7)
        {
            sDR_CR= 'Order Ref';
        }

        var oVDObj = {
            VDObjID:0,
            DR_CR:sDR_CR,
            BUID: parseInt($('#cboBusinessUnit').val()),
            AID:0,
            ZID:0,
            SID:0,
            PID:0,
            DptID:0,
            AHID:0,
            CID:0,
            CAmount:0,
            CRate:0,
            Amount :0,
            IsDr :true,
            Detail:"",
            AHCode:"0000000",
            AHName:"",
            CName:"",
            CSymbol:"",
            ACode:"00",
            AName:"",
            ASName:"",
            ZCode:"00",
            ZName:"",
            ZSName:"",
            SCode:"0000",
            SName:"",
            SSName:"",
            PCode:"00000",
            PName:"",
            PSName:"",
            DCode:"00",
            DName:"",
            DSName:"",
            DrAmount:0,
            CrAmount:0,
            BCDrAmount:0,
            BCCrAmount:0,
            IsAEfct : true,
            IsZEfct : false,
            IsSEfct : false,

            //for CostCenter Transaction
            CCID : 0,
            CCCode : "0000",
            CCName : "",

            //For Bill Reference
            BillID : 0,
            BillDate : icsdateformat(new Date()),
            TrTypeInt : 0,
            TrTypeStr : "",
            BillNo : "",
            BillDateStr : "",
            BillAmount: 0,

            //Cheque Reference
            ChequeID : 0,
            ChequeNo : "",
            ChequeType: 0,
            ChequeDate : icsdateformat(new Date()),
            BankName : "Bank",
            BranchName : "Branch",
            AccountNo : "Account No",
            ChequeDateStr:"Date",

            //Inventory Reference
            WUID : 0,
            WUName : "",
            MUID : 0,
            MUName : "",
            Qty : 0,
            UPrice : 0,

            //Order Reference
            OrderID :0,
            SalesNo :"",
            ProjectName:"",
            ORemarks :"",

            //Common
            IsCCAply : false,
            IsBTAply : false,
            IsChkAply : false,
            IsIRAply : false,
            IsOrderaAply : false,
            IsPaidChk : false,
            ObjTypeInt : nObjType,

            AccountCode : "00.00.00.0000.00000.00.0000000"
        };

        return oVDObj;
    }

    function RemakeGrid(oVDObjs)
    {
        $("#tblVoucherDetail").find("tr").remove();
        $('#tblVoucherDetail').data('rows', []);
        for(var i=0; i<oVDObjs.length;i++)
        {
            AddVoucherDetail(oVDObjs[i]);
        }
    }

    function AddVoucherDetail(oVDObj)
    {
        //VoucherDetail = 0
        //CostCenter = 1
        //BillReference = 2
        //ChequeReference = 3
        //InventoryReference = 4
        //SubledgerBill = 5
        //SubledgerCheque = 6
        //OrderReference =7

        var nRowIndex=0;
        var oVDObjs = $('#tblVoucherDetail').data('rows');
        if(oVDObjs=='undefined' || oVDObjs==null||oVDObjs.length<=0)
        {
            nRowIndex=0;
            oVDObjs =[];
        }
        else
        {
            nRowIndex=oVDObjs.length;
        }
        oVDObjs.push(oVDObj);
        $('#tblVoucherDetail').data('rows', oVDObjs);
        var table = document.getElementById('tblVoucherDetail');
        var row = table.insertRow(nRowIndex);

        if(oVDObj.ObjTypeInt == 0)//VoucherDetail = 0
        {
            var cellDel = row.insertCell(0);
            cellDel.width= "3%";
            cellDel.innerHTML = '<label id="delClass'+nRowIndex+'" rowIndex="'+nRowIndex+'"onclick="DeleteRow('+nRowIndex+');"  class="delClass" style="width:96%;color:#c00;cursor:pointer;" >X</label>';

            var cellDebitCredit = row.insertCell(1);
            cellDebitCredit.width= "5%";
            cellDebitCredit.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+ oVDObj.DR_CR +'" class="debitcreditclass" style="width:95%""/>';

            var cellACode = row.insertCell(2);
            cellACode.width= "5%";
            cellACode.innerHTML = '<input onmouseover="acodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.ACode+'" class="acodeclass" style="width:96%" />';

            var cellZCode = row.insertCell(3);
            cellZCode.width= "5%";
            cellZCode.innerHTML = '<input onmouseover="zcodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.ZCode+'" class="zcodeclass" style="width:96%" />';

            var cellSCode = row.insertCell(4);
            cellSCode.width= "5%";
            cellSCode.innerHTML = '<input onmouseover="scodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.SCode+'" class="scodeclass" style="width:96%" />';

            var cellPCode = row.insertCell(5);
            cellPCode.width= "6%";
            cellPCode.innerHTML = '<input onmouseover="pcodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.PCode+'" class="pcodeclass" style="width:96%" />';

            var cellDCode = row.insertCell(6);
            cellDCode.width= "5%";
            cellDCode.innerHTML = '<input onmouseover="dcodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.DCode+'" class="dcodeclass" style="width:96%" />';

            var cellAHCode = row.insertCell(7);
            cellAHCode.width= "5%";
            cellAHCode.innerHTML = '<input onmouseover="ahcodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.AHCode+'" class="ahcodeclass" style="width:96%" />';

            var cellAccountCode = row.insertCell(8);
            cellAccountCode.colSpan=3;
            cellAccountCode.width= "16%";
            cellAccountCode.innerHTML = '<input onmouseover="accountcodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+MakeAccountCode(oVDObj)+'" class="accountcodeclass" style="width:97%" readonly="readonly" />';

            var cellNarration = row.insertCell(9);
            cellNarration.width= "14%";
            cellNarration.innerHTML = '<input onmouseover="narrationtooltip('+nRowIndex+');"  type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.Detail+'" class="narrationclass" style="width:97%" />';

            var cellDebitAmount = row.insertCell(10);
            cellDebitAmount.width= "7%";
            cellDebitAmount.innerHTML = '<input type="text" id="debitclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.DrAmount,null)+'" class="debitclass" style="width:97%" />';

            var cellCreditAmount = row.insertCell(11);
            cellCreditAmount.width= "7%";
            cellCreditAmount.innerHTML = '<input type="text" id="creditclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.CrAmount,null)+'" class="creditclass" style="width:97%" />';

            var cellBCDebitAmount = row.insertCell(12);
            cellBCDebitAmount.width= "7%";
            cellBCDebitAmount.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.BCDrAmount,null)+'" class="bcdebitclass" style="width:97%" disabled="disabled"/>';

            var cellBCCreditAmount = row.insertCell(13);
            cellBCCreditAmount.width= "7%";
            cellBCCreditAmount.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.BCCrAmount,null)+'" class="bccreditclass" style="width:97%" disabled="disabled"/>';
        }
        else if(oVDObj.ObjTypeInt == 1)//CostCenter = 1
        {
            var cellDel = row.insertCell(0);
            cellDel.width= "3%";
            cellDel.innerHTML = '<label id="delClass'+nRowIndex+'" rowIndex="'+nRowIndex+'"onclick="DeleteRow('+nRowIndex+');"  class="delClass" style="width:96%;color:#c00;cursor:pointer;" >X</label>';

            var cellDebitCredit = row.insertCell(1);
            cellDebitCredit.width= "5%";
            cellDebitCredit.innerHTML = oVDObj.DR_CR;

            var cellCCCode = row.insertCell(2);
            cellCCCode.colSpan= 2;
            cellCCCode.width= "10%";
            cellCCCode.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.CCCode+'" class="cccodeclass" style="width:98%;" placeholder="Subledger Code"/>';

            var cellCCName = row.insertCell(3);
            cellCCName.colSpan= 3;
            cellCCName.width= "16%";
            cellCCName.innerHTML = '<label id="ccnameclass'+nRowIndex+'" class="ccnameclass">' + oVDObj.CCName + '</label>';

            var cellCCNarration = row.insertCell(4);
            cellCCNarration.colSpan= 4;
            cellCCNarration.width= "21%";
            cellCCNarration.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.Detail+'" class="ccnarrationclass" style="width:98%" placeholder="Remarks"/>';

            var cellCCAmount = row.insertCell(5);
            cellCCAmount.width= "14%";
            cellCCAmount.innerHTML = '<input type="text" id="ccamountclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.CAmount,null)+'" class="ccamountclass" style="width:97%" />';

            var cellDebitAmount = row.insertCell(6);
            cellDebitAmount.width= "7%";
            cellDebitAmount.innerHTML = '';

            var cellCreditAmount = row.insertCell(7);
            cellCreditAmount.width= "7%";
            cellCreditAmount.innerHTML = '';

            var cellBCDebitAmount = row.insertCell(8);
            cellBCDebitAmount.width= "7%";
            cellBCDebitAmount.innerHTML = '';

            var cellBCCreditAmount = row.insertCell(9);
            cellBCCreditAmount.width= "7%";
            cellBCCreditAmount.innerHTML = '';
        }
        else if(oVDObj.ObjTypeInt == 2 || oVDObj.ObjTypeInt == 5) //BillReference = 2
        {
            var cellDel = row.insertCell(0);
            cellDel.width= "3%";
            cellDel.innerHTML = '<label id="delClass'+nRowIndex+'" rowIndex="'+nRowIndex+'"onclick="DeleteRow('+nRowIndex+');"  class="delClass" style="width:96%;color:#c00;cursor:pointer;" >X</label>';

            var cellDebitCredit = row.insertCell(1);
            cellDebitCredit.width= "5%";
            cellDebitCredit.innerHTML = oVDObj.DR_CR;

            var cellBTTrType = row.insertCell(2);
            cellBTTrType.colSpan= 2;
            cellBTTrType.width= "10%";
            cellBTTrType.innerHTML = '<input type="text" id="bttrtypeclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+oVDObj.TrTypeStr+'" class="bttrtypeclass" style="width:98%" placeholder="Transaction Type"/>';

            var cellBTBillNo= row.insertCell(3);
            cellBTBillNo.colSpan = 2;
            cellBTBillNo.width= "10%";
            cellBTBillNo.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.BillNo+'" class="btbillnoclass" style="width:98%" placeholder="Bill No"/>';

            var cellBTBillDate = row.insertCell(4);
            cellBTBillDate.colSpan = 2;
            cellBTBillDate.width= "10%";
            cellBTBillDate.innerHTML = '<label id="btbilldateclass'+nRowIndex+'" class="btbilldateclass">' + oVDObj.BillDateStr + '</label>';

            var cellBTNarration = row.insertCell(5);
            cellBTNarration.colSpan=2;
            cellBTNarration.width= "10%";
            cellBTNarration.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.Detail+'" class="btnarrationclass" style="width:97%" placeholder="Remarks"/>';

            var cellBTAmount = row.insertCell(6);
            cellBTAmount.width= "6%";
            cellBTAmount.align= "right";
            cellBTAmount.innerHTML = '<label id="btAmountClass'+nRowIndex+'" class="btamountclass">' +oVDObj.CSymbol +" "+formatPrice(oVDObj.BillAmount,null) + '</label>';

            var cellBTEffectAmount = row.insertCell(7);
            cellBTEffectAmount.width= "14%";
            cellBTEffectAmount.innerHTML = '<input type="text" id="bteffectamountclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.CAmount,null)+'" class="bteffectamountclass" style="width:97%" />';

            var cellDebitAmount = row.insertCell(8);
            cellDebitAmount.width= "7%";
            cellDebitAmount.innerHTML = '';

            var cellCreditAmount = row.insertCell(9);
            cellCreditAmount.width= "7%";
            cellCreditAmount.innerHTML = '';

            var cellBCDebitAmount = row.insertCell(10);
            cellBCDebitAmount.width= "7%";
            cellBCDebitAmount.innerHTML = '';

            var cellBCCreditAmount = row.insertCell(11);
            cellBCCreditAmount.width= "7%";
            cellBCCreditAmount.innerHTML = '';
        }
        else if(oVDObj.ObjTypeInt == 3 || oVDObj.ObjTypeInt == 6)//Cheque Reference = 3
        {
            var cellDel = row.insertCell(0);
            cellDel.width= "3%";
            cellDel.innerHTML = '<label id="delClass'+nRowIndex+'" rowIndex="'+nRowIndex+'"onclick="DeleteRow('+nRowIndex+');"  class="delClass" style="width:96%;color:#c00;cursor:pointer;" >X</label>';

            var cellDebitCredit = row.insertCell(1);
            cellDebitCredit.width= "5%";
            cellDebitCredit.innerHTML = oVDObj.DR_CR;

            var cellChequeNo = row.insertCell(2);
            cellChequeNo.colSpan= 2;
            cellChequeNo.width= "10%";
            cellChequeNo.innerHTML = '<input type="text" id="chequenoclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+oVDObj.ChequeNo+'" class="chequenoclass" style="width:98%" placeholder="Cheque No"/>';

            var cellAccountNo = row.insertCell(3);
            cellAccountNo.colSpan= 2;
            cellAccountNo.width= "20%";
            cellAccountNo.innerHTML = '<label id="accountnoclass'+nRowIndex+'" class="accountnoclass">' + oVDObj.AccountNo + '</label>';


            var cellBankName = row.insertCell(4);
            cellBankName.colSpan= 2;
            cellBankName.width= "10%";
            cellBankName.innerHTML = '<label id="banknameclass'+nRowIndex+'" class="banknameclass">' + oVDObj.BankName + '</label>';

            var cellBranchName = row.insertCell(5);
            cellBranchName.colSpan=2;
            cellBranchName.width= "10%";
            cellBranchName.innerHTML = '<label id="branchnameclass'+nRowIndex+'" class="branchnameclass">' + oVDObj.BranchName + '</label>';


            var cellChequeDate = row.insertCell(6);
            cellChequeDate.width= "6%";
            cellChequeDate.innerHTML = '<label id="chequedateclass'+nRowIndex+'" class="chequedateclass">' + oVDObj.ChequeDateStr + '</label>';

            var cellChequeAmount = row.insertCell(7);
            cellChequeAmount.width= "14%";
            cellChequeAmount.align= "right";
            cellChequeAmount.innerHTML = '<input type="text" id="chequeamountclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.CAmount,null)+'" class="chequeamountclass" style="width:98%" placeholder="Amount"/>';//<label id="'+nRowIndex+'" class="chequeamountclass">' + formatPrice(oVDObj.CAmount,null) + '</label>';

            var cellDebitAmount = row.insertCell(8);
            cellDebitAmount.width= "7%";
            cellDebitAmount.innerHTML = '';

            var cellCreditAmount = row.insertCell(9);
            cellCreditAmount.width= "7%";
            cellCreditAmount.innerHTML = '';

            var cellBCDebitAmount = row.insertCell(10);
            cellBCDebitAmount.width= "7%";
            cellBCDebitAmount.innerHTML = '';

            var cellBCCreditAmount = row.insertCell(11);
            cellBCCreditAmount.width= "7%";
            cellBCCreditAmount.innerHTML = '';
        }
        else if(oVDObj.ObjTypeInt == 4)//InventoryReference = 4
        {
            var cellDel = row.insertCell(0);
            cellDel.width= "3%";
            cellDel.innerHTML = '<label id="delClass'+nRowIndex+'" rowIndex="'+nRowIndex+'"onclick="DeleteRow('+nRowIndex+');"  class="delClass" style="width:96%;color:#c00;cursor:pointer;" >X</label>';

            var cellDebitCredit = row.insertCell(1);
            cellDebitCredit.width= "5%";
            cellDebitCredit.innerHTML = oVDObj.DR_CR;

            var cellItemCode = row.insertCell(2);
            cellItemCode.colSpan= 2;
            cellItemCode.width= "10%";
            cellItemCode.innerHTML = '<input type="text" id="itemcodeclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+oVDObj.PCode+'" class="itemcodeclass" style="width:98%" placeholder="Item Code"/>';

            var cellItemName = row.insertCell(3);
            cellItemName.colSpan= 2;
            cellItemName.width= "20%";
            cellItemName.innerHTML = '<label id="itemnameclass'+nRowIndex+'" class="itemnameclass">' + oVDObj.PName + '</label>';

            var cellWorkingUnit = row.insertCell(4);
            cellWorkingUnit.colSpan= 2;
            cellWorkingUnit.width= "10%";
            cellWorkingUnit.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.WUName+'" class="itemworkingunitclass" style="width:98%" placeholder="Store"/>';

            var cellMeasurementUnit = row.insertCell(5);
            cellMeasurementUnit.width= "5%";
            cellMeasurementUnit.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.MUName+'" class="itemmeasurementunitclass" style="width:97%;text-align:center;" placeholder="M.Unit"/>';

            var cellQty = row.insertCell(6);
            cellQty.width= "5%";
            cellQty.innerHTML = '<input type="text" id="itemqtyclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.Qty,null)+'" class="itemqtyclass" style="width:97%" placeholder="Qty"/>';

            var cellUnitPrice = row.insertCell(7);
            cellUnitPrice.width= "6%";
            cellUnitPrice.innerHTML = '<input type="text" id="itemunitpriceclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.UPrice,null)+'" class="itemunitpriceclass" style="width:97%" placeholder="Unit Price"/>';

            var cellIRAmount = row.insertCell(8);
            cellIRAmount.width= "14%";
            cellIRAmount.innerHTML = '<input type="text" id="itemamountclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.CAmount,null)+'" class="itemamountclass" style="width:97%" placeholder="Amount"/>';

            var cellDebitAmount = row.insertCell(9);
            cellDebitAmount.width= "7%";
            cellDebitAmount.innerHTML = '';

            var cellCreditAmount = row.insertCell(10);
            cellCreditAmount.width= "7%";
            cellCreditAmount.innerHTML = '';

            var cellBCDebitAmount = row.insertCell(11);
            cellBCDebitAmount.width= "7%";
            cellBCDebitAmount.innerHTML = '';

            var cellBCCreditAmount = row.insertCell(12);
            cellBCCreditAmount.width= "7%";
            cellBCCreditAmount.innerHTML = '';
        }
        else if(oVDObj.ObjTypeInt === 7)//Order Reference= 7
        {
            var cellDel = row.insertCell(0);
            cellDel.width= "3%";
            cellDel.innerHTML = '<label id="delClass'+nRowIndex+'" rowIndex="'+nRowIndex+'"onclick="DeleteRow('+nRowIndex+');"  class="delClass" style="width:96%;color:#c00;cursor:pointer;" >X</label>';

            var cellDebitCredit = row.insertCell(1);
            cellDebitCredit.width= "5%";
            cellDebitCredit.innerHTML = oVDObj.DR_CR;

            var cellOrderNo = row.insertCell(2);
            cellOrderNo.colSpan= 2;
            cellOrderNo.width= "10%";
            cellOrderNo.innerHTML = '<input type="text" id="ordernoclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+oVDObj.SalesNo+'" class="ordernoclass" style="width:98%" placeholder="Sales No"/>';

            var cellProjectName = row.insertCell(3);
            cellProjectName.colSpan= 2;
            cellProjectName.width= "20%";
            cellProjectName.innerHTML = '<label id="projectnameclass'+nRowIndex+'" class="projectnameclass">' + oVDObj.ProjectName + '</label>';


            var cellOrderRemarks = row.insertCell(4);
            cellOrderRemarks.colSpan= 5;
            cellOrderRemarks.width= "26%";
            cellOrderRemarks.innerHTML = '<input type="text" id="orderremarksclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+oVDObj.ORemarks+'" class="orderremarksclass" style="width:98%" placeholder="Remarks"/>';

            var cellOrderAmount = row.insertCell(5);
            cellOrderAmount.width= "14%";
            cellOrderAmount.align= "right";
            cellOrderAmount.innerHTML = '<input type="text" id="orderamountclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.CAmount,null)+'" class="orderamountclass" style="width:98%" placeholder="Amount"/>';

            var cellDebitAmount = row.insertCell(6);
            cellDebitAmount.width= "7%";
            cellDebitAmount.innerHTML = '';

            var cellCreditAmount = row.insertCell(7);
            cellCreditAmount.width= "7%";
            cellCreditAmount.innerHTML = '';

            var cellBCDebitAmount = row.insertCell(8);
            cellBCDebitAmount.width= "7%";
            cellBCDebitAmount.innerHTML = '';

            var cellBCCreditAmount = row.insertCell(9);
            cellBCCreditAmount.width= "7%";
            cellBCCreditAmount.innerHTML = '';
        }

        if(oVDObj.IsDr===true)
        {
            $(".debitclass").eq(nRowIndex).prop('disabled', false);
            $(".creditclass").eq(nRowIndex).prop('disabled', true);
        }
        else
        {
            $(".debitclass").eq(nRowIndex).prop('disabled', true);
            $(".creditclass").eq(nRowIndex).prop('disabled', false);
        }

        $(".delClass").parent().css("text-align","center");
        EnableDisableControl(nRowIndex, oVDObj);
        InitializeEvent();
    }

    function EnableDisableControl(nRowIndex, oVDObj)
    {
        $(".acodeclass").eq(nRowIndex).prop('disabled', !oVDObj.IsAEfct);
        $(".zcodeclass").eq(nRowIndex).prop('disabled', !oVDObj.IsZEfct);
        $(".scodeclass").eq(nRowIndex).prop('disabled', !oVDObj.IsSEfct);
        $(".cccodeclass").eq(nRowIndex).prop('disabled', !oVDObj.IsCCAply);
    }

    function acodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ "+oVDObj.ACode+" : "+oVDObj.AName+" ]");
    }

    function zcodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ "+oVDObj.ZCode+" : "+oVDObj.ZName+" ]");
    }

    function scodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ "+oVDObj.SCode+" : "+oVDObj.SName+" ]");
    }

    function pcodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ "+oVDObj.PCode+" : "+oVDObj.PName+" ]");
    }

    function dcodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ "+oVDObj.DCode+" : "+oVDObj.DName+" ]");
    }

    function ahcodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ "+oVDObj.AHCode+" : "+oVDObj.AHName+" ]");
    }

    function accountcodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ Account Code : "+oVDObj.AccountCode+" ]");
    }

    function narrationtooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ Narration : "+oVDObj.Detail+" ]");
    }

    $('#tblVoucherDetail').mouseout(function() {
        $(".lblToolTip").html("");
    });

    function MakeAccountCode(oVDObj)
    {
        var sAccountCode ="";
        if(oVDObj!=null)
        {
            sAccountCode = oVDObj.ACode +"." +oVDObj.ZCode +"." + oVDObj.SCode + "." +oVDObj.PCode +"."+oVDObj.DCode +"."+oVDObj.AHCode;
        }
        return sAccountCode;
    }

    function IsDebitCreditEqual()
    {
        var nTotalDebitAmount=0; var nTotalCreditAmount=0;
        var oVDObjs= $("#tblVoucherDetail").data('rows');
        for(var i=0; i<oVDObjs.length; i++)
        {
            nTotalDebitAmount=nTotalDebitAmount+ parseFloat(oVDObjs[i].DrAmount)
            nTotalCreditAmount=nTotalCreditAmount+parseFloat(oVDObjs[i].CrAmount);
        }
        if(parseFloat(nTotalDebitAmount)!=parseFloat(nTotalCreditAmount))
        {
            return false;
        }
        return true;
    }

    function ValidateInput()
    {
        var sVoucherDate = $('#txtVoucherDate').datebox('getValue');
        if(sVoucherDate === null || sVoucherDate==="")
        {
            alert("Please select voucher date!");
            $('#txtVoucherDate').focus();
            return false;
        }
        var dCurrentDate = new Date();
        var dVoucherDate = new Date(sVoucherDate);
        if(dVoucherDate.getTime() > dCurrentDate){
            alert("Forward voucher date not allow!");
            $('#txtVoucherDate').focus();
            return false;
        }

        if ($('#txtVoucherNo').val() == null ||$('#txtVoucherNo').val() == '' )
        {
            alert("Please enter voucher no!");
            $('#txtVoucherNo').focus();
            return false;
        }
        if ($('#cboCurrency').val() == null || $('#cboCurrency').val() == '' || parseInt($('#cboCurrency').val())<=0)
        {
            alert("Please select Currency!");
            $('#cboCurrency').focus();
            return false;
        }
        if ($('#cboBusinessUnit').val() == null || $('#cboBusinessUnit').val() == '' || parseInt($('#cboBusinessUnit').val())<=0)
        {
            alert("Please select Business Unit!");
            $('#cboBusinessUnit').focus();
            return false;
        }
        if ($('#cboBatch').val() == null || $('#cboBatch').val() == '' || parseInt($('#cboBatch').val())<=0)
        {
            alert("Please select Batch!");
            $('#cboBatch').focus();
            return false;
        }
        if ($('#txtCRate').val() == null || $('#txtCRate').val() == '' || parseFloat($('#txtCRate').val())<=0)
        {
            alert("Please enter conversion rate!");
            $('#txtCRate').focus();
            return false;
        }

        if(parseInt(_oVoucher.AuthorizedBy) !=0)
        {
            alert("Your Selected Voucher Already Approved!");
            return false;
        }
        var oRunningAccountingYear =$('#divVoucher').data('RunningAccountingYear');
        if(oRunningAccountingYear==null || parseInt(oRunningAccountingYear.AccountingSessionID)<=0)
        {
            alert("Please Confirm Running Accounting Year!");
            return false;
        }
        var oVDObjs= $("#tblVoucherDetail").data('rows');
        if (oVDObjs==null || oVDObjs.length <= 0)
        {
            alert("Please enter at least one item!");
            return false;
        }
        var nTotalDebitAmount=0; var nTotalCreditAmount=0;
        for(var i=0; i<oVDObjs.length; i++)
        {
            if(parseInt(oVDObjs[i].ObjTypeInt)===0)
            {
                nTotalDebitAmount=nTotalDebitAmount+ parseFloat(oVDObjs[i].DrAmount)
                nTotalCreditAmount=nTotalCreditAmount+parseFloat(oVDObjs[i].CrAmount);
            }
        }

        if (nTotalDebitAmount <= 0) {
            alert("Please enter debit amount");
            return false;
        }
        if (nTotalCreditAmount <= 0) {
            alert("Please enter credit amount");
            return false;
        }
        nTotalDebitAmount = parseFloat(nTotalDebitAmount.toFixed(2));
        nTotalCreditAmount = parseFloat(nTotalCreditAmount.toFixed(2));

        var nGapAmount = parseFloat(nTotalDebitAmount) - parseFloat(nTotalCreditAmount);
        nGapAmount = parseFloat(nGapAmount.toFixed(2));
        if(nGapAmount<0)
        {
            nGapAmount=nGapAmount*(-1);
        }

        if(nGapAmount>0.01)
        {
            alert("Please Confirm Debit & Credit Amount must be equal");
            return false;
        }

        debugger;
        if ($('#txtControlAmount').val() == null || $('#txtControlAmount').val() == '')
        {
            alert("Please enter Control Amount!");
            $('#txtControlAmount').focus();
            return false;
        }
        var nControlAmount = parseFloat(RemoveComma($('#txtControlAmount').val()));
        if (nControlAmount <=0)
        {
            alert("Please enter Control Amount!");
            $('#txtControlAmount').focus();
            return false;
        }

        if(nControlAmount !=parseFloat(nTotalDebitAmount))
        {
            alert("Control Amount & Voucher Amount Must Be Equal!");
            $('#txtControlAmount').focus();
            return false;
        }

        var totalRow = $("#tblVoucherDetail tr").length;
        for(var i=0;i<totalRow;i++)
        {
            if(parseInt(oVDObjs[i].ObjTypeInt)===0)
            {
                var checkAmount = GetAllSameTypeRefAmount(i,parseInt(oVDObjs[i].ObjTypeInt));
                if(checkAmount[0] == "NotEqual")
                {
                    alert(checkAmount[1]);
                    return false;
                }
            }
            if(parseInt(oVDObjs[i].ObjTypeInt)===1)
            {
                var checkAmount = GetAllSameTypeRefAmount(i,parseInt(oVDObjs[i].ObjTypeInt));
                if(checkAmount[0] == "NotEqual")
                {
                    alert(checkAmount[1]);
                    return false;
                }
            }
        }
        return true;
    }

    function GetAllSameTypeRefAmount(nRowIndex,nObjTypeInt)
    {
        debugger;
        var totalRow = $("#tblVoucherDetail tr").length;
        var minIndex = (nRowIndex+1);
        var maxIndex = 0;
        var DrCr = $("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR;
        var parentAmount = $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount;
        var accountHeadName = $("#tblVoucherDetail").data('rows')[nRowIndex].AHName;
        var sCostCenterName = $("#tblVoucherDetail").data('rows')[nRowIndex].CCName;
        parentAmount = parseFloat(parentAmount).toFixed(2);

        if(nObjTypeInt===0){
            for(var i=minIndex;i<totalRow;i++)
            {
                if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit" || $("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                {
                    maxIndex = i;
                    break;
                }
            }
        }
        else if(nObjTypeInt===1){
            for(var i=minIndex;i<totalRow;i++)
            {
                if($("#tblVoucherDetail").data('rows')[i].DR_CR != "SL Bill" && $("#tblVoucherDetail").data('rows')[i].DR_CR != "SL Cheque")
                {
                    maxIndex = i;
                    break;
                }
            }
        }

        if(maxIndex==0)
        {
            maxIndex=totalRow;
        }

        var nTotalCCAmount = 0.00;
        var nTotalBTAmount = 0.00;
        var nTotalChequeAmount = 0.00;
        var nTotalIRAmount = 0.00;
        var nTotalSLBTAmount = 0.00;
        var nTotalSLChequeAmount = 0.00;

        var CCAply = $("#tblVoucherDetail").data('rows')[nRowIndex].IsCCAply;
        var BTAply = $("#tblVoucherDetail").data('rows')[nRowIndex].IsBTAply;
        var ChkAply = $("#tblVoucherDetail").data('rows')[nRowIndex].IsChkAply;
        var IRAply = $("#tblVoucherDetail").data('rows')[nRowIndex].IsIRAply;
        if(CCAply == true || BTAply == true || ChkAply == true || IRAply == true)
        {
            for(var i=minIndex;i<maxIndex;i++)
            {
                var RefType = $("#tblVoucherDetail").data('rows')[i].DR_CR;
                var RefAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                if(RefType == "Subledger")
                {
                    nTotalCCAmount = parseFloat(nTotalCCAmount) + parseFloat(RefAmount);
                }
                else if(RefType == "Bill")
                {
                    nTotalBTAmount = parseFloat(nTotalBTAmount) + parseFloat(RefAmount);
                }
                else if(RefType == "Cheque")
                {
                    nTotalChequeAmount = parseFloat(nTotalChequeAmount) + parseFloat(RefAmount);
                }
                else if(RefType == "Inventory")
                {
                    nTotalIRAmount = parseFloat(nTotalIRAmount) + parseFloat(RefAmount);
                }
                else if(RefType == "SL Bill")
                {
                    nTotalSLBTAmount = parseFloat(nTotalSLBTAmount) + parseFloat(RefAmount);
                }
                else if(RefType == "SL Cheque")
                {
                    nTotalSLChequeAmount = parseFloat(nTotalSLChequeAmount) + parseFloat(RefAmount);
                }
            }
        }

        var result = "";
        parentAmount = parseFloat(parentAmount).toFixed(2);
        if(CCAply == true && result == "")
        {
            nTotalCCAmount = parseFloat(nTotalCCAmount.toFixed(2));

            var nGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalCCAmount).toFixed(2);
            nGapAmount = parseFloat(nGapAmount.toFixed(2));
            if(nGapAmount<0)
            {
                nGapAmount=nGapAmount*(-1);
            }

            if(nGapAmount>0.01)
            {
                result = "NotEqual" + "," + "Total amount Of CC is "+nTotalCCAmount+" but it's Account Head " + accountHeadName + "'s amount is " + parentAmount;
            }
        }
        if(BTAply == true && result == "")
        {
            nTotalBTAmount = parseFloat(nTotalBTAmount.toFixed(2));
            nTotalSLBTAmount = parseFloat(nTotalSLBTAmount.toFixed(2));

            var nGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalBTAmount).toFixed(2);
            var nSLGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalSLBTAmount).toFixed(2);
            nGapAmount = parseFloat(nGapAmount.toFixed(2));
            nSLGapAmount = parseFloat(nSLGapAmount.toFixed(2));
            if(nGapAmount<0)
            {
                nGapAmount=nGapAmount*(-1);
            }
            if(nSLGapAmount<0)
            {
                nSLGapAmount=nSLGapAmount*(-1);
            }

            if(nGapAmount>0.01 && nObjTypeInt===0)
            {
                result = "NotEqual" + "," + "Total amount Of BT is "+nTotalBTAmount+" but it's Account Head " + accountHeadName + "'s amount is " + parentAmount;
            }
            if(nSLGapAmount>0.01 && nObjTypeInt===1)
            {
                result = "NotEqual" + "," + "Total amount Of SL BT is "+nTotalSLBTAmount+" but it's Sub Ledger " + sCostCenterName + "'s amount is " + parentAmount;
            }
        }
        if(ChkAply == true && result == "")
        {
            nTotalChequeAmount = parseFloat(nTotalChequeAmount.toFixed(2));
            nTotalSLChequeAmount = parseFloat(nTotalSLChequeAmount.toFixed(2));
            var nGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalChequeAmount).toFixed(2);
            var nSLGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalSLChequeAmount).toFixed(2);
            nGapAmount = parseFloat(nGapAmount.toFixed(2));
            nSLGapAmount = parseFloat(nSLGapAmount.toFixed(2));
            if(nGapAmount<0)
            {
                nGapAmount=nGapAmount*(-1);
            }

            if(nSLGapAmount<0)
            {
                nSLGapAmount=nSLGapAmount*(-1);
            }

            if(nGapAmount>0.01 && nObjTypeInt===0)
            {
                result = "NotEqual" + "," + "Total amount Of Cheque is "+nTotalChequeAmount+" but it's Account Head " + accountHeadName + "'s amount is " + parentAmount;
            }

            if(nSLGapAmount>0.01 && nObjTypeInt===1)
            {
                result = "NotEqual" + "," + "Total amount Of SL Cheque is "+nTotalSLChequeAmount+" but it's Sub Ledger " + sCostCenterName + "'s amount is " + parentAmount;
            }
        }
        if(IRAply == true && result == "")
        {
            nTotalIRAmount = parseFloat(nTotalIRAmount.toFixed(2));
            var nGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalIRAmount).toFixed(2);
            nGapAmount = parseFloat(nGapAmount.toFixed(2));
            if(nGapAmount<0)
            {
                nGapAmount=nGapAmount*(-1);
            }

            if(nGapAmount>0.01)
            {
                result = "NotEqual" + "," + "Total amount Of IR is "+nTotalIRAmount+" but it's Account Head " + accountHeadName + "'s amount is " + parentAmount;
            }
        }
        result = result.split(",");
        return result;
    }

    function RefreshObject()
    {
        var oVoucher=  {
            VoucherID : parseInt(_oVoucher.VoucherID),
            BUID :  parseInt($('#cboBusinessUnit').val()),
            VoucherTypeID : parseInt($('#cboVoucherType').val()),
            VoucherNo : $('#txtVoucherNo').val(),
            Narration : $.trim($('#txtNarration').val()),
            ReferenceNote :_oVoucher.ReferenceNote,
            VoucherDate : $('#txtVoucherDate').datebox('getValue'),
            AuthorizedBy : parseInt(_oVoucher.AuthorizedBy),
            BatchID :  parseInt($('#cboBatch').val()),
            TaxEffectInt : parseInt($('#cboTex').val()),
            CRate : parseFloat($('#txtCRate').val()),
            CurrencyID : parseInt($('#cboCurrency').val()),
            VDObjs : $("#tblVoucherDetail").data('rows')
        };
        return oVoucher;
    }

    function GetVDObjs()
    {
        var oVDObjs=[];
        var oTempVDObjs = $("#tblVoucherDetail").data('rows');
        for(var i=0; i<oTempVDObjs.length; i++)
        {
            var oVDObj= {
                VDObjID : oTempVDObjs[i].VDObjID,
                ObjTypeInt : oTempVDObjs[i].ObjTypeInt,
                RefID : oTempVDObjs[i].RefID,
                CID : oTempVDObjs[i].CID,
                CAmount : oTempVDObjs[i].CAmount,
                CRate : oTempVDObjs[i].CRate,
                Amount : oTempVDObjs[i].Amount,
                Detail : oTempVDObjs[i].Detail,
                IsDr : oTempVDObjs[i].IsDr,
                DR_CR : oTempVDObjs[i].DR_CR,
                BTTypeInt : oTempVDObjs[i].BTTypeInt,
                WUID : oTempVDObjs[i].WUID,
                MUID : oTempVDObjs[i].MUID,
                Qty : oTempVDObjs[i].Qty,
                UPrice : oTempVDObjs[i].UPrice,
                OrderID : oTempVDObjs[i].OrderID,
                SalesNo : oTempVDObjs[i].SalesNo,
                ProjectName : oTempVDObjs[i].ProjectName,
                ORemarks : oTempVDObjs[i].Remarks
            };
            oVDObjs.push(oVDObj);
        }
        return oVDObjs;
    }

    function DefinePreviousCell(nRowIndex)
    {
        var sReturnClass="";
        var DrCrType = $("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR;
        if(DrCrType=="Debit")
        {
            sReturnClass=".debitclass";
        }
        else if(DrCrType=="Credit")
        {
            sReturnClass=".creditclass";
        }
        else if(DrCrType=="Subledger")
        {
            sReturnClass=".ccamountclass";
        }
        else if(DrCrType=="Bill")
        {
            sReturnClass=".bteffectamountclass";
        }
        else if(DrCrType=="Cheque")
        {
            sReturnClass=".chequeamountclass";
        }
        else if(DrCrType=="Inventory")
        {
            sReturnClass=".itemamountclass";
        }
        else if(DrCrType=="Order Ref")
        {
            sReturnClass=".ordernoclass";
        }
        return sReturnClass;
    }

    function DeleteRow(nRowIndex)
    {
        if(!confirm("Confirm to delete?")) return false;
        var oTempVDObjs= $("#tblVoucherDetail").data('rows');
        var oVDObjs =[]; var bFlag=false;
        var nExplationType=$("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt;
        if(nExplationType==0)
        {
            for(var i=0; i< oTempVDObjs.length; i++)
            {
                if(i<nRowIndex)
                {
                    oVDObjs.push(oTempVDObjs[i]);
                }
                else if(i>nRowIndex)
                {
                    if(bFlag==false)
                    {
                        if(oTempVDObjs[i].ObjTypeInt==0)
                        {
                            bFlag=true;
                        }
                    }
                    if(bFlag==true)
                    {
                        oVDObjs.push(oTempVDObjs[i]);
                    }
                }
            }
        }
        else
        {
            for(var i=0; i< oTempVDObjs.length; i++)
            {
                if(i!=nRowIndex)
                {
                    oVDObjs.push(oTempVDObjs[i]);
                }
            }
        }

        if(oVDObjs==null || oVDObjs.length<1)
        {
            var oVDObj=NewObject(0);
            oVDObjs.push(oVDObj);
        }
        RemakeGrid(oVDObjs);
        if(nRowIndex<=0)
        {
            nRowIndex=0;
        }
        else
        {
            nRowIndex=nRowIndex-1;
        }
        var sSelectedClass= DefinePreviousCell(nRowIndex);
        $('#tblVoucherDetail').data('rows', oVDObjs);
        $("#tblVoucherDetail").data("selectedIndex", nRowIndex);
        $('#tblVoucherDetail tr').eq(nRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('input').addClass("highlight");
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).removeClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).addClass("textboxstyle");
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).show();
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).focus();
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).select();
        InitializeKeyDownEvent(sSelectedClass);
        RefreshSummery();
    }

    $('#btnApproved').click(function(e){
        if(_oVoucher==null || parseInt(_oVoucher.VoucherID)<=0)
        {
            alert("Sorry, Invalid Voucher!");
            return false;
        }
        if(parseInt(_oVoucher.AuthorizedBy)!=0)
        {
            alert("Sorry,This Voucher Already Approved.");
            return false;
        }
        if (!confirm("Confirm to Approved ?")) return false ;
        var oVouchers=[];
        oVouchers.push(_oVoucher);

        var oVoucher = {
            VoucherList : oVouchers
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/Voucher/Approved",
            traditional: true,
            data:  JSON.stringify(oVoucher),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oTempVouchers = jQuery.parseJSON(data);
                if(oTempVouchers[0].ErrorMessage == "")
                {
                    var oVoucher =oTempVouchers[0];
                    alert("Sucessfully Approved");
                    var oVouchers =sessionStorage.getItem("Vouchers");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndexVoucher"));
                    if(oVouchers!=null)
                    {
                        oVouchers = jQuery.parseJSON(oVouchers);
                    }
                    else
                    {
                        oVouchers=[];
                    }
                    if(nIndex!=-1)
                    {
                        oVouchers[nIndex]=oVoucher;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndexVoucher", oVouchers.length);
                        oVouchers.push(oVoucher);
                    }
                    sessionStorage.setItem("VoucherButton", "Approved");
                    sessionStorage.setItem("Vouchers", JSON.stringify(oVouchers));
                    var Operation = sessionStorage.getItem("Operation");
                    if(Operation==="Approved")
                    {
                        window.location.href = sessionStorage.getItem('BaseAddress')+ "/Voucher/ViewVouchers?a=X&menuid="+ parseInt(sessionStorage.getItem('MenuID'));
                    }
                    else
                    {
                        window.location.href = sessionStorage.getItem('BaseAddress')+ "/Voucher/ViewVouchers?a=na&menuid="+ parseInt(sessionStorage.getItem('MenuID'));
                    }
                }
                else {
                    alert(oTempVouchers[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $('#btnSave').click(function(e){
        if(!ValidateInput())return;
        var sVoucherType = $('#cboVoucherType option:selected').text();
        if (!confirm(sVoucherType+"?\nConfirm to Save?")) return ;
        var oVoucher=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/Voucher/SaveTest",
            traditional: true,
            data:  JSON.stringify(oVoucher),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oVoucher = jQuery.parseJSON(data);
                if (oVoucher.ErrorMessage == '' || oVoucher.ErrorMessage == null)
                {
                    if(oVoucher.VoucherID>0)
                    {
                        alert("Voucher saved sucessfully with voucher no : "+oVoucher.VoucherNo);
                        //window.open(sessionStorage.getItem('BaseAddress')+'/Voucher/PrintVoucher?id=' + oVoucher.VoucherID, "_blank");
                        var oVouchers =sessionStorage.getItem("Vouchers");
                        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndexVoucher"));
                        if(oVouchers!=null)
                        {
                            oVouchers = jQuery.parseJSON(oVouchers);
                        }
                        else
                        {
                            oVouchers=[];
                        }
                        if(nIndex!=-1)
                        {
                            oVouchers[nIndex]=oVoucher;
                        }
                        else
                        {
                            sessionStorage.setItem("SelectedRowIndexVoucher", oVouchers.length);
                            oVouchers.push(oVoucher);
                        }
                        sessionStorage.setItem("VoucherButton", "Save");
                        sessionStorage.setItem("Vouchers", JSON.stringify(oVouchers));
                        sessionStorage.setItem("VoucherHeader", "Add New Voucher");

                        window.location.href = sessionStorage.getItem('BaseAddress') +'/Voucher/ViewSingleCurrencyVoucher?buid='+parseInt(oVoucher.BUID)+'&id=0&nvtid='+oVoucher.VoucherTypeID+'&copyid=0';
                    }
                    else
                    {
                        alert("Invalid Operation!");
                    }
                }
                else
                {
                    alert(oVoucher.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(xhr+'~' +status+'~'+error);
            }
        });
    });

    $('#btnSearch').click(function () {
        var oParameter = new Object();
        oParameter.MultipleItemReturn = false;
        oParameter.Name ="Voucher Advance Search";
        var url = sessionStorage.getItem('BaseAddress')+"/Voucher/VoucherAdvanceSearch";
        var oVoucher = window.showModalDialog(url, oParameter, 'dialogHeight:500px;dialogWidth:870px;dialogLeft:250;dialogTop:50;center:yes;resizable:yes;status:no;scroll:no');
        if(oVoucher!=null)
        {
            if(parseInt(oVoucher.VoucherID)>0)
            {
                DisabledVoucherNo(oVoucher);
                window.location.href =  sessionStorage.getItem('BaseAddress') +'/Voucher/ViewSingleCurrencyVoucher?buid='+parseInt(oVoucher.BUID)+'&id='+parseInt(oVoucher.VoucherID)+'&nvtid=1&copyid=0';
            }
        }
    });

    $('#btnPrint').click(function (e)
    {
        if(_oVoucher==null || parseInt(_oVoucher.VoucherID)<=0)
        {
            alert("Invalid Voucher! Please Save Your Voucher!");
            return false;
        }
        window.open(sessionStorage.getItem('BaseAddress')+'/Voucher/PrintVoucher?id=' + _oVoucher.VoucherID+"&buid=0", "_blank");
    });

    $('#btnClose').click(function (e){
        sessionStorage.setItem("VoucherButton", "Close");
        var Operation = sessionStorage.getItem("Operation");
        if(Operation==="Approved")
        {
            window.location.href = sessionStorage.getItem('BaseAddress')+ "/Voucher/ViewVouchers?a=X&menuid=" + parseInt(sessionStorage.getItem('MenuID'));
        }
        else
        {
            var sBackURL = sessionStorage.getItem("BackURL");
            window.location.href = sBackURL;
        }
    });

    $('#txtNarration').keydown(function(e){
        if(e.which === 9)
        {
            $('#btnSave').focus();
        }
    }).keyup(function(e){
        if(e.which === 13)
        {
            $('#txtNarration').val($.trim($('#txtNarration').val()));
        }
    });

    $('#btnSave').keydown(function(e){
        if(e.which === 9)
        {
            $('#btnClose').focus();
        }
    });

    $('#btnClose').keydown(function(e){
        if(e.which === 9)
        {
            $('#cboVoucherType').focus();
        }
    });

    $('#cboVoucherType').keydown(function(e){
        if(e.which === 9)
        {
            $('#txtVoucherNo').focus();
        }
    });

    $("#btnCloseBillNo").click(function(){
        $('#winBillNo').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.btbillnoclass').focus();
    });

    $('#btnOkBillNo').click(function(){
        SelectBill();
    });

    $('#winBillNo').keydown(function (e)
    {
        if (e.which === 27) {
            $('#winBillNo').window('close');
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            $('#tblVoucherDetail tr').eq(nRowIndex).find('.btbillnoclass').focus();
        }
        else if(e.which == 38 || e.which == 40)
        {
            var oBill= $('#tblBillNo').datagrid('getSelected');
            var nIndex=$('#tblBillNo').datagrid('getRowIndex', oBill);
            if(e.which == 38)//up arrow=38
            {
                if(nIndex<=0)
                {
                    $('#tblBillNo').datagrid('selectRow', 0);
                }
                else
                {
                    $('#tblBillNo').datagrid('selectRow', nIndex-1);
                }
            }
            if(e.which == 40)//down arrow=40
            {
                var oCurrentList = $('#tblBillNo').datagrid('getRows');
                if(nIndex>=oCurrentList.length-1)
                {
                    $('#tblBillNo').datagrid('selectRow', oCurrentList.length-1);
                }
                else
                {
                    $('#tblBillNo').datagrid('selectRow', nIndex+1);
                }
            }
        }
        else if(e.which == 13)//enter=13
        {
            SelectBill();
        }
        else if(e.which == 107)
        {
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            var nBTTypeInt = $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt;
            if(parseInt(nBTTypeInt) == 1 || parseInt(nBTTypeInt) == 3)
            {
                CreateNewBill();
            }
        }
        else
        {
            var txtSearchByBillNo = document.getElementById('txtSearchByBillNo').value;
            var oSearchedLedgerBillNo = [];  var sTempName="";
            var oCurrentList = $('#tblBillNo').datagrid('getRows');
            if (e.which == 8)
            {
                oCurrentList = _oVoucherBills;
            }
            for(i=0;i<oCurrentList.length;i++){
                sTempName=oCurrentList[i].BillNo;
                n=sTempName.toUpperCase().indexOf(txtSearchByBillNo.toUpperCase());
                if(n!=-1)
                {
                    oSearchedLedgerBillNo.push(oCurrentList[i]);
                }
            }
            RefreashBillNos(oSearchedLedgerBillNo);
        }
    });


    //Start Voucher Bill
    function RefreshVBComboBoxControls()
    {
        var oCurrencys =$('#cboCurrency').data('Currencys');
        $("#cboVBCurrency").icsLoadCombo({ List: oCurrencys, OptionValue: "CurrencyID", DisplayText: "NameSymbol", InitialValue : "Custom" });
    }

    function RefreshVBControls(oVoucherBill)
    {
        $('#winVoucherBill').data('VoucherBill', oVoucherBill);
        $('#txtVBBusinessUnit').val(oVoucherBill.BUName);
        $('#txtVBAccountHead').val(oVoucherBill.AccountHeadName);
        $('#txtVBSubLedger').val(oVoucherBill.SubLedgerName);
        $('#txtVBBillNo').val(oVoucherBill.BillNo);
        $('#txtVBBillDate').datebox('setValue', oVoucherBill.BillDateInString);
        $('#txtVBCreditDays').val(oVoucherBill.CreditDays);
        $('#txtVBMaturityDate').datebox('setValue', oVoucherBill.DueDateInString);
        $('#cboVBCurrency').val(oVoucherBill.CurrencyID);
        $('#txtVBCurrencyAmount').val(formatPrice(oVoucherBill.CurrencyAmount));
        $('#txtVBCRate').val(formatPrice(oVoucherBill.CurrencyRate));
        $('#txtVBAmountInBDT').val(formatPrice(oVoucherBill.Amount));
        $('#txtVBRemarks').val(oVoucherBill.Remarks);

        $('#txtVBBusinessUnit').prop("disabled", true);
        $('#txtVBAccountHead').prop("disabled", true);
        $('#txtVBSubLedger').prop("disabled", true);
        $('#txtVBCRate').prop("disabled", true);
        $('#txtVBAmountInBDT').prop("disabled", true);
        ChnageCurrency();
        $('#txtVBBillNo').focus();
    }

    function CalculateCreditDays(date){
        var dBillDate=new Date($('#txtVBBillDate').datebox('getValue'));
        var dMaturityDate=new Date($('#txtVBMaturityDate').datebox('getValue'));
        var nCreditDays= Math.floor((dMaturityDate - dBillDate) / (1000*60*60*24));
        if(nCreditDays<0){
            nCreditDays=0;
            $('#txtVBMaturityDate').datebox('setValue', icsdateformat(dBillDate));
        }
        $('#txtVBCreditDays').val(nCreditDays);
    }

    function VBValidateInput()
    {
        var oVoucherBill = $('#winVoucherBill').data('VoucherBill');
        if(oVoucherBill === null || parseInt(oVoucherBill.BUID) === 0)
        {
            alert("Invalid Business Unit!");
            return false;
        }

        if(oVoucherBill === null || parseInt(oVoucherBill.AccountHeadID) === 0)
        {
            alert("Invalid Account Head!");
            return false;
        }
        if($.trim($('#txtVBBillNo').val()) === null || $.trim($('#txtVBBillNo').val())=== "")
        {
            alert("Please Enter Bill No!");
            $('#txtVBBillNo').focus();
            return false;
        }

        var sBillDate = $('#txtVBBillDate').datebox('getValue');
        if(sBillDate === null || sBillDate === "")
        {
            alert("Please Select Bill Date");
            $('#txtVBBillDate').focus();
            return false;
        }

        var sDueDate =  $('#txtVBMaturityDate').datebox('getValue');
        if(sDueDate === null || sDueDate === "")
        {
            alert("Please Select Maturity Date");
            $('#txtVBMaturityDate').focus();
            return false;
        }

        var nCurrencyAmount = parseFloat(icsRemoveComma($("#txtVBCurrencyAmount").val()));
        if(nCurrencyAmount <= 0)
        {
            alert("Please Enter Currency Amount");
            $('#txtVBCurrencyAmount').focus();
            return false;
        }

        var nCRate = parseFloat(icsRemoveComma($("#txtVBCRate").val()));
        if(nCRate <= 0)
        {
            alert("Please Enter Currency Conversion Rate!");
            $('#txtVBCRate').focus();
            return false;
        }

        var nAmountInBDT = parseFloat(icsRemoveComma($("#txtVBAmountInBDT").val()));
        if(nAmountInBDT <= 0)
        {
            alert("Please Enter Currency Amount");
            $('#txtVBAmountInBDT').focus();
            return false;
        }

        var dSalesDate=new Date(sBillDate);
        var dMaturity=new Date(sDueDate);
        if(dMaturity.getTime() ===dSalesDate.getTime()){
            if(!confirm('Maturity Date: '+sDueDate+' and Bill Date: '+sBillDate+', is same.\nConfirm to Save?')){return false;}
        }

        return true;
    }

    function VBResreshObject()
    {
        var oTempVoucherBill = $('#winVoucherBill').data('VoucherBill');
        var oVoucherBill =  {
            VoucherBillID : parseInt(oTempVoucherBill.VoucherBillID),
            AccountHeadID : parseInt(oTempVoucherBill.AccountHeadID),
            SubLedgerID : parseInt(oTempVoucherBill.SubLedgerID),
            BUID : parseInt(oTempVoucherBill.BUID),
            BillNo : $.trim($('#txtVBBillNo').val()),
            CreditDays : parseFloat(icsRemoveComma($("#txtVBCreditDays").val())),
            BillDate : $('#txtVBBillDate').datebox('getValue'),
            DueDate : $('#txtVBMaturityDate').datebox('getValue'),
            TrTypeInInt : parseInt(oTempVoucherBill.TrTypeInInt),
            CurrencyID : parseInt($('#cboVBCurrency').val()),
            CurrencyRate : parseFloat(icsRemoveComma($("#txtVBCRate").val())),
            CurrencyAmount : parseFloat(icsRemoveComma($("#txtVBCurrencyAmount").val())),
            Amount : parseFloat(icsRemoveComma($("#txtVBAmountInBDT").val())),
            Remarks : $.trim($('#txtVBRemarks').val()),
            OpeningBillAmount : parseFloat(oTempVoucherBill.OpeningBillAmount),
            OpeningBillDateInString : oTempVoucherBill.OpeningBillDateInString
        };
        return oVoucherBill;
    }

    $("#btnVBSave").click(function(){
        if(!VBValidateInput()) return;
        var oVoucherBill = VBResreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/VoucherBill/Save",
            traditional: true,
            data:  JSON.stringify(oVoucherBill),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oVoucherBill = jQuery.parseJSON(data);
                if (oVoucherBill.VoucherBillID>0) {
                    alert("Data Saved sucessfully");
                    var  sOperation = $('#winVoucherBill').data('VoucherBillOperation');
                    if(sOperation==='Add Voucher Bill')
                    {
                        var index = $('#tblBillNo').datagrid('getRows').length;
                        $('#tblBillNo').datagrid('appendRow',oVoucherBill);
                        $('#tblBillNo').datagrid('selectRow',index);
                        $("#winVoucherBill").icsWindow('close');
                    }
                    else
                    {
                        var index = $('#winVoucherBill').data('SelectedRowIndex');
                        $('#tblBillNo').datagrid('updateRow',{ index: index, row: oVoucherBill });
                        $('#tblBillNo').datagrid('selectRow',index);
                        $("#winVoucherBill").icsWindow('close');
                    }
                }
                else {
                    alert(oVoucherBill.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $('#txtVBCreditDays').keyup(function(e){
        var nDays=parseInt($(this).val());
        var sSalesDate=$('#txtVBBillDate').datebox('getValue');
        var dBillDate=new Date(sSalesDate);
        var dMaturityDate=dBillDate;
        dMaturityDate.setDate(dMaturityDate.getDate()+nDays);
        $('#txtVBMaturityDate').datebox('setValue', icsdateformat(dMaturityDate));
    });

    $('#txtVBMaturityDate,#txtVBBillDate').datebox({
        onSelect: function(date){
            CalculateCreditDays();
        }
    });

    $('#cboVBCurrency').change(function(){
        ChnageCurrency();
    });

    function ChnageCurrency()
    {
        var nCurrencyID =  $("#cboVBCurrency").val();
        if(nCurrencyID == 1)
        {
            $("#txtVBCRate").prop("disabled",true);
            $("#txtVBCRate").val(1.00);
            var nCurrencyAmount = parseFloat(icsRemoveComma($('#txtVBCurrencyAmount').val()));
            $('#txtVBAmountInBDT').val(icsFormatPrice(parseFloat(nCurrencyAmount.toFixed(2))));
        }
        else
        {
            $("#txtVBCRate").prop("disabled",false);
            $("#txtVBCRate").val(0.00);
            var amountInBDT = icsRemoveComma($("#txtVBAmountInBDT").val());
            var nGivenAmount = icsRemoveComma($('#txtVBCurrencyAmount').val());
            var nCRate = parseFloat(amountInBDT) / parseFloat(nGivenAmount);
            if(isNaN(nCRate))
            {
                nCRate = 0;
            }
            nCRate = Math.round(parseFloat(nCRate)*1000)/1000;
            $('#txtVBCRate').val(icsFormatPrice(nCRate));
        }
    }

    $("#txtVBCRate").keyup(function (e){
        var nConversionRate =  $(this).val();
        var nCurrencyAmount = icsRemoveComma($("#txtVBCurrencyAmount").val());
        var nAmountInBDT = parseFloat(nCurrencyAmount) * parseFloat(nConversionRate);
        nAmountInBDT = Math.round(parseFloat(nAmountInBDT)*1000) / 1000;
        if(isNaN(nAmountInBDT))
        {
            nAmountInBDT = 0;
        }
        $('#txtVBAmountInBDT').val(icsFormatPrice(parseFloat(nAmountInBDT.toFixed(2))));
    });

    $("#txtVBCurrencyAmount").keyup(function (e){
        var nCurrencyAmount =  parseFloat(icsRemoveComma($("#txtVBCurrencyAmount").val()));
        var nConversionRate = parseFloat(icsRemoveComma($("#txtVBCRate").val()));
        var nAmountInBDT = parseFloat(nCurrencyAmount) * parseFloat(nConversionRate);
        nAmountInBDT = Math.round(parseFloat(nAmountInBDT)*1000) / 1000;
        if(isNaN(nAmountInBDT))
        {
            nAmountInBDT = 0;
        }
        $('#txtVBAmountInBDT').val(icsFormatPrice(parseFloat(nAmountInBDT.toFixed(2))));
    });

    $('#btnVBClose').click(function(){
        $("#winVoucherBill").icsWindow('close');
    });
    
    function CreateNewBill()
    {
        var sBillNo = "";
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        var oBillObj=$("#tblVoucherDetail").data('rows')[nRowIndex];
        var nBTTypeInt = oBillObj.TrTypeInt;
        if(parseInt(nBTTypeInt) == 3)
        {
            sBillNo = $("#txtVoucherNo").val();
        }
        var nSuggestedAmount = 0;
        if(parseInt(nBTTypeInt) == 1 || parseInt(nBTTypeInt)==3){
            nSuggestedAmount = $('#tblVoucherDetail tr').eq(nRowIndex).find('.bteffectamountclass').val();
        }

        var sBillDate = $('#txtVoucherDate').datebox('getValue');
        var dBillDate=new Date(sBillDate);
        var dMaturityDate=dBillDate;
        dMaturityDate.setDate(dMaturityDate.getDate()+30);

        var nBUID = parseInt($('#cboBusinessUnit').val());
        var oBusinessUnit = { BusinessUnitID: 0, Code :"", Name: "", ShortName : "" };
        var oBusinessUnits  = $('#cboBusinessUnit').data('BusinessUnits');
        var oTempBusinessUnit = ICS_FindObject(oBusinessUnits, 'BusinessUnitID', nBUID);
        if(oTempBusinessUnit != null)
        {
            oBusinessUnit.BusinessUnitID = parseInt(oTempBusinessUnit.BusinessUnitID);
            oBusinessUnit.Code = oTempBusinessUnit.Code;
            oBusinessUnit.Name = oTempBusinessUnit.Name;
            oBusinessUnit.ShortName = oTempBusinessUnit.ShortName;
        }

        var nCurrencyRate = parseFloat($('#txtCRate').val());
        var nCurrencyAmount = parseFloat(RemoveComma(nSuggestedAmount));
        var nAmount = parseFloat((nCurrencyRate * nCurrencyAmount).toFixed(2));

        var oVoucherBill =  {
            VoucherBillID : 0,
            AccountHeadID : parseInt(oBillObj.AHID),
            SubLedgerID : parseInt(oBillObj.CCID),
            BUID : parseInt($('#cboBusinessUnit').val()),
            BillNo : sBillNo,
            CreditDays : 30,
            BillDate : $('#txtVoucherDate').datebox('getValue'),
            BillDateInString : $('#txtVoucherDate').datebox('getValue'),
            DueDate : icsdateformat(dMaturityDate),
            DueDateInString : icsdateformat(dMaturityDate),
            TrTypeInInt : nBTTypeInt,
            CurrencyID : parseInt($('#cboCurrency').val()),
            CurrencyRate : parseFloat(nCurrencyRate),
            CurrencyAmount : parseFloat(nCurrencyAmount),
            Amount : parseFloat(nAmount),
            AccountHeadName : oBillObj.AHName,
            SubLedgerCode : oBillObj.CCCode,
            SubLedgerName : oBillObj.CCName,
            BUCode : oBusinessUnit.Code,
            BUName : oBusinessUnit.Name,
            BUShortName : oBusinessUnit.ShortName,
            Remarks : 'N/A',
            OpeningBillAmount : 0,
            OpeningBillDateInString : $('#txtVoucherDate').datebox('getValue')
        };

        RefreshVBComboBoxControls();
        RefreshVBControls(oVoucherBill);
        $('#winVoucherBill').data('SelectedRowIndex', 0);
        $('#winVoucherBill').data('VoucherBillOperation', 'Add Voucher Bill');
        $("#winVoucherBill").icsWindow('open', "Add Voucher Bill");
    }

    function EditVoucherBill()
    {
        var oVoucherBill = $('#tblBillNo').datagrid('getSelected');
        if(oVoucherBill == null || parseInt(oVoucherBill.VoucherBillID)<=0)
        {
            alert("Please select a Bill!");
            return;
        }
        var nSelectedRowIndex=$('#tblBillNo').datagrid('getRowIndex',oVoucherBill);

        RefreshVBComboBoxControls();
        RefreshVBControls(oVoucherBill);
        $('#winVoucherBill').data('VoucherBillOperation', 'Edit Voucher Bill');
        $('#winVoucherBill').data('SelectedRowIndex', nSelectedRowIndex);
        $("#winVoucherBill").icsWindow('open', "Edit Voucher Bill");
    }

    function SelectBill()
    {
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        var oSelectedBill= $('#tblBillNo').datagrid('getSelected');
        if(oSelectedBill == null || parseInt(oSelectedBill.VoucherBillID)<=0)
        {
            alert("Please select a Bill No !");
            return;
        }

        var nBUID = parseInt($('#cboBusinessUnit').val());
        if(parseInt(nBUID) != parseInt(oSelectedBill.BUID))
        {
            alert("Selected Bill Business Unit & Voucher Business Unit Not Match!!");
            return;
        }

        var nCRate = 0;
        var nCID = 0;
        for(var i=nRowIndex;i>=0;i--)
        {
            var sDR_CR =  $("#tblVoucherDetail").data('rows')[i].DR_CR;
            if(sDR_CR == "Debit" || sDR_CR == "Credit")
            {
                nCRate = $("#tblVoucherDetail").data('rows')[i].CRate;
                nCID = $("#tblVoucherDetail").data('rows')[i].CID;
                break;
            }
        }

        var txtbtAmountClassVal = $('#tblVoucherDetail tr').eq(nRowIndex).find('.bteffectamountclass').val();
        txtbtAmountClassVal = parseFloat(RemoveComma(txtbtAmountClassVal));
        var nRemainningBalance = parseFloat(oSelectedBill.RemainningBalance);
        nRemainningBalance = parseFloat(nRemainningBalance.toFixed(2));

        if(parseInt(oSelectedBill.CurrencyID) != parseInt(nCID))
        {
            alert("Sorry, Currency is not match with Voucher Currency");
            return false;
        }
        var nBTTypeInt= parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt);
        if(nBTTypeInt==1 || nBTTypeInt==3)
        {
            if(parseFloat(txtbtAmountClassVal) < parseFloat(nRemainningBalance))
            {
                alert("Sorry, Remainning Balance for This Account Head is " + parseFloat(txtbtAmountClassVal));
                return false;
            }
        }

        var bIsDr = true;
        for(var i=nRowIndex;i>=0;i--)
        {
            var sDR_CR =  $("#tblVoucherDetail").data('rows')[i].DR_CR;
            if(sDR_CR == "Debit" || sDR_CR == "Credit")
            {
                bIsDr = $("#tblVoucherDetail").data('rows')[i].IsDr;
                break;
            }
        }

        var nBTTypeInt = nBTTypeInt = $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt;
        if(nBTTypeInt != 1 && nBTTypeInt !=3 )
        {
            if(bIsDr == oSelectedBill.IsDebit)
            {
                var sBillDrCr = (oSelectedBill.IsDebit == true ? "Debit" : "Credit");
                alert("Sorry, Your Selected Bill AND Account Head Both Are " + sBillDrCr);
                return false;
            }
        }

        var result = CheckDuplicateOrNot(oSelectedBill.VoucherBillID,"Bill");
        if(result == "Duplicate")
        {
            alert("Sorry, Can't take same Bill for one debit or credit.");
            return false;
        }

        var nDrCrAmount = 0;
        var nCRate = 0;
        var sCSymbol = "";
        var sDrCr = "";

        for(var i=nRowIndex;i>=0;i--)
        {
            if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit" || $("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
            {
                nDrCrAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                nCRate = $("#tblVoucherDetail").data('rows')[i].CRate;
                sCSymbol = $("#tblVoucherDetail").data('rows')[i].CSymbol;
                sDrCr = $("#tblVoucherDetail").data('rows')[i].DR_CR;
                break;
            }
        }

        var nBTTypeInt = $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt;
        if(parseInt(nBTTypeInt) == 1 || parseInt(nBTTypeInt) == 3)
        {
            var nPikerBillCAmount = 0;
            if(parseFloat(parseFloat(oSelectedBill.CurrencyAmount).toFixed(2)) > parseFloat(parseFloat(nDrCrAmount).toFixed(2)))
            {
                alert("Sorry, Your Selected Bill Amount is " + _oVoucher.BaseCUSymbol + " " + oSelectedBill.Amount + " but total amount of this " + sDrCr + " is " + _oVoucher.BaseCUSymbol + " " + nDrCrAmount);
                return false;
            }
        }
        $('#winBillNo').window('close');

        var oBillNo = $('#tblVoucherDetail tr').eq(nRowIndex).find('.btbillnoclass');
        $(oBillNo).val(oSelectedBill.BillNo);
        $(oBillNo).removeClass("textboxstyle");
        $(oBillNo).addClass("highlight");
        $(oBillNo).addClass("textboxstyle2");
        var nInputBoxIndex = $(".btbillnoclass").index(oBillNo);
        var index = $('.btbillnoclass').index(oBillNo);
        $('.btbilldateclass').eq(index).text(oSelectedBill.BillDateInString);
        ResetAllInputBox(nInputBoxIndex, '.btnarrationclass');
        $("#tblVoucherDetail").data('rows')[nRowIndex].BillNo=oSelectedBill.BillNo;
        var nBillCAmount = parseFloat((oSelectedBill.RemainningBalance).toFixed(2));

        $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount = parseFloat(nBillCAmount);
        $("#tblVoucherDetail").data('rows')[nRowIndex].BillDateStr = oSelectedBill.BillDateInString;
        $("#tblVoucherDetail").data('rows')[nRowIndex].BillID = oSelectedBill.VoucherBillID;
        $("#tblVoucherDetail").data('rows')[nRowIndex].CSymbol = oSelectedBill.CurrencySymbol;

        var nCRate = 0;
        var sDR_CR = "";
        for(var i=nRowIndex;i>=0;i--)
        {
            sDR_CR =  $("#tblVoucherDetail").data('rows')[i].DR_CR;
            if(sDR_CR == "Debit" || sDR_CR == "Credit")
            {
                nCRate = $("#tblVoucherDetail").data('rows')[i].CRate;
                break;
            }
        }

        var txtbtBillAmountClass = $('#tblVoucherDetail tr').eq(nRowIndex).find('.btamountclass');
        var nBillAmount = nBillCAmount;

        $(txtbtBillAmountClass).text(oSelectedBill.CurrencySymbol + " "+  formatPrice(parseFloat(nBillAmount.toFixed(2)),null));
        $("#tblVoucherDetail").data('rows')[nRowIndex].BillAmount = parseFloat(nBillAmount.toFixed(2));
        $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount = parseFloat(nBillAmount.toFixed(2));

        var txtBillEffectAmount = $('#tblVoucherDetail tr').eq(nRowIndex).find('.bteffectamountclass');
        txtBillEffectAmount.val(parseFloat(nBillAmount.toFixed(2)));
        ResetAllInputBox(nInputBoxIndex, '.btnarrationclass');
        InitializeKeyDownEvent(".btnarrationclass"); return;
    }

    function RefreashBillNos(oBillNos)
    {
        var data=oBillNos;
        data={"total":""+data.length+"","rows":data};
        $('#tblBillNo').datagrid('loadData',data);
        $('#tblBillNo').datagrid('selectRow', 0);
    }
    //End Voucher Bill
    
    
    //Start Cheque
    $("#btnRefreshCheque").click(function(){
        var nChaqueType=parseInt($("#cboChequeType").val());
        if(nChaqueType == 0)
        {
            alert("Please select Cheque Type");
            return false;
        }
        GetsReceived();
    });

    function GetsReceived()
    {
        debugger;
        var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');

        var nChaqueType=parseInt($("#cboChequeType").val());
        if(nChaqueType == 2)
        {
            $("#tblVoucherDetail").data('rows')[nRowIndex].IsPaidChk = true;
        }else{
            $("#tblVoucherDetail").data('rows')[nRowIndex].IsPaidChk = false;
        }

        $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeType=$("#tblVoucherDetail").data('rows')[nRowIndex].IsPaidChk?2:1;
        var oVoucherCheque = {
            ChequeNo:$.trim($('#txtChequeNo').val()),
            ChequeType : $("#tblVoucherDetail").data('rows')[nRowIndex].IsPaidChk?2:1,
            ChequeID : parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID),
            CCID : parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].CCID)
        };

        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oVoucherCheque,
            ControllerName: "Voucher",
            ActionName: "GetsCheques",
            IsWinClose: false
        };
        //if(e.which===9){
        //    debugger;
        //    if($("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID>0){
        //        IdentifyConfiguration(nRowIndex,this);
        //        return;
        //    }
        //}
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if(nChaqueType===1)
                {
                    if (parseInt(response.objs[0].ReceivedChequeID) > 0) {
                        var oCheques = response.objs;
                        RefreashCheque(oCheques);
                        $('#winCheque').data('chequenoclass',_oThis);
                        $('#winCheque').data('cheques',oCheques);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else
                {
                    if (parseInt(response.objs[0].ChequeID) > 0) {
                        var oCheques = response.objs;
                        RefreashCheque(oCheques);
                        $('#winCheque').data('chequenoclass',_oThis);
                        $('#winCheque').data('cheques',oCheques);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            }
            else
            {
                alert("Data Not Found!");
            }
        });
    }

    function RefreashCheque(oCheques)
    {
        var data=oCheques;
        data={"total":""+data.length+"","rows":data};
        $('#tblCheque').datagrid('loadData',data);
        $('#tblCheque').datagrid('selectRow', 0);
    }

    function CreateNewCheque()
    {
        debugger;
        var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
        var oCurrentObj=$("#tblVoucherDetail").data('rows')[nRowIndex];
        var nCCID=oCurrentObj.CCID;
        var nRefType=oCurrentObj.ObjTypeInt;


        var tsv=((new Date()).getTime())/1000;
        var oParameter = new Object();
        oParameter.Name = "Add Received Cheque";
        oParameter.RefType=nRefType;
        var url =sessionStorage.getItem('BaseAddress')+ "/ReceivedCheque/ViewVoucherReceivedCheque?id=0&ccid="+nCCID;
        var oReceivedCheque = window.showModalDialog(url, oParameter, 'dialogHeight:380px;dialogWidth:950px;dialogLeft:200;dialogTop:150;center:yes;resizable:no;status:no;scroll:no');
        if(oReceivedCheque!=null)
        {
            if(oReceivedCheque.ReceivedChequeID>0)
            {
                var nIndex = $('#tblCheque').datagrid('getRows').length;
                $('#tblCheque').datagrid('appendRow', oReceivedCheque);
                $('#tblCheque').datagrid('selectRow', nIndex);
            }
        }

    }

    function SelectCheque(){
        var oCheque=$('#tblCheque').datagrid('getSelected');
        $('#winCheque').window('close');

        var nChequeID = 0 ;
        var nChequeType=  parseInt($("#cboChequeType").val());
        if(nChequeType===1)
        {
            nChequeID =parseInt(oCheque.ReceivedChequeID);
        }
        else
        {
            nChequeID=parseInt(oCheque.ChequeID);
        }

        if (oCheque != null && parseInt(nChequeID) > 0) {

            var result = CheckDuplicateOrNot(parseInt(nChequeID),"Cheque");
            if(result == "Duplicate")
            {
                alert("Can't select same Cheque.");
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var chequenoControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.chequenoclass');
                chequenoControll.select();
                return;
            }
            else
            {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var chequenoControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var chequenoControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.chequenoclass');

                var sAmountSt = "";
                if(nChequeType===1)
                {
                    sAmountSt =oCheque.AmountSt;
                }
                else
                {
                    sAmountSt=oCheque.AmountInString;
                }
                var sChequeAmount=$.trim(RemoveComma(sAmountSt));
                if(sChequeAmount==""||sChequeAmount==null ||isNaN(sChequeAmount))
                {
                    alert("Invalid Cheque amount!");
                    $('#winCheque').data('chequenoclass').select();
                    return false;
                }
                if(parseFloat(sChequeAmount)<= 0)
                {
                    alert("Invalid Cheque amount!");
                    $('#winCheque').data('chequenoclass').select();
                    return false;
                }
                sChequeAmount = parseFloat(parseFloat(sChequeAmount).toFixed(2));
                $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount=  parseFloat(sChequeAmount);
                var nCCID=$("#tblVoucherDetail").data('rows')[nRowIndex].CCID;
                var sCCName=$("#tblVoucherDetail").data('rows')[nRowIndex].CCName;
                var totalCreditOrDebitAmount = 0;
                var totalChequeAmount = 0,totalSLChequeAmount = 0,totalSLAmount = 0;
                var debitOrCredit = "";
                for(var i = nRowIndex;i >= 0;i--)
                {
                    if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Cheque")
                    {
                        totalChequeAmount = parseFloat(totalChequeAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                    }
                    if($("#tblVoucherDetail").data('rows')[i].DR_CR == "SL Cheque" && $("#tblVoucherDetail").data('rows')[i].CCID===nCCID)
                    {
                        totalSLChequeAmount = parseFloat(totalSLChequeAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                    }
                    if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Subledger" && $("#tblVoucherDetail").data('rows')[i].IsChkAply && $("#tblVoucherDetail").data('rows')[i].CCID===nCCID)
                    {
                        totalSLAmount = parseFloat(totalSLAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                    }
                    else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                    {
                        totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                        debitOrCredit = "Credit";
                        break;
                    }
                    else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                    {
                        totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                        debitOrCredit = "Debit";
                        break;
                    }
                }
                totalSLChequeAmount = parseFloat(totalSLChequeAmount.toFixed(2));
                totalSLAmount = parseFloat(totalSLAmount.toFixed(2));
                totalChequeAmount = parseFloat(totalChequeAmount.toFixed(2));
                totalCreditOrDebitAmount = parseFloat(totalCreditOrDebitAmount).toFixed(2);

                if(parseFloat(totalChequeAmount) > parseFloat(totalCreditOrDebitAmount))
                {
                    alert("Sorry,Total Amount for this "+ debitOrCredit +" is " + totalCreditOrDebitAmount);
                    $('#winCheque').data('chequenoclass').select();
                    return false;
                }
                if(parseFloat(totalSLChequeAmount) > parseFloat(totalSLAmount))
                {
                    alert("Sorry,Total Amount for "+ sCCName +" is " + totalSLAmount);
                    $('#winCheque').data('chequenoclass').select();
                    return false;
                }


                $(chequenoControll).val(oCheque.ChequeNo);
                var index = $('.chequenoclass').index(chequenoControll);
                $('.accountnoclass').eq(index).text(oCheque.AccountNo);
                $('.banknameclass').eq(index).text(oCheque.BankName);
                $(chequenoControll).removeClass("textboxstyle");
                $(chequenoControll).addClass("highlight");
                $(chequenoControll).addClass("textboxstyle2");

                if(parseInt($("#cboChequeType").val()) == 1)
                {
                    $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeDate=oCheque.ChequeDateSt;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeDateStr=oCheque.ChequeDateSt;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID=parseInt(oCheque.ReceivedChequeID);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].BranchName=oCheque.BranchName;
                    $('.branchnameclass').eq(index).text(oCheque.BranchName);
                    $('.chequedateclass').eq(index).text(oCheque.ChequeDateSt);
                    $('.chequeamountclass').eq(index).val(oCheque.AmountSt);
                }
                else if(parseInt($("#cboChequeType").val()) ==2)
                {
                    $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeDate=oCheque.ChequeDateInString;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeDateStr=oCheque.ChequeDateInString;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID=parseInt(oCheque.ChequeID);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].BranchName=oCheque.BankBranchName;
                    $('.branchnameclass').eq(index).text(oCheque.BankBranchName);
                    $('.chequedateclass').eq(index).text(oCheque.ChequeDateInString);
                    $('.chequeamountclass').eq(index).val(oCheque.AmountInString);
                }
                $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeType=parseInt($("#cboChequeType").val());
                $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeNo=oCheque.ChequeNo;
                $("#tblVoucherDetail").data('rows')[nRowIndex].BankName=oCheque.BankName;
                $("#tblVoucherDetail").data('rows')[nRowIndex].AccountNo=oCheque.AccountNo;
                IdentifyConfiguration(nRowIndex,$('#winCheque').data('chequenoclass'));
            }
        }
    }

    $("#btnAddCheque").click(function(){CreateNewCheque();});

    $("#btnEditCheque").click(function(){
        debugger;
        var oReceivedCheque= $('#tblCheque').datagrid('getSelected');
        if(oReceivedCheque==null || oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
        var oCurrentObj=$("#tblVoucherDetail").data('rows')[nRowIndex];
        var nCCID=oCurrentObj.CCID;
        var nRefType=oCurrentObj.ObjTypeInt;
        var SelectedRowIndex=$('#tblCheque').datagrid('getRowIndex',oReceivedCheque);
        var tsv=((new Date()).getTime())/1000;
        var oParameter = new Object();
        oParameter.Name = "Edit Received Cheque";
        oParameter.RefType=nRefType;
        var url =sessionStorage.getItem('BaseAddress')+ "/ReceivedCheque/ViewVoucherReceivedCheque?id="+oReceivedCheque.ReceivedChequeID+"&ccid="+nCCID;
        var oReceivedCheque = window.showModalDialog(url, oParameter, 'dialogHeight:380px;dialogWidth:950px;dialogLeft:200;dialogTop:150;center:yes;resizable:no;status:no;scroll:no');
        if(oReceivedCheque!=null)
        {
            if(oReceivedCheque.ReceivedChequeID>0)
            {

                $('#tblCheque').datagrid('updateRow',{index: SelectedRowIndex,row: oReceivedCheque});
                $('#tblCheque').datagrid('selectRow', SelectedRowIndex);
            }
        }
    });

    $("#btnViewCheque").click(function(){
        debugger;
        var oReceivedCheque= $('#tblCheque').datagrid('getSelected');
        if(oReceivedCheque==null || oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
        var oCurrentObj=$("#tblVoucherDetail").data('rows')[nRowIndex];
        var nCCID=oCurrentObj.CCID;
        var nRefType=oCurrentObj.ObjTypeInt;
        var SelectedRowIndex=$('#tblCheque').datagrid('getRowIndex',oReceivedCheque);
        var tsv=((new Date()).getTime())/1000;
        var oParameter = new Object();
        oParameter.Name = "View Received Cheque";
        oParameter.RefType=nRefType;
        var url =sessionStorage.getItem('BaseAddress')+ "/ReceivedCheque/ViewVoucherReceivedCheque?id="+oReceivedCheque.ReceivedChequeID+"&ccid="+nCCID;
        var oReceivedCheque = window.showModalDialog(url, oParameter, 'dialogHeight:380px;dialogWidth:950px;dialogLeft:200;dialogTop:150;center:yes;resizable:no;status:no;scroll:no');
        if(oReceivedCheque!=null)
        {
            if(oReceivedCheque.ReceivedChequeID>0)
            {
                $('#tblCheque').datagrid('updateRow',{index: SelectedRowIndex,row: oReceivedCheque});
                $('#tblCheque').datagrid('selectRow', SelectedRowIndex);
            }
        }
    });

    $("#btnDeleteCheque").click(function(){
        debugger;
        var oReceivedCheque= $('#tblCheque').datagrid('getSelected');
        if(oReceivedCheque==null || oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("Please select a item from list!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblCheque').datagrid('getRowIndex',oReceivedCheque);
        if (oReceivedCheque.ReceivedChequeID > 0)
        {
            $.icsDelete({
                BaseAddress: sessionStorage.getItem('BaseAddress'),
                Object: oReceivedCheque,
                ControllerName: "ReceivedCheque",
                ActionName: "Delete",
                TableId: "tblCheque",
                IsWinClose: false
            });
        }
    });

    $("#cboChequeType").change(function(){
        RefreashCheque([]);
    });

    $("#btnOkCheque").click(function(){
        SelectCheque();
    });

    $("#btnCloseCheque").click(function(){
        $('#winCheque').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.chequenoclass').focus();
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.chequenoclass').select();
    });

    $('#winCheque').keydown(function (e)
    {
        if (e.which === 27) {
            $('#winCheque').window('close');
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            $('#tblVoucherDetail tr').eq(nRowIndex).find('.chequenoclass').focus();
        }
        else if(e.which == 38 || e.which == 40)
        {
            var oCheque= $('#tblCheque').datagrid('getSelected');
            var nIndex=$('#tblCheque').datagrid('getRowIndex', oCheque);
            if(e.which == 38)//up arrow=38
            {
                if(nIndex<=0)
                {
                    $('#tblCheque').datagrid('selectRow', 0);
                }
                else
                {
                    $('#tblCheque').datagrid('selectRow', nIndex-1);
                }
            }
            if(e.which == 40)//down arrow=40
            {
                var oCurrentList = $('#tblCheque').datagrid('getRows');
                if(nIndex>=oCurrentList.length-1)
                {
                    $('#tblCheque').datagrid('selectRow', oCurrentList.length-1);
                }
                else
                {
                    $('#tblCheque').datagrid('selectRow', nIndex+1);
                }
            }
        }
        else if(e.which == 13)//enter=13
        {
            SelectCheque();
        }
        else if(e.which == 107)
        {
            //var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            //var nBTTypeInt = $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt;
            //if(parseInt(nBTTypeInt) == 1 || parseInt(nBTTypeInt) == 3)
            //{
            CreateNewCheque();
            return false;
            //}
        }
        else if(e.which != 9)//tab=9
        {
            $('#txtChequeNo').icsSearchByText({
                Event: e,
                SearchProperty: "ChequeNo",
                GlobalObjectList:  $('#winCheque').data('cheques'),
                TableId: "tblCheque"});
            $('#txtAccountNo').icsSearchByText({
                Event: e,
                SearchProperty: "AccountNo",
                GlobalObjectList:  $('#winCheque').data('cheques'),
                TableId: "tblCheque"});
            $('#txtBankName').icsSearchByText({
                Event: e,
                SearchProperty: "BankName",
                GlobalObjectList:  $('#winCheque').data('cheques'),
                TableId: "tblCheque"});
            $('#txtBranchName').icsSearchByText({
                Event: e,
                SearchProperty: "BranchName",
                GlobalObjectList:  $('#winCheque').data('cheques'),
                TableId: "tblCheque"});
            $('#txtParty').icsSearchByText({
                Event: e,
                SearchProperty: "ContractorName",
                GlobalObjectList:  $('#winCheque').data('cheques'),
                TableId: "tblCheque"});
        }
    });
    //end cheque 


    $('#btnLastNarration').click(function (e)
    {
        if($('#txtNarration').val()==null || $('#txtNarration').val()==='')
        {
            var oVoucher = { VoucherID : 0 };
            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+  "/Voucher/GetLastNarration",
                traditional: true,
                data:  JSON.stringify(oVoucher),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oVoucher = jQuery.parseJSON(data);
                    if (oVoucher.VoucherID>0 && oVoucher.Narration !="") {
                        $('#txtNarration').val(oVoucher.Narration);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    });
</script>