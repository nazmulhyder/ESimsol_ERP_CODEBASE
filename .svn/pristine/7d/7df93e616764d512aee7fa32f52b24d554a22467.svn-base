<html>
@{
        ViewBag.Title = "Cost Sheet";
}
<body>

    @model ESimSol.BusinessObjects.CostSheet
    <div class="menuMainCollectionTable" id="divCS">
        <div id="tabCostSheet" class="easyui-tabs" style="height:90%;">
            <div id="divCostSheetInfo" title="Cost Sheet Info" style="font-size:12px;padding:0px;font-style:normal;height:100%;">
                <div style="overflow-y:auto;height:470px;width:100%;padding:0px;">
                    <fieldset style="width:100%;">
                        <legend>Sheet Info :</legend>
                        <table border="0" cellpadding="2" cellspacing="2" style="width:100%">
                            <tr>
                                <td style="width:12%;text-align:right;"><a id="btnPickStyle" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="false" onclick="PickStyle()">Pick</a></td>
                                <td style="width:21%"><input type="text" style="width:100%;" id="txtStyleNo" placeholder="Type Style Name & Press Enter" /> </td>
                                <td style="width:13%;text-align:right;">File No:</td>
                                <td style="width:21%"><input type="text" style="width:100%;" id="txtFileNo" disabled /> </td>
                                <td style="width:12%;text-align:right;">Costing Date:</td>
                                <td style="width:21%"><input id="txtCostingDateInString" type="text" class="easyui-datebox" style="width:250px;" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                            </tr>
                            <tr>
                                <td style="width:12%;text-align:right;">Buyer Name:</td>
                                <td style="width:21%"><input type="text" style="width:100%;" id="txtBuyerName" disabled /> </td>
                                <td style="width:13%;text-align:right;">Qty(Approx):</td>
                                <td style="width:21%">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%;">
                                        <tr>
                                            <td style="width:50%"><input type="text" style="width:100%;" id="txtApproxQty" /> </td>
                                            <td style="width:50%"><select id="cboCountUnit" style="width:100%;height:23px;"></select> </td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:12%;text-align:right;">Shipment Date:</td>
                                <td style="width:21%"><input id="txtShipmentDateInString" type="text" class="easyui-datebox" style="width:250px;" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                            </tr>
                            <tr>
                                <td style="width:12%;text-align:right;">Knitting:</td>
                                <td style="width:21%"><input type="text" style="width:100%;" id="txtKnittingPatternName" disabled /> </td>
                                <td style="width:13%;text-align:right;">Style Description:</td>
                                <td style="width:21%"><input type="text" style="width:100%;" id="txtStyleDescription" /> </td>
                                <td style="width:12%;text-align:right;">GG:</td>
                                <td style="width:21%"><input type="text" style="width:100%;" id="txtGG" /> </td>
                            </tr>
                            <tr>
                                <td style="width:12%;text-align:right;">Size Range:</td>
                                <td style="width:21%"><input type="text" style="width:100%;" id="txtSizeRange" disabled /> </td>
                                <td style="width:13%;text-align:right;">Color Range:</td>
                                <td colspan="3" style="width:54%"><input type="text" style="width:100%;" id="txtColorRange" disabled /> </td>
                            </tr>
                            <tr>
                                <td style="width:12%;text-align:right;">Merchandiser:</td>
                                <td style="width:21%"><input type="text" style="width:100%;" id="txtMerchandiserName" placeholder="Type Merchandiser Name & Press Enter" /> </td>
                                <td style="width:13%;text-align:right;">Fabric Description:</td>
                                <td style="width:21%"><input type="text" style="width:100%;" id="txtFabricDescription" /> </td>
                                <td style="width:12%;text-align:right;">Cost Currency:</td>
                                <td style="width:21%"><select id="cboCostCurrency" style="width:100%;height:23px;"></select>  </td>
                            </tr>
                        </table>
                    </fieldset>
                    <table id="tblFabric" title="Fabric Details" class="easyui-datagrid" style="height:230px; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" showfooter="true" autorowheight="false" toolbar="#toolbarFabric" data-options="onClickRow: onClickRowYarnDetail">
                        <thead>
                            <tr>
                                <th field="ProductCode" width="10%" align="left">Code</th>
                                <th field="ProductName" width="15%" align="left">Fabric Name</th>
                                <th width="7%" align="left" field="Description">Description</th>
                                <th width="5%" align="center" field="Sequence">Seq.</th>
                                <th width="5%" align="left" field="Width">Width</th>
                                <th width="5%" align="left" field="UnitName">Unit</th>
                                <th width="10%" align="right" data-options="field:'MaterialMarketPrice',editor:{type:'numberbox',options:{precision:4}}">Yarn</th>
                                <th width="6%" align="right" data-options="field:'KnittingCost',editor:{type:'numberbox',options:{precision:4}}">Knitting</th>
                                <th width="6%" align="right" data-options="field:'DyeingCost',editor:{type:'numberbox',options:{precision:4}}">Dyeing</th>
                                <th width="6%" align="right" data-options="field:'LycraCost',editor:{type:'numberbox',options:{precision:4}}">Lycra</th>
                                <th width="6%" align="right" data-options="field:'AOPCost',editor:{type:'numberbox',options:{precision:4}}">AOP</th>
                                <th width="6%" align="right" data-options="field:'WashCost',editor:{type:'numberbox',options:{precision:4}}">Wash</th>
                                <th width="6%" align="right" data-options="field:'YarnDyeingCost',editor:{type:'numberbox',options:{precision:4}}">Y/D</th>
                                <th width="6%" align="right" data-options="field:'SuedeCost',editor:{type:'numberbox',options:{precision:4}}">Sueded</th>
                                <th width="6%" align="right" data-options="field:'FinishingCost',editor:{type:'numberbox',options:{precision:4}}">Finish</th>
                                <th width="6%" align="right" data-options="field:'BrushingCost',editor:{type:'numberbox',options:{precision:4}}">Brash</th>
                                <th width="6%" align="right" data-options="field:'FabricCost',editor:{type:'numberbox',options:{precision:4}}">Fabric Cost</th>
                                <th width="8%" align="right" data-options="field:'Consumption',editor:{type:'numberbox',options:{precision:4}}">Con/Dz</th>
                                <th field="ConsumptionPerPc" width="8%" align="right" formatter="formatPrice4digit">Con/Pc</th>
                                <th field="CostPerPcs" width="8%" align="right" formatter="formatPrice4digit">Cost/Pc</th>
                                <th field="EstimatedCost" width="8%" align="right" formatter="formatPrice4digit">Cost/Dz</th>
                            </tr>
                        </thead>
                    </table>
                    <div id="toolbarFabric">
                        Fabric:<input type="text" id="txtFabricName" style="width:150px;" placeholder="Type Fabric Name & press Enter" />
                        <select style="width:120px;" id="cboYarnUnit"></select>
                        <a id="btnAddYarnORFabric" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="false" onclick="AddYarnORFabric()">Add</a>
                        <a id="btnRemoveYarn" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="false" onclick="RemoveYarn()">Remove</a>
                        <a id="btnYarnUp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-up" plain="false" onclick="YarnUP()">UP</a>
                        <a id="btnYarnDown" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-down" plain="false" onclick="YarnDown()">Down</a>
                        <a id="btnRefreshYarnDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="false" onclick="RefreshYarnDetail()">Refresh</a>
                    </div>

                    <table id="tblAccessories" title="Accessories Details" class="easyui-datagrid" style="height:400px; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarAccessories" data-options="onClickRow: onClickRowAccessoriesDetail">
                        <thead>
                            <tr>
                                <th field="ProductCode" width="7%" align="left">Code</th>
                                <th field="ProductName" width="15%" align="left">Accssories Name</th>
                                <th width="6%" align="left" field="Description">Description</th>
                                <th width="5%" align="left" field="Sequence">Seq.</th>
                                <th width="5%" align="left" field="UnitName">Unit</th>
                                <th width="6%" align="right" data-options="field:'RateUnit',editor:{type:'numberbox',options:{precision:0}}">Rate Unit</th>
                                <th width="6%" align="right" data-options="field:'MaterialMarketPrice',editor:{type:'numberbox',options:{precision:6}}">Price</th>
                                <th width="6%" align="right" data-options="field:'Consumption',editor:{type:'numberbox',options:{precision:6}}">Con/Dz</th>
                                <th width="6%" align="right" field="CostPerDzn" formatter="formatPrice6digit">Cost/Dz</th>
                                <th width="6%" align="right" field="CostPerPcs" formatter="formatPrice6digit">Cost/Pcs</th>
                                <th width="6%" align="right" data-options="field:'UsePercentage',editor:{type:'numberbox',options:{precision:2}}">Addition(%)</th>
                                <th width="10%" align="right" field="EstimatedCost" formatter="formatPrice6digit">Cost/Dz(Include)</th>
                                <th width="10%" align="right" field="EstimatedCostPerPc" formatter="formatPrice6digit">Cost/Pc(Include)</th>
                            </tr>
                        </thead>
                    </table>
                    <div id="toolbarAccessories">
                        Accessories:<input type="text" id="txtAccessoriesName" style="width:150px;" placeholder="Type Accessories Name & press Enter" />
                        <select style="width:120px;" id="cboACUnit"></select>
                        <a id="btnAddAccssories" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="false" onclick="AddAccessories()">Add</a>
                        <a id="btnRemoveAccssories" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="false" onclick="DeleteAccssories()">Remove</a>
                        <a id="btnAccessoriesUp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-up" plain="false" onclick="AccessoriesUP()">UP</a>
                        <a id="btnAccessoriesDown" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-down" plain="false" onclick="AccessoriesDown()">Down</a>
                        <a id="btnRefreshAccssories" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="false" onclick="RefreshAccessories()">Refresh</a>
                    </div>

                    <div style="height:250px; width:100%;">
                        <table id="tblCostSheetCM" title="CM Calculation" class="easyui-datagrid" style="height:250px;width:100%;" fitcolumns="false" showfooter="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarCostSheetCM" data-options="onClickRow: onClickRowCostSheetCM">
                            <thead>
                                <tr>
                                    <th field="CMTypeSt" width="10%" align="left">CM Type</th>
                                    <th field="CSQtySt" width="10%" align="right">Oder Qty</th>
                                    <th width="8%" align="left" data-options="field:'CMPart',editor:{type:'text'}">Part Name</th>
                                    <th width="7%" align="right" data-options="field:'NumberOfMachine',editor:{type:'numberbox',options:{precision:0}}">No.MC</th>
                                    <th width="8%" align="right" data-options="field:'MachineCost',editor:{type:'numberbox',options:{precision:2}}">MC Cost(<label id="lblMCCurrencySymbol"></label>)</th>
                                    <th width="10%" align="right" data-options="field:'ProductionPerDay',editor:{type:'numberbox',options:{precision:0}}">Prod/day</th>
                                    <th width="7%" align="right" data-options="field:'BufferDays',editor:{type:'numberbox',options:{precision:0}}">Buffer days</th>
                                    <th field="TotalRequiredDays" width="10%" align="right" formatter="formatPrice">Total days Req.</th>
                                    <th field="CMPerPc" width="8%" align="right" formatter="formatPrice">CM/pc(<label id="lblCMCurrencySymbol"></label>)</th>
                                    <th width="10%" align="right" data-options="field:'CMAdditionalPerent',editor:{type:'numberbox',options:{precision:2}}">Considering (%)</th>
                                    <th field="CMWithAddition" width="10%" align="right" formatter="formatPrice">Final CM(<label id="lblFinalCMCurrencySymbol"></label>)</th>
                                    <th field="CMPerDozen" width="10%" align="right" formatter="formatPrice">CM/Dz(<label id="lblFinalCMCurrencySymbolDzn"></label>)</th>
                                </tr>
                            </thead>
                        </table>
                        <div id="toolbarCostSheetCM">
                            <select id="cboCMType" style="width:100px"> </select>
                            <a id="btnAddCostSheetCM" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="false">Add</a>
                            <a id="btnRemoveCostSheetCM" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="false" onclick="DeleteCostSheetCM()">Remove</a>
                            <a id="btnRefreshCostSheetCM" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="false" onclick="RefreshCostSheetCM()">Refresh</a>
                        </div>
                    </div>
                    <fieldset>
                        <legend><label id="lblSummery">Cost</label> Summery Info:</legend>
                        <table style="width:100%">
                            <tr>
                                <td style="width:100%;text-align:right">
                                    <table border="0" cellpadding="1" cellspacing="1" style="width:100%; text-align:right;font-weight:bold;">
                                        <tr>
                                            <td style="text-align:right;width:50%;">Total Fabric Cost:</td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;text-align:right;" id="txtFabricCostCurrency" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtFabricCostPerDozen" style="width:100%;text-align:right;" disabled /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Dozen" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtFabricCostPerPcs" style="width:100%;text-align:right;" disabled /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Pcs" disabled /> </td>
                                        </tr>
                                        <tr>
                                            <td style="text-align:right;width:50%;">Total Accessories Cost:</td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;text-align:right;" id="txtAccessoriesCostCurrency" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtAccessoriesCostPerDozen" style="width:100%;text-align:right;" disabled /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Dozen" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtAccessoriesCostPerPcs" style="width:100%;text-align:right;" disabled /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Pcs" disabled /> </td>
                                        </tr>
                                        <tr>
                                            <td style="text-align:right;width:50%;">Print Cost:</td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;text-align:right;" id="txtPrintCostCurrency" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtPrintPricePerDozen" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Dozen" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtPrintCostPerPcs" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Pcs" disabled /> </td>
                                        </tr>
                                        <tr>
                                            <td style="text-align:right;width:50%;">Embrodary Cost:</td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;text-align:right;" id="txtEmbrodaryCostCurrency" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtEmbrodaryPricePerDozen" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Dozen" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtEmbrodaryCostPerPcs" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Pcs" disabled /> </td>
                                        </tr>
                                        <tr>
                                            <td style="text-align:right;width:50%;">Test Cost:</td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;text-align:right;" id="txtTestCostCurrency" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtTestPricePerDozen" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Dozen" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtTestCostPerPcs" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Pcs" disabled /> </td>
                                        </tr>

                                        <tr>
                                            <td style="text-align:right;width:50%;"><input id="txtCourierCaption" placeholder="Courier" style="width:15%;text-align:right;" />:</td>
                                            <td style="text-align:left;width:6%;"><input type="text" style="width:100%;text-align:right;" id="txtCourierCostCurrency" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtCourierPricePerDozen" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input type="text" style="width:100%;" value="/Dozen" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtCourierCostPerPcs" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Pcs" disabled /> </td>
                                        </tr>
                                        <tr>
                                            <td style="text-align:right;width:50%;"><input id="txtOthersCaption" placeholder="Others" style="width:15%;text-align:right;" />:</td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;text-align:right;" id="txtOthersCostCurrency" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtOthersPricePerDozen" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Dozen" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtOthersCostPerPcs" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Pcs" disabled /> </td>
                                        </tr>
                                        <tr>
                                            <td style="text-align:right;width:50%;">CM Cost:</td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;text-align:right;" id="txtCMCostCurrency" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtCMCostPerDozen" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Dozen" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtCMCostPerPcs" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Pcs" disabled /> </td>
                                        </tr>
                                        <tr>
                                            <td style="text-align:right;width:50%;">Commission:</td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;text-align:right;" value="(%)" disabled /> </td>
                                            <td style="text-align:left;width:44%;" colspan="4"><input type="text" id="txtBuyingCommission" style="width:100%;text-align:right;" /> </td>
                                        </tr>
                                        <tr>
                                            <td style="text-align:right;width:50%;">Banking Cost:</td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;text-align:right;" value="(%)" disabled /> </td>
                                            <td style="text-align:left;width:44%;" colspan="4"><input type="text" id="txtBankingCost" style="width:100%;text-align:right;" /> </td>
                                        </tr>
                                        <tr>
                                            <td style="text-align:right;width:50%;">FOB Price:</td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;text-align:right;" id="txtFOBPriceCurrency" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtFOBPricePerDozen" style="width:100%;text-align:right;" disabled /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Dozen" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtFOBPricePerPcs" style="width:100%;text-align:right;" disabled /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Pcs" disabled /> </td>
                                        </tr>

                                        <tr>
                                            <td style="text-align:right;width:50%;">Offer Price:</td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;text-align:right;" id="txtOfferPriceCurrency" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtOfferPricePerDozen" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Dozen" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtOfferPricePerPcs" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Pcs" disabled /> </td>
                                        </tr>
                                        <tr>
                                            <td style="text-align:right;width:50%;">Confirm Price:</td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;text-align:right;" id="txtConfirmPriceCurrency" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtConfirmPricePerDozen" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Dozen" disabled /> </td>
                                            <td style="text-align:left;width:16%;"><input type="text" id="txtConfirmPricePerPcs" style="width:100%;text-align:right;" /> </td>
                                            <td style="text-align:left;width:6%;"><input style="width:100%;" value="/Pcs" disabled /> </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                        </table>
                        
                    </fieldset>
                </div>
            </div>
            <div id="divCostSheetPackage" title="Cost Sheet Package" style="padding:10px; font-size:12px; font-style:normal;width:100%;">
                <table id="tblCostSheetPackage" title="Package" class="easyui-datagrid" style="height:380px; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
                    <thead>
                        <tr>
                            <th field="PackageName" width="20%" align="left">Package Name</th>
                            <th width="10%" align="left" field="Remark">Remark</th>
                            @*<th width="10%" align="right" data-options="field:'Price',editor:{type:'numberbox',options:{precision:2}}">Qty</th>*@
                            <th field="Price" width="10%" align="right">Price</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbar">
                    <a id="btnAddPackage" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="false" onclick="AddPackage()">Add</a>
                    <a id="btnEditPackage" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="false" onclick="EditPackage()">Edit</a>
                    <a id="btnRefreshPackage" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="false" onclick="RefreshPackage()">Refresh</a>
                    <a id="btnRemovePackage" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="false" onclick="DeletePackage()">Remove</a>
                </div>
            </div>
            <div title="Style Image" style="padding:10px; font-size:12px; font-style:normal;width:100%;">
                <table border="0" cellpadding="0" cellspacing="0" style="width:100%;">
                    <tr>
                        <td style="width:50%;">
                            <fieldset>
                                <legend>Style Front Image</legend>
                                <div>
                                    <img id="imgFrontImage" src="" alt="Photo" style="width:100%; height:350px" />
                                </div>
                            </fieldset>
                        </td>
                        <td style="width:50%;">
                            <fieldset>
                                <legend>Style Back Image</legend>
                                <div class="col-md-12">
                                    <img id="imgBackImage" src="" alt="Photo" style="width:100%; height:350px" />
                                </div>
                            </fieldset>
                        </td>
                    </tr>
                </table>
            </div>
        </div>

        <fieldset style="height:10%;">
            <legend>Action</legend>
            <div class="col-md-12 text-right">
                <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="false" onclick="Approve()">Approve</a>
                <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="false" onclick="Save()"><label id="lblSave">Save</label></a>
                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="false" onclick="Close()">Close</a>
            </div>
        </fieldset>
    </div>
</body>
</html>
<style>
    td, tr {
        height: 1px;
    }
</style>
<script type="text/javascript">
    var _sBaseAddress='';
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oCostSheet =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oCurrencies =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.Currencies));
        var oCountUnits =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.CountUnits));
        var oCostSheetCMs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.CostSheetCMs));
        var oTempCostSheetFabricDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.CostSheetYarnDetails));
        var oCostSheetAccessoriesDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.CostSheetAccessoriesDetails));
        var oCostSheetPackages = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.CostSheetPackages));
        var oCMTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CMTypes));
        

        var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        $('#tabCostSheet').data('CostSheet',oCostSheet);
        $('#tabCostSheet').data('Currencies',oCurrencies);
        $('#tabCostSheet').data('CountUnits',oCountUnits);


        $('#tabCostSheet').data('CostSheetYarnDetails',oTempCostSheetFabricDetails);
        $('#tabCostSheet').data('CostSheetAccessoriesDetails',oCostSheetAccessoriesDetails);
        $('#tabCostSheet').data('CostSheetCMs',oCostSheetCMs );
        $('#tabCostSheet').data('CostSheetPackages',oCostSheetPackages);
        $('#tabCostSheet').data('CMTypes',oCMTypes);
        
        RefreshControl();
        RefreshVisibility();
        $('#AppMainLayout').layout('collapse', 'west');
        $('#AppMainLayout').layout('expand', 'west');
        $('#AppMainLayout').layout('collapse', 'west');
    });

    function RefreshControl()
    {
        $('#txtApproxQty,#txtNumberOfMachine,#txtSecNumberOfMachine,#txtProductionPerDay,#txtSecProductionPerDay,#txtBufferDays,#txtSecBufferDays,#txtTotalRequiredDays,#txtSecTotalRequiredDays').icsCurrencyBox(null, null, 0);
        $('#txtMachineCost,#txtSecMachineCost,#txtCMPerPc,#txtSecCMPerPc,#txtCMCost,#txtSecCMCost,#txtCMAdditionalPerent,#txtSecCMAdditionalPerent, #txtFinalCMPerPcwithConsidering,#txtSecFinalCMPerPcwithConsidering,#txtBuyingCommission,#txtBankingCost').icsCurrencyBox(null, null, 2);
        $('#txtFabricCostPerDozen,#txtFabricCostPerPcs,#txtAccessoriesCostPerDozen,#txtAccessoriesCostPerPcs,#txtPrintPricePerDozen,#txtPrintCostPerPcs,#txtEmbrodaryPricePerDozen,#txtEmbrodaryCostPerPcs,#txtTestPricePerDozen,#txtTestostPerPcs,  #txtCourierPricePerDozen,#txtCourierCostPerPcs,#txtOthersPricePerDozen,#txtOthersCostPerPcs,#txtCMCostPerDozen,#txtCMCostPerPcs,#txtFOBPricePerDozen,#txtFOBPricePerPcs,#txtOfferPricePerDozen,#txtOfferPricePerPcs,#txtConfirmPricePerDozen,#txtConfirmPricePerPcs').icsCurrencyBox(null, null,5);
        
        var oCostSheet = $('#tabCostSheet').data('CostSheet');
        $("#txtStyleNo").val(oCostSheet.StyleNo);
        $("#txtFileNo").val(oCostSheet.FileNo);
        $('#txtCostingDateInString').datebox('setValue',oCostSheet.CostingDateInString);
        $("#txtBuyerName").val(oCostSheet.BuyerName);

        $('#txtApproxQty').val(icsFormatPrice(parseFloat(oCostSheet.ApproxQty), null,0));
        var oCountUnits = $('#tabCostSheet').data('CountUnits');
        $("#cboCountUnit").icsLoadCombo({List: oCountUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
        $("#cboCountUnit").val(oCostSheet.UnitID);
        $('#txtShipmentDateInString').datebox('setValue',oCostSheet.ShipmentDateInString);
        $("#txtKnittingPatternName").val(oCostSheet.KnittingPatternName);
        $("#txtStyleDescription").val(oCostSheet.StyleDescription);
        $("#txtGG").val(oCostSheet.GG);
        $("#txtSizeRange").val(oCostSheet.SizeRange);
        $("#txtColorRange").val(oCostSheet.ColorRange);
        $("#txtMerchandiserName").val(oCostSheet.MerchandiserName);
        $("#txtFabricDescription").val(oCostSheet.FabricDescription);
        var oCurrencies = $('#tabCostSheet').data('Currencies');
        $("#cboCostCurrency").icsLoadCombo({List: oCurrencies,OptionValue: "CurrencyID",DisplayText: "Symbol"});
        $("#cboCostCurrency").val(oCostSheet.CurrencyID);
        var oFabricDetails =  $('#tabCostSheet').data('CostSheetYarnDetails');
        if(oFabricDetails!=null && oFabricDetails.length>0){DynamicRefreshList(oFabricDetails,'tblFabric');}

        var oAccessoriesDetails =  $('#tabCostSheet').data('CostSheetAccessoriesDetails');
        if(oAccessoriesDetails!=null && oAccessoriesDetails.length>0){DynamicRefreshList(oAccessoriesDetails,'tblAccessories');}
              

        $('#txtFabricCostPerDozen').val(icsFormatPrice(parseFloat(oCostSheet.FabricCostPerDozen), null,5));
        $('#txtFabricCostPerPcs').val(icsFormatPrice(oCostSheet.FabricCostPerPcs, null,5));

        $('#txtAccessoriesCostPerDozen').val(icsFormatPrice(parseFloat(oCostSheet.AccessoriesCostPerDozen), null,5));
        $('#txtAccessoriesCostPerPcs').val(icsFormatPrice(oCostSheet.AccessoriesCostPerPcs, null,5));


        $('#txtPrintPricePerDozen').val(icsFormatPrice(oCostSheet.PrintPricePerDozen, null,5));
        $('#txtPrintCostPerPcs').val(icsFormatPrice(oCostSheet.PrintPricePerPcs, null,5));


        $('#txtEmbrodaryPricePerDozen').val(icsFormatPrice(oCostSheet.EmbrodaryPricePerDozen, null,5));
        $('#txtEmbrodaryCostPerPcs').val(icsFormatPrice(oCostSheet.EmbrodaryPricePerPcs, null,5));


        $('#txtTestPricePerDozen').val(icsFormatPrice(oCostSheet.TestPricePerDozen, null,5));
        $('#txtTestCostPerPcs').val(icsFormatPrice(oCostSheet.TestPricePerPcs, null,5));



        $('#txtOthersPricePerDozen').val(icsFormatPrice(oCostSheet.OthersPricePerDozen, null,5));
        $('#txtOthersCostPerPcs').val(icsFormatPrice(oCostSheet.OthersPricePerPcs, null,5));


        $('#txtCourierPricePerDozen').val(icsFormatPrice(oCostSheet.CourierPricePerDozen, null,5));
        $('#txtCourierCostPerPcs').val(icsFormatPrice(oCostSheet.CourierPricePerPcs, null,5));

        $('#txtCourierCaption').val(oCostSheet.CourierCaption );
        $('#txtOthersCaption').val(oCostSheet.OthersCaption);

        $('#txtCMCostPerDozen').val(icsFormatPrice(parseFloat(oCostSheet.CMCost), null,5));
        $('#txtCMCostPerPcs').val(icsFormatPrice(oCostSheet.CMCostPerPcs, null,3));

        $('#txtBuyingCommission').val(icsFormatPrice(parseFloat(oCostSheet.BuyingCommission), null,2));
        $('#txtBankingCost').val(icsFormatPrice(parseFloat(oCostSheet.BankingCost), null,2));



        $('#txtFOBPricePerDozen').val(icsFormatPrice(oCostSheet.FOBPricePerDozen, null,5));
        $('#txtFOBPricePerPcs').val(icsFormatPrice(oCostSheet.FOBPricePerPcs, null,5));


        $('#txtOfferPricePerDozen').val(icsFormatPrice(oCostSheet.OfferPricePerDozen, null,5));
        $('#txtOfferPricePerPcs').val(icsFormatPrice(oCostSheet.OfferPricePerPcs, null,5));
        
        $('#txtConfirmPricePerDozen').val(icsFormatPrice(oCostSheet.ConfirmPricePerDozen, null,5));
        $('#txtConfirmPricePerPcs').val(icsFormatPrice(oCostSheet.ConfirmPricePerPcs, null,5));

        var oCMTypes = $('#tabCostSheet').data('CMTypes');
        $("#cboCMType").icsLoadCombo({List: oCMTypes, OptionValue: "id", DisplayText: "Value", InitialValue : "--CM Type--" });

        var oCostSheetPackages =$('#tabCostSheet').data('CostSheetPackages');
        if(oCostSheetPackages!=null && oCostSheetPackages.length>0){DynamicRefreshList(oCostSheetPackages,'tblCostSheetPackage');}
        if(parseInt(oCostSheet.CostSheetID)>0)
        {
            //SummeryCalculation();
            StyleImage(oCostSheet.TechnicalSheetID, true);
            StyleImage(oCostSheet.TechnicalSheetID, false);
        }
        CurrencySet();
        var oCostSheetCMs =  $('#tabCostSheet').data('CostSheetCMs');
        if(oCostSheetCMs!=null && oCostSheetCMs.length>0)
        {
            $('#tblCostSheetCM').datagrid({data : oCostSheetCMs});
            RefreshCMFooter(false);
        }
    }
    function RefreshVisibility()
    {
        $('#btnApprove').hide();
        if(sessionStorage.getItem("CostSheetHeader")=="Approve Cost Sheet" || sessionStorage.getItem("CostSheetHeader")=="Approve Budget")
        {
            $('#btnApprove').show();
            $('#btnSave').hide();
        }
        if(sessionStorage.getItem("CostSheetHeader")=="Cost Sheet Revise" || sessionStorage.getItem("CostSheetHeader")=="Budget Revise")
        {
            $('#lblSave').text('Commit');
        }
        if(sessionStorage.getItem("CostSheetHeader")=="Copy Cost Sheet" || sessionStorage.getItem("CostSheetHeader")=="Copy Budget" || sessionStorage.getItem("CostSheetHeader")=="Add Budget")
        {
             $('#lblSave').text("Paste");
            var oCostSheet = $('#tabCostSheet').data('CostSheet');
            
            oCostSheet.CostSheetID = 0;
            var oCostSheet = $('#tabCostSheet').data('CostSheet',oCostSheet);
            var oTempCostSheetFabricDetails =  $('#tabCostSheet').data('CostSheetYarnDetails');
            for(var i = 0;i<oTempCostSheetFabricDetails.length;i++)
            {
                oTempCostSheetFabricDetails[i].CostSheetDetailID =0;
                oTempCostSheetFabricDetails[i].CostSheetID =0;
            }
            DynamicRefreshList(oTempCostSheetFabricDetails,'tblFabric');
            var oAccessoriesDetails =  $('#tabCostSheet').data('CostSheetAccessoriesDetails');
            for(var i = 0;i<oAccessoriesDetails.length;i++)
            {
                oAccessoriesDetails[i].CostSheetDetailID =0;
                oAccessoriesDetails[i].CostSheetID =0;
            }
            DynamicRefreshList(oAccessoriesDetails,'tblAccessories');
            var oCostSheetPackages =$('#tabCostSheet').data('CostSheetPackages');
            for(var i = 0;i<oCostSheetPackages.length;i++)
            {
                oCostSheetPackages[i].CostSheetPackageID =0;
                oCostSheetPackages[i].CostSheetID =0;
                for(var j=0;j<oCostSheetPackages[i].CostSheetPackageDetails.length;j++)
                {
                    oCostSheetPackages[i].CostSheetPackageDetails[j].CostSheetPackageDetailID = 0;
                    oCostSheetPackages[i].CostSheetPackageDetails[j].CostSheetPackageID = 0;
                }
            }
            DynamicRefreshList(oCostSheetPackages,'tblCostSheetPackage');
        }
        if(sessionStorage.getItem("CostSheetHeader")=="View Cost Sheet" || sessionStorage.getItem("CostSheetHeader")=="View Budget")
        {
            $("#divCS :input").prop('disabled', true);
            $('#btnSave').hide();
        }

    }
    function RefreshCMFooter(bIsEffectOnCM)
    {
        //debugger;
        var nMachinCost = 0;
        var nCMCostPerDozen = 0; 
        var nCMWithAddition = 0;
        var nTrueCMCostPerDozen = 0; 
        var nTrueMachinCost = 0; 

        var oCostSheetCMs = $('#tblCostSheetCM').datagrid('getRows');
        //EnumCMType { None = 0, CM = 1, RentUtility = 2, Overhead = 3 }
        for(var i=0; i<oCostSheetCMs.length; i++)
        {
            if(parseInt(oCostSheetCMs[i].CMTypeInt) == 1)
            {
                nCMCostPerDozen = nCMCostPerDozen + parseFloat(oCostSheetCMs[i].CMPerDozen);
                nCMWithAddition = nCMWithAddition + parseFloat(oCostSheetCMs[i].CMWithAddition);
                nMachinCost = nMachinCost + parseFloat(oCostSheetCMs[i].MachineCost);
            }
            else
            {
                nTrueCMCostPerDozen = nTrueCMCostPerDozen + parseFloat(oCostSheetCMs[i].CMPerDozen);                
                nTrueMachinCost = nTrueMachinCost + parseFloat(oCostSheetCMs[i].MachineCost);
            }
        }

        if(bIsEffectOnCM)
        {
            $('#txtCMCostPerDozen').val(icsFormatPrice(nCMCostPerDozen, null,5));
            var nCMPricePerPcs  =(parseFloat(nCMCostPerDozen)/12);
            $('#txtCMCostPerPcs').val(icsFormatPrice(nCMPricePerPcs, null,5));
        }
        
        nCMCostPerDozen = parseFloat(icsRemoveComma($("#txtCMCostPerDozen").val()));
        nTrueCMCostPerDozen = (nCMCostPerDozen - nTrueCMCostPerDozen);
        nTrueMachinCost = (nMachinCost - nTrueMachinCost);
        var nOrderQty = parseFloat(icsRemoveComma($("#txtApproxQty").val()));
        var nTrueCMPerPcs = (nTrueCMCostPerDozen/12);

        var oFooterObject = {
            CMTypeSt : 'True CM',
            CMPart : '',
            CSQtySt : formatPrice(nOrderQty),
            MachineCost : formatPrice(nTrueMachinCost),
            NumberOfMachine : '',
            ProductionPerDay : '',
            BufferDays : '',
            TotalRequiredDays : '',
            CMPerPc : formatPrice(nTrueCMPerPcs),
            CMWithAddition : '',
            CMPerDozen : formatPrice(nTrueCMCostPerDozen)
        };
        $('#tblCostSheetCM').datagrid('reloadFooter',[oFooterObject]);
    }

    $("#txtApproxQty").keyup(function(){
        //debugger;
        var nApproxQty = parseFloat(icsRemoveComma($("#txtApproxQty").val()));
        var oCostSheetCMs = $('#tblCostSheetCM').datagrid('getRows');
        for(var i=0;i<oCostSheetCMs.length;i++)
        {
            oCostSheetCMs[i].CSQty = nApproxQty;
            oCostSheetCMs[i].CSQtySt = nApproxQty.toFixed(0);
            //if(oCostSheetCMs[i].CSQty>0 && oCostSheetCMs[i].NumberOfMachine>0 && oCostSheetCMs[i].MachineCost>0 && oCostSheetCMs[i].ProductionPerDay>0  && oCostSheetCMs[i].BufferDays>0   )
            if(oCostSheetCMs[i].CSQty>0 )
            {

                oCostSheetCMs[i].TotalRequiredDays = (Math.round((parseInt(oCostSheetCMs[i].CSQty/oCostSheetCMs[i].ProductionPerDay)) +parseInt(oCostSheetCMs[i].BufferDays))).toFixed(0);
                oCostSheetCMs[i].CMPerPc =((oCostSheetCMs[i].NumberOfMachine * oCostSheetCMs[i].MachineCost * oCostSheetCMs[i].TotalRequiredDays) / oCostSheetCMs[i].CSQty).toFixed(2);
                oCostSheetCMs[i].CMWithAddition = (parseFloat(oCostSheetCMs[i].CMPerPc)+parseFloat(oCostSheetCMs[i].CMPerPc *((oCostSheetCMs[i].CMAdditionalPerent)/100))).toFixed(2);//15% increase default
                oCostSheetCMs[i].CMPerDozen = (parseFloat(oCostSheetCMs[i].CMWithAddition)*parseFloat(12))
            }else{
                oCostSheetCMs[i].CMPerPc = 0;oCostSheetCMs[i].CMWithAddition = 0;oCostSheetCMs[i].CMPerDozen = 0;
            }
        }
        DynamicRefreshList(oCostSheetCMs,'tblCostSheetCM');
        RefreshCMFooter(true);
        SummeryCalculation();
    });
    function CalculateCM()
    {
        var nApproxQty = parseFloat(icsRemoveComma($("#txtApproxQty").val()));
        var nNumberOfMachine = parseFloat(icsRemoveComma($("#txtNumberOfMachine").val()));
        var nMachineCost = parseFloat(icsRemoveComma($("#txtMachineCost").val()));
        var nProductionPerDay = parseFloat(icsRemoveComma($("#txtProductionPerDay").val()));
        var nBufferDays= parseFloat(icsRemoveComma($("#txtBufferDays").val()));
        var nCMAdditionalPerent= parseFloat(icsRemoveComma($("#txtCMAdditionalPerent").val()));
        if(nApproxQty>0 && nNumberOfMachine>0 && nMachineCost>0 && nProductionPerDay>0  && nBufferDays>0   )
        {
            var nTotalRequiredDays =(Math.round((parseInt(nApproxQty/nProductionPerDay)) +parseInt(nBufferDays))).toFixed(0);
            $('#txtTotalRequiredDays').val(icsFormatPrice(parseFloat(nTotalRequiredDays), null,0));

            var nCMPerPc =((nNumberOfMachine * nMachineCost * nTotalRequiredDays) / nApproxQty).toFixed(2);
            $('#txtCMPerPc').val(icsFormatPrice(parseFloat(nTotalRequiredDays), null,2));

            var  nFinalCMPerPcwithConsidering =(parseFloat(nCMPerPc)+parseFloat(nCMPerPc *((nCMAdditionalPerent)/100))).toFixed(2);//15% increase default
            $('#txtFinalCMPerPcwithConsidering').val(icsFormatPrice(parseFloat(nFinalCMPerPcwithConsidering), null,2));

            var nCMCost = (parseFloat(nFinalCMPerPcwithConsidering)*parseFloat(12)).toFixed(2);
            $('#txtCMCost').val(icsFormatPrice(parseFloat(nCMCost), null,2));
        }else{
            $('#txtCMPerPc,#txtFinalCMPerPcwithConsidering, #txtCMCost').val(0);
        }

        //Bottom Part
        //debugger;
        var nSecApproxQty = nApproxQty;//parseFloat(icsRemoveComma($("#txtSecApproxQty").val()));
        var nSecNumberOfMachine = parseFloat(icsRemoveComma($("#txtSecNumberOfMachine").val()));
        var nSecMachineCost = parseFloat(icsRemoveComma($("#txtSecMachineCost").val()));
        var nSecProductionPerDay = parseFloat(icsRemoveComma($("#txtSecProductionPerDay").val()));
        var nSecBufferDays= parseFloat(icsRemoveComma($("#txtSecBufferDays").val()));
        var nSecCMAdditionalPerent= parseFloat(icsRemoveComma($("#txtSecCMAdditionalPerent").val()));
        if(nSecApproxQty>0 && nSecNumberOfMachine>0 && nSecMachineCost>0 && nSecProductionPerDay>0  && nSecBufferDays>0   )
        {
            var nSecTotalRequiredDays =(Math.round((parseInt(nSecApproxQty/nSecProductionPerDay)) +parseInt(nSecBufferDays))).toFixed(0);
            $('#txtSecTotalRequiredDays').val(icsFormatPrice(parseFloat(nSecTotalRequiredDays), null,0));

            var nSecCMPerPc =((nSecNumberOfMachine * nSecMachineCost * nSecTotalRequiredDays) / nSecApproxQty).toFixed(2);
            $('#txtSecCMPerPc').val(icsFormatPrice(parseFloat(nSecTotalRequiredDays), null,2));

            var  nSecFinalCMPerPcwithConsidering =(parseFloat(nSecCMPerPc)+parseFloat(nSecCMPerPc *((nSecCMAdditionalPerent)/100))).toFixed(2);//15% increase default
            $('#txtSecFinalCMPerPcwithConsidering').val(icsFormatPrice(parseFloat(nSecFinalCMPerPcwithConsidering), null,2));

            var nSecCMCost = (parseFloat(nSecFinalCMPerPcwithConsidering)*parseFloat(12)).toFixed(2);
            $('#txtSecCMCost').val(icsFormatPrice(parseFloat(nSecCMCost), null,2));
        }else{
            $('#txtSecCMPerPc,#txtSecFinalCMPerPcwithConsidering, #txtSecCMCost').val(0);
        }
        var nCMCostPerDozen = parseFloat(icsRemoveComma($("#txtCMCost").val())) +parseFloat(icsRemoveComma($("#txtSecCMCost").val()));
        $('#txtCMCostPerDozen').val(icsFormatPrice(nCMCostPerDozen, null,5));
        var nCMPricePerPcs  =(parseFloat(nCMCostPerDozen)/12);
        $('#txtCMCostPerPcs').val(icsFormatPrice(nCMPricePerPcs, null,5));
        SummeryCalculation();
    }
    $('#cboCostCurrency').change(function(){
        CurrencySet();
    });
    $('#txtPrintPricePerDozen,#txtEmbrodaryPricePerDozen,#txtTestPricePerDozen,#txtCourierPricePerDozen,#txtOthersPricePerDozen,#txtCMCostPerDozen,#txtBuyingCommission,#txtBankingCost').keyup(function(){
        //debugger;
        var nPrintPricePerDozen = parseFloat(icsRemoveComma($("#txtPrintPricePerDozen").val()));
        var nPrintPricePerPcs  =(parseFloat(nPrintPricePerDozen)/12);
        $('#txtPrintCostPerPcs').val(icsFormatPrice(nPrintPricePerPcs, null,5));

        var nEmbrodaryPricePerDozen = parseFloat(icsRemoveComma($("#txtEmbrodaryPricePerDozen").val()));
        var nEmbrodaryPricePerPcs  =(parseFloat(nEmbrodaryPricePerDozen)/12);
        $('#txtEmbrodaryCostPerPcs').val(icsFormatPrice(nEmbrodaryPricePerPcs, null,5));

        var nTestPricePerDozen = parseFloat(icsRemoveComma($("#txtTestPricePerDozen").val()));
        var nTestPricePerPcs  =(parseFloat(nTestPricePerDozen)/12);
        $('#txtTestCostPerPcs').val(icsFormatPrice(nTestPricePerPcs, null,5));

        var nCourierPricePerDozen = parseFloat(icsRemoveComma($("#txtCourierPricePerDozen").val()));
        var nCourierPricePerPcs  =(parseFloat(nCourierPricePerDozen)/12);
        $('#txtCourierCostPerPcs').val(icsFormatPrice(nCourierPricePerPcs, null,5));

        var nOthersPricePerDozen = parseFloat(icsRemoveComma($("#txtOthersPricePerDozen").val()));
        var nOthersPricePerPcs  =(parseFloat(nOthersPricePerDozen)/12);
        $('#txtOthersCostPerPcs').val(icsFormatPrice(nOthersPricePerPcs, null,5));

        var nCMPricePerDzn = parseFloat(icsRemoveComma($("#txtCMCostPerDozen").val()));
        var nCMPricePerPcs  =(parseFloat(nCMPricePerDzn)/12);
        $('#txtCMCostPerPcs').val(icsFormatPrice(nCMPricePerPcs, null,5));
        SummeryCalculation();
    });
    $('#txtPrintCostPerPcs,#txtEmbrodaryCostPerPcs,#txtTestCostPerPcs,#txtCourierCostPerPcs,#txtOthersCostPerPcs,#txtCMCostPerPcs').keyup(function(){

        var nPrintPricePerPcs = parseFloat(icsRemoveComma($("#txtPrintCostPerPcs").val()));
        var nPrintPricePerDozen   =(parseFloat(nPrintPricePerPcs)*12);
        $('#txtPrintPricePerDozen').val(icsFormatPrice(nPrintPricePerDozen, null,5));

        var nEmbrodaryPricePerPcs = parseFloat(icsRemoveComma($("#txtEmbrodaryCostPerPcs").val()));
        var nEmbrodaryPricePerDozen   =(parseFloat(nEmbrodaryPricePerPcs)*12);
        $('#txtEmbrodaryPricePerDozen').val(icsFormatPrice(nEmbrodaryPricePerDozen, null,5));

        var nTestPricePerPcs = parseFloat(icsRemoveComma($("#txtTestCostPerPcs").val()));
        var nTestPricePerDozen   =(parseFloat(nTestPricePerPcs)*12);
        $('#txtTestPricePerDozen').val(icsFormatPrice(nTestPricePerDozen, null,5));

        var nCourierPricePerPcs = parseFloat(icsRemoveComma($("#txtCourierCostPerPcs").val()));
        var nCourierPricePerDozen   =(parseFloat(nCourierPricePerPcs)*12);
        $('#txtCourierPricePerDozen').val(icsFormatPrice(nCourierPricePerDozen, null,5));

        var nOthersPricePerPcs = parseFloat(icsRemoveComma($("#txtOthersCostPerPcs").val()));
        var nOthersPricePerDozen   =(parseFloat(nOthersPricePerPcs)*12);
        $('#txtOthersPricePerDozen').val(icsFormatPrice(nOthersPricePerDozen, null,5));

        var nCMPricePerPcs = parseFloat(icsRemoveComma($("#txtCMCostPerPcs").val()));
        var nCMPricePerDzn   =(parseFloat(nCMPricePerPcs)*12);
        $('#txtCMCostPerDozen').val(icsFormatPrice(nCMPricePerDzn, null,5));
        SummeryCalculation();
    });

    $('#txtOfferPricePerDozen,#txtConfirmPricePerDozen').keyup(function(){

        var nOfferPricePerDozen = parseFloat(icsRemoveComma($("#txtOfferPricePerDozen").val()));
        var nOfferPricePerPcs  =(parseFloat(nOfferPricePerDozen)/12);
        $('#txtOfferPricePerPcs').val(icsFormatPrice(nOfferPricePerPcs, null,5));

        var nConfirmPricePerDozen = parseFloat(icsRemoveComma($("#txtConfirmPricePerDozen").val()));
        var nConfirmPricePerPcs  =(parseFloat(nConfirmPricePerDozen)/12);
        $('#txtConfirmPricePerPcs').val(icsFormatPrice(nConfirmPricePerPcs, null,5));
    });
    $('#txtOfferPricePerPcs,#txtConfirmPricePerPcs').keyup(function(){

        var nOfferPricePerPcs = parseFloat(icsRemoveComma($("#txtOfferPricePerPcs").val()));
        var nOfferPricePerDozen   =(parseFloat(nOfferPricePerPcs)*12);
        $('#txtOfferPricePerDozen').val(icsFormatPrice(nOfferPricePerDozen, null,5));

        var nConfirmPricePerPcs = parseFloat(icsRemoveComma($("#txtConfirmPricePerPcs").val()));
        var nConfirmPricePerDozen   =(parseFloat(nConfirmPricePerPcs)*12);
        $('#txtConfirmPricePerDozen').val(icsFormatPrice(nConfirmPricePerDozen, null,5));
    });
    var editIndex = undefined;
    function endEditingYarn(){
        if (editIndex == undefined){return true}
        if ($('#tblFabric').datagrid('validateRow', editIndex)){
            $('#tblFabric').datagrid('endEdit', editIndex);
            $('#tblFabric').datagrid('selectRow',editIndex);
            var oYarn=$('#tblFabric').datagrid('getSelected');
            if(oYarn==null){return;}
            //debugger;

            oYarn.FabricCost=parseFloat(parseFloat(parseFloat(oYarn.MaterialMarketPrice)+parseFloat(oYarn.KnittingCost)+parseFloat(oYarn.DyeingCost)+parseFloat(oYarn.LycraCost)+parseFloat(oYarn.AOPCost)+parseFloat(oYarn.WashCost)+parseFloat(oYarn.YarnDyeingCost)+parseFloat(oYarn.SuedeCost)+parseFloat(oYarn.FinishingCost)+parseFloat(oYarn.BrushingCost)));
            oYarn.ConsumptionPerPc=parseFloat(parseFloat(oYarn.Consumption)/12);
            oYarn.EstimatedCost=parseFloat(parseFloat(oYarn.FabricCost)* parseFloat(oYarn.Consumption));
            oYarn.CostPerPcs=parseFloat(parseFloat(oYarn.EstimatedCost)/12);
            $('#tblFabric').datagrid('updateRow',{index: editIndex,	row: oYarn});
            RefreshFooter();
            SummeryCalculation();
            editIndex  = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRowYarnDetail(index){
        if (editIndex != index){
            if (endEditingYarn())
            {
                $('#tblFabric').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex  = index;
            }
            else
            {
                $('#tblFabric').datagrid('selectRow', editIndex);
            }
        }
    }


    var editIndexAccessories = undefined;
    function endEditingAccessories(){
        if (editIndexAccessories == undefined){return true}
        if ($('#tblAccessories').datagrid('validateRow', editIndexAccessories)){
            $('#tblAccessories').datagrid('endEdit', editIndexAccessories);
            $('#tblAccessories').datagrid('selectRow',editIndexAccessories);
            var oAccessories=$('#tblAccessories').datagrid('getSelected');
            if(oAccessories==null){return;}
            if(oAccessories.RateUnit<=0){alert("Sorry, Rate Unit Minimum Value is 1. For Accessories ["+oAccessories.ProductName+"]");oAccessories.RateUnit=1;}

            oAccessories.CostPerDzn=parseFloat(parseFloat(oAccessories.Consumption) * (parseFloat(oAccessories.MaterialMarketPrice)/oAccessories.RateUnit));
            oAccessories.CostPerPcs=parseFloat(parseFloat(oAccessories.CostPerDzn)/12);            
            var nAdditionPercent = ((100.00 - parseFloat(oAccessories.UsePercentage)) / 100.00);
            if(nAdditionPercent<=0)
            {
                nAdditionPercent = 1.00;
            }
            oAccessories.EstimatedCost= parseFloat((parseFloat(oAccessories.CostPerDzn) /nAdditionPercent));
            oAccessories.EstimatedCostPerPc = oAccessories.EstimatedCost/12;
            $('#tblAccessories').datagrid('updateRow',{index: editIndexAccessories,	row: oAccessories});
            SummeryCalculation();
            editIndexAccessories  = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRowAccessoriesDetail(index){
        if (editIndexAccessories != index){
            if (endEditingAccessories())
            {
                $('#tblAccessories').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndexAccessories  = index;
            }
            else
            {
                $('#tblAccessories').datagrid('selectRow', editIndexAccessories);
            }
        }
    }



    var editIndexCostSheetCM = undefined;
    function endEditingCostSheetCM(){
        if (editIndexCostSheetCM == undefined){return true}
        if ($('#tblCostSheetCM').datagrid('validateRow', editIndexCostSheetCM)){
            $('#tblCostSheetCM').datagrid('endEdit', editIndexCostSheetCM);
            $('#tblCostSheetCM').datagrid('selectRow',editIndexCostSheetCM);
            var oCostSheetCM=$('#tblCostSheetCM').datagrid('getSelected');
            if(oCostSheetCM==null){return;}
            var nApproxQty = parseFloat(icsRemoveComma($("#txtApproxQty").val()));
            oCostSheetCM.CSQty = nApproxQty;
            if(nApproxQty>0 && oCostSheetCM.NumberOfMachine>0 && oCostSheetCM.MachineCost>0 && oCostSheetCM.ProductionPerDay>0  && oCostSheetCM.BufferDays>0   )
            {
                oCostSheetCM.TotalRequiredDays = (Math.round((parseInt(oCostSheetCM.CSQty/oCostSheetCM.ProductionPerDay)) +parseInt(oCostSheetCM.BufferDays))).toFixed(0);
                oCostSheetCM.CMPerPc =((oCostSheetCM.NumberOfMachine * oCostSheetCM.MachineCost * oCostSheetCM.TotalRequiredDays) / oCostSheetCM.CSQty).toFixed(2);
                var nAdditionPercent = ((100.00 - parseFloat(oCostSheetCM.CMAdditionalPerent)) / 100.00);
                if(nAdditionPercent<=0)
                {
                    nAdditionPercent = 1.00;
                }
                oCostSheetCM.CMWithAddition = (parseFloat(oCostSheetCM.CMPerPc)/nAdditionPercent).toFixed(2);//15% increase default
                oCostSheetCM.CMPerDozen = (parseFloat(oCostSheetCM.CMWithAddition)*parseFloat(12))
            }else{
                oCostSheetCM.CMPerPc = 0;oCostSheetCM.CMWithAddition = 0;oCostSheetCM.CMPerDozen = 0;
            }
            $('#tblCostSheetCM').datagrid('updateRow',{index: editIndexCostSheetCM,	row: oCostSheetCM});
            RefreshCMFooter(true);
            SummeryCalculation();
            editIndexCostSheetCM  = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRowCostSheetCM(index){
        if (editIndexCostSheetCM != index){
            if (endEditingCostSheetCM())
            {
                $('#tblCostSheetCM').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndexCostSheetCM  = index;
            }
            else
            {
                $('#tblCostSheetCM').datagrid('selectRow', editIndexCostSheetCM);
            }
        }
    }

    //Yarn add , edit & Delete start
    function AddYarnORFabric()
    {
        //debugger;
        var oCostSheetDetail = $('#divCS').data('CostSheetDetail');
        if(oCostSheetDetail==null || parseInt(oCostSheetDetail.MaterialID)<=0 )
        {
            alert("Please Pick Yarn ");
            return;
        }
        var oPriviousList =   $('#tblFabric').datagrid('getRows');
        if(ICS_IsExist(oPriviousList,'MaterialID',oCostSheetDetail.MaterialID))
        {
            alert("Already Exist");
            return;
        }
        if(parseInt($('#cboYarnUnit').val()) <=0)
        {
            alert("Please Select Unit.");
            return;
        }
        oCostSheetDetail.UnitID = parseInt($('#cboYarnUnit').val()) ;
        oCostSheetDetail.UnitName = $("#cboYarnUnit option:selected").text();
        $('#tblFabric').datagrid('appendRow',oCostSheetDetail);
        $('#txtFabricName').val('');
        $('#divCS').data('CostSheetDetail',null);
        SummeryCalculation();

    }
    function RemoveYarn()
    {
        var oYarnDetail =$('#tblFabric').datagrid('getSelected');
        if(oYarnDetail==null || oYarnDetail.MaterialID<=0)
        {
            alert("Select At least One item !");
            return;
        }

        if (!confirm("Confirm to Delete?")) return ;
        var nIndex= $('#tblFabric').datagrid('getRowIndex',oYarnDetail);
        $('#tblFabric').datagrid('deleteRow',nIndex);
        RefreshYarnDetail();
        SummeryCalculation();

    }
    function RefreshYarnDetail()
    {
        //debugger;
        endEditingYarn();
        var oFabricDetails =$('#tblFabric').datagrid('getRows');
        if(oFabricDetails !=null)
        {
            DynamicRefreshList(oFabricDetails,'tblFabric');
            SummeryCalculation();
        }
    }
    //Yarn End

    //Accessories  Add, Edit & Delete Start
    function AddAccessories()
    {
        //debugger;
        var oAccessoriesDetail = $('#divCS').data('AccessoriesDetail');
        if(oAccessoriesDetail==null || parseInt(oAccessoriesDetail.MaterialID)<=0 )
        {
            alert("Please Pick Accessories ");
            return;
        }
        var oPriviousList =   $('#tblAccessories').datagrid('getRows');
        if(ICS_IsExist(oAccessoriesDetail,'MaterialID',oAccessoriesDetail.MaterialID))
        {
            alert("Already Exist");
            return;
        }
        if(parseInt($('#cboACUnit').val()) <=0)
        {
            alert("Please Select Unit.");
            return;
        }

        oAccessoriesDetail.UnitID = parseInt($('#cboACUnit').val());
        oAccessoriesDetail.UnitName = $("#cboACUnit option:selected").text();
        $('#tblAccessories').datagrid('appendRow',oAccessoriesDetail);
        $('#txtAccessoriesName').val('');

        $('#divCS').data('AccessoriesDetail',null);
        SummeryCalculation();
    }
    function DeleteAccssories()
    {
        var oAccessoriesDetail = $('#tblAccessories').datagrid('getSelected');
        if(oAccessoriesDetail==null)
        {
            alert("Select At least One item !");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var nIndex= $('#tblAccessories').datagrid('getRowIndex',oAccessoriesDetail);
        $('#tblAccessories').datagrid('deleteRow',nIndex);
        SummeryCalculation();
    }
    function RefreshAccessories()
    {
        endEditingAccessories();
        var oAccessoriesDetails =$('#tblAccessories').datagrid('getRows');
        if(oAccessoriesDetails !=null)
        {
            DynamicRefreshList(oAccessoriesDetails,'tblAccessories');
            SummeryCalculation();
        }
    }


    //CostSheetCM  Add, Edit & Delete Start
    $('#btnAddCostSheetCM').click(function(){
        var nCMType = parseInt($('#cboCMType').val());
        if(nCMType<=0)
        {
            alert("Please select an CM Type!");
            return;
        }
        AddCostSheetCM(nCMType);
    });


    function AddCostSheetCM(nCMType)
    {
        //debugger;
        var oCostSheet = $('#tabCostSheet').data('CostSheet');
        if(parseInt(oCostSheet.TechnicalSheetID)<=0 )
        {
            alert("Please Pick Style ");
            return;
        }
        var nApproxQty = parseFloat(icsRemoveComma($("#txtApproxQty").val()));
        if(parseFloat(nApproxQty)<=0 )
        {
            alert("Approximate Qty Should be Greater than 0;");
            return;
        }
        var oCostSheetCMs = $('#tblCostSheetCM').datagrid('getRows');        
        var sCMTypeSt = 'CM';
        if(parseInt(nCMType)==2)
        {
            sCMTypeSt = 'Rent + Utility';
            for(var i=0; i<oCostSheetCMs.length; i++)
            {
                if(parseInt(oCostSheetCMs[i].CMTypeInt) == 2)
                {
                    alert("Already Added Rent + Utility CM!");
                    return;
                }
            }
        }
        else if(parseInt(nCMType)==3)
        {
            sCMTypeSt = 'Overhead';
            for(var i=0; i<oCostSheetCMs.length; i++)
            {
                if(parseInt(oCostSheetCMs[i].CMTypeInt) == 3)
                {
                    alert("Already Added Overhead CM!");
                    return;
                }
            }
        }

        var oCostSheetCM ={
            CostSheetCMID :0,
            CostSheetID  :0,
            CMType : parseInt(nCMType),
            CMTypeInt : parseInt(nCMType),
            CMTypeSt : sCMTypeSt,
            CMPart : sCMTypeSt,
            NumberOfMachine  :0,
            MachineCost  :0,
            ProductionPerDay  :0,
            BufferDays : 2,//detail
            TotalRequiredDays  :0,
            CMAdditionalPerent :15, //default
            CSQty  :nApproxQty,
            CSQtySt:(nApproxQty).toFixed(0),
            CMPerPc:0,
            CMWithAddition:0,
            CMPerDozen:0
        };

        $('#tblCostSheetCM').datagrid('appendRow',oCostSheetCM);
        var oCostSheetCMs = $('#tblCostSheetCM').datagrid('getRows');

        DynamicRefreshList([],'tblCostSheetCM');
        oCostSheetCMs.sort(compare);
        DynamicRefreshList(oCostSheetCMs,'tblCostSheetCM');

        RefreshCMFooter(true);
        $('#btnAddCostSheetCM').focus();
    }

    function compare( a, b ) {
        if ( parseInt(a.CMTypeInt) < parseInt(b.CMTypeInt) ){
            return -1;
        }
        if ( parseInt(a.CMTypeInt) > parseInt(b.CMTypeInt) ){
            return 1;
        }
        return 0;
    }

    function DeleteCostSheetCM()
    {
        endEditingCostSheetCM();
        var oCostSheetCM = $('#tblCostSheetCM').datagrid('getSelected');
        if(oCostSheetCM==null)
        {
            alert("Select At least One item !");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var nIndex= $('#tblCostSheetCM').datagrid('getRowIndex',oCostSheetCM);
        $('#tblCostSheetCM').datagrid('deleteRow',nIndex);
        RefreshCMFooter(true);
        SummeryCalculation();
    }
    function RefreshCostSheetCM()
    {
        endEditingCostSheetCM();
        var oCostSheetCMs =$('#tblCostSheetCM').datagrid('getRows');
        if(oCostSheetCMs !=null)
        {
            DynamicRefreshList(oCostSheetCMs,'tblCostSheetCM');
            SummeryCalculation();
        }
    }


   
    //Accessoreis End
    function SummeryCalculation()
    {
        //debugger;
        //Yarn Part Start
        var oFabricDetails = $('#tblFabric').datagrid('getRows');
        var  nTotalYarnEstimatedCost = ICS_TotalCalculation(oFabricDetails,'EstimatedCost');
        $('#txtFabricCostPerDozen').val(icsFormatPrice(parseFloat(nTotalYarnEstimatedCost), null,5));
        var nFabricCostPerPcs =(parseFloat(nTotalYarnEstimatedCost)/12);
        $('#txtFabricCostPerPcs').val(icsFormatPrice(nFabricCostPerPcs, null,5));

        // Package Part End
        var oPackages =  $('#tblCostSheetPackage').datagrid('getRows');
        var nTotalPackageCost = ICS_TotalCalculation(oPackages,'Price');


        //Accessories Part start
        var oAccessoriesDetails = $('#tblAccessories').datagrid('getRows');
        var nAccessoriesCostPerDozen = ICS_TotalCalculation(oAccessoriesDetails,'EstimatedCost');
        $('#txtAccessoriesCostPerDozen').val(icsFormatPrice(parseFloat(nAccessoriesCostPerDozen), null,5));
        var nAccessoriesCostPerPcs =(parseFloat(nAccessoriesCostPerDozen)/12);
        $('#txtAccessoriesCostPerPcs').val(icsFormatPrice(nAccessoriesCostPerPcs, null,5));


        var nBuyingCommission = parseFloat(icsRemoveComma($("#txtBuyingCommission").val()));
        if(parseFloat(nBuyingCommission)>100)
        {
            alert("Buyeing Commission Should be Less than 100 %");
        }
        var nFabricCostPerDozen = parseFloat(icsRemoveComma($("#txtFabricCostPerDozen").val()));
        var nCMCost = parseFloat(icsRemoveComma($("#txtCMCostPerDozen").val()));
        var nPrintPricePerDozen   = parseFloat(icsRemoveComma($("#txtPrintPricePerDozen").val()));
        var nEmbrodaryPricePerDozen    = parseFloat(icsRemoveComma($("#txtEmbrodaryPricePerDozen").val()));
        var nTestPricePerDozen    = parseFloat(icsRemoveComma($("#txtTestPricePerDozen").val()));
        var nOthersPricePerDozen  = parseFloat(icsRemoveComma($("#txtOthersPricePerDozen").val()));
        var nCourierPricePerDozen = parseFloat(icsRemoveComma($("#txtCourierPricePerDozen").val()));
        var nBankingCost = parseFloat(icsRemoveComma($("#txtBankingCost").val()));

        //debugger;
        var nTotalCostPerPcs = parseFloat(parseFloat(nFabricCostPerDozen)+parseFloat(nPrintPricePerDozen+nEmbrodaryPricePerDozen+nTestPricePerDozen+nOthersPricePerDozen+nCourierPricePerDozen)+parseFloat(nAccessoriesCostPerDozen)+ parseFloat(nCMCost) + parseFloat(nTotalPackageCost))/12;
        var ntxtByiengCommissionPercentValue = parseFloat(parseFloat(nTotalCostPerPcs) * parseFloat(nBuyingCommission/parseFloat(100)));
        var nBankCommissionPercentValue = parseFloat(parseFloat(nTotalCostPerPcs) * parseFloat(parseFloat(nBankingCost)/parseFloat(100)));
        var nFOBPricePerPcs = parseFloat(nTotalCostPerPcs)  + parseFloat(ntxtByiengCommissionPercentValue) + parseFloat(nBankCommissionPercentValue);

        var nFOBPricePerDozen =(parseFloat(nFOBPricePerPcs)*12);
        $('#txtFOBPricePerDozen').val(icsFormatPrice(nFOBPricePerDozen, null,5));
        $('#txtFOBPricePerPcs').val(icsFormatPrice(nFOBPricePerPcs, null,5));


        //CurrencySet();
        // Accessoreis Part End
        RefreshFooter();

    }
    function RefreshFooter()
    {
        var oFabricDetails = $('#tblFabric').datagrid('getRows');
        var oFooterObject = {
            ProductCode:'Total:',
            DyeingCost:formatPrice4digit(ICS_TotalCalculation(oFabricDetails,'DyeingCost')),
            LycraCost:formatPrice4digit(ICS_TotalCalculation(oFabricDetails,'LycraCost')),
            AOPCost	:formatPrice4digit(ICS_TotalCalculation(oFabricDetails,'AOPCost')),
            KnittingCost	: formatPrice4digit(ICS_TotalCalculation(oFabricDetails,'KnittingCost')),
            WashCost : formatPrice4digit(ICS_TotalCalculation(oFabricDetails,'WashCost')),
            YarnDyeingCost : formatPrice4digit(ICS_TotalCalculation(oFabricDetails,'YarnDyeingCost')),
            SuedeCost  : formatPrice4digit(ICS_TotalCalculation(oFabricDetails,'SuedeCost')),
            FinishingCost : formatPrice4digit(ICS_TotalCalculation(oFabricDetails,'FinishingCost')),
            BrushingCost : formatPrice4digit(ICS_TotalCalculation(oFabricDetails,'BrushingCost')),
            FabricCost :formatPrice4digit(ICS_TotalCalculation(oFabricDetails,'FabricCost')),
            Consumption : formatPrice4digit(ICS_TotalCalculation(oFabricDetails,'Consumption')),
            ConsumptionPerPc : formatPrice4digit(ICS_TotalCalculation(oFabricDetails,'ConsumptionPerPc')),
            CostPerPcs : formatPrice4digit(ICS_TotalCalculation(oFabricDetails,'CostPerPcs')),
            EstimatedCost : formatPrice4digit(ICS_TotalCalculation(oFabricDetails,'EstimatedCost'))
        };
        $('#tblFabric').datagrid('reloadFooter',[oFooterObject]);
    }
    function CurrencySet()
    {
        //Currency Symbol Change
        var sSymbol = parseInt($('#cboCostCurrency').val())>0?$('#cboCostCurrency option:selected').text():"";
        $('#txtFabricCostCurrency,#txtAccessoriesCostCurrency,#txtPrintCostCurrency,#txtEmbrodaryCostCurrency,#txtTestCostCurrency,#txtCourierCostCurrency,#txtOthersCostCurrency,#txtCMCostCurrency,#txtFOBPriceCurrency,#txtOfferPriceCurrency,#txtConfirmPriceCurrency').val(sSymbol);

        document.getElementById('lblMCCurrencySymbol').innerHTML= sSymbol;
        document.getElementById('lblCMCurrencySymbol').innerHTML= sSymbol;
        document.getElementById('lblFinalCMCurrencySymbol').innerHTML= sSymbol;
        document.getElementById('lblFinalCMCurrencySymbolDzn').innerHTML= sSymbol;
    }

    function StyleImage (nTSID,bIsFronImage)
    {
        //debugger;
        var oTechnicalSheet = {TechnicalSheetID:nTSID, IsFronImage:bIsFronImage};
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/CostSheet/GetStyleImageInBase64",
            traditional: true,
            data:  JSON.stringify(oTechnicalSheet),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                if(bIsFronImage == true)
                {
                    $('#imgFrontImage').attr('src', "data:image/jpg;base64," + data.base64imgage );
                }else
                {
                    $('#imgBackImage').attr('src', "data:image/jpg;base64," + data.base64imgage );
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });


        //var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
        //$http.post(_sBaseAddress+'/CostSheet/GetStyleImageInBase64',$.param(oTechnicalSheet), config).then(
        //                    function (response)
        //                    {
        //                        if(bIsFronImage == true)
        //                        {
        //                            $('#imgFrontImage').attr('src', "data:image/jpg;base64," + response.data.base64imgage );
        //                        }else
        //                        {
        //                            $('#imgBackImage').attr('src', "data:image/jpg;base64," + response.data.base64imgage );
        //                        }
        //                    },
        //                      function (response) { alert(jQuery.parseJSON(response.data).Message);}
        //                );



    }
    function PickStyle()
    {
        var oTechnicalSheet = {
            StyleNo:$.trim($('#txtStyleNo').val()),
            BUID:sessionStorage.getItem('BUID')
        };
        var obj = {
            BaseAddress:_sBaseAddress,
            Object: oTechnicalSheet,
            ControllerName: "TechnicalSheet",
            ActionName: "StyleSearch",
            IsWinClose: false
        };
        $.icsProgressBar(true);
        $.icsDataGets(obj, function (response) {
            //debugger;
            $.icsProgressBar(false);
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].TechnicalSheetID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "StyleNo", title: "Style No", width:200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer", width:150, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winStyle',
                        winclass: 'clsStyle',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblStyle',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Style List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            } else{
                alert("Data Not Found.");
                return;
            }
        });

    }
    $('#txtStyleNo').keydown(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)
        {
            if($("#txtStyleNo").val()!="")
            {
                PickStyle();
            }
        }else if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtStyleNo").val('');
            $("#txtStyleNo").removeClass('fontColorOfPickItem');
            $('#tabCostSheet').data('CostSheet').TechnicalSheetID=  0;
            $("#txtBuyerName").val( '');
            $("#txtKnittingPatternName").val('');

            $("#txtGG").val('');
            $("#txtSizeRange").val('');
            $("#txtColorRange").val( '');
            $("#txtStyleDescription").val('');
            $("#cboCountUnit").val(0);
            StyleImage(0,true);
            StyleImage(0,false);
        }
    });
    function LoadExistCostingInfo(nTechnicalSheetID)
    {
        var oTechnicalSheet = {TechnicalSheetID:nTechnicalSheetID};
        $.ajax ({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/CostSheet/LoadCostingInfo",
            data:  JSON.stringify(oTechnicalSheet),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var oCostSheet=jQuery.parseJSON(response.data);
                if(oCostSheet!=null && oCostSheet.TechnicalSheetID>0)
                {

                    $('#tabCostSheet').data('CostSheet',oCostSheet);
                    DynamicRefreshList(oCostSheet.CostSheetYarnDetails,'tblFabric');
                    DynamicRefreshList(oCostSheet.CostSheetAccessoriesDetails,'tblAccessories');
                    DynamicRefreshList(oCostSheet.CostSheetPackages,'tblCostSheetPackage');

                    $('#tabCostSheet').data('CostSheetYarnDetails',oCostSheet.CostSheetYarnDetails);
                    $('#tabCostSheet').data('CostSheetAccessoriesDetails',oCostSheet.CostSheetAccessoriesDetails);
                    $('#tabCostSheet').data('CostSheetPackages',oCostSheet.CostSheetPackages);

                }else
                {
                    alert(oCostSheet.ErrorMessage);return;
                }

            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });


    }

    $('#txtMerchandiserName').keydown(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)
        {

            if($.trim($('#txtMerchandiserName').val())!="")
            {
                var oEmployee = {Name:$('#txtMerchandiserName').val()};


                var obj = {
                    BaseAddress: _sBaseAddress,
                    Object: oEmployee,
                    ControllerName: "CostSheet",
                    ActionName: "GetEmployees",
                    IsWinClose: false
                };
                $.icsDataGets(obj, function (response) {
                    //debugger;
                    if (response.status && response.objs.length > 0) {
                        if (response.objs[0].EmployeeID > 0) {
                            var tblColums = [];
                            var oColumn = { field: 'Code', title: 'Code',width:200, align: "left"  };tblColums.push(oColumn);
                            oColumn = { field: 'Name', title: 'Employee',width:200, align: "left" };tblColums.push(oColumn);

                            var oPickerParam = {
                                winid: 'winMerchandiser',
                                winclass: 'clsMerchandiser',
                                winwidth: 600,
                                winheight: 460,
                                tableid: 'tblMerchandiser',
                                tablecolumns: tblColums,
                                datalist: response.objs,
                                multiplereturn: false,
                                searchingbyfieldName: 'Name',
                                windowTittle: 'Merchandiser List'
                            };
                            $.icsPicker(oPickerParam);
                            IntializePickerbutton(oPickerParam);
                        }
                        else {
                            alert(response.objs[0].ErrorMessage);
                        }

                    } else{
                        alert("Data Not Found.");
                        return;
                    }
                });


            }
        }else if (code == 8) //backspace=8
        {
            //debugger;
            $('#tabCostSheet').data('CostSheet').MerchandiserID = 0;
            $("#txtMerchandiserName").val('');
            $("#txtMerchandiserName").removeClass('fontColorOfPickItem');
        }
    });
    $('#txtFabricName').keydown(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)
        {
            //debugger;
            if($.trim($("#txtFabricName").val())!="")
            {
                var oProduct = {
                    ProductName:$.trim($("#txtFabricName").val()),
                    ModuleNameInInt:108,//EnumModuleName : CostSheet =108
                    ProductUsagesInInt:5,//EnumProductUsages : Yarn/fabric = 5
                    BUID:sessionStorage.getItem('BUID')
                };

                $.icsProgressBar(true);
                var obj = {
                    BaseAddress: _sBaseAddress,
                    Object: oProduct,
                    ControllerName: "Product",
                    ActionName: "GetProductsByBUModuleWithProductUse",
                    IsWinClose: false
                };
                $.icsDataGets(obj, function (response) {
                    //debugger;
                    $.icsProgressBar(false);
                    if (response.status && response.objs.length > 0)
                    {
                        if (response.objs[0].ProductID > 0) {
                            var tblColums = [];
                            var oColumn = { field: 'ProductCode', title: 'Code', width: 100, align: "left"  };tblColums.push(oColumn);
                            oColumn = { field: 'ProductName', title: 'Product', width: 300, align: "left"  };tblColums.push(oColumn);
                            var oPickerParam = {
                                winid: 'winProductPicker',
                                winclass: 'clsProductPicker',
                                winwidth: 600,
                                winheight: 460,
                                tableid: 'tblProductPicker',
                                tablecolumns: tblColums,
                                datalist: response.objs,
                                multiplereturn: false,
                                searchingbyfieldName: 'ProductName',
                                windowTittle: 'Product List'
                            };
                            $.icsPicker(oPickerParam);
                            IntializePickerbutton(oPickerParam);
                        }
                        else {
                            alert(response.objs[0].ErrorMessage);
                        }

                    } else{
                        alert("Data Not Found.");
                        return;
                    }
                });

            }else if (code == 8) //backspace=8
            {
                //debugger;
                $('#divCS').data('CostSheetDetail',null);

                $("#txtFabricName").removeClass('fontColorOfPickItem');
                LoadUnits(0,true);
            }
        }
    });
    $('#txtAccessoriesName').keydown(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)
        {
            if($.trim($("#txtAccessoriesName").val())!="")
            {
                PickProduct();
            }
        }else if (code == 8) //backspace=8
        {
            //debugger;
            $('#divCS').data('AccessoriesDetail',null);
            $("#txtAccessoriesName").removeClass('fontColorOfPickItem');
            LoadUnits(0,false);
        }
    });
    function PickProduct()
    {
        var oProduct = {
            ProductName:$.trim($("#txtAccessoriesName").val()),
            ModuleNameInInt:108,//EnumModuleName : CostSheet =108
            ProductUsagesInInt:6,//EnumProductUsages : Accessoreis = 5
            BUID:sessionStorage.getItem('BUID')
        };
        $.icsProgressBar(true);
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "Product",
            ActionName: "GetProductsByBUModuleWithProductUse",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            //debugger;
            $.icsProgressBar(false);
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];
                    var oColumn = { field: 'ProductCode', title: 'Code', width: 100, align: "left"  };tblColums.push(oColumn);
                    oColumn = { field: 'ProductName', title: 'Product', width: 300, align: "left"  };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winAccessoriesPicker',
                        winclass: 'clsAccessoriesPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblAccessoriesPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ProductName',
                        windowTittle: 'Accessories List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            } else{
                alert("Data Not Found.");
                return;
            }
        });

    }
    function LoadUnits(nUnitType,bIsYarnUnit)
    {
        //debugger;
        if(bIsYarnUnit)
        {
            $("#cboYarnUnit").icsLoadCombo({List: [],OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
        }else{

            $("#cboACUnit").icsLoadCombo({List: [],OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
        }
        if (parseInt(nUnitType)>0)
        {
            var oMeasurementUnit = {UnitTypeInInt:nUnitType};

            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/MeasurementUnit/GetbyUnitType",
                traditional: true,
                data:  JSON.stringify(oMeasurementUnit),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oMeasurementUnits=jQuery.parseJSON(data);
                    if(oMeasurementUnits.length>0)
                    {
                        if(bIsYarnUnit==true){
                            $("#cboYarnUnit").icsLoadCombo({List:oMeasurementUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
                        }
                        else{$("#cboACUnit").icsLoadCombo({List: oMeasurementUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});}
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        }
    }

    function IntializePickerbutton(oPickerobj) {
        //debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //debugger;
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }
    function SetPickerValueAssign(oPickerobj)
    {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winStyle')
        {
            if (oreturnObj != null && oreturnObj.TechnicalSheetID> 0)
            {
                //debugger;
                $("#txtStyleNo").val(oreturnObj.StyleNo);
                $('#tabCostSheet').data('CostSheet').TechnicalSheetID=  oreturnObj.TechnicalSheetID;
                $("#txtBuyerName").val( oreturnObj.BuyerName);
                $("#txtKnittingPatternName").val( oreturnObj.KnittingPatternName);
                $('#txtApproxQty').val(icsFormatPrice(parseFloat(oreturnObj.ApproxQty), null,0));
                $("#txtGG").val( oreturnObj.GG);
                $("#txtSizeRange").val(oreturnObj.SizeRange);
                $("#txtColorRange").val( oreturnObj.ColorRange);
                $("#txtStyleDescription").val( oreturnObj.StyleDescription);
                $("#txtFabricDescription").val( oreturnObj.FabricDescription);
                $("#cboCountUnit").val( oreturnObj.MeasurementUnitID);
                $("#txtMerchandiserName").val( oreturnObj.MerchandiserName);
                $('#tabCostSheet').data('CostSheet').MerchandiserID=  oreturnObj.MerchandiserID;
                $("#txtStyleNo,#txtMerchandiserName").addClass('fontColorOfPickItem');
                if(parseFloat(oreturnObj.ApproxQty)>0)
                {
                    DynamicRefreshList([],'tblCostSheetCM');
                    AddCostSheetCM(1);//Add //Here 1 Means CMType : CM
                }
               
                StyleImage($('#tabCostSheet').data('CostSheet').TechnicalSheetID,true);
                StyleImage($('#tabCostSheet').data('CostSheet').TechnicalSheetID,false);
                $('#txtStyleNo').focus();
            }
        }else   if (oPickerobj.winid == 'winMerchandiser')
        {
            if(parseInt(oreturnObj.EmployeeID)>0)
            {
                $('#tabCostSheet').data('CostSheet').MerchandiserID = oreturnObj.EmployeeID;
                $("#txtMerchandiserName").val( oreturnObj.Name);
                $("#txtMerchandiserName").addClass('fontColorOfPickItem');
            }
        }else   if (oPickerobj.winid == 'winProductPicker')
        {
            if(parseInt(oreturnObj.ProductID)>0)
            {

                $("#txtFabricName").val( oreturnObj.ProductName);
                $("#txtFabricName").addClass('fontColorOfPickItem');
                var oCostSheetDetail = {
                    CostSheetDetailID:0,
                    CostSheetID: $('#tabCostSheet').data('CostSheet').CostSheetID,
                    MaterialTypeInInt: 1, // 1 = yarn : 2 = Accessories
                    MaterialID:oreturnObj.ProductID,
                    ProductCode :oreturnObj.ProductCode,
                    ProductName :oreturnObj.ProductName,
                    Sequence:parseInt($('#tblFabric').datagrid('getRows').length)+1,
                    Description : "",
                    Width:"",
                    UnitName:'',
                    Consumption:0,
                    MaterialMarketPrice : 0,
                    DyeingCost: 0,
                    LycraCost: 0,
                    AOPCost:0,
                    KnittingCost:0,
                    WashCost:0,
                    YarnDyeingCost:0,
                    SuedeCost:0,
                    FinishingCost:0,
                    BrushingCost:0,
                    FabricCost:0,
                    ConsumptionPerPc:0,
                    CostPerPcs:0,
                    EstimatedCost :0,
                    EstimatedCostPerPc:0
                };

                $('#divCS').data('CostSheetDetail',oCostSheetDetail);
                LoadUnits(oreturnObj.UnitType,true);
                $('#txtFabricName').focus();
            }
        }else   if (oPickerobj.winid == 'winAccessoriesPicker')
        {
            if(parseInt(oreturnObj.ProductID)>0)
            {
                $("#txtAccessoriesName").val( oreturnObj.ProductName);
                $("#txtAccessoriesName").addClass('fontColorOfPickItem');
                var oAccessoriesDetail = {
                    CostSheetDetailID:0,
                    CostSheetID: $('#tabCostSheet').data('CostSheet').CostSheetID,
                    MaterialTypeInInt: 2, // 1 = yarn : 2 = Accessories
                    MaterialID:oreturnObj.ProductID,
                    ProductCode :oreturnObj.ProductCode,
                    ProductName :oreturnObj.ProductName,
                    Sequence: parseInt($('#tblAccessories').datagrid('getRows').length)+1,
                    Description:"",
                    Width : "",
                    RateUnit:1,
                    Consumption : 0,
                    UnitID:0,
                    UnitName :'',
                    UsePercentage:0,
                    MaterialMarketPrice:0,
                    EstimatedCost :0,
                    EstimatedCostInString:'0.0/Dozen'
                };
                $('#divCS').data('AccessoriesDetail',oAccessoriesDetail);
                LoadUnits(oreturnObj.UnitType,false);
                $('#txtAccessoriesName').focus();
            }
        }
    }

    function YarnUP()
    {
        //debugger;
        var oTempCostSheetFabricDetails =  $('#tblFabric').datagrid('getRows');
        var oCostSheetDetail = $('#tblFabric').datagrid('getSelected');
        if(oCostSheetDetail==null || parseInt(oCostSheetDetail.MaterialID)<=0)
        {
            alert("Please select Cost Sheet");
            return;
        }
        var SelectedRowIndex=$('#tblFabric').datagrid('getRowIndex',oCostSheetDetail);
        if(SelectedRowIndex==0)return;
        var oCostSheetYarnDetails=[];
        oCostSheetYarnDetail=oTempCostSheetFabricDetails;
        oTempCostSheetFabricDetails=[];
        for(var i=0; i<oCostSheetYarnDetail.length; i++)
        {
            if(i==(SelectedRowIndex-1))
            {
                oTempCostSheetFabricDetails[i]=oCostSheetYarnDetail[i+1];
            }
            else if(i==SelectedRowIndex)
            {
                oTempCostSheetFabricDetails[i]=oCostSheetYarnDetail[i-1];
            }
            else
            {
                oTempCostSheetFabricDetails[i]=oCostSheetYarnDetail[i];
            }
            oTempCostSheetFabricDetails[i].Sequence=i+1;
        }
        $('#tabCostSheet').data('CostSheetYarnDetails',oTempCostSheetFabricDetails);
        data = oTempCostSheetFabricDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblFabric').datagrid('loadData',data);
        var newSelectedRowIndex=SelectedRowIndex-1;
        $('#tblFabric').datagrid('selectRow',newSelectedRowIndex);
    }
    function YarnDown()
    {
        //debugger;
        var oTempCostSheetFabricDetails =  $('#tblFabric').datagrid('getRows');
        var oCostSheetDetail = $('#tblFabric').datagrid('getSelected');
        if(oCostSheetDetail==null || parseInt(oCostSheetDetail.MaterialID)<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblFabric').datagrid('getRowIndex',oCostSheetDetail);
        if(SelectedRowIndex==(oTempCostSheetFabricDetails.length-1))return;
        var oCostSheetYarnDetail=[];
        oCostSheetYarnDetail=oTempCostSheetFabricDetails;
        oTempCostSheetFabricDetails=[];
        for(var i=0; i<oCostSheetYarnDetail.length; i++)
        {
            if(i==(SelectedRowIndex+1))
            {
                oTempCostSheetFabricDetails[i]=oCostSheetYarnDetail[i-1];
            }
            else if(i==SelectedRowIndex)
            {
                oTempCostSheetFabricDetails[i]=oCostSheetYarnDetail[i+1];
            }
            else
            {
                oTempCostSheetFabricDetails[i]=oCostSheetYarnDetail[i];
            }
            oTempCostSheetFabricDetails[i].Sequence=i+1;
        }
        $('#tabCostSheet').data('CostSheetYarnDetails',oTempCostSheetFabricDetails);
        data = oTempCostSheetFabricDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblFabric').datagrid('loadData',data);
        var newSelectedRowIndex=SelectedRowIndex+1;
        $('#tblFabric').datagrid('selectRow',newSelectedRowIndex);

    }
    function AccessoriesUP()
    {
        //debugger;
        var oTempCostSheetAccessoriesDetails = $('#tblAccessories').datagrid('getRows');
        var oCostSheetDetail = $('#tblAccessories').datagrid('getSelected');
        if(oCostSheetDetail==null || parseInt(oCostSheetDetail.MaterialID)<=0)
        {
            alert("Please select Cost Sheet");
            return;
        }
        var SelectedRowIndex=$('#tblAccessories').datagrid('getRowIndex',oCostSheetDetail);
        if(SelectedRowIndex==0)return;
        var oCostSheetAccessoriesDetails=[];
        oCostSheetAccessoriesDetails= oTempCostSheetAccessoriesDetails;
        oTempCostSheetAccessoriesDetails=[];
        for(var i=0; i<oCostSheetAccessoriesDetails.length; i++)
        {
            if(i==(SelectedRowIndex-1))
            {
                oTempCostSheetAccessoriesDetails[i]=oCostSheetAccessoriesDetails[i+1];
            }
            else if(i==SelectedRowIndex)
            {
                oTempCostSheetAccessoriesDetails[i]=oCostSheetAccessoriesDetails[i-1];
            }
            else
            {
                oTempCostSheetAccessoriesDetails[i]=oCostSheetAccessoriesDetails[i];
            }
            oTempCostSheetAccessoriesDetails[i].Sequence=i+1;
        }
        $('#tabCostSheet').data('CostSheetAccessoriesDetails',oTempCostSheetAccessoriesDetails);
        data = oTempCostSheetAccessoriesDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblAccessories').datagrid('loadData',data);
        var newSelectedRowIndex=SelectedRowIndex-1;
        $('#tblAccessories').datagrid('selectRow',newSelectedRowIndex);

    }
    function AccessoriesDown()
    {
        //debugger;
        var oTempCostSheetAccessoriesDetails = $('#tblAccessories').datagrid('getRows');
        var oCostSheetDetail = $('#tblAccessories').datagrid('getSelected');
        if(oCostSheetDetail==null || parseInt(oCostSheetDetail.MaterialID)<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblAccessories').datagrid('getRowIndex',oCostSheetDetail);
        if(SelectedRowIndex==(oTempCostSheetAccessoriesDetails.length-1))return;
        var oCostSheetAccessoriesDetails=[];
        oCostSheetAccessoriesDetails=oTempCostSheetAccessoriesDetails;
        oTempCostSheetAccessoriesDetails=[];
        for(var i=0; i<oCostSheetAccessoriesDetails.length; i++)
        {
            if(i==(SelectedRowIndex+1))
            {
                oTempCostSheetAccessoriesDetails[i]=oCostSheetAccessoriesDetails[i-1];
            }
            else if(i==SelectedRowIndex)
            {
                oTempCostSheetAccessoriesDetails[i]=oCostSheetAccessoriesDetails[i+1];
            }
            else
            {
                oTempCostSheetAccessoriesDetails[i]=oCostSheetAccessoriesDetails[i];
            }
            oTempCostSheetAccessoriesDetails[i].Sequence=i+1;
        }
        $('#tabCostSheet').data('CostSheetAccessoriesDetails',oTempCostSheetAccessoriesDetails);
        data = oTempCostSheetAccessoriesDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblAccessories').datagrid('loadData',data);
        var newSelectedRowIndex=SelectedRowIndex+1;
        $('#tblAccessories').datagrid('selectRow',newSelectedRowIndex);
    }
    //AddPackage
    function AddPackage()
    {
        //debugger;
        var oCostsheetPackage = {CostSheetPackageID:0, CostSheetID:$scope.CostSheet.CostSheetID,PackageName: "",Price :0,Remark :"",CostSheetPackageDetails:[]};
        var modalObj={
            modalcontroller:'ModalCostSheetPackageCtrl',
            appcontroller:'CostSheetController',
            CostSheetPackage:oCostsheetPackage
        }
        var modalInstance=CostSheetPackageservice.Instance(modalObj);
        modalInstance.result.then(function (result)
        {
            //debugger;
            if(result!=null)
            {
                if(!icsMethod.ICS_IsExist($scope.gridOptionsPacakage.data, 'PackageName', result.PackageName))
                {

                    $scope.gridOptionsPacakage.data.push(result);
                    SummeryCalculation();
                }
            }

        }, function () {
            $log.info('Modal dismissed at: ' + new Date());
        });
    };
    function EditPackage()
    {
        //debugger;
        var oCostsheetPackage = $scope.gridApigridOptionsPacakages.selection.getSelectedRows()[0];
        if(oCostsheetPackage==null|| oCostsheetPackage.PackageName==null)
        {
            alert("Please Select Cost Sheet Package.");
            return;
        }
        var nSelectedIndex = $scope.gridOptionsPacakage.data.indexOf(oCostsheetPackage);
        var modalObj={
            modalcontroller:'ModalCostSheetPackageCtrl',
            appcontroller:'CostSheetController',
            CostSheetPackage:oCostsheetPackage
        }
        var modalInstance=CostSheetPackageservice.Instance(modalObj);
        modalInstance.result.then(function (result)
        {
            //debugger;
            if(result!=null)
            {
                if(!icsMethod.ICS_IsExist($scope.gridOptionsPacakage.data, 'PackageName', result.PackageName))
                {
                    $scope.gridOptionsPacakage.data[index] = result;
                    SummeryCalculation();
                }
            }

        }, function () {
            $log.info('Modal dismissed at: ' + new Date());
        });
    };
    function DeletePackage ()
    {
        var oCostsheetPackage = $scope.gridApigridOptionsPacakages.selection.getSelectedRows()[0];
        if(oCostsheetPackage==null|| oCostsheetPackage.PackageName==null)
        {
            alert("Please Select Cost Sheet Package.");
            return;
        }
        var nSelectedIndex = $scope.gridOptionsPacakage.data.indexOf(oCostsheetPackage);
        if (!confirm("Confirm to Delete?")) return ;
        alert("Successfully Deleted.");
        $scope.gridOptionsPacakage.data.splice(nSelectedIndex, 1);
        SummeryCalculation();
    }
    function RefreshPackage()
    {
        var oCostSheetPackages = $scope.gridOptionsPacakage.data;
        if(oCostSheetPackages.length>0)
        {
            $scope.gridOptionsPacakage.data = $scope.gridOptionsPacakage.data;
            SummeryCalculation();
        }
    }

    function Save()
    {
        //debugger;
        endEditingYarn();
        endEditingAccessories();
        //endEditingCostSheetCM();
        if(!ValidateInput()) return;
        var oCostSheet = CostSheetRefreshObject();
        var sActionName = "Save";
        if(sessionStorage.getItem("CostSheetHeader")=="Cost Sheet Revise")
        {
            sActionName = "AcceptCostSheetRevise";
        }
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/CostSheet/"+sActionName,
            traditional: true,
            data:  JSON.stringify(oCostSheet),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var oCostSheet= jQuery.parseJSON(data);
                if (oCostSheet.ErrorMessage=="" || oCostSheet.ErrorMessage==null)
                {
                    alert("Data Save Successfully!!");
                    var oCostSheets = sessionStorage.getItem("CostSheets");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oCostSheets != null)
                    {
                        oCostSheets = jQuery.parseJSON(oCostSheets);
                    }
                    else {
                        oCostSheets = [];
                    }
                    if (nIndex != -1)
                    {
                        oCostSheets[nIndex] = oCostSheet;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oCostSheets.length);
                        oCostSheets.push(oCostSheet);
                    }
                    sessionStorage.setItem("CostSheets", JSON.stringify(oCostSheets));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else
                {
                    alert(oCostSheet.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });

    }
    function Approve ()
    {
        if(!ValidateInput()) return;
        var oCostSheet=CostSheetRefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/CostSheet/Approve",
            traditional: true,
            data:  JSON.stringify(oCostSheet),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var oCostSheet= jQuery.parseJSON(data);
                if (oCostSheet.ErrorMessage=="" || oCostSheet.ErrorMessage==null)
                {
                    alert("Successfully Approved ");
                    var oCostSheets = sessionStorage.getItem("CostSheets");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oCostSheets != null) {
                        oCostSheets = jQuery.parseJSON(oCostSheets);
                    }
                    else {
                        oCostSheets = [];
                    }
                    if (nIndex != -1) {
                        oCostSheets[nIndex] = oCostSheet;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oCostSheets.length);
                        oCostSheets.push(oCostSheet);
                    }
                    sessionStorage.setItem("CostSheets", JSON.stringify(oCostSheets))
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else
                {
                    alert(oCostSheet.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }
    function ValidateInput ()
    {
        //debugger;
        var oCostSheet =  $('#tabCostSheet').data('CostSheet');
        if(parseInt(oCostSheet.TechnicalSheetID) <=0) { alert("Please Pick Style!"); return false; }
        var nApproxQty = parseFloat(icsRemoveComma($("#txtApproxQty").val()));
        if(parseFloat(nApproxQty)<=0) { alert("Approximat Quantity Should be Greater than 0"); return false; }

        if(parseInt($("#cboCountUnit").val()) ==0) { alert("Please select Unit of Approximat Qty"); return false; }
        if(parseInt($("#cboCostCurrency").val())==0) { alert("Please select Currency"); return false; }
        if(parseInt(oCostSheet.MerchandiserID)<=0) { alert("Please Pick Merchandiser"); return false; }
        //if(parseFloat($scope.CostSheet.ProductionCostPerDozen) <=0) { alert("Print/Emb/Others Cost Should be Greater than 0"); return false; }

        var oFabricDetails = $('#tblFabric').datagrid('getRows');
        if(oFabricDetails.length <=0){alert("Please Add at least single Yarn");  return false;}
        for(var i = 0;i<oFabricDetails.length;i++)
        {
            if(parseFloat(oFabricDetails[i].MaterialMarketPrice)<=0)
            {
                alert("Product Price Should be Greater than 0 for "+oFabricDetails[i].ProductName);
                $('#tblFabric').focus();
                return false;
            }
        }

        var oAccessoriesDetails =$('#tblAccessories').datagrid('getRows');
        if(oAccessoriesDetails.length <=0){alert("Please Add at least single Accessories");  return false;}
        for(var i = 0;i<oAccessoriesDetails.length;i++)
        {
            if(parseFloat(oAccessoriesDetails[i].EstimatedCost)<=0)
            {
                alert("Product Estimated Cost Should be Greater than 0 for "+oAccessoriesDetails[i].ProductName);
                $('#tblAccessories').focus();
                return false;
            }
        }
        var oCostSheetCMs = $('#tblCostSheetCM').datagrid('getRows');
        if(oCostSheetCMs.length>0)
        {
            for(var i=0;i<oCostSheetCMs.length;i++)
            {
                if(parseFloat(oCostSheetCMs[i].CMPerDozen)<=0)
                {
                    alert("CM Should be Greater than 0 in CM Part Calculation.");
                    $('#tblCostSheetCM').focus();
                    return false;
                }
            }
        }

        return true;
    }
    function CostSheetRefreshObject ()
    {
        //debugger;
        //var oCostSheet =  $('#tabCostSheet').data('CostSheet');

        var oCostSheet = {
            CostSheetID: $('#tabCostSheet').data('CostSheet').CostSheetID,
            CostSheetTypeInInt:sessionStorage.getItem("CostSheetType"),
            CostSheetType:sessionStorage.getItem("CostSheetType"),
            BUID:sessionStorage.getItem('BUID'),
            TechnicalSheetID: $('#tabCostSheet').data('CostSheet').TechnicalSheetID,
            MerchandiserID: $('#tabCostSheet').data('CostSheet').MerchandiserID,
            StatusInInt:$('#tabCostSheet').data('CostSheet').StatusInInt,
            CostingDate :$('#txtCostingDateInString').datebox('getValue'),
            ShipmentDate :$('#txtShipmentDateInString').datebox('getValue'),
            ApproxQty:parseFloat(icsRemoveComma($("#txtApproxQty").val())),
            UnitID:parseInt($("#cboCountUnit").val()),
            GG:$("#txtGG").val(),
            FabricDescription:$("#txtFabricDescription").val(),
            StyleDescription:$("#txtStyleDescription").val(),
            CurrencyID:parseInt($("#cboCostCurrency").val()),
          
            FabricUnitPrice:ICS_TotalCalculation($('#tblFabric').datagrid('getRows'),'EstimatedCost'),
            FabricCostPerDozen:parseFloat(icsRemoveComma($("#txtFabricCostPerDozen").val())),
            AccessoriesCostPerDozen:parseFloat(icsRemoveComma($("#txtAccessoriesCostPerDozen").val())),
            PrintPricePerPcs:parseFloat(icsRemoveComma($("#txtPrintCostPerPcs").val())),
            EmbrodaryPricePerPcs:parseFloat(icsRemoveComma($("#txtEmbrodaryCostPerPcs").val())),
            TestPricePerPcs:parseFloat(icsRemoveComma($("#txtTestCostPerPcs").val())),
            OthersPricePerPcs:parseFloat(icsRemoveComma($("#txtOthersCostPerPcs").val())),
            CourierPricePerPcs:parseFloat(icsRemoveComma($("#txtCourierCostPerPcs").val())),
            OthersCaption: $('#txtOthersCaption').val(),
            CourierCaption: $('#txtCourierCaption').val(),
            CMCost:parseFloat(icsRemoveComma($("#txtCMCostPerDozen").val())),
            BuyingCommission:parseFloat(icsRemoveComma($("#txtBuyingCommission").val())),
            BankingCost:parseFloat(icsRemoveComma($("#txtBankingCost").val())),
            FOBPricePerPcs:parseFloat(icsRemoveComma($("#txtFOBPricePerPcs").val())),
            OfferPricePerPcs:parseFloat(icsRemoveComma($("#txtOfferPricePerPcs").val())),
            ConfirmPricePerPcs:parseFloat(icsRemoveComma($("#txtConfirmPricePerPcs").val())),

            FabricCostPerPcs	:	parseFloat(icsRemoveComma($("#txtFabricCostPerPcs").val())),
            AccessoriesCostPerPcs	:	parseFloat(icsRemoveComma($("#txtAccessoriesCostPerPcs").val())),
            CMCostPerPcs	:	parseFloat(icsRemoveComma($("#txtCMCostPerPcs").val())),
            FOBPricePerDozen	:	parseFloat(icsRemoveComma($("#txtFOBPricePerDozen").val())),
            OfferPricePerDozen	:	parseFloat(icsRemoveComma($("#txtOfferPricePerDozen").val())),
            ConfirmPricePerDozen	:	parseFloat(icsRemoveComma($("#txtConfirmPricePerDozen").val())),
            PrintPricePerDozen	:	parseFloat(icsRemoveComma($("#txtPrintPricePerDozen").val())),
            EmbrodaryPricePerDozen	:	parseFloat(icsRemoveComma($("#txtEmbrodaryPricePerDozen").val())),
            TestPricePerDozen	:	parseFloat(icsRemoveComma($("#txtTestPricePerDozen").val())),
            OthersPricePerDozen	:	parseFloat(icsRemoveComma($("#txtOthersPricePerDozen").val())),
            CourierPricePerDozen	:	parseFloat(icsRemoveComma($("#txtCourierPricePerDozen").val())),


            CostSheetYarnDetails:$('#tblFabric').datagrid('getRows'),
            CostSheetAccessoriesDetails:$('#tblAccessories').datagrid('getRows'),
            CostSheetCMs:$('#tblCostSheetCM').datagrid('getRows'),
            CostSheetPackages: $('#tblCostSheetPackage').datagrid('getRows')

        };

        return oCostSheet;
    }


    $('#txtPrintPricePerDozen').keydown(function (e)
    {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//enter of tab
        {
            $('#txtEmbrodaryPricePerDozen').focus();return;
        }
        if (code === 9)//enter of tab
        {
            $('#txtPrintCostPerPcs').focus();return;
        }
    });
    $('#txtEmbrodaryPricePerDozen').keydown(function (e)
    {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//enter of tab
        {
            $('#txtTestPricePerDozen').focus();return;
        }
        if (code === 9)//enter of tab
        {
            $('#txtEmbrodaryCostPerPcs').focus();return;
        }
    });
    $('#txtTestPricePerDozen').keydown(function (e)
    {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//enter of tab
        {
            $('#txtCourierPricePerDozen').focus();return;
        }
        if (code === 9)//enter of tab
        {
            $('#txtTestCostPerPcs').focus();return;
        }
    });
    $('#txtCourierPricePerDozen').keydown(function (e)
    {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//enter of tab
        {
            $('#txtOthersPricePerDozen').focus();return;
        }
        if (code === 9)//enter of tab
        {
            $('#txtCourierCostPerPcs').focus();return;
        }
    });
    $('#txtOthersPricePerDozen').keydown(function (e)
    {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//enter of tab
        {
            $('#txtCMCostPerDozen').focus();return;
        }
        if (code === 9)//enter of tab
        {
            $('#txtOthersCostPerPcs').focus();return;
        }
    });

    $('#txtCMCostPerDozen').keyup(function (e)
    {
        RefreshCMFooter(false);
    });

    $('#txtCMCostPerDozen').keydown(function (e)
    {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//enter of tab
        {
            $('#txtBuyingCommission').focus();return;
        }
        if (code === 9)//enter of tab
        {
            $('#txtCMCostPerPcs').focus();return;
        }
    });
    $('#txtBuyingCommission').keydown(function (e)
    {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//enter of tab
        {
            $('#txtBankingCost').focus();return;
        }
        if (code === 9)//enter of tab
        {
            $('#txtBuyingCommission').focus();return;
        }
    });
    $('#txtBankingCost').keydown(function (e)
    {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//enter of tab
        {
            $('#txtOfferPricePerDozen').focus();return;
        }
        if (code === 9)//enter of tab
        {
            $('#txtFOBPricePerPcs').focus();return;
        }
    });
    $('#txtOfferPricePerDozen,#txtConfirmPricePerDozen').keydown(function (e)
    {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//enter of tab
        {
            $('#txtConfirmPricePerDozen').focus();return;
        }
        if (code === 9)//enter of tab
        {
            $('#txtOfferPricePerPcs').focus();return;
        }
    });

    function Close()
    {
        if(sessionStorage.getItem("BackLink")==null || sessionStorage.getItem("BackLink")=="")
        {
            window.close();
        }else{
            window.location.href = sessionStorage.getItem("BackLink");
        }
    };

</script>
