<html>
<head>
    @{
        ViewBag.Title = "Export PI";
    }
</head>
<body>
    @model ESimSol.BusinessObjects.ExportPI
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div id="winChangeColor" class="easyui-window" title="Cahange Color Size" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <legend style="font-weight:bold">Update Info : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:125px; text-align:right">
                            Color :
                        </td>
                        <td style="width:250px">
                            <input type="text" style="width:190px;" id="txtChangeColorName" /><input type="button" id="btnChangColorPick" value="Pick" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Product :
                        </td>
                        <td style="width:250px">
                            <input type="text" style="width:190px;" id="txtChangeProductName" /><input type="button" id="btnChangProductPick" value="Pick" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <fieldset style="width:95%;height:8%; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:7%;text-align:right;">
                        <a id="btnAddUpdteInfo" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="UpdateInfo()">Update</a>
                        <a id="btnCloseUpdaeInfo" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseUpdateInfo()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
    <div id="winTermsAndCondition" style="width:70%; text-align:center;" class="easyui-window winstyle" title="Terms And Condition Picker" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width:100%; text-align:left;">
            <input type="text" id="txtTermsAndCondition" placeholder="Search By Terms And Condition" style="width:350px; text-align:left;" />&nbsp;&nbsp;&nbsp;
            <input type="text" id="txtDocFor" placeholder="Search By Terms For" style="width:250px;text-align:left;" />&nbsp;&nbsp;&nbsp;
            <input type="text" id="txtNoteTAndC" placeholder="Search By Remarks" style="width:250px;text-align:left;" />
            <table id="tblTermsAndCondition" title="" class="easyui-datagrid" style="height:300px; " fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                <thead>
                    <tr>
                        <th data-options="field:'Selected',checkbox:true"></th>
                        <th field="Clause" width="400">Terms And Condition</th>
                        <th field="ClauseTypeInString" width="120">Clause Type</th>
                        <th field="DocForInString" width="150">Terms for</th>
                        <th field="Note" width="170">Remarks</th>
                    </tr>
                </thead>
            </table>
        </div>

        <fieldset class="actionfieldsetstyle">
            <legend>Actions : </legend>
            <a id="btnOkPITermsAndCondition" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
            <a id="btnCloseTermsAndCondition" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
        </fieldset>
    </div>

    <div id="winContactPersonnel" class="easyui-window" title="Add Contact Personeel" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <legend style="font-weight:bold"> Contact Personnel Informations : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:125px; text-align:right">
                            Name :
                        </td>

                        <td style="width:200px">
                            <input type="text" style="width: 200px;" id="txtName" />
                        </td>
                        <td style="width:50px"> </td>
                        <td style="width:125px; text-align:right">
                            Address :
                        </td>
                        <td style="width:300px">
                            <input type="text" style="width: 300px;" id="txtAddress" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Phone :
                        </td>

                        <td style="width:200px">
                            <input type="text" style="width: 200px;" id="txtPhone" />
                        </td>
                        <td style="width:50px"> </td>
                        <td style="width:125px; text-align:right">
                            Email :
                        </td>
                        <td style="width:300px">
                            <input type="text" style="width: 300px;" id="txtEmail" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Note :
                        </td>
                        <td colspan="4">
                            <input type="text" style="width: 690px;" id="txtNote" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <fieldset style="width:97%;height:8%; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:7%;text-align:right;">
                        <a id="btnAddContactPersonnel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="AddContactPersonnel()">Save</a>
                        <a id="btnCloseContactPersonnel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseContactPersonnel()">Close</a>
                    </td>

                </tr>
            </table>
        </fieldset>
    </div>
    <div class="menuMainCollectionTable">
        <div class="easyui-panel" title="" style="font-family:Tahoma; text-align:center; height:89%;">
            <div id="tabExportPITabs" class="easyui-tabs" style="width:100%; height:497px;">
                <div title="Export PI" style=" width:100%">
                    <fieldset>
                        <legend style="font-weight:bold"> PI Information : </legend>
                        <table border="0" cellspacing="1" cellpadding="1" class="CaptionStyle" style="width:100%;text-align:left;">
                            <tr>
                                <td style="width:10%; text-align:right">
                                    PI No :
                                </td>
                                <td style="width:40%">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:42%">@Html.TextBoxFor(model => model.PINo, new { style = "width:96%;", id = "txtPINo", placeholder = "Auto Generated" })</td>
                                            <td style="width:20%;text-align:right;">Issue Date:</td>
                                            <td style="width:38%"><input type="text" style="width:100%;" id="txtIssueDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:15%; text-align:right">
                                    Validate Date :
                                </td>
                                <td style="width:35%">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:33%"><input type="text" style="width:100%;" id="txtValidateDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                            <td style="width:34%;text-align:right;">PI Type : </td>
                                            <td style="width:33%;text-align:left;">
                                                <select id="cboPIType" style="width:100%;" class="changePIType"><option value="0">Open</option><option value="1">Order Sheet</option><option value="2">Master PI</option></select>
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:10%; text-align:right">
                                    For Account Of :
                                </td>
                                <td style="width:40%;text-align:left">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:40%">@Html.TextBoxFor(model => model.ContractorName, new { style = "width:100%;", id = "txtContractorName", placeholder = "Type & Press Enter" })</td>
                                            <td style="width:8%;text-align:right;"><a id="btnPickAccountOfPI" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true"></a></td>
                                            <td style="width:14%;text-align:right;">C.Person: </td>
                                            <td style="width:29%"><select id="cboContractorContactPerson" style=" width:100%;"></select></td>
                                            <td style="width:9%;text-align:right;"><a id="btnAddContractorContactPerson" href="javascript:void(0)" class="easyui-linkbutton" onclick="AddContactPerson(false)" iconcls="icon-pick" plain="true">N</a></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:15%; text-align:right">
                                    Order Sheet :
                                </td>
                                <td style="width:35%">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:80%; text-align:left">
                                                @Html.TextBoxFor(model => model.OrderSheetNo, new { style = "width:98%;", id = "txtOrderSheet", placeholder = "Press enter with Order Sheet No" })
                                            </td>
                                            <td style="width:20%; text-align:right">
                                                <input type="button" id="btnPickOS" value="P" style="width:45%" />
                                                <input type="button" id="btnClearOrderSheet" value="C" style="width:45%" />
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:10%; text-align:right">
                                    Buyer Name :
                                </td>
                                <td style="width:40%;text-align:left">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:40%">@Html.TextBoxFor(model => model.BuyerName, new { style = "width:100%;", id = "txtBuyerName", placeholder = "Type & Press Enter" }) </td>
                                            <td style="width:8%;text-align:right;"><a id="btnPickBuyerPI" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true"></a></td>
                                            <td style="width:14%;text-align:right;">C.Person: </td>
                                            <td style="width:29%"><select id="cboBuyerContactPerson" style=" width:100%;"></select></td>
                                            <td style="width:9%;text-align:right;"><a id="btnAddBuyerContactPerson" href="javascript:void(0)" class="easyui-linkbutton" onclick="AddContactPerson(true)" iconcls="icon-pick" plain="true">N</a></td>

                                        </tr>
                                    </table>
                                </td>

                                <td style="width:15%; text-align:right">
                                    MKT Person :
                                </td>
                                <td style="width:35%">
                                    <select id="cboMktPersons" style="width:100%;"></select>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:10%; text-align:right">
                                    Delivery To :
                                </td>
                                <td style="width:40%;text-align:left">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:92%">@Html.TextBoxFor(model => model.DeliveryToName, new { style = "width:100%;", id = "txtDeliveryToName", placeholder = "Type & Press Enter" }) </td>
                                            <td style="width:8%;text-align:right;"><a id="btnPickDeliveryToPI" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true"></a></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:15%; text-align:right">
                                    Currency :
                                </td>
                                <td style="width:35%">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:33%"><select id="cboCurrency" style=" width:100%;" class="ChangeCurrency"></select></td>
                                            <td style="width:34%;text-align:right;">Rate On : </td>
                                            <td style="width:33%"><input type="number" style="width:96%;text-align:right;" id="txtRateUnit" /></td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>

                            <tr>
                                <td style="width:10%; text-align:right">
                                    PI Bank :
                                </td>
                                <td style="width:40%;text-align:left">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:33%"><select style="width:100%;" id="cboBank" /></td>
                                            <td style="width:34%;text-align:right;">Bank Account : </td>
                                            <td style="width:33%"><select style="width:100%;" id="cboBankAccount" /></td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:15%; text-align:right">
                                    Note :
                                </td>
                                <td style="width:35%">
                                    @Html.TextBoxFor(model => model.Note, new { style = "width:98%;", id = "txtNote" })
                                </td>

                            </tr>
                        </table>
                    </fieldset>
                    <table id="tblExportPIDetail" title="Products/Item Description" class="easyui-datagrid" style="width:100%;height:272px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarPIDetail" data-options="onClickRow: onClickRow">
                        <thead data-options="frozen:true">
                            <tr>
                                <th field="ProductName" width="13%" align="left">Product</th>
                                <th field="SizeName" width="6%" align="left">Size</th>
                                <th field="ColorName" width="8%" align="left">Color</th>
                                <th field="MUName" width="5%" align="left">Unit</th>
                                <th width="7%" align="right" data-options="field:'Qty',editor:{type:'numberbox',options:{precision:2}}">Qty</th>
                                <th width="7%" align="right" data-options="field:'UnitPrice',editor:{type:'numberbox',options:{precision:4}}">Rate</th>
                                <th field="AmountSt" width="10%" align="right">Amount</th>
                                <th field="RecipeName" width="10%" align="right">Recipe</th>
                            </tr>
                        </thead>
                        <thead>
                            <tr>
                                <th data-options="field:'ProductDescription',width:100,height:60, align:'Left',editor:{type:'text'}" align="Left">Product Description</th>
                                <th data-options="field:'StyleNo',width:100,height:60 ,align:'Left',editor:{type:'text'}" align="Left">Style No</th>
                                <th data-options="field:'BuyerReference',width:100,height:60 ,align:'Left',editor:{type:'text'}" align="Left">B.Ref</th>
                                <th data-options="field:'ColorInfo',width:100,height:60 ,align:'Left',editor:{type:'text'}" align="Left">ColorInfo</th>
                                <th field="Measurement" width="10%" align="left">Measurement</th>
                                <th width="7%" align="right" data-options="field:'ColorQty',editor:{type:'numberbox',options:{precision:0}}">Color Qty</th>
                                <th field="ModelReferenceName" width="10%" align="left">Model Ref</th>
                            </tr>
                        </thead>
                    </table>
                    <div id="toolbarPIDetail">
                        <table border="0" cellpadding="0" cellspacing="1" style="width:100%;">
                            <tr>
                                <td style="width:20%"><input type="text" placeholder="Type Product & Press Enter" id="txtProductName" style="width:78%" /> <a id="btnProductPiker" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true"></a></td>
                                <td style="width:20%;"><select id="cboUnit" style="width:100%;"></select></td>
                                <td style="width:20%"><input type="text" placeholder="Product Description" id="txtProductDescription" style="width:100%" /></td>
                                <td style="width:20%;text-align:right;"><input type="text" placeholder="Type Buyer Reference" id="txtBuyerRef" style="width:86%"/></td>
                                <td style="width:20%;text-align:right;">
                                    <label id="lblRecipe"> Recipe: </label><select id="cboRecipe" style="width:77%"><option>----select recipe----</option></select>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:20%"><input type="text" placeholder="Type Color & Press Enter" id="txtColorName" style="width:50%" /><input type="button" style="width:7%; text-align:left;" id="btnColorPick" value="P" />&nbsp;<label id="lblColorQtyCaption">C.Qty:</label><input type="text" id="txtColorQty" style="width:15%" /> </td>
                                <td style="width:20%"><input type="text" placeholder="Style Description" id="txtStyleDescription" style="width:100%" /></td>
                                <td style="width:20%"><input type="text" placeholder="Measurement" id="txtMeasurement" style="width:100%" /></td>
                                <td style="width:20%;text-align:right;"><input type="text" id="txtQty" placeholder="Type Qty" style="width:42%" />&nbsp;<input type="text" id="txtUnitPrice" placeholder="Type Price" style="width:42%" /></td>
                                <td style="width:20%;text-align:right;"><a id="btnAddDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a><a id="btnPickOrderSheetDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true">Pick</a> <a id="btnRemoveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a><a id="btnUpdateColor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true"></a><a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a></td>
                            </tr>
                        </table>
                    </div>

                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%;">
                        <tr>
                            <td style="width:28%;  text-align:right;font-weight:bold;">Total:</td>
                            <td style="width:10%;  text-align:right;font-weight:bold;"><label id="lblTotalQty">0</label> </td>
                            <td style="width:16%; text-align:right; font-weight:bold;"><label id="lblCurrencySymbol"></label>&nbsp;<label id="lblTotalAmount">0.00</label> </td>
                            <td style="width:41%;  text-align:right;font-weight:bold;"> </td>
                        </tr>
                    </table>

                </div>
                <div id="divSizerBreakDown" title="Sizer Break Down">
                    <div style="margin-left:2px; height:100%">
                        <table id="tblPISizerBreakDown" title="Sizer Break Down" class="easyui-datagrid" style="width:100%;height:430px;"
                               data-options="singleSelect: true, fitColumns:false, rownumbers:true,pagination:false,autoRowHeight:false,toolbar:'#toolbar',footer:'#footerbar', showFooter: true,onClickRow: onClickRowSizer">
                            <thead>
                                <tr>
                                    <th field="ProductName" width="15%" align="left">Product</th>
                                    <th field="ColorName" width="10%" align="left">Color</th>
                                    <th field="SizeName" width="6%" align="left">Size</th>
                                    <th data-options="field:'PantonNo',width:140,height:60 ,align:'Left',editor:{type:'text'}">Panton No</th>
                                    <th data-options="field:'Model',width:130,height:60 ,align:'Left',editor:{type:'text'}">Model</th>
                                    <th data-options="field:'StyleNo',width:150,height:60 ,align:'Left',editor:{type:'text'}">Style No</th>
                                    <th data-options="field:'Remarks',width:150,height:60 ,align:'Left',editor:{type:'text'}">Remarks</th>
                                    <th width="10%" align="right" data-options="field:'Quantity',editor:{type:'numberbox',options:{precision:2}}">Qty</th>
                                </tr>
                            </thead>
                        </table>
                        <div id="toolbar">
                            <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px;width:100%">
                                <tr style="height:20px">
                                    <td style="width:10%"><select id="cboSizerProduct" style="width:100%"></select></td>
                                    <td style="width:10%"><input type="text" id="txtColorRange" placeholder="Type Color & Press Enter" style=" width:100%;" /></td>
                                    <td style="width:2%"><input type="button" id="btnColorRange" style="width:100%;" value="Pick" /></td>
                                    <td style="width:10%"><input type="text" id="txtSizeRange" placeholder="Type Size & Press Enter" style=" width:100%;" /></td>
                                    <td style="width:2%"><input type="button" id="btnSizeRange" style="width:100%;" value="Pick" /></td>
                                    <td style="width:8%"><input type="text" id="txtPantonNo" placeholder="Panton No" style=" width:90%;" /></td>
                                    <td style="width:8%">Qty :<input type="text" id="txtSizeQty" style=" width:70%;" /></td>
                                    <td style="width:3%"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshWorkOrderDetail()">Refresh</a></td>
                                    <td style="width:2%"><a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="Add()">Add</a></td>
                                    <td style="width:2%"><a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="Delete()">Delete</a> </td>
                                </tr>
                            </table>
                        </div>
                        <table border="0" cellpadding="0" cellspacing="0" width="100%">
                            <tr>
                                <td style="width:75%; text-align:right;"><b>Total:</b></td>
                                <td style="width:22%; text-align:right;"><b><label id="lblTotalSizeQty">0</label></b> </td>
                                <td style="width:3%; text-align:right;"></td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div title="Terms & Condition" style="padding:2px">
                    <fieldset id="fsTemsCondition">
                        <legend style="font-weight:bold"> Terms & Conditions : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" class="CaptionStyle" style="width:100%;">
                            <tr>
                                <td style="width:15%; text-align:right">Libor Rate</td>
                                <td style="width:18%"><select id="cboLiborRate" style="width:100%" /></td>
                                <td style="width:15%; text-align:right">LC Terms</td>
                                <td style="width:18%"><select style="width:100%;" id="cboLCTerm" /></td>
                                <td style="width:15%; text-align:right">App LC Open Date</td>
                                <td style="width:18%"><input type="text" style="width:100%;" id="txtLCOpenDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                            </tr>
                            <tr>
                                <td style="width:15%; text-align:right">Bank FDD</td>
                                <td style="width:18%"><select id="cboBankFDD" style="width:100%" /></td>
                                <td style="width:15%; text-align:right">Over Due Rate(%)</td>
                                <td style="width:18%">@Html.TextBoxFor(model => model.OverdueRateSt, new { style = "width:100%;", id = "txtOverDueRate" })</td>
                                <td style="width:15%; text-align:right">App Delivery Date</td>
                                <td style="width:18%"><input type="text" style="width:100%;" id="txtDeliveryDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                            </tr>
                            <tr>
                                <td style="width:15%; text-align:right">Shipment Term</td>
                                <td style="width:18%"><select id="cboShipmentTermFDD" style="width:100%" /></td>
                                <td style="width:15%; text-align:right"></td>
                                <td style="width:18%"></td>
                                <td style="width:15%; text-align:right"></td>
                                <td style="width:18%"></td>
                            </tr>
                        </table>
                    </fieldset>
                    <table id="tblPITandCClauses" title="Commercial Terms and Condition" class="easyui-datagrid" style="width:100%; height:340px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#TCtoolbar" data-options="singleSelect: true, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false, onClickRow: onClickRowTC">
                        <thead>
                            <tr>
                                <th field="TermsAndCondition" width="850" align="left" data-options="field:'TermsAndCondition',editor:{type:'text',options:{precision:0}}"> Terms & Condition </th>
                            </tr>
                        </thead>
                    </table>
                    <div id="TCtoolbar" style=" height:25px;">
                        <a id="btnAddTermsAndConditon" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true">Pick Term And Condition</a>
                        <a id="btnRemoveTermsAndCondition" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                        <a id="btnRefreshTermsAndCondition" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                    </div>
                </div>
                <div id="divPIPreview" title="PI Preview" style="padding:2px; margin-top:3px">
                    <fieldset>
                        <table border="0" cellspacing="2" cellpadding="2" style="width:100%">
                            <tr>
                                <td style="width:100%; text-align:center">
                                    <input type="text" style="width:100%;" id="txtSetupNote" readonly="readonly" />
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                    <fieldset>
                        <table border="0" cellspacing="2" cellpadding="2" style="width:100%">
                            <tr>
                                <td style="width:100%; text-align:center">
                                    <input type="text" style="width:100%;" id="txtPreface" readonly="readonly" />
                                </td>

                            </tr>
                        </table>
                    </fieldset>
                    <fieldset>
                        <table id="tblShipment" border="0" cellspacing="2" cellpadding="2" class="CaptionStyle" style="width:100%">
                            <tr>
                                <td style="width:15%; text-align:right">
                                    Part Shipment
                                </td>
                                <td style="width:30%; text-align:right">
                                    <input type="text" style="width:100%;" id="txtPartShipment" />
                                </td>
                                <td style="width:10%; text-align:right"></td>
                                <td style="width:15%; text-align:right">
                                    Shipment By
                                </td>
                                <td style="width:30%">
                                    <input type="text" style="width:100%;" id="txtShipmentBy" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width:15%; text-align:right">
                                    Place Of Shipment
                                </td>
                                <td style="width:30%">
                                    <input type="text" style="width:100%;" id="txtPlaceofShipment" />
                                </td>
                                <td style="width:10%; text-align:right"></td>
                                <td style="width:15%; text-align:right">
                                    Place Of Delivery
                                </td>
                                <td style="width:30%">
                                    <input type="text" style="width:100%;" id="txtPlaceofDelivery" />
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                    <fieldset>
                        <table border="0" cellspacing="2" cellpadding="2" style="width:100%">
                            <tr>
                                <td style="width:48%; text-align:center">
                                    <input type="text" style="width:100%;" id="txtAcceptanceBy" />
                                </td>
                                <td style="width:4%"></td>
                                <td style="width:48%; text-align:center">
                                    <input type="text" style="width:100%;" id="txtFor" />
                                </td>

                            </tr>
                        </table>
                    </fieldset>
                </div>
            </div>
        </div>
        <fieldset style="height:8%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:60%; text-align:right"></td>
                    <td style="width:18%;text-align:right;">
                        <label id="lblCreateReviseNo">Create New version?</label>  <input id="chkIsCreateReviseNo" type="checkbox" checked="checked" />
                    </td>
                    <td style="width:20%;text-align:right;">
                        <a id="btnPrintPI" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print PI</a>
                        <a id="btnAcceptRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Accept Revise</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-closed" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">
    var _sBaseAddress = "";
    var _oExportPI=null;
    var _oProduct = null;
    var _oColorCategory = null;
    var _oSizeCategory =  null;
    var _bIsBuyer= true;
    var _nQty = 0;
    var _nUnitPrice = 0;
    var _nQtyTwo = 0;
    var _nUnitPriceTwo = 0;
    var _sDescription = "";
    var _oExportPIDetails = [];
    var _oExportPITandCClauses = [];
    var _nActivePIPrintSetupID = 0;
    var _oOrderSheets = [];
    var _oOrderSheetDetails = [];
    var _oColorCategoryForBreakDown = null;
    var _oSizeCategoryForBreakDown = null;
    var _oCurrencyList = [];
    var _oPISizerBreakDowns=[];
    var _oRecipies=[];
    $(document).ready(function () {
        // debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oExportPI =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oPISizerBreakDowns=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.PISizerBreakDowns));
        _oExportPIDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ExportPIDetails));
        var oPIPaymentTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PIPaymentTypes));
        var oBankBranchs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BankBranchs));
        _oCurrencyList = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oLCTerms = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LCTerms));
        var oLIBORRates = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LIBORRates));
        var oBankFDDs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BankFDDs));
        var oMktPersons = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.MktPersons));
        var oShipmentTerms = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ShipmentTerms));
        var oDepthOfShades = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DepthOfShades));
        _oExportPITandCClauses = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ExportPITandCClauses));
        _oRecipies = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Recipes));

        debugger;
        $('#txtQty,#txtSizeQty').icsCurrencyBox(null, null,2);
        $('#txtUnitPrice').icsCurrencyBox(null, null,4);
        $('#txtColorQty').icsNumberField({precision:0});
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent,#btnPrintPI,#btnPickOrderSheetDetail").hide();
        $('#txtRateUnit').val(_oExportPI.RateUnit);
        RefreshPIPrintSetup();
        $('#txtIssueDate').datebox('setValue',icsdateformat(new Date()));
        $('#txtValidateDate').datebox('setValue',_oExportPI.ValidityDateInString);
        $('#txtLCOpenDate').datebox('setValue',_oExportPI.LCOpenDateInString);
        $('#txtDeliveryDate').datebox('setValue',_oExportPI.DeliveryDateInString);
        $('#tabExportPITabs').tabs({ onSelect: function () {TabClick();} });
        //Combo Load
        $("#cboMktPersons").icsLoadCombo({List: oMktPersons,OptionValue: "MarketingAccountID",DisplayText: "Name"});
        $("#cboPaymentType").icsLoadCombo({List: oPIPaymentTypes,OptionValue: "id",DisplayText: "Value"});
        $("#cboBank").icsLoadCombo({List: oBankBranchs,OptionValue: "BankBranchID",DisplayText: "BankBranchName"});
        $("#cboCurrency").icsLoadCombo({List: _oCurrencyList,OptionValue: "CurrencyID",DisplayText: "CurrencyName"});
        $("#cboLCTerm").icsLoadCombo({List: oLCTerms,OptionValue: "LCTermID",DisplayText: "NameDaysInString"});
        $("#cboLiborRate").icsLoadCombo({List: oLIBORRates,OptionValue: "id",DisplayText: "Value",InitialValue: "Customize"});
        $("#cboBankFDD").icsLoadCombo({List: oBankFDDs,OptionValue: "id",DisplayText: "Value",InitialValue: "Customize"});
        $("#cboShipmentTermFDD").icsLoadCombo({List: oShipmentTerms,OptionValue: "Value",DisplayText: "Text",InitialValue: "Customize"});
        $("#cboRecipe").icsLoadCombo({List: _oRecipies,OptionValue: "RecipeID",DisplayText: "RecipeName"});

        $("#cboShipmentTermFDD option[value='0']").remove();
        sessionStorage.setItem("SizerProducts",null);//reset
        if(parseInt(_oExportPI.ExportPIID)>0)
        {
            RefreshControl();
        }
        $('#tblOrderSheets').datagrid({onSelect: function(rowIndex, rowData){ RowSelect(rowData);}});
        ResetOrderSheet();
    });
    //Color Size Break Down Start

    function Add()
    {
        //debugger;
        if(!ValidateInputForColorSizeEntry()) return;
        var oPISizerBreakDown = {
            PISizerBreakDownID:0,
            ExportPIID:_oExportPI.ExportPIID,
            ProductID :$("#cboSizerProduct").val(),
            ColorID :_oColorCategoryForBreakDown.ColorCategoryID,
            Model: "",
            SizeID :_oSizeCategoryForBreakDown.SizeCategoryID,
            StyleNo : "",
            Quantity : icsRemoveComma($('#txtSizeQty').val()),
            ColorName :_oColorCategoryForBreakDown.ColorName,
            SizeName :_oSizeCategoryForBreakDown.SizeCategoryName,
            ProductName :$("#cboSizerProduct option:selected").text(),
            PantonNo:$("#txtPantonNo").val(),
            Remarks :""
        };
        $('#tblPISizerBreakDown').datagrid('appendRow',oPISizerBreakDown);
        SetSizerTotal();
        _oColorCategoryForBreakDown = null;_oSizeCategoryForBreakDown=null;
        $("#txtColorRange,#txtSizeRange,#txtPantonNo").val('');
        $("#txtColorRange,#txtSizeRange").removeClass("fontColorOfPickItem");
        $('#txtSizeQty').val(0);$("#cboSizerProduct").focus();
    }

    function RefreshList(oColorSizeRatios)
    {
        data= oColorSizeRatios;
        data={"total":""+data.length+"","rows":data};
        $('#tblPISizerBreakDown').datagrid('loadData',data);
    }


    var editIndexSizer = undefined;
    function endEditingSizer(){
        if (editIndexSizer == undefined){return true}
        if ($('#tblPISizerBreakDown').datagrid('validateRow', editIndexSizer))
        {
            $('#tblPISizerBreakDown').datagrid('endEdit', editIndexSizer);
            $('#tblPISizerBreakDown').datagrid('selectRow',editIndexSizer);
            var oPISizerBreakDown=$('#tblPISizerBreakDown').datagrid('getSelected');
            $('#tblPISizerBreakDown').datagrid('updateRow',{index: editIndexSizer,	row: oPISizerBreakDown});
            SetSizerTotal();
            editIndexSizer = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRowSizer(index){
        if (editIndexSizer != index){
            if (endEditingSizer())
            {
                $('#tblPISizerBreakDown').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndexSizer = index;
            }
            else
            {
                $('#tblPISizerBreakDown').datagrid('selectRow', editIndexSizer);
            }
        }
    }

    function Delete()
    {
        debugger;
        var oPISizerBreakDown= $('#tblPISizerBreakDown').datagrid('getSelected');
        if(oPISizerBreakDown==null)
        {
            alert("Please select a Item form List");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblPISizerBreakDown').datagrid('getRowIndex',oPISizerBreakDown);
        $('#tblPISizerBreakDown').datagrid('deleteRow',SelectedRowIndex);
        SetSizerTotal();
    }
    //Color Range
    $("#txtColorRange").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtColorRange').val()=="" || $('#txtColorRange').val()==null)
            {
                alert("Type Some Color Name");
                $('#txtColorRange').focus();
                return;
            }
            GetsColorRanges($.trim($('#txtColorRange').val()));
        }else if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtColorRange").removeClass("fontColorOfPickItem");
            $("#txtColorRange").val('');
            _oSizeCategoryForBreakDown = null;

        }
    });
    $("#btnColorRange").click(function () {
        GetsColorRanges("");
    });
    function GetsColorRanges(sColorName)
    {
        var oColorCategory = {Param: sColorName };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oColorCategory,
            ControllerName: "ColorCategory",
            ActionName: "SearchColor",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ColorCategoryID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "ColorName", title: "Color Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winColorRange',
                        winclass: 'clsColorCategory',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblColorCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ColorName',
                        windowTittle: 'Color Category List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    //Size Range
    $("#txtSizeRange").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtSizeRange').val()=="" || $('#txtSizeRange').val()==null)
            {
                alert("Type Size Name");
                $('#txtSizeRange').focus();
                return;
            }
            GetSizeRange($.trim($('#txtSizeRange').val()));

        }else if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtSizeRange").removeClass("fontColorOfPickItem");
            $("#txtSizeRange").val('');
            _oSizeCategoryForBreakDown = null;
        }
    });
    $("#btnSizeRange").click(function () {
        GetSizeRange("");
    });
    function GetSizeRange(sSizeName)
    {
        var oSizeCategory = {Param: sSizeName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oSizeCategory,
            ControllerName: "SizeCategory",
            ActionName: "SearchSize",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].SizeCategoryID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "SizeCategoryName", title: "Size Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSizeCategory',
                        winclass: 'clsSizeCategory',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblSizeCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'SizeCategoryName',
                        windowTittle: 'Size Category List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    function LoadSizerProducts()
    {
        debugger;
        var oSizerProducts = JSON.parse(sessionStorage.getItem("SizerProducts"));
        $("#cboSizerProduct").icsLoadCombo({List: oSizerProducts,OptionValue: "ProductID",DisplayText:"ProductName"});
    }
    function ValidateInputForColorSizeEntry()
    {
        debugger;
        if(parseInt($("#cboSizerProduct").val())<=0)
        {
            alert("Please Select Sizer Product");
            $('#cboSizerProduct').focus();
            return false;
        }
        if(_oColorCategoryForBreakDown==null)
        {
            alert("Please Pick Color.");
            $('#txtColorRange').focus();
            return false;
        }
        if(_oSizeCategoryForBreakDown==null)
        {
            alert("Please Pick Size.");
            $('#txtSizeRange').focus();
            return false;
        }
        if(parseInt(icsRemoveComma($('#txtSizeQty').val()))<=0)
        {
            alert("Qty Should be greater than  0");
            $('#txtSizeQty').focus();
            return false;
        }
        //if($("#txtPantonNo").val()=="" || $("#txtPantonNo").val()==null)
        //{
        //    alert("Please Type Panton No.");
        //    $('#txtPantonNo').focus();
        //    return false;
        //}
        var oPISizerBreakDowns = $('#tblPISizerBreakDown').datagrid('getRows');
        if(oPISizerBreakDowns.length>0)
        {
            for(var i = 0;i<oPISizerBreakDowns.length;i++)
            {
                if(parseInt($("#cboSizerProduct").val()) == parseInt(oPISizerBreakDowns[i].ProductID) &&  parseInt(_oColorCategoryForBreakDown.ColorCategoryID) == parseInt(oPISizerBreakDowns[i].ColorID) && parseInt(_oSizeCategoryForBreakDown.SizeCategoryID) == parseInt(oPISizerBreakDowns[i].SizeID) )
                {
                    alert("Product :"+oPISizerBreakDowns[i].ProductName + " , Color :"+_oColorCategoryForBreakDown.ColorName+" And Size : "+_oSizeCategoryForBreakDown.SizeCategoryName+" Is Already Exist. ");
                    return false;
                }
            }
        }
        return true;
    }
    function SetSizerTotal()
    {
        debugger;
        var oPISizerBreakDowns = $('#tblPISizerBreakDown').datagrid('getRows');
        var nTotalQty = 0;
        for(var i = 0;i<oPISizerBreakDowns.length;i++)
        {
            nTotalQty+=parseInt(oPISizerBreakDowns[i].Quantity);
            nTotalQty = parseInt(nTotalQty);
        }
        $("#lblTotalSizeQty").html(nTotalQty);
    }
    //color Sizer Break Down End

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }


    $('.ChangeCurrency').change(function(){
        SetCurrency();
    });
    function SetCurrency()
    {
        if(parseInt($('#cboCurrency').val())!=0)
        {

            for(var i=0;i<_oCurrencyList.length;i++)
            {
                if(parseInt(_oCurrencyList[i].CurrencyID)== parseInt($('#cboCurrency').val()))
                {
                    $('#lblCurrencySymbol').html(_oCurrencyList[i].Symbol);
                    return;
                }
            }

        }
    }


    $('#btnClearOrderSheet').click(function(e){
        $("#txtOrderSheet").val('');
        $('#txtOrderSheet').data('OrderSheetID', 0)
    });

    $('.changePIType').change(function(){
        DynamicRefreshList([], "tblExportPIDetail");
        SetTotal();
        if(parseInt($('#cboPIType').val())==1)//Order Sheet
        {
            $("#txtOrderSheet").val('');
            $('#txtOrderSheet').data('OrderSheetID', 0)
            $("#txtOrderSheet,#btnPickOS,#btnClearOrderSheet").prop('disabled', false);
            $('#txtPINo').prop('disabled',true);
            $('#btnPickOrderSheetDetail').show();
            $("#btnAddDetail,#btnProductPiker,#btnColorPick,#txtProductName,#txtColorName,#txtColorQty,#lblColorQtyCaption,#lblRecipe,#txtProductDescription,#cboUnit,#cboRecipe,#txtStyleDescription,#txtBuyerRef,#txtMeasurement,#txtQty,#txtUnitPrice").hide();


        }else{

            $("#txtOrderSheet").val('');
            $('#txtOrderSheet').data('OrderSheetID', 0)
            $("#txtOrderSheet,#btnPickOS,#btnClearOrderSheet").prop('disabled', true);
            $('#btnPickOrderSheetDetail').hide();
            $('#txtPINo').prop('disabled',false);
            $("#btnAddDetail,#btnRemoveDetail,#btnProductPiker,#btnColorPick,#txtProductName,#lblRecipe,#cboRecipe,#txtColorName,#txtColorQty,#lblColorQtyCaption,#txtProductDescription,#cboUnit,#txtStyleDescription,#txtBuyerRef,#txtMeasurement,#txtQty,#txtUnitPrice").show();
        }
        $('#txtPINo').val(_oExportPI.PINo);
    });

    function ResetOrderSheet()
    {
        if(parseInt($('#cboPIType').val())!=1)
        {
            $("#txtOrderSheet").val('');
            $('#txtOrderSheet').data('OrderSheetID', 0)
            $("#txtOrderSheet,#btnPickOS,#btnClearOrderSheet").prop('disabled', true);
        }
    }

    // Pick Oreder Sheet
    $("#txtOrderSheet").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtOrderSheet').val()==null || $('#txtOrderSheet').val()=="")
            {
                alert("Please Type OrderSheet No & Press Enter.");
                $('#txtOrderSheet').focus();
                return;
            }
            PickOrderSheet($('#txtOrderSheet').val());
        }
    });
    $("#btnPickOS").click(function () {
        PickOrderSheet("");
    });
    function PickOrderSheet(sOrderSheetNo)
    {
        var oExportPI = {
            OrderSheetNo:sOrderSheetNo,
            BUID:sessionStorage.getItem("BUID"),
            ProductNatureInt : sessionStorage.getItem("ProductNature"),
            ExportPIID : (_oExportPI != null) ? _oExportPI.ExportPIID : 0
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oExportPI,
            ControllerName: "OrderSheet",
            ActionName: "GetsORSForExportPI",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].OrderSheetID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "FullPONo", title: "PO No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "OrderDateInString", title: "Order Date", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorName", title: "Customer Name", width: 220, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "AmountSt", title: "Amount", width: 100, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winOrderSheetPicker',
                        winclass: 'clsOrderSheetPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblOrderSheetPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'FullPONo',
                        windowTittle: 'Order Sheet List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    $('#txtOrderSheet').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtOrderSheet").removeClass("fontColorOfPickItem");
            $("#txtOrderSheet").val('');
            $('#txtOrderSheet').data('OrderSheetID', 0)
        }
    });

    $("#btnPickOrderSheetDetail").click(function () {
        if(parseInt($('#txtOrderSheet').data('OrderSheetID'))<=0)
        {
            alert("Please Select Buyer!");
            $('#txtOrderSheet').focus();
            return;
        }

        var oOrderSheet = {
            OrderSheetID:parseInt($('#txtOrderSheet').data('OrderSheetID'))
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oOrderSheet,
            ControllerName: "OrderSheet",
            ActionName: "GetsORSWithDetails",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].OrderSheetDetailID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Product Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Product Name", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "UnitSymbol", title: "Unit", width: 60, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "QtySt", title: "Qty", width: 80, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "UnitPriceSt", title: "Price", width: 80, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "AmountSt", title: "Amount", width: 80, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "RecipeName", title: "Recipe", width: 80, align: "right" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winOrderSheetDetailPicker',
                        winclass: 'clsOrderSheetDetailPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblOrderSheetDetailPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'ProductName',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    });

    function RowSelect(oOrderSheet)
    {
        var oOrderSheetDetails = [];
        for(var i = 0;i<_oOrderSheetDetails.length;i++)
        {
            if(parseInt(_oOrderSheetDetails[i].OrderSheetID) == parseInt(oOrderSheet.OrderSheetID) )
            {
                oOrderSheetDetails.push(_oOrderSheetDetails[i]);
            }
        }
        DynamicRefreshList(oOrderSheetDetails, "tblOrderSheetDetail");
    }

    function RefreshControl()
    {
        $("#txtContractorName,#txtBuyerName,#txtDeliveryToName").addClass("fontColorOfPickItem");
        $('#txtValidateDate').datebox('setValue', _oExportPI.ValidityDateInString );
        $('#txtLCOpenDate').datebox('setValue', _oExportPI.LCOpenDateInString );
        $('#txtDeliveryDate').datebox('setValue', _oExportPI.DeliveryDateInString );
        $("#cboMktPersons").val(_oExportPI.MKTEmpID);
        $("#cboCurrency").val(_oExportPI.CurrencyID);
        $('#txtOrderSheet').data('OrderSheetID', _oExportPI.OrderSheetID)
        SetCurrency();
        $("#cboPIType").val(_oExportPI.PIType);
        if(parseInt($('#cboPIType').val())==1)//Order Sheet
        {
            $('#txtPINo').prop('disabled',true);
        }else{
            $('#txtPINo').prop('disabled',false);
        }
        $("#cboBank").val(_oExportPI.BankBranchID);
        LoadBankBranchAccounts(_oExportPI.BankBranchID,_oExportPI.BankAccountID);
        GetContactPerson(_oExportPI.ContractorID,false);
        GetContactPerson(_oExportPI.BuyerID,true);
        $("#cboLCTerm").val(_oExportPI.LCTermID);
        $("#cboShipmentTermFDD").val(_oExportPI.ShipmentTermInInt);
        if( _oExportPI.IsLIBORRate){$('#cboLiborRate').val(1);}else {$('#cboLiborRate').val(0);}
        if( _oExportPI.IsBBankFDD){$('#cboBankFDD').val(1);}else {$('#cboBankFDD').val(0);}
        if(_oExportPI.PIType==1)//Order Sheet
        {
            $('#btnPickOrderSheetDetail').show();
            $("#btnAddDetail,#btnProductPiker,#btnColorPick,#txtProductName,#txtColorName,#txtColorQty,#lblColorQtyCaption,#lblRecipe,#txtProductDescription,#cboUnit,#cboRecipe,#txtStyleDescription,#txtBuyerRef,#txtMeasurement,#txtQty,#txtUnitPrice").hide();
        }
        if(sessionStorage.getItem("ExportPIHeader") == "View Export PI")
        {
            $("#btnAcceptRevise,#btnPrintPI,#btnAddDetail,#btnRemoveDetail,#btnUpdateColor, #btnAddTermsAndConditon,#btnRemoveTermsAndCondition").hide();
            $("#btnProductPiker,#btnColorPick,#txtProductName,#txtColorName,#txtProductDescription,#txtRateUnit,#txtColorQty,").prop('disabled', true);
        }

        DynamicRefreshList(_oExportPIDetails, "tblExportPIDetail");
        SetTotal();
        RefreshList(_oPISizerBreakDowns);
        SetSizerTotal();
        DynamicRefreshList(_oExportPITandCClauses, "tblPITandCClauses");
        debugger;
        sessionStorage.setItem("SizerProducts",[]);
        var nLength = _oExportPIDetails.length;
        var oSizerProducts = [];
        for(var i=0;i<nLength;i++)
        {
            if(_oExportPIDetails[i].IsApplySizer)
            {
                var oProduct = {
                    ProductID:_oExportPIDetails[i].ProductID,
                    ProductName:_oExportPIDetails[i].ProductName
                };
                oSizerProducts.push(oProduct);
            }
        }
        sessionStorage.setItem("SizerProducts",JSON.stringify(oSizerProducts));
        LoadSizerProducts();
    }

    function TabClick()
    {
        debugger;
        var tab = $('#tabExportPITabs').tabs('getSelected');
        var index = $('#tabExportPITabs').tabs('getTabIndex', tab);
        if (parseInt(index)==3)
        {
            $('#btnAcceptRevise').hide();$('#btnPrintPI').show();
        }else
        {
            if(sessionStorage.getItem("ExportPIHeader") != "View Export PI" )
            {
                $('#btnAcceptRevise').show();
            }

            $('#btnPrintPI').hide();
        }
    }

    $('#txtRateUnit').change(function(){
        debugger;
        SetTotal();
    });

    $("#btnAcceptRevise").click(function (e) {
        debugger;
        endEditing();
        endEditingSizer();
        endEditingTC();
        if (!ValidateInputExportPI()) return;
        var oExportPI = RefreshObjectExportPI();
        if ($("#chkIsCreateReviseNo").is(':checked'))
        {
            oExportPI.IsCreateReviseNo=true;
            //alert("Confirm Change this P/I with ReviseNo ")
            if (!confirm("Confirm to Change this P/I with Revise No ?")) return false;
        }else{
            oExportPI.IsCreateReviseNo=false;
            if (!confirm("Confirm to Change this P/I without Revise No ?")) return false;
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/ExportPI/AcceptExportPIRevise",
            traditional: true,
            data:  JSON.stringify(oExportPI),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oExportPI = jQuery.parseJSON(data);
                if (oExportPI.ErrorMessage==null || oExportPI.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    var oExportPIs = sessionStorage.getItem("ExportPIs");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oExportPIs != null) {
                        oExportPIs = jQuery.parseJSON(oExportPIs);
                    }
                    else {
                        oExportPIs = [];
                    }
                    if (nIndex != -1) {
                        oExportPIs[nIndex] = oExportPI;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oExportPIs.length);
                        oExportPIs.push(oExportPI);
                    }
                    sessionStorage.setItem("ExportPIs", JSON.stringify(oExportPIs));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oExportPI.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $("#btnRefreshPIDetail").click(function (e) {
        endEditing();
        var oPIDetails = $('#tblExportPIDetail').datagrid('getRows');
        DynamicRefreshList(oPIDetails, "tblExportPIDetail");
        RefreshTotalSummery();
    });

    $("#txtContractorName").keydown(function (e) {
        if (e.keyCode === 13) // Enter Press
        {
            if($("#txtContractorName").val()==null || $("#txtContractorName").val()=="")
            {
                alert("Please Type Contactor Name.");return;
            }
            PickAccountOfPI($("#txtContractorName").val());
        }
        else if (e.keyCode === 08) 
        {
            $("#txtContractorName").removeClass("fontColorOfPickItem");
            _oExportPI.ContractorID = 0;
        }
    });
    $("#btnPickAccountOfPI").click(function () {
        PickAccountOfPI("");
    });

    $("#txtBuyerName").keydown(function (e) {
        if (e.keyCode === 13) // Enter Press
        {
            PickBuyerPI();
        }
        else if (e.keyCode === 08) {
            $("#txtBuyerName").removeClass("fontColorOfPickItem");
            _oExportPI.BuyerID = 0;
        }
    });


    $("#btnPickBuyerPI").click(function () {
        PickBuyerPI();
    });

    $("#txtDeliveryToName").keydown(function (e) {
        if (e.keyCode === 13) // Enter Press
        {
            PickDeliveryToPI();
        }
        else if (e.keyCode === 08) {
            $("#txtDeliveryToName").removeClass("fontColorOfPickItem");
            _oExportPI.DeliveryToID = 0;
        }
    });

    $("#btnPickDeliveryToPI").click(function () {
        PickDeliveryToPI();
    });

    $("#btnAddTermsAndConditon").click(function () {
        var oTermsAndCondition = {
            BUID:sessionStorage.getItem("BUID")
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oTermsAndCondition,
            ControllerName: "ExportTermsAndCondition",
            ActionName: "Gets",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ExportTermsAndConditionID > 0)
                {
                    debugger;
                    $("#winTermsAndCondition input").val("");
                    sessionStorage.setItem('PITermsAndCondition',JSON.stringify(response.objs));
                    DynamicRefreshList(response.objs, "tblTermsAndCondition");
                    $("#winTermsAndCondition").icsWindow('open', "PI Terms And Condition Picker");
                }
                else {
                    sessionStorage.setItem('PITermsAndCondition',JSON.stringify([]));
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else {
                alert("Sorry, No Contactor Found.");
            }
        });
    });

    $("#btnOkPITermsAndCondition").click(function () {
        debugger;
        var oSelectedObjs = $('#tblTermsAndCondition').datagrid('getChecked');
        if(oSelectedObjs.length>0)
        {
            var oExistingItems = $('#tblPITandCClauses').datagrid('getRows');
            for(var i = 0;i<oSelectedObjs.length;i++)
            {
                if(!ICS_IsExist(oExistingItems,'TermsAndCondition',oSelectedObjs[i].Clause))
                {
                    var oPITAndC = {
                        ExportPITandCClauseID: 0,
                        ExportPIID: 0,
                        DocFor:oSelectedObjs[i].DocFor,
                        TermsAndCondition: oSelectedObjs[i].Clause
                    };
                    $('#tblPITandCClauses').datagrid('appendRow', oPITAndC);
                }
            }
        }

        $("#winTermsAndCondition").icsWindow('close');
    });

    $("#btnCloseTermsAndCondition").click(function () {
        $("#winTermsAndCondition").icsWindow('close');
    });
    $('#txtTermsAndCondition').keyup(function (e) {
        var c = String.fromCharCode(e.which);
        var txtTermsAndCondition = $('#txtTermsAndCondition').val();
        var oSearchedPITAndCs = [];  var sTempName="";
        var oPITermsAndConditions = $('#tblTermsAndCondition').datagrid('getRows');
        if (e.which == 8)
        {
            oPITermsAndConditions = jQuery.parseJSON(sessionStorage.getItem('PITermsAndCondition'));
        }
        for(var i=0;i<oPITermsAndConditions.length;++i){
            sTempName=oPITermsAndConditions[i].Clause;
            n=sTempName.toUpperCase().indexOf(txtTermsAndCondition.toUpperCase())
            if(n!=-1)
            {
                oSearchedPITAndCs.push(oPITermsAndConditions[i]);
            }
        }
        DynamicRefreshList(oSearchedPITAndCs, "tblTermsAndCondition");
    });

    $('#txtDocFor').keyup(function (e) {
        var c = String.fromCharCode(e.which);
        var txtDocFor = $('#txtDocFor').val();
        var oSearchedPITAndCs = [];  var sTempName="";
        var oPITermsAndConditions = $('#tblTermsAndCondition').datagrid('getRows');
        if (e.which == 8)
        {
            oPITermsAndConditions = jQuery.parseJSON(sessionStorage.getItem('PITermsAndCondition'));
        }
        for(var i=0;i<oPITermsAndConditions.length;++i){
            sTempName=oPITermsAndConditions[i].DocForInString;
            n=sTempName.toUpperCase().indexOf(txtDocFor.toUpperCase())
            if(n!=-1)
            {
                oSearchedPITAndCs.push(oPITermsAndConditions[i]);
            }
        }
        DynamicRefreshList(oSearchedPITAndCs, "tblTermsAndCondition");
    });

    $('#txtNoteTAndC').keyup(function (e) {
        var c = String.fromCharCode(e.which);
        var txtNote = $('#txtNoteTAndC').val();
        var oSearchedPITAndCs = [];  var sTempName="";
        var oPITermsAndConditions = $('#tblTermsAndCondition').datagrid('getRows');
        if (e.which == 8)
        {
            oPITermsAndConditions = jQuery.parseJSON(sessionStorage.getItem('PITermsAndCondition'));
        }
        for(var i=0;i<oPITermsAndConditions.length;++i){
            sTempName=oPITermsAndConditions[i].Note;
            n=sTempName.toUpperCase().indexOf(txtNote.toUpperCase())
            if(n!=-1)
            {
                oSearchedPITAndCs.push(oPITermsAndConditions[i]);
            }
        }
        DynamicRefreshList(oSearchedPITAndCs, "tblTermsAndCondition");
    });

    $("#btnRefreshTermsAndCondition").click(function (e) {
        endEditingTC();
        var oPITermsConditions = $('#tblPITandCClauses').datagrid('getRows');
        DynamicRefreshList(oPITermsConditions, "tblPITandCClauses");
        CopyTermsAndCondition();
    });

    $("#btnRemoveTermsAndCondition").click(function (e) {
        endEditingTC();
        var oPITermsCondition = $('#tblPITandCClauses').datagrid('getSelected');
        if (oPITermsCondition == null) {
            alert("Please select an item!");
            return;
        }
        var SelectedRowIndex = $('#tblPITandCClauses').datagrid('getRowIndex', oPITermsCondition);
        if (!confirm("Confirm to Delete?")) return;
        $('#tblPITandCClauses').datagrid('deleteRow', SelectedRowIndex);
        CopyTermsAndCondition();
    });

    $("#cboPaymentType").change(function () {
        if (parseInt($(this).val()) == 1) { //LC
            $("#cboBankAccount").prop("disabled", true);
        } else {
            $("#cboBankAccount").prop("disabled", false);
            $("#cboCurrency").val(1);
        }
    });
    $("#cboBank").change(function () {
        LoadBankBranchAccounts(parseInt($("#cboBank").val()),0);
    });

    $("#btnRefreshDetail").click(function (){
        endEditing();
    });

    function LoadBankBranchAccounts(nBankBranchID, nSetValueInEditMode) {
        var oBankAccount = {
            BankBranchID: parseInt(nBankBranchID)
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBankAccount,
            ControllerName: "BankAccount",
            ActionName: "GetsByBranchAndAccount",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0)
            {
                $("#cboBankAccount").empty();
                $("#cboBankAccount").icsLoadCombo({
                    List: response.objs,
                    OptionValue: "BankAccountID",
                    DisplayText: "AccountNo"
                    //InitialValue: "Customize"
                });
                $("#cboBankAccount").val(nSetValueInEditMode);
            }
            else {
                $("#cboBankAccount").empty();
            }
        });
    }

    function RefreshPIPrintSetup() {
        var oExportPIPrintSetup = {
            BUID:sessionStorage.getItem("BUID")
        };
        debugger;
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oExportPIPrintSetup,
            ControllerName: "ExportPIPrintSetup",
            ActionName: "GetActivePrintSetup",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.ExportPIPrintSetupID > 0) {
                    oExportPIPrintSetup = response.obj;
                    $('#txtSetupNote').val(oExportPIPrintSetup.Note);
                    $('#txtPreface').val(oExportPIPrintSetup.Preface);
                    $('#txtPartShipment').val(oExportPIPrintSetup.PartShipment);
                    $('#txtShipmentBy').val(oExportPIPrintSetup.ShipmentBy);
                    $('#txtPlaceofShipment').val(oExportPIPrintSetup.PlaceOfShipment);
                    $('#txtPlaceofDelivery').val(oExportPIPrintSetup.PlaceOfDelivery);
                    $('#txtAcceptanceBy').val(oExportPIPrintSetup.AcceptanceBy);
                    $('#txtFor').val(oExportPIPrintSetup.For);
                    _nActivePIPrintSetupID=oExportPIPrintSetup.ExportPIPrintSetupID;
                }
                else { alert(response.obj.ErrorMessage); _nActivePIPrintSetupID=0;}
            }
            else { alert("No information found."); _nActivePIPrintSetupID=0;}
        });
    }

    function PickAccountOfPI(sContractorName) {
        var oContractor = {
            Params: '2,3' + '~' + $.trim(sContractorName+'~'+sessionStorage.getItem("BUID"))
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = [];var oColumn = { field: "ContractorID", title: "Code", width: 70, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winAccountOfs',
                        winclass: 'clsAccountOf',
                        winwidth: 500,
                        winheight: 460,
                        tableid: 'tblAccountOfs',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Contactor List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else {
                alert("Sorry, No Contactor Found.");
            }
        });
    }

    function PickDeliveryToPI()
    {
        var oContractor = {
            Params: '2,3' + '~' + $.trim($("#txtDeliveryToName").val()+'~'+sessionStorage.getItem("BUID"))
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 70, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winDeliveryTos',
                        winclass: 'clsDeliveryTos',
                        winwidth: 500,
                        winheight: 460,
                        tableid: 'tblDeliveryTos',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Delivery To List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else {
                alert("Sorry, No Buyer Found.");
            }
        });
    }

    function PickBuyerPI() {
        var oContractor = {
            Params: '2' + '~' + $.trim($("#txtBuyerName").val()+'~'+sessionStorage.getItem("BUID"))
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 70, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBuyers',
                        winclass: 'clsBuyers',
                        winwidth: 500,
                        winheight: 460,
                        tableid: 'tblBuyers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Buyer List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else {
                alert("Sorry, No Buyer Found.");
            }
        });
    }

    function RefreshObjectExportPI() {
        var bIsLIBORRate =false; if( $('#cboLiborRate').val()==1){ bIsLIBORRate=true;}
        var bIsBBankFDD = false; if ($('#cboBankFDD').val() == 1) { bIsBBankFDD = true; }

        var oExportPI = {
            ExportPIID: (_oExportPI != null) ? _oExportPI.ExportPIID : 0,
            PINo: $("#txtPINo").val(),
            PIStatusInInt: _oExportPI.PIStatusInInt,
            IssueDate: $('#txtIssueDate').datebox('getValue'),
            ValidityDate: $('#txtValidateDate').datebox('getValue'),
            ContractorID: _oExportPI.ContractorID,
            ContractorContactPerson:$('#cboContractorContactPerson').val(),
            BuyerID: _oExportPI.BuyerID,
            BuyerContactPerson:$('#cboBuyerContactPerson').val(),
            DeliveryToID : _oExportPI.DeliveryToID,
            MKTEmpID: parseInt($("#cboMktPersons").val()),
            BankBranchID: $('#cboBank').val(),
            BankAccountID: (CheckLCorNonLC() ? 0 : $('#cboBankAccount').val()),
            CurrencyID: $('#cboCurrency').val(),
            Qty: _oExportPI.Qty,
            Amount: _oExportPI.Amount,
            IsLIBORRate: bIsLIBORRate,
            IsBBankFDD: bIsBBankFDD,
            LCTermID: $('#cboLCTerm').val(),
            OverdueRate: $('#txtOverDueRate').val(),
            LCOpenDate: $('#txtLCOpenDate').datebox('getValue'),
            DeliveryDate: $('#txtDeliveryDate').datebox('getValue'),
            ApprovedBy: _oExportPI.ApprovedBy,
            ApprovedDate: _oExportPI.ApprovedDate,
            LCID: _oExportPI.LCID,
            ExportPIPrintSetupID: _nActivePIPrintSetupID,
            ShipmentTermInInt: parseInt($("#cboShipmentTermFDD").val()),
            Note: $("#txtNote").val(),
            BUID:sessionStorage.getItem("BUID"),
            OrderSheetID:$('#txtOrderSheet').data('OrderSheetID'),
            PIType:$('#cboPIType').val(),
            RateUnit:$('#txtRateUnit').val(),
            
            ProductNature:sessionStorage.getItem("ProductNature"),
            IsCreateReviseNo:false,
            ExportPIDetails:$('#tblExportPIDetail').datagrid('getRows'),
            ExportPITandCClauses: $('#tblPITandCClauses').datagrid('getRows'),
            PISizerBreakDowns:$('#tblPISizerBreakDown').datagrid('getRows')
        };
        return oExportPI;
    }

    function CheckLCorNonLC()
    {
        var nType = parseInt($("#cboPaymentType").val());
        if (nType == 1) {
            return true;
        }
        return false;
    }

    function ValidateInputExportPI() {
        if (_nActivePIPrintSetupID<= 0) {
            alert("Please configure a PI print setup!");
            return false;
        }

        if ($("#cboPaymentType").val() <= 0)
        {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select Payment Type!"); $('#cboPaymentType').focus();
            $("#cboPaymentType").addClass("errorFieldBorder");
            return false;
        } else { $("#cboPaymentType").removeClass("errorFieldBorder"); }

        if ($('#txtIssueDate').datebox('getValue') == null || $('#txtIssueDate').datebox('getValue') == "")
        {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select Issue Date!"); $('#txtIssueDate').focus();
            $("#txtIssueDate").addClass("errorFieldBorder");
            return false;
        } else { $("#txtIssueDate").removeClass("errorFieldBorder"); }

        if ($('#txtValidateDate').datebox('getValue') == null || $('#txtValidateDate').datebox('getValue') == "")
        {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select Validate Date!"); $('#txtValidateDate').focus();
            $("#txtValidateDate").addClass("errorFieldBorder");
            return false;
        } else { $("#txtValidateDate").removeClass("errorFieldBorder"); }

        if (_oExportPI.ContractorID <= 0)
        {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select Account Of!"); $('#txtContractorName').focus();
            $("#txtContractorName").addClass("errorFieldBorder");
            return false;
        } else { $("#txtContractorName").removeClass("errorFieldBorder"); }

        if (parseInt(_oExportPI.BuyerID)<= 0) 
        {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select a Buyer!"); $('#txtBuyerName').focus();
            $("#txtBuyerName").addClass("errorFieldBorder");
            return false;
        } else { $("#txtBuyerName").removeClass("errorFieldBorder"); }

        if (parseInt($("#cboMktPersons").val()) <= 0) 
        {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select a MKT Person!"); $('#cboMktPersons').focus();
            $("#cboMktPersons").addClass("errorFieldBorder");
            return false;
        } else {
            $("#cboMktPersons").removeClass("errorFieldBorder");
            _oExportPI.MKTEmpID = parseInt($("#cboMktPersons").val());
        }

        if ($("#cboBank").val() <= 0) {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select Bank Branch!"); $('#cboBank').focus();
            $("#cboBank").addClass("errorFieldBorder");
            return false;
        } else { $("#cboBank").removeClass("errorFieldBorder"); }

        if ($("#cboCurrency").val() <= 0) {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select Currency!"); $('#cboCurrency').focus();
            $("#cboCurrency").addClass("errorFieldBorder");
            return false;
        } else { $("#cboCurrency").removeClass("errorFieldBorder"); }

        var oPIDetails = $('#tblExportPIDetail').datagrid('getRows');
        if(oPIDetails.length<=0)
        {
            alert("Please add at least one detail.");
            return false;
        }
        var ndLength = oPIDetails.length;
        for(var i =0;i<ndLength;i++)
        {
            if(parseFloat(oPIDetails[i].Qty)<=0)
            {
                alert("Qty Should be Greater thn 0");
                return false;
            }
            if(parseFloat(oPIDetails[i].UnitPrice)<=0)
            {
                alert("Unit Price Should be Greater thn 0");
                return false;
            }
        }
        if ($("#cboLCTerm").val() <= 0) {
            $('#tabExportPITabs').tabs('select', 2);
            alert("Please select LC Term!"); $('#cboLCTerm').focus();
            $("#cboLCTerm").addClass("errorFieldBorder");
            return false;
        } else { $("#cboLCTerm").removeClass("errorFieldBorder"); }

        var oTermsAndConditions = $('#tblPITandCClauses').datagrid('getRows');
        if(oTermsAndConditions.length<=0)
        {
            alert("Please add at least one Terms and Condition.");
            $('#tabExportPITabs').tabs('select',2);//Terms & Condition
            return false;
        }

        return true;
    }


    var editTCIndex = undefined;
    function endEditingTC() {
        if (editTCIndex == undefined) { return true }
        if ($('#tblPITandCClauses').datagrid('validateRow', editTCIndex)) {

            $('#tblPITandCClauses').datagrid('endEdit', editTCIndex);
            editTCIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRowTC(index) {

        if (editTCIndex != index) {
            if (endEditingTC()) {
                $('#tblPITandCClauses').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editTCIndex = index;
            }
            else {
                $('#tblPITandCClauses').datagrid('selectRow', editTCIndex);
            }
        }
    }


    //Product Pick
    $("#txtProductName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtProductName').val()==null || $('#txtProductName').val()=="")
            {
                alert("Please Type Product and Press Enter.");
                $('#txtProductName').focus();
                return;
            }
            PickProduct($('#txtProductName').val());
        }
    });
    $("#btnProductPiker").click(function () {
        PickProduct("");
    });
    function PickProduct(sProductName)
    {
        var oProduct = { BUID:sessionStorage.getItem("BUID"),ProductName:sProductName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "Product",
            ActionName: "SearchByProductBUWise",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "MUnit", title: "Unit", width: 70, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    $('#txtProductName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtProductName").removeClass("fontColorOfPickItem");
            _oProduct = null;
        }
    });

    //Color Name
    $("#txtColorName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtColorName').val()==null || $('#txtColorName').val()=="")
            {
                alert("Please Type Color Name and Press Enter.");
                $('#txtColorName').focus();
                return;
            }

            ColorPick($('#txtColorName').val());
        }
    });
    $("#btnColorPick").click(function () {
        ColorPick("");
    });
    function ColorPick(sColorName)
    {
        var oColorCategory = {Param:sColorName };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oColorCategory,
            ControllerName: "ColorCategory",
            ActionName: "SearchColor",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ColorCategoryID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "ColorName", title: "Color Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winColorCategory',
                        winclass: 'clsColorCategory',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblColorCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ColorName',
                        windowTittle: 'Color Category List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    $('#txtColorName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtColorName").removeClass("fontColorOfPickItem");
            _oColorCategory =null;
        }
    });


    function IntializePickerbuttonPI(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            SetPickerValueAssignPI(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which === 13) {
                SetPickerValueAssignPI(oPickerobj);
            }
        });
    }

    function SetPickerValueAssignPI(oPickerobj) {
        debugger;
        var oreturnObj = null, oreturnObjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnObjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }


        if (oPickerobj.winid == 'winOrderSheetPicker') {
            if (oreturnObj != null && parseInt(oreturnObj.OrderSheetID) > 0)
            {
                var oOrderSheet = oreturnObj;
                $("#txtOrderSheet").val(oOrderSheet.FullPONo);
                $('#txtOrderSheet').data('OrderSheetID', parseInt(oOrderSheet.OrderSheetID));
                $("#txtOrderSheet").addClass("fontColorOfPickItem");

                $('#txtContractorName').val(oOrderSheet.ContractorName);
                $("#txtContractorName").addClass("fontColorOfPickItem");
                _oExportPI.ContractorID = oOrderSheet.ContractorID;
                GetContactPerson(_oExportPI.ContractorID,false);

                $('#txtBuyerName').val(oOrderSheet.BuyerName);
                $("#txtBuyerName").addClass("fontColorOfPickItem");
                _oExportPI.BuyerID = oOrderSheet.BuyerID;
                GetContactPerson(_oExportPI.BuyerID,true);

                $('#txtDeliveryToName').val(oOrderSheet.DeliveryToName);
                $("#txtDeliveryToName").addClass("fontColorOfPickItem");
                _oExportPI.DeliveryToID = oOrderSheet.DeliveryTo;
                DynamicRefreshList([], "tblExportPIDetail");
            }
            else
            {
                alert("Please select a Order Sheet.");
                return false;
            }
        }
        else if (oPickerobj.winid == 'winAccountOfs') 
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                var oContractor = oreturnObj;
                $('#txtContractorName').val(oContractor.Name);
                $("#txtContractorName").addClass("fontColorOfPickItem");
                _oExportPI.ContractorID = oContractor.ContractorID;
                _oExportPI.BuyerID = oContractor.ContractorID;
                GetContactPerson(_oExportPI.ContractorID,false);
                $('#txtBuyerName').val(oContractor.Name);
                $("#txtBuyerName").addClass("fontColorOfPickItem");
                GetContactPerson(_oExportPI.BuyerID,true);
            }
            else
            {
                alert("Please select a contractor.");
                return false;
            }
        }
        else if (oPickerobj.winid == 'winBuyers')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                var oContractor = oreturnObj;
                $('#txtBuyerName').val(oContractor.Name);
                $("#txtBuyerName").addClass("fontColorOfPickItem");
                _oExportPI.BuyerID = oContractor.ContractorID;
                GetContactPerson(_oExportPI.BuyerID,true);
            }
            else {
                alert("Please select a buyer.");
                return false;
            }
        }
        else if (oPickerobj.winid == 'winDeliveryTos') {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                var oContractor = oreturnObj;
                $('#txtDeliveryToName').val(oContractor.Name);
                $("#txtDeliveryToName").addClass("fontColorOfPickItem");
                _oExportPI.DeliveryToID = oContractor.ContractorID;
            }
            else {
                alert("Please select an item from.");
                return false;
            }
        }
        else if (oPickerobj.winid == 'winProductPicker')
        {
            if (oreturnObj != null && oreturnObj.ProductID > 0)
            {
                $('#txtProductName').val(oreturnObj.ProductName);
                $('#txtProductDescription').val(oreturnObj.ProductDescription);
                $('#txtProductName').addClass('fontColorOfPickItem');
                _oProduct = oreturnObj;
                GetMeasurementUnitByType(oreturnObj.UnitTypeInInt);
                if(_oProduct.IsApplyColor){$('#txtColorName,#btnColorPick').show();}else{$('#txtColorName,#btnColorPick').hide();}
                if(_oProduct.IsApplyMeasurement){$('#txtMeasurement').show();}else{$('#txtMeasurement').hide();}
                $('#txtProductName').focus();
            }
        }
        else if (oPickerobj.winid=='winColorCategory')
        {
            if (oreturnObj != null && oreturnObj.ColorCategoryID > 0)
            {
                $('#txtColorName').val(oreturnObj.ColorName);
                $('#txtColorName').addClass('fontColorOfPickItem');
                _oColorCategory = oreturnObj;
                $('#txtColorName').focus();
            }
        }else if(oPickerobj.winid=="winColorRange")
        {
            if (oreturnObj!= null && oreturnObj.ColorCategoryID> 0)
            {
                _oColorCategoryForBreakDown = oreturnObj;
                $('#txtColorRange').val(_oColorCategoryForBreakDown.ColorName);
                $('#txtColorRange').addClass('fontColorOfPickItem');
            }
        }else if(oPickerobj.winid=="winSizeCategory")
        {
            debugger;
            if (oreturnObj!= null && oreturnObj.SizeCategoryID> 0)
            {
                _oSizeCategoryForBreakDown = oreturnObj;
                $('#txtSizeRange').val(_oSizeCategoryForBreakDown.SizeCategoryName);
                $('#txtSizeRange').addClass('fontColorOfPickItem');
            }
        }else if (oPickerobj.winid=='winChangeColorCategory')
        {
            if (oreturnObj != null && oreturnObj.ColorCategoryID > 0)
            {
                debugger;
                $('#txtChangeColorName').val(oreturnObj.ColorName);
                $('#txtChangeColorName').addClass('fontColorOfPickItem');
                sessionStorage.setItem('ColorID',oreturnObj.ColorCategoryID);
                sessionStorage.setItem('ColorName',oreturnObj.ColorName);
                $('#txtChangeColorName').focus();
            }
        }else if (oPickerobj.winid=='winChangeProductPicker')
        {
            if (oreturnObj != null && oreturnObj.ProductID > 0)
            {
                debugger;
                $('#txtChangeProductName').val(oreturnObj.ProductName);
                $('#txtChangeProductName').addClass('fontColorOfPickItem');
                sessionStorage.setItem('ProductID',oreturnObj.ProductID);
                sessionStorage.setItem('ProductName',oreturnObj.ProductName);
                sessionStorage.setItem('SizeName',oreturnObj.AddTwo);
                $('#txtChangeProductName').focus();
            }
        }
        else if(oPickerobj.winid=="winOrderSheetDetailPicker")
        {
            debugger;
            if (oreturnObjs!= null && oreturnObjs.length> 0)
            {
                var oOrderSheetDetails = oreturnObjs;
                var nDLength = oOrderSheetDetails.length;
                var oExportPIDetails = $('#tblExportPIDetail').datagrid("getRows");
                DynamicRefreshList([],'tblExportPIDetail');
                for(var i = 0; i< nDLength;i++)
                {
                    var   oExportPIDetail= {
                        ExportPIDetailID : GetPIDetailID(oOrderSheetDetails[i],oExportPIDetails),
                        ExportPIID: _oExportPI.ExportPIID,
                        ProductID: oOrderSheetDetails[i].ProductID,
                        IsApplySizer:oOrderSheetDetails[i].IsApplySizer,
                        OrderSheetDetailID:oOrderSheetDetails[i].OrderSheetDetailID,
                        ColorID: oOrderSheetDetails[i].ColorID,
                        SizeID: oOrderSheetDetails[i].SizeID,
                        StyleNo :oOrderSheetDetails[i].StyleDescription,
                        PolyMUnitID  : parseInt(oOrderSheetDetails[i].PolyMUnitID),
                        Measurement  : oOrderSheetDetails[i].Measurement,
                        Qty :oOrderSheetDetails[i].Qty,
                        UnitPrice:oOrderSheetDetails[i].UnitPrice,
                        BuyerReference:oOrderSheetDetails[i].BuyerRef,
                        ColorQty:oOrderSheetDetails[i].ColorQty,
                        ColorInfo :'',
                        ModelReferenceID :oOrderSheetDetails[i].ModelReferenceID,
                        MUnitID:oOrderSheetDetails[i].UnitID,
                        MUName:oOrderSheetDetails[i].UnitSymbol,
                        RecipeID:oOrderSheetDetails[i].RecipeID,
                        RecipeName:oOrderSheetDetails[i].RecipeName,
                        ProductName :oOrderSheetDetails[i].ProductName,
                        ModelReferenceName : oOrderSheetDetails[i].ModelReferenceName,
                        ColorName :oOrderSheetDetails[i].ColorName,
                        ProductDescription :oOrderSheetDetails[i].ProductDescription,
                        Amount:parseFloat(parseFloat(oOrderSheetDetails[i].Qty) * parseFloat(oOrderSheetDetails[i].UnitPrice))
                    };
                    $('#tblExportPIDetail').datagrid('appendRow',oExportPIDetail);
                    SetTotal();
                    var oSizerProducts = JSON.parse(sessionStorage.getItem("SizerProducts"));
                    if(oSizerProducts==null || oSizerProducts=="" )
                    {
                        oSizerProducts = [];
                    }
                    if(oOrderSheetDetails[i].IsApplySizer)
                    {
                        var oProduct = {
                            ProductID:oOrderSheetDetails[i].ProductID,
                            ProductName:oOrderSheetDetails[i].ProductName
                        };
                        oSizerProducts.push(oProduct);
                    }
                    sessionStorage.setItem("SizerProducts",JSON.stringify(oSizerProducts));
                    LoadSizerProducts();
                }
            }
            else
            {
                alert("Please select atleast one item!");
                return;
            }
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }

    function GetPIDetailID(oOrderSheetDetail,oExportPIDetails)
    {
        var  nLength = oExportPIDetails.length;
        for(var i = 0;i<nLength;i++)
        {            
            if(parseInt(oOrderSheetDetail.OrderSheetDetailID)== parseInt(oExportPIDetails[i].OrderSheetDetailID))
            {
                return oExportPIDetails[i].ExportPIDetailID;
            }
        }
        return 0;
    }

    function GetMeasurementUnitByType(nUnitTypeInt)
    {
        //debugger;
        var oMeasurementUnit={
            UnitTypeInInt : nUnitTypeInt
        };
        $.ajax ({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/MeasurementUnit/GetbyUnitType",
            data:  JSON.stringify(oMeasurementUnit),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var  oUnits = jQuery.parseJSON(data);
                if (oUnits!=null)
                {
                    if(oUnits.length>0)
                    {
                        $("#cboUnit").icsLoadCombo({List: oUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function ValidateInputDetail()
    {
        if(_oProduct==null || $('#txtProductName').val()=="")
        {
            $('#txtProductName').focus();
            $('#txtProductName').addClass("errorFieldBorder");
            alert('Select Product');
            return false;
        }
        if(_oProduct.IsApplyColor)
        {
            if(parseInt(_oColorCategory.ColorCategoryID)<=0)
            {
                $('#txtColorName').focus();
                $('#txtColorName').addClass("errorFieldBorder");
                alert('Select Color');
                return false;
            }
        }
        if($('#cboRecipe').val()<=0)
        {
            $('#cboRecipe').focus();
            alert('Select Recipe.');
            return false;
        }  
        if($('#cboUnit').val()<=0)
        {
            $('#cboUnit').focus();
            alert('Select Unit.');
            return false;
        }
        if(_oProduct.IsApplyMeasurement)
        {
            if( $('#txtMeasurement').val()==""|| $('#txtMeasurement').val()==null)
            {
                $('#txtMeasurement').focus();
                $('#txtMeasurement').addClass("errorFieldBorder");
                alert('Select Measurement');
                return false;
            }
        }
        if(parseInt(icsRemoveComma($('#txtQty').val()))<=0)
        {
            $('#txtQty').focus();
            $('#txtQty').addClass("errorFieldBorder");
            alert('Qty Should be Greater than 0');
            return false;
        }
        if(parseFloat(icsRemoveComma($('#txtUnitPrice').val()))<=0)
        {
            $('#txtUnitPrice').focus();
            $('#txtUnitPrice').addClass("errorFieldBorder");
            alert('Rate Should be Greater than 0');
            return false;
        }
        //var oExportDetails = $('#tblExportPIDetail').datagrid('getRows');
        //if(ICS_IsExist(oExportDetails, 'ProductID', _oProduct.ProductID))
        //{
        //    alert("This Product Already Exist");
        //    return false;
        //}

        return true;
    }

    function ResetDetail(){
        _oProduct = null;_oColorCategory = null;_oSizeCategory = null;
        $('#txtQty,#txtUnitPrice').val(0);
        $('#txtColorQty').val(0);
        $('#txtProductName,#txtColorName,#txtProductDescription,#txtMeasurement,#txtStyleDescription,#txtBuyerRef').removeClass("fontColorOfPickItem");
        $('#txtProductName,#txtColorName,#txtProductDescription,#txtMeasurement,#txtStyleDescription,#txtBuyerRef').val("");
        var oUnits = [];
        $("#cboUnit").icsLoadCombo({List: oUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
        $('#txtProductName').focus();
    }

    $("#btnAddDetail").click(function () {
        debugger;
        if(!ValidateInputDetail())return;
        var   oExportPIDetail= {
            ExportPIDetailID : 0,
            ExportPIID: _oExportPI.ExportPIID,
            ProductID: _oProduct.ProductID,
            ColorID: _oColorCategory ==null?0: _oColorCategory.ColorCategoryID,
            ProductDescription: $('#txtProductDescription') .val(),
            StyleNo :$('#txtStyleDescription') .val(),
            Measurement  :$('#txtMeasurement') .val(),
            Qty :icsRemoveComma($('#txtQty').val()),
            UnitPrice:icsRemoveComma($('#txtUnitPrice').val()),
            AdjQty:0,
            AdjRate:0,
            DocCharge:0,
            AdjValue:0,
            CRate:0,
            BuyerReference:$('#txtBuyerRef').val(),
            ColorQty:$('#txtColorQty').val(),
            ColorInfo :'',
            ModelReferenceID :_oProduct.ModelReferenceID,
            MUnitID:$("#cboUnit").val(),
            MUName:$("#cboUnit option:selected").text(),
            RecipeID:$('#cboRecipe').val(),
            RecipeName:$("#cboRecipe option:selected").text(),
            ProductName :_oProduct.ProductName,
            ModelReferenceName : _oProduct.ModelReferenceName,
            ColorName :_oColorCategory==null?'': _oColorCategory.ColorName,
            SizeName :_oProduct.AddTwo,
            Amount:parseFloat(parseFloat(icsRemoveComma($('#txtQty').val())) * parseFloat(icsRemoveComma($('#txtUnitPrice').val())))
        };
        $('#tblExportPIDetail').datagrid('appendRow',oExportPIDetail);
        SetTotal();
        debugger;
        var oSizerProducts = JSON.parse(sessionStorage.getItem("SizerProducts"));
        if(oSizerProducts==null || oSizerProducts=="" )
        {
            oSizerProducts = [];
        }
        if(_oProduct.IsApplySizer)
        {
            oSizerProducts.push(_oProduct);
        }
        sessionStorage.setItem("SizerProducts",JSON.stringify(oSizerProducts));
        LoadSizerProducts();
        ResetDetail();
    });
    function SetTotal()
    {
        debugger;
        if(parseInt($('#txtRateUnit').val())>0)
        {
            var oDetails = $('#tblExportPIDetail').datagrid('getRows');
            for(var i = 0;i<oDetails.length;i++)
            {
                oDetails[i].Amount = parseFloat(parseFloat(oDetails[i].Qty)/ parseInt($('#txtRateUnit').val())) * parseFloat(oDetails[i].UnitPrice);
            }
            DynamicRefreshList(oDetails, "tblExportPIDetail");
        }else{
            alert("Price Unit Should be Greater than 0");
            $('#txtRateUnit').val(1);
        }

        var oExportPIDetails = $('#tblExportPIDetail').datagrid('getRows');
        var nTotalValue = 0;
        var nTotalQty = 0;
        for(var i = 0;i<oExportPIDetails.length;i++)
        {
            nTotalValue+=parseFloat(oExportPIDetails[i].Amount);
            nTotalQty+=parseInt(oExportPIDetails[i].Qty);
            nTotalValue = parseFloat(nTotalValue);
            nTotalQty = parseInt(nTotalQty);
        }
        $("#lblTotalQty").html(nTotalQty);
        $("#lblTotalAmount").html(formatPrice(nTotalValue,0));
    }


    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });
    $("#btnRemoveDetail").click(function () {
        var oExportPIDetail = $("#tblExportPIDetail").datagrid("getSelected");
        if (oExportPIDetail == null) { alert("Please select an item from list!"); return false; }
        if (!confirm("Confirm to Delete?")) return false;
        var SelectedRowIndex=$('#tblExportPIDetail').datagrid('getRowIndex',oExportPIDetail);
        if(oExportPIDetail.IsApplySizer)
        {
            debugger;
            var oColorSizeRatios = $('#tblPISizerBreakDown').datagrid('getRows');
            var oTempColorSizeRatios = [];var nLength = oColorSizeRatios.length;
            for(var i =0;i<nLength;i++)
            {
                if(parseInt(oColorSizeRatios[i].ProductID)!= parseInt(oExportPIDetail.ProductID))
                {
                    oTempColorSizeRatios.push(oColorSizeRatios[i]);
                }
            }
            RefreshList(oTempColorSizeRatios);
            //nLength = _oDistinctColors.length;
            //var oTempColors = [];
            //for(var i =0;i<nLength;i++)
            //{
            //    if(parseInt(_oDistinctColors[i].ObjectID)!= parseInt(oExportPIDetail.ProductID))
            //    {
            //        oTempColors.push(_oDistinctColors[i]);
            //    }
            //}
            //_oDistinctColors = oTempColors;
            //var oSizerProducts = JSON.parse(sessionStorage.getItem("SizerProducts"));
            //oSizerProducts = ICS_POP(oSizerProducts, 'ProductID', oExportPIDetail.ProductID);//List, PropertyName, Propertyvalue
            //sessionStorage.setItem("SizerProducts",JSON.stringify(oSizerProducts));
            //LoadSizerProducts();
        }
        alert("Data Delete Successfully.");
        $('#tblExportPIDetail').datagrid('deleteRow', SelectedRowIndex);
        SetTotal();
    });
    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    var editIndex = undefined;
    function endEditing(){
        if (editIndex == undefined){return true}
        if ($('#tblExportPIDetail').datagrid('validateRow', editIndex)){
            $('#tblExportPIDetail').datagrid('endEdit', editIndex);
            $('#tblExportPIDetail').datagrid('selectRow',editIndex);
            var oORSDetail=$('#tblExportPIDetail').datagrid('getSelected');
            if(oORSDetail!=null)
            {
                oORSDetail.Amount = parseFloat(parseInt(oORSDetail.Qty)*parseFloat(oORSDetail.UnitPrice));
                $('#tblExportPIDetail').datagrid('updateRow',{index: editIndex,	row: oORSDetail});
            }
            SetTotal();
            editIndex = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRow(index){
        if (editIndex != index){
            if (endEditing())
            {
                $('#tblExportPIDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else
            {
                $('#tblExportPIDetail').datagrid('selectRow', editIndex);
            }
        }
    }
    $("#btnPrintPI").click(function () {
        if (_oExportPI == null || _oExportPI.ExportPIID <= 0) {
            alert("Please select an item from list!");
            return;
        }
        window.open(_sBaseAddress + '/ExportPI/PrintoExportPIPreview?id=' + _oExportPI.ExportPIID + "&bPrintFormat=false&nTitleTypeInImg=1" , "_blank");//Defalult false
    });


    //update color
    $('#btnUpdateColor').click(function(e)
    {
        var oExportPIDetail = $("#tblExportPIDetail").datagrid("getSelected");
        if (oExportPIDetail == null || parseInt(oExportPIDetail.ProductID) <= 0) { alert("Please select an item from list!"); return false; }
        $("#winChangeColor input").not("input[type='button']").val("");
        $('#txtChangeColorName').val(oExportPIDetail.ColorName);
        $('#txtChangeProductName').val(oExportPIDetail.ProductName);
        $('#txtChangeColorName,#txtChangeProductName').addClass('fontColorOfPickItem');
        sessionStorage.setItem('ColorID',oExportPIDetail.ColorID);
        sessionStorage.setItem('ColorName',oExportPIDetail.ColorName);
        sessionStorage.setItem('ProductID',oExportPIDetail.ProductID);
        sessionStorage.setItem('ProductName',oExportPIDetail.ProductName);
        sessionStorage.setItem('SizeName',oExportPIDetail.SizeName);

        $("#winChangeColor").icsWindow('open', "Update Info");
    });
    function UpdateInfo()
    {
        var oExportPIDetail = $("#tblExportPIDetail").datagrid("getSelected");
        var SelectedRowIndex=$('#tblExportPIDetail').datagrid('getRowIndex',oExportPIDetail);
        if(parseInt(sessionStorage.getItem('ColorID'))<=0)
        {
            alert("Please Select Color.");
            return;
        }
        oExportPIDetail.ColorID = sessionStorage.getItem('ColorID');
        oExportPIDetail.ColorName = sessionStorage.getItem('ColorName');
        oExportPIDetail.ProductID = sessionStorage.getItem('ProductID');
        oExportPIDetail.ProductName = sessionStorage.getItem('ProductName');
        oExportPIDetail.SizeName = sessionStorage.getItem('SizeName');
        $('#tblExportPIDetail').datagrid('updateRow',{index: SelectedRowIndex,	row: oExportPIDetail});
        alert("Data Saved Succesfully");
        $("#winChangeColor").icsWindow('close');
    }

    $("#txtChangeColorName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtChangeColorName').val()==null || $('#txtChangeColorName').val()=="")
            {
                alert("Please Type Color Name and Press Enter.");
                $('#txtChangeColorName').focus();
                return;
            }
            ChangeColorSearch($.trim($('#txtChangeColorName').val()));
        }
    });
    $("#btnChangColorPick").click(function ()
    {
        ChangeColorSearch("");
    });
    function ChangeColorSearch(sColorName)
    {
        var oColorCategory = {Param:sColorName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oColorCategory,
            ControllerName:"ColorCategory",
            ActionName: "SearchColor",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ColorCategoryID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "ColorName", title: "Color Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winChangeColorCategory',
                        winclass: 'clsChangeColorCategory',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblColorCategory',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ColorName',
                        windowTittle: 'Color Category List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    $('#txtChangeColorName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtChangeColorName").removeClass("fontColorOfPickItem");
            sessionStorage.setItem('ColorID',0);
            sessionStorage.setItem('ColorName','');
        }
    });
    //Change product
    $("#txtChangeProductName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtChangeProductName').val()==null || $('#txtChangeProductName').val()=="")
            {
                alert("Please Type Product and Press Enter.");
                $('#txtChangeProductName').focus();
                return;
            }
            ChangeProduct($('#txtChangeProductName').val());
        }
    });
    $("#btnChangProductPick").click(function () {
        ChangeProduct("");
    });
    function ChangeProduct(sProductName)
    {
        var oProduct = { BUID:sessionStorage.getItem("BUID"),ProductName:sProductName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "Product",
            ActionName: "SearchByProductBUWise",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "MUnit", title: "Unit", width: 70, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winChangeProductPicker',
                        winclass: 'clsChangeProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    $('#txtChangeProductName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtChangeProductName").removeClass("fontColorOfPickItem");
            sessionStorage.setItem('ProductID',0);
            sessionStorage.setItem('ProductName','');
            sessionStorage.setItem('SizeName','');
        }
    });

    function CloseUpdateInfo()
    {
        $("#winChangeColor").icsWindow('close');
    }



    //Contact Person
    function AddContactPerson(bIsBuyer) {
        _bIsBuyer = bIsBuyer;
        if(bIsBuyer)
        {
            if (parseInt(_oExportPI.ContractorID) <= 0)
            {
                alert("Please select Buyer!");
                $('#txtContractorName').focus();
                return;
            }
        }else{
            if (parseInt(_oExportPI.DeliveryTo) <= 0)
            {
                alert("Please select Delivery To!");
                $('#txtDeliveryToName').focus();
                return;
            }
        }
        $("#winContactPersonnel").icsWindow('open', "Add Contact Person");
        $("#winContactPersonnel input").not("input[type='button']").val("");
    }

    function ValidateInputContactPersonnel()
    {
        if(document.getElementById("txtName").value==null || document.getElementById("txtName").value=="")
        {
            alert("Please enter name!");
            $('#txtName').focus();
            return false;
        }

        if(document.getElementById("txtPhone").value==null || document.getElementById("txtPhone").value=="")
        {
            alert("Please enter phone number!");
            $('#txtPhone').focus();
            return false;
        }
        return true;
    }

    function RefreshObjectCP()
    {
        debugger;
        var oContactPersonnel= {
            ContactPersonnelID : 0,
            ContractorID : (_bIsBuyer==true)? _oExportPI.BuyerID:_oExportPI.ContractorID,
            Name : $("#txtName").val(),
            Address : $("#txtAddress").val(),
            Phone :$("#txtPhone").val(),
            Email : $("#txtEmail").val(),
            Note : $("#txtNote").val()
        };
        return oContactPersonnel;
    }

    function AddContactPersonnel()
    {
        debugger;
        if(!ValidateInputContactPersonnel()) return;
        var oContactPersonnel=RefreshObjectCP();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/Contractor/SaveContactPersonnel",
            traditional: true,
            data:  JSON.stringify(oContactPersonnel),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                _oContactPersonnel = jQuery.parseJSON(data);
                if(parseInt(_oContactPersonnel.ContactPersonnelID)>0)
                {
                    alert("Data Saved sucessfully");
                    document.getElementById("txtName").value="";
                    document.getElementById("txtAddress").value="";
                    document.getElementById("txtPhone").value="";
                    document.getElementById("txtEmail").value="";
                    document.getElementById("txtNote").value="";
                    $("#winContactPersonnel").icsWindow('close');
                    if(_bIsBuyer)
                    {
                        GetContactPerson(_oExportPI.BuyerID,true);//load Buyer Contact peron
                    }else
                    {
                        GetContactPerson(_oExportPI.ContractorID,false);//load Accounts of contactperson
                    }
                }
                else {
                    alert(_oContactPersonnel.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function CloseContactPersonnel()
    {
        $("#winContactPersonnel").icsWindow('close');
    }

    function GetContactPerson(nContractorID, bIsBuyer) {
        debugger;
        var oContractor = {ContractorID:nContractorID};
        $.ajax
           ({
               type: "POST",
               dataType: "json",
               url: _sBaseAddress + "/Contractor/GetContactPersonnels",
               traditional: true,
               data:  JSON.stringify(oContractor),
               contentType: "application/json; charset=utf-8",
               success: function (data) {
                   //debugger;
                   var _oContactPersonnels = jQuery.parseJSON(data);
                   if (_oContactPersonnels != null)
                   {
                       if(bIsBuyer)
                       {
                           $("#cboBuyerContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                           $('#cboBuyerContactPerson').val(_oExportPI.BuyerContactPerson);
                       }else{
                           $("#cboContractorContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                           $('#cboContractorContactPerson').val(_oExportPI.ContractorContactPerson);
                       }

                   }
                   else {
                       if(bIsBuyer)
                       {
                           $("#cboBuyerContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                       }else{
                           $("#cboContractorContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                       }
                   }
               },
               error: function (xhr, status, error) {
                   alert(error);
               }

           });

    }

</script>