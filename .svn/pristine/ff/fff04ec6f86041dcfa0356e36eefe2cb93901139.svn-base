<html>
@{
    ViewBag.Title = "Proforma Invoice";
}
<body>
    @model ESimSol.BusinessObjects.ProformaInvoice
    <div class="menuMainCollectionTable">
        <div class="easyui-panel" title="" style="font-family:Tahoma; text-align:center; height:89%;">
            <div class="easyui-tabs" style="width:100%; height:100%">
                <div id="divProformaInvoice" title="Proforma Invoice (PI)" style="font-size:12px; font-style:normal; width:100%">
                    <fieldset style="width:98%; margin-top:2px">
                        <table border="0" cellpadding="1" cellspacing="1" style="width:100%; font-size:12px">
                            <tr>
                                <td style="width:10%; text-align: right;">
                                    Buyer Name:
                                </td>
                                <td style="width: 35%; text-align:left;">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:75%">
                                                <input type="text" style="width:98%" id="txtBuyerName" placeholder="Press Enter With Buyer Name" />
                                            </td>
                                            <td style="width:25%; text-align:right">
                                                <input type="button" id="btnBuyerClear" value="C" style="width:32%; text-align:center;" />
                                                <input type="button" id="btnBuyerPicker" value="Pick" style="width:63%; text-align:center;" />
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width: 10%; text-align: right;">Issue Date:</td>
                                <td style="width: 17%; text-align: left;">
                                    <input id="txtIssueDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 100%;" />
                                </td>
                                <td style="width: 10%; text-align: right;">PI No:</td>
                                <td style="width: 18%; text-align: left;">
                                    <input type="text" style="width:100%" id="txtPINo" disabled="disabled" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width:10%; text-align: right;">
                                    LC Favor Of:
                                </td>
                                <td style="width: 35%; text-align:left;">
                                    <select id="cboFavorOf" style=" width:99.8%;"></select>
                                </td>
                                <td style="width: 10%; text-align: right;">Currency :</td>
                                <td style="width: 17%; text-align: left;">
                                    <select id="cboCurrency" style=" width:100%;"></select>
                                </td>
                                <td style="width: 10%; text-align: right;">M. Unit:</td>
                                <td style="width: 18%; text-align: left;">
                                    <select id="cboUnit" style=" width:103%;"></select>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:10%; text-align: right;">
                                    Transfer Bank :
                                </td>
                                <td style="width: 35%; text-align:left;">
                                    <select id="cboBankAccount" style=" width:99.8%;"></select>
                                </td>
                                <td style="width: 10%; text-align: right;">Delivery Term :</td>
                                <td style="width: 17%; text-align: left;">
                                    <select id="cboDeliveryTerm" style=" width:100%;"></select>
                                </td>
                                <td style="width: 10%; text-align: right;">Origin :</td>
                                <td style="width: 18%; text-align: left;">
                                    <input type="text" id="txtOrigin" style=" width:100%;" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width:10%; text-align: right;">
                                    Payment Term :
                                </td>
                                <td style="width: 35%; text-align:left;">
                                    <select id="cboPaymentTerm" style=" width:99.8%;"></select>
                                </td>
                                <td style="width: 10%; text-align: right;">L. Port(Sea):</td>
                                <td style="width: 17%; text-align: left;">
                                    <input type="text" style="width:97%" id="txtPortOfLoadingSea" />
                                </td>
                                <td style="width: 10%; text-align: right;">L. Port(Air):</td>
                                <td style="width: 18%; text-align: left;">
                                    <input type="text" style="width:100%" id="txtPortOfLoadingAir" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width:10%; text-align: right;">
                                    Applicant :
                                </td>
                                <td style="width: 35%; text-align:left;">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:75%">
                                                <input type="text" style="width:98%" id="txtApplicant" placeholder="Press Enter With Applicant Name" />
                                            </td>
                                            <td style="width:25%; text-align:right">
                                                <input type="button" id="btnApplicantClear" value="C" style="width:32%; text-align:center;" />
                                                <input type="button" id="btnApplicantPicker" value="Pick" style="width:63%; text-align:center;" />
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:10%; text-align: right;">
                                    Remarks :
                                </td>
                                <td colspan="3" style="width: 45%; text-align:left;">
                                    <input type="text" style="width:100%" id="txtNote" />
                                </td>
                            </tr>
                        </table>
                    </fieldset>

                    <div title="PI Details" style="padding:0px">
                        <div id="DetailtoolBar">
                            <input type="button" id="btnPickOrder" value="Pick Order" onclick="PickOrder()" style="width: 80px; font-size: 12px" />
                            <input type="button" id="btnRemovePIDetail" value="Remove" onclick="RemoveDetail()" style="width: 80px; font-size: 12px" />
                            <input type="button" id="btnRefreshPIDetail" value="Refresh" style="width: 80px; font-size: 12px" />
                        </div>
                        <table id="tblProformaInvoiceDetail" title="PI Details" class="easyui-datagrid" style="width:100%; height:215px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#DetailtoolBar"
                               data-options="onClickRow: onClickRow">
                            <thead data-options="frozen:true">
                                <tr>
                                    <th field="StyleNo" width="100" align="left"> Style No  </th>
                                    <th field="DeptName" width="50">Dept</th>
                                    <th field="OrderRecapNo" width="60" align="left">Order RecapNo</th>
                                </tr>
                            </thead>
                            <thead>
                                <tr>
                                    <th field="SessionName" width="55">Session</th>
                                    <th field="ProductName" width="130" align="left">Item Description </th>
                                    <th field="FabricName" width="130" align="left">Composition </th>
                                    <th field="ShipmentDateInString" width="78" align="left">Shipment Dt</th>
                                    <th field="OrderRecapQty" width="70" align="right" formatter="formatPricewithoutdecimal"> Order Qty </th>
                                    <th field="Quantity" width="70" align="right" formatter="formatPricewithoutdecimal">PI Quantity</th>
                                    <th field="FOB" width="40" formatter="formatPrice4digit" align="right">FOB</th>
                                    <th width="75" align="right" data-options="field:'BuyerCommissionInPercent',editor:{type:'numberbox',options:{precision:2}}">B. Comm(%)</th>
                                    <th field="BuyerCommission" formatter="formatPrice" width="100" align="right">B. Comm</th>
                                    <th field="AdjustAdditon" formatter="formatPrice4digit" width="75" align="right">Adj(Addition)</th>
                                    <th field="AdjustDeduction" formatter="formatPrice4digit" width="75" align="right">Adj(Deduction)</th>
                                    <th width="75" align="right" data-options="field:'UnitPrice',editor:{type:'numberbox',options:{precision:4}}"><label id="lblUnitColumnCaption">Unit</label> Price</th>
                                    <th field="Amount" formatter="formatPrice4digit" width="65" align="right">Amount</th>
                                </tr>
                            </thead>
                        </table>
                        <table border="0" cellpadding="1" cellspacing="1" style="font-weight:bold; font-size:11px; width:99.5%">
                            <tr>
                                <td id="tdTotalCaption" style="width:55%; text-align: right; font-weight:bold"> Total Qty : </td>
                                <td style="width:10%; text-align: right;"> <label id="lblTotalQty" style="text-align: right;  float: right; font-weight:bold">0</label></td>
                                <td style="width:20%; text-align: right;">Gross Amount :</td>
                                <td style="width:15%; text-align: right;"><input type="text" style="width:100%; font-size:11px;text-align:right" id="txtGrossAmount" disabled="disabled" /></td>
                            </tr>
                            <tr>
                                <td style="width:65%; text-align: left;font-weight:bold" colspan="2">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:20%; text-align:right">Cause of Discount : </td>
                                            <td style="width:80%; text-align:left">
                                                <input type="text" style="width:100%; font-size:11px;text-align:left" id="txtCauseOfDiscount" />
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:20%; text-align: right;font-weight:bold">Discount Amount :</td>
                                <td style="width:15%; text-align:right; font-weight:bold">
                                    <table border="0" cellpadding="0" cellspacing="0" style="font-weight:bold;width:100%">
                                        <tr>
                                            <td style="width:55%"> <input type="text" style="width:100%; font-size:11px; text-align:right" id="txtDiscountAmount" /></td>
                                            <td style="width:20%;text-align:right;">(%)</td>
                                            <td style="width:25%"> <input type="text" style="width:100%; font-size:11px; text-align:right" id="txtDiscountInPercentage" /></td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:65%; text-align: right;font-weight:bold" colspan="2">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:20%; text-align:right">Cause of Addition : </td>
                                            <td style="width:80%; text-align:left">
                                                <input type="text" style="width:100%; font-size:11px;text-align:left" id="txtCauseOfAddition" />
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:20%; text-align: right;font-weight:bold">Additional :</td>
                                <td style="width:15%; text-align: right;font-weight:bold">
                                    <table border="0" cellpadding="0" cellspacing="0" style="font-weight: bold;width:100%">
                                        <tr>
                                            <td style="width:55%"><input type="text" style="width:100%; font-size:11px; text-align:right" id="txtAdditionalAmount" /> </td>
                                            <td style="width:20%;text-align:right;">(%)</td>
                                            <td style="width:25%"> <input type="text" style="width:100%; font-size:11px; text-align:right" id="txtAdditionalInPercentage" /></td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:85%; text-align: right; font-weight:bold" colspan="3">Net Amount :</td>
                                <td style="width:15%; text-align: right; font-weight:bold"><input type="text" style="width:100%; font-size:11px;text-align:right" id="txtNetAmount" disabled="disabled" /></td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div title="Terms & Condition with Doc" style="padding:5px; width:100%;height:100%">
                    <div class="easyui-layout" style="width:100%; height:98.5%;">
                        <div data-options="region:'west',title:'Commercial Terms and Condition',split:true" style="width:70%;">
                            <div id="TCtoolbar" style=" height:25px;">
                                <input type="button" id="btnAddTermsAndConditon" value="Pick Term And Condition" style="width:25%; font-size: 12px" />
                                <input type="button" id="btnRemoveTermsAndCondition" value="Remove" style="width:80px; font-size: 12px" />
                                <input type="button" id="btnRefreshTermsAndCondition" value="Refresh" style="width:80px; font-size: 12px" />
                            </div>
                            <table id="tblPITermsAndCondition" title="" class="easyui-datagrid" style="width:100%; height:100%" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#TCtoolbar" data-options="singleSelect: true, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false, onClickRow: onClickRowTC">
                                <thead>
                                    <tr>
                                        <th field="TermsAndCondition" width="590" align="left" data-options="field:'TermsAndCondition',editor:{type:'text',options:{precision:0}}"> Terms & Condition </th>
                                    </tr>
                                </thead>
                            </table>

                        </div>
                        <div data-options="region:'center',title:'Required Documents'">
                            <div id="RDtoolbar" style=" height:25px;">
                                <a id="btnRequiredDocAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                <a id="btnRequiredDocDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                            </div>
                            <table id="tblPIRequiredDoc" title="" class="easyui-datagrid" style="width:100%; height:100%;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#RDtoolbar">
                                <thead>
                                    <tr>
                                        <th field="DocTypeInString" width="200" align="left">Required Documents</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <fieldset style="height:8%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; width: 100%;font-weight: bold; font-size: 12px">
                <tr>
                    <td style="width: 840px; text-align: right"></td>
                    <td style="width: 60px; font-size: 13px">
                        <a id="btnCommit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Commit</a>
                    </td>
                    <td style="width: 60px; font-size: 13px">
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">
    $(document).ready(function () {
        debugger;
        var oProformaInvoice =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oPaymentTerms =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PaymentTerms));
        var oDeliveryTerms =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DeliveryTerms));
        var oCurrencys =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oBusinessUnits =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oBankAccounts =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BankAccounts));
        var oMeasurementUnits =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.MeasurementUnits));
        var oClientOperationSetting = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ClientOperationSetting));

        $('#divProformaInvoice').data('BuyerID', oProformaInvoice.BuyerID);
        $('#divProformaInvoice').data('ApplicantID', oProformaInvoice.ApplicantID);
        $('#divProformaInvoice').data('ProformaInvoice', oProformaInvoice);
        $('#divProformaInvoice').data('ClientOperationSetting', oClientOperationSetting);
        $('#divProformaInvoice').data('PaymentTerms', oPaymentTerms);
        $('#divProformaInvoice').data('DeliveryTerms', oDeliveryTerms);
        $('#divProformaInvoice').data('Currencys', oCurrencys);
        $('#divProformaInvoice').data('BusinessUnits', oBusinessUnits);
        $('#divProformaInvoice').data('BankAccounts', oBankAccounts);
        $('#divProformaInvoice').data('MeasurementUnits', oMeasurementUnits);

        $('#txtGrossAmount,#txtDiscountAmount,#txtDiscountInPercentage').icsCurrencyBox(null, null, 2);
        $('#txtAdditionalAmount,#txtAdditionalInPercentage,#txtNetAmount').icsCurrencyBox(null, null, 2);
        RefreshCombobox();
        RefreshControls();
        RefreshControlLayout();
    });

    function RefreshCombobox()
    {
        var oPaymentTerms = $('#divProformaInvoice').data('PaymentTerms');
        var oDeliveryTerms = $('#divProformaInvoice').data('DeliveryTerms');
        var oCurrencys = $('#divProformaInvoice').data('Currencys');
        var oBusinessUnits = $('#divProformaInvoice').data('BusinessUnits');
        var oBankAccounts = $('#divProformaInvoice').data('BankAccounts');
        var oMeasurementUnits = $('#divProformaInvoice').data('MeasurementUnits');

        $("#cboPaymentTerm").icsLoadCombo({List: oPaymentTerms, OptionValue: "id", DisplayText: "Value"});
        $("#cboDeliveryTerm").icsLoadCombo({List: oDeliveryTerms, OptionValue: "id", DisplayText: "Value"});
        $("#cboCurrency").icsLoadCombo({List: oCurrencys, OptionValue: "CurrencyID", DisplayText: "CurrencyName"});
        $("#cboFavorOf").icsLoadCombo({List: oBusinessUnits, OptionValue: "BusinessUnitID", DisplayText: "Name"});
        $("#cboBankAccount").icsLoadCombo({List: oBankAccounts, OptionValue: "BankAccountID", DisplayText: "AccountWithBankName"});
        $("#cboUnit").icsLoadCombo({List: oMeasurementUnits, OptionValue: "MeasurementUnitID", DisplayText: "UnitNameSymbol"});
    }

    function RefreshControls()
    {
        var oProformaInvoice = $('#divProformaInvoice').data('ProformaInvoice');
        $('#txtBuyerName').val(oProformaInvoice.BuyerName);
        $('#txtPINo').val(oProformaInvoice.PINo);
        $('#txtIssueDate').datebox('setValue', oProformaInvoice.IssueDateInString);
        $('#cboFavorOf').val(parseInt(oProformaInvoice.LCFavorOf));
        $('#cboCurrency').val(parseInt(oProformaInvoice.CurrencyID));
        $('#cboUnit').val(parseInt(oProformaInvoice.UnitID));
        $('#cboBankAccount').val(parseInt(oProformaInvoice.TransferBankAccountID));
        $('#cboDeliveryTerm').val(parseInt(oProformaInvoice.DeliveryTermInInt));
        $('#cboPaymentTerm').val(parseInt(oProformaInvoice.PaymentTermInInt));
        $('#txtOrigin').val(oProformaInvoice.Origin);
        $('#txtPortOfLoadingSea').val(oProformaInvoice.PortOfLoadingSea);
        $('#txtPortOfLoadingAir').val(oProformaInvoice.PortOfLoadingAir);
        $('#txtApplicant').val(oProformaInvoice.ApplicantName);
        $('#txtNote').val(oProformaInvoice.Note);

        $('#txtCauseOfDiscount').val('');
        $('#txtCauseOfAddition').val('');
        $('#txtGrossAmount').val(formatPrice(oProformaInvoice.GrossAmount,2));
        $('#txtDiscountAmount').val(formatPrice(oProformaInvoice.DiscountAmount,2));
        $('#txtDiscountInPercentage').val(oProformaInvoice.DiscountInPercentageInSt);
        $('#txtAdditionalAmount').val(formatPrice(oProformaInvoice.AdditionalAmount,2));
        $('#txtAdditionalInPercentage').val(oProformaInvoice.AdditionalInPercentageInSt);
        $('#txtNetAmount').val(formatPrice(oProformaInvoice.NetAmount,2));
        RefreshListDetails(oProformaInvoice.ProformaInvoiceDetails);
        RefreshRequiredDoc(oProformaInvoice.ProformaInvoiceRequiredDocs);
        RefreshPITermsAndCondition(oProformaInvoice.ProformaInvoiceTermsAndConditions);
    }

    function RefreshControlLayout()
    {
        debugger;
        $('#txtCauseOfDiscount,#txtDiscountAmount,#txtDiscountInPercentage,#txtCauseOfAddition,#txtAdditionalAmount,#txtAdditionalInPercentage,#txtApplicant,#btnApplicantClear,#btnApplicantPicker').prop('disabled',true);
        if(parseInt($('#divProformaInvoice').data('ClientOperationSetting').ClientOperationSettingID)>0 && parseInt($('#divProformaInvoice').data('ClientOperationSetting').Value)==8)//if applicant format
        {
            $('#txtCauseOfDiscount,#txtDiscountAmount,#txtDiscountInPercentage,#txtCauseOfAddition,#txtAdditionalAmount,#txtAdditionalInPercentage,#txtApplicant,#btnApplicantClear,#btnApplicantPicker').prop('disabled',false);
            $('#lblUnitColumnCaption').html('Buyer');
            //hide column
            $('#tblProformaInvoiceDetail').datagrid('hideColumn', 'BuyerCommissionInPercent');
            $('#tblProformaInvoiceDetail').datagrid('hideColumn', 'BuyerCommission');
            $('#tblProformaInvoiceDetail').datagrid('hideColumn', 'AdjustAdditon');
            $('#tblProformaInvoiceDetail').datagrid('hideColumn', 'AdjustDeduction');
        }
    }

    function GetDetails()
    {
        var oPIDetails = $('#tblProformaInvoiceDetail').datagrid('getRows');
        for(var i =0;i<oPIDetails.length>0;i++)
        {
            oPIDetails[i].ShipmentDate = new Date(oPIDetails[i].ShipmentDateInString);
        }
        return oPIDetails;
    }

    function RefreshObject()
    {
        var oTempProformaInvoice = $('#divProformaInvoice').data('ProformaInvoice');
        var oProformaInvoice= {
            ProformaInvoiceID : parseInt(oTempProformaInvoice.ProformaInvoiceID),
            PINo : $.trim($('#txtPINo').val()),
            IssueDate : $('#txtIssueDate').datebox('getValue'),
            PIStatusInInt : parseInt(oTempProformaInvoice.PIStatusInInt),
            BuyerID  : parseInt($('#divProformaInvoice').data('BuyerID')),
            LCFavorOf  : parseInt($('#cboFavorOf').val()),
            TransferBankAccountID  : parseInt($('#cboBankAccount').val()),
            UnitID  : parseInt($('#cboUnit').val()),
            CurrencyID  : parseInt($('#cboCurrency').val()),
            PaymentTermInInt : parseInt($('#cboPaymentTerm').val()),
            Origin : $.trim($('#txtOrigin').val()),
            DeliveryTermInInt : parseInt($('#cboDeliveryTerm').val()),
            PortOfLoadingAir : $.trim($('#txtPortOfLoadingAir').val()),
            PortOfLoadingSea : $.trim($('#txtPortOfLoadingSea').val()),
            Note : $.trim($('#txtNote').val()),
            ApplicantID : parseInt($('#divProformaInvoice').data('ApplicantID')),
            GrossAmount : parseFloat(icsRemoveComma($('#txtGrossAmount').val())),
            DiscountAmount : parseFloat(icsRemoveComma($('#txtDiscountAmount').val())),
            AdditionalAmount : parseFloat(icsRemoveComma($('#txtAdditionalAmount').val())),
            NetAmount : parseFloat(icsRemoveComma($('#txtNetAmount').val())),
            CauseOfAddition:$.trim($('#txtCauseOfAddition').val()),
            CauseOfDiscount:$.trim($('#txtCauseOfDiscount').val()),
            BUID:parseInt(sessionStorage.getItem('BUID')),
            ProformaInvoiceDetails : GetDetails(),
            ProformaInvoiceRequiredDocs : $('#tblPIRequiredDoc').datagrid('getRows'),
            ProformaInvoiceTermsAndConditions : $('#tblPITermsAndCondition').datagrid('getRows')
        };
        return oProformaInvoice;
    }

    function ValidateInput()
    {
        var nBuyerID = $('#divProformaInvoice').data('BuyerID');
        if(parseInt(nBuyerID)<=0)
        {
            alert("Please select an Buyer!");
            $('#txtBuyerName').focus();
            return false;
        }
        var sIssueDate = $('#txtIssueDate').datebox('getValue');
        if(sIssueDate===null || sIssueDate==="")
        {
            alert("Please select Issue Date!");
            $('#txtIssueDate').focus();
            return false;
        }
        if( parseInt($('#cboFavorOf').val()) <=0)
        {
            alert("Please select LC FavorOf!");
            $('#cboFavorOf').focus();
            return false;
        }
        if( parseInt($('#cboCurrency').val()) <=0)
        {
            alert("Please select Currency!");
            $('#cboCurrency').focus();
            return false;
        }
        if( parseInt($('#cboUnit').val()) <=0)
        {
            alert("Please select M. Unit!");
            $('#cboUnit').focus();
            return false;
        }
        if( parseInt($('#cboBankAccount').val()) <=0)
        {
            alert("Please select Bank Account!");
            $('#cboBankAccount').focus();
            return false;
        }
        if( parseInt($('#cboDeliveryTerm').val()) <=0)
        {
            alert("Please select Delivery Term!");
            $('#cboDeliveryTerm').focus();
            return false;
        }
        if( parseInt($('#cboPaymentTerm').val()) <=0)
        {
            alert("Please select Payment Term!");
            $('#cboPaymentTerm').focus();
            return false;
        }
        if($.trim($('#txtOrigin').val()) === null ||  $.trim($('#txtOrigin').val())==="")
        {
            alert("Please Enter Origin Name!");
            $('#txtOrigin').focus();
            return false;
        }
        if($.trim($('#txtPortOfLoadingSea').val()) === null ||  $.trim($('#txtPortOfLoadingSea').val())==="")
        {
            alert("Please Enter Loading Port(Sea)!");
            $('#txtPortOfLoadingSea').focus();
            return false;
        }
        if($.trim($('#txtPortOfLoadingAir').val()) === null ||  $.trim($('#txtPortOfLoadingAir').val())==="")
        {
            alert("Please Enter Loading Port(Air)!");
            $('#txtPortOfLoadingAir').focus();
            return false;
        }
        var oPIDetails = $('#tblProformaInvoiceDetail').datagrid('getRows');
        if(oPIDetails.length <=0)
        {
            alert("Please Add Proforma Invoice Details");
            return false;
        }
        for(var i = 0;i<oPIDetails.length;i++)
        {
            if(parseInt(oPIDetails[i].Quantity)<=0)
            {
                alert("PI quantity should be grater than zero of "+oPIDetails[i].StyleNo);
                return false;
            }
            if(parseInt(oPIDetails[i].Quantity) > parseInt(oPIDetails[i].OrderRecapQty))
            {
                alert(" PI Quantity Should be less than or Equal Recap Qty of "+oPIDetails[i].StyleNo);
                return false;
            }
            if(parseFloat(oPIDetails[i].UnitPrice)<=0)
            {
                alert("unit Price Should be greater than  0 "+oPIDetails[i].StyleNo);
                return false;
            }
        }

        var oPITermsAndConditions = $('#tblPITermsAndCondition').datagrid('getRows');
        if(oPITermsAndConditions.length <=0)
        {
            alert("Please Add Proforma Invoice Terms And Condition");
            return false;
        }

        var oPIRequiredDocs = $('#tblPIRequiredDoc').datagrid('getRows');
        if(oPIRequiredDocs.length <=0)
        {
            alert("Please Add Required Document of  Proforma Invoice");
            return false;
        }
        return true;
    }

    $('#btnCommit').click(function(){
        endEditing();
        endEditingTC();
        if(!ValidateInput()) return;
        var oProformaInvoice=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/ProformaInvoice/AcceptProformaInvoiceRevise",
            traditional: true,
            data:  JSON.stringify(oProformaInvoice),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oProformaInvoice= jQuery.parseJSON(data);
                if (oProformaInvoice.ErrorMessage=="" || oProformaInvoice.ErrorMessage==null)
                {
                    alert("Data Saved sucessfully");
                    var oProformaInvoices = sessionStorage.getItem("ProformaInvoices");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oProformaInvoices != null)
                    {
                        oProformaInvoices = jQuery.parseJSON(oProformaInvoices);
                    }
                    else {
                        oProformaInvoices = [];
                    }
                    if (nIndex != -1) {
                        oProformaInvoices[nIndex] = oProformaInvoice;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oProformaInvoices.length);
                        oProformaInvoices.push(oProformaInvoice);
                    }
                    sessionStorage.setItem("ProformaInvoices", JSON.stringify(oProformaInvoices));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else
                {
                    alert(oProformaInvoice.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $('#btnRemovePIDetail').click(function(){
        var oPIDetail =$('#tblProformaInvoiceDetail').datagrid('getSelected');
        if(oPIDetail==null)
        {
            alert("Select At least One item !");
            return;
        }
        var SelectedRowIndex=$('#tblProformaInvoiceDetail').datagrid('getRowIndex',oPIDetail);
        if (!confirm("Confirm to Delete?")) return ;
        $('#tblProformaInvoiceDetail').datagrid('deleteRow',SelectedRowIndex);
        RefreshTotal();
    });

    $('#btnRefreshPIDetail').click(function(){
        endEditing();
        var oPIDetails = $('#tblProformaInvoiceDetail').datagrid('getRows');
        RefreshListDetails(oPIDetails);
        RefreshTotal();
    });

    $('#btnRemoveTermsAndCondition').click(function(){
        var oPITermsAndCondition =$('#tblPITermsAndCondition').datagrid('getSelected');
        if(oPITermsAndCondition ==null)
        {
            alert("Select At least One item !");
            return;
        }
        var SelectedRowIndex=$('#tblPITermsAndCondition').datagrid('getRowIndex',oPITermsAndCondition );
        if (!confirm("Confirm to Delete?")) return ;
        $('#tblPITermsAndCondition').datagrid('deleteRow',SelectedRowIndex);
    });

    $('#btnRefreshTermsAndCondition').click(function(){
        var oPITermsAndConditions = $('#tblPITermsAndCondition').datagrid('getRows');
        if(oPITermsAndConditions.length>0)
        {
            RefreshPITermsAndCondition(oPITermsAndConditions);
        }
    });

    $('#btnRequiredDocDelete').click(function(){
        var oPIRequiredDoc =$('#tblPIRequiredDoc').datagrid('getSelected');
        if(oPIRequiredDoc ==null)
        {
            alert("Select At least One item !");
            return;
        }
        var SelectedRowIndex=$('#tblPIRequiredDoc').datagrid('getRowIndex',oPIRequiredDoc );
        if (!confirm("Confirm to Delete?")) return ;
        $('#tblPIRequiredDoc').datagrid('deleteRow',SelectedRowIndex);
    });

    $('#btnClose').click(function(){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    //Discount Calculation
    $('#txtDiscountAmount').keyup(function(e){
        var nGrossAmount = parseFloat(icsRemoveComma($('#txtGrossAmount').val()));
        var nDiscountAmount = parseFloat(icsRemoveComma($('#txtDiscountAmount').val()));
        var nDiscountPercentage = parseFloat(parseFloat(nDiscountAmount)*100 / parseFloat(nGrossAmount));
        $('#txtDiscountInPercentage').val(formatPrice(nDiscountPercentage));
        $('#txtNetAmount').val(formatPrice(parseFloat( parseFloat(nGrossAmount)+ parseFloat(icsRemoveComma($('#txtAdditionalAmount').val()))- parseFloat(nDiscountAmount))));
    });

    $('#txtDiscountInPercentage').keyup(function(e){
        var nGrossAmount = parseFloat(icsRemoveComma($('#txtGrossAmount').val()));
        var nDiscountPercent = parseFloat(icsRemoveComma($('#txtDiscountInPercentage').val()));
        var nDiscountAmount = parseFloat(parseFloat(nDiscountPercent)*parseFloat(nGrossAmount) / parseFloat(100));
        $('#txtDiscountAmount').val(formatPrice(nDiscountAmount));
        $('#txtNetAmount').val(formatPrice(parseFloat( parseFloat(nGrossAmount)+ parseFloat(icsRemoveComma($('#txtAdditionalAmount').val()))- parseFloat(nDiscountAmount))));
    });

    //Additional Charge Calculation
    $('#txtAdditionalAmount').keyup(function(e){
        var nGrossAmount = parseFloat(icsRemoveComma($('#txtGrossAmount').val()));
        var nAdditionalAmount = parseFloat(icsRemoveComma($('#txtAdditionalAmount').val()));
        var nAdditionalPercentage = parseFloat(parseFloat(nAdditionalAmount)*100 / parseFloat(nGrossAmount));
        $('#txtAdditionalInPercentage').val(formatPrice(nAdditionalPercentage));
        $('#txtNetAmount').val(formatPrice(parseFloat(parseFloat(nGrossAmount)+ parseFloat(nAdditionalAmount))- parseFloat(icsRemoveComma($('#txtDiscountAmount').val()))));
    });

    $('#txtAdditionalInPercentage').keyup(function(e){
        var nGrossAmount = parseFloat(icsRemoveComma($('#txtGrossAmount').val()));
        var nAdditionalPercent = parseFloat(icsRemoveComma($('#txtAdditionalInPercentage').val()));
        var nAdditionalAmount = parseFloat(parseFloat(nAdditionalPercent)*parseFloat(nGrossAmount) / parseFloat(100));
        $('#txtAdditionalAmount').val(formatPrice(nAdditionalAmount));
        $('#txtNetAmount').val(formatPrice(parseFloat(parseFloat(nGrossAmount)+ parseFloat(nAdditionalAmount))- parseFloat(icsRemoveComma($('#txtDiscountAmount').val()))));
    });

    var editIndex = undefined;
    function endEditing(){
        if (editIndex == undefined){return true}
        if ($('#tblProformaInvoiceDetail').datagrid('validateRow', editIndex)){
            $('#tblProformaInvoiceDetail').datagrid('endEdit', editIndex);
            $('#tblProformaInvoiceDetail').datagrid('selectRow',editIndex);
            var oProformaInvoiceDetail=$('#tblProformaInvoiceDetail').datagrid('getSelected');
            if(parseInt($('#divProformaInvoice').data('ClientOperationSetting').ClientOperationSettingID)>0 && parseInt($('#divProformaInvoice').data('ClientOperationSetting').Value)!=8)//if not applicant format / only default format
            {
                oProformaInvoiceDetail.BuyerCommission=parseFloat(parseFloat(oProformaInvoiceDetail.FOB) * parseFloat(oProformaInvoiceDetail.BuyerCommissionInPercent)/100);
                oProformaInvoiceDetail.AdjustAdditon = 0;
                oProformaInvoiceDetail.AdjustDeduction = 0;
                if(parseFloat(oProformaInvoiceDetail.BuyerCommission)>0)
                {
                    oProformaInvoiceDetail.UnitPrice = parseFloat(parseFloat(oProformaInvoiceDetail.FOB) - parseFloat(oProformaInvoiceDetail.BuyerCommission)+parseFloat(oProformaInvoiceDetail.AdjustAdditon)-parseFloat(oProformaInvoiceDetail.AdjustDeduction));
                }
                else
                {
                    var nAdjustRate = (parseFloat(oProformaInvoiceDetail.UnitPrice)-parseFloat(oProformaInvoiceDetail.FOB));
                    if(nAdjustRate>=0)
                    {
                        oProformaInvoiceDetail.AdjustAdditon = parseFloat(nAdjustRate);
                    }
                    else
                    {
                        oProformaInvoiceDetail.AdjustDeduction = (parseFloat(nAdjustRate) *(-1));
                    }
                }
            }
            oProformaInvoiceDetail.Amount = parseFloat(parseFloat(oProformaInvoiceDetail.UnitPrice) * parseFloat(oProformaInvoiceDetail.Quantity));
            $('#tblProformaInvoiceDetail').datagrid('updateRow',{index: editIndex,	row: oProformaInvoiceDetail});
            RefreshTotal();
            editIndex  = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }

    function onClickRow(index){
        if (editIndex != index){
            if (endEditing())
            {
                $('#tblProformaInvoiceDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex  = index;
            }
            else
            {
                $('#tblProformaInvoiceDetail').datagrid('selectRow', editIndex);
            }
        }
    }

    var editTCIndex = undefined;
    function endEditingTC(){
        if (editTCIndex == undefined){return true}
        if ($('#tblPITermsAndCondition').datagrid('validateRow', editTCIndex)){
            $('#tblPITermsAndCondition').datagrid('endEdit', editTCIndex);
            editTCIndex  = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }

    function onClickRowTC(index){
        if (editTCIndex != index){
            if (endEditingTC())
            {
                $('#tblPITermsAndCondition').datagrid('selectRow', index).datagrid('beginEdit', index);
                editTCIndex  = index;
            }
            else
            {
                $('#tblPITermsAndCondition').datagrid('selectRow', editTCIndex);
            }
        }
    }

    function RefreshTotal()
    {
        var nTotalQty = 0; var nTotalAmount=0;
        var oPIDetails = $('#tblProformaInvoiceDetail').datagrid('getRows');
        if(oPIDetails.length>0)
        {
            for(var i =0;i< oPIDetails.length;i++)
            {
                nTotalQty = (nTotalQty + parseFloat(oPIDetails[i].Quantity));
                nTotalAmount = (nTotalAmount  + parseFloat(parseFloat(oPIDetails[i].Quantity) * parseFloat(oPIDetails[i].UnitPrice)));
            }
        }

        $('#lblTotalQty').text(formatPricewithoutdecimal(nTotalQty));
        $('#txtGrossAmount').val(formatPrice4digit(nTotalAmount,0));
        if(parseFloat(icsRemoveComma($('#txtDiscountInPercentage').val()))>0 && nTotalAmount>0)//calculate discount
        {
            var nDiscountAmount = parseFloat(parseFloat(icsRemoveComma($('#txtDiscountInPercentage').val()))*parseFloat(nTotalAmount) / parseFloat(100));
            $('#txtDiscountAmount').val(formatPrice(nDiscountAmount));
        }
        if(parseFloat(icsRemoveComma($('#txtAdditionalInPercentage').val()))>0 && _nTotalAmount>0)//calculate additional
        {
            var nAdditionalAmount = parseFloat(parseFloat(icsRemoveComma($('#txtAdditionalInPercentage').val()))*parseFloat(nTotalAmount) / parseFloat(100));
            $('#txtAdditionalAmount').val(formatPrice(nAdditionalAmount));
        }
        //calculate net amount
        $('#txtNetAmount').val(formatPrice(parseFloat(parseFloat(nTotalAmount)+ parseFloat(icsRemoveComma($('#txtAdditionalAmount').val())))- parseFloat(icsRemoveComma($('#txtDiscountAmount').val()))));
    }

    function RefreshListDetails(oProformaInvoiceDetails)
    {
        data=oProformaInvoiceDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblProformaInvoiceDetail').datagrid('loadData',data);
    }

    function RefreshPITermsAndCondition(oPITermsAndConditions)
    {
        data=oPITermsAndConditions;
        data={"total":""+data.length+"","rows":data};
        $('#tblPITermsAndCondition').datagrid('loadData',data);
    }

    function RefreshRequiredDoc(oPIRequriedDocs)
    {
        data=oPIRequriedDocs;
        data={"total":""+data.length+"","rows":data};
        $('#tblPIRequiredDoc').datagrid('loadData',data);
    }

    //Start Pick Items
    $("#txtBuyerName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code === 13) // Enter Press
        {
            var sBuyerName = $.trim($('#txtBuyerName').val());
            if(sBuyerName===null || sBuyerName==="")
            {
                alert("Please enter with Buyer Name!");
                return;
            }
            PickBuyer(sBuyerName);
        }
    });
    $("#btnBuyerPicker").click(function () {
        PickBuyer("");
    });
    $("#btnBuyerClear").click(function () {
        $('#txtBuyerName').val('');
        $('#txtBuyerName').removeClass('fontColorOfPickItem');
        $('#divProformaInvoice').data('BuyerID', 0);
    });
    $('#txtBuyerName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $('#txtBuyerName').val('');
            $('#txtBuyerName').removeClass('fontColorOfPickItem');
            $('#divProformaInvoice').data('BuyerID', 0);
        }
    });
    function PickBuyer(sContractorName) {
        var oContractor = {
            Params: '2' + '~' + $.trim(sContractorName+'~'+sessionStorage.getItem("BUID"))
        };
        var obj = {
            BaseAddress : sessionStorage.getItem('BaseAddress'),
            Object : oContractor,
            ControllerName : "Contractor",
            ActionName : "ContractorSearchByNameType",
            IsWinClose : false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ContractorID", title: "Code", width: 70, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBuyers',
                        winclass: 'clsBuyer',
                        winwidth: 500,
                        winheight: 460,
                        tableid: 'tblBuyers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Buyer List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else {
                alert("Sorry, No Buyer Found.");
            }
        });
    }

    $("#txtApplicant").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code === 13) // Enter Press
        {
            var sApplicant = $.trim($('#txtApplicant').val());
            if(sApplicant===null || sApplicant==="")
            {
                alert("Please enter with Applicant Name!");
                return;
            }
            PickApplicant(sApplicant);
        }
    });
    $("#btnApplicantPicker").click(function () {
        PickApplicant("");
    });
    $("#btnApplicantClear").click(function () {
        $('#txtApplicant').val('');
        $('#txtApplicant').removeClass('fontColorOfPickItem');
        $('#divProformaInvoice').data('ApplicantID', 0);
    });
    $('#txtApplicant').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $('#txtApplicant').val('');
            $('#txtApplicant').removeClass('fontColorOfPickItem');
            $('#divProformaInvoice').data('ApplicantID', 0);
        }
    });
    function PickApplicant(sContractorName) {
        var oContractor = {
            Params: '5' + '~' + $.trim(sContractorName+'~'+sessionStorage.getItem("BUID"))
        };
        var obj = {
            BaseAddress : sessionStorage.getItem('BaseAddress'),
            Object : oContractor,
            ControllerName : "Contractor",
            ActionName : "ContractorSearchByNameType",
            IsWinClose : false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ContractorID", title: "Code", width: 70, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winApplicants',
                        winclass: 'clsApplicant',
                        winwidth: 500,
                        winheight: 460,
                        tableid: 'tblApplicants',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Applicant List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else {
                alert("Sorry, No Buyer Found.");
            }
        });
    }

    $('#btnPickOrder').click(function(){
        var nBUID = parseInt(sessionStorage.getItem('BUID'));
        var nBuyerID = parseInt($('#divProformaInvoice').data('BuyerID'));
        var oTempProformaInvoice = $('#divProformaInvoice').data('ProformaInvoice');

        if(nBUID<=0)
        {
            alert('Invalid Business Unit!');
            return;
        }

        if(nBuyerID<=0)
        {
            alert('Please select an Buyer!');
            return;
        }

        var oProformaInvoice =  {
            BUID : parseInt(nBUID),
            BuyerID : parseInt(nBuyerID),
            ProformaInvoiceID : parseInt(oTempProformaInvoice.ProformaInvoiceID)
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oProformaInvoice,
            ControllerName: "ProformaInvoice",
            ActionName: "GetsBuyerWiseOrderRecap",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].OrderRecapID > 0) {
                    var tblColums = []; var oColumn = { field: "StyleNo", title: "Style No", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "OrderRecapNo", title: "Recap No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "DeptName", title: "Dept", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "SessionName", title: "Session", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Product Name", width:80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShipmentDateInString", title: "Shipment Date", width:80, align: "center" }; tblColums.push(oColumn);
                    oColumn = { field: "UnitPriceInString", title: "Unit Price", width:80, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "TotalQuantityInString", title: "Order Qty", width:100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "AmountInString", title: "Amount", width:100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "PIAttachQty", title: "PI Attach Qty", width:100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "YetToAttachQty", title: "Yet To Attach", width:100, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winOrderRecaps',
                        winclass: 'clsOrderRecap',
                        winwidth: 800,
                        winheight: 500,
                        tableid: 'tblOrderRecaps',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'SessionName',
                        searchingbyfieldCaption:'Search By Season Name',
                        windowTittle: 'Order Recap List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    $('#btnAddTermsAndConditon').click(function(){
        var oTermsAndCondition = {
            Note: "1,2", //common and (PI or SC or Bill) Terms
            BUID: sessionStorage.getItem("BUID")
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oTermsAndCondition,
            ControllerName: "ExportTermsAndCondition",
            ActionName: "GetsByType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (parseInt(response.objs[0].ExportTermsAndConditionID) > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Clause", title: "Terms And Condition", width: 400, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Remarks", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winTermsAndConditions',
                        winclass: 'clsTermsAndCondition',
                        winwidth: 550,
                        winheight: 500,
                        tableid: 'tblTermsAndConditions',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'Clause',
                        searchingbyfieldCaption:'Search By Clause',
                        windowTittle: 'Terms & Condition List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    $('#btnRequiredDocAdd').click(function(){
        var oProformaInvoice = {  };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oProformaInvoice,
            ControllerName: "ProformaInvoice",
            ActionName: "GetDocumentTypes",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].id> 0) {
                    var tblColums = []; var oColumn = { field: "Value", title: "Document Type", width: 250, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winDocumentTypes',
                        winclass: 'clsDocumentType',
                        winwidth: 300,
                        winheight: 460,
                        tableid: 'tblDocumentTypes',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'Value',
                        windowTittle: 'Document Type List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else
            {
                alert("Data Not Fount");
                return;
            }
        });
    });

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function ()
        {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    function SetPickerValueAssign(oPickerobj)
    {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid === 'winBuyers') {
            if (oreturnObj != null && parseInt(oreturnObj.ContractorID) > 0)
            {
                $('#txtBuyerName').val(oreturnObj.Name);
                $('#txtBuyerName').addClass('fontColorOfPickItem');
                $('#divProformaInvoice').data('BuyerID', parseInt(oreturnObj.ContractorID));
                $('#txtBuyerName').focus();
            }
        }
        else if (oPickerobj.winid === 'winApplicants') {
            if (oreturnObj != null && parseInt(oreturnObj.ContractorID) > 0)
            {
                $('#txtApplicant').val(oreturnObj.Name);
                $('#txtApplicant').addClass('fontColorOfPickItem');
                $('#divProformaInvoice').data('ApplicantID', parseInt(oreturnObj.ContractorID));
                $('#txtApplicant').focus();
            }
        }
        else if (oPickerobj.winid == 'winOrderRecaps') {
            if (oreturnobjs.length>0)
            {
                var oProformaInvoice = $('#divProformaInvoice').data('ProformaInvoice');
                for(var i =0;i<oreturnobjs.length;i++)
                {
                    var oPIDetails = $('#tblProformaInvoiceDetail').datagrid('getRows');
                    if(!ICS_IsExist(oPIDetails,'OrderRecapID', oreturnobjs[i].OrderRecapID))
                    {
                        var oPIDetail ={
                            ProformaInvoiceDetailID : 0,
                            ProformaInvoiceID : parseInt(oProformaInvoice.ProformaInvoiceID),
                            OrderRecapID : oreturnobjs[i].OrderRecapID,
                            TechnicalSheetID : oreturnobjs[i].TechnicalSheetID,
                            ShipmentDate : oreturnobjs[i].ShipmentDate,
                            ShipmentDateInString : oreturnobjs[i].ShipmentDateInString,
                            SessionName : oreturnobjs[i].SessionName,
                            Quantity  : oreturnobjs[i].TotalQuantity,
                            FOB  : oreturnobjs[i].UnitPrice,
                            BuyerCommissionInPercent : 0,
                            BuyerCommission : 0,
                            AdjustAdditon : 0,
                            AdjustDeduction : 0,
                            UnitPrice : oreturnobjs[i].UnitPrice,
                            Amount : (oreturnobjs[i].TotalQuantity * oreturnobjs[i].UnitPrice),
                            OrderRecapNo : oreturnobjs[i].OrderRecapNo,
                            StyleNo : oreturnobjs[i].StyleNo,
                            ProductName : oreturnobjs[i].ProductName,
                            FabricName : oreturnobjs[i].FabricName,
                            OrderRecapQty : oreturnobjs[i].TotalQuantity,
                            DEPT : oreturnobjs[i].Dept,
                            DeptName : oreturnobjs[i].DeptName
                        };
                        $('#tblProformaInvoiceDetail').datagrid('appendRow',oPIDetail);
                    }
                }
                RefreshTotal();
            }
        }
        else if(oPickerobj.winid =='winTermsAndConditions')
        {
            if (oreturnobjs != null && oreturnobjs.length > 0)
            {
                var oProformaInvoice = $('#divProformaInvoice').data('ProformaInvoice');
                for(var i =0;i<oreturnobjs.length;i++)
                {
                    var oPITermsAndConditions = $('#tblPITermsAndCondition').datagrid('getRows');
                    if(!ICS_IsExist(oPITermsAndConditions,'TermsAndCondition', oreturnobjs[i].Clause))
                    {
                        var oPITAndC ={
                            ProformaInvoiceTermsAndConditionID : 0,
                            ProformaInvoiceID : parseInt(oProformaInvoice.ProformaInvoiceID),
                            TermsAndCondition : oreturnobjs[i].Clause
                        };
                        $('#tblPITermsAndCondition').datagrid('appendRow',oPITAndC);
                    }
                }
            }
        }
        else if (oPickerobj.winid == 'winDocumentTypes')
        {
            if (oreturnobjs != null && oreturnobjs.length > 0)
            {
                var oProformaInvoice = $('#divProformaInvoice').data('ProformaInvoice');
                for(var i = 0; i<oreturnobjs.length;i++)
                {
                    var oPIRequiredDocs = $('#tblPIRequiredDoc').datagrid('getRows');
                    if(!ICS_IsExist(oPIRequiredDocs,'DocTypeInInt', oreturnobjs[i].id))
                    {
                        var oPIRequiredDoc ={
                            ProformaInvoiceRequiredDocID : 0,
                            ProformaInvoiceID : parseInt(oProformaInvoice.ProformaInvoiceID),
                            DocType : parseInt(oreturnobjs[i].id),
                            DocTypeInInt : parseInt(oreturnobjs[i].id),
                            DocTypeInString : oreturnobjs[i].Value
                        };
                        $('#tblPIRequiredDoc').datagrid('appendRow',oPIRequiredDoc);
                    }
                }
            }
        }
    }
    //End Pick Item
</script>
