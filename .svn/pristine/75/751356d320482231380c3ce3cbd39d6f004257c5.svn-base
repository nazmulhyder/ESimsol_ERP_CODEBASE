@model IEnumerable<ESimSol.BusinessObjects.AttendanceDaily>
@{
    ViewBag.Title = "Monthly Attendance";
}

<div style="margin-left: 0px; height: 550px" class="menuMainCollectionTable">
    <table id="tblEmployees" title="Att. List" class="easyui-datagrid" style="width: 100%;
    height: 548px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true"
            autorowheight="false" toolbar="#toolbar">
        <thead>
            <tr>
                <th field="EmployeeCode" width="70px;">
                Code
                </th>
                <th field="EmployeeName" width="120px;">
                  Name
                </th>
                <th field="JoiningDateInString" width="60px;">
                    Joining
                </th>
                <th field="TotalWorkingDaySt" width="50px;">
                    WD
                </th>
                <th field="PresentDaySt" width="50px">
                    PD
                </th>
                <th field="DayOFFSt" width="50px;">
                    Off
                </th>
                <th field="HoliDaySt" width="50px;">
                    HD
                </th>
                <th field="LeaveSt" width="50px;">
                    LD
                </th>
                <th field="LeaveHalfShortSt" width="60px;">
                    Half/Short L
                </th>
                <th field="AbsentDaySt" width="50px;">
                    Absent
                </th>
                <th field="NoWorkSt" width="50px;">
                    NW
                </th>
                <th field="OvertimeInhourSt" width="50px;">
                    OT
                </th>
            </tr>
        </thead>
    </table>

    <div id="toolbar" style="height:auto;">
        @*<span id="regionDateFrom">
            <span>
                <select id="cboYear" style="width:70px;"></select>
            </span><span>
                <select id="cboMonth"></select>
            </span><span>
                <select id="cboDay" style="width:61px;"></select>
            </span>
        </span><span id="regionDateTo" style="padding-left: 10px;">
            <span style="padding-right: 5px;">
                To
            </span><span>
                <select id="cboEndYear"></select>
            </span><span>
                <select id="cboEndMonth"></select>
            </span><span>
                <select id="cboEndDay"></select>
            </span>
        </span>*@

        Date : <input id="dtStartDate" type="text" style="width: 11%" class="easyui-datebox" required="required" data-options="formatter:icsdateformat, parser:icsdateparser" />
        &nbsp; To &nbsp;
        <input id="dtEndDate" type="text" style="width: 11%" class="easyui-datebox" required="required" data-options="formatter:icsdateformat, parser:icsdateparser" />

        <input id="txtBusinessUnit_Collection" type="text" style="width:15%;" placeholder="Pick Business Unit" />
        <a id="btnBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
        <a id="btnResetBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

        <input id="txtLocation_Colection" style="width:15%;" placeholder="Pick Location" type="text" />
        <a id="btnLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
        <a id="btnResetLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

        <input id="txtDepartment_Collection" style="width:15%;" type="text" placeholder="Pick Department" />
        <a id="btnDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
        <a id="btnResetDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

        <br />

        <input id="txtDesignation_Collection" type="text" style="width:16%;" placeholder="Pick Designation" />
        <a id="btnDesignationPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
        <a id="btnResetDesignationPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

        <input id="txtSalaryScheme" type="text" style="width:17%;" placeholder="Type salary scheme name & enter" />
        <a id="btnSalaryScheme" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
        <a id="btnCSalaryScheme" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

        &nbsp; Group:
        <input id="txtEmployeeGroup" style="width:160px;" type="text" placeholder="Enter Group" />
        <input id="btnEmployeeGroupPicker" class="pick-btn" type="button" value="P" style="width:20px;" />
        <a id="btnEmployeeGroupPickerReset" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

        &nbsp; Block:
        <input id="txtEmployeeBlock" style="width:160px;" type="text" placeholder="Enter Block" />
        <input id="btnEmployeeBlockPicker" class="pick-btn" type="button" value="P" style="width:20px;" />
        <a id="btnEmployeeBlockPickerReset" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>



        <input id="txtEmployee_Collection" style="width:17%;" type="text" placeholder="Type Code & Enter" />
        <a id="btnEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
        <a id="btnCEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

        <input id="chkInWorkPlace" type="checkbox" />In Work Place
        <input id="chkDiscontinued" type="checkbox" /> Discontinued

        <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="Search()">Search</a>
        
        Print Type:
        <select id="cboPrintType" style="width:14%;"></select>
        <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
        <a id="btnPrintExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true"></a>
        <a id="btnExtraSearching" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Extra Searching</a>
    </div>

    <div id="winDayWiseAbsentPicker" class="easyui-window winstyle" title="Day Wise Absent" style="width:25%; height:180px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <fieldset>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                    <tr>
                        <td style="text-align: right">
                            Days :
                        </td>
                        <td style="width: 150px;">
                            <input id="txtDays" type="text" style="width: 150px" />
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right">
                            Date Before :
                        </td>
                        <td style="width: 150px;">
                            <input id="txtSelectDate" type="text" style="width: 150px" class="easyui-datebox"
                                    required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                </table>
            </fieldset>
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                    <tr>
                        <td style="width: 440px; text-align: right"></td>
                        <td style="width: 50px">
                            <a id="btnPrintDayWiseAbsent" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print"
                                plain="true">Print</a>
                        </td>
                        <td style="width: 50px">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true"
                                onclick="Close()">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="locationtree" data-options="checkbox:true" singleselect="false"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Present Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Permanent Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            BU :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboBU" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" style="width:130px; float:left;" class="selection-search cboReset"></select>
                            &nbsp; Group:
                            <input id="txtEmployeeGroupAdv" style="width:90px;" type="text" />
                            <input id="btnEmployeeGroupPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                            <input id="btnEmployeeGroupResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Category:
                        </td>
                        <td class="td-AdvSearch-Level">
                            <div>
                                <select id="cboCategory" style="width:130px; float:left;"></select>
                                &nbsp; Gender :
                                <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch" style="width:130px; float:left;" class="selection-search cboReset"></select>

                            &nbsp; Block:
                            <input id="txtEmployeeBlockAdv" style="width:90px;" type="text" />
                            <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                            <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 75px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                            <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
            </div>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
            </div>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" >Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winExtraSearching" class="easyui-window winstyle" title="Extra Searching Criteria" style="width:25%;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <fieldset>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                    <tr>
                        <td style="text-align: right">
                            
                        </td>
                        <td>
                            <select id="cboCriteriaType" style="width:195px;">
                                <option value="1">Between</option>
                                <option value="2">Equal</option>
                                <option value="3">Before/Less</option>
                                <option value="4">After/Greater</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right">
                            In Time :
                        </td>
                        <td>
                            <input id="tpStartInTime" class="easyui-timespinner" style="width:80px;" required="required" data-options="showSeconds:false" />
                            <span id="spEndInTime">
                                &nbsp; TO &nbsp;
                                <input id="tpEndInTime" class="easyui-timespinner" style="width:80px;" required="required" data-options="showSeconds:false" />
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right">
                            Out Time :
                        </td>
                        <td >
                            <input id="tpStartOutTime" class="easyui-timespinner" style="width:80px;" required="required" data-options="showSeconds:false" />
                            <span id="spEndOutTime">
                                &nbsp; TO &nbsp;
                                <input id="tpEndOutTime" class="easyui-timespinner" style="width:80px;" required="required" data-options="showSeconds:false" />
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right">
                            Late :
                        </td>
                        <td>
                            <input id="txtStartLate" type="text" class="number" style="width:80px;" placeholder="min." />
                            <span id="spEndLate">
                                &nbsp; TO &nbsp;
                                <input id="txtEndLate" type="text" class="number" style="width:80px;" placeholder="min." />
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right">
                            Early :
                        </td>
                        <td>
                            <input id="txtStartEarly" type="text" class="number" style="width:80px;" placeholder="min." />
                            <span id="spEndEarly">
                                &nbsp; TO &nbsp;
                                <input id="txtEndEarly" type="text" class="number" style="width:80px;" placeholder="min." />
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right">
                            Days Count :
                        </td>
                        <td>
                            <input id="txtStartDaysCount" type="text" class="number" style="width:80px;" />
                            <span id="spEndDaysCount">
                                &nbsp; TO &nbsp;
                                <input id="txtEndDaysCount" type="text" class="number" style="width:80px;" />
                            </span>
                        </td>
                    </tr>
                </table>
            </fieldset>
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                    <tr>
                        <td style="width: 440px; text-align: right"></td>
                        <td style="width: 50px">
                            <a id="btnExtraSearchingPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel"
                               plain="true" onclick="ExtraSearching_XL()"></a>
                        </td>
                        <td style="width: 50px">
                            <a id="btnExtraSearchingClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

</div>

<style type="text/css">
    .lblStar {
        color: #ff0000;
        font-weight: bold;
    }

    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>

<script type="text/javascript">
    var _sTempString="";
    var _sBaseAddress="";
    var _sTempString="";
    var _oEmployees = [];
    var _sEmployeeIDs = "";
    var _oEmployee =null;
    var _oActiveEmployee = [];
    var _oInActiveEmployee = [];
    var oMonthlyAttendanceReports=[];

    var _sAttendanceSchemeID ="";
    var _sBusinessUnitIds = "";
    var _sDepartmentNames = "";
    var _sDepartmentIds = "";
    var _sDesignationNames = "";
    var _sDesignationIds = "";
    var _sSalarySchemeIDs = "";
    var _sBlockNames="";
    var _sBMMIDs="";

    var _nLastEmployeeID = 0;
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _oBusinessUnits=[];

    var _sLocationID = "";
    var _sGroupNames="";
    var _sGroupIDs="";
    var _sBlockNames="";
    var _sBlockIDs="";
    var _sBlockNamesAdv="";
    var _sBlockIDsAdv="";
    var _sGroupNamesAdv="";
    var _sGroupIDsAdv="";

    $(document).ready(function ()
    {
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        _oAURolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        //SetDateTime();
        //var oDate=new Date();
        //SetStartTime(oDate);
        //SetEndTime(oDate);
        $('#txtDays').numberbox({min:0, precision:0 });
        $('#txtSelectDate').datebox('setValue', icsdateformat(new Date()));
        PrintTypeObject();
        $('#btnPrintExcel').hide();
        InitializeAdvSearch();
        LoadBU();
        LoadCateGory(oEmployeeCategorys);

        $('#dtStartDate').datebox('setValue', icsdateformat(new Date()));
        $('#dtEndDate').datebox('setValue', icsdateformat(new Date()));
    });
    function LoadCateGory(oEmployeeCategorys)
    {
        $("#cboCategory").icsLoadCombo({
            List: oEmployeeCategorys,
            OptionValue: "Value",
            DisplayText: "Text"
        });
    }
    function LoadBU()
    {
        $('#cboBU_Collection').combobox({
            data:_oBusinessUnits,
            valueField:'BusinessUnitID',
            textField:'Name',
            multiple:true
        });
        $('#cboBU_Collection').combobox('setValue',  _oBusinessUnits.length>0?_oBusinessUnits[0].BusinessUnitID:0);
    }

    $('#cboPrintType').change(function (e)
    {
        if($('#cboPrintType').val()==6 || $('#cboPrintType').val()==7 || $('#cboPrintType').val()==8|| $('#cboPrintType').val()==9 ||$('#cboPrintType').val()==10||$('#cboPrintType').val()==16)
        {
            $('#btnPrintExcel').show();
            $('#btnPrint').hide();
        }
        else if($('#cboPrintType').val()==4) {
            $('#btnPrint').show();
            $('#btnPrintExcel').show();
        }
        else
        {
            $('#btnPrint').show();
            $('#btnPrintExcel').hide();
        }
    });

    $('#chkInWorkPlace').click(function (e)
    {
        if($('#chkInWorkPlace').is(":checked")== true)
        {
            $('#chkDiscontinued').prop('checked', false);
            RefreshList(_oActiveEmployee);
        }
        else
        {
            $('#chkInWorkPlace').prop('checked', false);
            $('#chkDiscontinued').prop('checked', false);
            RefreshList(oMonthlyAttendanceReports);
        }
    });

    $('#chkDiscontinued').click(function (e)
    {
        if($('#chkDiscontinued').is(":checked")== true)
        {
            $('#chkInWorkPlace').prop('checked', false);
            RefreshList(_oInActiveEmployee);
        }
        else
        {
            $('#chkInWorkPlace').prop('checked', false);
            $('#chkDiscontinued').prop('checked', false);
            RefreshList(oMonthlyAttendanceReports);
        }
    });

    /*---------------- emp Search Start click----------------*/

    function InitializeAdvSearch(){
        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                    {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                    {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
        $('#txtEmployeeGroupAdv').val("");
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDsAdv = "";
        _sGroupIDsAdv = "";
    }

    $("#btnEmployee").click(function () {
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            $("#lblRange1").show();
        }
        else
        {
            $("#lblRange1").hide();
        }
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }
        debugger
        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }

        var nBusinessUnitID = $("#cboBU").val();
        var nCategory=$('#cboCategory').val();
        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();

        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
           nEmployeeTypeID==0 && sGender=="None" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
           bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0
          && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBlockIDsAdv==""&& _sGroupIDsAdv=="")
        {
            alert("Please enter your selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                     sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                     bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                     sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                      +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBlockIDsAdv+"~"+_sGroupIDsAdv;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnEmployeePickerOk").click(function () {
        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length<=0) { alert("please select atleast one item");return; }
        var sEmpIDs="";
        var sEmpNames="";
        for(var i=0;i<oEmployees.length;i++)
        {
            sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
            sEmpNames=sEmpNames+oEmployees[i].Name+",";
        }
        _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
        sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
        $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
        $("#txtEmployee_Collection").val(sEmpNames);
        $("#winEmployeePicker").icsWindow('close');
        SearchByDepartmentAndDateRangeWithPasignation();
    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });

    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    /*-------------Start Business Unit Picker----------------*/
    $("#btnBusinessUnitPicker_Collection").click(function(e){
        BusinessUnitPicker();
    });

    $("#txtBusinessUnit_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            BusinessUnitPicker();
        }
    });

    function BusinessUnitPicker()
    {
        var oBusinessUnit={
            BusinessUnitID:0
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBusinessUnit,
            ControllerName: "BusinessUnit",
            ActionName: "GetsBusinessUnitWithPermission",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BusinessUnitID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBusinessUnit',
                        winclass:'clsBusinessUnit',
                        winwidth: 320,
                        winheight: 400,
                        tableid: 'tblBusinessUnit',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Business Unit List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBusinessUnitPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBusinessUnits=[];
            oBusinessUnits = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBusinessUnit')
            {
                if(oBusinessUnits!=null && oBusinessUnits.length>0)
                {
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sBusinessUnitName = "";
                    for(var i=0; i<oBusinessUnits.length; i++)
                    {
                        sBusinessUnitName+=oBusinessUnits[i].Name+",";
                        _sBusinessUnitIds+=oBusinessUnits[i].BusinessUnitID+",";
                    }

                    sBusinessUnitName=sBusinessUnitName.substring(0,sBusinessUnitName.length-1);
                    _sBusinessUnitIds=_sBusinessUnitIds.substring(0,_sBusinessUnitIds.length-1);
                    $("#txtBusinessUnit_Collection").val(sBusinessUnitName);
                }
                else
                {
                    alert("Please select a Business Unit.");
                }
            }
        });
    }

    $("#btnResetBusinessUnitPicker_Collection").click(function(e){
        $('#txtBusinessUnit_Collection').val("");
        _sBusinessUnitIds="";
    });
    /*-------------End Business Unit Picker----------------*/

    /*-------------Location Picker----------------*/
    var btnLocation="";
    $("#btnLocationPicker,#btnLocationPicker_Colection").click(function(e){
        btnLocation = $(this).attr("id");
        var sBusinessUnitIDs ="";
        var nBusinessUnitID=0;
        if(btnLocation=="btnLocationPicker")
        {
            nBusinessUnitID = $("#cboBU").val();
            sBusinessUnitIDs = String(nBusinessUnitID);
        }
        else{sBusinessUnitIDs=_sBusinessUnitIds;}
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        if(btnLocation=="btnLocationPicker")
        {
            var oLocation = $('#locationtree').tree('getSelected');
            if(oLocation!=null && oLocation.id>0){
                $("#winLocationPicker").icsWindow('close');
                _sLocationID=oLocation.id;
                $('#txtLocation').val(oLocation.text);
            }
            else{
                alert("Please select a location.");
            }
        }
        else
        {
            var oLocations = $('#locationtree').tree('getChecked');
            if(oLocations!=null && oLocations.length>0)
            {
                var LocationName="";
                for(var i=0; i<oLocations.length; i++)
                {
                    if(oLocations[i].id !=1)
                    {
                        LocationName+=oLocations[i].text+",";
                        _sLocationID+=oLocations[i].id+",";
                    }
                }

                LocationName=LocationName.substring(0,LocationName.length-1);
                _sLocationID=_sLocationID.substring(0,_sLocationID.length-1);
                $("#winLocationPicker").icsWindow('close');
                $('#txtLocation_Colection').val(LocationName);
            }
            else
            {
                alert("Please select a location.");
            }
        }
    });

    $('#txtLocation_Colection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sBusinessUnitIDs ="";
            sBusinessUnitIDs=_sBusinessUnitIds;
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };
            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker,#btnResetLocationPicker_Colection").click(function(e){
        $('#txtLocation').val("");
        $('#txtLocation_Colection').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){
        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){
        _sDepartmentNames = "";
        _sDepartmentIds= "";
        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentIds= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose,#btnDepartmentPickerClose_Collection").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
        $("#winDepartmentPicker_Collection").icsWindow('close');
    });

    $("#btnResetDepartmentPicker,#btnResetDepartmentPicker_Collection").click(function(e){
        $('#txtDepartment,#txtDepartment_Collection').val("");
        _sDepartmentIds="";
        _sDepartmentNames = "";
    });

    /*-------------Designation Picker----------------*/
    var btnDesignation="";
    $("#btnDesignationPicker,#btnDesignationPicker_Collection").click(function(e){
        btnDesignation = $(this).attr("id");
        DesignationPicker();
    });

    $("#txtDesignation_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            btnDesignation ="btnDesignationPicker_Collection";
            DesignationPicker();
        }
    });

    function DesignationPicker()
    {
        var oDesignation={
            DesignationID:0,
            Params: _sBusinessUnitIds+'~'+_sLocationID+'~'+ _sDepartmentIds
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            _sDesignationNames = "";
            _sDesignationIds = "";
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;
                    if(btnDesignation=="btnDesignationPicker_Collection"){bmultiplereturn=true;}

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oDesignations=[];

            if(btnDesignation=="btnDesignationPicker_Collection")
            {
                oDesignations = $('#'+oPickerobj.tableid).datagrid('getChecked');
            }
            else
            {
                var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
                oDesignations.push(oDesignation);
            }

            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignations!=null && oDesignations.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames+=oDesignations[i].Name+",";
                        _sDesignationIds+=oDesignations[i].DesignationID+",";
                    }

                    _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                    _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
                    if(btnDesignation=="btnDesignationPicker_Collection")
                    {
                        $("#txtDesignation_Collection").val(_sDesignationNames);
                    }
                    else
                    {
                        $("#txtDesignation").val(_sDesignationNames);
                    }
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker,#btnResetDesignationPicker_Collection").click(function(e){
        $('#txtDesignation').val("");
        $('#txtDesignation_Collection').val("");
        _sDesignationIds="";
        _sDesignationNames = "";
    });

    /*------------- Start Block Picker----------------*/

    $("#btnBlock").click(function(e){
        BlockPicker();
    });

    function BlockPicker()
    {
        var oBlockMachineMapping={
            ProductionProcessInt:0,
            DepartmentID:0,
            BlockName:""
        }
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlockMachineMapping,
            ControllerName: "BlockMachineMapping",
            ActionName: "BlockMachineMapping_Search",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BMMID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblShift',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'BlockName',
                        windowTittle: 'Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBlocks=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNames += oBlocks[i].BlockName+",";
                        _sBMMIDs += oBlocks[i].BMMID+",";

                    }
                    _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                    _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
                    $("#txtBlock").val(_sBlockNames);
                }
                else
                {
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetBlock").click(function(e){
        $('#txtBlock').val("");
        _sBlockNames="";
        _sBMMIDs = "";
    });

    $("#txtBlock").keypress(function(e){
        if (e.which == 13)
        {
            BlockPicker();
        }
    });
    /*------------- End Block Picker----------------*/

    /*---------------- emp Search End click ----------------*/

    /*---------------- emp Search Start keyprees----------------*/
    $('#txtEmployee_Collection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee_Collection").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
            SearchEmployeeByText(sCodeName);
        }
    });

    function SearchEmployeeByText(sEmpNameCode){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _sEmployeeIDs=oreturnObj.EmployeeID;
                    $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
                    $("#txtEmployee_Collection").val(oreturnObj.Name);
                    $("#winEmployeePicker").icsWindow('close');
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        _sEmployeeIDs=oreturnObj.EmployeeID;
                        $('#txtEmployee').data("EmployeeIDs",_sEmployeeIDs);
                        $("#txtEmployee_Collection").val(oreturnObj.Name);
                        $("#winEmployeePicker").icsWindow('close');
                    }
                }
            }
        });
    }

    $('#btnCEmployee').click(function (e)
    {
        document.getElementById("txtEmployee_Collection").value = "" ;
        $('#txtEmployeeName').data("EmployeeIDs","");
        _sEmployeeIDs = "";
    });

    /*---------------- emp Search Start keyprees----------------*/

    /*-------------Department Picker start Collection----------------*/
    $("#btnDepartmentPicker_Collection").click(function(e){
        DepartmentPicker();
    });

    $("#txtDepartment_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            DepartmentPicker();
        }
    });

    function DepartmentPicker()
    {
        $("#winDepartmentPicker_Collection").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree_Collection').tree({ data: [response.obj] });
                }
            }
        });
    }

    $("#btnDepartmentPickerOk_Collection").click(function(e){
        _sDepartmentNames = "";
        _sDepartmentIds= "";
        var oDepartments = $('#departmenttree_Collection').tree('getChecked');
        if(oDepartments!=null && oDepartments.length>0){
            $("#winDepartmentPicker_Collection").icsWindow('close');
            for(var i=0; i<oDepartments.length; i++)
            {
                _sDepartmentNames+=oDepartments[i].text+",";
                _sDepartmentIds+=oDepartments[i].id+",";
            }

            _sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
            _sDepartmentIds=_sDepartmentIds.substring(0,_sDepartmentIds.length-1);
            $("#txtDepartment_Collection").val(_sDepartmentNames);
        }
        else{
            alert("Please select a department.");
        }
    });

    function Search()
    {
        _oActiveEmployee=[];
        _oInActiveEmployee=[];
        //var dtDateFrom = icsdateformat(new Date(GenerateStartTimeInString()));
        //var dtDateTo = icsdateformat(new Date(GenerateEndTimeInString()));

        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');

        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }

        if(_sEmployeeIDs == "" && _sSalarySchemeIDs == "" && _sDepartmentIds == "" && _sDesignationIds ==""&& _sLocationID=="" && _sGroupIDs == "" && _sBlockIDs == "")
        {
            alert("Please select at least one searching criteria with date!");
            return;
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Compliance/MonthlyAttendanceReportSearch",
            traditional: true,
            data: JSON.stringify({sEmployeeIDs : _sEmployeeIDs,sBusinessUnitIds:_sBusinessUnitIds,sLocationID:_sLocationID,sDepartmentIds:_sDepartmentIds,sDesignationIds:_sDesignationIds,sSalarySchemeIDs:_sSalarySchemeIDs, DateFrom : dtDateFrom, DateTo : dtDateTo, sGroupIDs:_sGroupIDs, sBlockIDs:_sBlockIDs }),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                oMonthlyAttendanceReports=[];//declared globally

                oMonthlyAttendanceReports = jQuery.parseJSON(data);
                if (oMonthlyAttendanceReports.length>0 && oMonthlyAttendanceReports[0].ErrorMessage=="")
                {
                    RefreshList(oMonthlyAttendanceReports);
                    for(var i =0; i<oMonthlyAttendanceReports.length;i++)
                    {
                        if(oMonthlyAttendanceReports[i].WorkingStatus==1)
                        {
                            _oActiveEmployee.push(oMonthlyAttendanceReports[i]);
                        }
                        else if(oMonthlyAttendanceReports[i].WorkingStatus==6)
                        {
                            _oInActiveEmployee.push(oMonthlyAttendanceReports[i]);
                        }
                    }
                }
                else
                {
                    alert(oMonthlyAttendanceReports[0].ErrorMessage);
                    oMonthlyAttendanceReports=[];
                    RefreshList(oMonthlyAttendanceReports);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function RefreshList(oEmployees)
    {
        data=oEmployees;
        data={"total":""+data.length+"","rows":data};
        $('#tblEmployees').datagrid('loadData',data);
        $('#tblEmployeess').datagrid({onSelect: function(rowIndex, rowData){ RowSelect(rowIndex, rowData);}});
    }

    function Print()
    {
        //var dtDateFrom =icsdateformat(new Date( GenerateStartTimeInString()));
        //var dtDateTo = icsdateformat(new Date(GenerateEndTimeInString()));
        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');

        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }

        var tsv=((new Date()).getTime())/1000;
        var sWorkingStatus="";
        if($("#chkInWorkPlace").is(":checked"))
        {
            sWorkingStatus="Active";
        }
        else if($("#chkDiscontinued").is(":checked"))
        {
            sWorkingStatus="InActive";
        }
        else
        {
            sWorkingStatus="All";
        }

        window.open(_sBaseAddress+ "/Compliance/PrintMonthlyAttendance?sEmployeeIDs="+_sEmployeeIDs+"&sBusinessUnitIds="+_sBusinessUnitIds+"&sLocationID="+_sLocationID+"&sDepartmentIds="+_sDepartmentIds+"&sDesignationIds="+_sDesignationIds+"&sSalarySchemeIDs="+_sSalarySchemeIDs+"&DateFrom="+dtDateFrom+"&DateTo="+dtDateTo+"&sWorkingStatus="+sWorkingStatus+"&ts="+tsv, "_blank");
    }

    //Sagor date picker start

    function SetDateTime()
    {
        var oDate=new Date();
        oDate.setFullYear(2014);
        /*---------------------------------------- Start Set Year-------------------------------------------*/
        var sYear="";
        sYear +="<option value='0'>"+'Year'+"</option>";
        for(var i=0; i<=10; i++)
        {
            sYear += "<option value='" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"'>" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"</option>";
        }
        $('#cboYear').html(sYear);
        $('#cboEndYear').html(sYear);
        /*---------------------------------------- End Set Year-------------------------------------------*/


        /*---------------------------------------- Start Set Month-------------------------------------------*/
        var sMonth="";
        var oMonths=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
        sMonth +="<option value='0'>"+'Month'+"</option>";
        for(var i=0; i<oMonths.length; i++)
        {
            sMonth += "<option value='" +(parseInt(i)+1)+"'>" + oMonths[i] +"</option>";
        }
        $('#cboMonth').html(sMonth);
        $('#cboEndMonth').html(sMonth);
        /*---------------------------------------- End Set Month-------------------------------------------*/


        /*---------------------------------------- Start Set Date-------------------------------------------*/
        var sDay ="<option value='0'>"+'Day'+"</option>";
        $('#cboDay').html(sDay);
        $('#cboEndDay').html(sDay);
        /*---------------------------------------- End Set Date-------------------------------------------*/
    }

    $('#cboYear').change(function(e)
    {
        var nYear=$('#cboYear').val();
        var nMonth=$('#cboMonth').val();
        if(nYear>0 && nMonth>0)
        {
            $('#cboDay').html(SetDateEvent(nYear, nMonth));
        }

    });

    $('#cboEndYear').change(function(e)
    {
        var nYear=$('#cboEndYear').val();
        var nMonth=$('#cboEndMonth').val();
        if(nYear>0 && nMonth>0)
        {
            $('#cboEndDay').html(SetDateEvent(nYear, nMonth));
        }

    });

    $('#cboMonth').change(function(e)
    {
        var nYear=$('#cboYear').val();
        var nMonth=$('#cboMonth').val();
        if(nYear>0 && nMonth>0)
        {
            $('#cboDay').html(SetDateEvent(nYear, nMonth));
        }

    });

    $('#cboEndMonth').change(function(e)
    {

        var nYear=$('#cboEndYear').val();
        var nMonth=$('#cboEndMonth').val();
        if(nYear>0 && nMonth>0)
        {
            $('#cboEndDay').html(SetDateEvent(nYear, nMonth));
        }

    });

    function SetDateEvent(nYear, nMonth)
    {

        var oDate=new Date();
        var sDay="";
        if( parseInt(nMonth)>0)
        {
            var nDay= new Date(parseInt(nYear), parseInt(nMonth), 0).getDate();
            sDay +="<option value='0'>"+'Day'+"</option>";
            for(var i=1; i<=parseInt(nDay); i++)
            {
                if(i<10)
                {
                    sDay += "<option value='" +i+"'>" + '0'+i +"</option>";
                }
                else
                {
                    sDay += "<option value='" +i+"'>" + i +"</option>";
                }

            }
        }
        return sDay;
    }

    function SetStartTime(oDate)
    {

        var nyear=oDate.getFullYear();
        var nmonth=oDate.getMonth()+1;
        var nday=oDate.getDate();
        $('#cboYear').val(nyear);
        $('#cboMonth').val(nmonth);
        $('#cboDay').html(SetDateEvent(nyear,nmonth));
        $('#cboDay').val(nday);
    }

    function SetEndTime(oDate)
    {
        debugger;
        var nyear=oDate.getFullYear();
        var nmonth=oDate.getMonth()+1;
        var nday=oDate.getDate();
        $('#cboEndYear').val(nyear);
        $('#cboEndMonth').val(nmonth);
        $('#cboEndDay').html(SetDateEvent(nyear,nmonth));
        $('#cboEndDay').val(nday);

    }

    function GenerateStartTimeInString()
    {
        var sDate=  $('#cboMonth').val() +'/'+ $('#cboDay').val() +'/'+ $('#cboYear').val();
        return icsdateformat(new Date(sDate));
    }

    function GenerateEndTimeInString()
    {

        var sDate=  $('#cboEndMonth').val() +'/'+ $('#cboEndDay').val() +'/'+ $('#cboEndYear').val();
        return icsdateformat(new Date(sDate));
    }

    function ValidationOfStartTime()
    {
        if($('#cboYear').val()==0)
        {
            alert("Please select a year.");
            document.getElementById('cboYear').focus();
            return false;
        }
        if($('#cboMonth').val()==0)
        {
            alert("Please select a month.");
            document.getElementById('cboMonth').focus();
            return false;
        }
        if($('#cboDay').val()==0)
        {
            alert("Please select a day.");
            document.getElementById('cboDay').focus();
            return false;
        }
        return true;
    }

    function ValidationOfEndTime()
    {
        if($('#cboEndYear').val()==0)
        {
            alert("Please select a year.");
            document.getElementById('cboEndYear').focus();
            return false;
        }
        if($('#cboEndMonth').val()==0)
        {
            alert("Please select a month.");
            document.getElementById('cboEndMonth').focus();
            return false;
        }
        if($('#cboEndDay').val()==0)
        {
            alert("Please select a day.");
            document.getElementById('cboEndDay').focus();
            return false;
        }
        return true;
    }

    //$('#cboDateType').change(function ()
    //{
    //        debugger
    //        var nDateType = $("#cboDateType").val();
    //        if (nDateType == 0) {
    //              document.getElementById("regionDateTo").style.display = 'none';
    //              document.getElementById("regionDateFrom").style.display = 'none';
    //        }
    //        if (nDateType == 1 )
    //        {
    //          document.getElementById("regionDateFrom").style.display = '';
    //          document.getElementById("regionDateTo").style.display = 'none';
    //        }
    //        if (nDateType == 2 )
    //        {
    //          document.getElementById("regionDateFrom").style.display = '';
    //          document.getElementById("regionDateTo").style.display = '';
    //        }
    //});

    //sagor date picker end

    function DateWiseAtt()
    {
        debugger;
        //if(!ValidationOfStartTime()) return;
        //if(!ValidationOfEndTime()) return;
        //var dtDateFrom = icsdateformat(new Date(GenerateStartTimeInString()));
        //var dtDateTo = icsdateformat(new Date(GenerateEndTimeInString()));

        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');

        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }

        if(_sEmployeeIDs == "" && _sSalarySchemeIDs == "" && _sDepartmentIds == "" && _sDesignationIds =="" && _sLocationID =="" && _sBusinessUnitIds =="" && _sGroupIDs == "" && _sBlockIDs == "")
        {
            alert("Please select at least one searching criteria with date!");
            return;
        }
        var tsv=((new Date()).getTime())/1000;

        window.open(_sBaseAddress+ "/Compliance/PrintDateWiseAttendance?sEmployeeIDs="+_sEmployeeIDs+"&sBusinessUnitIds="+_sBusinessUnitIds+"&sLocationID="+_sLocationID+"&sDepartmentIds="+_sDepartmentIds+"&sDesignationIds="+_sDesignationIds+"&sSalarySchemeIDs="+_sSalarySchemeIDs+"&DateFrom="+dtDateFrom+"&DateTo="+dtDateTo+"&ts="+tsv, "_blank");
    }

    function DateWiseAtt_Comp()
    {
        //if(!ValidationOfStartTime()) return;
        //if(!ValidationOfEndTime()) return;
        //var dtDateFrom = icsdateformat(new Date(GenerateStartTimeInString()));
        //var dtDateTo = icsdateformat(new Date(GenerateEndTimeInString()));

        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');

        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }

        if(_sEmployeeIDs == "" && _sSalarySchemeIDs == "" && _sDepartmentIds == "" && _sDesignationIds =="" && _sLocationID =="" && _sBusinessUnitIds =="" && _sGroupIDs == "" && _sBlockIDs == "")
        {
            alert("Please select at least one searching criteria with date!");
            return;
        }
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/Compliance/PrintDateWiseAttendance_Comp?sEmployeeIDs="+_sEmployeeIDs+"&sBusinessUnitIds="+_sBusinessUnitIds+"&sLocationID="+_sLocationID+"&sDepartmentIds="+_sDepartmentIds+"&sDesignationIds="+_sDesignationIds+"&sSalarySchemeIDs="+_sSalarySchemeIDs+"&DateFrom="+dtDateFrom+"&DateTo="+dtDateTo+"&ts="+tsv, "_blank");
    }

    function DateWiseAtt_Summery()
    {
        //if(!ValidationOfStartTime()) return;
        //if(!ValidationOfEndTime()) return;
        //var dtDateFrom = icsdateformat(new Date(GenerateStartTimeInString()));
        //var dtDateTo = icsdateformat(new Date(GenerateEndTimeInString()));


        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');

        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }

        if(_sEmployeeIDs == "" && _sSalarySchemeIDs == "" && _sDepartmentIds == "" && _sDesignationIds =="" && _sLocationID =="" && _sBusinessUnitIds =="" && _sGroupIDs == "" && _sBlockIDs == "")
        {
            alert("Please select at least one searching criteria with date!");
            return;
        }
        var tsv=((new Date()).getTime())/1000;

        window.open(_sBaseAddress+ "/Compliance/PrintDateWiseAttendance_Summery?sEmployeeIDs="+_sEmployeeIDs+"&sBusinessUnitIds="+_sBusinessUnitIds+"&sLocationID="+_sLocationID+"&sDepartmentIds="+_sDepartmentIds+"&sDesignationIds="+_sDesignationIds+"&sSalarySchemeIDs="+_sSalarySchemeIDs+"&DateFrom="+dtDateFrom+"&DateTo="+dtDateTo+"&ts="+tsv, "_blank");
    }

    function AttSummery_F2_XL()
    {
        //var dtDateFrom =icsdateformat(new Date( GenerateStartTimeInString()));
        //var dtDateTo = icsdateformat(new Date(GenerateEndTimeInString()));

        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');

        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }

        var tsv=((new Date()).getTime())/1000;
        var sWorkingStatus="";
        if($("#chkInWorkPlace").is(":checked"))
        {
            sWorkingStatus="Active";
        }
        else if($("#chkDiscontinued").is(":checked"))
        {
            sWorkingStatus="InActive";
        }
        else
        {
            sWorkingStatus="All";
        }
        window.open(_sBaseAddress+ "/Compliance/PrintAttendanceSummary_F2_XL?sEmployeeIDs="+_sEmployeeIDs+"&sBusinessUnitIds="+_sBusinessUnitIds+"&sLocationID="+_sLocationID+"&sDepartmentIds="+_sDepartmentIds+"&sDesignationIds="+_sDesignationIds+"&sSalarySchemeIDs="+_sSalarySchemeIDs+"&DateFrom="+dtDateFrom+"&DateTo="+dtDateTo+"&sWorkingStatus="+sWorkingStatus+"&ts="+tsv, "_blank");
    }

    function AttSummery_F3_XL()
    {
        //var dtDateFrom =icsdateformat(new Date( GenerateStartTimeInString()));
        //var dtDateTo = icsdateformat(new Date(GenerateEndTimeInString()));

        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');

        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }

        var tsv=((new Date()).getTime())/1000;
        var sWorkingStatus="";
        if($("#chkInWorkPlace").is(":checked"))
        {
            sWorkingStatus="Active";
        }
        else if($("#chkDiscontinued").is(":checked"))
        {
            sWorkingStatus="InActive";
        }
        else
        {
            sWorkingStatus="All";
        }
        window.open(_sBaseAddress+ "/Compliance/PrintAttendanceSummary_F3_XL?sEmployeeIDs="+_sEmployeeIDs+"&sBusinessUnitIds="+_sBusinessUnitIds+"&sLocationID="+_sLocationID+"&sDepartmentIds="+_sDepartmentIds+"&sDesignationIds="+_sDesignationIds+"&sSalarySchemeIDs="+_sSalarySchemeIDs+"&DateFrom="+dtDateFrom+"&DateTo="+dtDateTo+"&sWorkingStatus="+sWorkingStatus+"&sGroupIDs="+_sGroupIDs+"&sBlockIDs="+_sBlockIDs+"&ts="+tsv, "_blank");
    }

    function Absent()
    {
        $('#txtDays').val(0);
        $('#txtSelectDate').datebox('setValue', icsdateformat(new Date()));
        $("#winDayWiseAbsentPicker").icsWindow('open');
    }

    $('#btnPrintDayWiseAbsent').click(function (e)
    {
        var nDays = $('#txtDays').val();
        var dDate = $('#txtSelectDate').datebox('getValue');
        if(nDays<=0)
        {
            alert("Please enter days!");
            return;
        }
        var tsv=((new Date()).getTime())/1000;

        window.open(_sBaseAddress+ "/Compliance/PrintDateWiseAbsent?nDays="+nDays+"&dDate="+dDate+"&ts="+tsv, "_blank");
        $("#winDayWiseAbsentPicker").icsWindow('close');
    });

    function Close()
    {
        $("#winDayWiseAbsentPicker").icsWindow('close');
    }

    $(document).keydown(function (e)
    {
        var keyCode = e.keyCode || e.which;
        if (keyCode == 27)
        {
            $("#winDayWiseAbsentPicker").icsWindow('close');
        }
    });

    function PrintTypeObject()
    {
        var oObj= new Object();
        var oItems=[];

        //oObj= new Object();
        //oObj.id=1;
        //oObj.Item="Monthly Attendance";
        //oItems.push(oObj);

        //oObj= new Object();
        //oObj.id=2;
        //oObj.Item="Att. Sheet(Acc.)";
        //oItems.push(oObj);

        //oObj= new Object();
        //oObj.id=3;
        //oObj.Item="Att. Sheet";
        //oItems.push(oObj);

        //oObj= new Object();
        //oObj.id=4;
        //oObj.Item="Att. Summary";
        //oItems.push(oObj);

        //oObj= new Object();
        //oObj.id=5;
        //oObj.Item="Absent";
        //oItems.push(oObj);

        oObj= new Object();
        oObj.id=6;
        oObj.Item="Att. Summary";
        oItems.push(oObj);

        ////oObj= new Object();
        ////oObj.id=7;
        ////oObj.Item="Weekly Working Hour XL";
        ////oItems.push(oObj);

        //oObj= new Object();
        //oObj.id=8;
        //oObj.Item="Working Hour";
        //oItems.push(oObj);



        //if(PermissionChecker('Att_Summary_F2','Attendance',_oAURolesMapping))
        //{
        //    oObj= new Object();
        //    oObj.id=9;
        //    oObj.Item="Att. Summary(F2)";
        //    oItems.push(oObj);
        //}

        //oObj= new Object();
        //oObj.id=9;
        //oObj.Item="Att. Summary(F2)";
        //oItems.push(oObj);
        if(PermissionChecker('Att_Summary_F3','Attendance',_oAURolesMapping))
        {
            oObj= new Object();
            oObj.id=10;
            oObj.Item="Att. Summary(F3)";
            oItems.push(oObj);
        }
        oObj= new Object();
        oObj.id=16;
        oObj.Item="Reconcilation";
        oItems.push(oObj);
        //oObj= new Object();
        //oObj.id=10;
        //oObj.Item="Att. Summary(F3)";
        //oItems.push(oObj);

        $("#cboPrintType").icsLoadCombo({
            List: oItems,
            OptionValue: "id",
            DisplayText: "Item"
        });
    }

    $('#btnPrint').click(function (e)
    {
        debugger;
        var nPType=$("#cboPrintType").val();
        if(nPType==0)
        {
            alert("Please select one type!");
            return;
        }
        else if(nPType==1)
        {
            Print();
        }
        else if(nPType==2)
        {
            DateWiseAtt();
        }
        else if(nPType==3)
        {
            DateWiseAtt_Comp();
        }
        else if(nPType==4)
        {
            DateWiseAtt_Summery();
        }
        else if(nPType==5)
        {
            Absent();
        }
    });

    $('#btnPrintExcel').click(function (e)
    {
        var nPType=$("#cboPrintType").val();
        if(nPType==0)
        {
            alert("Please select one type!");
            return;
        }
        else if(nPType==4)
        {
            AttendanceSummaryXL();
        }
        else if(nPType==6)
        {
            DateWiseAtt_XL();
        }
        else if(nPType==7)
        {
            WeeklyWorkingHour_XL();
        }
        else if(nPType==8)
        {
            WorkingHour();
        }
        else if(nPType==9)
        {
            AttSummery_F2_XL();
        }
        else if(nPType==10)
        {
            AttSummery_F3_XL();
        }
        else if(nPType==16)
        {
            Reconcilation_XL();
        }
    });
    function Reconcilation_XL()
    {
        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');

        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }

        if(_sEmployeeIDs == "" && _sSalarySchemeIDs == "" && _sDepartmentIds == "" && _sDesignationIds =="" && _sLocationID =="" && _sBusinessUnitIds =="" && _sGroupIDs == "" && _sBlockIDs == "")
        {
            alert("Please select at least one searching criteria with date!");
            return;
        }
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/Compliance/PrintReconcilationXL?sEmployeeIDs="+_sEmployeeIDs+"&sBusinessUnitIds="+_sBusinessUnitIds+"&sLocationID="+_sLocationID+"&sDepartmentIds="+_sDepartmentIds+"&sDesignationIds="+_sDesignationIds+"&sSalarySchemeIDs="+_sSalarySchemeIDs+"&DateFrom="+dtDateFrom+"&DateTo="+dtDateTo+"&sGroupIDs="+_sGroupIDs+"&sBlockIDs="+_sBlockIDs+"&ts="+tsv, "_blank");
    }
    function AttendanceSummaryXL()
    {
        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');

        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }

        if(_sEmployeeIDs == "" && _sSalarySchemeIDs == "" && _sDepartmentIds == "" && _sDesignationIds =="" && _sLocationID =="" && _sBusinessUnitIds =="" && _sGroupIDs == "" && _sBlockIDs == "")
        {
            alert("Please select at least one searching criteria with date!");
            return;
        }
        var tsv=((new Date()).getTime())/1000;

        window.open(_sBaseAddress+ "/Compliance/AttendanceSummaryXL?sEmployeeIDs="+_sEmployeeIDs+"&sBusinessUnitIds="+_sBusinessUnitIds+"&sLocationID="+_sLocationID+"&sDepartmentIds="+_sDepartmentIds+"&sDesignationIds="+_sDesignationIds+"&sSalarySchemeIDs="+_sSalarySchemeIDs+"&DateFrom="+dtDateFrom+"&DateTo="+dtDateTo+"&sGroupIDs="+_sGroupIDs+"&sBlockIDs="+_sBlockIDs+"&ts="+tsv, "_blank");
    }

    function DateWiseAtt_XL()
    {
        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');

        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }

        if(_sEmployeeIDs == "" && _sSalarySchemeIDs == "" && _sDepartmentIds == "" && _sDesignationIds =="" && _sLocationID =="" && _sBusinessUnitIds =="" && _sGroupIDs == "" && _sBlockIDs == "")
        {
            alert("Please select at least one searching criteria with date!");
            return;
        }
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/Compliance/PrintDateWiseAttendanceXL?sEmployeeIDs="+_sEmployeeIDs+"&sBusinessUnitIds="+_sBusinessUnitIds+"&sLocationID="+_sLocationID+"&sDepartmentIds="+_sDepartmentIds+"&sDesignationIds="+_sDesignationIds+"&sSalarySchemeIDs="+_sSalarySchemeIDs+"&DateFrom="+dtDateFrom+"&DateTo="+dtDateTo+"&sGroupIDs="+_sGroupIDs+"&sBlockIDs="+_sBlockIDs+"&ts="+tsv, "_blank");
    }

    function WeeklyWorkingHour_XL()
    {
        //if(!ValidationOfStartTime()) return;
        //if(!ValidationOfEndTime()) return;
        //var dtDateFrom = icsdateformat(new Date(GenerateStartTimeInString()));
        //var dtDateTo = icsdateformat(new Date(GenerateEndTimeInString()));


        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');

        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }

        var nDays = (new Date(dtDateTo)-new Date(dtDateFrom))/60/60/24/1000;
        if(nDays>7)
        {
            alert("Please select a date range for 7 days!");
            return;
        }

        if(_sEmployeeIDs == "" && _sSalarySchemeIDs == "" && _sDepartmentIds == "" && _sDesignationIds =="" && _sLocationID =="" && _sBusinessUnitIds =="" && _sGroupIDs == "" && _sBlockIDs == "")
        {
            alert("Please select at least one searching criteria with date!");
            return;
        }
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/Compliance/PrintWeeklyWorkingHourXL?sEmployeeIDs="+_sEmployeeIDs+_sEmployeeIDs+"&sBusinessUnitIds="+_sBusinessUnitIds+"&sLocationID="+_sLocationID+"&sDepartmentIds="+_sDepartmentIds+"&sDesignationIds="+_sDesignationIds+"&sSalarySchemeIDs="+_sSalarySchemeIDs+"&DateFrom="+dtDateFrom+"&DateTo="+dtDateTo+"&ts="+tsv, "_blank");
    }

    function WorkingHour()
    {
        //if(!ValidationOfStartTime()) return;
        //if(!ValidationOfEndTime()) return;
        //var dtDateFrom = icsdateformat(new Date(GenerateStartTimeInString()));
        //var dtDateTo = icsdateformat(new Date(GenerateEndTimeInString()));


        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');

        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }

        if(_sEmployeeIDs == "" && _sSalarySchemeIDs == "" && _sDepartmentIds == "" && _sDesignationIds =="" && _sLocationID =="" && _sBusinessUnitIds =="" && _sGroupIDs == "" && _sBlockIDs == "")
        {
            alert("Please select at least one searching criteria with date!");
            return;
        }
        var sParam =_sEmployeeIDs+"~"+_sLocationID+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+_sSalarySchemeIDs+"~"+dtDateFrom+"~"+dtDateTo+"~"+_sBusinessUnitIds;
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/Compliance/PrintWorkingHour?sParam="+sParam+"&ts="+tsv, "_blank");
    }

    /*----------- Salary Scheme Start-----------------------*/
    $('#txtSalaryScheme').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        var sSSName = document.getElementById("txtSalaryScheme").value;
        if (code == 13)//Enter key-13
        {
            PickerSalaryScheme(sSSName);
        }
    });

    $('#btnSalaryScheme').click(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        var sSSName ="";
        PickerSalaryScheme(sSSName);
    });

    function PickerSalaryScheme(sSSName)
    {
        var oSalaryScheme = { Name: sSSName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oSalaryScheme,
            ControllerName: "SalaryScheme",
            ActionName: "GetsBySalarySchemeName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].SalarySchemeID > 0) {

                    var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "NatureOfEmployeeInString", title: "Nature Of Employee", width: 140, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "PaymentCycleInString", title: "Payment Cycle", width: 140, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSalarySchemePicker',
                        winclass:'clsSalarySchemePicker',
                        winwidth: 520,
                        winheight: 460,
                        tableid: 'tblSalarySchemes',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Salary Scheme List'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeSalarySchemePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeSalarySchemePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winSalarySchemePicker')
            {
                if (oreturnObjs != null && oreturnObjs.length > 0)//oreturnObj.SalarySchemeID
                {
                    var sSalarySchemeNames = "";
                    _sSalarySchemeIDs = "";
                    for(var i=0; i<oreturnObjs.length; i++)
                    {
                        sSalarySchemeNames+=oreturnObjs[i].Name+",";
                        _sSalarySchemeIDs+=oreturnObjs[i].SalarySchemeID+",";
                    }

                    sSalarySchemeNames=sSalarySchemeNames.substring(0,sSalarySchemeNames.length-1);
                    _sSalarySchemeIDs=_sSalarySchemeIDs.substring(0,_sSalarySchemeIDs.length-1);
                    $("#txtSalaryScheme").val(sSalarySchemeNames);
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                }
                else
                {
                    alert("please check at least one item!");
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winclass == 'clsSalarySchemePicker')
                {
                    if (oreturnObjs != null && oreturnObjs.length > 0)
                    {
                        var sSalarySchemeNames = "";
                        _sSalarySchemeIDs = "";
                        for(var i=0; i<oreturnObjs.length; i++)
                        {
                            sSalarySchemeNames+=oreturnObjs[i].Name+",";
                            _sSalarySchemeIDs+=oreturnObjs[i].SalarySchemeID+",";
                        }

                        sSalarySchemeNames=sSalarySchemeNames.substring(0,sSalarySchemeNames.length-1);
                        _sSalarySchemeIDs=_sSalarySchemeIDs.substring(0,_sSalarySchemeIDs.length-1);
                        $("#txtSalaryScheme").val(sSalarySchemeNames);
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                    }
                    else
                    {
                        alert("please check at least one item!");
                    }
                }
            }
        });
    }

    $('#btnCSalaryScheme').click(function (e)
    {
        $("#txtSalaryScheme").val("");
        _sSalarySchemeIDs = "";
    });
    /*----------- Salary Scheme End-----------------------*/

    $("#btnExtraSearching").click(function () {
        $("#winExtraSearching").icsWindow("open");

        $('#tpStartInTime').timespinner('setValue', '00:00');
        $('#tpEndInTime').timespinner('setValue', '00:00');
        $('#tpStartOutTime').timespinner('setValue', '00:00');
        $('#tpEndOutTime').timespinner('setValue', '00:00');
        $("#spEndInTime").show();
        $("#spEndOutTime").show();
        $("#spEndLate").show();
        $("#spEndEarly").show();
        $("#spEndDaysCount").show();

        $('#txtStartLate').val("");
        $('#txtEndLate').val("");
        $('#txtStartEarly').val("");
        $('#txtEndEarly').val("");
        $('#txtStartDaysCount').val("");
        $('#txtEndDaysCount').val("");

        $("#cboCriteriaType").val(1);
    });

    $("#btnExtraSearchingOK").click(function () {
        $("#winExtraSearching").icsWindow("close");
    });

    $("#btnExtraSearchingClose").click(function () {
        $("#winExtraSearching").icsWindow("close");
    });

    $("#cboCriteriaType").change(function () {
        var nCriteriaType = $("#cboCriteriaType").val();
        if(nCriteriaType==2 || nCriteriaType==3 || nCriteriaType==4)
        {
            $("#spEndInTime").hide();
            $("#spEndOutTime").hide();
            $("#spEndLate").hide();
            $("#spEndEarly").hide();
            $("#spEndDaysCount").hide();
        }
        else
        {
            $("#spEndInTime").show();
            $("#spEndOutTime").show();
            $("#spEndLate").show();
            $("#spEndEarly").show();
            $("#spEndDaysCount").show();
        }
    });

    function ExtraSearching_XL()
    {
        debugger
        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');
        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }

        var CriteriaType=$('#cboCriteriaType').val();
        var StartInTime=$('#tpStartInTime').timespinner('getValue');
        var EndInTime=$('#tpEndInTime').timespinner('getValue');
        var StartOutTime=$('#tpStartOutTime').timespinner('getValue');
        var EndOutTime=$('#tpEndOutTime').timespinner('getValue');

        var StartLate=$('#txtStartLate').val();
        if(StartLate== null || StartLate<=0){StartLate=0}
        var EndLate=$('#txtEndLate').val();
        if(EndLate== null || EndLate<=0){EndLate=0}
        var StartEarly=$('#txtStartEarly').val();
        if(StartEarly== null || StartEarly<=0){StartEarly=0}
        var EndEarly=$('#txtEndEarly').val();
        if(EndEarly== null || EndEarly<=0){EndEarly=0}
        var StartDaysCount=$('#txtStartDaysCount').val();
        if(StartDaysCount== null || StartDaysCount<=0){StartDaysCount=0}
        var EndDaysCount=$('#txtEndDaysCount').val();
        if(EndDaysCount== null || EndDaysCount<=0){EndDaysCount=0}

        if(CriteriaType==1)
        {
            if(StartInTime >EndInTime)
            {
                alert("Invalid In Time range !");
                return;
            }
            if(StartOutTime>EndOutTime)
            {
                alert("Invalid Out Time range !");
                return;
            }
            if(parseFloat(StartLate) > parseFloat(EndLate))
            {
                alert("Invalid Late range !");
                return;
            }
            if(parseFloat(StartEarly) > parseFloat(EndEarly))
            {
                alert("Invalid Early range !");
                return;
            }
            if(parseFloat(StartDaysCount) > parseFloat(EndDaysCount))
            {
                alert("Invalid Days Count range !");
                return;
            }
        }

        var sParam =dtDateFrom+"~"+dtDateTo+"~"+_sBusinessUnitIds+"~"+_sLocationID+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+_sSalarySchemeIDs+"~"+_sEmployeeIDs+"~"+CriteriaType
            +"~"+StartInTime+"~"+EndInTime+"~"+StartOutTime+"~"+EndOutTime
            +"~"+StartLate+"~"+EndLate+"~"+StartEarly+"~"+EndEarly+"~"+StartDaysCount+"~"+EndDaysCount;



        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/Compliance/ExtraSearching_XL?sParam="+sParam+"&ts="+tsv, "_blank");
        $("#winExtraSearching").icsWindow("close");
    }

    
    /*------------EmployeeGroup--------------*/

    $('#txtEmployeeGroup').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroup").val();
            var sTempName = "";
            SearchEmployeeGroup(txtSearchByGroup);
            $("#txtEmployeeGroup").val('');
        }
    });


    $("#btnEmployeeGroupPicker").click(function(e){
        SearchEmployeeGroup("");
    });
    function SearchEmployeeGroup(name) {
        $("#txtEmployeeGroup").val("");
        _sGroupNames = "";
        _sGroupIDs = "";
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oGroups.length; i++)
                    {
                        _sGroupNames += oGroups[i].Name+",";
                        _sGroupIDs += oGroups[i].EmployeeTypeID+",";

                    }
                    _sGroupNames=_sGroupNames.substring(0,_sGroupNames.length-1);
                    _sGroupIDs=_sGroupIDs.substring(0,_sGroupIDs.length-1);
                    $("#txtEmployeeGroup").val(_sGroupNames);
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }

    $("#btnEmployeeGroupPickerReset").click(function(e){
        
        $('#txtEmployeeGroup').val("");
        _sGroupIDs = "";
    });

    /*------------EmployeeBlock--------------*/

    $('#txtEmployeeBlock').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlock").val();
            var sTempName = "";
            SearchEmployeeBlock(txtSearchByBlock);
            $("#txtEmployeeBlock").val('');
        }
    });

    $("#btnEmployeeBlockPicker").click(function(e){
        SearchEmployeeBlock("");
    });
    function SearchEmployeeBlock(name) {
        $("#txtEmployeeBlock").val("");
        _sBlockNames = "";
        _sBlockIDs = "";
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNames += oBlocks[i].Name+",";
                        _sBlockIDs += oBlocks[i].EmployeeTypeID+",";

                    }
                    _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                    _sBlockIDs=_sBlockIDs.substring(0,_sBlockIDs.length-1);
                    $("#txtEmployeeBlock").val(_sBlockNames);
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }
    

    $("#btnEmployeeBlockPickerReset").click(function(e){
        
        $('#txtEmployeeBlock').val("");
        _sBlockIDs = "";
    });

    /*------------EmployeeGroupAdv--------------*/
    
    $("#btnEmployeeGroupResetAdv").click(function(e){
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
    });

    $('#txtEmployeeGroupAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroupAdv").val();
            var sTempName = "";
            SearchEmployeeGroupAdv(txtSearchByGroup);
            $("#txtEmployeeGroupAdv").val('');
        }
    });


    $("#btnEmployeeGroupPickerAdv").click(function(e){
        SearchEmployeeGroupAdv("");
    });
    function SearchEmployeeGroupAdv(name) {
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oGroups.length; i++)
                    {
                        _sGroupNamesAdv += oGroups[i].Name+",";
                        _sGroupIDsAdv += oGroups[i].EmployeeTypeID+",";

                    }
                    _sGroupNamesAdv=_sGroupNamesAdv.substring(0,_sGroupNamesAdv.length-1);
                    _sGroupIDsAdv=_sGroupIDsAdv.substring(0,_sGroupIDsAdv.length-1);
                    $("#txtEmployeeGroupAdv").val(_sGroupNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }

    /*------------EmployeeBlockAdv--------------*/

    $('#txtEmployeeBlockAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlockAdv").val();
            var sTempName = "";
            SearchEmployeeBlockAdv(txtSearchByBlock);
            $("#txtEmployeeBlockAdv").val('');
        }
    });

    $("#btnEmployeeBlockPickerAdv").click(function(e){
        SearchEmployeeBlockAdv("");
    });
    function SearchEmployeeBlockAdv(name) {
        $("#txtEmployeeBlockAdv").val("");
        _sBlockNamesAdv = "";
        _sBlockIDsAdv = "";
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNamesAdv += oBlocks[i].Name+",";
                        _sBlockIDsAdv += oBlocks[i].EmployeeTypeID+",";

                    }
                    _sBlockNamesAdv=_sBlockNamesAdv.substring(0,_sBlockNamesAdv.length-1);
                    _sBlockIDsAdv=_sBlockIDsAdv.substring(0,_sBlockIDsAdv.length-1);
                    $("#txtEmployeeBlockAdv").val(_sBlockNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }
    

    $("#btnEmployeeBlockResetAdv").click(function(e){
        debugger;
        _sBlockNamesAdv = "";
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDsAdv = "";
    });


</script>
