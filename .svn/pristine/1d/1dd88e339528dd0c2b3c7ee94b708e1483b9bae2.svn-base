@{
    ViewBag.Title = "Benefit On Attendance";
}
<html>
<head>
    <title>
         
    </title>
</head>
<body>
    @{var MenuID = HttpContext.Current.Session[SessionInfo.MenuID];}
    @model ESimSol.BusinessObjects.BenefitOnAttendance
    <div style="font-family:Tahoma; width:100%; height:100%">
        <fieldset style="width:98%; height:85%">
            <legend id="lblHeaderName" style="font-weight:bold"> Benefit On Attendance Informations : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight: bold;width:60%; margin-left:20%;margin-top:7%;">
                <tr class="table_tr">
                    <td class="td_Caption" style=" text-align:right">
                        Name:
                    </td>
                    <td class="td_ValueInput">
                        <input id="txtName" type="text" style="width:90%" />
                    </td>
                </tr>
                <tr class="table_tr">
                    <td class="td_Caption"  style=" text-align:right">
                        Benifit On:
                    </td>
                    <td class="td_ValueInput">
                        @Html.DropDownListFor(model => model.BenefitOn, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumBenefitOnAttendance))), new { id = "cboBenifitOn", style = "width:91%" })
                    </td>
                </tr>
                <tr class="table_tr" id="trStartEnd">
                    <td class="td_Caption" style="text-align:right">
                        Start Time:
                    </td>
                    <td class="td_ValueInput">
                        <input id="txtStartTime" class="easyui-timespinner" style="width: 20%;" requird="required"
                               data-options="showSeconds:false" />
                        &nbsp;
                        End Time:
                       
                        <input id="txtEndTime" class="easyui-timespinner" style="width: 20%;" requird="required"
                               data-options="showSeconds:false" />

                        &nbsp;
                        Tolerance(m):
                        <input id="txTolerance" class="number" type="text" style="width:19%" />
                    </td>
                </tr>
                <tr class="table_tr">
                    <td class="td_Caption"></td>
                    <td class="td_ValueInput">
                        <input id="chkOverTime" type="checkbox" />
                        OverTime
                        <input id="chkFullWorkingHour" type="checkbox" />
                        Full Working Hour
                    </td>
                </tr>
                <tr class="table_tr" id="trForOvertime">
                    <td class="td_Caption" style="text-align:right" >
                        OT Hour:
                    </td>
                    <td class="td_ValueInput">
                        <input id="txtOTHour" type="text" class="number" style="width:24%" />(hr)
                        &nbsp;&nbsp;&nbsp;
                        <div style="float:right;">
                            <label style="width:15%">
                                OT Distribute/Presence:
                            </label>
                            <input id="txtDistribute" class="number" type="text" style="width:28%" />
                            (hr)
                        </div>
                  
                    </td>
                </tr>
                <tr class="table_tr">
                    <td class="td_Caption"></td>
                    <td class="td_ValueInput">
                        <input id="chkSalary" type="checkbox" />
                        Salary
                    </td>
                </tr>
                <tr class="table_tr" id="trforsalary1">
                    <td class="td_Caption" style=" text-align:right">
                        Salary Head:
                    </td>
                    <td class="td_ValueInput">
                        <select id="cboSalaryHead" style="width:91%"></select>
                    </td>
                </tr>
                <tr class="table_tr" id="trforsalary2">
                    <td class="td_Caption" style=" text-align:right">
                        Fixed Value:
                    </td>
                    <td class="td_ValueInput">
                        <input id="txtFixedValue" class="number" type="text" style="width:30%" />
                        <label id="lblCurrencySymbol"></label>
                        &nbsp; or &nbsp;
                        <div style="float:right; margin-right:7%">
                            <input id="txtPercent" class="number" type="text" style="width:35%" />&nbsp; % of &nbsp;
                            @Html.DropDownListFor(model => model.AllowanceOn, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumPayrollApplyOn))), new { id = "cboAllowanceOn", style = "width:41%" })
                        </div>
                     </td>
                </tr>
                <tr class="table_tr">
                    <td class="td_Caption"></td>
                    <td class="td_ValueInput">
                        <input id="chkLeave" type="checkbox" />
                        Leave
                    </td>
                </tr>
                <tr id="trforLeave" class="table_tr">
                    <td class="td_Caption"  style=" text-align:right">
                        Leave Head :
                    </td>
                    <td class="td_ValueInput">
                        <select id="cboLeaveHead" style="width:34%"></select>
                        &nbsp;&nbsp;
                        &nbsp;&nbsp;&nbsp; 
                        <div style="float:right; margin-right:7%">
                            Amount:
                            <input id="txtAmountofLeave" class="number" type="text" style="width:66%" />
                            </div>
                        </td>
                </tr>
                <tr class="table_tr">
                    <td class="td_Caption"  style=" text-align:right">
                        
                    </td>
                    <td class="td_ValueInput">
                        <input id="chkContinue" type="checkbox" checked />
                        Continue
                        &nbsp;&nbsp;&nbsp; 
                        &nbsp;&nbsp;&nbsp; 
                        &nbsp;&nbsp;&nbsp; 
                        &nbsp; 
                        <div style="float:right; margin-right:9%">
                            Duration:
                            <input id="dtBenefitStartDate" type="text" style="width: 125px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            &nbsp; To &nbsp;
                            <input id="dtBenefitEndDate" type="text" style="width: 125px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </div>
                       
                    </td>
                </tr>
                <tr class="table_tr">
                    <td class="td_Caption" style=" text-align:right"></td>
                    <td style="width:250px">
                        If any Special holiday works
                    </td>
                </tr>
                <tr class="table_tr">
                    <td class="td_Caption"  style=" text-align:right"></td>
                    <td class="td_ValueInput">
                        <select id="cboHoliday" style="width:91%"></select>
                    </td>
                </tr>
            </table>
        </fieldset>

        <fieldset id="region_action">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;width:100%">
                <tr style="width:100%; text-align:right">
                    <td style="width:80%; text-align:right"></td>

                    <td style="width:20%; text-align:right">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<style>
.table_tr
{
    width:100%;
}
.td_Caption
{
    width:15%;
}
.td_ValueInput
{
     width:85%;
}
#region_action {
        top: 86%;
        width: 98%;
    }
</style>
<script type="text/javascript">
    var _oBenefitOnAttendance = null;
    var _sBaseAddress = "";
    var _nMenuid=0;
    var _sBenefitOnAttendanceHeader="";
    var _oSalaryHeads=[];
    var _oLeaveHeads=[];
    var _oHolidays=[];
    var _oCompany= null;

    $(document).ready(function() {
        debugger
        _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oBenefitOnAttendance = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(MenuID));
        _oSalaryHeads= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.SalaryHeads));
        _oLeaveHeads= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.LeaveHeads));
        _oHolidays= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Holidays));
        _oCompany= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Company));
        $("#lblCurrencySymbol").text("("+_oCompany.CurrencySymbol+")");
        LoadSalaryHead();
        LoadLeaveHead();
        LoadHoliday();
        $('#dtBenefitStartDate').datebox('setValue',icsdateformat(new Date()));
        $('#dtBenefitEndDate').datebox('setValue',icsdateformat(new Date()));
        _sBenefitOnAttendanceHeader=sessionStorage.getItem("BenefitOnAttendanceHeader");
        if(_oBenefitOnAttendance.ErrorMessage!="")
        {
            alert(_oBenefitOnAttendance.ErrorMessage);
            _oBenefitOnAttendance.ErrorMessage=="";
        }
        $("#lblHeaderName").html(_sBenefitOnAttendanceHeader);
        if (_sBenefitOnAttendanceHeader == "New Benifets On Attendance")
        {
            $("#trStartEnd").hide();
            $("#trForOvertime").hide();
            $("#trforsalary1").hide();
            $("#trforsalary2").hide();
            $("#trforLeave").hide();
            $('#dtBenefitStartDate').datebox({disabled:true});
            $('#dtBenefitEndDate').datebox({disabled:true});
        }
        if (_sBenefitOnAttendanceHeader == "Edit Benifets On Attendance")
        {
            SetControll();
        }
        if (_sBenefitOnAttendanceHeader == "View Benifets On Attendance")
        {
            SetControll();
            $("#txtName").prop("disabled", true);
            $("#cboBenifitOn").prop("disabled", true);
            $("#txtStartTime").prop("disabled", true);
            $("#txtEndTime").prop("disabled", true);
            $("#txTolerance").prop("disabled", true);
            $("#txtOTHour").prop("disabled", true);
            $("#txtDistribute").prop("disabled", true);
            $("#cboSalaryHead").prop("disabled", true);
            $("#cboAllowanceOn").prop("disabled", true);
            $("#cboLeaveHead").prop("disabled", true);
            $("#txtAmountofLeave").prop("disabled", true);
            $("#chkOverTime").prop("disabled", true);
            $("#chkFullWorkingHour").prop("disabled", true);
            $("#dtBenefitStartDate").prop("disabled", true);
            $("#dtBenefitEndDate").prop("disabled", true);
            
            $("#chkContinue").prop("disabled", true);
            $("#chkLeave").prop("disabled", true);
            //$("#chkOverTime").prop("disabled", true);
            $("#chkSalary").prop("disabled", true);

            $("#txtFixedValue").prop("disabled", true);
            $("#txtPercent").prop("disabled", true);
            $("#cboHoliday").prop("disabled", true);
            $("#btnSave").hide();
        }
    });

    function SetControll()
    {
        $("#txtName").val(_oBenefitOnAttendance.Name);
        document.getElementById('cboBenifitOn').selectedIndex=_oBenefitOnAttendance.BenefitOn;
        if(_oBenefitOnAttendance.BenefitOn==2)
        {
            $("#trStartEnd").show();
            $('#txtStartTime').timespinner('setValue',_oBenefitOnAttendance.StartTimeInString);
            $('#txtEndTime').timespinner('setValue',_oBenefitOnAttendance.EndTimeInString);
            $("#txTolerance").val(_oBenefitOnAttendance.TolarenceInMinute);
        }
        else
        {
            $("#trStartEnd").hide();
        }

        if(_oBenefitOnAttendance.OTInMinute>0 )
        {
            $('#chkOverTime').attr('checked',true);
            $("#trForOvertime").show();
            $("#txtOTHour").val(_oBenefitOnAttendance.OTInMinute/60);
            $("#txtDistribute").val(_oBenefitOnAttendance.OTDistributePerPresence/60);

        }
        else
        {
            if(_oBenefitOnAttendance.IsFullWorkingHourOT)
            {
                $('#chkOverTime').attr('checked',true);
                $('#chkFullWorkingHour').attr('checked',true);
            }
            $("#trForOvertime").hide();
            $("#txtOTHour").val("");
            $("#txtDistribute").val("");
        }

        if(_oBenefitOnAttendance.SalaryHeadID>0)
        {
            $('#chkSalary').attr('checked',true);
            $("#trforsalary1").show();
            $("#trforsalary2").show();
            $("#cboSalaryHead").val(_oBenefitOnAttendance.SalaryHeadID);
            document.getElementById('cboAllowanceOn').selectedIndex=_oBenefitOnAttendance.AllowanceOn;
            if(_oBenefitOnAttendance.IsPercent)
            {
                $("#txtPercent").val(_oBenefitOnAttendance.Value);
                $("#txtFixedValue").val(0);
            }
            else
            {
                $("#txtPercent").val(0);
                $("#txtFixedValue").val(_oBenefitOnAttendance.Value);
            }
        }
        else
        {
            $("#trforsalary2").hide();
            $("#trforsalary1").hide();
            $("#cboSalaryHead").val(0)
            document.getElementById('cboAllowanceOn').selectedIndex=0;
            $("#txtPercent").val("");
            $("#txtFixedValue").val("");
        }

        if(_oBenefitOnAttendance.LeaveHeadID>0)
        {
            $('#chkLeave').attr('checked',true);
            $("#trforLeave").show();
            $("#cboLeaveHead").val(_oBenefitOnAttendance.LeaveHeadID);
            $("#txtAmountofLeave").val(_oBenefitOnAttendance.LeaveAmount);
        }
        else
        {
            $("#trforLeave").hide();
            $("#cboLeaveHead").val(0);
            $("#txtAmountofLeave").val("");
        }
        if(_oBenefitOnAttendance.IsContinous)
        {
            $('#dtBenefitStartDate').datebox({disabled:true});
            $('#dtBenefitEndDate').datebox({disabled:true});
        }
        else
        {
            $('#dtBenefitStartDate').datebox({disabled:false});
            $('#dtBenefitEndDate').datebox({disabled:false});
            $('#dtBenefitStartDate').datebox('setValue',_oBenefitOnAttendance.BenefitStartDateInString)
            $('#dtBenefitEndDate').datebox('setValue',_oBenefitOnAttendance.BenefitEndDateInString);
        }
        $('#chkContinue').attr('checked', _oBenefitOnAttendance.IsContinous);
        $("#cboHoliday").val(_oBenefitOnAttendance.HolidayID);
    }


    function LoadSalaryHead()
    {
        $("#cboSalaryHead").icsLoadCombo({
            List:_oSalaryHeads,
            OptionValue: "SalaryHeadID",
            DisplayText: "Name",
            InitialValue:"--Select Salary Head--"
        });
    }

    function LoadLeaveHead()
    {
        $("#cboLeaveHead").icsLoadCombo({
            List:_oLeaveHeads,
            OptionValue: "LeaveHeadID",
            DisplayText: "Name",
            InitialValue:"--Select Leave Head--"
        });
    }

    function LoadHoliday()
    {
        $("#cboHoliday").icsLoadCombo({
            List:_oHolidays,
            OptionValue: "HolidayID",
            DisplayText: "Description",
            InitialValue:"--Select Holiday--"
        });
    }

    function ValidateInput() {

        if ($("#txtName").val() == null || $("#txtName").val() == "") {
            alert("Please enter a name!");
            $('#txtName').focus();
            return false;
        }
        var SIndex=
        document.getElementById('cboBenifitOn').selectedIndex;
        if (SIndex<=0) {
            alert("Please seelct Benifit On!");
            $('#cboBenifitOn').focus();
            return false;
        }

        else if(SIndex==2)
        {
            if($('#txtStartTime').timespinner('getValue')=="" || $('#txtStartTime').timespinner('getValue')== null)
            {
                alert("Please enter start time!");
                return false;
            }
            if($('#txtEndTime').timespinner('getValue')=="" || $('#txtEndTime').timespinner('getValue')== null)
            {
                alert("Please enter end time!");
                return false;
            }

            var Starthr=$('#txtStartTime').timespinner('getHours');
            var Startmn=$('#txtStartTime').timespinner('getMinutes');
            var Endhr=$('#txtEndTime').timespinner('getHours');
            var Endmn=$('#txtEndTime').timespinner('getMinutes');

            var nStartMin=0;
            var nEndMin=0;

            nStartMin = parseFloat(Starthr*60+Startmn);
            nEndMin=parseFloat(Endhr*60+Endmn);
            if(nStartMin>nEndMin)
            {
                alert("Invalid time slot!");
                return false;
            }
            var nTolerance=$("#txTolerance").val();
            if(parseFloat(nEndMin-nStartMin)<parseFloat(nTolerance))
            {
                alert("Invalid Tolerance time!");
                return false;
            }
        }

        if($('#chkOverTime').is(":checked") && !$('#chkFullWorkingHour').is(":checked")) {
            if ($("#txtOTHour").val() == null || $("#txtOTHour").val() == "") {
                alert("Please enter Overtime!");
                $('#txtOTHour').focus();
                return false;
            }
            if ($("#txtDistribute").val() == null || $("#txtDistribute").val() == "") {
                alert("Please enter OT Distribute/Presence!");
                $('#txtDistribute').focus();
                return false;
            }
            if($("#txtOTHour").val()%$("#txtDistribute").val()!=0)
            {
                alert("Invalid distribution!");
                return false;
            }
        }

        if($('#chkSalary').is(":checked")) {
            if ($("#cboSalaryHead").val()==0) {
                alert("Please select Salary Head!");
                $('#cboSalaryHead').focus();
                return false;
            }
            if (($("#txtFixedValue").val() == null || $("#txtFixedValue").val() == "") && ($("#txtPercent").val() == null || $("#txtPercent").val() == "")) {
                alert("Please enter fixed value or percentage!");
                $('#txtFixedValue').focus();
                return false;
            }
            if ($("#txtFixedValue").val()>0 && $("#txtPercent").val()>0) {
                alert("Please enter fixed value or percentage!");
                $('#txtFixedValue').focus();
                return false;
            }
        }

        if($('#chkLeave').is(":checked")) {
            if ($("#cboLeaveHead").val()==0) {
                alert("Please select Leave Head!");
                $('#cboLeaveHead').focus();
                return false;
            }
            if ($("#txtAmountofLeave").val() == null || $("#txtAmountofLeave").val() == "") {
                alert("Please enter OT Leave Amoun!");
                $('#txtAmountofLeave').focus();
                return false;
            }
        }

        return true;
    }

    function RefreshObject() {
        debugger
        var IsPercent= false;
        var Value=0;
        if($("#txtFixedValue").val()>0)
        {
            Value=$("#txtFixedValue").val();

        }
        else if($("#txtPercent").val()>0)
        {
            Value=$("#txtPercent").val();
            IsPercent=true;
        }
        var oBenefitOnAttendance = {
            BOAID: _oBenefitOnAttendance.BOAID,
            Name: $("#txtName").val(),
            BenefitOn:document.getElementById('cboBenifitOn').selectedIndex,
            StartTime:$('#txtStartTime').timespinner('getValue'),
            EndTime:$('#txtEndTime').timespinner('getValue'),
            TolarenceInMinute:$("#txTolerance").val(),
            OTInMinute:$("#txtOTHour").val()*60,
            OTDistributePerPresence:$("#txtDistribute").val()*60,
            IsFullWorkingHourOT:$('#chkFullWorkingHour').is(":checked"),
            SalaryHeadID:$("#cboSalaryHead").val(),
            AllowanceOn:document.getElementById('cboAllowanceOn').selectedIndex,
            IsPercent:IsPercent,
            Value:Value,
            LeaveHeadID:$("#cboLeaveHead").val(),
            LeaveAmount:$("#txtAmountofLeave").val(),
            HolidayID:$("#cboHoliday").val(),
            IsContinous:$('#chkContinue').is(":checked"),
            BenefitStartDate : $('#dtBenefitStartDate').datebox('getValue'),
            BenefitEndDate: $('#dtBenefitEndDate').datebox('getValue')
        };
        return oBenefitOnAttendance;
    }

    function Save(){
        if (!ValidateInput()) return;
        var oBenefitOnAttendance = RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/BenefitOnAttendance/BenefitOnAttendance_IU",
            traditional: true,
            data: JSON.stringify(oBenefitOnAttendance),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                _oBenefitOnAttendance = jQuery.parseJSON(data);
                if (_oBenefitOnAttendance.ErrorMessage == "" && _oBenefitOnAttendance.BOAID>0)
                {
                    alert("Data Saved sucessfully");
                    var oBenefitOnAttendances =sessionStorage.getItem("BenefitOnAttendances");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oBenefitOnAttendances!=null)
                    {
                        oBenefitOnAttendances = jQuery.parseJSON(oBenefitOnAttendances);
                    }
                    else
                    {
                        oBenefitOnAttendances=[];
                    }
                    if(nIndex!=-1)
                    {
                        oBenefitOnAttendances[nIndex]=_oBenefitOnAttendance;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oBenefitOnAttendances.length);
                        oBenefitOnAttendances.push(_oBenefitOnAttendance);
                    }
                    sessionStorage.setItem("BenefitOnAttendances", JSON.stringify(oBenefitOnAttendances));
                    window.location.href = _sBaseAddress+ "/BenefitOnAttendance/View_BenefitOnAttendances?menuid="+_nMenuid;
                }
                else
                {
                    alert(_oBenefitOnAttendance.ErrorMessage);
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnClose").click(function () {
        window.location.href = _sBaseAddress+ "/BenefitOnAttendance/View_BenefitOnAttendances?menuid="+_nMenuid;
    });

    $("#cboBenifitOn").change(function () {

        var SIndex=
        document.getElementById('cboBenifitOn').selectedIndex;

        if(SIndex==2)
        {
            $("#trStartEnd").show();
        }
        else
        {
            $("#trStartEnd").hide();
        }
    });

    $("#chkOverTime").click(function () {

        if($('#chkOverTime').is(":checked"))
        {
            $("#trForOvertime").show();
        }
        else
        {
            $("#trForOvertime").hide();
            $("#txtOTHour").val("");
            $("#txtDistribute").val("")
        }
    });

    $("#chkFullWorkingHour").click(function () {

        if(!$('#chkFullWorkingHour').is(":checked") && $('#chkOverTime').is(":checked"))
        {
            $("#trForOvertime").show();
        }
        else
        {
            $("#trForOvertime").hide();
            $("#txtOTHour").val("");
            $("#txtDistribute").val("")
        }
    });

    $("#chkSalary").click(function () {
        if($('#chkSalary').is(":checked"))
        {
            $("#trforsalary1").show();
            $("#trforsalary2").show();
        }
        else
        {
            $("#trforsalary2").hide();
            $("#trforsalary1").hide();
            $("#cboSalaryHead").val(0)
            document.getElementById('cboAllowanceOn').selectedIndex=0;
            $("#txtPercent").val("");
            $("#txtFixedValue").val("");
        }
    });

    $("#chkLeave").click(function () {
        if($('#chkLeave').is(":checked"))
        {
            $("#trforLeave").show();
        }
        else
        {
            $("#trforLeave").hide();
            $("#cboLeaveHead").val(0);
            $("#txtAmountofLeave").val("")
        }
    });

    $("#chkContinue").click(function () {
        if($('#chkContinue').is(":checked"))
        {
            $('#dtBenefitStartDate').datebox({disabled:true});
            $('#dtBenefitEndDate').datebox({disabled:true});
        }
        else
        {
            $('#dtBenefitStartDate').datebox({disabled:false});
            $('#dtBenefitEndDate').datebox({disabled:false});
            $('#dtBenefitStartDate').datebox('setValue',icsdateformat(new Date()));
            $('#dtBenefitEndDate').datebox('setValue',icsdateformat(new Date()));
        }
    });

    $("#txtFixedValue").keyup(function () {
        if($("#txtFixedValue").val()>0)
        {
            $("#txtPercent").val(0);
        }
    });
    $("#txtPercent").keyup(function () {
        if($("#txtPercent").val()>0)
        {
            $("#txtFixedValue").val(0);
        }
    });
</script>