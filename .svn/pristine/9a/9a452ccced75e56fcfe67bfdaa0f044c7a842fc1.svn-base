@model ESimSol.BusinessObjects.AttendanceDaily
@{
    ViewBag.Title = "Daily Attendance";
}

<div class="menuMainCollectionTable" style="margin-left:0px; height:550px">
    <table id="tblAttendanceDaily" title="Daily Attendance List"
           class="easyui-datagrid" style="width:100%;height:500px" fitcolumns="false"
           rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar"
           selectoncheck="false" checkonselect="false"
           data-options="
        rowStyler: function(index,row){
            if (row.InTimeInString == '-' && row.OutTimeInString == '-' && row.IsOSD== false && row.IsLeave== false){
                return 'background-color:#6293BB;color:#fff;font-weight:bold;';
            }
        }
    ">
        <thead>
            <tr>
                <th data-options="field:'Selected',checkbox:true"></th>
                <th field="EmployeeName" width="150" align="left">Employee</th>
                <th field="EmployeeCode" width="110" align="left">Code</th>
                <th field="DesignationName" width="120" align="left">Designation</th>
                <th field="CompInTimeInString" width="60" align="right">InTime</th>
                <th field="CompOutTimeInString" width="60" align="right">OutTime</th>
                <th field="CompLateArrivalHourSt" width="90" align="right">Late(Hr)</th>
                <th field="CompEarlyDepartureHrSt" width="100" align="right">Earlyleaving(Hr)</th>
                <th field="CompOTHrSt" width="100" align="right">Overtime(Hr)</th>
                <th field="CompTotalWorkingHourSt" width="100" align="center">Total working hour</th>
                <th field="IsNoWorkInString" width="100" align="center">No Work</th>
                <th field="HRM_ShiftName" width="60" align="center">Shift</th>
                <th field="ManualInString" width="60" align="center">RecodPostedBy</th>
                <th field="LeaveStatus" width="60" align="center">Leave Status</th>
                <!--<th field="AttDescriptionInString" width="60" align="center">Description</th>-->
                <th field="AttStatusInStringInShortComp" width="60" align="center">Description</th>
                <th field="LocationName" width="60" align="center">Location Name</th>
                <th field="Remark" width="60" align="center">Remark</th>
            </tr>
        </thead>
    </table>

    <table>
        <tr>
            <td>
                <input id="chkRange_Colection" type="checkbox" />Range
                <label id="lblRange1_Colection">
                    <input id="txtFrom_Colection" type="text" style="width:40px" />&nbsp; To &nbsp;
                </label>
                <label id="lblRange2">
                    <input id="txtTo_Colection" type="text" style="width:40px" />
                </label>
                
                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
            </td>
            <td>
                &nbsp;&nbsp;&nbsp;
                <label id="lblcount"></label>
                &nbsp;&nbsp;&nbsp;
                <label id="lblSort"></label>
            </td>
        </tr>
    </table>

    <div id="toolbar" style="height: auto;">
     
        @*<span id="regionDateFrom">
            <span>
                <select id="cboYear" style="width:70px;"></select>
            </span><span>
                <select id="cboMonth"></select>
            </span><span>
                <select id="cboDay" style="width:60px;"></select>
            </span>
        </span>*@
        <input id="dtDate" type="text" style="width: 17%;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />

        <input id="txtBusinessUnit_Collection" style="width:13%;" placeholder="Pick Business Unit" type="text" />
        <input id="btnBusinessUnitPicker_Collection" type="button" value="P" />
        <input id="btnResetBusinessUnitPicker_Collection" type="button" value="C" />

        <input id="txtLocation_Colection" style="width:14%;" placeholder="Pick Location" type="text" />
        <input id="btnLocationPicker_Colection" type="button" value="P" />
        <input id="btnResetLocationPicker_Colection" type="button" value="C" />

        <input id="txtDepartment_Collection" style="width:14%;" type="text" placeholder="Pick Department" />
        <input id="btnDepartmentPicker_Collection" type="button" value="P" />
        <input id="btnResetDepartmentPicker_Collection" type="button" value="C" />

        <input id="txtDesignation_Collection" type="text" style="width:14%;" placeholder="Pick Designation" />
        <input id="btnDesignationPicker_Collection" value="P" type="button" />
        <input id="btnResetDesignationPicker_Collection" type="button" value="C" />
        <br />
        <input id="txtEmployee_Collection" style="width:11.3%;" type="text" placeholder="Type Code & Enter" />
        <input id="btnEmployee" type="button" value="P" />
        <input id="btnCEmployee" type="button" value="C" />

        <!--Shift:<select id="cboShift" style="width:120px;"></select>-->
        <input id="txtShift" style="width:13%;" type="text" placeholder="Pick Shift" />
        <input id="btnShift" type="button" value="P" />
        <input id="btnResetShift" type="button" value="C" />
       
        @*<a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>*@

        &nbsp;&nbsp;<input id="chkPresent" type="checkbox" />Present &nbsp;
        <input id="chkAbsent" type="checkbox" />Absent &nbsp;
        <input id="chkLate" type="checkbox" />Late &nbsp;
        <input id="chkEarlyLeaving" type="checkbox" />EarlyLeaving &nbsp;
        <input id="chkOT" type="checkbox" />OT&nbsp;
        <input id="chkNoWork" type="checkbox" />No Work &nbsp;
        <input id="chkLeave" type="checkbox" />Leave &nbsp;
        <input id="chkNoOutTime" type="checkbox" />No Out Time &nbsp;
        <input id="chkRemarked" type="checkbox" />Remarked &nbsp;
        <input id="txtRemarks" type="text" style="width:14%;" placeholder="Type Remarks" />
        <a id="btnSrc" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="Search()">Search</a>
        <br />
        <select id="cboLeaveStatus">
            @*<option value="0">Leave</option>
                <option value="1">CL</option>
                <option value="2">SL</option>
                <option value="3">EL</option>
                <option value="4">ML</option>
                <option value="5">OC</option>
                <option value="5">LWP</option>*@
        </select>

        <select id="cboPrint">
            <option value="0">Location Wise</option>
            <option value="1">Department Wise</option>
            <option value="2">Attendance Summary</option>
            <option value="3">Attendance Summary F2</option>
        </select>
        <a id="btnPrintCheckBoxWise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
        <a id="btnExcelCheckBoxWise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">Excel</a>
        <a id="btnAtttSummary" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">Excel</a>
        <a id="btnAtttSummaryF2" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">Excel</a>
        
        <input id="chkFormat" type="checkbox" />12 Hr(s) &nbsp;

        <a href="javascript:void(0)" class="easyui-linkbutton" plain="true" onclick="AttendanceDaily()" iconcls="icon-add">Manual Attendance</a>
        <a id="btnNoWork" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">No Work</a>
        <a id="btnCancelNoWork" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Cancel No Work</a>
        <a id="btnRemoveFromList" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove From List</a>
        <a id="btnAttHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Att. History</a>
        <a id="btnExtraSearching" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Extra Searching</a>
        <br />
        <label id="lblInfo" style="font-weight:bold; color:Blue"></label>
    </div>

    <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="locationtree" data-options="checkbox:true" singleselect="false"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winManualAttendance" class="easyui-window winstyle" title="Manual Attendance" style="width:400px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
            <tr>
                <td>
                    In Time :
                </td>
                <td>
                    <input id="timeSpinner" class="easyui-timespinner" style="width: 150px;" requird="required"
                           data-options="showSeconds:false" />
                </td>
                <td></td>
                <td>
                    <input id="chkIsConsiderLate" type="checkbox" />
                    No Late
                </td>
            </tr>
            <tr>
                <td style=" text-align: right">
                    Out Time :
                </td>
                <td>
                    <input id="txtOutTime" class="easyui-timespinner" style="width: 150px;" requird="required"
                           data-options="showSeconds:false" />
                </td>
                <td></td>
                <td>
                    <input id="chkIsConsiderEarlyLeave" type="checkbox" />
                    No Early Leave
                </td>
            </tr>
            <tr>
                <td style=" text-align: right"></td>
                <td>
                    <input id="chkIsManualOT" type="checkbox" />
                    Manual OT
                    <input id="txtManualOT" type="text" class="number" style="width:74px;" />
                </td>
                <td></td>
                <td>
                    <input id="chkIsAbsent" type="checkbox" onclick="disableOnAbsent()" />
                    Absent
                </td>
            </tr>
            <tr>

                <td style=" text-align: right">
                    Leave
                </td>
                <td>
                    <select id="cboLeaveHead" style="width:150px;"></select>
                </td>
                <td></td>
                <td>
                    <input id="chkIsDayOff" type="checkbox" />
                    Dayoff
                </td>
            </tr>
            <tr>

                <td style=" text-align: right"></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>

                <td style=" text-align: right"></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td style=" text-align: right"></td>
                <td></td>
                <td></td>
                <td>
                    <input id="chkIsPresent" type="checkbox" />
                    Present
                </td>
            </tr>
        </table>
        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:400px; text-align:left"><span id="spAttStatus"></span></td>

                    <td style="width:50px">
                        <a id="btnManualAttendanceUpdate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Update</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnManualAttendanceClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>

    <div id="winManualAttendanceHistory" class="easyui-window winstyle" title="Manual Attendance History" style="width:550px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <table id="tblManualAttendanceHistory" class="easyui-datagrid" style="width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
            <thead>
                <tr>
                    <th field="EmployeeName" width="25%" align="left">User Name</th>
                    <th field="Description" width="50%" align="left">Update On</th>
                    <th field="DBServerDateTimeInString" width="23%" align="left">Process Date</th>
                </tr>
            </thead>
        </table>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
            <tr>
                <td style="width:400px; text-align:right"></td>
                <td style="width:50px"></td>
                <td style="width:50px">
                    <a id="winManualAttendanceHistoryClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </td>
            </tr>
        </table>
    </div>

    <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Present Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Permanent Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            BU :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboBU" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" style="width:130px; float:left;" class="selection-search cboReset"></select>
                            &nbsp; Group:
                            <input id="txtEmployeeGroupAdv" style="width:90px;" type="text" />
                            <input id="btnEmployeeGroupPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                            <input id="btnEmployeeGroupResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Category:
                        </td>
                        <td class="td-AdvSearch-Level">
                            <div>
                                <select id="cboCategory" style="width:130px; float:left;"></select>
                                &nbsp; Gender :
                                <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch" style="width:130px; float:left;" class="selection-search cboReset"></select>

                            &nbsp; Block:
                            <input id="txtEmployeeBlockAdv" style="width:90px;" type="text" />
                            <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                            <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 75px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                            <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
            </div>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" >Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winExtraSearching" class="easyui-window winstyle" title="Extra Searching Criteria" style="width:30%;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <fieldset>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                    <tr>
                        <td style="text-align: right"></td>
                        <td>
                            <select id="cboCriteriaType" style="width:195px;">
                                <option value="1">Between</option>
                                <option value="2">Equal</option>
                                <option value="3">Before/Less</option>
                                <option value="4">After/Greater</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right">
                            In Time :
                        </td>
                        <td>
                            <input id="tpStartInTime" class="easyui-timespinner" style="width:80px;" required="required" data-options="showSeconds:false" />
                            <span id="spEndInTime">
                                &nbsp; TO &nbsp;
                                <input id="tpEndInTime" class="easyui-timespinner" style="width:80px;" required="required" data-options="showSeconds:false" />
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right">
                            Out Time :
                        </td>
                        <td>
                            <input id="tpStartOutTime" class="easyui-timespinner" style="width:80px;" required="required" data-options="showSeconds:false" />
                            <span id="spEndOutTime">
                                &nbsp; TO &nbsp;
                                <input id="tpEndOutTime" class="easyui-timespinner" style="width:80px;" required="required" data-options="showSeconds:false" />
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right">
                            Late :
                        </td>
                        <td>
                            <input id="txtStartLate" type="text" class="number" style="width:80px;" placeholder="min." />
                            <span id="spEndLate">
                                &nbsp; TO &nbsp;
                                <input id="txtEndLate" type="text" class="number" style="width:80px;" placeholder="min." />
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right">
                            Early :
                        </td>
                        <td>
                            <input id="txtStartEarly" type="text" class="number" style="width:80px;" placeholder="min." />
                            <span id="spEndEarly">
                                &nbsp; TO &nbsp;
                                <input id="txtEndEarly" type="text" class="number" style="width:80px;" placeholder="min." />
                            </span>
                        </td>
                    </tr>
                    
                </table>
            </fieldset>
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                    <tr>
                        <td style="width: 440px; text-align: right">
                            <a id="btnSearchExtra()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search"
                               plain="true" onclick="ExtraSearch()"></a>
                        </td>
                        <td style="width: 440px; text-align: right">
                            <a id="btnExtraSearchingPrintPDF" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print"
                               plain="true" onclick="ExtraSearching_PDF()"></a>
                        </td>
                        <td style="width: 50px">
                            <a id="btnExtraSearchingPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel"
                               plain="true" onclick="ExtraSearching_XL()"></a>
                        </td>
                        <td style="width: 50px">
                            <a id="btnExtraSearchingClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

</div>
@Html.Raw(File.ReadAllText(Server.MapPath("~/Views/Compliance/ManualAttendance.html")))
<style type="text/css">
    .lblStar {
        color: #ff0000;
        font-weight: bold;
    }

    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>

<script type="text/javascript">

    var _oAttendanceDailys=[];
    var _sBaseAddress="";
    //var _nDepartmentID =0 ;
    var _oPresentAttendanceDailys = [];
    var _oAbsentAttendanceDailys = [];
    var _oLateAttendanceDailys = [];
    var _oEarlyAttendanceDailys =[];
    var _oOTAttendanceDailys =[];
    var _oNoWorkAttendanceDailys =[];
    var _oLeaveAttendanceDailys =[];
    var _oNoOutTimeAttendanceDailys=[];
    var _oEmployee = null;
    var _nEmployeeID = 0;
    var _nLoadRecords = 0;
    var _nRowLength = 0;
    var _bNext = false;
    var _nLastAttendanceID = 0;
    var _nPresent = 0;
    var _nAbsent = 0;
    var _nLate = 0;
    var _nEarlyLeaving = 0;
    var _nOT= 0;
    var _nNoWork= 0;
    var _nNoOutTime= 0;
    var _bAppend = false;
    var _oEmployees = [];
    var _sEmployeeIDs = "";
    var _sDepartmentNames = "";
    var _sDepartmentIds = "";
    var _sDesignationNames = "";
    var _sDesignationIds = "";
    var _oAttendanceDaily=null;
    //var _nLocationID=0;
    var _nLeave=0;
    var _oLeaveHeads=[];
    var _nAttendanceID = 0;

    var _nLastEmployeeID = 0;
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _oBusinessUnits=[];

    var _sAttendanceSchemeID="";
    var _sLocationID = "";
    var _sBusinessUnitIds="";
    var _sBlockNames="";
    var _sBMMIDs="";

    var _sShiftNames="";
    var _sShiftIds = "";
    var _oLeaveHeads = null;
    var _sBlockNamesAdv="";
    var _sBlockIDsAdv="";

    
    var _sGroupNamesAdv="";
    var _sGroupIDsAdv="";


    $(document).ready(function () {
        _oAttendanceDaily =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oLeaveHeads =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.LeaveHeads));

        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));

        _oLeaveHeads =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LeaveHead));
        $('#dtDate').datebox('setValue',icsdateformat(new Date()));

        $('#txtFrom_Colection').numberbox({min:0, precision:0 });
        $('#txtTo_Colection').numberbox({min:0, precision:0 });
        $('#txtFrom_Colection').numberbox('setValue',1);
        $('#txtTo_Colection').numberbox('setValue',50);
        document.getElementById("lblRange1_Colection").style.display = 'none';

        $("#cboEditedShift").icsLoadCombo({
            List:  _oAttendanceDaily.HRMShifts,
            OptionValue: "ShiftID",
            DisplayText: "Name",
        });


        $("#cboLeaveHead").icsLoadCombo({
            List:  _oLeaveHeads,
            OptionValue: "LeaveHeadID",
            DisplayText: "Name",
        });

        //$('#timeSpinner').timespinner('setValue', '00:00');
        //$('#txtOutTime').timespinner('setValue', '00:00');

        $('#cboEditedShift').val(0);

        $("#cboLeaveStatus").icsLoadCombo({
            List:  _oLeaveHeads,
            OptionValue: "LeaveHeadID",
            DisplayText: "ShortName",
        });
        $('#btnAttHistory').hide();
        InitializeAdvSearch();
        LoadBU();
        LoadCateGory(oEmployeeCategorys);
        $("#btnAtttSummary").hide();
        $("#btnAtttSummaryF2").hide();
    });

    function LoadCateGory(oEmployeeCategorys)
    {
        $("#cboCategory").icsLoadCombo({
            List: oEmployeeCategorys,
            OptionValue: "Value",
            DisplayText: "Text"
        });
    }
    function LoadBU()
    {
        $('#cboBU_Collection').combobox({
            data:_oBusinessUnits,
            valueField:'BusinessUnitID',
            textField:'Name',
            multiple:true
        });
        $('#cboBU_Collection').combobox('setValue',  _oBusinessUnits.length>0?_oBusinessUnits[0].BusinessUnitID:0);
    }

    $('#tblAttendanceDaily').datagrid({ onSelect: function (rowIndex, rowData) { OpenAttHistory(rowIndex, rowData); } });

    function OpenAttHistory(rowIndex, rowData) {
        debugger;
        _nAttendanceID=0;
        if (rowData != null && rowData.AttendanceID > 0) {
            if (rowData.IsManual) {
                $('#btnAttHistory').show();
                _nAttendanceID=rowData.AttendanceID;
            }
            else {
                $('#btnAttHistory').hide();
            }
        }
    }

    ////sagor datetime start
    //function SetDateTime()
    //{
    //    var oDate=new Date();
    //    oDate.setFullYear(2014);
    //    /*---------------------------------------- Start Set Year-------------------------------------------*/
    //    var sYear="";
    //    sYear +="<option value='0'>"+'Year'+"</option>";
    //    for(var i=0; i<=10; i++)
    //    {
    //        sYear += "<option value='" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"'>" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"</option>";
    //    }
    //    $('#cboYear').html(sYear);

    //    /*---------------------------------------- End Set Year-------------------------------------------*/

    //    /*---------------------------------------- Start Set Month-------------------------------------------*/
    //    var sMonth="";
    //    var oMonths=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
    //    sMonth +="<option value='0'>"+'Month'+"</option>";
    //    for(var i=0; i<oMonths.length; i++)
    //    {
    //        sMonth += "<option value='" +(parseInt(i)+1)+"'>" + oMonths[i] +"</option>";
    //    }
    //    $('#cboMonth').html(sMonth);

    //    /*---------------------------------------- End Set Month-------------------------------------------*/

    //    /*---------------------------------------- Start Set Date-------------------------------------------*/
    //    var sDay ="<option value='0'>"+'Day'+"</option>";
    //    $('#cboDay').html(sDay);

    //    /*---------------------------------------- End Set Date-------------------------------------------*/
    //}

    //$('#cboYear').change(function(e)
    //{
    //    var nYear=$('#cboYear').val();
    //    var nMonth=$('#cboMonth').val();
    //    if(nYear>0 && nMonth>0)
    //    {
    //        $('#cboDay').html(SetDateEvent(nYear, nMonth));
    //    }
    //});

    //$('#cboMonth').change(function(e)
    //{
    //    var nYear=$('#cboYear').val();
    //    var nMonth=$('#cboMonth').val();
    //    if(nYear>0 && nMonth>0)
    //    {
    //        $('#cboDay').html(SetDateEvent(nYear, nMonth));
    //    }
    //});

    //function SetDateEvent(nYear, nMonth)
    //{
    //    var oDate=new Date();
    //    var sDay="";
    //    if( parseInt(nMonth)>0)
    //    {
    //        var nDay= new Date(parseInt(nYear), parseInt(nMonth), 0).getDate();
    //        sDay +="<option value='0'>"+'Day'+"</option>";
    //        for(var i=1; i<=parseInt(nDay); i++)
    //        {
    //            if(i<10)
    //            {
    //                sDay += "<option value='" +i+"'>" + '0'+i +"</option>";
    //            }
    //            else
    //            {
    //                sDay += "<option value='" +i+"'>" + i +"</option>";
    //            }
    //        }
    //    }
    //    return sDay;
    //}

    //function SetStartTime(oDate)
    //{
    //    var nyear=oDate.getFullYear();
    //    var nmonth=oDate.getMonth()+1;
    //    var nday=oDate.getDate();
    //    $('#cboYear').val(nyear);
    //    $('#cboMonth').val(nmonth);
    //    $('#cboDay').html(SetDateEvent(nyear,nmonth));
    //    $('#cboDay').val(nday);
    //}

    //function GenerateStartTimeInString()
    //{
    //    var sDate=  $('#cboMonth').val() +'/'+ $('#cboDay').val() +'/'+ $('#cboYear').val();
    //    return icsdateformat(new Date(sDate));
    //}

    //function ValidationOfStartTime()
    //{
    //    if($('#cboYear').val()==0)
    //    {
    //        alert("Please select a year.");
    //        document.getElementById('cboYear').focus();
    //        return false;
    //    }
    //    if($('#cboMonth').val()==0)
    //    {
    //        alert("Please select a month.");
    //        document.getElementById('cboMonth').focus();
    //        return false;
    //    }
    //    if($('#cboDay').val()==0)
    //    {
    //        alert("Please select a day.");
    //        document.getElementById('cboDay').focus();
    //        return false;
    //    }
    //    return true;
    //}
    ////sagor datetime end

    /*---------------- emp Search Start click----------------*/

    function InitializeAdvSearch(){
        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));
        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });

        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                    {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                    {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
        $('#txtEmployeeGroupAdv').val("");
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDsAdv = "";
        _sGroupIDsAdv = "";
    }

    $("#btnEmployee").click(function () {

        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            $("#lblRange1").show();
        }
        else
        {
            $("#lblRange1").hide();
        }
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        debugger
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }

        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }

        var nBusinessUnitID = $("#cboBU").val();
        var nCategory=$('#cboCategory').val();
        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();

        debugger;
        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
            nEmployeeTypeID==0 && sGender=="" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
            bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0
            && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBlockIDsAdv=="" && _sGroupIDsAdv=="")
            {
                alert("Please enter you selection criteria."); return false;
            }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                    sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                    bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                    sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                    +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBlockIDsAdv+"~"+_sGroupIDsAdv;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnEmployeePickerOk").click(function () {
        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length<=0) { alert("please select atleast one item");return; }
        var sEmpIDs="";
        var sEmpNames="";
        for(var i=0;i<oEmployees.length;i++)
        {
            sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
            sEmpNames=sEmpNames+oEmployees[i].Name+",";
        }
        _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
        sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
        $("#txtEmployee_Collection").val(sEmpNames);
        $("#winEmployeePicker").icsWindow('close');
    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });

    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    /*-------------Start Business Unit Picker----------------*/
    $("#btnBusinessUnitPicker_Collection").click(function(e){
        BusinessUnitPicker();
    });

    $("#txtBusinessUnit_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            BusinessUnitPicker();
        }
    });

    function BusinessUnitPicker()
    {
        var oBusinessUnit={
            BusinessUnitID:0
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBusinessUnit,
            ControllerName: "BusinessUnit",
            ActionName: "GetsBusinessUnitWithPermission",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BusinessUnitID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBusinessUnit',
                        winclass:'clsBusinessUnit',
                        winwidth: 320,
                        winheight: 400,
                        tableid: 'tblBusinessUnit',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Business Unit List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBusinessUnitPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBusinessUnits=[];
            oBusinessUnits = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBusinessUnit')
            {
                if(oBusinessUnits!=null && oBusinessUnits.length>0)
                {
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sBusinessUnitName = "";
                    for(var i=0; i<oBusinessUnits.length; i++)
                    {
                        sBusinessUnitName+=oBusinessUnits[i].Name+",";
                        _sBusinessUnitIds+=oBusinessUnits[i].BusinessUnitID+",";
                    }

                    sBusinessUnitName=sBusinessUnitName.substring(0,sBusinessUnitName.length-1);
                    _sBusinessUnitIds=_sBusinessUnitIds.substring(0,_sBusinessUnitIds.length-1);
                    $("#txtBusinessUnit_Collection").val(sBusinessUnitName);
                }
                else
                {
                    alert("Please select a Business Unit.");
                }
            }
        });
    }

    $("#btnResetBusinessUnitPicker_Collection").click(function(e){
        $('#txtBusinessUnit_Collection').val("");
        _sBusinessUnitIds="";
    });
    /*-------------End Business Unit Picker----------------*/

    /*-------------Location Picker----------------*/
    var btnLocation="";
    $("#btnLocationPicker,#btnLocationPicker_Colection").click(function(e){
        btnLocation = $(this).attr("id");
        var sBusinessUnitIDs ="";
        var nBusinessUnitID=0;
        if(btnLocation=="btnLocationPicker")
        {
            nBusinessUnitID = $("#cboBU").val();
            sBusinessUnitIDs = String(nBusinessUnitID);
        }
        else{sBusinessUnitIDs=_sBusinessUnitIds;}
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        if(btnLocation=="btnLocationPicker")
        {
            var oLocation = $('#locationtree').tree('getSelected');
            if(oLocation!=null && oLocation.id>0){
                $("#winLocationPicker").icsWindow('close');
                _sLocationID=oLocation.id;
                $('#txtLocation').val(oLocation.text);
            }
            else{
                alert("Please select a location.");
            }
        }
        else
        {
            var oLocations = $('#locationtree').tree('getChecked');
            if(oLocations!=null && oLocations.length>0)
            {
                var LocationName="";
                for(var i=0; i<oLocations.length; i++)
                {
                    if(oLocations[i].id !=1)
                    {
                        LocationName+=oLocations[i].text+",";
                        _sLocationID+=oLocations[i].id+",";
                    }
                }

                LocationName=LocationName.substring(0,LocationName.length-1);
                _sLocationID=_sLocationID.substring(0,_sLocationID.length-1);
                $("#winLocationPicker").icsWindow('close');
                $('#txtLocation_Colection').val(LocationName);
            }
            else
            {
                alert("Please select a location.");
            }
        }
    });

    $('#txtLocation_Colection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sBusinessUnitIDs ="";
            sBusinessUnitIDs=_sBusinessUnitIds;
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };
            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker,#btnResetLocationPicker_Colection").click(function(e){
        $('#txtLocation').val("");
        $('#txtLocation_Colection').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){
        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){
        _sDepartmentNames = "";
        _sDepartmentIds= "";
        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentIds= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose,#btnDepartmentPickerClose_Collection").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
        $("#winDepartmentPicker_Collection").icsWindow('close');
    });

    $("#btnResetDepartmentPicker,#btnResetDepartmentPicker_Collection").click(function(e){
        $('#txtDepartment,#txtDepartment_Collection').val("");
        _sDepartmentIds="";
        _sDepartmentNames = "";
    });

    /*-------------Designation Picker----------------*/
    var btnDesignation="";
    $("#btnDesignationPicker,#btnDesignationPicker_Collection").click(function(e){
        btnDesignation = $(this).attr("id");
        DesignationPicker();
    });

    $("#txtDesignation_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            btnDesignation ="btnDesignationPicker_Collection";
            DesignationPicker();
        }
    });

    function DesignationPicker()
    {
        var oDesignation={
            DesignationID:0,
            Params: _sBusinessUnitIds+'~'+_sLocationID+'~'+ _sDepartmentIds
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            _sDesignationNames = "";
            _sDesignationIds = "";
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;
                    if(btnDesignation=="btnDesignationPicker_Collection"){bmultiplereturn=true;}

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oDesignations=[];

            if(btnDesignation=="btnDesignationPicker_Collection")
            {
                oDesignations = $('#'+oPickerobj.tableid).datagrid('getChecked');
            }
            else
            {
                var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
                oDesignations.push(oDesignation);
            }

            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignations!=null && oDesignations.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames+=oDesignations[i].Name+",";
                        _sDesignationIds+=oDesignations[i].DesignationID+",";
                    }

                    _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                    _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
                    if(btnDesignation=="btnDesignationPicker_Collection")
                    {
                        $("#txtDesignation_Collection").val(_sDesignationNames);
                    }
                    else
                    {
                        $("#txtDesignation").val(_sDesignationNames);
                    }
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker,#btnResetDesignationPicker_Collection").click(function(e){
        $('#txtDesignation').val("");
        $('#txtDesignation_Collection').val("");
        _sDesignationIds="";
        _sDesignationNames = "";
    });
    /*------------- Start Block Picker----------------*/

    $("#btnBlock").click(function(e){
        BlockPicker();
    });

    function BlockPicker()
    {
        var oBlockMachineMapping={
            ProductionProcessInt:0,
            DepartmentID:0,
            BlockName:""
        }
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlockMachineMapping,
            ControllerName: "BlockMachineMapping",
            ActionName: "BlockMachineMapping_Search",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BMMID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblShift',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'BlockName',
                        windowTittle: 'Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBlocks=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNames += oBlocks[i].BlockName+",";
                        _sBMMIDs += oBlocks[i].BMMID+",";

                    }
                    _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                    _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
                    $("#txtBlock").val(_sBlockNames);
                }
                else
                {
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetBlock").click(function(e){
        $('#txtBlock').val("");
        _sBlockNames="";
        _sBMMIDs = "";
    });

    $("#txtBlock").keypress(function(e){
        if (e.which == 13)
        {
            BlockPicker();
        }
    });
    /*------------- End Block Picker----------------*/
    /*---------------- emp Search End click ----------------*/

    /*---------------- emp Search Start keyprees----------------*/
    $('#txtEmployee_Collection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee_Collection").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
            SearchEmployeeByText(sCodeName);
        }
    });

    function SearchEmployeeByText(sEmpNameCode){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _sEmployeeIDs=oreturnObj.EmployeeID;
                    $("#txtEmployee_Collection").val(oreturnObj.Name);
                    $("#winEmployeePicker").icsWindow('close');
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        _sEmployeeIDs=oreturnObj.EmployeeID;
                        $("#txtEmployee_Collection").val(oreturnObj.Name);
                        $("#winEmployeePicker").icsWindow('close');
                    }
                }
            }
        });
    }

    $('#btnCEmployee').click(function (e)
    {
        document.getElementById("txtEmployee_Collection").value = "" ;
        _sEmployeeIDs = 0;
    });

    /*---------------- emp Search Start keyprees----------------*/

    /*-------------Department Picker start Collection----------------*/
    $("#btnDepartmentPicker_Collection").click(function(e){
        DepartmentPicker();
    });

    $("#txtDepartment_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            DepartmentPicker();
        }
    });

    function DepartmentPicker()
    {
        $("#winDepartmentPicker_Collection").icsWindow('open');
        var oDepartment={DepartmentID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree_Collection').tree({ data: [response.obj] });
                }
            }
        });
    }

    $("#btnDepartmentPickerOk_Collection").click(function(e){
        var oDepartments = $('#departmenttree_Collection').tree('getChecked');
        if(oDepartments!=null && oDepartments.length>0){
            $("#winDepartmentPicker_Collection").icsWindow('close');
            for(var i=0; i<oDepartments.length; i++)
            {
                _sDepartmentNames+=oDepartments[i].text+",";
                _sDepartmentIds+=oDepartments[i].id+",";
             }

            _sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
            _sDepartmentIds=_sDepartmentIds.substring(0,_sDepartmentIds.length-1);
            $("#txtDepartment_Collection").val(_sDepartmentNames);
        }
        else{
            alert("Please select a department.");
        }
    });

    /*-------------Department Picker start Collection----------------*/

    /*------------- Start Shift Picker----------------*/

    $("#btnShift").click(function(e){
        ShiftPicker();
    });

    function ShiftPicker()
    {
        var oShift={
            ShiftID:0,
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oShift,
            ControllerName: "HRMShift",
            ActionName: "GetsShifts",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ShiftID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ShiftWithDuration", title: "Shift", width: 230, align: "left" };tblColums.push(oColumn);
                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winShift',
                        winclass:'clsShift',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblShift',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Shift List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeShiftPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeShiftPickerbutton(oPickerobj)
    {
        _sShiftNames="";
        _sShiftIds = "";
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oShifts=[];
            oShifts= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winShift')
            {
                if(oShifts!=null && oShifts.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oShifts.length; i++)
                    {
                        _sShiftNames += oShifts[i].ShiftWithDuration+",";
                        _sShiftIds += oShifts[i].ShiftID+",";

                    }
                    _sShiftNames=_sShiftNames.substring(0,_sShiftNames.length-1);
                    _sShiftIds=_sShiftIds.substring(0,_sShiftIds.length-1);
                    $("#txtShift").val(_sShiftNames);
                }
                else
                {
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetShift").click(function(e){
        $('#txtShift').val("");
        _sShiftNames="";
        _sShiftIds = "";
    });

    $("#txtShift").keypress(function(e){
        if (e.which == 13)
        {
            ShiftPicker();
        }
    });

    /*------------- End Shift Picker----------------*/

    /*-------------Search start----------------*/
    function Search()
    {
        debugger;
        if(!_bNext)
        {
            _nRowLength = 0;
            _nLastAttendanceID = 0;
            _oAttendanceDailys=[];
        }

        var sDate = $('#dtDate').datebox('getValue');

        var tsv = ((new Date()).getTime()) / 1000;
        var bAbsent = false ;
        //var nShiftID=$("#cboShift").val();
        //_nLoadRecords = document.getElementById("txtLoadRecords").value;
        _nLoadRecords = document.getElementById("txtTo_Colection").value;
        if(document.getElementById("chkRange_Colection").checked == true)
        {
            var RangeFrom = 0;
            var RangeTo = 0;
            RangeFrom = parseFloat(document.getElementById("txtFrom_Colection").value);
            RangeTo = parseFloat(document.getElementById("txtTo_Colection").value);

            if(RangeFrom > RangeTo)
            {
                alert("Invalid Range !");
                return;
            }
            _nRowLength = 0;
            _nLoadRecords = 0;

            _nRowLength = RangeFrom-1;
            _nLoadRecords = RangeTo - RangeFrom +1;
        }

        var sChkType = "";

        if($("#chkPresent").is(":checked"))
        {
            sChkType="Present";
        }
        else if($("#chkAbsent").is(":checked"))
        {
            sChkType="Absent";
        }
        else if($("#chkLate").is(":checked"))
        {
            sChkType="Late";
        }
        else if($("#chkEarlyLeaving").is(":checked"))
        {
            sChkType="Early";
        }
        else if($("#chkOT").is(":checked"))
        {
            sChkType="OT";
        }
        else if($("#chkNoWork").is(":checked"))
        {
            sChkType="NoWork";
        }
        else if($("#chkLeave").is(":checked"))
        {
            sChkType="Leave";
        }
        else if($("#chkNoOutTime").is(":checked"))
        {
            sChkType="NOT";
        }

        debugger;

        var CriteriaType=$('#cboCriteriaType').val();
        var StartInTime=$('#tpStartInTime').timespinner('getValue');
        if(StartInTime=="00:00" || StartInTime=="") {StartInTime = "00:00:00";}
        var EndInTime=$('#tpEndInTime').timespinner('getValue');
        if(EndInTime=="00:00" || EndInTime=="") {EndInTime = "00:00:00";}
        var StartOutTime=$('#tpStartOutTime').timespinner('getValue');
        if(StartOutTime=="00:00" || StartOutTime=="") {StartOutTime = "00:00:00";}
        var EndOutTime=$('#tpEndOutTime').timespinner('getValue');
        if(EndOutTime=="00:00" || EndOutTime=="") {EndOutTime = "00:00:00";}

        var StartLate=$('#txtStartLate').val();
        if(StartLate== null || StartLate<=0){StartLate=0}
        var EndLate=$('#txtEndLate').val();
        if(EndLate== null || EndLate<=0){EndLate=0}
        var StartEarly=$('#txtStartEarly').val();
        if(StartEarly== null || StartEarly<=0){StartEarly=0}
        var EndEarly=$('#txtEndEarly').val();
        if(EndEarly== null || EndEarly<=0){EndEarly=0}

        CriteriaType=0;
        var remarks = $('#txtRemarks').val();
        var isRerarked = $("#chkRemarked").is(":checked");

        $.ajax({
            type: "GET",
            dataType: "json",
            url: _sBaseAddress + "/Compliance/GetAttendanceBYDate",
            data:{
                sDate: sDate , sBusinessUnitIds:_sBusinessUnitIds,sLocationID: _sLocationID, sDepartmentIds : _sDepartmentIds,sDesignationIds:_sDesignationIds, sEmployeeIDs : _sEmployeeIDs, bAbsent : bAbsent,ShiftIds:_sShiftIds,sChkType:sChkType,nLoadRecords : _nLoadRecords, nRowLength : _nRowLength,
                CriteriaType: CriteriaType ,
                StartInTime:StartInTime,
                EndInTime : EndInTime,
                StartOutTime: StartOutTime,
                EndOutTime : EndOutTime,
                StartLate:StartLate,
                EndLate : EndLate,
                StartEarly : StartEarly,
                EndEarly:EndEarly,
                Remarks:remarks,
                IsRemarked:isRerarked,
                nts : tsv},
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oAttendanceDailys =[];
                oAttendanceDailys = jQuery.parseJSON(data);
                if(oAttendanceDailys.length>0)
                {
                    debugger;
                    document.getElementById('lblInfo').innerHTML = 'Attendance for '+icsdateformat(new Date(sDate));
                    if(!_bNext && !_bAppend)
                    {
                        _oAttendanceDailys=[];
                        LoadDailyAttendanceGrid([]);
                    }

                    for (var j = 0; j < oAttendanceDailys.length; j++)
                    {
                        $('#tblAttendanceDaily').datagrid('appendRow',oAttendanceDailys[j]);
                        _oAttendanceDailys.push(oAttendanceDailys[j]);
                    }
                    SortAttendanceDailys();
                }
                else
                {
                    if(!_bNext && !_bAppend)
                    {
                        alert("Data not found by this date!!");
                        _oAttendanceDailys=[];
                        LoadDailyAttendanceGrid(_oAttendanceDailys);
                        document.getElementById("lblSort").innerHTML ="";
                    }
                    else
                    {
                        alert("No more data found by this date !");
                    }

                    document.getElementById('lblInfo').innerHTML = "" ;
                    document.getElementById('lblInfo').innerHTML = 'No Attendance record for '+icsdateformat(new Date(sDate));

                }
                //var oEmployees=$('#tblAttendanceDaily').datagrid('getRows');
                //document.getElementById("lblcount").innerHTML = " | Count ="+ oEmployees.length;
                _bNext = false;
                _bAppend = false;

            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function Next()
    {
        var oAttendanceDailys =[];
        oAttendanceDailys=$('#tblAttendanceDaily').datagrid('getRows');
        _nRowLength = _oAttendanceDailys.length;
        _bNext = true;

        if (oAttendanceDailys.length<=0)
        {
            alert('Please Select Criteria and click on "Search" to find information.!!');
            return;
        }
        var oAttendanceDaily=oAttendanceDailys[oAttendanceDailys.length-1];

        if (_nLastAttendanceID==oAttendanceDaily.AttendanceID)
        {
            alert('No more data found by this date');
            return;
        }
        _nLastAttendanceID=oAttendanceDaily.AttendanceID;
        Search();
    }

    function LoadDailyAttendanceGrid(_oAttendanceDailys)
    {
        data={"total":""+_oAttendanceDailys.length+"","rows":_oAttendanceDailys};
        $('#tblAttendanceDaily').datagrid('loadData',data);
    }

    $('#chkRange_Colection').click(function()
    {
        if(document.getElementById("chkRange_Colection").checked == true)
        {
            document.getElementById("lblRange1_Colection").style.display = '';
        }
        else
        {
            document.getElementById("lblRange1_Colection").style.display = 'none';
        }
    });

    /*-------------Search End----------------*/

    // Sorting start

    $('#chkPresent').click(function (e)
    {
        if(document.getElementById("chkPresent").checked == true)
        {
            document.getElementById("chkAbsent").checked = false ;
            document.getElementById("chkLate").checked = false;
            document.getElementById("chkEarlyLeaving").checked = false;
            document.getElementById("chkOT").checked = false;
            document.getElementById("chkNoWork").checked = false;
            document.getElementById("chkLeave").checked = false;
            document.getElementById("chkNoOutTime").checked = false;
            LoadDailyAttendanceGrid(_oPresentAttendanceDailys);
        }
        else if(document.getElementById("chkAbsent").checked == false && document.getElementById("chkLate").checked == false && document.getElementById("chkEarlyLeaving").checked == false && document.getElementById("chkOT").checked== false && document.getElementById("chkNoWork").checked== false &&  document.getElementById("chkLeave").checked==false && document.getElementById("chkNoOutTime").checked == false)
        {
            LoadDailyAttendanceGrid(_oAttendanceDailys);
        }

    });

    $('#chkAbsent').click(function(e)
    {
        if(document.getElementById("chkAbsent").checked == true)
        {
            document.getElementById("chkPresent").checked = false ;
            document.getElementById("chkLate").checked = false;
            document.getElementById("chkEarlyLeaving").checked = false;
            document.getElementById("chkOT").checked = false;
            document.getElementById("chkNoWork").checked = false;
            document.getElementById("chkLeave").checked = false;
            document.getElementById("chkNoOutTime").checked = false;
            LoadDailyAttendanceGrid(_oAbsentAttendanceDailys);
        }
        else if(document.getElementById("chkPresent").checked == false && document.getElementById("chkLate").checked == false && document.getElementById("chkEarlyLeaving").checked == false && document.getElementById("chkOT").checked== false && document.getElementById("chkNoWork").checked== false &&  document.getElementById("chkLeave").checked==false && document.getElementById("chkNoOutTime").checked == false)
        {
            LoadDailyAttendanceGrid(_oAttendanceDailys);
        }
    });

    $('#chkLate').click(function(e)
    {
        if(document.getElementById("chkLate").checked == true)
        {
            document.getElementById("chkAbsent").checked = false ;
            document.getElementById("chkPresent").checked = false;
            document.getElementById("chkEarlyLeaving").checked = false;
            document.getElementById("chkOT").checked = false;
            document.getElementById("chkNoWork").checked = false;
            document.getElementById("chkLeave").checked = false;
            document.getElementById("chkNoOutTime").checked = false;
            LoadDailyAttendanceGrid(_oLateAttendanceDailys);
        }
        else if(document.getElementById("chkPresent").checked == false && document.getElementById("chkAbsent").checked == false && document.getElementById("chkEarlyLeaving").checked == false && document.getElementById("chkOT").checked== false && document.getElementById("chkNoWork").checked== false &&  document.getElementById("chkLeave").checked==false && document.getElementById("chkNoOutTime").checked == false)
        {
            LoadDailyAttendanceGrid(_oAttendanceDailys);
        }
    });

    $('#chkEarlyLeaving').click(function(e)
    {
        if(document.getElementById("chkEarlyLeaving").checked == true)
        {
            document.getElementById("chkAbsent").checked = false ;
            document.getElementById("chkLate").checked = false ;
            document.getElementById("chkPresent").checked = false;
            document.getElementById("chkOT").checked = false;
            document.getElementById("chkNoWork").checked = false;
            document.getElementById("chkLeave").checked = false;
            document.getElementById("chkNoOutTime").checked = false;
            LoadDailyAttendanceGrid(_oEarlyAttendanceDailys);
        }
        else if(document.getElementById("chkPresent").checked == false && document.getElementById("chkAbsent").checked == false && document.getElementById("chkLate").checked == false && document.getElementById("chkOT").checked== false && document.getElementById("chkNoWork").checked== false &&  document.getElementById("chkLeave").checked==false && document.getElementById("chkNoOutTime").checked == false)
        {
            LoadDailyAttendanceGrid(_oAttendanceDailys);
        }
    });

    $('#chkOT').click(function(e)
    {
        if(document.getElementById("chkOT").checked == true)
        {
            document.getElementById("chkAbsent").checked = false ;
            document.getElementById("chkLate").checked = false ;
            document.getElementById("chkPresent").checked = false;
            document.getElementById("chkEarlyLeaving").checked = false;
            document.getElementById("chkNoWork").checked = false;
            document.getElementById("chkLeave").checked = false;
            document.getElementById("chkNoOutTime").checked = false;
            LoadDailyAttendanceGrid(_oOTAttendanceDailys);
        }
        else if(document.getElementById("chkPresent").checked == false && document.getElementById("chkAbsent").checked == false && document.getElementById("chkLate").checked == false && document.getElementById("chkEarlyLeaving").checked== false && document.getElementById("chkNoWork").checked== false &&  document.getElementById("chkLeave").checked==false && document.getElementById("chkNoOutTime").checked == false)
        {
            LoadDailyAttendanceGrid(_oAttendanceDailys);
        }
    });

    $('#chkNoWork').click(function(e)
    {
        if(document.getElementById("chkNoWork").checked == true)
        {
            document.getElementById("chkAbsent").checked = false ;
            document.getElementById("chkLate").checked = false ;
            document.getElementById("chkPresent").checked = false;
            document.getElementById("chkEarlyLeaving").checked = false;
            document.getElementById("chkOT").checked = false;
            document.getElementById("chkLeave").checked = false;
            document.getElementById("chkNoOutTime").checked = false;
            LoadDailyAttendanceGrid(_oNoWorkAttendanceDailys);
        }
        else if(document.getElementById("chkPresent").checked == false && document.getElementById("chkAbsent").checked == false && document.getElementById("chkLate").checked == false && document.getElementById("chkEarlyLeaving").checked== false && document.getElementById("chkOT").checked== false &&  document.getElementById("chkLeave").checked==false && document.getElementById("chkNoOutTime").checked == false)
        {
            LoadDailyAttendanceGrid(_oAttendanceDailys);
        }
    });

    $('#chkLeave').click(function (e)
    {
        if(document.getElementById("chkLeave").checked == true)
        {
            document.getElementById("chkPresent").checked = false ;
            document.getElementById("chkAbsent").checked = false ;
            document.getElementById("chkLate").checked = false;
            document.getElementById("chkEarlyLeaving").checked = false;
            document.getElementById("chkOT").checked = false;
            document.getElementById("chkNoWork").checked = false;
            document.getElementById("chkNoOutTime").checked = false;
            LoadDailyAttendanceGrid(_oLeaveAttendanceDailys);
        }
        else if(document.getElementById("chkPresent").checked == false && document.getElementById("chkAbsent").checked == false && document.getElementById("chkLate").checked == false && document.getElementById("chkEarlyLeaving").checked== false && document.getElementById("chkOT").checked== false &&  document.getElementById("chkNoWork").checked==false && document.getElementById("chkNoOutTime").checked == false)
        {
            LoadDailyAttendanceGrid(_oAttendanceDailys);
        }
    });

    $('#chkNoOutTime').click(function (e)
    {
        if(document.getElementById("chkNoOutTime").checked == true)
        {
            document.getElementById("chkPresent").checked = false ;
            document.getElementById("chkAbsent").checked = false ;
            document.getElementById("chkLate").checked = false;
            document.getElementById("chkEarlyLeaving").checked = false;
            document.getElementById("chkOT").checked = false;
            document.getElementById("chkNoWork").checked = false;
            document.getElementById("chkLeave").checked = false;
            LoadDailyAttendanceGrid(_oNoOutTimeAttendanceDailys);
        }
        else if(document.getElementById("chkPresent").checked == false && document.getElementById("chkAbsent").checked == false && document.getElementById("chkLate").checked == false && document.getElementById("chkEarlyLeaving").checked== false && document.getElementById("chkOT").checked== false &&  document.getElementById("chkNoWork").checked==false && document.getElementById("chkLeave").checked == false)
        {
            LoadDailyAttendanceGrid(_oAttendanceDailys);
        }
    });

    function SortAttendanceDailys()
    {
        _oPresentAttendanceDailys = [];
        _oAbsentAttendanceDailys =[];
        _oLateAttendanceDailys =[];
        _oEarlyAttendanceDailys=[];
        //_oAttendanceDailys=[];
        _oOTAttendanceDailys=[];
        _oNoWorkAttendanceDailys=[];
        _oLeaveAttendanceDailys=[];
        _oNoOutTimeAttendanceDailys=[];
        _nPresent = 0;
        _nAbsent = 0;
        _nLate = 0;
        _nEarlyLeaving =0;
        _nOT=0;
        _nNoWork=0;
        _nLeave=0;
        _nNoOutTime=0;
        //_oAttendanceDailys=$('#tblAttendanceDaily').datagrid('getRows');
        for(var i = 0 ; i< _oAttendanceDailys.length ; i++)
        {
            if((_oAttendanceDailys[i].InTimeInString !="-" || _oAttendanceDailys[i].OutTimeInString !="-" || _oAttendanceDailys[i].IsOSD== true) && _oAttendanceDailys[i].IsLeave== false && _oAttendanceDailys[i].IsNoWork== false)
            {
                _oPresentAttendanceDailys.push(_oAttendanceDailys[i]);
                _nPresent++;
            }

            if(_oAttendanceDailys[i].InTimeInString == "-" && _oAttendanceDailys[i].OutTimeInString == "-" && _oAttendanceDailys[i].IsLeave== false && _oAttendanceDailys[i].IsNoWork== false && _oAttendanceDailys[i].IsOSD== false)
            {
                _oAbsentAttendanceDailys.push(_oAttendanceDailys[i]);
                _nAbsent++;
            }

            if(_oAttendanceDailys[i].LateArrivalMinute > 0)
            {
                _oLateAttendanceDailys.push(_oAttendanceDailys[i]);
                _nLate++;
            }

            if(_oAttendanceDailys[i].EarlyDepartureMinute > 0)
            {

                _oEarlyAttendanceDailys.push(_oAttendanceDailys[i]);
                _nEarlyLeaving++;
            }
            if(_oAttendanceDailys[i].OverTimeInMinute > 0)
            {
                _oOTAttendanceDailys.push(_oAttendanceDailys[i]);
                _nOT++;
            }
            if(_oAttendanceDailys[i].IsNoWork== true)
            {
                _oNoWorkAttendanceDailys.push(_oAttendanceDailys[i]);
                _nNoWork++;
            }
            if(_oAttendanceDailys[i].IsLeave== true && _oAttendanceDailys[i].LeaveHeadID>0)
            {
                _oLeaveAttendanceDailys.push(_oAttendanceDailys[i]);
                _nLeave++;
            }
            if(_oAttendanceDailys[i].OutTimeInString == "-" && _oAttendanceDailys[i].InTimeInString != "-")
            {
                _oNoOutTimeAttendanceDailys.push(_oAttendanceDailys[i]);
                _nNoOutTime++;
            }
        }

        document.getElementById("lblcount").innerHTML = " | Count ="+ _oAttendanceDailys.length;
        document.getElementById("lblSort").innerHTML = "Present = "+_nPresent+" | Absent = "+_nAbsent+" | Late = "+_nLate+" | Early Leaving = "+_nEarlyLeaving+" | OT = "+_nOT+" | NoWork = "+_nNoWork+" | Leave = "+_nLeave+" | No Out Time = "+_nNoOutTime;
    }

    // Sorting end

    // Print start
    $('#btnPrint').click(function (e)
    {
        var oAtts = $('#tblAttendanceDaily').datagrid('getChecked');
        if(oAtts.length <= 0)
        {
            alert("Please select at least one item !");
            return;
        }
        if(oAtts.length >200)
        {
            alert("Please select maximum 200 rows!");
            return;
        }

        var sAttIDs="";
        for(var i=0; i<oAtts.length; i++)
        {
            sAttIDs+=oAtts[i].AttendanceID+",";
        }
        sAttIDs=sAttIDs.substring(0,sAttIDs.length-1);

        var nAction = 0;
        if(document.getElementById("chkPresent").checked == true)
        {
            nAction = 1;
        }

        else if(document.getElementById("chkAbsent").checked == true)
        {
            nAction = 2;
        }
        else if(document.getElementById("chkLate").checked == true)
        {
            nAction = 3;
        }

        else if(document.getElementById("chkEarlyLeaving").checked == true)
        {
            nAction = 4;
        }

        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/AttendanceDaily/PrintAbsentAttendance?sAttIDs="+sAttIDs+"&nAction="+nAction+"&nts="+tsv, "_blank");

    });
    // Print end

    $('#btnNoWork').click(function (e)
    {
        var oAttDailys = $('#tblAttendanceDaily').datagrid('getChecked');
        var nIndex = [];
        if(oAttDailys.length<=0)
        {
            alert("Please select at least one item !");
            return;
        }
        if(oAttDailys.length>50)
        {
            alert("Please select maxumum 50 items !");
            return;
        }
        for(var i =0; i<oAttDailys.length; i++)
        {
            if(oAttDailys[i].IsNoWork == true)
            {
                alert("Some of attendance is already no work !");
                return;
            }
            if(oAttDailys[i].IsLock == false)
            {
                alert("Some of attendance is not locked !");
                return;
            }
            //if(oAttDailys[i].InTimeInString == "00:00" && oAttDailys[i].OutTimeInString == "00:00")
            //{
            //    alert("Some employee was absent in this date!");
            //    return;
            //}
            //if(oAttDailys[i].IsDayOff == true)
            //{
            //    alert("Some employee had off day in this date!");
            //    return;
            //}
            //if(oAttDailys[i].IsLeave == true)
            //{
            //    alert("Some employee took leave in this date!");
            //    return;
            //}
            //if(oAttDailys[i].IsProductionBase == false)
            //{
            //    alert("Some employee are not production Base!");
            //    return;
            //}
            var SelectedRowIndex = $('#tblAttendanceDaily').datagrid('getRowIndex', oAttDailys[i]);
            nIndex.push(SelectedRowIndex);
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceDaily/NoWorkExecution",
            traditional: true,
            data: JSON.stringify(oAttDailys),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                oAttDailys = jQuery.parseJSON(data);
                if (oAttDailys[0].ErrorMessage == "" && oAttDailys.length>0)
                {
                    alert("Sucessfully Executed !");
                    for(var i=0; i<oAttDailys.length; i++)
                    {
                        $('#tblAttendanceDaily').datagrid('updateRow', { index: nIndex[i], row: oAttDailys[i] });
                    }
                }
                else
                {
                    alert(oAttDailys[0].ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $('#btnCancelNoWork').click(function (e)
    {
        var oAttDailys = $('#tblAttendanceDaily').datagrid('getChecked');
        var nIndex = [];
        if(oAttDailys.length<=0)
        {
            alert("Please select at least one item !");
            return;
        }
        if(oAttDailys.length>50)
        {
            alert("Please select maxumum 50 items !");
            return;
        }
        for(var i =0; i<oAttDailys.length; i++)
        {
            if(oAttDailys[i].IsNoWork == false)
            {
                alert("Some item is not in no work !");
                return;
            }
            var SelectedRowIndex = $('#tblAttendanceDaily').datagrid('getRowIndex', oAttDailys[i]);
            nIndex.push(SelectedRowIndex);
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceDaily/CancelNoWorkExecution",
            traditional: true,
            data: JSON.stringify(oAttDailys),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                oAttDailys = jQuery.parseJSON(data);
                if (oAttDailys[0].ErrorMessage == "" && oAttDailys.length>0)
                {
                    alert("Sucessfully Executed !");
                    for(var i=0; i<oAttDailys.length; i++)
                    {
                        $('#tblAttendanceDaily').datagrid('updateRow', { index: nIndex[i], row: oAttDailys[i] });
                    }
                }
                else
                {
                    alert(oAttDailys[0].ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $('#btnRemoveFromList').click(function (e) {
        var oAttendanceDailys= $('#tblAttendanceDaily').datagrid('getChecked');
        if(oAttendanceDailys.length<=0)
        {
            alert("Please select at least one item !");
            return;
        }
        for(var i=0; i<oAttendanceDailys.length; i++)
        {
            var SelectedRowIndex=$('#tblAttendanceDaily').datagrid('getRowIndex',oAttendanceDailys[i]);
            $('#tblAttendanceDaily').datagrid('deleteRow',SelectedRowIndex);
        }
    });

    function AttendanceDaily()
    {
        var oEmployees = $('#tblAttendanceDaily').datagrid('getChecked');
        if(oEmployees.length<=0)
        {
            alert("Please Select Atleast One Item !");
            return;
        }
        var oEmployee = new Object();
        var oEmps = [];
        for(var i=0;i<oEmployees.length;i++)
        {
            if(oEmployees[i].WorkingStatus==6)
            {
                alert("Att. Is Not Possible For Discontinued Employee !");
                return;
            }
            oEmployee = new Object();
            oEmployee.EmployeeID = oEmployees[i].EmployeeID;
            oEmployee.Name = oEmployees[i].EmployeeName;
            oEmployee.DesignationName = oEmployees[i].DesignationName;
            oEmps.push(oEmployee);
        }

        var tsv = ((new Date()).getTime()) / 1000;
        var oParameter = new Object();
        oEmps[0].ErrorMessage = icsdateformat(new Date(GenerateStartTimeInString()));
        oParameter = oEmps;

        //oParameter.Name = "Attendance For"+oEmployee.Name+"["+oEmployee.Code+"]";
        var url = _sBaseAddress + "/AttendanceDaily/ViewAttendanceDaily?nId=0&ts=" + tsv+"&nEmployeeID=0";

        var nLeft=(window.screen.width/2)-(600/2);
        var nHeight=(window.screen.height/2)-(420/2);
        window.showModalDialog(url, oParameter, 'dialogHeight:420px;dialogWidth:600px;dialogLeft:'+nLeft+';dialogTop:'+nHeight+';center:yes;resizable:no;status:no;scroll:yes');
        //var oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:420px;dialogWidth:600px;dialogLeft:250;dialogRight:150;dialogTop:200;center:yes;resizable:yes;status:no;scroll:no');

    }

    $('#btnPrintCheckBoxWise').click(function (e)
    {
        var oAttDaily = $('#tblAttendanceDaily').datagrid('getChecked');
        var _sEmployeeIDs = "";
        for (var i = 0; i < oAttDaily.length; i++)
        {
            _sEmployeeIDs += oAttDaily[i].EmployeeID + ",";
        }
        _sEmployeeIDs = _sEmployeeIDs.substring(0, _sEmployeeIDs.length - 1);

        var format = "";
        if(document.getElementById("chkFormat").checked == true){
            format = "twelve";
        }
        else format = "twentyfour";
        var Remark = $("#txtRemarks").val();
        var IsRerarked = $("#chkRemarked").is(":checked");


        var sAttID="";

        var nPrintType=$("#cboPrint").val();
        var sDate = $('#dtDate').datebox('getValue');

        var tsv = ((new Date()).getTime()) / 1000;
        var sChkType = "" ;
        var nShiftID=$("#cboShift").val();


        if($("#chkPresent").is(":checked"))
        {
            sChkType="Present";
        }
        else if($("#chkAbsent").is(":checked"))
        {
            sChkType="Absent";
        }
        else if($("#chkLate").is(":checked"))
        {
            sChkType="Late";
        }
        else if($("#chkEarlyLeaving").is(":checked"))
        {
            sChkType="Early";
        }
        else if($("#chkOT").is(":checked"))
        {
            sChkType="OT";
        }
        else if($("#chkNoWork").is(":checked"))
        {
            sChkType="NoWork";
        }
        else if($("#chkLeave").is(":checked"))
        {
            sChkType="Leave";
        }
        else if($("#chkNoOutTime").is(":checked"))
        {
            sChkType="NOT";
        }



        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }


        var CriteriaType=$('#cboCriteriaType').val();
        var StartInTime=$('#tpStartInTime').timespinner('getValue');
        if(StartInTime=="") {StartInTime = "00:00:00";}
        var EndInTime=$('#tpEndInTime').timespinner('getValue');
        if(EndInTime=="") {EndInTime = "00:00:00";}
        var StartOutTime=$('#tpStartOutTime').timespinner('getValue');
        if(StartOutTime=="") {StartOutTime = "00:00:00";}
        var EndOutTime=$('#tpEndOutTime').timespinner('getValue');
        if(EndOutTime=="") {EndOutTime = "00:00:00";}

        var StartLate=$('#txtStartLate').val();
        if(StartLate== null || StartLate<=0){StartLate=0}
        var EndLate=$('#txtEndLate').val();
        if(EndLate== null || EndLate<=0){EndLate=0}
        var StartEarly=$('#txtStartEarly').val();
        if(StartEarly== null || StartEarly<=0){StartEarly=0}
        var EndEarly=$('#txtEndEarly').val();
        if(EndEarly== null || EndEarly<=0){EndEarly=0}

        if(CriteriaType==1)
        {
            if(StartInTime >EndInTime)
            {
                alert("Invalid In Time range !");
                return;
            }
            if(StartOutTime>EndOutTime)
            {
                alert("Invalid Out Time range !");
                return;
            }
            if(parseFloat(StartLate) > parseFloat(EndLate))
            {
                alert("Invalid Late range !");
                return;
            }
            if(parseFloat(StartEarly) > parseFloat(EndEarly))
            {
                alert("Invalid Early range !");
                return;
            }
        }
        debugger;
        var sParam =sDate+"~"+_sBusinessUnitIds +"~"+  _sLocationID +"~"+ (($.trim(_sDepartmentIds)=="")? "":_sDepartmentIds)
            +"~"+(($.trim(_sDesignationIds)=="")? "":_sDesignationIds)+"~"+ (($.trim(_sEmployeeIDs)=="")? "":_sEmployeeIDs
            )+"~"+(($.trim(_sShiftIds)=="")? "":_sShiftIds)+"~"+(($.trim(sChkType)=="")? "":sChkType)
            + "~" + (($.trim(format)=="")? "":format)
            +"~" +CriteriaType
            +"~"+StartInTime+"~"+EndInTime+"~"+StartOutTime+"~"+EndOutTime
            +"~"+StartLate+"~"+EndLate+"~"+StartEarly+"~"+EndEarly+"~"+Remark+ "~" + IsRerarked;
        var tsv=((new Date()).getTime())/1000;
        var sAction="";
        if(nPrintType==0){sAction="PrintDailyAttendance_LocationWise";}
        if(nPrintType==1){sAction="PrintDailyAttendance_DepartmentWise";}
        window.open(_sBaseAddress+ "/Compliance/"+sAction+"?sParam="+sParam+"&nts="+tsv, "_blank");

    });

    $(function(){
        $('#tblAttendanceDaily').datagrid({
            onDblClickRow: function(rowIndex) {
                debugger;
                $('#tblAttendanceDaily').datagrid('selectRow',rowIndex);
                var oAttDaily =$("#tblAttendanceDaily").datagrid("getSelected");

                //var dtInTime = oAttDaily.CompInTimeInStringWithDate;
                //var dtOutTime = oAttDaily.CompOutTimeInStringWithDate;

                //$('#timeSpinner').datetimebox('setValue', dtInTime);
                //$('#txtOutTime').datetimebox('setValue', dtOutTime);
                
                $('#timeSpinner').timespinner('setValue', oAttDaily.CompInTimeInString);
                $('#txtOutTime').timespinner('setValue', oAttDaily.CompOutTimeInString);

                //$('#timeSpinner').timespinner('setValue', oAttDaily.InTimeInString);
                //$('#txtOutTime').timespinner('setValue', oAttDaily.OutTimeInString);
                $('#cboEditedShift').val(oAttDaily.ShiftID);
                $('#chkIsOSD').prop('checked', oAttDaily.IsOSD);

                if(oAttDaily.CompInTimeInString != "-" || oAttDaily.CompOutTimeInString != "-" ) {
                    $('#chkIsPresent').prop('checked', true);
                }
                else {
                    $('#chkIsPresent').prop('checked', false);
                }
                if(oAttDaily.CompLateArrivalMinute <= 0  && oAttDaily.CompInTimeInString != "-") {
                    $('#chkIsConsiderLate').prop('checked', true);
                }
                else {
                    $('#chkIsConsiderLate').prop('checked', false);
                }
                if(oAttDaily.CompEarlyDepartureMinute <= 0 && oAttDaily.CompOutTimeInString != "-") {
                    $('#chkIsConsiderEarlyLeave').prop('checked', true);
                }
                else {
                    $('#chkIsConsiderEarlyLeave').prop('checked', false);
                }
                if(oAttDaily.IsCompDayOff == true) {
                    $('#chkIsDayoff').prop('checked', true);
                }
                else {
                    $('#chkIsDayoff').prop('checked', false);
                }
                if(oAttDaily.IsCompHoliday == true) {
                    $('#chkIsHoliday').prop('checked', true);
                }
                else {
                    $('#chkIsHoliday').prop('checked', false);
                }
                $('#txtRemark').val(oAttDaily.Remark);

                $('#spAttStatus').html("Description : "+oAttDaily.AttStatusInStringInShortComp);



                if(oAttDaily.IsManualOT == true) {
                    $('#chkIsManualOT').prop('disabled',true);
                    $('#chkIsManualOT').prop('checked', true);
                }
                else {
                    $('#chkIsManualOT').prop('disabled',false);
                    $('#chkIsManualOT').prop('checked', false);
                }
                $('#txtManualOT').val(oAttDaily.CompOverTimeInMinute);
                $('#cboLeaveHead').val(oAttDaily.CompLeaveHeadID);//);oAttDaily.CompLeaveHeadID);
                if(oAttDaily.IsCompDayOff == true) {
                    $('#chkIsDayOff').prop('checked', true);
                }


                $("#winManualAttendance").icsWindow('open');
            }
        });
    });

    $("#btnManualAttendanceClose").click(function(e){
        $('#timeSpinner').timespinner('setValue', '00:00');
        $('#txtOutTime').timespinner('setValue', '00:00');
        $('#chkIsConsiderLate').prop('checked', false);
        $('#chkIsConsiderEarlyLeave').prop('checked', false);
        $('#chkIsAbsent').prop('checked', false);
        $('#chkIsHoliday').prop('disabled',false);
        $('#txtManualOT').val('');
        $("#winManualAttendance").icsWindow('close');
    });
    
    $('#chkIsPresent').click(function()
    {
        debugger;
        if(document.getElementById("chkIsPresent").checked == true)
        {
        
            var startTime = "";
            var endTime = "";
            var shiftID = $('#cboEditedShift').val();
            for(var i = 0; i < _oShifts.length; i++) {
                if(shiftID == _oShifts[i].ShiftID) {
                    startTime = _oShifts[i].StartTimeInString;
                    endTime = _oShifts[i].EndTimeInString;
                    break;
                }
            }

            $('#timeSpinner').timespinner('setValue', startTime);
            $('#txtOutTime').timespinner('setValue', endTime);
        }
    });
    $("#btnManualAttendanceUpdate").click(function(e){
        debugger
        var oAttDaily =$("#tblAttendanceDaily").datagrid("getSelected");
        var SelectedRowIndex = $('#tblAttendanceDaily').datagrid('getRowIndex', oAttDaily);
        oAttDaily.InTime=$('#timeSpinner').timespinner('getValue');
        oAttDaily.OutTime=$('#txtOutTime').timespinner('getValue');
        oAttDaily.IsAbsent=$('#chkIsAbsent').is(':checked');
        oAttDaily.LateArrivalMinute = $('#chkIsConsiderLate').is(':checked')?0:1;
        oAttDaily.EarlyDepartureMinute = $('#chkIsConsiderEarlyLeave').is(':checked')?0:1;
        oAttDaily.CompLeaveHeadID = $('#cboLeaveHead').val();
        oAttDaily.IsCompDayOff=$('#chkIsDayOff').is(':checked');

        if($('#chkIsAbsent').is(':checked'))
        {
            oAttDaily.InTime='00:00';
            oAttDaily.OutTime='00:00';
        }
        if($('#chkIsManualOT').is(':checked'))
        {
            oAttDaily.IsManualOT=$('#chkIsManualOT').is(':checked');
            oAttDaily.OverTimeInMinute=$('#txtManualOT').val();
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Compliance/AttendanceDaily_Manual_Single_Comp_ForDailyAttendance",
            traditional: true,
            data: JSON.stringify(oAttDaily),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                debugger;
                var oAttDaily = jQuery.parseJSON(data);
                console.log(oAttDaily);
                if (oAttDaily.AttendanceID>0)
                {
                    $('#tblAttendanceDaily').datagrid('updateRow', { index: SelectedRowIndex, row: oAttDaily });
                    alert("Update Successfully !");
                    $("#winManualAttendance").icsWindow('close');
                }
                else
                {
                    alert(oAttDaily.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $('#cboLeaveStatus').change(function (e)
    {
        var oCL=[];
        var oSL=[];
        var oEL=[];
        var oML=[];
        var oOC=[];
        var oLWP=[];

        for(var i=0; i<_oLeaveAttendanceDailys.length; i++)
        {
            if(_oLeaveAttendanceDailys[i].LeaveHeadID==1 && _oLeaveAttendanceDailys[i].IsLeave== true)
            {
                oCL.push(_oLeaveAttendanceDailys[i]);
            }
            if(_oLeaveAttendanceDailys[i].LeaveHeadID==2 && _oLeaveAttendanceDailys[i].IsLeave== true)
            {
                oSL.push(_oLeaveAttendanceDailys[i]);
            }
            if(_oLeaveAttendanceDailys[i].LeaveHeadID==3 && _oLeaveAttendanceDailys[i].IsLeave== true)
            {
                oEL.push(_oLeaveAttendanceDailys[i]);
            }
            if(_oLeaveAttendanceDailys[i].LeaveHeadID==4 && _oLeaveAttendanceDailys[i].IsLeave== true)
            {
                oML.push(_oLeaveAttendanceDailys[i]);
            }
            if(_oLeaveAttendanceDailys[i].LeaveHeadID==5 && _oLeaveAttendanceDailys[i].IsLeave== true)
            {
                oOC.push(_oLeaveAttendanceDailys[i]);
            }
            if(_oLeaveAttendanceDailys[i].LeaveHeadID==6 && _oLeaveAttendanceDailys[i].IsLeave== true)
            {
                oLWP.push(_oLeaveAttendanceDailys[i]);
            }
        }
        var nLeave=$('#cboLeaveStatus').val();
        if(nLeave==1)
        {
            LoadDailyAttendanceGrid(oCL);
        }
        else if(nLeave==2)
        {
            LoadDailyAttendanceGrid(oSL);
        }
        else if(nLeave==3)
        {
            LoadDailyAttendanceGrid(oEL);
        }
        else if(nLeave==4)
        {
            LoadDailyAttendanceGrid(oML);
        }
        else if(nLeave==5)
        {
            LoadDailyAttendanceGrid(oOC);
        }
        else if(nLeave==6)
        {
            LoadDailyAttendanceGrid(oLWP);
        }
        else
        {
            var oList=[];
            LoadDailyAttendanceGrid(oList);
        }
    });

    $("#btnAttHistory").click(function(e){
        var oAttendanceDailyManualHistory={AttendanceID:_nAttendanceID}
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceDailyManualHistory,
            ControllerName: "AttendanceDaily",
            ActionName: "GetsAttendanceDailyManualHistory",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs != null)
            {
                if (response.objs.length>0 && response.objs[0].ErrorMessage=="") {
                    $("#winManualAttendanceHistory").icsWindow('open');
                    DynamicRefreshList(response.objs,'tblManualAttendanceHistory');
                }
                else{
                    alert(response.objs[0].ErrorMessage);
                }
            }
        });
    });

    $("#winManualAttendanceHistoryClose").click(function(e){
        $("#winManualAttendanceHistory").icsWindow('close');
        DynamicRefreshList([],'tblManualAttendanceHistory');
    });

    $('#btnExcelCheckBoxWise').click(function (e)
    {
        var oAttDaily = $('#tblAttendanceDaily').datagrid('getChecked');
        var _sEmployeeIDs = "";
        for (var i = 0; i < oAttDaily.length; i++)
        {
            _sEmployeeIDs += oAttDaily[i].EmployeeID + ",";
        }
        _sEmployeeIDs = _sEmployeeIDs.substring(0, _sEmployeeIDs.length - 1);

        var format = "";
        if(document.getElementById("chkFormat").checked == true){
            format = "twelve";
        }
        else format = "twentyfour";
        var Remark = $("#txtRemarks").val();
        var IsRerarked = $("#chkRemarked").is(":checked");


        var sAttID="";
        //var oAtts= $('#tblAttendanceDaily').datagrid('getChecked');
        //for(var i=0; i<oAtts.length; i++)
        //{
        //    sAttID+=oAtts[i].AttendanceID+",";
        //}
        //sAttID=sAttID.substring(0,sAttID.length-1);

        var nPrintType=$("#cboPrint").val();
        var sDate = $('#dtDate').datebox('getValue');

        var tsv = ((new Date()).getTime()) / 1000;
        var sChkType = "" ;
        var nShiftID=$("#cboShift").val();

        if($("#chkPresent").is(":checked"))
        {
            sChkType="Present";
        }
        else if($("#chkAbsent").is(":checked"))
        {
            sChkType="Absent";
        }
        else if($("#chkLate").is(":checked"))
        {
            sChkType="Late";
        }
        else if($("#chkEarlyLeaving").is(":checked"))
        {
            sChkType="Early";
        }
        else if($("#chkOT").is(":checked"))
        {
            sChkType="OT";
        }
        else if($("#chkNoWork").is(":checked"))
        {
            sChkType="NoWork";
        }
        else if($("#chkLeave").is(":checked"))
        {
            sChkType="Leave";
        }
        else if($("#chkNoOutTime").is(":checked"))
        {
            sChkType="NOT";
        }


        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }


        var CriteriaType=$('#cboCriteriaType').val();
        var StartInTime=$('#tpStartInTime').timespinner('getValue');
        if(StartInTime=="") {StartInTime = "00:00:00";}
        var EndInTime=$('#tpEndInTime').timespinner('getValue');
        if(EndInTime=="") {EndInTime = "00:00:00";}
        var StartOutTime=$('#tpStartOutTime').timespinner('getValue');
        if(StartOutTime=="") {StartOutTime = "00:00:00";}
        var EndOutTime=$('#tpEndOutTime').timespinner('getValue');
        if(EndOutTime=="") {EndOutTime = "00:00:00";}

        var StartLate=$('#txtStartLate').val();
        if(StartLate== null || StartLate<=0){StartLate=0}
        var EndLate=$('#txtEndLate').val();
        if(EndLate== null || EndLate<=0){EndLate=0}
        var StartEarly=$('#txtStartEarly').val();
        if(StartEarly== null || StartEarly<=0){StartEarly=0}
        var EndEarly=$('#txtEndEarly').val();
        if(EndEarly== null || EndEarly<=0){EndEarly=0}

        if(CriteriaType==1)
        {
            if(StartInTime >EndInTime)
            {
                alert("Invalid In Time range !");
                return;
            }
            if(StartOutTime>EndOutTime)
            {
                alert("Invalid Out Time range !");
                return;
            }
            if(parseFloat(StartLate) > parseFloat(EndLate))
            {
                alert("Invalid Late range !");
                return;
            }
            if(parseFloat(StartEarly) > parseFloat(EndEarly))
            {
                alert("Invalid Early range !");
                return;
            }
        }
        debugger;
        var sParam =sDate+"~"+_sBusinessUnitIds +"~"+  _sLocationID +"~"+ (($.trim(_sDepartmentIds)=="")? "":_sDepartmentIds)
            +"~"+(($.trim(_sDesignationIds)=="")? "":_sDesignationIds)+"~"+ (($.trim(_sEmployeeIDs)=="")? "":_sEmployeeIDs
            )+"~"+(($.trim(_sShiftIds)=="")? "":_sShiftIds)+"~"+(($.trim(sChkType)=="")? "":sChkType)
            + "~" + (($.trim(format)=="")? "":format)
            +"~" +CriteriaType
            +"~"+StartInTime+"~"+EndInTime+"~"+StartOutTime+"~"+EndOutTime
            +"~"+StartLate+"~"+EndLate+"~"+StartEarly+"~"+EndEarly+"~"+Remark + "~" + IsRerarked;
        var tsv=((new Date()).getTime())/1000;
        var sAction="";
        if(nPrintType==0){sAction="ExcelDailyAttendance_LocationWise";}
        if(nPrintType==1){sAction="ExcelDailyAttendance_DepartmentWise";}
        window.open(_sBaseAddress+ "/Compliance/"+sAction+"?sParam="+sParam+"&nts="+tsv, "_blank");

    });
    function convertToDate(toDate) {
        debugger;
        var date =new Date();
        date.setHours(toDate.split(':')[0]);
        date.setMinutes(toDate.split(':')[1]);
        date.setSeconds(0);
        return date;
    }

    $("#btnExtraSearching").click(function () {
        $("#winExtraSearching").icsWindow("open");

        $('#tpStartInTime').timespinner('setValue', '00:00');
        $('#tpEndInTime').timespinner('setValue', '00:00');
        $('#tpStartOutTime').timespinner('setValue', '00:00');
        $('#tpEndOutTime').timespinner('setValue', '00:00');
        $("#spEndInTime").show();
        $("#spEndOutTime").show();
        $("#spEndLate").show();
        $("#spEndEarly").show();
        $("#spEndDaysCount").show();

        $('#txtStartLate').val("");
        $('#txtEndLate').val("");
        $('#txtStartEarly').val("");
        $('#txtEndEarly').val("");

        $("#cboCriteriaType").val(1);
    });

    $("#btnExtraSearchingOK").click(function () {
        $("#winExtraSearching").icsWindow("close");
    });

    $("#btnExtraSearchingClose").click(function () {
        $("#winExtraSearching").icsWindow("close");
    });

    $("#cboCriteriaType").change(function () {
        var nCriteriaType = $("#cboCriteriaType").val();
        if(nCriteriaType==2 || nCriteriaType==3 || nCriteriaType==4)
        {
            $("#spEndInTime").hide();
            $("#spEndOutTime").hide();
            $("#spEndLate").hide();
            $("#spEndEarly").hide();
            $("#spEndDaysCount").hide();
        }
        else
        {
            $("#spEndInTime").show();
            $("#spEndOutTime").show();
            $("#spEndLate").show();
            $("#spEndEarly").show();
            $("#spEndDaysCount").show();
        }
    });

    function ExtraSearching_XL()
    {

        var oAttDaily = $('#tblAttendanceDaily').datagrid('getChecked');
        var _sEmployeeIDs = "";
        for (var i = 0; i < oAttDaily.length; i++)
        {
            _sEmployeeIDs += oAttDaily[i].EmployeeID + ",";
        }
        _sEmployeeIDs = _sEmployeeIDs.substring(0, _sEmployeeIDs.length - 1);

        var format = "";
        if(document.getElementById("chkFormat").checked == true){
            format = "twelve";
        }
        else format = "twentyfour";


        var sAttID="";
        //var oAtts= $('#tblAttendanceDaily').datagrid('getChecked');
        //for(var i=0; i<oAtts.length; i++)
        //{
        //    sAttID+=oAtts[i].AttendanceID+",";
        //}
        //sAttID=sAttID.substring(0,sAttID.length-1);

        var nPrintType=$("#cboPrint").val();
        var sDate = $('#dtDate').datebox('getValue');

        var tsv = ((new Date()).getTime()) / 1000;
        var sChkType = "" ;
        var nShiftID=$("#cboShift").val();

        if($("#chkPresent").is(":checked"))
        {
            sChkType="Present";
        }
        else if($("#chkAbsent").is(":checked"))
        {
            sChkType="Absent";
        }
        else if($("#chkLate").is(":checked"))
        {
            sChkType="Late";
        }
        else if($("#chkEarlyLeaving").is(":checked"))
        {
            sChkType="Early";
        }
        else if($("#chkOT").is(":checked"))
        {
            sChkType="OT";
        }
        else if($("#chkNoWork").is(":checked"))
        {
            sChkType="NoWork";
        }
        else if($("#chkLeave").is(":checked"))
        {
            sChkType="Leave";
        }
        else if($("#chkNoOutTime").is(":checked"))
        {
            sChkType="NOT";
        }


        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }


        var CriteriaType=$('#cboCriteriaType').val();
        var StartInTime=$('#tpStartInTime').timespinner('getValue');
        if(StartInTime=="00:00") {StartInTime = "00:00:00";}
        var EndInTime=$('#tpEndInTime').timespinner('getValue');
        if(EndInTime=="00:00") {EndInTime = "00:00:00";}
        var StartOutTime=$('#tpStartOutTime').timespinner('getValue');
        if(StartOutTime=="00:00") {StartOutTime = "00:00:00";}
        var EndOutTime=$('#tpEndOutTime').timespinner('getValue');
        if(EndOutTime=="00:00") {EndOutTime = "00:00:00";}

        var StartLate=$('#txtStartLate').val();
        if(StartLate== null || StartLate<=0){StartLate=0}
        var EndLate=$('#txtEndLate').val();
        if(EndLate== null || EndLate<=0){EndLate=0}
        var StartEarly=$('#txtStartEarly').val();
        if(StartEarly== null || StartEarly<=0){StartEarly=0}
        var EndEarly=$('#txtEndEarly').val();
        if(EndEarly== null || EndEarly<=0){EndEarly=0}

        if(CriteriaType==1)
        {
            if(StartInTime >EndInTime)
            {
                alert("Invalid In Time range !");
                return;
            }
            if(StartOutTime>EndOutTime)
            {
                alert("Invalid Out Time range !");
                return;
            }
            if(parseFloat(StartLate) > parseFloat(EndLate))
            {
                alert("Invalid Late range !");
                return;
            }
            if(parseFloat(StartEarly) > parseFloat(EndEarly))
            {
                alert("Invalid Early range !");
                return;
            }
        }
        debugger;
        var sParam =sDate+"~"+_sBusinessUnitIds +"~"+  _sLocationID +"~"+ (($.trim(_sDepartmentIds)=="")? "":_sDepartmentIds)
            +"~"+(($.trim(_sDesignationIds)=="")? "":_sDesignationIds)+"~"+ (($.trim(_sEmployeeIDs)=="")? "":_sEmployeeIDs
            )+"~"+(($.trim(_sShiftIds)=="")? "":_sShiftIds)+"~"+(($.trim(sChkType)=="")? "":sChkType)
            + "~" + (($.trim(format)=="")? "":format)
            +"~" +CriteriaType
            +"~"+StartInTime+"~"+EndInTime+"~"+StartOutTime+"~"+EndOutTime
            +"~"+StartLate+"~"+EndLate+"~"+StartEarly+"~"+EndEarly + "~" + "" + "~" + false;
        var tsv=((new Date()).getTime())/1000;
        var sAction="";
        if(nPrintType==0){sAction="ExcelDailyAttendance_LocationWise";}
        if(nPrintType==1){sAction="ExcelDailyAttendance_DepartmentWise";}
        window.open(_sBaseAddress+ "/Compliance/"+sAction+"?sParam="+sParam+"&nts="+tsv, "_blank");
        $("#winExtraSearching").icsWindow("close");
    }

    function ExtraSearch()
    {
        if(!_bNext)
        {
            _nRowLength = 0;
            _nLastAttendanceID = 0;
            _oAttendanceDailys=[];
        }

        var sDate = $('#dtDate').datebox('getValue');

        var tsv = ((new Date()).getTime()) / 1000;
        var bAbsent = false ;
        //var nShiftID=$("#cboShift").val();
        //_nLoadRecords = document.getElementById("txtLoadRecords").value;
        _nLoadRecords = document.getElementById("txtTo_Colection").value;
        if(document.getElementById("chkRange_Colection").checked == true)
        {
            var RangeFrom = 0;
            var RangeTo = 0;
            RangeFrom = parseFloat(document.getElementById("txtFrom_Colection").value);
            RangeTo = parseFloat(document.getElementById("txtTo_Colection").value);

            if(RangeFrom > RangeTo)
            {
                alert("Invalid Range !");
                return;
            }
            _nRowLength = 0;
            _nLoadRecords = 0;

            _nRowLength = RangeFrom-1;
            _nLoadRecords = RangeTo - RangeFrom +1;
        }

        var sChkType = "";

        if($("#chkPresent").is(":checked"))
        {
            sChkType="Present";
        }
        else if($("#chkAbsent").is(":checked"))
        {
            sChkType="Absent";
        }
        else if($("#chkLate").is(":checked"))
        {
            sChkType="Late";
        }
        else if($("#chkEarlyLeaving").is(":checked"))
        {
            sChkType="Early";
        }
        else if($("#chkOT").is(":checked"))
        {
            sChkType="OT";
        }
        else if($("#chkNoWork").is(":checked"))
        {
            sChkType="NoWork";
        }
        else if($("#chkLeave").is(":checked"))
        {
            sChkType="Leave";
        }
        else if($("#chkNoOutTime").is(":checked"))
        {
            sChkType="NOT";
        }

        var CriteriaType=$('#cboCriteriaType').val();
        var StartInTime=$('#tpStartInTime').timespinner('getValue');
        if(StartInTime=="00:00") {StartInTime = "00:00:00";}
        var EndInTime=$('#tpEndInTime').timespinner('getValue');
        if(EndInTime=="00:00") {EndInTime = "00:00:00";}
        var StartOutTime=$('#tpStartOutTime').timespinner('getValue');
        if(StartOutTime=="00:00") {StartOutTime = "00:00:00";}
        var EndOutTime=$('#tpEndOutTime').timespinner('getValue');
        if(EndOutTime=="00:00") {EndOutTime = "00:00:00";}

        var StartLate=$('#txtStartLate').val();
        if(StartLate== null || StartLate<=0){StartLate=0}
        var EndLate=$('#txtEndLate').val();
        if(EndLate== null || EndLate<=0){EndLate=0}
        var StartEarly=$('#txtStartEarly').val();
        if(StartEarly== null || StartEarly<=0){StartEarly=0}
        var EndEarly=$('#txtEndEarly').val();
        if(EndEarly== null || EndEarly<=0){EndEarly=0}

        if(CriteriaType==1)
        {
            if(StartInTime >EndInTime)
            {
                alert("Invalid In Time range !");
                return;
            }
            if(StartOutTime>EndOutTime)
            {
                alert("Invalid Out Time range !");
                return;
            }
            if(parseFloat(StartLate) > parseFloat(EndLate))
            {
                alert("Invalid Late range !");
                return;
            }
            if(parseFloat(StartEarly) > parseFloat(EndEarly))
            {
                alert("Invalid Early range !");
                return;
            }
        }
        debugger;

        $.ajax({
            type: "GET",
            dataType: "json",
            url: _sBaseAddress + "/Compliance/GetAttendanceExtraSearch",
            data:{
                sDate: sDate , sBusinessUnitIds:_sBusinessUnitIds,sLocationID: _sLocationID, sDepartmentIds : _sDepartmentIds,sDesignationIds:_sDesignationIds, sEmployeeIDs : _sEmployeeIDs, bAbsent : bAbsent,ShiftIds:_sShiftIds,sChkType:sChkType,nLoadRecords : _nLoadRecords, nRowLength : _nRowLength,
                CriteriaType: CriteriaType ,
                StartInTime:StartInTime,
                EndInTime : EndInTime,
                StartOutTime: StartOutTime,
                EndOutTime : EndOutTime,
                StartLate:StartLate,
                EndLate : EndLate,
                StartEarly : StartEarly,
                EndEarly:EndEarly,
                nts : tsv},
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oAttendanceDailys =[];
                oAttendanceDailys = jQuery.parseJSON(data);
                if(oAttendanceDailys.length>0)
                {
                    debugger;
                    document.getElementById('lblInfo').innerHTML = 'Attendance for '+icsdateformat(new Date(sDate));
                    if(!_bNext && !_bAppend)
                    {
                        _oAttendanceDailys=[];
                        LoadDailyAttendanceGrid([]);
                    }

                    for (var j = 0; j < oAttendanceDailys.length; j++)
                    {
                        $('#tblAttendanceDaily').datagrid('appendRow',oAttendanceDailys[j]);
                        _oAttendanceDailys.push(oAttendanceDailys[j]);
                    }
                    SortAttendanceDailys();
                }
                else
                {
                    if(!_bNext && !_bAppend)
                    {
                        alert("Data not found by this date!!");
                        _oAttendanceDailys=[];
                        LoadDailyAttendanceGrid(_oAttendanceDailys);
                        document.getElementById("lblSort").innerHTML ="";
                    }
                    else
                    {
                        alert("No more data found by this date !");
                    }

                    document.getElementById('lblInfo').innerHTML = "" ;
                    document.getElementById('lblInfo').innerHTML = 'No Attendance record for '+icsdateformat(new Date(sDate));

                }
                //var oEmployees=$('#tblAttendanceDaily').datagrid('getRows');
                //document.getElementById("lblcount").innerHTML = " | Count ="+ oEmployees.length;
                _bNext = false;
                _bAppend = false;
                $("#winExtraSearching").icsWindow("close");

            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function ExtraSearching_PDF()
    {

        var oAttDaily = $('#tblAttendanceDaily').datagrid('getChecked');
        var _sEmployeeIDs = "";
        for (var i = 0; i < oAttDaily.length; i++)
        {
            _sEmployeeIDs += oAttDaily[i].EmployeeID + ",";
        }
        _sEmployeeIDs = _sEmployeeIDs.substring(0, _sEmployeeIDs.length - 1);

        var format = "";
        if(document.getElementById("chkFormat").checked == true){
            format = "twelve";
        }
        else format = "twentyfour";


        var sAttID="";
        //var oAtts= $('#tblAttendanceDaily').datagrid('getChecked');
        //for(var i=0; i<oAtts.length; i++)
        //{
        //    sAttID+=oAtts[i].AttendanceID+",";
        //}
        //sAttID=sAttID.substring(0,sAttID.length-1);

        var nPrintType=$("#cboPrint").val();
        var sDate = $('#dtDate').datebox('getValue');

        var tsv = ((new Date()).getTime()) / 1000;
        var sChkType = "" ;
        var nShiftID=$("#cboShift").val();

        if($("#chkPresent").is(":checked"))
        {
            sChkType="Present";
        }
        else if($("#chkAbsent").is(":checked"))
        {
            sChkType="Absent";
        }
        else if($("#chkLate").is(":checked"))
        {
            sChkType="Late";
        }
        else if($("#chkEarlyLeaving").is(":checked"))
        {
            sChkType="Early";
        }
        else if($("#chkOT").is(":checked"))
        {
            sChkType="OT";
        }
        else if($("#chkNoWork").is(":checked"))
        {
            sChkType="NoWork";
        }
        else if($("#chkLeave").is(":checked"))
        {
            sChkType="Leave";
        }
        else if($("#chkNoOutTime").is(":checked"))
        {
            sChkType="NOT";
        }


        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }


        var CriteriaType=$('#cboCriteriaType').val();
        var StartInTime=$('#tpStartInTime').timespinner('getValue');
        if(StartInTime=="00:00") {StartInTime = "00:00:00";}
        var EndInTime=$('#tpEndInTime').timespinner('getValue');
        if(EndInTime=="00:00") {EndInTime = "00:00:00";}
        var StartOutTime=$('#tpStartOutTime').timespinner('getValue');
        if(StartOutTime=="00:00") {StartOutTime = "00:00:00";}
        var EndOutTime=$('#tpEndOutTime').timespinner('getValue');
        if(EndOutTime=="00:00") {EndOutTime = "00:00:00";}

        var StartLate=$('#txtStartLate').val();
        if(StartLate== null || StartLate<=0){StartLate=0}
        var EndLate=$('#txtEndLate').val();
        if(EndLate== null || EndLate<=0){EndLate=0}
        var StartEarly=$('#txtStartEarly').val();
        if(StartEarly== null || StartEarly<=0){StartEarly=0}
        var EndEarly=$('#txtEndEarly').val();
        if(EndEarly== null || EndEarly<=0){EndEarly=0}

        if(CriteriaType==1)
        {
            if(StartInTime >EndInTime)
            {
                alert("Invalid In Time range !");
                return;
            }
            if(StartOutTime>EndOutTime)
            {
                alert("Invalid Out Time range !");
                return;
            }
            if(parseFloat(StartLate) > parseFloat(EndLate))
            {
                alert("Invalid Late range !");
                return;
            }
            if(parseFloat(StartEarly) > parseFloat(EndEarly))
            {
                alert("Invalid Early range !");
                return;
            }
        }
        debugger;
        var sParam =sDate+"~"+_sBusinessUnitIds +"~"+  _sLocationID +"~"+ (($.trim(_sDepartmentIds)=="")? "":_sDepartmentIds)
            +"~"+(($.trim(_sDesignationIds)=="")? "":_sDesignationIds)+"~"+ (($.trim(_sEmployeeIDs)=="")? "":_sEmployeeIDs
            )+"~"+(($.trim(_sShiftIds)=="")? "":_sShiftIds)+"~"+(($.trim(sChkType)=="")? "":sChkType)
            + "~" + (($.trim(format)=="")? "":format)
            +"~" +CriteriaType
            +"~"+StartInTime+"~"+EndInTime+"~"+StartOutTime+"~"+EndOutTime
            +"~"+StartLate+"~"+EndLate+"~"+StartEarly+"~"+EndEarly + "~" + "" + "~" + false;
        var tsv=((new Date()).getTime())/1000;
        var sAction="";
        if(nPrintType==0){sAction="PrintDailyAttendance_LocationWise";}
        if(nPrintType==1){sAction="PrintDailyAttendance_DepartmentWise";}
        window.open(_sBaseAddress+ "/Compliance/"+sAction+"?sParam="+sParam+"&nts="+tsv, "_blank");
        $("#winExtraSearching").icsWindow("close");
    }

    $("#chkIsManualOT").click(function(e){
        if($('#chkIsManualOT').is(':checked'))
        {
            $("#txtManualOT").prop('disabled',false);
        }
        else{$("#txtManualOT").prop('disabled',true);}
    });

    $("#cboPrint").change(function(e){
        if($('#cboPrint').val()==2)
        {
            $("#btnAtttSummary").show();
            $("#btnAtttSummaryF2").hide();
            $("#btnPrintCheckBoxWise").hide();
            $("#btnExcelCheckBoxWise").hide();
        }
        else if($('#cboPrint').val()==3) {
            $("#btnAtttSummary").hide();
            $("#btnAtttSummaryF2").show();
            $("#btnPrintCheckBoxWise").hide();
            $("#btnExcelCheckBoxWise").hide();
        }
        else{
            $("#btnAtttSummary").hide();
            $("#btnAtttSummaryF2").hide();
            $("#btnPrintCheckBoxWise").show();
            $("#btnExcelCheckBoxWise").show();
        }
    });

    $('#btnAtttSummary').click(function (e)
    {
        var sDate = $('#dtDate').datebox('getValue');
        var sParam =sDate+"~"+_sBusinessUnitIds +"~"+  _sLocationID +"~"+ (($.trim(_sDepartmentIds)=="")? "":_sDepartmentIds)
            +"~"+(($.trim(_sDesignationIds)=="")? "":_sDesignationIds)+"~"+ (($.trim(_sEmployeeIDs)=="")? "":_sEmployeeIDs)+"~"+_sShiftIds;
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/Compliance/ExcelAttRatioSummary?sParam="+sParam+"&nts="+tsv, "_blank");

    });
    $('#btnAtttSummaryF2').click(function (e)
    {
        var sDate = $('#dtDate').datebox('getValue');
        var sParam =sDate+"~"+_sBusinessUnitIds +"~"+  _sLocationID +"~"+ (($.trim(_sDepartmentIds)=="")? "":_sDepartmentIds)
            +"~"+(($.trim(_sDesignationIds)=="")? "":_sDesignationIds)+"~"+ (($.trim(_sEmployeeIDs)=="")? "":_sEmployeeIDs)+"~"+_sShiftIds;
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/Compliance/ExcelAttRatioSummaryF2?sParam="+sParam+"&nts="+tsv, "_blank");

    });
    

    
    /*------------EmployeeGroupAdv--------------*/
    
    $("#btnEmployeeGroupResetAdv").click(function(e){
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
    });

    $('#txtEmployeeGroupAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroupAdv").val();
            var sTempName = "";
            SearchEmployeeGroupAdv(txtSearchByGroup);
            $("#txtEmployeeGroupAdv").val('');
        }
    });


    $("#btnEmployeeGroupPickerAdv").click(function(e){
        SearchEmployeeGroupAdv("");
    });
    function SearchEmployeeGroupAdv(name) {
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oGroups.length; i++)
                    {
                        _sGroupNamesAdv += oGroups[i].Name+",";
                        _sGroupIDsAdv += oGroups[i].EmployeeTypeID+",";

                    }
                    _sGroupNamesAdv=_sGroupNamesAdv.substring(0,_sGroupNamesAdv.length-1);
                    _sGroupIDsAdv=_sGroupIDsAdv.substring(0,_sGroupIDsAdv.length-1);
                    $("#txtEmployeeGroupAdv").val(_sGroupNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }



    /*------------EmployeeBlockAdv--------------*/

    $('#txtEmployeeBlockAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlockAdv").val();
            var sTempName = "";
            SearchEmployeeBlockAdv(txtSearchByBlock);
            $("#txtEmployeeBlockAdv").val('');
        }
    });

    $("#btnEmployeeBlockPickerAdv").click(function(e){
        SearchEmployeeBlockAdv("");
    });
    function SearchEmployeeBlockAdv(name) {
        $("#txtEmployeeBlockAdv").val("");
        _sBlockNamesAdv = "";
        _sBlockIDsAdv = "";
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNamesAdv += oBlocks[i].Name+",";
                        _sBlockIDsAdv += oBlocks[i].EmployeeTypeID+",";

                    }
                    _sBlockNamesAdv=_sBlockNamesAdv.substring(0,_sBlockNamesAdv.length-1);
                    _sBlockIDsAdv=_sBlockIDsAdv.substring(0,_sBlockIDsAdv.length-1);
                    $("#txtEmployeeBlockAdv").val(_sBlockNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }
    

    $("#btnEmployeeBlockResetAdv").click(function(e){
        debugger;
        _sBlockNamesAdv = "";
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDsAdv = "";
    });
</script>
