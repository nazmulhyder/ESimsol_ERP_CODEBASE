@{
    Layout = "~/Views/Shared/_AngularLayout.cshtml";
}
<html>
<body>
    @model IEnumerable <ESimSol.BusinessObjects.MaxOTConfiguration>

    <div ng-app="mainApp">
        <div ng-controller="mainController">

            <div class="form-inline">
                @*<div class="input-group">
                <input type="text" ng-model="MaxOTInMin" class="form-control number-precision" placeholder="Enter Time in Minute" />
            </div>*@
                <button type="button" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="OpenAddModal()"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> ADD</button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="EditMaxOT()"> <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit</button>
                <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="deleteMaxOT()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> DELETE</button>

            </div>
            <div ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav class="grid ui-grid-selectable" style="height:520px;"></div>
        </div>

        <script type="text/ng-template" id="AddConfig.html">
            <div class="modal-header">
                <h4 class="modal-title" id="modal-title">Add Max OT Configuration:</h4>
            </div>
            <div class="modal-body form-horizontal ms-custom-control" id="modal-body">
                <div class="row">
                    <div class="col-md-12 ">
                        <div class="col-md-4 text-right"><label class="control-label">Time Card Name:</label></div>
                        <div class="col-md-7 text-left">
                            <input type="text" ng-model="MaxOTConfiguration.TimeCardName" class="form-control" required placeholder="Please Enter Time Card Name" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 ">
                        <div class="col-md-4 text-right"><label class="control-label">OT Name:</label></div>
                        <div class="col-md-7 text-left">
                            <input type="text" ng-model="MaxOTConfiguration.ExtraOT" class="form-control" required placeholder="Please Enter OT Name" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 ">
                        <div class="col-md-4 text-right"><label class="control-label">PaySlip Name:</label></div>
                        <div class="col-md-7 text-left">
                            <input type="text" ng-model="MaxOTConfiguration.PaySlip" class="form-control" placeholder="Please Enter PaySlip Name" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 ">
                        <div class="col-md-4 text-right"><label class="control-label">Max OT In Min:</label></div>
                        <div class="col-md-7 text-left">
                            <input type="text" ng-model="MaxOTConfiguration.MaxOTInMin" class="form-control number" placeholder="Please Enter Max OT In Minute" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12 ">
                        <div class="col-md-4 text-right"><label class="control-label">Present On Dayoff:</label></div>
                        <div class="col-md-7 text-left">
                            <input type="checkbox" ng-model="MaxOTConfiguration.IsPresentOnDayOff"/>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12 ">
                        <div class="col-md-4 text-right"><label class="control-label">Present On Holiday:</label></div>
                        <div class="col-md-7">
                            <input type="checkbox" ng-model="MaxOTConfiguration.IsPresentOnHoliday"/>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12 ">
                        <div class="col-md-4 text-right"><label class="control-label">Max Out Time:</label></div>
                        <div class="col-md-7">
                            <div class="input-group date date-time-container">
                                <input type="text" id="dtMaxOutTime" class="form-control" ng-model="MaxOTConfiguration.MaxOutTime"><span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12 ">
                        <div class="col-md-4 text-right"><label class="control-label">Min In Time:</label></div>
                        <div class="col-md-7">
                            <div class="input-group date date-time-container">
                                <input type="text" id="dtMinInTime" class="form-control" ng-model="MaxOTConfiguration.MinInTime"><span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-primary btn-sm" aria-label="Left Align" ng-click="Save()" ng-hide="hide"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Save</button>
                <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="Cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
            </div>
        </script>
    </div>
</body>
</html>
<script type="text/javascript">
    
    var  _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oMaxOTConfigurations =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    
    var  MaxOTConfigurationModule = angular.module('mainApp', ['ngAnimate','ui.bootstrap','ui.grid','ui.grid.selection','ui.grid.resizeColumns','ms.service']);
    MaxOTConfigurationModule.controller('mainController', function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession,icsMethod) {
     
        $(document).ready(function(){
            debugger;
            
            $(".number-precision").icsNumberField({ min: 0,precision: 0 });
            
        });
        

        $scope.MOCID = 0;

        $scope.gridOptions ={
            enableRowHeaderSelection: false,
            enableRowSelection: true,
            enableFullRowSelection: true,
            multiSelect: false,
            enableColumnResizing: true,
            noUnselect : true,
            enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                { field: 'MaxOTInMinHourSt', name: 'MaxOT In Hour', width:'12%', enableCellEdit: false },
                { field: 'TimeCardName', name: 'TimeCardName', width:'12%', enableCellEdit: false },
                { field: 'PaySlip', name: 'PaySlip Name', width:'12%', enableCellEdit: false },
                { field: 'ExtraOT', name: 'ExtraOT Name', width:'12%', enableCellEdit: false },
                { field: 'IsPresentOnDayOff', name: 'Present On Dayoff', width:'12%', enableCellEdit: false },
                { field: 'IsPresentOnHoliday', name: 'Present On Holiday', width:'12%', enableCellEdit: false },
                { field: 'MaxOutTimeInString', name: 'Max OutTime', width:'12%', enableCellEdit: false },
                { field: 'MinInTimeInString', name: 'Min InTime', width:'12%', enableCellEdit: false }

            ],
            data:oMaxOTConfigurations,
            onRegisterApi:function(gridApi) {
                $scope.gridApi = gridApi;
            }
        };
        

        $scope.Validation=function(){
            if($scope.MaxOTInMin=="" || $scope.MaxOTInMin == undefined){
                msModal.Message({headerTitle : '', bodyText:'MaxOTInMin required', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            return  true;
        };

        $scope.OpenAddModal=function ()
        {
            var obj = {
                MOCID : 0,
                TimeCardName : "",
                ExtraOT:"",
                PaySlip:"",
                IsPresentOnDayOff:false,
                IsPresentOnHoliday:false,
                MaxOTInMin:0,
                MaxOutTime:"",
                MinInTime:""
            };
            $scope.Modal(obj, 'add');
        }
        $scope.EditMaxOT=function ()
        {
            var data=$scope.gridApi.selection.getSelectedRows().first();

            $scope.Modal(data, 'view');
        }
        $scope.Modal = function (obj, operation) {
            debugger;
            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'AddConfig.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'MaxOTConfiguration',
                resolve: {
                    obj: function () {
                        return { MaxOTConfiguration:obj, Operation: operation  };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                debugger;
                if(result.MOCID>0){
                    if(operation=='add'){
                        $scope.gridOptions.data.push(result);
                        $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                        $scope.gridApi.selection.selectRow(result);
                    }
                    else{
                        $scope.gridOptions.data[$scope.index]=result;
                        $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                        $scope.gridApi.selection.selectRow($scope.gridOptions.data[$scope.index]);
                    }
                }

            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        
        //$scope.addMaxOT= function () {
        //    debugger;
        //    if(!$scope.Validation())
        //        return false;
        //    var obj= {
        //        MaxOTInMin : $scope.MaxOTInMin,
        //    }

        //    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
        //    $http.post(_sBaseAddress+'/MaxOTConfiguration/Save',$.param(obj), config).then(function (response){
        //        debugger;
        //        var result=jQuery.parseJSON(response.data);
        //        if(result.MOCID>0)
        //        {
        //            $scope.gridOptions.data.push(result);
        //            $scope.MaxOTInMin = "";
        //            debugger;
        //            msModal.Message({headerTitle : '', bodyText:'Successfully Saved', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});

        //        }
        //        else{
        //            msModal.Message({headerTitle : '', bodyText:result.ErrorMessage, sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
        //        }
        //    },
        //        function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        //    );
        //};

        
        $scope.deleteMaxOT = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows().first();
           
            console.log(data);
            console.log(new Date(data.MaxOutTime) + ', ' + new Date(data.MaxOutTime));
            if (!confirm("Confirm to Delete?")) return;
            if(data==null || data.MOCID<=0){
                msModal.Message({headerTitle : '', bodyText:'No item found to delete. Select an item.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            $scope.index = $scope.gridOptions.data.indexOf(data);

            $http.post(_sBaseAddress+'/MaxOTConfiguration/Delete',JSON.stringify(data)).then(
                            function (response) {
                                if(jQuery.parseJSON(response.data)=='Deleted'){
                                    $scope.gridOptions.data.splice($scope.index,1);
                                    msModal.Message({headerTitle : '', bodyText:'Delete Successfully.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                }
                                else{
                                    msModal.Message({headerTitle : '', bodyText:jQuery.parseJSON(response.data), sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                }
                            },
                            function (response) {alert(jQuery.parseJSON(response.data));}
                        );

        };
    });

    MaxOTConfigurationModule.controller('ModalInstanceCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) {
        $(document).on('mousemove', '.modal-body', function () {
            $('.date-time-container').datetimepicker({
                format: "HH:mm"
            });
            $(".number-int").icsNumberField({ min: 0,precision: 0 });
            $(".number-precision").icsNumberField({ min: 0,precision: 2 });
        });
        
        $scope.Operation=obj.Operation;
        
        $scope.MaxOTConfiguration = obj.MaxOTConfiguration;
        $scope.MaxOTConfiguration.MaxOutTime = $scope.MaxOTConfiguration.MinInTime =icsdatetimeformat(new Date());
        
        $scope.Validation=function(){

            return  true;
        };

        $scope.Save = function () {
            debugger;

            console.log($scope.MaxOTConfiguration);

            
            $scope.MaxOTConfiguration.MaxOutTime = $('#dtMaxOutTime').val();
            $scope.MaxOTConfiguration.MinInTime = $('#dtMinInTime').val();

            if(!$scope.Validation())
                return false;

            $http.post(_sBaseAddress+'/MaxOTConfiguration/Save', JSON.stringify($scope.MaxOTConfiguration)).then(

                             function (response) {
                                 debugger;
                                 var result=jQuery.parseJSON(response.data);
                                 if(result.MOCID>0)
                                 {
                                     alert("Saved Successfully");
                                     $uibModalInstance.close(result);
                                 }
                                 else{
                                     msModal.Message({headerTitle : '', bodyText:result.ErrorMessage, sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                 }
                             },
                             function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                       );
        };

        $scope.Cancel= function () {
            $uibModalInstance.close($scope.MaxOTConfiguration);
        };

    });
</script>