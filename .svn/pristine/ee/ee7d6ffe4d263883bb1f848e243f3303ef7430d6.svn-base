@{
    ViewBag.Title = "Proforma Invoice list";
}
@model IEnumerable<ESimSol.BusinessObjects.ProformaInvoice>
<div id="winApprovalRequest" class="easyui-window" title="Request For Approval" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="font-family:Tahoma">
        <fieldset style="margin-top:3px">
            <table border="0" style="font-size:12px">
                <tr>
                    <td style="width:150px; text-align:right">Request To:</td>
                    <td style="width:250px; text-align:left"><select id="cboApprovalRequestTo" style="width:225px;font-size:12px;" /></td>
                </tr>
                <tr>
                    <td style="width:150px; text-align:right">Note :</td>
                    <td style="width:250px; text-align:left">
                        <input type="text" id="txtApprovalRequestNote" style="width:220px" />
                    </td>
                </tr>
            </table>
        </fieldset>

        <fieldset style="margin-bottom:3px">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; width:400px">
                <tr>
                    <td style="width:300px; text-align:right"></td>
                    <td style="width:50px">
                        <a id="btnApprovalRequestConfirm" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Confirm</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnApprovalRequestClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</div>
<div id="winReviseRequest" class="easyui-window" title="Request For Revise" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="font-family:Tahoma">
        <fieldset style="margin-top:3px">
            <table border="0" style="font-size:12px">
                <tr>
                    <td style="width:150px; text-align:right">Request To:</td>
                    <td style="width:250px; text-align:left"><select id="cboReviseRequestTo" style="width:225px;font-size:12px;" /></td>
                </tr>
                <tr>
                    <td style="width:150px; text-align:right">Note :</td>
                    <td style="width:250px; text-align:left">
                        <input type="text" id="txtReviseRequestNote" style="width:220px" />
                    </td>
                </tr>
            </table>
        </fieldset>

        <fieldset style="margin-bottom:3px">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; width:400px">
                <tr>
                    <td style="width:300px; text-align:right"></td>
                    <td style="width:50px">
                        <a id="btnReviseRequestConfirm" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Confirm</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnReviseRequestClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</div>

<div id="winProformaInvoiceAdvanceSearch" class="easyui-window" title="Advance Search" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="width:760px; float: left;">
        <table border="0" cellpadding="0" cellspacing="0">
            <tr style="height:330px">
                <td style="width:850px">
                    <table border="0" cellpadding="0" cellspacing="0">
                        <tr style="height: 260px">
                            <td style="width: 400px; vertical-align: top; height: 320px">
                                <fieldset>
                                    <legend style="font-weight: bold; font-size: 12px">Searching Criteria : </legend>
                                    <table border="0" cellpadding="0" cellspacing="0" style="width: 340px; font-size: 12px">
                                        <tr>
                                            <td style="width: 130px; text-align: left; font-weight: bold">
                                                PI No:
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width: 325px; text-align: left">
                                                @Html.TextBox("txtPINo", "", new { style = "width: 325px", id = "txtPINo" })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width: 130px; text-align: left; font-weight: bold">
                                                Style No:
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width: 325px; text-align: left">
                                                @Html.TextBox("txtStyleNoForSearch", "", new { style = "width: 325px", id = "txtStyleNoForSearch" })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width: 130px; text-align: left; font-weight: bold">
                                                Buyer Name:
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width: 325px; text-align: left">
                                                @Html.TextBox("txtBuyer", "", new { style = "width: 253px", id = "txtBuyer", placeholder = "Type Buyer Name & Press Enter" })<input type="button" id="btnBuyer" style="width: 70px; font-size: 12px" value="Pick" />
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width: 130px; text-align: left; font-weight: bold">
                                                Order Recap:
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width: 325px; text-align: left">
                                                @Html.TextBox("txtOrderRecap", "", new { style = "width: 253px", id = "txtOrderRecap", placeholder = "Type Sale Order No & Press Enter" })<input type="button" style="width: 70px; font-size: 12px" onclick="GetOrderRecaps()" value="Pick" />
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width: 130px; text-align: left; font-weight: bold">
                                                Issue Date:
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width: 325px; text-align: left; font-size: 12px">
                                                <table border="0" style="font-size: 12px">
                                                    <tr>
                                                        <td style="width: 100px; font-size: 12px; text-align: left">
                                                            @Html.DropDownList("cboIssueDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboIssueDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeA" })
                                                        </td>
                                                        <td style="width: 98px; font-size: 12px">
                                                            <input id="txtIssueStartDate" type="text" style="width: 98px;" class="easyui-datebox"
                                                                    required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                                        </td>
                                                        <td style="width: 9px; font-size: 12px" id="enddateT">
                                                            To
                                                        </td>
                                                        <td style="width: 97px; font-size: 12px" id="enddate">
                                                            <input id="txtIssueEndDate" type="text" style="width: 97px;" class="easyui-datebox"
                                                                    required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                                        </td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>
                                        <tr>
                                        <td style="width: 130px; text-align: left; font-weight: bold">
                                            LC Bank:
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 325px; text-align: left">
                                            <select id="cboBankAccount" style=" width:325px;"></select>
                                        </td>
                                    </tr>
                                        <tr>
                                            <td style="width: 130px; text-align: left; font-weight: bold">
                                                Business Session:
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width: 325px; text-align: left">
                                                <select id="cboBusinessSession" style=" width:325px;"></select>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td style="width: 130px; text-align: left; font-weight: bold">
                                                Payment Type:
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width: 325px; text-align: left">
                                                <select id="cboPaymentType" style=" width:325px;"></select>
                                            </td>
                                        </tr>

                                        <tr style="height:38px; vertical-align: bottom">
                                            <td style=" text-align:left; width:325px;">
                                                <table border="0" cellpadding="0" cellspacing="0">
                                                    <tr>
                                                        <td style=" text-align:left;"><input type="button" value="Reset" id="btnReset" onclick="Reset()" style="width:70px; text-align:left;" /></td>
                                                        <td style=" text-align:right; width:255px;"><input type="button" value="Search" id="btnRefresh" style="width:70px; text-align:right;" /></td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>
                                    </table>
                                </fieldset>
                            </td>
                            <td style="width: 323px; height:340px; vertical-align: top">
                                <div style=" margin-top:6px;">
                                    <table id="tblProformaInvoiceSearch" title="Proforma Invoice List" class="easyui-datagrid" style="width:365px;height:375px; font-size: 12px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                                        <thead>
                                            <tr>
                                                <th data-options="field:'Selected',checkbox:true"></th>
                                                <th field="PINo" width="60">PI No</th>
                                                <th field="IssueDateInString" width="70">Issue Date</th>
                                                <th field="BuyerName" width="100">Buyer Name</th>
                                                <th field="TransferingBankName" width="100">LC Bank</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr style="height:50px">
                <td style="width:850px; text-align:right">
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                </td>
            </tr>
        </table>
    </div>
</div>

<div class="menuMainCollectionTable" id="divPI">
    <table id="tblProformaInvoice" title="Proforma Invoice  Issue" class="easyui-datagrid" fit="true" fitcolumns="true" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbar">
        <thead>
            <tr>
                <th field="LCReceived" width="80"> LC Received </th>
                <th field="PINo" width="140"> PI No </th>
                <th field="PIStatusInString" width="80"> Status </th>
                <th field="BuyerName" width="100"> Buyer Name </th>
                <th field="IssueDateInString" width="80"> Issue Date </th>
                <th field="LCFavorOfName" width="110"> LC favor Of </th>
                <th field="TransferingBankName" width="110"> Transfering Bank </th>
                <th field="ApprovedByName" width="110"> Approved By</th>
                <th field="Quantity" align="right" width="80">Quantity</th>
                <th field="NetAmountInString" align="right" width="80"> Total Amount </th>
            </tr>
        </thead>
    </table>
    <div id="toolbar">
        <input type="text" id="txtStyleNo" placeholder="Type Style No & Press Enter" style="width: 150px;" />
        <input type="text" id="txtBuyerName" placeholder="Type Buyer & Press Enter" style="width: 150px;" />  
        <a id="btnAdvanceSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" >Search</a>
        <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
        <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
        <a id="btnDetails" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
        <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
        <a id="btnRequestforApproval" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-redo" plain="true">Rqst for App</a>
        <a id="btnUndoRequest" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" plain="true">Undo Req</a>
        <a id="btnWaitforApproval" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-waitforapproval" plain="true"> Wait For Approval</a>
        <a id="btnApproved" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true">Approved</a>
        <a id="btnUndoApproved" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" plain="true">Undo App.</a>
        <a id="btnPIRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-redo" plain="true">Req For. Revise</a>
        <a id="btnWaitforRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Wait For Revise</a>
        <a id="btnAcceptRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true">Accept Revise</a>
        <a id="btnSendToBuyer" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-redo" plain="true">Send To Buyer</a>
        <a id="btnCancel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Cancel</a>
        <a id="btnHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">History</a>
        <a id="btnReviseHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">Rvse History</a>
        <a id="btnPreView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print PI</a>
        <a id="btnPrintList" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print List</a>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        var oTempProformaInvoices =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oAURolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        var oBusinessSessions = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessSessions));
        var oPaymentTermObjs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PaymentTermObjs));
        var oBankAccounts =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BankAccounts));
        var nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
        sessionStorage.setItem("BUID",nBUID);
        $('#divPI').data('BusinessSessions',oBusinessSessions);
        $('#divPI').data('PaymentTermObjs',oPaymentTermObjs);
        $('#divPI').data('BankAccounts',oBankAccounts);
        $('#divPI').data('BuyerIDs',"");
        $('#divPI').data('OrderRecapIDs',"");
        var oProformaInvoices =sessionStorage.getItem("ProformaInvoices");
        if(oProformaInvoices!=null)
        {
            oProformaInvoices = jQuery.parseJSON(oProformaInvoices);
        }
        else
        {
            oProformaInvoices=oTempProformaInvoices;
        }
        RefreshList(oProformaInvoices);
        RefreshControlLayout(oAURolesMapping);
    });


    //Style wise Start
    $('#txtStyleNo').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            var txtStyleNo = $("#txtStyleNo").val();
            if(txtStyleNo!="")
            {
                $("#txtBuyerName").val('');
                //debugger;
                var tsv=((new Date()).getTime())/1000;
                $.ajax
             ({
                 type: "GET",
                 dataType: "json",
                 url : _sBaseAddress+  "/ProformaInvoice/SearchStyleAndBuyer",
                 data: {sTempData:txtStyleNo,buid:sessionStorage.getItem("BUID"), bIsStyle:true, ts:tsv},
                 contentType: "application/json; charset=utf-8",
                 success: function (data) {
                     //debugger;
                     var _oProformaInvoices = jQuery.parseJSON(data);
                     if (_oProformaInvoices.length>0)
                     {
                         var  data=_oProformaInvoices;
                         data={"total":""+data.length+"","rows":data};
                         $('#tblProformaInvoice').datagrid('loadData',data);
                     }
                     else
                     {
                         alert("Data Not found");
                     }
                 },
                 error: function (xhr, status, error)
                 {
                     alert(error);
                 }
             });             //debugger;

            }
        }else  if (code == 8) //backspace=8
        {
            var txtStyleNo=document.getElementById("txtStyleNo");
            txtStyleNo.value='';
            txtStyleNo.style.color="Normal";
            txtStyleNo.style.fontWeight="Black";

        }

    });

    //Buyer wise Start
    $('#txtBuyerName').keydown(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            var txtBuyerName = document.getElementById('txtBuyerName').value;
            if(txtBuyerName!="")
            {
                document.getElementById("txtStyleNo").value='';
                //debugger;
                var tsv=((new Date()).getTime())/1000;
                $.ajax
             ({
                 type: "GET",
                 dataType: "json",
                 url : _sBaseAddress+ "/ProformaInvoice/SearchStyleAndBuyer",
                 data: {sTempData:txtBuyerName,buid:sessionStorage.getItem("BUID"),bIsStyle:false, ts:tsv},
                 contentType: "application/json; charset=utf-8",
                 success: function (data) {
                     //debugger;
                     var _oProformaInvoices = jQuery.parseJSON(data);
                     if (_oProformaInvoices.length>0)
                     {
                         var  data=_oProformaInvoices;
                         data={"total":""+data.length+"","rows":data};
                         $('#tblProformaInvoice').datagrid('loadData',data);
                     }
                     else
                     {
                         alert("Data Not found");
                     }
                 },
                 error: function (xhr, status, error)
                 {
                     alert(error);
                 }
             });             //debugger;

            }
        } else  if (code == 8) //backspace=8
        {
            var txtBuyerName=document.getElementById("txtBuyerName");
            txtBuyerName.value='';
            txtBuyerName.style.color="Normal";
            txtBuyerName.style.fontWeight="Black";

        }

    });

    
    //Start Search
    $("#btnAdvanceSearch").click(function () {
        $("#winProformaInvoiceAdvanceSearch").icsWindow('open', "Advance Search");
        $("#winProformaInvoiceAdvanceSearch input").not("input[type='button']").val("");
        $("#winProformaInvoiceAdvanceSearch select").val(0);
        SetTodayDate();
        Reset();
        $("#cboBusinessSession").icsLoadCombo({ List: $('#divPI').data('BusinessSessions'), OptionValue: "BusinessSessionID", DisplayText: "SessionName" });
        $("#cboBankAccount").icsLoadCombo({ List: $('#divPI').data('BankAccounts'), OptionValue: "BankAccountID", DisplayText: "BankNameAccountNo" });
        $("#cboPaymentType").icsLoadCombo({ List: $('#divPI').data('PaymentTermObjs'),OptionValue: "id", DisplayText: "Value" });
    });

    function SetTodayDate()
    {
        $('#txtIssueStartDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtIssueEndDate').datebox('setValue', icsdateformat(new Date()));

    }

    $('._select_changeA').change(function () {
        //debugger;
        var x = $("#cboIssueDate").val();
        if (x == "EqualTo" || x == "NotEqualTo" || x == "GreaterThen" || x == "SmallerThen") {
            document.getElementById("enddate").style.display = 'none';
            document.getElementById("enddateT").style.display = 'none';
        }
        else {
            document.getElementById("enddate").style.display = '';
            document.getElementById("enddateT").style.display = '';
        }
        if (x == "None")
        {

            $('#txtIssueStartDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtIssueEndDate').datebox('setValue', icsdateformat(new Date()));
        }
    });

    //Pick Buyer
    $("#txtBuyer").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtBuyer').val())==null || $.trim($('#txtBuyer').val())=="")
            {
                alert("Type Buyer and Press Enter.");
                return;
            }
            GetBuyers();
        }else  if (code == 8) //backspace=8
        {
            //debugger;
            var txtBuyer = document.getElementById("txtBuyer");
            txtBuyer.style.color = "black";
            txtBuyer.style.fontWeight = "normal";
            $('#divPI').data('BuyerIDs',"");
        }
    });
    $("#btnBuyer").click(function () {
        GetBuyers();
    });
    function GetBuyers()
    {
        var oContractor = { Params: 2 + '~' + $.trim($('#txtBuyer').val())+'~'+sessionStorage.getItem("BUID")};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {

                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 150, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBuyers',
                        winclass: 'clsBuyer',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblBuyers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Buyer List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }


    $("#txtOrderRecap").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtOrderRecap').val())==null || $.trim($('#txtOrderRecap').val())=="")
            {
                alert("Please Type Sale Order");
                return;
            } 
            GetOrderRecaps();
        }else  if (code == 8) //backspace=8
        {
            //debugger;
            var txtOrderRecap = document.getElementById("txtOrderRecap");
            txtOrderRecap.style.color = "black";
            txtOrderRecap.style.fontWeight = "normal";
            $('#divPI').data('OrderRecapIDs',"");
        }
    });

    function GetOrderRecaps()
    {
        var oOrderRecap = {OrderRecapNo:$.trim($('#txtOrderRecap').val()),BUID:sessionStorage.getItem("BUID")};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oOrderRecap,
            ControllerName: "OrderRecap",
            ActionName: "GetOrderRecaps",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].OrderRecapID > 0) {
                    var tblColums = []; var oColumn = { field: "OrderRecapNo", title: "Order No", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "StyleNo", title: "Style No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "TotalQuantity", title: "Qty", width: 90, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winOrderRecaps',
                        winclass: 'clsOrderRecap',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblOrderRecaps',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Sale Order List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else
            {
                alert("Data Not Fount");
                return;
            }
        });
    }

    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            PickerEvents(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                PickerEvents(oPickerobj);
            }
        });
    }

    function PickerEvents(oPickerobj) {
        var oreturnobj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else
        {
            oreturnobj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }

        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winclass == 'clsBuyer')
        {
            var sBuyerIDs = "";
            if (oPickerobj.multiplereturn)
            {
                var ncount = 0;
                for (var i = 0; i <oreturnobjs.length; i++) {
                    var nBuyerID = oreturnobjs[i].ContractorID;
                    sBuyerIDs = sBuyerIDs + nBuyerID + ',';
                    ncount++;
                }
                if (ncount > 1)
                {
                    $('#txtBuyer').val("Select " + ncount + " Buyer's");
                } else
                {
                    $('#txtBuyer').val(oreturnobjs[0].Name);
                }
                sBuyerIDs = sBuyerIDs.substring(0, sBuyerIDs.length - 1);

            } else
            {
                $('#txtBuyer').val(oreturnobj.Name);
                sBuyerIDs = "" + oreturnobj.ContractorID + "";
                $('#txtBuyer').focus();
            }
            $('#divPI').data('BuyerIDs',sBuyerIDs);
            var txtBuyerName = document.getElementById("txtBuyer");
            txtBuyerName.style.color = "blue";
            txtBuyerName.style.fontWeight = "bold";
        } else if (oPickerobj.winclass == 'clsOrderRecap')
        {
            var nOrderRecapIDs = "";
            if (oPickerobj.multiplereturn)
            {
                var ncount = 0;
                for (var i = 0; i <oreturnobjs.length; i++)
                {
                    var nOrderRecapID = oreturnobjs[i].OrderRecapID;
                    nOrderRecapIDs = nOrderRecapIDs + nOrderRecapID + ',';
                    ncount++;
                }
                if (ncount > 1)
                {
                    $('#txtOrderRecap').val("Select " + ncount + " OrderRecap's");
                } else
                {
                    $('#txtOrderRecap').val(oreturnobjs[0].OrderRecapNo);
                }
                nOrderRecapIDs = nOrderRecapIDs.substring(0, nOrderRecapIDs.length - 1);
            } else
            {
                $('#txtOrderRecap').val(oreturnobj.OrderRecapNo);
                nOrderRecapIDs = "" + oreturnobj.OrderRecapID + "";
                $('#txtOrderRecap').focus();
            }
            $('#divPI').data('OrderRecapIDs',nOrderRecapIDs);
            $("#txtOrderRecap").addClass('fontColorOfPickItem');
        }
    }

    $('#btnRefresh').click(function () {
        /* Inquery Receive Date*/
        var cboIssueDate = document.getElementById("cboIssueDate");
        var nOrderDate=cboIssueDate.options[cboIssueDate.selectedIndex].index;
        var dIssueStartDate=$('#txtIssueStartDate').datebox('getValue');
        var dIssueEndDate=$('#txtIssueEndDate').datebox('getValue');

        /* Payment Type*/
        var cboPaymentType = document.getElementById("cboPaymentType");
        var nPaymentTypeID=cboPaymentType.options[cboPaymentType.selectedIndex].value;

        /* Bank Account*/
        var cboBankAccount = document.getElementById("cboBankAccount");
        var nBankAccountID=cboBankAccount.options[cboBankAccount.selectedIndex].value;

        var sPINo= document.getElementById("txtPINo").value;
        var sStyleNo= document.getElementById("txtStyleNoForSearch").value;
        var chkResult = CheckEmpty();
        if(chkResult!=true)
        {
            alert("Please Select at least one Criteria !!");
            return;
        }
        var sTempString =nOrderDate+'~'+dIssueStartDate+'~'+dIssueEndDate+'~'+sPINo+'~'+sStyleNo+'~'+$('#divPI').data('BuyerIDs')+'~'+$('#divPI').data('OrderRecapIDs')+'~'+nPaymentTypeID +'~'+nBankAccountID+'~'+$('#cboBusinessSession').val()+'~'+sessionStorage.getItem("BUID");

        $.ajax({
            type: "GET",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+ "/ProformaInvoice/Gets",
            data: { sTemp: sTempString },
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var  oProformaInvoices = jQuery.parseJSON(data);
                if (oProformaInvoices != null) {
                    if(oProformaInvoices.length>0)
                    {
                        RefreshListForSearch(oProformaInvoices);
                        $('#tblProformaInvoiceSearch').datagrid({selectOnCheck:false, checkOnSelect:false})
                    }
                    else
                    {
                        alert("Data not found!!");
                        RefreshListForSearch(oProformaInvoices);
                    }
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });

    function RefreshListForSearch(oProformaInvoices)
    {
        data =oProformaInvoices;
        data={"total":""+data.length+"","rows":data};
        $('#tblProformaInvoiceSearch').datagrid('loadData',data);
    }

    function Reset()
    {
        $("#txtStyleNoForSearch").val('');
        $("#txtPINo").val('');
        $("#txtBuyerName").val('');
        $("#txtBuyerName").removeClass('fontColorOfPickItem');
        $("#txtOrderRecap").val('');

        document.getElementById("enddate").style.display = '';
        document.getElementById("enddateT").style.display = '';
        $('#divPI').data('BuyerIDs',"");
        $('#divPI').data('OrderRecapIDs',"");
        $('#cboIssueDate').val('None');
        $('#cboPaymentType').val(0);
        $('#cboBankAccount').val(0);
        $('#cboBusinessSession').val(0);
        SetTodayDate();
        var oProformaInvoices=[];
        RefreshListForSearch(oProformaInvoices);

    };

    function CheckEmpty()
    {
        var cboIssueDate = document.getElementById("cboIssueDate");
        var nOrderDate=cboIssueDate.options[cboIssueDate.selectedIndex].index;
        var cboPaymentType = document.getElementById("cboPaymentType");
        var nPaymentTypeID=cboPaymentType.options[cboPaymentType.selectedIndex].value;
        var sPINo= document.getElementById("txtPINo").value;
        var sStyleNo= document.getElementById("txtStyleNoForSearch").value;
        var sProductCatagoryName= document.getElementById("txtOrderRecap").value;

        if(nOrderDate==0 && nPaymentTypeID==0  && sPINo=="" && $('#divPI').data('BuyerIDs')=="" && sStyleNo=="" && $('#divPI').data('OrderRecapIDs')=="" && parseInt(nBankAccountID)==0  && $('#cboBusinessSession').val()==0)
        {
            return true;
        }
        return true;
    }

    function Close()
    {
        $("#winProformaInvoiceAdvanceSearch").icsWindow('close');
    }

    function OkButtonClick()
    {
        //   debugger;
        var oProformaInvoices=[];
        var oProformaInvoices = $('#tblProformaInvoiceSearch').datagrid('getChecked');
        if(oProformaInvoices.length<=0)
        {
            alert("please select atleast one item");
            return;
        }
        RefreshList(oProformaInvoices);
        $("#winProformaInvoiceAdvanceSearch").icsWindow('close');
    }
    //end search

    function SetOrderStatusExtra (oProformaInvoice)
    {

        switch (oProformaInvoice.PIStatus)
        {
            case 1 : {
                oProformaInvoice.PIStatusInInt =1;
                break;
            }
            case 2 :{
                oProformaInvoice.PIStatusInInt =2;
                break;
            }
            case 3 :{
                oProformaInvoice.PIStatusInInt =3;
                break;
            }
            case 4 :{
                oProformaInvoice.PIStatusInInt =4;
                break;
            }
            case 5 :{
                oProformaInvoice.PIStatusInInt =5;
                break;
            }
            case 6 :{
                oProformaInvoice.PIStatusInInt =6;
                break;
            }
            case 7 :{
                oProformaInvoice.PIStatusInInt =7;
                break;
            }

        }

        return oProformaInvoice;
    }

    function StatusChange(oProformaInvoice,sParamIdentifier)
    {
        var oProformaInvoice =SetOrderStatusExtra (oProformaInvoice);
        var SelectedRowIndex=$('#tblProformaInvoice').datagrid('getRowIndex',oProformaInvoice);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/ProformaInvoice/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oProformaInvoice),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var oProformaInvoice= jQuery.parseJSON(data);
                if (oProformaInvoice.ErrorMessage=="" || oProformaInvoice.ErrorMessage == null)
                {

                    if(sParamIdentifier=="Undo Request")
                    {
                        alert("Successfully Undo the Request !");
                    }
                    else if(sParamIdentifier=="Request Revise")
                    {
                        alert("Successfully Request for Revise!");
                    }else  if(sParamIdentifier=="Approve")
                    {
                        alert("Approved Successfully!!");
                    }else  if(sParamIdentifier=="Undo Approve")
                    {
                        alert("Successfully Undo Approve !");

                    }
                    else if(sParamIdentifier=="Send To Buyer")
                    {
                        alert("PI Successfully Send To Buyer!");
                    }
                    else  if(sParamIdentifier=="Accept Revise")
                    {
                        alert("Successfully Accept Revise!");

                    }
                    else if(sParamIdentifier=="Cancel")
                    {
                        alert("Successfully Cancel Selected Item!");
                    }
                    $('#tblProformaInvoice').datagrid('updateRow',{index: SelectedRowIndex,	row: oProformaInvoice});
                }else
                {
                    alert(oProformaInvoice.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });


    }

    function RefreshList(oProformaInvoices)
    {
        data=oProformaInvoices;
        data={"total":""+data.length+"","rows":data};
        $('#tblProformaInvoice').datagrid('loadData',data);
        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
        $('#tblProformaInvoice').datagrid('selectRow',nIndex);
    }

    $('#btnAdd').click(function(){
        var oProformaInvoices= $('#tblProformaInvoice').datagrid('getRows');
        sessionStorage.setItem("ProformaInvoices", JSON.stringify(oProformaInvoices));
        sessionStorage.setItem("SelectedRowIndex", -1);
        sessionStorage.setItem("ProformaInvoiceHeader", "Add Proforma Invoice");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href =sessionStorage.getItem('BaseAddress')+ "/ProformaInvoice/ViewProformaInvoice?id=0&buid="+parseInt(sessionStorage.getItem('BUID'));
    });

    $('#btnEdit').click(function(){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || parseInt(oProformaInvoice.ProformaInvoiceID)<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(parseInt(oProformaInvoice.PIStatusInInt)!= 0)
        {
            alert("Without Initialized Item can't Update!");
            return;
        }
        
        var SelectedRowIndex=$('#tblProformaInvoice').datagrid('getRowIndex',oProformaInvoice);
        var oProformaInvoices= $('#tblProformaInvoice').datagrid('getRows');
        sessionStorage.setItem("ProformaInvoices", JSON.stringify(oProformaInvoices));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("ProformaInvoiceHeader", "Edit Proforma Invoice");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href =sessionStorage.getItem('BaseAddress')+  "/ProformaInvoice/ViewProformaInvoice?id="+ parseInt(oProformaInvoice.ProformaInvoiceID)+"&buid="+parseInt(oProformaInvoice.BUID);
    });

    $('#btnDetails').click(function(){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || oProformaInvoice.ProformaInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblProformaInvoice').datagrid('getRowIndex',oProformaInvoice);
        var oProformaInvoices= $('#tblProformaInvoice').datagrid('getRows');
        sessionStorage.setItem("ProformaInvoices", JSON.stringify(oProformaInvoices));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("ProformaInvoiceHeader", "View Proforma Invoice");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href =sessionStorage.getItem('BaseAddress')+  "/ProformaInvoice/ViewProformaInvoice?id="+ parseInt(oProformaInvoice.ProformaInvoiceID)+"&buid="+parseInt(oProformaInvoice.BUID);
    });

    $('#btnDelete').click(function(){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || oProformaInvoice.ProformaInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(oProformaInvoice.PIStatusInInt!=0)
        {
            alert("Please select Only Initialized Item from List!");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblProformaInvoice').datagrid('getRowIndex',oProformaInvoice);
        if (oProformaInvoice.ProformaInvoiceID> 0)
        {

            $.ajax
          ({
              type: "GET",
              dataType: "json",
              url : sessionStorage.getItem('BaseAddress')+  "/ProformaInvoice/Delete",
              data: { id:oProformaInvoice.ProformaInvoiceID},
              contentType: "application/json; charset=utf-8",
              success: function (data) {
                  //debugger;
                  feedbackmessage = jQuery.parseJSON(data);
                  if (feedbackmessage == "Delete sucessfully")
                  {
                      alert("Delete sucessfully");
                      $('#tblProformaInvoice').datagrid('deleteRow',SelectedRowIndex);

                  }
                  else
                  {
                      alert(feedbackmessage);
                  }
              },
              error: function (xhr, status, error)
              {
                  alert(error);
              }

          });
        }
    });

    $('#btnRequestforApproval').click(function(){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');

        if(oProformaInvoice==null || oProformaInvoice.ProformaInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        else if  (parseInt(oProformaInvoice.PIStatusInInt)==0)
        {
            
            var oEmployee = { DesignationName:'2'};
            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+"/User/GetsRequestedUsers",
                traditional: true,
                data:  JSON.stringify(oEmployee),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oUsers = jQuery.parseJSON(data);
                    if(oUsers===null){ oUsers=[]; }
                    $("#cboApprovalRequestTo").icsLoadCombo({ List: oUsers, OptionValue: "UserID", DisplayText: "UserName" });
                    $("#winApprovalRequest").icsWindow('open', "Approval Request");
                    $("#winApprovalRequest input").not("input[type='button']").val("");
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
        else
        {
            alert("Please select only Initialized item from list");
            return;
        }
    });

    $('#btnApprovalRequestClose').click(function(e){
        $("#winApprovalRequest").icsWindow('close');
    });

    $('#btnApprovalRequestConfirm').click(function(e){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || parseInt(oProformaInvoice.ProformaInvoiceID)<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(parseInt($('#cboApprovalRequestTo').val())==0)
        {
            alert('Please Select Approval User');
            $('#cboApprovalRequestTo').focus();
            return false;
        }
        var oApprovalRequest= {
            ApprovalRequestID :0,
            OperationObjectID : parseInt(oProformaInvoice.ProformaInvoiceID),
            RequestTo : parseInt($('#cboApprovalRequestTo').val()),
            Note :$.trim($("#txtApprovalRequestNote").val())

        };

        var oTempProformaInvoice = {
            ProformaInvoiceID : parseInt(oProformaInvoice.ProformaInvoiceID),
            ActionTypeExtra:"RequestForApproved",
            ApprovalRequest : oApprovalRequest
        }
        var SelectedRowIndex=$('#tblProformaInvoice').datagrid('getRowIndex', oProformaInvoice);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/ProformaInvoice/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oTempProformaInvoice),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oProformaInvoice = jQuery.parseJSON(data);
                if(oProformaInvoice!=null)
                {
                    if(oProformaInvoice.ErrorMessage=="" || oProformaInvoice.ErrorMessage == null)
                    {
                        alert("Proforma Invoice Approval Request  Successfully.");
                        $('#tblProformaInvoice').datagrid('updateRow',{index: SelectedRowIndex,	row: oProformaInvoice});
                        $("#winApprovalRequest").icsWindow('close');
                    }
                    else
                    {
                        alert(oProformaInvoice.ErrorMessage);
                    }
                }
                else
                {
                    alert("Invalid Operation!");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });

    $('#btnUndoRequest').click(function(){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || oProformaInvoice.ProformaInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }else if(oProformaInvoice.PIStatusInInt!=1)
        {
            alert("Please select only Requested  item from list");
            return;
        }
        if (!confirm("Confirm to Undo Request?")) return ;
        oProformaInvoice.ActionTypeExtra="UndoRequest";
        StatusChange(oProformaInvoice,"Undo Request");
    });

    $('#btnWaitforApproval').click(function(){
        $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+"/ProformaInvoice/WaitingSearch",
                data: {buid:sessionStorage.getItem("BUID")},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    var oProformaInvoices = jQuery.parseJSON(data);
                    if (oProformaInvoices.length>0)
                    {
                        var  data=oProformaInvoices;
                        data={"total":""+data.length+"","rows":data};
                        $('#tblProformaInvoice').datagrid('loadData',data);

                    }
                    else
                    {
                        alert("Data Not found");
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
    });

    $('#btnApproved').click(function(){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || oProformaInvoice.ProformaInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(oProformaInvoice.PIStatusInInt!=1)
        {
            alert("Please select only Requested  item from list");
            return;
        }
        if (!confirm("Confirm to Approve?")) return ;
        oProformaInvoice.ActionTypeExtra="Approve";
        StatusChange(oProformaInvoice,"Approve");
    });

    $('#btnUndoApproved').click(function(){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || oProformaInvoice.ProformaInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }else if(oProformaInvoice.PIStatusInInt!=2)
        {
            alert("Please select only Approved item from list");
            return;
        }
        if (!confirm("Confirm to Undo Approve?")) return ;
        oProformaInvoice.ActionTypeExtra="UndoApprove";
        StatusChange(oProformaInvoice,"Undo Approve");
    });

    $('#btnPIRevise').click(function(){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || oProformaInvoice.ProformaInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }else if(oProformaInvoice.PIStatusInInt<2 || oProformaInvoice.PIStatusInInt>4)
        {
            alert(oProformaInvoice.PIStatusInString+" Item Can't Request for Revise");
            return;
        }
        var oEmployee = { DesignationName : '2' };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/User/GetsRequestedUsers",
            traditional: true,
            data:  JSON.stringify(oEmployee),
            contentType: "application/json; charset=utf-8",
            success: function (data) {                    
                var oUsers = jQuery.parseJSON(data);          
                if(oUsers===null){ oUsers=[]; }                    
                $("#cboReviseRequestTo").icsLoadCombo({ List: oUsers, OptionValue: "UserID", DisplayText: "UserName" });
                $("#winReviseRequest").icsWindow('open', "Revise Request");
                $("#winReviseRequest input").not("input[type='button']").val("");
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $('#btnReviseRequestClose').click(function(e){
        $("#winReviseRequest").icsWindow('close');
    });

    $('#btnReviseRequestConfirm').click(function(e){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || parseInt(oProformaInvoice.ProformaInvoiceID)<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(parseInt($('#cboReviseRequestTo').val())==0)
        {
            alert('Please Select User');
            $('#cboReviseRequestTo').focus();
            return false;
        }
        var oReviseRequest= { 
            ReviseRequestID :0,
            OperationObjectID : parseInt(oProformaInvoice.ProformaInvoiceID),
            RequestTo : parseInt($('#cboReviseRequestTo').val()),
            Note :$.trim($("#txtReviseRequestNote").val())
          
        };

        var oTempProformaInvoice = {
            ProformaInvoiceID : parseInt(oProformaInvoice.ProformaInvoiceID),
            ActionTypeExtra:"RequestForRevise",
            ReviseRequest : oReviseRequest
        }
        var SelectedRowIndex=$('#tblProformaInvoice').datagrid('getRowIndex', oProformaInvoice);        
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/ProformaInvoice/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oTempProformaInvoice),
            contentType: "application/json; charset=utf-8",
            success: function (data) {                    
                var oProformaInvoice = jQuery.parseJSON(data);          
                if(oProformaInvoice!=null)
                {
                    if(oProformaInvoice.ErrorMessage=="" || oProformaInvoice.ErrorMessage == null)
                    {
                        alert("Proforma Invoice Revise Request  Successfully.");
                        $('#tblProformaInvoice').datagrid('updateRow',{index: SelectedRowIndex,	row: oProformaInvoice});
                        $("#winApprovalRequest").icsWindow('close');
                    }
                    else
                    {
                        alert(oProformaInvoice.ErrorMessage);
                    }
                }
                else
                {
                    alert("Invalid Operation!");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });

    $('#btnWaitforRevise').click(function(){
        var tsv=((new Date()).getTime())/1000;
        $.ajax({
            type: "GET",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/ProformaInvoice/WaitForRevise",
            data: {buid:sessionStorage.getItem("BUID"),ts:tsv},
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var oProformaInvoices = jQuery.parseJSON(data);
                if (oProformaInvoices[0].ErrorMessage =="" || oProformaInvoices[0].ErrorMessage == null)
                {
                    RefreshList(oProformaInvoices);
                }
                else
                {
                    RefreshList([]);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }

        });
    });

    $('#btnAcceptRevise').click(function(){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || oProformaInvoice.ProformaInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(oProformaInvoice.PIStatusInInt!=5 )
        {
            alert("Wothout Request for Revise Item can't Accept!");
            return;
        }
        var SelectedRowIndex=$('#tblProformaInvoice').datagrid('getRowIndex',oProformaInvoice);
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        var SelectedRowIndex=$('#tblProformaInvoice').datagrid('getRowIndex',oProformaInvoice);
        var oProformaInvoices= $('#tblProformaInvoice').datagrid('getRows');
        sessionStorage.setItem("ProformaInvoices", JSON.stringify(oProformaInvoices));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("ProformaInvoiceHeader", "Revise Proforma Invoice");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href =sessionStorage.getItem('BaseAddress')+  "/ProformaInvoice/ViewProformaInvoiceRevise?id="+oProformaInvoice.ProformaInvoiceID+"&buid="+parseInt(oProformaInvoice.BUID);
    });

    $('#btnSendToBuyer').click(function(){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || oProformaInvoice.ProformaInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }else if(oProformaInvoice.PIStatus!=3)
        {
            alert("Please select only Approve item from list");
            return;
        }
        if (!confirm("Confirm Send to Buyer?")) return ;
        oProformaInvoice.ActionTypeExtra="PI_In_Buyer_Hand";
        StatusChange(oProformaInvoice,"Send To Buyer");
    });

    $('#btnCancel').click(function(){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || oProformaInvoice.ProformaInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }else if(oProformaInvoice.PIStatus<2 || oProformaInvoice.PIStatus>0)
        {
            alert("In this stage you can't Close the Item");
            return;
        }
        if (!confirm("Confirm to Cancel?")) return ;
        oProformaInvoice.ActionTypeExtra="Cancel";
        StatusChange(oProformaInvoice,"Cancel");
    });

    $('#btnHistory').click(function(){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || oProformaInvoice.ProformaInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var tsv=((new Date()).getTime())/1000;
        var SelectedRowIndex=$('#tblProformaInvoice').datagrid('getRowIndex',oProformaInvoice);
        var oProformaInvoices= $('#tblProformaInvoice').datagrid('getRows');
        sessionStorage.setItem("ProformaInvoices", JSON.stringify(oProformaInvoices));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("ProformaInvoiceHeader", "Revise Proforma Invoice");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href =sessionStorage.getItem('BaseAddress')+  "/ProformaInvoice/ProformaInvoiceHistory?id="+oProformaInvoice.ProformaInvoiceID+"&ts="+tsv;

    });

    $('#btnReviseHistory').click(function(){
        var oProformaInvoice = $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || oProformaInvoice.ProformaInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(oProformaInvoice.PIStatusInInt<2 )
        {
            alert("In this can't see Revise History!");
            return;
        }
        var tsv=((new Date()).getTime())/1000;
        var SelectedRowIndex=$('#tblProformaInvoice').datagrid('getRowIndex',oProformaInvoice);
        var oProformaInvoices= $('#tblProformaInvoice').datagrid('getRows');
        sessionStorage.setItem("ProformaInvoices", JSON.stringify(oProformaInvoices));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("ProformaInvoiceHeader", "Revise Proforma Invoice");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href =sessionStorage.getItem('BaseAddress')+  "/ProformaInvoice/PIReviseHistory?id="+oProformaInvoice.ProformaInvoiceID+"&ts="+tsv;
    });

    $('#btnPreView').click(function(){
        var oProformaInvoice= $('#tblProformaInvoice').datagrid('getSelected');
        if(oProformaInvoice==null || oProformaInvoice.ProformaInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        window.open(sessionStorage.getItem('BaseAddress') + '/ProformaInvoice/PrintProformaInvoicePreview?id='+oProformaInvoice.ProformaInvoiceID);
    });

    $('#btnPrintList').click(function(){
        var oProformaInvoices= $('#tblProformaInvoice').datagrid('getRows');
        var ids ="";
        if(oProformaInvoices.length >0)
        {

            for(var i =0;i<oProformaInvoices.length;i++)
            {
                ids =ids+oProformaInvoices[i].ProformaInvoiceID+",";
            }
            ids= ids.substring(0, ids.length - 1);
        }
        else
        {
            alert("Data not found ");
            return;
        }
        window.open(sessionStorage.getItem('BaseAddress') + '/ProformaInvoice/PrintPIList?sIDs='+ids);
    });

    function RefreshControlLayout(oAURolesMapping)
    {
        $("#btnAdvanceSearch").hide();
        $("#btnAdd").hide();
        $("#btnEdit").hide();
        $("#btnDetails").hide();
        $("#btnDelete").hide();
        $("#btnRequestforApproval").hide();
        $("#btnUndoRequest").hide();
        $("#btnWaitforApproval").hide();
        $("#btnApproved").hide();
        $("#btnUndoApproved").hide();
        $("#btnPIRevise").hide();
        $("#btnWaitforRevise").hide();
        $("#btnAcceptRevise").hide();
        $("#btnSendToBuyer").hide();
        $("#btnCancel").hide();
        $("#btnHistory").hide();
        $("#btnReviseHistory").hide();
        $("#btnPreView").hide();
        $("#btnPrintList").hide();

        if(PermissionChecker('AdvSearch','ProformaInvoice',oAURolesMapping)){$("#btnAdvanceSearch").show();}
        if(PermissionChecker('Add','ProformaInvoice',oAURolesMapping)){$("#btnAdd").show();}
        if(PermissionChecker('Edit','ProformaInvoice',oAURolesMapping)){$("#btnEdit").show();}
        if(PermissionChecker('View','ProformaInvoice',oAURolesMapping)){$("#btnDetails").show();}
        if(PermissionChecker('Delete','ProformaInvoice', oAURolesMapping)){$("#btnDelete").show();}
        if(PermissionChecker('Add','ProformaInvoice',oAURolesMapping)){$("#btnRequestforApproval").show();}
        if(PermissionChecker('Add','ProformaInvoice',oAURolesMapping)){$("#btnUndoRequest").show();}
        if(PermissionChecker('Approved','ProformaInvoice',oAURolesMapping)){$("#btnWaitforApproval").show();}
        if(PermissionChecker('Approved','ProformaInvoice',oAURolesMapping)){$("#btnApproved").show();}
        if(PermissionChecker('Approved','ProformaInvoice',oAURolesMapping)){$("#btnUndoApproved").show();}
        if(PermissionChecker('Edit','ProformaInvoice',oAURolesMapping)){$("#btnPIRevise").show();}
        if(PermissionChecker('Revise','ProformaInvoice',oAURolesMapping)){$("#btnWaitforRevise").show();}
        if(PermissionChecker('Revise','ProformaInvoice',oAURolesMapping)){$("#btnAcceptRevise").show();}
        if(PermissionChecker('SentTobuyer','ProformaInvoice',oAURolesMapping)){$("#btnSendToBuyer").show();}
        if(PermissionChecker('Cancel','ProformaInvoice',oAURolesMapping)){$("#btnCancel").show();}
        if(PermissionChecker('View','ProformaInvoice',oAURolesMapping)){$("#btnHistory").show();}
        if(PermissionChecker('ReviseHistory','ProformaInvoice',oAURolesMapping)){$("#btnReviseHistory").show();}
        if(PermissionChecker('Preview','ProformaInvoice',oAURolesMapping)){$("#btnPreView").show();}
        if(PermissionChecker('PrintList','ProformaInvoice',oAURolesMapping)){$("#btnPrintList").show();}
    }
</script>
