@{
    ViewBag.Title = "Doc Print Engine";
}
@model ESimSol.BusinessObjects.DocPrintEngine
<div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
    <div class="panel-heading" style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
        <label style="font-size:18px;">Please wait</label>
        <div id="progressbar" style="width:100%;height:37px;"></div>
    </div>
</div>
<div style="padding-top:1px" ng-app="DocPrintEngineAPP" class="form-horizontal regionDocPrintEngine">
    <div ng-controller="DocPrintEngineCtrl">
        @*<div class="panel-header form-inline">
            <label style="padding-left:10px"> Unit: </label>
            <select style="width:30%; font-weight:bold;" class="form-control" ng-model="DocPrintEngine.BUID" ng-options="item.id as item.Value for item in BusinessUnits" ng-disabled="cboDisabled">
                <option value="">--Select Unit--</option>
            </select>
        </div>*@
        <fieldset>
            <legend>Doc Info</legend>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Letter Name:</label></div>
                <div class="col-md-4 text-left">
                    <input class="form-control" ng-model="DocPrintEngine.LetterName" placeholder="Type Letter Name ...." ng-disabled="disabled" />
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Module :</label></div>
                <div class="col-md-2 text-left">
                    <select style="width:115%; font-weight:bold;" class="form-control" ng-model="DocPrintEngine.ModuleID" ng-options="item.id as item.Value for item in Modules" ng-change="ChangeType()" ng-disabled="cboDisabled">
                        <option value="">-- Select Module Name--</option>
                    </select>
                </div>

                <div class="col-md-2 text-right"><label class="control-label">BU :</label></div>
                <div class="col-md-2 text-left">
                    <select style="width:119%; font-weight:bold;" class="form-control" ng-model="DocPrintEngine.BUID" ng-options="item.BusinessUnitID as item.BUTypeSt for item in BusinessUnits" ng-disabled="cboDisabled">
                        <option value="">--Select One--</option>
                    </select>
                </div>
            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Letter Type:</label></div>
                <div class="col-md-4 text-left">
                    <select style="width:100%; font-weight:bold;" class="form-control" ng-model="DocPrintEngine.LetterType" ng-options="item.id as item.Value for item in LetterTypes" ng-change="ChangeType()" ng-required="rqLetterType" ng-disabled="cboDisabled">
                        <option value="">-- Select Letter Type --</option>
                    </select>
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Page Size:</label></div>
                <div class="col-md-4 text-left">
                    <input class="form-control" ng-model="DocPrintEngine.PageSize" placeholder="Type Width, Height, Number of Sticker, Column, Row" ng-disabled="disabled" />
                </div>
            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Font:</label></div>
                <div class="col-md-4 text-left">
                    <select style="width:100%; font-weight:bold;" class="form-control" ng-model="DocPrintEngine.FontNameInt" ng-options="item.id as item.Value for item in Fonts" ng-disabled="cboDisabled">
                        <option value="">--Select Font--</option>
                    </select>
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Margin:</label></div>
                <div class="col-md-4 text-left">
                    <input class="form-control" ng-model="DocPrintEngine.Margin" placeholder="Type  Left, Right, Top, Bottom Margin ...." ng-disabled="disabled" />
                </div>
            </div>
        </fieldset>
        @*DETAILS TABLE*@
        <fieldset>
            <legend>Details : </legend>
            <div class="ui-grid-panel">
                <div class="container col-md-12">
                    <div class="form-inline">
                        <button type="button" class="btn btn-primary btn-sm" aria-label="Left Align" ng-click="AddRow()"> <span class="glyphicon glyphicon-plus" aria-hidden="true"> Add Row</span> </button>
                        <select style="width:30%; margin-left:5%; font-weight:bold;" class="form-control" ng-model="DocPrintEngine.Field" ng-options="item.value as item.DValue for item in LetterValues" ng-disabled="cboDisabled">
                            <option value="">--Select Field--</option>

                        </select>
                        <button type="button" class="btn btn-warning btn-sm" ng-click="AddField()"> <span class="glyphicon glyphicon-plus" aria-hidden="true"> Set Field</span> </button>

                        <button type="button" style="float:right; margin-right:40px" class="btn btn-danger btn-sm" aria-label="Left Align" ng-click="deleteDetail()" ng-hide="hide"> <span class="glyphicon glyphicon-trash" aria-hidden="true"> Remove</span> </button>
                    </div>
                </div>
            </div>
            <div class="row col-md-12">
                <div ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-edit ui-grid-pinning class="grid ui-grid-selectable"></div>
            </div>
        </fieldset>
        <fieldset>
            <legend>Action</legend>
            <div class="row col-md-12 text-right">
                @*<button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="save_Revise()" ng-hide="hide_Revise"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Save(Revise)</span> </button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Approve()" ng-hide="hide_Approve"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Approve</span> </button>*@
                <button type="button" class="btn btn-success btn-sm" aria-label="Left Align" ng-click="copy()" ng-hide="hide_Copy"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true">Copy</span> </button>
                <button type="button" class="btn btn-success btn-sm" aria-label="Left Align" ng-click="save()" ng-hide="hide_Save"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true">Save</span> </button>
                <button type="button" class="btn btn-danger btn-sm" aria-label="Left Align" ng-click="close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
            </div>
        </fieldset>
    </div>

    @*<script type="text/ng-template" id="SetFields.html">
        <div class="CellStyle">
            <div class="row">
                <input type="text" list="pets" >
                <datalist id="pets">
                        <option>Cat</option>
                        <option>Dog</option>
                        <option>Door</option>
                        <option>Dist</option>
                        <option>Dig</option>
                </datalist>
            </div>
        </div>
    </script>*@
</div>


<style type="text/css">
    .grid {
        width: 100%;
        height: 300px;
    }

    .regionDocPrintEngine .form-horizontal .control-label {
        padding-top: 3px;
    }

    .regionDocPrintEngine .form-control {
        height: 26px;
        padding: 0px 6px;
        font-size: 12px;
    }

    .regionDocPrintEngine .col-md-12 {
        width: 100%;
        padding-right: 5px;
        padding-left: 5px;
        margin-bottom: 5px;
    }

    .regionDocPrintEngine .col-md-2 {
        width: 11%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionDocPrintEngine .col-md-3 {
        width: 22%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionDocPrintEngine .col-md-4 {
        width: 35%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionDocPrintEngine .col-md-5 {
        width: 40%;
        padding-right: 5px;
        padding-left: 0px;
    }

    .regionDocPrintEngine .col-md-10 {
        width: 86%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionDocPrintEngine .btn-sm {
        padding: 3px 10px;
    }

    .regionDocPrintEngine .input-group-addon {
        padding: 4px 8px;
    }

     #progressbarParent {
        opacity: 0.8;
        background-color: #ffffff  /*#DCD9D4*/;
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0px;
        left: 0px;
        z-index: 1000;
    }
        .ui-grid-row, .ui-grid-cell {
          height: auto!important;
        }

        .ui-grid-row div[role=row] {
          display: flex;
          align-content: stretch;
        }

    /*.regionDocPrintEngine .ui-grid-header-cell
    {
        height:40px;
    }
    .regionDocPrintEngine .ui-grid-cell
    {
        overflow: visible;
        text-overflow:clip;
        height:100px;
    }*/
</style>

<script type="text/javascript">
    $("#progressbar").progressbar({ value: 0 });
    $("#progressbarParent").hide();

    var _nBUID=0;
    var oDocPrintEngineDetails=[];
    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oDocPrintEngine =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));

    _nBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oBusinessUnits =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
    var oLetterTypes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LetterTypes));
    var DocPrintEngineModule = angular.module('DocPrintEngineAPP', ['ngAnimate', 'ui.bootstrap', 'ui.bootstrap.datetimepicker','ui.grid', 'ui.grid.selection','ui.grid.resizeColumns', 'ui.grid.edit','ui.grid.pinning','ms.service']);
    DocPrintEngineModule.controller('DocPrintEngineCtrl', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession) {

        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });

        $scope.LetterValues=[];
        $scope.LetterTypes=oLetterTypes;
        $scope.BusinessUnits=oBusinessUnits;
        
        $scope.Modules = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Modules));
        $scope.SizingFields = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.SizingFields));

        $scope.Fonts=[{id:1, Value:"Times-Roman"},
                      {id:2, Value:"Times-Roman Bold"},
                      {id:3, Value:"Tahoma"},
                      {id:4, Value:"Tahoma Bold"}];

        $scope.hide_Copy=true;
        var viewType = sessionStorage.getItem("Operation");
        if (viewType == 'View')
        {
            $scope.disabledType=true;
            $scope.disabled= true;
            $scope.hide=true;

            $scope.hide_Revise=true;
            $scope.hide_Approve=true;
            $scope.hide_Copy=true;
            $scope.hide_Save=true;
        }
        else if(viewType == 'Copy'){
            $scope.hide_Save=true;
            $scope.hide_Copy=false;
        }
        
        $scope.DocPrintEngine=oDocPrintEngine;
        oDocPrintEngineDetails=oDocPrintEngine.DocPrintEngineDetails;
        //$("#ChallanDateInStr").val($scope.DocPrintEngine.ChallanDateInStr);
        //$("#DisburseDateInStr").val($scope.DocPrintEngine.DisburseDateInStr);
        if(viewType == 'New'){
            if(_nBUID > 0){
                $scope.DocPrintEngine.BUID = _nBUID;
            }
        }

        $scope.GetPropertiesOfClass= function()
        {
            //$scope.DocPrintEngine.ModuleID = 203;
            if($scope.DocPrintEngine.ModuleID==0 || $scope.DocPrintEngine.ModuleID==undefined)
            {
                alert("Please Select Module And Try Again!");return false;
            }

            $http.post(_sBaseAddress+'/DocPrintEngine/GetProperties',JSON.stringify($scope.DocPrintEngine)).then(
                             function (response)
                             {
                                 var result=jQuery.parseJSON(response.data);
                                 console.log(result);

                                 if(result.length <=0)
                                 {
                                     alert("No Properties Found !!"); return;
                                 }

                                 if(result[0]=="Error")
                                 {
                                     debugger;
                                     alert("Failed To Get Properties Name !!"); return;

                                 }
                                 else
                                 {
                                     var oList = [];
                                     for(var i=0; i< result.length; i++)
                                         oList.push( { value: result[i], DValue: result[i] } );

                                     $scope.LetterValues=oList;
                                 }
                             },
                             function (response) { alert(response.statusText); }
                     );
        }

        $scope.ChangeType=function()
        {
            var oList=[]; debugger;
            if($scope.DocPrintEngine.LetterType<=2)
            {
                oList= [
                               { value:"CURRENTDATE",DValue:"Current Date"},
                               { value:"SendToPartyDate",DValue:"Send To Party Date"},
                               { value:"BillDate",DValue:"Bill Date"},
                               { value:"ExportBillNo",DValue:"Bill No"},
                               { value:"BILLAMOUNT",DValue:"Bill Amount"},
                               { value:"BillQty",DValue:"Bill Qty"},

                               { value:"ExportLCNo",DValue:"LC No"},
                               { value:"PINo",DValue:"PI No"},
                               { value:"LCTerms",DValue:"LC Terms"},
                               { value:"LCDate",DValue:"LC Date"},
                               { value:"PartyName",DValue:"Party Name"},
                               { value:"PartyAddress",DValue:"Party Address"},
                ];

                $scope.LetterValues=oList;
            }
                //else if($scope.DocPrintEngine.LetterType==4 || $scope.DocPrintEngine.LetterType==5)
                //{
                //    oList = []; /// $scope.SizingFields;
                //    for(var i=0; i< $scope.SizingFields.length; i++)
                //        oList.push({ value: $scope.SizingFields[i].Value, DValue: $scope.SizingFields[i].Value});
                //}
            else if($scope.DocPrintEngine.LetterType > 3)
            {
                $scope.GetPropertiesOfClass();
            }
        }
        $scope.ChangeType();

        $scope.MakeDetailsTable= function(){

            /*
            DocPrintEngineDetailID
            DocPrintEngineID
            SLNo
            SetWidths
            SetAligns
            SetFields
            FontSize
            RowHeight
            TableName
            LastUpdateBy
            LastUpdateDateTime
            DBUserID
            DBServerDateTime
            */

            var oDetailColumns = [];
            var oColumn = null;
            oColumn = {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false};oDetailColumns.push(oColumn);
            oColumn ={ field: 'SLNo', name:'SLNo', width:'5%',enableCellEdit:true };oDetailColumns.push(oColumn);
            oColumn ={ field: 'SetWidths', name:'SetWidths', width:'8%',enableCellEdit:true };oDetailColumns.push(oColumn);
            oColumn ={ field: 'SetAligns', name: 'SetAligns', cellClass: 'text-left',width: '12%' , enableCellEdit:true};oDetailColumns.push(oColumn);
            oColumn ={ field: 'SetFields', width: '25%' , enableCellEdit:true};oDetailColumns.push(oColumn);//cellTemplate:'SetFields.html'
            oColumn ={ field: 'FontSize', name:'FontSize', width:'7%',enableCellEdit:true };oDetailColumns.push(oColumn);
            oColumn ={ field: 'RowHeight', name: 'RowHeight', cellClass: 'text-right',width: '8%' , enableCellEdit:true };oDetailColumns.push(oColumn);
            oColumn ={ field: 'TableName', name:'TableName', width:'27%',enableCellEdit:true };oDetailColumns.push(oColumn);
            oColumn ={ field: 'OPT', name:'Operation', width:'5%',enableCellEdit:false, cellClass:"text-center", pinnedRight:false, //ng-show="row.entity.OPTShow"
                cellTemplate:'<div>'+'<button style="align:left" class="btn btn-success btn-sm" ng-show="row.entity.OPTShow"  ng-click="grid.appScope.SaveDetail(row.entity)">{{row.entity.OPT}} </button>' +'</div>'};oDetailColumns.push(oColumn);
            $scope.gridOptions = {
                enableRowHeaderSelection: false,
                enableRowSelection: true,
                showColumnFooter: true,
                enableFullRowSelection: true,
                enableColumnResizing: true,
                enableSelectAll: false,
                multiSelect:false,
                enablePinning: true,
                //rowHeight:80,
                //enableHorizontalScrollbar: uiGridConstants.scrollbars.,
                columnDefs:oDetailColumns,
                data:oDocPrintEngineDetails,
                onRegisterApi: function (gridApi) {
                    $scope.gridDetailApi = gridApi;
                    gridApi.edit.on.afterCellEdit($scope,
                        function (rowEntity, colDef, newValue, old)
                        {
                            if($scope.DocPrintEngine.DocPrintEngineID>0)
                            {
                                if($scope.DocPrintEngine.DocPrintEngineDetailID>0)
                                    rowEntity.OPT="Save";
                                else
                                    rowEntity.OPT="Update";
                                rowEntity.OPTShow=true;
                            }
                            return rowEntity;
                        });
                }
            };
        }
        $scope.MakeDetailsTable();

        $scope.AddField=function()
        {
            if($scope.DocPrintEngine.Field==undefined || $scope.DocPrintEngine.Field=="")
            {
                alert("Please Select A Field !!"); return;
            }
            var data=$scope.gridDetailApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Please Select A Row To Add Field !!', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            var SelectedIndex=$scope.gridOptions.data.indexOf(data[0]);
            data[0].SetFields+="@@"+$scope.DocPrintEngine.Field;
            if(data[0].DocPrintEngineDetailID>0)
                data[0].OPT="Save";
            else
                data[0].OPT="Update";
            data[0].OPTShow=true;
            $scope.gridOptions.data[SelectedIndex]=data[0];
        }
        $scope.AddRow=function()
        {
            var oDefault =$scope.gridOptions.data[$scope.gridOptions.data.length-1];
            var oRow=
                {
                    DocPrintEngineDetailID:0,
                    DocPrintEngineID:$scope.DocPrintEngine.DocPrintEngineID,
                    SLNo:parseInt($scope.GetMaxNo())+parseInt(1),
                    SetWidths: (oDefault==undefined? "": oDefault.SetWidths),
                    SetAligns: (oDefault==undefined? "": oDefault.SetAligns),
                    SetFields:"",
                    FontSize:($scope.gridOptions.data.length>0?$scope.gridOptions.data[0].FontSize:""),
                    RowHeight:"",
                    TableName:"",
                    OPT:"ADD",
                    OPTShow:true
                }

            $scope.gridOptions.data.push(oRow);
        }
        $scope.Validation=function()
        {
            if($scope.DocPrintEngine.LetterType==0 || $scope.DocPrintEngine.LetterType==undefined)
            {
                alert("Please Select Letter Type And Try Again!");return false;
            }
            if($scope.DocPrintEngine.PageSize=="" || $scope.DocPrintEngine.PageSize==undefined)
            {
                alert("Please Select Type Page Size And Try Again!");return false;
            }
            if($scope.DocPrintEngine.FontNameInt==0 || $scope.DocPrintEngine.FontNameInt==undefined)
            {
                alert("Please Select Font Name And Try Again!");return false;
            }
            if($scope.DocPrintEngine.Margin=="" || $scope.DocPrintEngine.Margin==undefined)
            {
                alert("Please Select Margin And Try Again!");return false;
            }
            if($scope.DocPrintEngine.ModuleID == 0 || $scope.DocPrintEngine.ModuleID==undefined)
            {
                alert("Please Select Module And Try Again!");return false;
            }
            return true;
        }
        $scope.GetFont=function()
        {
            for(var i=0;i<$scope.Fonts.length;i++)
                if($scope.Fonts[i].id==$scope.DocPrintEngine.FontNameInt)
                    return $scope.Fonts[i];
        }
        $scope.SetFont=function ()
        {
            for(var i=0;i<$scope.Fonts.length;i++)
                if($scope.Fonts[i].Value==$scope.DocPrintEngine.FontName)
                    $scope.DocPrintEngine.FontNameInt=$scope.Fonts[i].id;
        }
        $scope.save = function ()
        {
            if(!$scope.Validation())return;
            if($scope.CheckUpdateable("Save"))return;

            var Font=$scope.GetFont();
            $scope.DocPrintEngine.FontName=Font.Value;

            $scope.DocPrintEngine.DocPrintEngineDetails = $scope.gridOptions.data;
            console.log($scope.DocPrintEngine); debugger;
            $http.post(_sBaseAddress+'/DocPrintEngine/Save',JSON.stringify($scope.DocPrintEngine)).then(
                                function (response) {
                                    var result=jQuery.parseJSON(response.data);
                                    console.log(result);
                                    if(result.DocPrintEngineID>0  && result.ErrorMessage=="")
                                    {
                                        debugger;
                                        $scope.DocPrintEngine=result;$scope.SetFont();
                                        userSession.setData('DocPrintEngines',$scope.DocPrintEngine);
                                        //userSession.previousPage();
                                        msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                    }
                                    else
                                    {
                                        alert(result.ErrorMessage);
                                        return;
                                    }

                                },
                                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                        );
        };

        $scope.SaveDetail = function (rowEntity) {
            debugger;
            rowEntity.DocPrintEngineID=$scope.DocPrintEngine.DocPrintEngineID;
            if(rowEntity.DocPrintEngineID<=0)
            {
                alert("Sorry, First Try To Save DocPrintEngine !!");return;
            }
            if(rowEntity.ProductID<=0)
            {
                alert("Invalid Product ID.");return;
            }
            if(rowEntity.Qty<=0)
            {
                alert("Qty Should Be Greater Than Zero, For "+rowEntity.ProductName+" !!");return;
            }

            console.log(rowEntity); debugger;
            $http.post(_sBaseAddress+'/DocPrintEngine/SaveDetail',JSON.stringify(rowEntity)).then(
                                function (response) {
                                    var result=jQuery.parseJSON(response.data);
                                    console.log(result);
                                    if(result.DocPrintEngineDetailID>0  && result.ErrorMessage=="")
                                    {
                                        debugger;
                                        msModal.Message({headerTitle : '', bodyText:'Save Successfully. (SLNo: '+rowEntity.SLNo+')', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                        var Index=$scope.gridOptions.data.indexOf(rowEntity);
                                        result.OPTShow=false;
                                        $scope.gridOptions.data[Index]=result;
                                        $scope.gridDetailApi.core.notifyDataChange(uiGridConstants.dataChange.COLUMN);
                                    }
                                    else
                                    {
                                        alert(result.ErrorMessage);
                                        return;
                                    }

                                },
                                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                        );
        };
        $scope.deleteDetail = function () {
            debugger;
            var data=$scope.gridDetailApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }


            if (!confirm("Confirm to Delete?")) return ;
            if(data[0].DocPrintEngineDetailID<=0)
            {
                angular.forEach($scope.gridOptions.data,function(value,index){
                    if(value.DocPrintEngineDetailID==data[0].DocPrintEngineDetailID){
                        $scope.gridOptions.data.splice(index,1);
                    }
                },$scope.gridOptions.data);
                alert("Delete Successfully."); return;
            }

            $http.post(_sBaseAddress+'/DocPrintEngine/DeleteDetail',JSON.stringify(data[0])).then(
                            function (response) {     debugger;
                                if(jQuery.parseJSON(response.data)=='Data delete successfully'){
                                    angular.forEach($scope.gridOptions.data,function(value,index){
                                        if(value.DocPrintEngineDetailID==data[0].DocPrintEngineDetailID){
                                            $scope.gridOptions.data.splice(index,1);
                                        }
                                    },$scope.gridOptions.data);
                                    alert("Delete Successfully.");
                                }
                                else{
                                    alert(jQuery.parseJSON(response.data));
                                }
                            },
                            function (response) {alert(jQuery.parseJSON(response.data));}
                        );

        };

        $scope.copy = function ()
        {
            if(!$scope.Validation())return;
            //if($scope.CheckUpdateable("Save"))return;

            var Font=$scope.GetFont();
            $scope.DocPrintEngine.FontName=Font.Value;
            $scope.DocPrintEngine.DocPrintEngineID = 0;
            $scope.DocPrintEngine.DocPrintEngineDetails = $scope.gridOptions.data;
            if($scope.DocPrintEngine.DocPrintEngineDetails.length > 0){
                for(var i=0;i<$scope.DocPrintEngine.DocPrintEngineDetails.length;i++){
                    $scope.DocPrintEngine.DocPrintEngineDetails[i].DocPrintEngineDetailID=0;
                }
            }
            console.log($scope.DocPrintEngine); debugger;
            $http.post(_sBaseAddress+'/DocPrintEngine/Copy',JSON.stringify($scope.DocPrintEngine)).then(
                                function (response) {
                                    var result=jQuery.parseJSON(response.data);
                                    console.log(result);
                                    if(result.DocPrintEngineID>0  && result.ErrorMessage=="")
                                    {
                                        debugger;
                                        $scope.DocPrintEngine=result;$scope.SetFont();
                                        $scope.DocPrintEngine.DocPrintEngineDetails = result.DocPrintEngineDetails;
                                        for(var i=0;i<$scope.DocPrintEngine.DocPrintEngineDetails.length;i++){
                                            $scope.DocPrintEngine.DocPrintEngineDetails[i].OPTShow = false;
                                        }
                                        $scope.gridOptions.data=$scope.DocPrintEngine.DocPrintEngineDetails;
                                        userSession.setData('DocPrintEngines',$scope.DocPrintEngine);
                                        //userSession.previousPage();
                                        msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                    }
                                    else
                                    {
                                        alert(result.ErrorMessage);
                                        return;
                                    }

                                },
                                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                        );
        };

        $scope.SetFont();
        $scope.GetMaxNo=function ()
        {
            var nMax=0;debugger;
            for(var i=0;i<$scope.gridOptions.data.length;i++)
                if(nMax< parseInt($scope.gridOptions.data[i].SLNo))
                    nMax=parseInt($scope.gridOptions.data[i].SLNo)
            return nMax;
        }

        $scope.CheckUpdateable=function(sMsg)
        {
            debugger;
            for(var i=0;i<$scope.gridOptions.data.length;i++)
            {
                if($scope.gridOptions.data[i].DocPrintEngineDetailID<=0 || $scope.gridOptions.data[i].OPTShow)
                {
                    if(
                        !confirm("Row: '"+$scope.gridOptions.data[i].SLNo+"' Is Not "+($scope.gridOptions.data[i].OPT=="Update"?"Updated":"Added")+" !! Confirm To "+sMsg+"?")
                       )return true;
                }
            }
            return false;
        }
        $scope.close = function ()
        {
            if($scope.CheckUpdateable("Back"))return;
            userSession.previousPage();
        };
        function updateProgress() {
            var value =$('#progressbar').progressbar('getValue');
            if (value < 90){
                value += Math.floor(Math.random() * 10);
                $('#progressbar').progressbar('setValue', value);
            }
        }
        function hideShow(miliseconds) {
            $("#progressbarParent").hide();
        }
    });
</script>


