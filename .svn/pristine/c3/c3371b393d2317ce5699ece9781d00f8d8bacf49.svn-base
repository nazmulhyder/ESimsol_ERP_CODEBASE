@model ESimSol.BusinessObjects.CostCenterBreakdown
    @{
        ViewBag.Title = "Sub Ledger";
    }
    
   
    <div id="winReport" class="easyui-panel menuMainCollectionTable" title="Trial Balance" style="margin-left: 0px; height: 100%; width:100%;" fit="true">
      
        <div id="divCostCenterBreakdown" style="height:100%;width:100%;">
            <table id="tblCostCenterBreakdowns" class="easyui-datagrid" style="width:100%; height:100%;" fit="false" fitcolumns="true" rownumbers="true" showfooter="true", pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar"
                   data-options="onDblClickRow:function (index,row){return DetermineNextLevel(row);}">
                <thead>
                    <tr>
                        <th field="ParentHeadCode" width="6%" align="left">Code</th>
                        <th field="ParentHeadName" width="18%" align="left">Account</th>
                        <th field="CCName" width="21%" align="left" formatter="FormatStyle">Sub Ledger</th>
                        <th field="OpeningValueInString" width="13%" align="right">Opening Value</th>
                        <th field="DebitAmountInString" width="13%" align="right">Debit Amount</th>
                        <th field="CreditAmountInString" width="13%" align="right">Credit Amount</th>
                        <th field="ClosingValueST" width="13%" align="right">Closing Value</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbar">
                From <input id="txtSettingFromDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100px" />
                To <input id="txtSettingToDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100px" />
                Account Head :<input type="text" id="txtAccountHeadName" placeholder="Type Account Head Name" style="width:219px;margin-left: 5px;" />
                Sub Ledger :<input type="text" style=" width:284px;" id="txtCostCneterName" placeholder="Type Sub Ledger Name" />
                <select id="cboCurrency" style="width:90px;"></select>
                <input type="checkbox" id="chkboxApproved" style="width:20px;" /><label for="chkboxApproved">Approved</label> 
                <input type="text" id="txtBUName" style="width:200px;" disabled /> <input type="button" onclick="BUClean()" value="C" />  <input type="button" value="Pick" onclick="PickBusinessUnit()" style="width:50px;" />
                <select id="cboBalanceStatus" style="width:120px"></select>
                <a id="btnRefreshCCB" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" >Refresh</a>
                <a id="btnSLLedger" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">SubLedger Ledger</a>
                <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="PrintPDF()">Print</a>
                <a id="btnPrintXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="PrintXL()">Export To Excel</a>
            </div>            
        </div>
    </div>
    <script type="text/javascript">
    $(document).ready(function () {        
        var oCompany= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));
        var oCostCenterBreakdown =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        $('#divCostCenterBreakdown').data('obj',oCostCenterBreakdown);
        $('#divCostCenterBreakdown').data('objs',oCostCenterBreakdown.CostCenterBreakdowns);

        var oCurrencies =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencies));
        $("#cboCurrency").data('objs',oCurrencies);
        $("#cboCurrency").icsLoadCombo({List: oCurrencies,OptionValue: "CurrencyID",DisplayText: "CurrencyName", InitialValue : "--Currency--"});

        var oCOA= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.COA));
        $("#txtAccountHeadName").data('obj',oCOA);

        var oCC= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CC));
        $("#txtCostCneterName").data('obj',oCC);

        var oBusinessUnits= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        $("#txtBUName").data('BusinessUnits',oBusinessUnits);
        $('#txtBUName').val(oCostCenterBreakdown.BUName);
        $('#txtBUName').addClass('fontColorOfPickItem');

        var oBalanceStatus= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BalanceStatus));
        $("#cboBalanceStatus").data('objs',oBalanceStatus);
        $("#cboBalanceStatus").icsLoadCombo({List: oBalanceStatus, OptionValue: "id", DisplayText: "Value", InitialValue : "--Balance Ststus--" });

        sessionStorage.setItem("Company", JSON.stringify(oCompany));
        sessionStorage.setItem("VoucherWindow", 'Close');

        $('#txtSettingFromDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtSettingToDate').datebox('setValue', icsdateformat(new Date()));

                   ////refresh control
            $('#txtSettingFromDate').datebox('setValue', oCostCenterBreakdown.StartDateSt);
            $('#txtSettingToDate').datebox('setValue', oCostCenterBreakdown.EndDateSt);
            $("#txtAccountHeadName").val(oCOA.AccountHeadName);
            $("#txtCostCneterName").val(oCC.Name);
            $('#cboCurrency').val(oCostCenterBreakdown.CurrencyID);
            
            $('#cboBalanceStatus').val(oCostCenterBreakdown.BalanceStatusInt);
            document.getElementById('chkboxApproved').checked =  oCostCenterBreakdown.IsApproved;

            /////end refresh control
            var sHeaderText=RefreshHeader();
            sessionStorage.setItem('HeaderText',sHeaderText);
            $('#winReport').panel({ title:sHeaderText});
            $('#Mainlayout').layout('collapse', 'west');

            DynamicRefreshList(oCostCenterBreakdown.CostCenterBreakdowns,'tblCostCenterBreakdowns');
            RefreshTotalSummary(oCostCenterBreakdown.CostCenterBreakdowns);
            //debugger;
            $('#txtAccountHeadName').icsAutoComplete({
                BaseAddress : sessionStorage.getItem('BaseAddress'),
                ControllerName: "ChartsOfAccount",
                ActionName: "GetsAccountsHead",
                Object: {AccountHeadName:''},
                PropertyName: "AccountHeadName",
                ParamName: "AccountHeadName",
                Columns:[{field:'AccountHeadName',width:'70%'},{field:'ParentHeadName',width:'40%'}]
            });
            $('#txtCostCneterName').icsAutoComplete({
                BaseAddress : sessionStorage.getItem('BaseAddress'),
                ControllerName: "ACCostCenter",
                ActionName: "GetsByCodeOrName",
                Object: {NameCode:''},
                PropertyName: "Name",
                ParamName: "NameCode",
                Columns:[{field:'Name',width:'70%'},{field:'CategoryName',width:'30%'}]});

        });
        function RefreshHeader(){
            var sHeaderText='';
            if($('#txtAccountHeadName').data('obj') && $('#txtAccountHeadName').data('obj').AccountHeadID>0){
                sHeaderText='Subledger Transactions || '+$('#txtAccountHeadName').data('obj').AccountHeadName;
            }else if ($('#txtCostCneterName').data('obj') && $('#txtCostCneterName').data('obj').ACCostCenterID>0) {
                sHeaderText='Subledger Transactions || '+$('#txtCostCneterName').data('obj').Name;
            }else{
                sHeaderText='Subledger Transactions ';
            }
            var oCostCenterBreakdown = $('#divCostCenterBreakdown').data('obj');
            var sBUName = $('#txtBUName').val();
            if(oCostCenterBreakdown.BusinessUnitIDs!="0")//( parseInt($('#txtBUName').val()) &&  parseInt($('#txtBUName').val())>0)
            {
                sHeaderText=sHeaderText+' || '+sBUName+' || "'+$('#txtSettingFromDate').datebox('getValue')+'" to "'+$('#txtSettingToDate').datebox('getValue')+'"';

            }else{
                sHeaderText=sHeaderText+' || '+jQuery.parseJSON(sessionStorage.getItem("Company")).Name+' || "'+$('#txtSettingFromDate').datebox('getValue')+'" to "'+$('#txtSettingToDate').datebox('getValue')+'"';
            }


            if( parseInt($('#cboBalanceStatus').val()) &&  parseInt($('#cboBalanceStatus').val())>0){
                sHeaderText=sHeaderText+' || '+ $("#cboBalanceStatus option:selected").text();
            }
            return sHeaderText;
        }


        function FormatStyle(value,row,index){
            //debugger;
            var s='';
            var param=row.ParentHeadID+","+row.CCID;
            if(value!='Opening Balance'){
                s = '<label id="lblOpening'+index+'" style="color:blue;text-decoration:underline;cursor:pointer" onclick="SLLedger('+param+')">'+value+'</label>';
            }
            else{
                s=value;
            }
            return s;
        }


        function SLLedger(nParentHeadID, nCCID)
        {
            var oCostCenterBreakdown = $('#divCostCenterBreakdown').data('obj');
            //debugger;
            var oVoucherRefReport = {
                BusinessUnitIDs:oCostCenterBreakdown.BusinessUnitIDs, //parseInt($('#cboBusinessUnit').val())?parseInt($('#cboBusinessUnit').val()):0,
                BUName:oCostCenterBreakdown.BUName,
                AccountHeadID : nParentHeadID,
                CCID:nCCID,
                StartDate : $('#txtSettingFromDate').datebox('getValue'),
                EndDate : $('#txtSettingToDate').datebox('getValue'),
                CurrencyID : parseInt($('#cboCurrency').val()),                
                IsApproved:$('#chkboxApproved').is(':checked')
            };
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/FinancialStatement/SetCCBSessionData",
                traditional: true,
                data:  JSON.stringify(oVoucherRefReport),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var sFeedBackMessage = jQuery.parseJSON(data);
                    if (sFeedBackMessage==="Successful") {
                        window.location.href = _sBaseAddress+ "/FinancialStatement/ViewSubLedgerLedger?menuid="+parseInt(sessionStorage.getItem('MenuID'));
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });


        }


    $('#btnRefreshCCB').click(function(){
        if(!ValidateInput()){return false;}
        RefreshData();
    });
    $('#btnSLLedger').click(function(){
        if ((!$('#txtCostCneterName').data('obj') || $('#txtCostCneterName').data('obj') == null)) {
            alert("Please select Sub Ledger!");
            $('#txtCostCneterName').focus();
            return false;
        }
        else if ((!parseInt($('#txtCostCneterName').data('obj').ACCostCenterID) || parseInt($('#txtCostCneterName').data('obj').ACCostCenterID)<=0)) {
            alert("Please select Sub Ledger !");
            $('#txtCostCneterName').focus();
            return false;
        }
        var oCostCenterBreakdown = $('#divCostCenterBreakdown').data('obj');
        var oVoucherRefReport = {
            BusinessUnitIDs: oCostCenterBreakdown.BusinessUnitIDs,//  parseInt($('#cboBusinessUnit').val())?parseInt($('#cboBusinessUnit').val()):0,
            BUName:oCostCenterBreakdown.BUName,
            AccountHeadID : 0,
            CCID:parseInt($('#txtCostCneterName').data('obj').ACCostCenterID)?parseInt($('#txtCostCneterName').data('obj').ACCostCenterID):0,
            StartDate : $('#txtSettingFromDate').datebox('getValue'),
            EndDate : $('#txtSettingToDate').datebox('getValue'),
            CurrencyID : parseInt($('#cboCurrency').val()),
            BalanceStatusInt : parseInt($('#cboBalanceStatus').val()),
            IsApproved:$('#chkboxApproved').is(':checked')
        };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/FinancialStatement/SetCCBSessionData",
            traditional: true,
            data:  JSON.stringify(oVoucherRefReport),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var sFeedBackMessage = jQuery.parseJSON(data);
                if (sFeedBackMessage==="Successful") {
                    window.location.href = _sBaseAddress+ "/FinancialStatement/ViewSubLedgerLedger?menuid="+parseInt(sessionStorage.getItem('MenuID'));
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    function RefreshTotalSummary(objs)
    {
        var sParamDebit='',sParamCredit='',sLabelDebit='',sLabelCredit='',sLabelOpening='',sLabelClosing='',sParamOpening='',sParamClosing='',nDebit=0,nCredit=0,nOpenig=0,nClosing=0;
        sParamDebit='DebitAmount';
        sParamCredit='CreditAmount';
        sParamOpening='OpeiningValue';
        sParamClosing='ClosingValue';
       
        var nOpeningTotalDebitAmount = 0;
        var nOpeningTotalCreditAmount = 0;
        var nClosingTotalDebitAmount = 0;
        var nClosingTotalCreditAmount = 0;
        var sOpeningBalance = "";
        var sClosingBalance = "";

        for(var i=0;i<objs.length;i++){

            nOpenig = nOpenig + parseFloat((objs[i][sParamOpening]).toFixed(2));            
            nDebit = nDebit + parseFloat((objs[i][sParamDebit]).toFixed(2));
            nCredit = nCredit + parseFloat((objs[i][sParamCredit]).toFixed(2));
            nClosing = nClosing + parseFloat((objs[i][sParamClosing]).toFixed(2));

            if(objs[i]["IsDebit"] == true)
            {
                nOpeningTotalDebitAmount = nOpeningTotalDebitAmount + parseFloat((objs[i][sParamOpening]));
            }
            else
            {
                nOpeningTotalCreditAmount = nOpeningTotalCreditAmount + parseFloat((objs[i][sParamOpening])); 
            }

            if(objs[i]["IsDrClosing"] == true)
            {
                nClosingTotalDebitAmount = nClosingTotalDebitAmount + parseFloat((objs[i][sParamClosing]));
            }
            else
            {
                nClosingTotalCreditAmount = nClosingTotalCreditAmount + parseFloat((objs[i][sParamClosing])); 
            }

        }
        nOpenig = nOpenig < 0 ? '('+ formatPrice((nOpenig*(-1)).toFixed(2))+')' : nOpenig===0.00 ? '-' : formatPrice(nOpenig.toFixed(2));
        nDebit = nDebit < 0 ? '('+ formatPrice((nDebit*(-1)).toFixed(2))+')' : nDebit===0.00 ?'-':formatPrice(nDebit.toFixed(2));
        nCredit = nCredit < 0 ? '('+ formatPrice((nCredit*(-1)).toFixed(2))+')' : nCredit===0.00 ? '-' : formatPrice(nCredit.toFixed(2));
        nClosing = nClosing < 0 ? '(' + formatPrice((nClosing*(-1)).toFixed(2))+')' : nClosing=== 0.00 ? '-': formatPrice(nClosing.toFixed(2));


        if(nOpeningTotalCreditAmount > nOpeningTotalDebitAmount)
        {
            sOpeningBalance = "Cr "+   formatPrice((nOpeningTotalCreditAmount - nOpeningTotalDebitAmount).toFixed(2));
        }
        else
        {
            sOpeningBalance = "Dr "+   formatPrice((nOpeningTotalDebitAmount - nOpeningTotalCreditAmount).toFixed(2));
        }

        if(nClosingTotalCreditAmount > nClosingTotalDebitAmount)
        {
            sClosingBalance = "Cr "+   formatPrice((nClosingTotalCreditAmount - nClosingTotalDebitAmount).toFixed(2));
        }
        else
        {
            sClosingBalance = "Dr "+   formatPrice((nClosingTotalDebitAmount - nClosingTotalCreditAmount).toFixed(2));
        }
        
        var FooterField=[];
        var obj=new Object();        
        obj['ParentHeadName']="Grand Total: ";
        obj['CCName']="";
        obj['OpeningValueInString'] = nOpenig; //sOpeningBalance;
        obj['DebitAmountInString'] = nDebit;
        obj['CreditAmountInString'] = nCredit;
        obj['ClosingValueST'] = nClosing;  //sClosingBalance;
        FooterField.push(obj);
        $('#tblCostCenterBreakdowns').datagrid('reloadFooter',FooterField);

        //EnumBalanceStatus { None = 0, OnlyOpening = 1, OnlyClosing = 2, DebitBalance = 3, CreditBalance = 4, All_Item_Include_Zero_Balance = 5 }
        var nBalanceStatus = parseInt($('#cboBalanceStatus').val());
        if(nBalanceStatus === 1)
        {            
            $('#tblCostCenterBreakdowns').datagrid('hideColumn','DebitAmountInString');
            $('#tblCostCenterBreakdowns').datagrid('hideColumn','CreditAmountInString');
            $('#tblCostCenterBreakdowns').datagrid('hideColumn','ClosingValueST');            
        }
        else if(nBalanceStatus === 2)
        {
            $('#tblCostCenterBreakdowns').datagrid('hideColumn','OpeningValueInString');
            $('#tblCostCenterBreakdowns').datagrid('hideColumn','DebitAmountInString');
            $('#tblCostCenterBreakdowns').datagrid('hideColumn','CreditAmountInString');                       
        }
        else if(nBalanceStatus === 3)
        {
            $('#tblCostCenterBreakdowns').datagrid('hideColumn','OpeningValueInString');            
            $('#tblCostCenterBreakdowns').datagrid('hideColumn','CreditAmountInString');
            $('#tblCostCenterBreakdowns').datagrid('hideColumn','ClosingValueST');            
        }
        else if(nBalanceStatus === 4)
        {
            $('#tblCostCenterBreakdowns').datagrid('hideColumn','OpeningValueInString');
            $('#tblCostCenterBreakdowns').datagrid('hideColumn','DebitAmountInString');            
            $('#tblCostCenterBreakdowns').datagrid('hideColumn','ClosingValueST');            
        }
    }

    function PrintPDF(){
        if(!ValidateInput())return;
        var oCostCenterBreakdown = $('#divCostCenterBreakdown').data('obj');
        var sStartDate= $('#txtSettingFromDate').datebox('getValue');
        var sEndDate=$('#txtSettingToDate').datebox('getValue');
        var sHeader=sessionStorage.getItem("HeaderText");
        var nCurrencyID=parseInt($('#cboCurrency').val())?parseInt($('#cboCurrency').val()):0;
        var bIsApproved=$('#chkboxApproved').is(':checked');
        var nAccountHeadID=parseInt($('#txtAccountHeadName').data('obj').AccountHeadID)?parseInt($('#txtAccountHeadName').data('obj').AccountHeadID):0
        var nCCID=parseInt($('#txtCostCneterName').data('obj').ACCostCenterID)?parseInt($('#txtCostCneterName').data('obj').ACCostCenterID):0;
        var nBalanceStatus = parseInt($('#cboBalanceStatus').val())?parseInt($('#cboBalanceStatus').val()):0;

        var sTempHeader = "";
        var aHeaders = sHeader.split('&');
        if(aHeaders.length>1)
        {
            for(var i=0; i<aHeaders.length; i++)
            {
                sTempHeader = sTempHeader+ aHeaders[i]+ "And";
            }
            if(sTempHeader.length>0)
            {
                sTempHeader = sTempHeader.substring(0, sTempHeader.length-3);
            }
            sHeader = sTempHeader;
        }

        var sParam=nAccountHeadID+'~'+sStartDate+'~'+sEndDate+'~'+oCostCenterBreakdown.BusinessUnitIDs+'~'+nCCID+'~'+nCurrencyID+'~'+bIsApproved+'~'+sHeader+'~'+parseInt(nBalanceStatus);
        window.open(_sBaseAddress+'/FinancialStatement/PrintSubLedgerTransactions?Params=' +sParam, "_blank");
    }
    function PrintXL(){
        if(!ValidateInput())return;
        var oCostCenterBreakdown = $('#divCostCenterBreakdown').data('obj');
        var sStartDate= $('#txtSettingFromDate').datebox('getValue');
        var sEndDate=$('#txtSettingToDate').datebox('getValue');
        
        var sHeader=sessionStorage.getItem("HeaderText");
        var nCurrencyID=parseInt($('#cboCurrency').val())?parseInt($('#cboCurrency').val()):0;
        var bIsApproved=$('#chkboxApproved').is(':checked');
        var nAccountHeadID=parseInt($('#txtAccountHeadName').data('obj').AccountHeadID)?parseInt($('#txtAccountHeadName').data('obj').AccountHeadID):0
        var nCCID=parseInt($('#txtCostCneterName').data('obj').ACCostCenterID)?parseInt($('#txtCostCneterName').data('obj').ACCostCenterID):0;
        var nBalanceStatus = parseInt($('#cboBalanceStatus').val())?parseInt($('#cboBalanceStatus').val()):0;

        var sTempHeader = "";
        var aHeaders = sHeader.split('&');
        if(aHeaders.length>1)
        {
            for(var i=0; i<aHeaders.length; i++)
            {
                sTempHeader = sTempHeader+ aHeaders[i]+ "And";
            }
            if(sTempHeader.length>0)
            {
                sTempHeader = sTempHeader.substring(0, sTempHeader.length-3);
            }
            sHeader = sTempHeader;
        }

        var sParam=nAccountHeadID+'~'+sStartDate+'~'+sEndDate+'~'+oCostCenterBreakdown.BusinessUnitIDs+'~'+nCCID+'~'+nCurrencyID+'~'+bIsApproved+'~'+sHeader+'~'+parseInt(nBalanceStatus);
        window.open(_sBaseAddress+'/FinancialStatement/ExportSLTSToExcel?Params=' +sParam, "_blank");
    }
    function ValidateInput()
    {
        if ( $('#txtSettingFromDate').datebox('getValue')=="") {
            alert("please select Start date!");
            $('#txtSettingFromDate').focus();
            return false;
        }

        if ( $('#txtSettingToDate').datebox('getValue')=="") {
            alert("Please select end date!!");
            $('#txtSettingToDate').focus();
            return false;
        }

        var sStartDate=$('#txtSettingFromDate').datebox('getValue');
        var sEndDate = $('#txtSettingToDate').datebox('getValue');
        var dStartDate = new Date(sStartDate);
        var dEndDate = new Date(sEndDate);

        if(dEndDate < dStartDate) {
            alert("End date must be grater then start date!!");
            $('#txtSettingToDate').focus();
            return false;
        }

        if ((!$('#txtAccountHeadName').data('obj') || $('#txtAccountHeadName').data('obj') == null) ) {
            if ((!$('#txtCostCneterName').data('obj') || $('#txtCostCneterName').data('obj') == null)) {
                alert("Please select Account or Sub Ledger!");
                $('#txtCostCneterName').focus();
                return false;
            }else if ((!parseInt($('#txtCostCneterName').data('obj').ACCostCenterID) || parseInt($('#txtCostCneterName').data('obj').ACCostCenterID)<=0)) {
                alert("Please select Account or Sub Ledger !");
                $('#txtCostCneterName').focus();
                return false;
            }
            //alert("Please select Account  or Sub Ledger!");
            //$('#txtAccountHeadName').focus();
            //return false;
        }else if ((!parseInt($('#txtAccountHeadName').data('obj').AccountHeadID) || parseInt($('#txtAccountHeadName').data('obj').AccountHeadID)<=0) ) {
            if ((!$('#txtCostCneterName').data('obj') || $('#txtCostCneterName').data('obj') == null)) {
                alert("Please select Account or Sub Ledger!");
                $('#txtCostCneterName').focus();
                return false;
            }else if ((!parseInt($('#txtCostCneterName').data('obj').ACCostCenterID) || parseInt($('#txtCostCneterName').data('obj').ACCostCenterID)<=0)) {
                alert("Please select Account or Sub Ledger !");
                $('#txtCostCneterName').focus();
                return false;
            }
            //alert("Please select Account Head!");
            //$('#txtAccountHeadName').focus();
            //return false;
        }




        return true;
    }
    function RefreshData(){
        //debugger;
        var nAccountHeadID,nBUID,nCCID=0;
        var sHeaderText,sControllerName,sActionName,sStartDate,sEndDate='';
        var obj={};

        var oCostCenterBreakdown = $('#divCostCenterBreakdown').data('obj');        
        sControllerName='FinancialStatement';
        sActionName='GetsSubLedgerTransactions';


        sStartDate=$('#txtSettingFromDate').datebox('getValue');
        sEndDate=$('#txtSettingToDate').datebox('getValue');

        nAccountHeadID=$('#txtAccountHeadName').data('obj')?parseInt($('#txtAccountHeadName').data('obj').AccountHeadID):0;
        nCCID=$('#txtCostCneterName').data('obj')?parseInt($('#txtCostCneterName').data('obj').ACCostCenterID):0;

        sHeaderText=RefreshHeader();

        if(sActionName===''){return false;}



        obj={
            AccountHeadID:nAccountHeadID,
            CCID:nCCID,
            StartDate:sStartDate,
            EndDate:sEndDate,
            BusinessUnitIDs : oCostCenterBreakdown.BusinessUnitIDs,
            BUName : oCostCenterBreakdown.BUName,
            CurrencyID:parseInt($('#cboCurrency').val()),
            BalanceStatusInt:parseInt($('#cboBalanceStatus').val()),
            IsApproved:$('#chkboxApproved').is(':checked')
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/FinancialStatement/SetCCBSessionData",
            traditional: true,
            data:  JSON.stringify(obj),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var sFeedBackMessage = jQuery.parseJSON(data);
                if (sFeedBackMessage==="Successful") {
                    window.location.href = sessionStorage.getItem('BaseAddress')+ "/FinancialStatement/ViewSubLedgerTransactions?menuid="+parseInt(sessionStorage.getItem('MenuID'));
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    }


    function BUClean() 
    {
        $("#txtBUName").removeClass("fontColorOfPickItem");
        $("#txtBUName").val("Group Accounts");
        var oCostCenterBreakdown = $('#divCostCenterBreakdown').data('obj');
        oCostCenterBreakdown.BusinessUnitIDs="0";
        $('#divCostCenterBreakdown').data('obj',oCostCenterBreakdown);
    }
    function PickBusinessUnit()
    {
        //debugger;
        var oBusinessUnits=  $("#txtBUName").data('BusinessUnits');
        var tblColums = []; var oColumn = { field: "Code", title: "Code", width:60, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ShortName", title: "Short Name", width: 120, align: "left" }; tblColums.push(oColumn);
       
        var oPickerParam = {
            winid: 'winBusinessUnit',
            winclass: 'clsBusinessUnit',
            winwidth: 420,
            winheight: 460,
            tableid: 'tblBusinessUnits',
            tablecolumns: tblColums,
            datalist: oBusinessUnits,
            multiplereturn: true,
            searchingbyfieldName: 'Name',
            windowTittle: 'Business Unit List'
        };
        $.icsPicker(oPickerParam);
        IntializePickerbutton(oPickerParam);
        var oCostCenterBreakdown = $('#divCostCenterBreakdown').data('obj');
        var aSelectedBU = oCostCenterBreakdown.BusinessUnitIDs.split(',');
        var oBUList = $('#tblBusinessUnits').datagrid('getRows');
        //debugger;
        for(var i =0;i<oBUList.length;i++)
        {
            if(ICS_IsExistInArray(oBUList[i].BusinessUnitID,aSelectedBU))
            {
                $('#tblBusinessUnits').datagrid('checkRow',i);
            }
        }
    }
    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }
    function SetPickerValueAssign(oPickerobj)
    {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid == 'winBusinessUnit')
        {
            if (oreturnobjs.length>0)
            {
                $('#txtBUName').val(ICS_PropertyConcatation(oreturnobjs,'ShortName'));
                $('#txtBUName').addClass('fontColorOfPickItem');
                var oCostCenterBreakdown = $('#divCostCenterBreakdown').data('obj');
                oCostCenterBreakdown.BusinessUnitIDs=ICS_PropertyConcatation(oreturnobjs,'BusinessUnitID');
                oCostCenterBreakdown.BUName = $('#txtBUName').val();
                $('#divCostCenterBreakdown').data('obj',oCostCenterBreakdown);
            }
        }
    }
    </script>
    
