@{
    ViewBag.Title = "Requisition";
}
@model ESimSol.BusinessObjects.DURequisition

<div style="padding-top:5px; height:99%" ng-app="DURequisitionAPP" class="form-horizontal regionDURequisition menuMainCollectionTable">
    <div ng-controller="DURequisitionCtrl">
        @*Requisition INFO*@
        <div style="height:22%">  
            <fieldset style="height:100%">
                <legend>Info: {{RequisitionInfo}}</legend>
                <div class="row col-md-12">
                    <div class="col-md-2 text-right">
                        <label class="control-label">Type :</label>
                    </div>
                    <div class="col-md-2 text-left">
                        <select id="cboRequisitionType" ics-tab="1" ng-model="DURequisition.RequisitionType" ng-options="obj.InOutTypeInt as obj.ShortName for obj in RequisitionTypes" ng-change="cboTypeChange()" ng-disabled="disabled" class="form-control">
                            <option value="">--Select Type--</option>
                        </select>
                    </div>
                    <div class="col-md-2 text-right"><label class="control-label">Req. Date:</label></div>
                    <div class="col-md-2 text-left">
                        <div class="input-group date date-container">
                            <input type="text" class="form-control" ics-tab="2" ng-disabled="disabled" ng-model="DURequisition.ReqDateST">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                        </div>
                    </div>
                    <div class="col-md-2 text-right"><label class="control-label"> Qty:</label></div>
                    <div class="col-md-2 text-left">
                        <input ng-model="DURequisition.Qty | number:0" class="form-control"  disabled />
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="col-md-2 text-right"><label class="control-label" ng-model="lblIssueStore">{{lblIssueStore}}</label></div>
                    <div class="col-md-2 text-left">
                        <select id="cboIssueStore" ics-tab="3" ng-model="DURequisition.WorkingUnitID_Issue" ng-options="obj.WorkingUnitID as obj.OperationUnitName for obj in IssueStores" ng-change="cboIssueStoreChange()" ng-disabled="disabled_store" class="form-control">
                            <option value="">--Select Type--</option>
                        </select>
                    </div>
                    <div class="col-md-2 text-right"><label class="control-label" ng-model="lblReceiveStore">{{lblReceiveStore}}</label></div>
                    <div class="col-md-2 text-left">
                        <select id="cboReceiveStore" ics-tab="4" ng-model="DURequisition.WorkingUnitID_Receive" ng-options="obj.WorkingUnitID as obj.OperationUnitName for obj in ReceiveStores" ng-change="cboReceiveStoreChange()" ng-disabled="disabled" class="form-control">
                            <option value="">--Select Type--</option>
                        </select>
                    </div>
                    <div class="col-md-2 text-right"><label class="control-label">Req. By:</label></div>
                    <div class="col-md-2 text-left">
                        <input ng-model="DURequisition.RequisitionByName" class="form-control" disabled />
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="col-md-2 text-right"><label class="control-label">Note:</label></div>
                    <div class="col-md-10 text-left">
                        <input ng-model="DURequisition.Note" ics-tab="5" ng-disabled="disabled" class="form-control" />
                    </div>
                </div>
            </fieldset>
        </div>

        @*DETAILS TABLE*@ 
        <div style="height:65%; width:100%">
            <fieldset style="height:100%">
                <legend>Details : </legend>
                <div class="row ui-grid-panel" >
                    <div class="container col-md-12">
                        <div class="form-inline">
                    
                            <input class="form-control" ng-model="txtProductName" placeholder="Type Name & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownProduct($event)" style="width:20%;" required />
                            <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="PickProduct()" ng-disabled="disabled"><span aria-hidden="true"> Pick </span></button>
                           
                            @*<button type="button" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="MakeDURequisitionDetail()" ng-disabled="disabled"><span aria-hidden="true"> Refresh </span></button>*@
                            <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RemoveProduct()" ng-disabled="disabled_rmv"><span aria-hidden="true"> Remove </span></button>

                            <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="CopyDetail()" ng-show="hide_Issue"> <span class="glyphicon glyphicon-copy" aria-hidden="true">Copy</span> </button>
                        </div>
                      </div>
                </div>
                <div class="row col-md-12">
                    <div ui-grid="gridOptionsDURequisitionDetail" ui-grid-selection ui-grid-resize-columns ui-grid-edit ui-grid-row-edit class="grid ui-grid-selectable"></div>
                </div> 
            </fieldset>
        </div>

        <div style="height:10%">
        <fieldset>
            <legend>Action</legend>
            <div class="row col-md-12 text-right">
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Save()" ng-show="hide_Save" > <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true">Save</span> </button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Receive()" ng-show="hide_Receive"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true">Receive</span> </button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Issue()" ng-show="hide_Issue"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true">Issue</span> </button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Approve()" ng-show="hide_Approve"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true">Approve</span> </button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="UndoApprove()" ng-show="hide_UndoApprove"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true">UndoApprove</span> </button>
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
            </div>
        </fieldset>
    </div>
    </div>

    <script type="text/ng-template" id="DURequisition.html">
        <div class="modal-header">
            <h4 class="modal-title" id="modal-title">Lot No :</h4>
        </div>
        <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">Order Product:</label></div>
                    <div class="col-md-7 text-left">
                        <input ng-model="DURequisitionDetail.OrderProduct" class="form-control" disabled>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">Store:</label></div>
                    <div class="col-md-7 text-left">
                        @*<input type="text" class="form-control" ng-model="DURequisitionDetail.BUID_issueName" disabled>*@
                        <select id="cboIssueStore" ics-tab="3" ng-model="DURequisitionDetail.WorkingUnitID" ng-options="obj.WorkingUnitID as obj.OperationUnitName for obj in IssueStores" ng-change="cboIssueStoreChange()" ng-disabled="disabled_store" class="form-control">
                            <option value="">--Select Type--</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">Product:</label></div>
                    <div class="col-md-7 text-left">
                        <div class="form-inline">
                            <input class="form-control" ng-model="txtProductName" placeholder="Type Name & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownProduct($event)" style="width:80%;" required />
                            <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="PickProduct()" ng-disabled="disabled"><span aria-hidden="true"> Pick </span></button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">LotNo:</label></div>
                    <div class="col-md-7 text-left">
                        <div class="form-inline">
                            <input class="form-control" ng-model="txtLotNo" placeholder="Type Lot No & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownLot($event)" style="width:80%;" required />
                            <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="PickLot()" ng-disabled="disabled"><span aria-hidden="true"> Pick </span></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn-success btn-sm" aria-label="Left Align" ng-click="UpdateLot()" ng-disabled="disabled" ng-hide="hide"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> OK</button>
            <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
        </div>
    </script>
</div>

<style type="text/css">

    .grid{
        width:96%; 
        height:290px;
    }
     /*.ui-grid-panel {
        background: linear-gradient(to bottom,#EFF5FF 0,#E0ECFF 100%);
        height:35px;
    }*/
    .regionDURequisition .form-horizontal .control-label{
        padding-top:3px;
    }
    .regionDURequisition .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .regionDURequisition .col-md-12{
        width:100%;
        padding-right:5px;
        padding-left:5px;
        margin-bottom:5px;
    }
    .regionDURequisition .col-md-2{
        width:16.6%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionDURequisition .col-md-3{
        width:20%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionDURequisition .col-md-4{
        width:28%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionDURequisition .col-md-5{
        width:40%;
        padding-right:5px;
        padding-left:0px;
    }
     .regionDURequisition .col-md-6{
        width:50%;
        padding-right:5px;
        padding-left:5px;
    }
     .regionDURequisition .col-md-10{
        width:83%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionDURequisition .col-md-8{
        width:69%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionDURequisition .btn-sm{
         padding:3px 10px;
     }
     .regionDURequisition .input-group-addon{
         padding: 4px 8px;
     }
</style>

<script type="text/javascript">

    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oDURequisition =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oRequisitionTypes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.RequisitionTypes));
    var oIssueStores =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.IssueStores));
    var oReceiveStores =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ReceivedStores));
    var oOrderTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DUOrderSetups));
    
    var _oLotStores = oIssueStores;
    $('.date-container').datepicker({
        format: "dd M yyyy",
        calendarWeeks: true,
        autoclose: true,
        todayHighlight: true
    });

    var DURequisitionModule = angular.module('DURequisitionAPP', ['ngAnimate', 'ui.bootstrap', 'ui.grid', 'ui.grid.selection', 'ui.grid.edit','ui.grid.resizeColumns','ui.grid.cellNav','ms.service']);
    DURequisitionModule.controller('DURequisitionCtrl', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal,icsMethod, userSession,msGridControl) {
        debugger;
        var viewType = sessionStorage.getItem("Operation");

        //if (viewType == 'View') //Default
        $scope.disabled= false;
        $scope.disabled_store=false;
        $scope.disabled_rmv=true;
        $scope.hide=false;
        $scope.hide_Receive=false;
        $scope.hide_Issue=false;
        $scope.hide_Approve=false;
        $scope.hide_UndoApprove=false;
        $scope.hide_Save=false;
        $scope.txtOrderNo="";

        $scope.viewType=viewType;
        if (viewType == 'Approve')
        {
            $scope.disabled=$scope.disabled_rmv= true;
            $scope.disabled_store=true;
            $scope.hide=true;
            $scope.hide_Receive=false;
            $scope.hide_Issue=false;
            $scope.hide_Approve=true;
            $scope.hide_UndoApprove=false;
            $scope.hide_Save=false;
        }
        if(viewType == 'UndoApprove')
        {
            $scope.disabled=$scope.disabled_rmv= true;
            $scope.hide=true;
            $scope.hide_Receive=false;
            $scope.hide_Issue=false;
            $scope.hide_UndoApprove=true;
            $scope.hide_Approve=false;
            $scope.hide_Save=false;
        }
        else  if (viewType == 'Receive')
        {
            $scope.disabled=$scope.disabled_rmv= true;
            $scope.hide=true;
            $scope.hide_Receive=true;
            $scope.hide_Issue=false;
            $scope.hide_Approve=false;
            $scope.hide_UndoApprove=false;
            $scope.hide_Save=false;
        }else  if (viewType == 'Issue')
        {
            $scope.disabled= true;
            $scope.disabled_store=false;
            $scope.hide=true;
            $scope.disabled_rmv=false;
            $scope.hide_Issue=true;
            $scope.hide_Receive=false;
            $scope.hide_UndoApprove=false;
            $scope.hide_Approve=false;
            $scope.hide_Save=true;
        }
        else if (viewType == 'Edit' || viewType == 'New')
        {
            $scope.disabled=$scope.disabled_rmv= false;
            $scope.hide=false;
            $scope.hide_Request=false;
            $scope.hide_UndoApprove=false;
            $scope.hide_Approve=false;
            $scope.hide_Save=true;
        }
        else if (viewType == 'View')
        {
            $scope.disabled=$scope.disabled_rmv= true;
            $scope.hide=true;
            $scope.hide_Request=false;
            $scope.hide_UndoApprove=false;
            $scope.hide_Approve=false;
            $scope.hide_Save=false;
        }
        $scope.IssueStores=oIssueStores;
        $scope.ReceiveStores=oReceiveStores;
        $scope.RequisitionTypes=oRequisitionTypes;
        $scope.DURequisition=oDURequisition;
        $scope.OrderTypes =oOrderTypes;
        $scope.RequisitionInfo="";

        if($scope.DURequisition.DURequisitionID<=0)
        {
            $scope.DURequisition.WorkingUnitID_Receive=(oReceiveStores.length>0? oReceiveStores[0].WorkingUnitID :0 );
            //$scope.DURequisition.WorkingUnitID_Issue=(oIssueStores.length>0? oIssueStores[0].WorkingUnitID :0 );
            $scope.DURequisition.RequisitionType=(oRequisitionTypes.length>0? oRequisitionTypes[0].InOutTypeInt :0 );
        }
        else
        {
            $scope.RequisitionInfo="Requistion No ["+$scope.DURequisition.RequisitionNo+"] || Order No ["+$scope.DURequisition.OrderNo+"]";
        }

        $scope.cboTypeChange = function()
        {
            debugger;
            $scope.lblReceiveStore="Receive Store: ";
            $scope.lblIssueStore="Issue Store: ";
            _oLotStores = oIssueStores;
            if($scope.DURequisition.RequisitionType==102)
            {
                $scope.lblReceiveStore="Issue Store: ";
                $scope.lblIssueStore="Receive Store: ";
                _oLotStores = oReceiveStores;
            }
        }
        $scope.cboIssueStoreChange = function()
        {
            debugger;
            if($scope.DURequisition.WorkingUnitID_Issue==$scope.DURequisition.WorkingUnitID_Receive)
            {
                $scope.DURequisition.WorkingUnitID_Issue=0;
                alert("Sorry! Issue Store And Receive Store Can Not Be Same!!"); return;
            }
            if($scope.DURequisition.WorkingUnitID_Issue!=null && $scope.DURequisition.WorkingUnitID_Issue>0)
            {
                for(var i=0; i<$scope.IssueStores.length; i++)
                {   if($scope.IssueStores[i].WorkingUnitID==$scope.DURequisition.WorkingUnitID_Issue)
                {
               
                    $scope.DURequisition.BUID_issue=$scope.IssueStores[i].BUID;
                    $scope.DURequisition.BUID_issueName=$scope.IssueStores[i].OperationUnitName;
                    return;
                }
                }
            }
        }
        $scope.cboReceiveStoreChange = function()
        {
            if($scope.DURequisition.WorkingUnitID_Issue==$scope.DURequisition.WorkingUnitID_Receive)
            {
                $scope.DURequisition.WorkingUnitID_Receive=0;
                alert("Sorry! Issue Store And Receive Store Can Not Be Same!!"); return;
            }
            for(var i=0; i<= $scope.ReceiveStores.length; i++)
            {
                if($scope.ReceiveStores[i].WorkingUnitID==$scope.DURequisition.WorkingUnitID_Receive)
                {
                    $scope.DURequisition.BUID_Receive=$scope.ReceiveStores[i].BUID;
                    return;
                }
            }
        }
        //$scope.cboIssueStoreChange();
        $scope.cboTypeChange();

        $scope.Validation = function()
        {
            debugger;

            if($scope.DURequisition.RequisitionType<=100)
            {
                alert("Please Select Requisition Type And Try Again.");
                angular.element('#cboRequisitionType').trigger('focus');
                return false;
            }
            if($scope.DURequisition.WorkingUnitID_Issue<=0)
            {
                alert("Please Select Issue Store And Try Again.");
                angular.element('#cboIssueStore').trigger('focus');
                return false;
            }
            if($scope.DURequisition.WorkingUnitID_Receive<=0)
            {
                alert("Please Select Receive Store And Try Again.");
                angular.element('#cboReceiveStore').trigger('focus');
                return false;
            }
            if($scope.DURequisition.DURequisitionDetails.length<=0)
            {
                alert("Please Select Details And Try Again.");
                return false;
            }

            if($scope.DURequisition.WorkingUnitID_Issue==$scope.DURequisition.WorkingUnitID_Receive)
            {
                alert("Sorry! Issue Store And Receive Store Can Not Be Same!!"); 
                angular.element('#cboReceiveStore').trigger('focus');
                return;
            }

            if (viewType == 'Approve')
            {
                var oDURequisitionDetails =  $scope.gridOptionsDURequisitionDetail.data;
                //for(var i=0; i<oDURequisitionDetails.length; i++)
                //{
                //    if(oDURequisitionDetails[i].LotID==0)
                //    {
                //        alert("Please Pick Lot For "+oDURequisitionDetails[i].ProductName+" And Try Again.");
                //        return false;
                //    }
                //}
            }
            return true;
        }
        $scope.Save = function () {

            if(!$scope.Validation()) return;
            var oDURequisition= $scope.DURequisition;
            oDURequisition.IssueDate = new Date($scope.DURequisition.IssueDateST);
            oDURequisition.ReqDate = new Date($scope.DURequisition.ReqDateST);
            oDURequisition.ImportLCDate = new Date($scope.DURequisition.ImportLCDateST);
            oDURequisition.DURequisitionDetails=$scope.DURequisition.DURequisitionDetails;

            debugger;
            $http.post(_sBaseAddress+'/DURequisition/Save',JSON.stringify(oDURequisition)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    //console.log(result);
                    if(result.DURequisitionID>0 && result.ErrorMessage=="")
                    {
                        debugger;
                        alert("Data Saved Successfully!!");
                        $scope.DURequisition=result;
                        userSession.setData('DURequisitions',$scope.DURequisition);
                      
                        $scope.MakeDURequisitionDetail();

                        if (viewType != 'Issue')
                        userSession.previousPage();
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        );
        };

        $scope.Approve = function () {

            if(!$scope.Validation())
                return;
            var oDURequisition= $scope.DURequisition;
            oDURequisition.IssueDate = new Date($scope.DURequisition.IssueDateST);
            oDURequisition.ReqDate = new Date($scope.DURequisition.ReqDateST);
            oDURequisition.ImportLCDate = new Date($scope.DURequisition.ImportLCDateST);

            debugger;
            $http.post(_sBaseAddress+'/DURequisition/ApproveDURequisition',JSON.stringify(oDURequisition)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    if(result.DURequisitionID>0)
                    {
                        debugger;
                        $scope.DURequisition=result;
                        userSession.setData('DURequisitions',$scope.DURequisition);
                        userSession.previousPage();
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        );
        };
        $scope.UndoApprove = function () {

            if(!$scope.Validation())
                return;
            var oDURequisition= $scope.DURequisition;
            oDURequisition.IssueDate = new Date($scope.DURequisition.IssueDateST);
            oDURequisition.ReqDate = new Date($scope.DURequisition.ReqDateST);
            oDURequisition.ImportLCDate = new Date($scope.DURequisition.ImportLCDateST);

            debugger;
            $http.post(_sBaseAddress+'/DURequisition/UndoApproveDURequisition',JSON.stringify(oDURequisition)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    if(result.DURequisitionID>0)
                    {
                        debugger;
                        $scope.DURequisition=result;
                        userSession.setData('DURequisitions',$scope.DURequisition);
                        userSession.previousPage();
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        );
        };
        $scope.Receive = function () 
        {

            if(!$scope.Validation())
                return;
            var oDURequisition= $scope.DURequisition;
            oDURequisition.IssueDate = new Date($scope.DURequisition.IssueDateST);
            oDURequisition.ReqDate = new Date($scope.DURequisition.ReqDateST);
            oDURequisition.ImportLCDate = new Date($scope.DURequisition.ImportLCDateST);

            debugger;
            $http.post(_sBaseAddress+'/DURequisition/RecivedDURequisition',JSON.stringify(oDURequisition)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    if(result.DURequisitionID>0)
                    {
                        debugger;
                        $scope.DURequisition=result;
                        userSession.setData('DURequisitions',$scope.DURequisition);
                        //sessionStorage.setItem('DURequisition',$scope.DURequisition);
                        userSession.previousPage();
                        // msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        );
        };
        $scope.Issue = function () {

            if(!$scope.Validation())
                return;
            var oDURequisition= $scope.DURequisition;
            oDURequisition.IssueDate = new Date($scope.DURequisition.IssueDateST);
            oDURequisition.ReqDate = new Date($scope.DURequisition.ReqDateST);
            oDURequisition.ImportLCDate = new Date($scope.DURequisition.ImportLCDateST);

            debugger;
            $http.post(_sBaseAddress+'/DURequisition/IssueDURequisition',JSON.stringify(oDURequisition)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    if(result.DURequisitionID>0)
                    {
                        debugger;
                        $scope.DURequisition=result;
                        userSession.setData('DURequisitions',$scope.DURequisition);
                        //sessionStorage.setItem('DURequisition',$scope.DURequisition);
                        userSession.previousPage();
                        // msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        );
        };

        $scope.PickProduct= function ()
        {
            debugger;
            $scope.txtLotNo="";
            var oPorduct= 
                {
                    ProductName:($scope.txtProductName == undefined ? "" : $scope.txtProductName),
                    BUID:$scope.DURequisition.BUID
                };
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/DURequisition/GetProducts',$.param(oPorduct), config).then(
                        function (response)
                        {
                            var oDetailColumns = [];
                            var   oColumn = { field: 'ProductCode', name:'Code', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'ProductName', name:'Porduct', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'ProductCategoryName', name:'Category', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            var results=jQuery.parseJSON(response.data);
                            var modalObj={
                                size:'md',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:true,
                                pickertitle:'Porduct List',
                                searchingbyfieldName:'DestinationLotNo',
                                columns:oDetailColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                for(var i=0; i<result.length; i++)
                                {
                                    if(result[i].ProductID>0)
                                    {
                                        result[i].DURequisitionID = $scope.DURequisition.DURequisitionID;
                                        $scope.gridOptionsDURequisitionDetail.data.push(result[i]);
                                    }
                                }
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );
        };
        $scope.SearchKeyDownProduct = function (e){
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) 
            {
                var txtPorduct = $.trim($scope.txtProductName);
                if(txtPorduct=="" || txtPorduct==null)
                {
                    alert("Type Product Name and Press Enter");
                    return;
                }
               
                $scope.PickProduct();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtPorductNo='';
            }
        };
        $scope.RemoveProduct= function ()
        {
            var oDetail = $scope.gridDetailApi.selection.getSelectedRows()[0];
            //var data=$scope.gridApi.selection.getSelectedRows();
            if(oDetail==null)
            {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex=$scope.gridOptionsDURequisitionDetail.data.indexOf(oDetail);
            if (!confirm("Confirm to Remove?")) return ;
            $scope.gridOptionsDURequisitionDetail.data.splice(SelectedRowIndex,1);
        }

        $scope.CopyDetail= function ()
        {
            var oDetail = $scope.gridDetailApi.selection.getSelectedRows()[0];
            //var data=$scope.gridApi.selection.getSelectedRows();
            if(oDetail==null)
            {
                alert("Select At least One item !");
                return;
            }
            if (!confirm("Confirm to Copy?")) return ;

            var oDURequisitionDetail=
                {
                    DyeingOrderNo: oDetail.DyeingOrderNo,
                    ProductName : oDetail.ProductName,
                    WUName : oDetail.WUName,
                    LotNo : "",
                    LotQty : "",
                    Qty : 0,
                    MUnit : oDetail.MUnit,
                    BagNo : oDetail.BagNo,
                    Note: "",
                    DURequisitionDetailID : 0,
                    DURequisitionID : oDetail.DURequisitionID,
                    ProductID : oDetail.ProductID,
                    ProductName : oDetail.ProductName,
                    LotProductName : oDetail.LotProductName,
                    BuyerName : oDetail.BuyerName,
                    Qty_Preq : oDetail.Qty_Preq,
                    UnitPrice : oDetail.UnitPrice,
                    DyeingOrderID : oDetail.DyeingOrderID,
                    LotID : 0,
                    DestinationLotID : "",
                    DestinationLotNo: "",
                    IsInHouse : oDetail.IsInHouse,
                    OrderType:oDetail.OrderType,
                    CurrencyID : oDetail.CurrencyID,
                    CurrencySymbol : oDetail.CurrencySymbol,
                    MUnitID : oDetail.MUnitID,
                    BagNo : oDetail.BagNo,
                    Qty_Order : oDetail.Qty_Order,
                    ContractorID : oDetail.ContractorID,
                    WorkingUnitID : oDetail.WorkingUnitID,
                };
            $scope.gridOptionsDURequisitionDetail.data.push(oDURequisitionDetail);
        }

        $scope.Modal = function (obj_DURS, operation) {
            debugger;
            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'DURequisition.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'DURequisitionCtrl',
                resolve: {
                    obj: function () {
                        return { DURequisitionDetail:obj_DURS, Operation: operation  };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                debugger;
                if(result.LotID>0)
                {
                    debugger;
                    var index=sessionStorage.getItem('SelectedLotIndex');
                    $scope.gridOptionsDURequisitionDetail.data[index]=result;
                    $scope.gridDetailApi.selection.selectRow($scope.gridOptionsDURequisitionDetail.data[index]);
                   
                    $scope.DURequisition.WorkingUnitID_Issue=result.WorkingUnitID_Issue;
                } 
                angular.element(document.querySelector('.ics-tab-7')).focus();
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };
        //$scope.OrderQty=0.0;
        $scope.OpenLotModal = function(oDURequisition)
        {
            debugger;
            //var oDURequisition = $scope.gridDetailApi.selection.getSelectedRows()[0];
            //if($scope.DURequisition.WorkingUnitID_Issue<=0)
            //{
            //    alert("Select Issue Store!!");
            //    return;
            //}

            $scope.cboIssueStoreChange();

            debugger;
          
            angular.forEach($scope.gridOptionsDURequisitionDetail.data,function(value,index){
                if(value.ProductID==oDURequisition.ProductID)
                {
                    sessionStorage.setItem("SelectedLotIndex", index);
                }
            },$scope.gridOptionsDURequisitionDetail.data);

            //if($scope.DURequisition.RequisitionType==102)
            //{
            //    oDURequisition.BUID=$scope.DURequisition.BUID_Receive;
            //    oDURequisition.BUID_issueName=$scope.DURequisition.BUID_Receive;
            //    oDURequisition.WorkingUnitID=$scope.DURequisition.WorkingUnitID_Receive;
            //    oDURequisition.LotActionName='GetsLotSoftWinding';
            //}else
            //{
                oDURequisition.BUID=$scope.DURequisition.BUID_issue;
                oDURequisition.BUID_issueName=$scope.DURequisition.BUID_issueName;
            //oDURequisition.WorkingUnitID=$scope.DURequisition.WorkingUnitID_Issue; GetsLot
                oDURequisition.LotActionName='GetsLot_ForOpen';
            //}

            $scope.Modal(oDURequisition, 'Edit');
        }
        $scope.MakeDURequisitionDetail= function()
        {
            debugger;
            var oDetailColumns = [];
            
            //oColumn = { field: 'DyeingOrderNo', name:'Order No', width:'14%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
            var oColumn = { field: 'ProductName', name:'Commodity', width:'22%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn = { field: 'WUName', name:'Store', width:'10%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn = { field: 'LotNo', name:'Lot No', width:'15%',cellClass: 'text-right', enableCellEdit:false,
                cellTemplate:'<div>' +'<span> {{row.entity.LotNo}} </span><button style="align:right" ng-click="grid.appScope.OpenLotModal(row.entity)">Pick</button>' +'</div>'};oDetailColumns.push(oColumn);
            oColumn ={ field: 'LotQty', name:'Balance(Lot)', width:'10%',cellClass: 'text-right', cellFilter:'number:2', enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn ={ field: 'Qty', name:'Req. Qty', width:'10%',cellClass: 'text-right',aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right',enableCellEdit:true };oDetailColumns.push(oColumn);
            oColumn ={ field: 'MUnit', name:'Unit', width:'7%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn ={ field: 'BagNo', name:'Cone/Bale No', width:'10%',cellClass: 'text-right', cellFilter:'number:2', enableCellEdit:true };oDetailColumns.push(oColumn);
            oColumn ={ field: 'Note', name:'Remarks', width:'14%',cellClass: 'text-left',enableCellEdit:true };oDetailColumns.push(oColumn);
            
            $scope.gridOptionsDURequisitionDetail = {
                enableRowSelection: true,
                enableRowHeaderSelection: false,
                multiSelect: false,
                enableColumnResizing: true,
                showColumnFooter: true,
                cellEditableCondition: function($scope) 
                {
                    if (viewType == 'Edit' || viewType == 'New' || viewType == 'Issue')
                    {
                        if($scope.row.entity.Qty<0 ||$scope.row.entity.Qty==undefined)
                            return false;
                        else
                        {
                            if($scope.row.entity.OrderQty==undefined)
                                $scope.row.entity.OrderQty=$scope.row.entity.Qty;
                            return true;
                        }
                    }else 
                        return false;
                },
                columnDefs:oDetailColumns,
                data:  $scope.DURequisition.DURequisitionDetails,
                onRegisterApi: function (gridApi) 
                {
                    $scope.gridDetailApi = gridApi;
                    
                    gridApi.edit.on.afterCellEdit($scope,
                     function (rowEntity, colDef, newValue, oldValue)
                     {
                         debugger;
                         //if(rowEntity.Qty > rowEntity.OrderQty)
                         //{ 
                         //    rowEntity.Qty=rowEntity.OrderQty; 
                         //    alert("Requ. Qty Can Not Be Greater Than Order Qty!!");
                         //}
                          if(rowEntity.Qty<=0 )
                         { 
                             rowEntity.Qty=rowEntity.OrderQty; 
                             alert("Requ. Qty Can Not Be Equal Or Less Then Zero!!");
                         }
                         return rowEntity;
                     });
                }
            };

            //var oDURequisitionDetails=$scope.DURequisition.DURequisitionDetails;
           // $scope.gridOptionsDURequisitionDetail.data=[];
           // $scope.gridOptionsDURequisitionDetail.data= $scope.DURequisition.DURequisitionDetails;
        }
        $scope.MakeDURequisitionDetail();
       
        $scope.Close = function () {
            userSession.previousPage();
        };
    });

    DURequisitionModule.controller('ModalInstanceCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) {

        var viewType = sessionStorage.getItem("Operation");
        $scope.disabled= true;
        if (viewType == 'Edit' || viewType == 'New'  || viewType == 'Issue')
        {
            $scope.disabled= false;
        }

        $scope.Operation=obj.Operation;
        $scope.DURequisitionDetail=obj.DURequisitionDetail;
        debugger;
        if(obj.DURequisitionDetail.ProductID==null || obj.DURequisitionDetail.ProductID<=0)
        {
            $scope.DURequisitionDetail={
                DURequisitionID : 0,
                BUID:sessionStorage.getItem('BUID'),
                Name : "",
                Activity : true
            }
        }
        else
        {
            $scope.DURequisitionDetail = obj.DURequisitionDetail;
            $scope.DURequisitionDetail.OrderProduct=obj.DURequisitionDetail.ProductName;
            $scope.txtProductName=obj.DURequisitionDetail.ProductName;

            if(obj.DURequisitionDetail.LotNo!="" && obj.DURequisitionDetail.LotNo!=undefined)
                $scope.txtLotNo=obj.DURequisitionDetail.LotNo+" [BL"+obj.DURequisitionDetail.LotQty+"]";
            $scope.DURequisitionDetail.LotProductID=obj.DURequisitionDetail.ProductID;
           

            if(obj.DURequisitionDetail.LotID>0)
            {
                $scope.txtProductName=obj.DURequisitionDetail.LotProductName;
            }
            //$scope.DURequisitionDetail.LotNo="";
            //$scope.DURequisitionDetail.LotID=0;
        }
        
        $scope.IssueStores=_oLotStores;

        $scope.PickLot= function ()
        {
            $scope.DURequisitionDetail.LotID=0;
            $scope.DURequisitionDetail.LotNo="";
         
            if($scope.DURequisitionDetail.LotProductID<=0)
            {
                alert("Please Pick a Product And Try Again"); return;
            }
            debugger;
            var sParam="NotInHouse";
            if($scope.DURequisitionDetail.IsInHouse) sParam="IsInHouse"; //console.log($scope.DURequisitionDetail);
          
            var oDyeingPorduct= 
            {
                Params :  sParam,
                ParentID: $scope.DURequisitionDetail.DyeingOrderID,
                ProductID:$scope.DURequisitionDetail.LotProductID,
                BUID:$scope.DURequisitionDetail.BUID,
                LotNo:($scope.txtLotNo == undefined ? "" : $scope.txtLotNo),
                WorkingUnitID:$scope.DURequisitionDetail.WorkingUnitID,
                ContractorID:$scope.DURequisitionDetail.ContractorID,
                DyeingOrderID:$scope.DURequisitionDetail.DyeingOrderID,
                OrderType:$scope.DURequisitionDetail.OrderType,
                ModelReferenceID:$scope.DURequisitionDetail.DyeingOrderID
            };
            $scope.txtLotNo ="";
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/DURequisition/'+$scope.DURequisitionDetail.LotActionName,$.param(oDyeingPorduct), config).then(
                        function (response)
                        {
                            debugger;
                            var oDetailColumns = [];
                            //var oColumn = { field: 'OrderRecapNo', name:'OrderNo', width:'15%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            var oColumn = { field: 'LotNo', name:'Lot No', width:'15%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn ={ field: 'Balance', name:'Balance(Lot)', width:'15%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn ={ field: 'MUName', name:'Unit', width:'15%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
                           // oColumn = { field: 'Balance', name:'Balance', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'OperationUnitName', name:'Operation Unit', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            
                            var results=jQuery.parseJSON(response.data);

                            if(results.length<=0 || results==undefined || results==null){ alert("No Data Found!");return; }

                            if(results[0].ErrorMessage.length>0)
                            {
                                alert(results[0].ErrorMessage); return;
                            }

                            if(results.length<=0)
                            {
                                alert("No Data Found!!"); return;
                            }

                            var modalObj={
                                size:'lg',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Porduct List',
                                searchingbyfieldName:'DestinationLotNo',
                                columns:oDetailColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                if(result.LotID>0)
                                {
                                    $scope.DURequisitionDetail.LotID=result.LotID;
                                    $scope.DURequisitionDetail.LotNo=result.LotNo;
                                    $scope.DURequisitionDetail.WUName=result.OperationUnitName;
                                    $scope.DURequisitionDetail.WorkingUnitID=result.WorkingUnitID;
                                    
                                    $scope.DURequisitionDetail.LotQty=result.Balance;
                                    $scope.DURequisitionDetail.Qty=result.Balance;
                                    $scope.DURequisitionDetail.BalanceLot=result.BalanceLot;
                                    $scope.txtLotNo=result.LotNo+" [BL-"+result.Balance+"]";
                                 
                                    $scope.DURequisitionDetail.WorkingUnitID_Issue=result.WorkingUnitID;
                                }
                                else
                                {
                                    $scope.DURequisitionDetail.LotID=0;
                                    $scope.DURequisitionDetail.LotNo="";
                                    $scope.txtLotNo="";
                                }
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );
        };
        $scope.SearchKeyDownLot = function (e){
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) 
            {
                var txtLotNo = $.trim($scope.txtLotNo);
                if(txtLotNo=="" || txtLotNo==null)
                {
                    alert("Type Lot No and Press Enter");
                    return;
                }
                $scope.PickLot();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtPorductNo='';
            }
        };  
        $scope.PickProduct= function ()
        {
            debugger;
            $scope.DURequisitionDetail.LotProductID="";
            $scope.DURequisitionDetail.LotProductName="";
            $scope.DURequisitionDetail.LotID=0;
            $scope.DURequisitionDetail.LotNo="";
            $scope.DURequisitionDetail.WorkingUnitID_Issue=0;
            $scope.txtLotNo="";
            var oPorduct= {
                ProductName:($scope.txtProductName == undefined ? "" : $scope.txtProductName),
                BUID:$scope.DURequisitionDetail.BUID
            };
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/DURequisition/GetProducts',$.param(oPorduct), config).then(
                        function (response)
                        {
                            var oDetailColumns = [];
                            var   oColumn = { field: 'ProductCode', name:'Code', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'ProductName', name:'Porduct', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'ProductCategoryName', name:'Category', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            var results=jQuery.parseJSON(response.data);
                            var modalObj={
                                size:'md',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Porduct List',
                                searchingbyfieldName:'DestinationLotNo',
                                columns:oDetailColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                if(result.ProductID>0)
                                {
                                    $scope.DURequisitionDetail.LotProductID=result.ProductID;
                                    $scope.DURequisitionDetail.LotProductName=result.ProductName;
                                    $scope.txtProductName=result.ProductName;
                                }
                                else
                                {
                                    $scope.DURequisitionDetail.ProductID=0;
                                    $scope.DURequisitionDetail.ProductName="";
                                    $scope.DURequisitionDetail.MUnit="";
                                    $scope.txtProductName="";
                                }
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );
        };
        $scope.SearchKeyDownProduct = function (e){
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) 
            {
                var txtPorduct = $.trim($scope.txtProductName);
                if(txtPorduct=="" || txtPorduct==null)
                {
                    alert("Type Product Name and Press Enter");
                    return;
                }
               
                $scope.PickProduct();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtPorductNo='';
            }
        };
        
        $scope.Validation=function()
        {
            if($scope.DURequisitionDetail.Name == "" || $scope.DURequisitionDetail.Name == undefined){
                msModal.Message({headerTitle : '', bodyText:'Enter DyeingType Name.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }

            return  true;
        };

        $scope.UpdateLot= function ()
        {
            debugger;
            var oDURequisitionDetail= $scope.DURequisitionDetail;
            $uibModalInstance.close(oDURequisitionDetail);
        };

        $scope.cancel= function () {
            $uibModalInstance.close();
        };
    });

</script>


