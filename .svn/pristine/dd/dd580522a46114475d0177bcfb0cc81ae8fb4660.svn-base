@{
    ViewBag.Title = "TAP Execution";
}
@model ESimSol.BusinessObjects.TAPExecution
<div class="menuMainCollectionTable">
    <fieldset style=" width:98%;">
        <legend style="font-weight: bold;">Time Action Plan Info: </legend>
        <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size: 11px; font-weight: bold">
            <tr>
                <td style="width: 120px; text-align: right"><label class="asterixStyle">*</label>Buyer Name:</td>
                <td style="width:250px; text-align:left;"><input type="text" style="width:210px;" id="txtBuyerName" placeholder="Type & press Enter" /><input type="button" value="Pick" style="width:40px;" onclick="PickBuyer('')" />  </td>
                <td style="width:100px; text-align: right">Factory:</td>
                <td style="width:170px; text-align:left;"><input type="text" style="width:138px;" id="txtFactoryName" placeholder="Type Factory & press Enter" /><input id="btnFactory" type="button" value="Pick" style="width:32px;" onclick="PickFactory('')" />  </td>
                <td style="width:170px; vertical-align:bottom; text-align:right;" rowspan="5">
                    <table border="1">
                        <tr>
                            <td style=" text-align:center;width:120px; height:125px;">
                                <img id="imgCoverImage" src="" alt="Style" style="width:120px; height:125px" />
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td style="width: 120px; text-align: right"><label class="asterixStyle">*</label>Recap No:</td>
                <td style="width:250px; text-align:left;"><input type="text" style="width:210px;" id="txtOrderNo" disabled="disabled" /><input type="button" value="Pick" style="width:40px;" onclick="PickOrder()" />  </td>
                <td style="width:100px; text-align: right">Order Date:</td>
                <td style="width:170px; text-align:left;"><input type="text" style="width:170px;" id="txtOrderDate" disabled="disabled" /></td>
            </tr>
            <tr>
                <td style="width: 120px; text-align: right">Style No:</td>
                <td style="width:250px; text-align:left;">
                    <table border="0" cellpadding="0" cellspacing="0">
                        <tr>
                            <td style="width:100px;"><input type="text" style="width:80px;" id="txtStyleNo" disabled="disabled" /></td>
                            <td style="width:50px;">Plan No :</td>
                            <td style="width:100px; text-align:left;"><input type="text" style="width:100px;" id="txtPlanNo" disabled="disabled" /></td>
                        </tr>
                    </table>
                </td>
                <td style="width:100px; text-align: right">Shipment Date:</td>
                <td style="width:170px; text-align:left;"><input type="text" style="width:170px;" id="txtShipmentDate" disabled="disabled" /></td>
            </tr>

            <tr>
                <td style="width: 120px; text-align: right">Order Qty:</td>
                <td style="width:250px; text-align:left;"><input type="text" style="width:250px; text-align:right;" id="txtOrderQty" disabled="disabled" /></td>

                <td style="width: 100px; text-align: right">
                    Remarks:
                </td>
                <td style="width:170px; text-align:left;">
                    <input type="text" style="width:170px;" id="txtRemarks" disabled="disabled" />
                </td>
            </tr>
            <tr>
                <td style="width: 120px; text-align: right"> </td>
                <td style="width:250px; text-align:left;"></td>

                <td style="width: 100px; text-align: right"></td>
                <td style="width:170px; text-align:left;"></td>
            </tr>

        </table>
    </fieldset>
    <div style="margin-left:3px; margin-top:2px; width:99.5%">
        <table id="tblTAPExecution" class="easyui-treegrid" title="Time Action Plan Details" style="width:100%;height:390px" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" data-options="idField:'id',treeField:'text', rownumbers:'true', toolbar:'#toolbar'">
            <thead>
                <tr>
                    <th field="text" width="350">Step Name</th>
                    <th field="UpDatedData" width="250">Value</th>
                    <th field="IsDoneInString" align="center" width="100">Status</th>
                </tr>
            </thead>
        </table>
        <div id="toolbar" style="text-align:right; font-weight:normal">
            <table border="0" cellpadding="0" cellspacing="0">
                <tr>
                    <td style="width:160px;" id="tdStringValue"><input type="text" id="txtStringValue" style="width:150px;" /></td>
                    <td id="tdNumberValue" style="width:160px;"><input type="text" id="txtNumberValue" style="width:150px;" /></td>
                    <td id="tdDate" style="width:160px;"><input id="txtDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 150px;" /></td>
                    <td><a href="javascript:void(0)" id="btnUpdate" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Update</a></td>
                    <td id="tdDone"><a href="javascript:void(0)" id="btnDonePlan" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Done()">Done</a></td>
                </tr>
            </table>
        </div>
    </div>
</div>


<script type="text/javascript">
$(document).ready(function () {
    //debugger;
    var oTAPExecution =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model)); 
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));  
    $('#tblTAPExecution').treegrid({onSelect: function(rowData){ RowSelect(rowData);}})
    $('#txtDate').datebox('setValue',icsdateformat(new Date()));
    $('#txtNumberValue').numberbox({min:0,precision:2});
    $('#tdStringValue,#tdNumberValue,#tdDate').hide();
    $('#tblTAPExecution').data('BuyerID',0);
    $('#tblTAPExecution').data('FactoryID',0);
});



    function PickOrder()
    {
        if(parseInt($('#tblTAPExecution').data('BuyerID'))<=0)
        {
            alert("Please Select Buyer");
            return;
        }
        var oTAP = { BuyerID:$('#tblTAPExecution').data('BuyerID'), ProductionFactoryID:$('#tblTAPExecution').data('FactoryID'),BUID:sessionStorage.getItem('BUID')};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oTAP,
            ControllerName: "TAPExecution",
            ActionName: "BuyerWiseTAPsPicker",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].TAPID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "PlanNo", title: "Plan No", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "StyleNo", title: "Style No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "OrderRecapNo", title: "Recap No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShipmentDateInString", title: "Shipment Date", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winTAPs',
                        winclass: 'clsTAP',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblTAPs',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'TAP List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else
            {
                alert("Data Not Found.");
                return;
            }
        });
     
    }


    function GetOrderSteps(nTempTAPID)
    {

        if(parseInt(nTempTAPID)>0)
        {
            var tsv=((new Date()).getTime())/1000;
            $.ajax
          ({
              type: "GET",
              dataType: "json",
              url : sessionStorage.getItem('BaseAddress')+"/TAPExecution/GetOrderSteps",
              data: {nTAPID : nTempTAPID,nOrderStepID:0,ts : tsv},
              contentType: "application/json; charset=utf-8",
              success: function (data)
              {
                  //debugger;
                  var oTAPExecution = jQuery.parseJSON(data);
                  if (oTAPExecution!= null)
                  {
                      RefreshTAPExecutions(oTAPExecution.TTAPExecution.children);
                      $('#tblTAPExecution').treegrid('collapseAll',0);
                  }else
                  {
                      alert("Data Not Found!");
                  }
              },
              error: function (xhr, status, error)
              {
                  alert(error);
              }

          });

        }
    }

 
    function RefreshTAPExecutions(oTTAPExecution)
    {
        data=oTTAPExecution;
        data={"total":""+data.length+"","rows":data};
        $('#tblTAPExecution').treegrid('loadData',data); 
    }


    function SetRowIndex()
    {
        var oTAPExecutions = $('#tblTAPExecution').treegrid('getRows');
        var nCount;
        var sPriviousGroupName = "";
        var nLenth = oTAPExecutions.length;
        for(var i=0;i<nLenth;i++)
        {
            if(oTAPExecutions[i].group != sPriviousGroupName)
            {
                nCount = 0;
                alert("Index = "+oTAPExecutions[i].RowIndex +" ANd Count = "+nCount);
                oTAPExecutions[i].RowIndex = nCount;
                sPriviousGroupName = oTAPExecutions[i].group;
            }else{
                oTAPExecutions[i].index = nCount;
            }
            nCount++;
        }
        RefreshTAPExecutionGrid(oTAPExecutions); 
    }

    function MakeObjectList()
    {
        var oTAPExecutions = $('#tblTAPExecution').treegrid('getRows');
        for(var i=0;i<oTAPExecutions.length;i++)
        {
            oTAPExecutions[i].UpdatedData = oTAPExecutions[i].value;
        }
        return oTAPExecutions;
    }

    function RefreshTAPExecutionGrid(oTempList)
    {
       // var oTAPExecutions = $('#tblTAPExecution').treegrid('getRows');
        data=oTempList;
        data={"total":""+data.length+"","rows":data};
        $('#tblTAPExecution').treegrid('loadData',data);     
    }

    function GetRequiredDataType(nRequiredDataType)
    {
        if(nRequiredDataType==0)
        {
            return 'text';
        }else if(nRequiredDataType ==1)
        {
            return 'numberbox';
        }else
        {
            return 'datebox'
        }
    }

    function RowSelect(oTAPExecution)
    {
        debugger;
        //Re Set all
        $('#btnUpdate,#tdNumberValue,#tdStringValue,#btnDonePlan').show();
        if(parseInt(oTAPExecution.RequiredDataTypeInInt) == 0)//Text
        {
            if(oTAPExecution.IsDone==true)
            {
                $('#btnUpdate,#tdStringValue').hide();
                
            }else{
                $('#btnUpdate,#tdStringValue').show();
            }
            document.getElementById('tdNumberValue').style.display = 'none';
            document.getElementById('tdDate').style.display = 'none';
            document.getElementById("txtStringValue").value = oTAPExecution.UpDatedData;

        }else if(parseInt(oTAPExecution.RequiredDataTypeInInt) == 1)//number
        {
            if(oTAPExecution.IsDone==true)
            {
                $('#btnUpdate,#tdNumberValue').hide();
            }else{
                $('#btnUpdate,#tdNumberValue').show();
            }
            document.getElementById('tdStringValue').style.display = 'none';
            document.getElementById('tdDate').style.display = 'none';
            $('#txtNumberValue').numberbox('setValue', oTAPExecution.UpDatedData);

        }
        else{//DAte
            //document.getElementById('btnUpdate').style.display = 'none';
            //document.getElementById('tdNumberValue').style.display = 'none';
            //document.getElementById('tdStringValue').style.display = 'none';
            $('#btnUpdate,#tdNumberValue,#tdStringValue').hide();
            //$('#txtDate').datebox('setValue',icsdateformat(new Date(oTAPExecution.UpDatedData)));
        }
        if(oTAPExecution.IsDone==true)
        {
            $('#tdDone').hide();
        }else
        {
            $('#tdDone').show();
        }
    }

    function Done()
    {
        debugger;
        var oTempTAPExecution = $('#tblTAPExecution').treegrid('getSelected');
        if(parseInt(oTempTAPExecution.RequiredDataTypeInInt)!=2)
        {
            if(oTempTAPExecution.TAPExecutionID<=0)
            {
                alert("Please Update Data First .");
                return;
            }
        }
       
        if(parseInt(oTempTAPExecution.parentid)===1)
        {
            var oTempChildrens= $('#tblTAPExecution').treegrid('getChildren', oTempTAPExecution.id);
            if(oTempChildrens!=null)
            {
                for(var i = 0;i<oTempChildrens.length;i++)
                {
                    if(oTempChildrens[i].TAPExecutionID<=0)
                    {
                        alert("Please Update Sub Step First. Then Parent Step");
                        return;
                    }
                    if(oTempChildrens[i].IsDone==false)
                    {
                        alert("Please Done Sub Step First. Then Parent Step");
                        return;
                    }
                }
            }
        }

        if (!confirm("Confirm to Done?")) return ;
        var oTAPExecution = {TAPExecutionID:oTempTAPExecution.TAPExecutionID,RequiredDataTypeInInt:oTempTAPExecution.RequiredDataTypeInInt,TAPDetailID:oTempTAPExecution.TAPDetailID,OrderStepID:oTempTAPExecution.OrderStepID,TAPID:oTempTAPExecution.TAPID};
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/TAPExecution/Done",
            traditional: true,
            data:  JSON.stringify(oTAPExecution),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
               var oTAPExecution = jQuery.parseJSON(data);
                if (oTAPExecution.ErrorMessage == "" || oTAPExecution.ErrorMessage == null)
                {
                    alert("Sucessfully Done");
                    document.getElementById('btnUpdate').style.display = 'none';
                    document.getElementById('tdNumberValue').style.display = 'none';
                    document.getElementById('tdStringValue').style.display = 'none';
                    document.getElementById('btnDonePlan').style.display = 'none';
                    RefreshTAPExecutions(oTAPExecution.TTAPExecution.children);
                }
                else {
                    alert(oTAPExecution.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function Save()
    {
        debugger;
        var oTempTAPExecution = $('#tblTAPExecution').treegrid('getSelected');
        if(oTempTAPExecution == null)
        {
            alert("Please Select Item form list"); 
            return ;
        }
        if(oTempTAPExecution.IsDone==true)
        {
            alert("Already Done This Item."); 
            return ;
        }
       if(parseInt(oTempTAPExecution.RequiredDataTypeInInt)== 0)
       {
           if($("#txtStringValue").val()==null || $("#txtStringValue").val()=="")
           {
               alert("Please Type Comments Something.!"); 
               $("#txtStringValue").focus();
               return ;
           }
           oTempTAPExecution.UpdatedData = $("#txtStringValue").val();
           document.getElementById('txtStringValue').value ="";
       }else if(parseInt(oTempTAPExecution.RequiredDataTypeInInt) == 1)
       {
           if(parseFloat($('#txtNumberValue').numberbox('getValue'))<=0)
           {
               alert("Sorry, Value should be Greater Than 0.!"); 
               $("#txtNumberValue").focus();
               return ;
           }
           oTempTAPExecution.UpdatedData = $('#txtNumberValue').numberbox('getValue');
           $('#txtNumberValue').numberbox('setValue', 0);
       }else{
           oTempTAPExecution.UpdatedData = icsdateformat(new Date($('#txtDate').datebox('getValue')));
           $('#txtDate').datebox('setValue',icsdateformat(new Date()));
       }
       var oTAPExecution = {
                            TAPExecutionID:oTempTAPExecution.TAPExecutionID,
                            TAPDetailID :oTempTAPExecution.TAPDetailID,
                            OrderStepID  :oTempTAPExecution.OrderStepID,
                            UpdatedData :oTempTAPExecution.UpdatedData,
                            RequiredDataTypeInInt :oTempTAPExecution.RequiredDataTypeInInt
                          };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/TAPExecution/Save",
            traditional: true,
            data:  JSON.stringify(oTAPExecution),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var oTAPExecution = jQuery.parseJSON(data);
                if (oTAPExecution.ErrorMessage == "" || oTAPExecution.ErrorMessage == null)
                {
                    //alert("Data Saved sucessfully");
                    RefreshTAPExecutions(oTAPExecution.TTAPExecution.children);
                }
                else {
                    alert(oTAPExecution.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }


    function PickBuyer(sBuyerName)
    {
        debugger;
        var oContractor = { Params: 2 + '~' + sBuyerName+'~'+sessionStorage.getItem('BUID') };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBuyers',
                        winclass: 'clsBuyer',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblBuyers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Buyer List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else
            {
                alert("Data Not Found.");
                return;
            }
        });
    }
    $('#txtBuyerName').keydown(function (e) {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtBuyerName').val())==null || $.trim($('#txtBuyerName').val())=="")
            {
                alert("Type Buyer Name & Press Enter");
            }
            PickBuyer($.trim($('#txtBuyerName').val()));
        }else  if (code == 8) //backspace=8
        {
            //debugger;
            var txtBuyerName=document.getElementById("txtBuyerName");
            txtBuyerName.style.color="black";
            txtBuyerName.style.fontWeight="normal";
            $('#tblTAPExecution').data('BuyerID',0);
        }
    });

    
    //Factory Search  txtFactoryName
    function PickFactory(sFactoryName)
    {
        debugger;
        var oContractor = { Params: 3 + '~' + sFactoryName+'~'+sessionStorage.getItem('BUID') };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    debugger;
                    var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winFactorys',
                        winclass: 'clsFactory',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblFactorys',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Factory List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else
            {
                alert("Data Not Found.");
                return;
            }
        });
    }
    $('#txtFactoryName').keydown(function (e) {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtFactoryName').val())==null || $.trim($('#txtFactoryName').val())=="")
            {
                alert("Type Factory Name & Press Enter");
            }
            PickFactory($.trim($('#txtFactoryName').val()));
        }else  if (code == 8) //backspace=8
        {
            //debugger;
            var txtFactoryName=document.getElementById("txtFactoryName");
            txtFactoryName.style.color="black";
            txtFactoryName.style.fontWeight="normal";
            $('#tblTAPExecution').data('FactoryID',0);
        }
    });
      
    
    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            PickerEvents(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                PickerEvents(oPickerobj);
            }
        });
    }
    function PickerEvents(oPickerobj) {
        var oreturnobj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winclass == 'clsBuyer')
        {
            $('#txtBuyerName').val(oreturnobj.Name);
            $('#tblTAPExecution').data('BuyerID',oreturnobj.ContractorID);
            $('#txtBuyerName').focus();
            var txtBuyerName = document.getElementById("txtBuyerName");
            txtBuyerName.style.color = "blue";
            txtBuyerName.style.fontWeight = "bold";
        } else  if (oPickerobj.winclass == 'clsFactory')
        {
            $('#txtFactoryName').val(oreturnobj.Name);
            $('#tblTAPExecution').data('FactoryID',oreturnobj.ContractorID);
            $('#txtFactoryName').focus();
            var txtFactoryName = document.getElementById("txtFactoryName");
            txtFactoryName.style.color = "blue";
            txtFactoryName.style.fontWeight = "bold";
        } else  if (oPickerobj.winclass == 'clsTAP')
        {
           
            $('#txtPlanNo').val(oreturnobj.PlanNo);
            $('#txtOrderNo').val(oreturnobj.OrderRecapNo);
            $('#txtOrderDate').val(oreturnobj.OrderDateInString);
            $('#txtStyleNo').val(oreturnobj.StyleNo);
            $('#txtShipmentDate').val( oreturnobj.ShipmentDateInString);
            $('#txtOrderQty').val(formatPrice(oreturnobj.Quantity,0));
            GetOrderSteps(oreturnobj.TAPID);
            RefreshStyleImage(oreturnobj.TechnicalSheetID);          
        } 
    }


    function RefreshStyleImage(nTechnicalSheetID)
    {
        $.ajax({
            cache:true,
            type: "GET",
            url: "@(Url.Action("GetStyleImageInBase64", "TechnicalSheet"))",
            data: "id=" + nTechnicalSheetID,
        success: function (data) {
            //debugger;
            $('#imgCoverImage').attr('src', "data:image/jpg;base64," + data.base64imgage );
        }
    });
    }


</script>