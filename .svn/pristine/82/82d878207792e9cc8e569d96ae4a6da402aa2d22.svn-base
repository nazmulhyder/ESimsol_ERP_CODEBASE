@model ESimSol.BusinessObjects.RosterPlanEmployeeV2
@{
    ViewBag.Title = "Roster Plan";//V2
}
<div id="winRosterPlanEmployeeHistory" class="easyui-window winstyle" title="RosterPlan Employee History" style="width:950px;height:300px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <table id="tblRosterPlanEmployeeHistory" class="easyui-datagrid" style="width:100%;height:88%" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
        <thead>
            <tr>
                <th field="EmployeeCode" width="12%"> Employee Code </th>
                <th field="EmployeeName" width="12%"> Employee Name </th>
                <th field="DateInString" width="10%"> AttendanceDate </th>
                <th field="BUName" width="8%"> BusinessUnit </th>
                <th field="LocationName" width="6%"> Location</th>
                <th field="Department" width="8%"> Department</th>
                <th field="ShiftName" width="10%"> Shift</th>
                <th field="IsDayOffSt" width="6%"> IsDayoff</th>
                <th field="IsHolidaySt" width="6%">IsHoliday</th>
                <th field="UserName" width="7%">User</th>
                <th field="DateTimeInST" width="12%">DateTime</th>
            </tr>
        </thead>
    </table>
    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
        <tr>
            <td style="width:700px; text-align:right"></td>
            <td style="width:50px"></td>
            <td style="width:50px">
                <a id="winRosterPlanEmployeeHistoryClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
            </td>
        </tr>
    </table>
</div>


<div id="winUpdateRosterPlanEmployee" class="easyui-window winstyle" title="Manual Attendance" style="width:400px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
        <tr>
            <td style=" text-align: right">
                BusinessUnit :
            </td>
            <td>
                <input id="txtUpdateBUsinessUnit" style="width:200px;" type="text" placeholder="Type Business Unit"/>
                <a id="btnPickUpdateBUsinessUnit" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                <a id="btnResetUpdateBUsinessUnit" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
            </td>

            
        </tr>
        <tr>

            <td style=" text-align: right">
                Location  :
            </td>
            <td>
                <input id="txtUpdateLocation" style="width:200px;" type="text" placeholder="Type Location"  />
                <a id="btnPickUpdateLocation" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                <a id="btnResetUpdateLocation" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
            </td>

        </tr>
        <tr>
            <td style=" text-align: right">
                Department :
            </td>
            <td>
                <input id="txtUpdateDepartment" style="width:200px;" type="text" placeholder="Type Department" />
                <a id="btnPickUpdateDepartment" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                <a id="btnResetUpdateDepartment" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
            </td>

        </tr>
        <tr>
            <td style=" text-align: right">
                Shift :
            </td>
            <td>
                <input id="txtUpdateShift" style="width:200px;" type="text" placeholder="Type Shift"/>
                <a id="btnPickUpdateShift" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                <a id="btnResetUpdateShift" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
            </td>

        </tr>
        <tr>
            <td style=" text-align: right">
                EmployeeName :
            </td>
            <td>
                <input id="txtUpdateEmpName" style="width:200px;" type="text"  disabled/>
            </td>

        </tr>
        <tr>
            <td style=" text-align: right">
                EmployeeCode :
            </td>
            <td>
                <input id="txtUpdateEmpCode" style="width:200px;" type="text"  disabled />
            </td>

        </tr>
        <tr>
            <td style=" text-align: right">
                AttendanceDate :
            </td>
            <td>
                <input id="txtUpdateAttdDate" style="width:200px;" type="text"  disabled/>
            </td>

        </tr>

        <tr>
            <td></td>
            <td>
                <label>
                    <input id="chkUpdateDayOff" type="checkbox" />
                    DayOff
                </label>
            
            </td>

        </tr>

        <tr>
            <td></td>
            <td>
                <label>
                    <input id="chkUpdateHoliday" type="checkbox" />
                    Holiday
                </label>

            </td>

        </tr>
    </table>
    <fieldset>
        <legend style="font-weight:bold"> Action : </legend>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
            <tr>
                <td style="width:400px; text-align:left"><span id="spAttStatus"></span></td>

                <td style="width:50px">
                    <a id="btnRosterPlanEmployeeUpdate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Update</a>
                </td>
                <td style="width:50px">
                    <a id="btnUpdateRosterPlanEmployeeClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </td>
            </tr>
        </table>
    </fieldset>
</div>

<div id="winAddRosterPlanEmployee" class="easyui-window winstyle" title="Add Roster Plan" style="width:950px;height:450px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="width:100%">
        <div style="width:50%;float:left;height:350px">
            <fieldset style="height:99%">
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                   
  
                    <tr>
                        <td style=" text-align: right">
                            EmployeeCode :
                        </td>
                        <td>
                            <input id="txtAddEmployeeCode" style="width:150px;" type="text" placeholder="Type Code"  />
                            <a id="btnPickEmployeeCode" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnResetEmployeeCode" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                         
                        </td>

                        <td>
                            <select id="cboAddRoasterType" style="width:100%;">
                                <option value="2">--Select One--</option>
                                <option value="1">PIMS Roaster</option>
                                <option value="0">User Define</option>
                            </select>
                        </td>
                       
                    </tr>
                    <tr>
                        <td style=" text-align: right">
                            Employee Batch :
                        </td>
                        <td colspan="2">
                            <input id="txtAddEmployeeBatch" style="width:150px;" type="text" />
                            <a id="btnPickEmployeeBatch" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnResetEmployeeBatch" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>
                        <td></td>
                    </tr>

                </table>
            </fieldset>
        </div>
        
        <div style="width:50%;float:right;height:350px">
            <fieldset style="height:99%">
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                    <tr>
                        <td style=" text-align: right">
                            BusinessUnit :
                        </td>
                        <td>
                            <input id="txtAddBUsinessUnit" style="width:220px;" type="text" placeholder="Type Business Unit" />
                            <a id="btnPickBUsinessUnit" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnResetBUsinessUnit" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>


                    </tr>
                    <tr>

                        <td style=" text-align: right">
                            Location  :
                        </td>
                        <td>
                            <input id="txtAddLocation" style="width:220px;" type="text" placeholder="Type Location" />
                            <a id="btnPickLocation" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnResetLocation" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>

                    </tr>
                    <tr>
                        <td style=" text-align: right">
                            Department :
                        </td>
                        <td>
                            <input id="txtAddDepartment" style="width:220px;" type="text" placeholder="Type Department" />
                            <a id="btnPickDepartment" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnResetDepartment" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>

                    </tr>
                    <tr>
                        <td style=" text-align: right">
                            Shift :
                        </td>
                        <td>
                            <input id="txtAddShift" style="width:220px;" type="text" placeholder="Type Shift" />
                            <a id="btnPickAddShift" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnResetAddShift" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>

                    </tr>

                    <tr>
                        <td style=" text-align: right">
                            Remarks :
                        </td>
                        <td>
                            <input id="txtRemarks" style="width:220px;" type="text" />
                        </td>

                    </tr>
                   
                    <tr>
                        <td style=" text-align: right">
                            AttendanceDate :
                        </td>
                        <td>
                            <input type="text" style="width:105px;" id="txtAttendanceStartDate" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />To
                            <input type="text" style="width:105px;" id="txtAttendanceEndDate" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>

                    </tr>
                   
                    <tr>
                        <td></td>
                        <td>
                            <label>
                                <input id="chkAddDayOff" type="checkbox" />
                                DayOff
                            </label>

                        </td>

                    </tr>

                    <tr>
                        <td></td>
                        <td>
                            <label>
                                <input id="chkAddHoliday" type="checkbox" />
                                Holiday
                            </label>

                        </td>

                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
    <fieldset>
        <legend style="font-weight:bold"> Action : </legend>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
            <tr>
                <td style="width:600px; text-align:left"><span id="spAttStatus"></span></td>

                <td style="width:50px">
                    <a id="btnCommitRosterPlanEmployee" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Commit</a>
                </td>
                <td style="width:50px">
                    <a id="btnCloseRosterPlanEmployee" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </td>
            </tr>
        </table>
    </fieldset>
</div>

<div class="menuMainCollectionTable" style="margin-left: 0px; width:1030px; height:100%">
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <table id="tblRosterPlanEmployee" title="Roster Plan List" class="easyui-datagrid" style="width:100%;height:100%" fitcolumns="true" rownumbers="true" showfooter="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbar" selectoncheck="false" checkonselect="false">
         

        <thead>
            <tr>
                <th field="EmployeeCode" width="80px;"> Employee Code </th>
                <th field="EmployeeName" width="100px;"> Employee Name </th>
                <th field="DateInString" width="100px;"> AttendanceDate </th>
                <th field="BUName" width="70px;"> BusinessUnit </th>
                <th field="LocationName" width="45"> Location</th>
                <th field="Department" width="45"> Department</th>
                <th field="ShiftName" width="80"> Shift</th>
                <th field="IsDayOffSt" width="80"> IsDayoff</th>
                <th field="IsHolidaySt" width="40">IsHoliday</th>
                <th field="UserName" width="40">User</th>
            </tr>
        </thead>
    </table>

    <div id="toolbar" style="height:auto">
        <table border="0" cellpadding="2" cellspacing="1" style="border-collapse:separate">
            <tr>
                <td colspan="2">
                    <input id="dtStartDate" type="text" style="width: 110px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    <input id="dtEndDate" type="text" style="width: 110px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    <input id="txtBusinessUnit_Collection" type="text" style="width:12%;" placeholder="Pick Business Unit" />
                    <a id="btnBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                    <a id="btnResetBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

                    <input id="txtLocation_Colection" style="width:12%;" placeholder="Pick Location" type="text" />
                    <a id="btnLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                    <a id="btnResetLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

                    <input id="txtDepartment_Collection" style="width:12%;" type="text" placeholder="Pick Department" />
                    <a id="btnDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                    <a id="btnResetDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

                    <input id="txtEmployee_Collection" style="width:12%;" type="text" placeholder="Type Code & Enter" />
                    <a id="btnEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                    <a id="btnCEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
                </td>
               
            </tr>
            <tr>
               
              
                <td style="width:200px; border:1px solid black; text-align:center">
                    <input type="button" id="btnAdvSearch" style="width:60%" value="Adv Search" />
                    <input type="button" id="btnAdvSearchClear" style="width:35%" value="Rest" />
                </td>
                <td>
                    S. Range :
                    <input id="txtStartSalaryRange" type="text" style="width:12%" /> To
                    <input id="txtEndSalaryRange" type="text" style="width:12%" />
                    Roaster Type:
                    <select id="cboRoasterType" style="width:13%;">
                        <option value="2">--Select One--</option>
                        <option value="1">PIMS Roaster</option>
                        <option value="0">User Define</option>
                    </select>
                    <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="Search(0,0)"></a>
                    <a id="btnExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true"></a>
                    <a id="btnRosterPlanEmpHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">RosterPlan History</a>
                    <a id="btnAddRosterPlanEmployee" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add Plan</a>
                </td>
            </tr>

        </table>
    </div>

    <div id="winAdvSearch" class="easyui-window winClass" style="width:650px;height:400px" title="Adv. Search" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <fieldset style="margin-bottom: 0px;">
            <legend>Searching Criteria</legend>
            <table style="width:100%;text-align:right;">
                <tr>
                    <td style=" width:25%;text-align:right;">
                        <label>Employee Designation :</label>
                    </td>
                    <td colspan="3" style=" width:75%;text-align:left;">
                        <input id="txtDesignation" class="reset-text" placeholder="Enter Designation" style="width:80%" />
                        <a id="btnPickDesignation" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                        <a id="btnResetDesignation" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                    </td>
                </tr>

                <tr>
                    <td style=" width:25%;text-align:right;">
                        <label>Salary Scheme:</label>
                    </td>
                    <td colspan="3" style=" width:75%;text-align:left;">
                        <input id="txtSalaryScheme" class="reset-text" placeholder="Enter Salary Scheme" style="width:80%" />
                        <a id="btnPickSalaryScheme" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                        <a id="btnResetSalaryScheme" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                    </td>
                </tr>
                <tr>
                    <td style=" width:25%;text-align:right;">
                        <label>Attendance Scheme:</label>
                    </td>
                    <td colspan="3" style=" width:75%;text-align:left;">
                        <input id="txtAttendanceScheme" class="reset-text" placeholder="" disabled="disabled" style="width:80%" />
                        <a id="btnPickAttendanceScheme" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                        <a id="btnResetAttendanceScheme" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                    </td>
                </tr>
                <tr>
                    <td style=" width:25%;text-align:right;">
                        <label>Employee Group :</label>
                    </td>
                    <td colspan="3" style=" width:75%;text-align:left;">
                        <input id="txtEmployeeGroup" style="width:80%;" type="text" placeholder="Enter Group" />
                        <a id="btnEmployeeGroupPicker" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                        <a id="btnEmployeeGroupPickerReset" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                    </td>
                </tr>

                <tr>
                    <td style=" width:25%;text-align:right;">
                        <label>Employee Block :</label>
                    </td>
                    <td colspan="3" style=" width:75%;text-align:left;">
                        <input id="txtEmployeeBlock" style="width:80%;" type="text" placeholder="Enter Block" />
                        <a id="btnEmployeeBlockPicker" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                        <a id="btnEmployeeBlockReset" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                    </td>
                </tr>

                <tr>
                    <td style=" width:25%;text-align:right;">
                        <label>Employee Type :</label>
                    </td>
                    <td colspan="3" style=" width:75%;text-align:left;">
                        <input id="txtEmployeeType" class="reset-text" placeholder="Enter Employee Type" style="width:80%" />
                        <a id="btnPickEmployeeType" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                        <a id="btnResetEmployeeType" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                    </td>
                </tr>
                <tr>
                    <td style=" width:25%;text-align:right;">
                        <label>Employee Shift :</label>
                    </td>
                    <td colspan="3" style=" width:75%;text-align:left;">
                        <input id="txtShift" class="reset-text" placeholder="Enter Shift" style="width:80%" />
                        <a id="btnPickShift" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                        <a id="btnResetShift" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                    </td>
                </tr>
                <tr>
                    <td style=" width:25%;text-align:right;">
                        <label>Joining Date:</label>
                    </td>

                    <td colspan="3" style=" width:75%;text-align:right;">
                        <table style=" width:100%;text-align:left;">
                            <tr>
                                <td style=" width:40%;text-align:left;">
                                    <input type="checkbox" id="chkJoiningDate" />
                                    <input id="txtJoiningStartDate" type="text" style="width: 120px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                </td>
                                <td style="width:10%">To</td>
                                <td style=" width:40%;text-align:left;">

                                    <input id="txtJoiningEndDate" type="text" style="width: 137px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                </td>
                                <td style="width:10%"></td>

                            </tr>
                        </table>
                    </td>
                </tr>

                <tr>
                    <td style=" width:25%;text-align:right;">
                        <label>Employee Category:</label>
                    </td>
                    <td style=" width:25%;text-align:left;">
                        <select id="cboEmpCategory" style="width:90%;"></select>
                    </td>
                    <td style=" width:20%;text-align:right;">
                        <label> Authentication No :</label>
                    </td>
                    <td style=" width:30%;text-align:left;">
                        <input id="txtAuthenticationNo" style="width:50%;" type="text" />
                    </td>

                </tr>


            </table>
        </fieldset>

        <fieldset>
            <legend>Actions : </legend>
            <table style="width:100%;text-align:right;">
                <tr>
                    <td style="width:20%;text-align:right;"></td>
                    <td style="width:80%;text-align:right;">
                        <a id="btnOkAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        <a id="btnCloseAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>

    <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="locationtree" data-options="checkbox:true" singleselect="false"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>


    <div id="winDepartment" class="easyui-window" title="Department List" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <fieldset style="margin-left:2px; margin-top :2px">
            <div style="width: 100%; height: 400px; overflow: auto">
                <ul id="ttDepartment" singleselect="true"></ul>
            </div>
        </fieldset>
        <fieldset>
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; font-family: Tahoma">
                <tr>
                    <td style="width: 400px; text-align: right"></td>
                    <td style="width: 50px">
                        <a id="btnUpdateDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                    </td>
                    <td style="width: 50px">
                        <a id="btnCloseDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>

    <div id="winAddDepartment" class="easyui-window" title="Department List" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <fieldset style="margin-left:2px; margin-top :2px">
            <div style="width: 100%; height: 400px; overflow: auto">
                <ul id="ttDepartmentAdd" singleselect="true"></ul>
            </div>
        </fieldset>
        <fieldset>
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; font-family: Tahoma">
                <tr>
                    <td style="width: 400px; text-align: right"></td>
                    <td style="width: 50px">
                        <a id="btnAddDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                    </td>
                    <td style="width: 50px">
                        <a id="btnCloseAddDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
    <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
            </div>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

</div>

<style type="text/css">
    .lblStar {
        color: #ff0000;
        font-weight: bold;
    }

    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>

<script type="text/javascript">
    $(document).ready(function ()
    {
        //debugger;
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();

        $("#cboEmpCategory").data("EmployeeCategorys",oEmployeeCategorys);
  
        RefreshAdvSearch();
        RefreshControl();
    });

    $(document).keyup(function(e) {
        if (e.keyCode === 27)
        {

            $("#winUpdateRosterPlanEmployee").icsWindow('close');

            $("#winRosterPlanEmployeeHistory").icsWindow('close');
            DynamicRefreshList([],'tblRosterPlanEmployeeHistory');
        }
    });
    $("#btnRosterPlanEmpHistory").click(function(e){
        var oAttendanceDaily=$("#tblRosterPlanEmployee").datagrid('getSelected');
        if(oAttendanceDaily==null || parseInt(oAttendanceDaily.RPEID)<=0)
        {
            alert("Please Select an item from List");
            return;
        }
        var oRosterPlanEmployee={RPEID: parseInt(oAttendanceDaily.RPEID)} 
        var obj =
        {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oRosterPlanEmployee,
            ControllerName: "RosterPlanV2",
            ActionName: "GetsRosterPlanEmployeeHistory",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs != null)
            {
                if (response.objs.length>0 && response.objs[0].ErrorMessage=="") {
                    $("#winRosterPlanEmployeeHistory").icsWindow('open');
                    DynamicRefreshList(response.objs,'tblRosterPlanEmployeeHistory');
                }
                else{
                    alert(response.objs[0].ErrorMessage);
                }
            }
        });
    });

    $("#btnAddRosterPlanEmployee").click(function(e){
        $('#txtAddEmployeeCode').val("");
        $("#txtAddEmployeeCode").removeClass("fontColorOfPickItem");
        $('#txtAddEmployeeCode').data("EmployeeIDs","");
        $('#txtAddEmployeeBatch').val("");
        $("#txtAddEmployeeBatch").removeClass("fontColorOfPickItem");
        $('#txtAddEmployeeBatch').data("EmployeeBatchID",0);
        $('#txtAddBUsinessUnit').val("");
        $("#txtAddBUsinessUnit").removeClass("fontColorOfPickItem");
        $('#txtAddBUsinessUnit').data('BusinessUnitID', 0);
        $('#txtAddLocation').val("");
        $("#txtAddLocation").removeClass("fontColorOfPickItem");
        $('#txtAddLocation').data('LocationID', 0);
        $('#txtAddDepartment').val("");
        $("#txtAddDepartment").removeClass("fontColorOfPickItem");
        $('#txtAddDepartment').data('DepartmentID', 0);
        $('#txtAddShift').val("");
        $("#txtAddShift").removeClass("fontColorOfPickItem");
        $('#txtAddShift').data('ShiftID', 0);
        $('#chkAddDayOff').prop('checked', false);
        $('#chkAddHoliday').prop('checked', false);
        $('#txtRemarks').val("");
        $('#txtAttendanceStartDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtAttendanceEndDate').datebox('setValue', icsdateformat(new Date()));
        $("#cboAddRoasterType").val(2);
        $("#winAddRosterPlanEmployee").icsWindow('open');
    });

    $("#btnCloseRosterPlanEmployee").click(function(e){
        $("#winAddRosterPlanEmployee").icsWindow('close');
    });

    $("#winRosterPlanEmployeeHistoryClose").click(function(e){
        $("#winRosterPlanEmployeeHistory").icsWindow('close');
        DynamicRefreshList([],'tblRosterPlanEmployeeHistory');
    });
    function updateProgress()
    {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 5);
            $('#progressbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds)
    {
        $("#progressbarParent").hide();
    }

    function RefreshControl()
    {
        $('#dtStartDate').datebox('setValue', icsdateformat(new Date()));
        $('#dtEndDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtStartSalaryRange,#txtEndSalaryRange').icsCurrencyBox(null, null, 2);
        $("#cboRoasterType").val(2);
        $("#btnSearch").data("RosterPlanEmployees",[]);
        $("#btnSearch").data("TotalAttendanceCount",0);
        $("#btnSearch").data("PrevPageNum",1);

        $("#txtLocation_Colection").data("LocationIDs","");
        $("#txtDepartment_Collection").data("DepartmentIDs","");
        $("#txtEmployee_Collection").data("EmployeeIDs","");
        $("#txtBusinessUnit_Collection").data("BusinessUnitIDs","");
       
    }


    function RefreshObject()
    {
        var oHCMSearchObj={
            BUIDs : $("#txtBusinessUnit_Collection").data("BusinessUnitIDs"),
            EmployeeIDs : $("#txtEmployee_Collection").data("EmployeeIDs"),
            LocationIDs : $("#txtLocation_Colection").data("LocationIDs"),
            DepartmentIDs : $("#txtDepartment_Collection").data("DepartmentIDs"),
            StartDate : $('#dtStartDate').datebox('getValue'),
            EndDate : $('#dtEndDate').datebox('getValue'),
            BlockIDs:$("#txtEmployeeBlock").data("BlockIDs"),
            GroupIDs:$("#txtEmployeeGroup").data("GroupIDs"),
            StartSalaryRange:parseFloat(icsRemoveComma($("#txtStartSalaryRange").val())),
            EndSalaryRange:parseFloat(icsRemoveComma($("#txtEndSalaryRange").val())),
            SalarySchemeIDs:$("#txtSalaryScheme").data("SalarySchemeIDs"),
            AttendanceSchemeIDs:$("#txtAttendanceScheme").data("AttendanceSchemeIDs"),
            ShiftIDs: $("#txtShift").data("ShiftIDs"),
            EmployeeTypeIDs: $("#txtEmployeeType").data("EmployeeTypeIDs"),
            DesignationIDs:$("#txtDesignation").data("DesignationIDs"),
            IsJoiningDate:$("#chkJoiningDate").is(':checked'),
            JoiningStartDate:$('#txtJoiningStartDate').datebox('getValue'),
            JoiningEndDate:$('#txtJoiningEndDate').datebox('getValue'),
            AuthenticationNo:$.trim($('#txtAuthenticationNo').val()),
            CategoryID:parseInt($("#cboEmpCategory").val()),
            PIMSRoaster:parseInt($("#cboRoasterType").val())
        }
        return oHCMSearchObj;
    }

    function ValidateInput()
    {
        //debugger;
        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');
        var dStartDate = new Date(dtDateFrom);
        var dEndDate =  new Date(dtDateTo);
        if(dEndDate<dStartDate)
        {
            alert("Start Date Mustbe Smaller than End Date");
            return false;
        }
        var bIsJoiningDate=$("#chkJoiningDate").is(':checked');
        if(bIsJoiningDate)
        {
            var sJoiningStDate=$('#txtJoiningStartDate').datebox('getValue');
            var sJoiningEnDate=$('#txtJoiningEndDate').datebox('getValue');
            var dJoiningStDate=new Date(sJoiningStDate);
            var dJoiningEnDate=new Date(sJoiningEnDate);
            if(dJoiningEnDate<dJoiningStDate)
            {
                alert("Start Date Mustbe Smaller than End Date");
                return false;
            }
        }
        var nStartSalaryRange =parseFloat(icsRemoveComma($("#txtStartSalaryRange").val()));
        var nEndSalaryRange =parseFloat(icsRemoveComma($("#txtEndSalaryRange").val()));
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return false;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return false;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return false;
            }
        }

        var sBlockIDs=$("#txtEmployeeBlock").data("BlockIDs");
        var sGroupIDs=$("#txtEmployeeGroup").data("GroupIDs");
        var sLocationIDs=$("#txtLocation_Colection").data("LocationIDs");
        var sDepartmentIds=$("#txtDepartment_Collection").data("DepartmentIDs");
        var sEmployeeIDs=$("#txtEmployee_Collection").data("EmployeeIDs");
        var sBusinessUnitIds=$("#txtBusinessUnit_Collection").data("BusinessUnitIDs");
        var sSalarySchemeIDs=$("#txtSalaryScheme").data("SalarySchemeIDs");
        var sAttendanceSchemeIDs=$("#txtAttendanceScheme").data("AttendanceSchemeIDs");
        var sShiftIDs= $("#txtShift").data("ShiftIDs");
        var sEmployeeTypeIDs= $("#txtEmployeeType").data("EmployeeTypeIDs");
        var sDesignationIDs=$("#txtDesignation").data("DesignationIDs");
        var sAuthenticationNo=$.trim($('#txtAuthenticationNo').val());
        var nEmpCategoryID=parseInt($("#cboEmpCategory").val());
        if(sEmployeeIDs == "" && sLocationIDs=="" && sDepartmentIds=="" && sBusinessUnitIds=="" && nStartSalaryRange<=0 && nEndSalaryRange<=0 && sBlockIDs=="" && sGroupIDs=="" && sSalarySchemeIDs==""&&sAttendanceSchemeIDs=="" && sShiftIDs=="" && sEmployeeTypeIDs=="" && sDesignationIDs=="" && bIsJoiningDate==false && sAuthenticationNo=="" && nEmpCategoryID<=0)
        {
            alert("Please enter at lest one searching criteria with date !");
            return false;
        }
        return true;
    }

  

    $("#btnUpdateRosterPlanEmployeeClose").click(function(e){
      
        $('#txtRemark').val('');
        $("#winUpdateRosterPlanEmployee").icsWindow('close');
    });

    $('#btnExcel').click(function (e){
        //debugger;
        if(!ValidateInput())return;
      
        var oHCMSearchObj=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem("BaseAddress")+  "/RosterPlanV2/SetSessionSearchCriteria",
            traditional: true,
            data:  JSON.stringify(oHCMSearchObj),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var sFeedBackMessage = jQuery.parseJSON(data);
                if (sFeedBackMessage==="Successful") {
                    var tsv=((new Date()).getTime())/1000;
                    window.open(sessionStorage.getItem("BaseAddress")+'/RosterPlanV2/ExcelRosterPlanEmployee?ts='+tsv,"_blank");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });


    });

 
    /*---------------- emp Search Start click----------------*/

    function ValidateAddRosterPlanInput()
    {
        if(parseInt($("#cboAddRoasterType").val())==2)//2 Means Select one
        {
            alert("Please select a Roster Type");
            return false;
        }
        if($("#txtAddEmployeeCode").data("EmployeeIDs")==""&&parseInt($("#txtAddEmployeeBatch").data("EmployeeBatchID"))<=0)
        {
            alert("Please Select One Employee Or Employee Batch");
            return false;
        }

        if(parseInt($("#cboAddRoasterType").val())!=1)//1 Means PIMS
        {
            if(parseInt($("#txtAddBUsinessUnit").data("BusinessUnitID"))<=0)
            {
                alert("Please Select BusinessUnit");
                return false;
            }

            if(parseInt($("#txtAddLocation").data("LocationID"))<=0)
            {
                alert("Please Select Location");
                return false;
            }

            if(parseInt($("#txtAddDepartment").data("DepartmentID"))<=0)
            {
                alert("Please Select Department");
                return false;
            }
        }
     

        if(parseInt($("#txtAddShift").data("ShiftID"))<=0)
        {
            alert("Please Select Shift");
            return false;
        }

        var dtDateFrom = $('#txtAttendanceStartDate').datebox('getValue');
        var dtDateTo = $('#txtAttendanceEndDate').datebox('getValue');
        var dStartDate = new Date(dtDateFrom);
        var dEndDate =  new Date(dtDateTo);
        if(dEndDate<dStartDate)
        {
            alert("Start Date Mustbe Smaller than End Date");
            return false;
        }

        return true;
    }


    $("#cboAddRoasterType").click(function () {
        if(parseInt($("#cboAddRoasterType").val())==1)//1 for PIMS
        {
            $("#txtAddBUsinessUnit").val("");
            $("#txtAddBUsinessUnit").data("BusinessUnitID",0);
            $("#txtAddBUsinessUnit").attr('disabled',true);
            $("#btnPickBUsinessUnit").prop('disabled',true);

            $("#txtAddLocation").val("");
            $("#txtAddLocation").data("LocationID",0);
            $("#txtAddLocation").attr('disabled',true);
            $("#btnPickLocation").prop('disabled',true);

            $("#txtAddDepartment").val("");
            $("#txtAddDepartment").data("DepartmentID",0);
            $("#txtAddDepartment").attr('disabled',true);
            $("#btnPickDepartment").prop('disabled',true);
        }
        else
        {
            $("#txtAddBUsinessUnit").attr('disabled',false);
            $("#btnPickBUsinessUnit").prop('disabled',false);

            $("#txtAddLocation").attr('disabled',false);
            $("#btnPickLocation").prop('disabled',false);

            $("#txtAddDepartment").attr('disabled',false);
            $("#btnPickDepartment").prop('disabled',false);

        }
    });

    function RefreshCommitRosterPlanEmployee()
    {
        var oRosterPlanEmployee ={
            
            EmployeeIDs:$('#txtAddEmployeeCode').data("EmployeeIDs"),
            EmployeeBatchID:parseInt($('#txtAddEmployeeBatch').data("EmployeeBatchID")),
            BusinessUnitID:parseInt($("#txtAddBUsinessUnit").data("BusinessUnitID")),
            LocationID:parseInt($("#txtAddLocation").data("LocationID")),
            DepartmentID:parseInt($("#txtAddDepartment").data("DepartmentID")),
            ShiftID:parseInt($("#txtAddShift").data("ShiftID")),
            IsDayOff:$('#chkAddDayOff').is(':checked'),
            IsHoliday:$('#chkAddHoliday').is(':checked'),
            Remarks:$.trim($('#txtRemarks').val()),
            StartDate:$('#txtAttendanceStartDate').datebox('getValue'),
            EndDate:$('#txtAttendanceEndDate').datebox('getValue'),
            IsPIMSRoaster:parseInt($("#cboAddRoasterType").val())==2?0:parseInt($("#cboAddRoasterType").val())

        };
        return oRosterPlanEmployee;
    }
    $("#btnCommitRosterPlanEmployee").click(function () {
        debugger;
        if(!ValidateAddRosterPlanInput()) return;
        var oRosterPlanEmployee=RefreshCommitRosterPlanEmployee();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/RosterPlanV2/CommitRosterPlanEmployee",
            traditional: true,
            data: JSON.stringify(oRosterPlanEmployee),
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {   
                var oRosterPlanEmployees = jQuery.parseJSON(data);
                if (oRosterPlanEmployees[0].ErrorMessage=="")
                {
                    alert("Data Committed sucessfully");
                    $("#winAddRosterPlanEmployee").icsWindow('close');
                    DynamicRefreshList(oRosterPlanEmployees,'tblRosterPlanEmployee');
                }
                else 
                {
                    alert(oRosterPlanEmployees[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });
    
    $("#btnPickEmployeeCode").click(function () {
        var sCodeName = $.trim($("#txtAddEmployeeCode").val());
        if(sCodeName==''){alert("Please enter name or code to search.");$("#txtAddEmployeeCode").focus(); return;}
        SearchEmployeeByTextAdd(sCodeName);
    });
    $("#btnPickEmployeeBatch").click(function () {
        var sCodeName = $.trim($("#txtAddEmployeeBatch").val());
        PickEmployeeBatch(sCodeName);
    });

    $("#btnEmployee").click(function () {
        var sCodeName = $.trim($("#txtEmployee_Collection").val());
        if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
        SearchEmployeeByText(sCodeName);
    });

    /*-------------Business Unit Picker----------------*/
    $("#btnBusinessUnitPicker_Collection").click(function(e){
        BusinessUnitPicker();
    });
    $("#btnPickBUsinessUnit").click(function(e){
        AddBusinessUnitPicker();
    });
    $("#btnPickUpdateBUsinessUnit").click(function(e){
        UpdateBusinessUnitPicker();
    });

    $("#txtBusinessUnit_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            BusinessUnitPicker();
        }
    });
    $("#txtUpdateBUsinessUnit").keydown(function(e){
        if (e.which == 13)//enter=13
        {
            UpdateBusinessUnitPicker();
        }
        if (e.which == 8) //backspace=8
        {
            $("#txtUpdateBUsinessUnit").removeClass("fontColorOfPickItem");
            $('#txtUpdateBUsinessUnit').data('BusinessUnitID', 0);
        }
    });

    $("#txtAddBUsinessUnit").keydown(function(e){
        if (e.which == 13)//enter=13
        {
            AddBusinessUnitPicker();
        }
        if (e.which == 8) //backspace=8
        {
            $("#txtAddBUsinessUnit").removeClass("fontColorOfPickItem");
            $('#txtAddBUsinessUnit').data('BusinessUnitID', 0);
        }
    });

    function UpdateBusinessUnitPicker()
    {
        debugger;
        var oBusinessUnit={
            BusinessUnitID:0
        };
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oBusinessUnit,
            ControllerName: "BusinessUnit",
            ActionName: "GetsBusinessUnitWithPermission",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BusinessUnitID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;

                    var oPickerParam = {
                        winid: 'winBusinessUnit',
                        winclass:'clsBusinessUnit',
                        winwidth: 320,
                        winheight: 400,
                        tableid: 'tblBusinessUnit',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Business Unit List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeUpdateBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function AddBusinessUnitPicker()
    {
        debugger;
        var oBusinessUnit={
            BusinessUnitID:0
        };
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oBusinessUnit,
            ControllerName: "BusinessUnit",
            ActionName: "GetsBusinessUnitWithPermission",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BusinessUnitID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;

                    var oPickerParam = {
                        winid: 'winBusinessUnit',
                        winclass:'clsBusinessUnit',
                        winwidth: 320,
                        winheight: 400,
                        tableid: 'tblBusinessUnit',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Business Unit List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAddBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    function IntializeUpdateBusinessUnitPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            
            var oBusinessUnit = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winBusinessUnit')
            {
                if(oBusinessUnit!=null)
                {
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                   
                    $("#txtUpdateBUsinessUnit").data("BusinessUnitID",oBusinessUnit.BusinessUnitID);
                    $("#txtUpdateBUsinessUnit").val(oBusinessUnit.Name);
                    $("#txtUpdateBUsinessUnit").addClass("fontColorOfPickItem");
                }
                else
                {
                    alert("Please select a Business Unit.");
                }
            }
        });
    }

    function IntializeAddBusinessUnitPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            
            var oBusinessUnit = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winBusinessUnit')
            {
                if(oBusinessUnit!=null)
                {
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                   
                    $("#txtAddBUsinessUnit").data("BusinessUnitID",oBusinessUnit.BusinessUnitID);
                    $("#txtAddBUsinessUnit").val(oBusinessUnit.Name);
                    $("#txtAddBUsinessUnit").addClass("fontColorOfPickItem");
                }
                else
                {
                    alert("Please select a Business Unit.");
                }
            }
        });
    }
    function BusinessUnitPicker()
    {
        var oBusinessUnit={
            BusinessUnitID:0
        };
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oBusinessUnit,
            ControllerName: "BusinessUnit",
            ActionName: "GetsBusinessUnitWithPermission",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BusinessUnitID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBusinessUnit',
                        winclass:'clsBusinessUnit',
                        winwidth: 320,
                        winheight: 400,
                        tableid: 'tblBusinessUnit',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Business Unit List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBusinessUnitPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBusinessUnits=[];
            oBusinessUnits = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBusinessUnit')
            {
                if(oBusinessUnits!=null && oBusinessUnits.length>0)
                {
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sBusinessUnitIds = "";
                    for(var i=0; i<oBusinessUnits.length; i++)
                    {
                        sBusinessUnitIds+=oBusinessUnits[i].BusinessUnitID+",";
                    }
                    sBusinessUnitIds=sBusinessUnitIds.substring(0,sBusinessUnitIds.length-1);
                    $("#txtBusinessUnit_Collection").data("BusinessUnitIDs",sBusinessUnitIds);
                    $("#txtBusinessUnit_Collection").val(oBusinessUnits.length+" 's BusinessUnit Selected");
                    $("#txtBusinessUnit_Collection").addClass("fontColorOfPickItem");
                }
                else
                {
                    alert("Please select a Business Unit.");
                }
            }
        });
    }

    $("#btnResetBusinessUnitPicker_Collection").click(function(e){
        $('#txtBusinessUnit_Collection').val("");
        $("#txtBusinessUnit_Collection").data("BusinessUnitIDs","");
        $("#txtBusinessUnit_Collection").removeClass("fontColorOfPickItem");
    });
    $("#btnResetUpdateBUsinessUnit").click(function(e){
        $('#txtUpdateBUsinessUnit').val("");
        $("#txtUpdateBUsinessUnit").data("BusinessUnitID",0);
        $("#txtUpdateBUsinessUnit").removeClass("fontColorOfPickItem");
    });

    $("#btnResetBUsinessUnit").click(function(e){
        $('#txtAddBUsinessUnit').val("");
        $("#txtAddBUsinessUnit").data("BusinessUnitID",0);
        $("#txtAddBUsinessUnit").removeClass("fontColorOfPickItem");
    });
    /*-------------Location Picker----------------*/
    var btnLocation="";
    $("#btnLocationPicker_Colection").click(function(e){
        btnLocation = $(this).attr("id");
        var sBusinessUnitIDs ="";

        sBusinessUnitIDs=$("#txtBusinessUnit_Collection").data("BusinessUnitIDs");;
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });


    $('#txtLocation_Colection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            btnLocation = $(this).attr("id");
            var sBusinessUnitIDs ="";

            sBusinessUnitIDs=$("#txtBusinessUnit_Collection").data("BusinessUnitIDs");
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };
            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        }
    });



    $("#btnResetLocationPicker_Colection").click(function(e){
        $('#txtLocation_Colection').val("");
        $("#txtLocation_Colection").data("LocationIDs","");
        $("#txtLocation_Colection").removeClass("fontColorOfPickItem");
    });



    /*-----Location Picker Update--------*/


    /*-------------Department Picker----------------*/



    $("#btnDepartmentPickerClose_Collection").click(function(e){
        $("#winDepartmentPicker_Collection").icsWindow('close');
        $("#txtDepartment_Collection").data("DepartmentIDs","");
        $("#txtDepartment_Collection").removeClass("fontColorOfPickItem");
    });

    $("#btnResetDepartmentPicker_Collection").click(function(e){
        $('#txtDepartment_Collection').val("");
        $("#txtDepartment_Collection").data("DepartmentIDs","");
        $("#txtDepartment_Collection").removeClass("fontColorOfPickItem");
    });


    /*---------------- emp Search Start keyprees----------------*/
    $('#txtEmployee_Collection').keypress(function (e)
    {
        debugger
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee_Collection").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
            SearchEmployeeByText(sCodeName);
        }
    });
    $('#txtAddEmployeeCode').keypress(function (e)
    {
        debugger
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtAddEmployeeCode").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtAddEmployeeCode").focus(); return;}
            SearchEmployeeByTextAdd(sCodeName);
        }
    });

    function SearchEmployeeByText(sEmpNameCode){
        //debugger;
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function SearchEmployeeByTextAdd(sEmpNameCode){
        //debugger;
        debugger;
        
        var oEmployee = {

            Name:sEmpNameCode

        };
      
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oEmployee,
            ControllerName: "RosterPlanV2",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearchAdd',
                        winclass:'clsEmployeePickerTextSearchAdd',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearchAdd',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearchAdd(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function PickEmployeeBatch(sEmpNameCode){
        //debugger;
        debugger;
        
        var oEmployeeBatch = {

            BatchName:sEmpNameCode

        };
      
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oEmployeeBatch,
            ControllerName: "RosterPlanV2",
            ActionName: "GetsEmployeeBatch",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeBatchID > 0) {

                    var tblColums = [];var oColumn = { field: "BatchNo", title: "BatchNo", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "BatchName", title: "Batch Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmpCount", title: "Total Employee", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeeBatch',
                        winclass:'clsEmployeeBatch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeeBatch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'BatchNo',
                        windowTittle: 'Employee Batch list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeeBatchPicker(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeeBatchPicker(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeBatchID<=0){  alert("please select an Employee Batch."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeeBatch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeBatchID > 0)
                {
                    $("#txtAddEmployeeBatch").data("EmployeeBatchID",oreturnObj.EmployeeBatchID);
                    $("#txtAddEmployeeBatch").val(oreturnObj.BatchNo);
                    $("#txtAddEmployeeBatch").addClass("fontColorOfPickItem");
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeBatchID<=0){  alert("please select an Employee Batch."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'winEmployeeBatch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeBatchID > 0)
                    {
                        $("#txtAddEmployeeBatch").data("EmployeeBatchID",oreturnObj.EmployeeBatchID);
                        $("#txtAddEmployeeBatch").val(oreturnObj.BatchNo);
                        $("#txtAddEmployeeBatch").addClass("fontColorOfPickItem");
                    }
                }
            }
        });
    }
    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    $("#txtEmployee_Collection").data("EmployeeIDs",oreturnObj.EmployeeID);
                    $("#txtEmployee_Collection").val(oreturnObj.Name);
                    $("#txtEmployee_Collection").addClass("fontColorOfPickItem");
                    $("#winEmployeePicker").icsWindow('close');
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        $("#txtEmployee_Collection").data("EmployeeIDs",oreturnObj.EmployeeID);
                        $("#txtEmployee_Collection").val(oreturnObj.Name);
                        $("#txtEmployee_Collection").addClass("fontColorOfPickItem");
                        $("#winEmployeePicker").icsWindow('close');
                    }
                }
            }
        });
    }

    function IntializeEmployeePickerTextSearchAdd(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if(oreturnObjs == null || oreturnObjs.length<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearchAdd')
            {
                if (oreturnObjs != null && oreturnObjs.length > 0)
                {
                    var sEmployeeIDs="";
                    for(var i=0; i<oreturnObjs.length; i++)
                    {
                        sEmployeeIDs+=oreturnObjs[i].EmployeeID+",";
                    }
                    sEmployeeIDs=sEmployeeIDs.substring(0,sEmployeeIDs.length-1);

                    $("#txtAddEmployeeCode").data("EmployeeIDs",sEmployeeIDs);
                    $("#txtAddEmployeeCode").val(oreturnObjs.length+" Employee Selected");
                    $("#txtAddEmployeeCode").addClass("fontColorOfPickItem");
                    //$("#winEmployeePicker").icsWindow('close');
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
                if(oreturnObjs == null || oreturnObjs.length<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearchAdd')
                {
                    if (oreturnObjs != null && oreturnObjs.length > 0)
                    {
                        var sEmployeeIDs="";
                        for(var i=0; i<oreturnObjs.length; i++)
                        {
                            sEmployeeIDs+=oreturnObjs[i].EmployeeID+",";
                        }
                        sEmployeeIDs=sEmployeeIDs.substring(0,sEmployeeIDs.length-1);

                        $("#txtAddEmployeeCode").data("EmployeeIDs",sEmployeeIDs);
                        $("#txtAddEmployeeCode").val(oreturnObjs.length+" Employee Selected");
                        $("#txtAddEmployeeCode").addClass("fontColorOfPickItem");
                        //$("#winEmployeePicker").icsWindow('close');
                    }
                }
            }
        });
    }

    $('#btnCEmployee').click(function (e)
    {
        document.getElementById("txtEmployee_Collection").value = "" ;
        $("#txtEmployee_Collection").data("EmployeeIDs","");
        $("#txtEmployee_Collection").removeClass("fontColorOfPickItem");
    });

    $('#btnResetEmployeeCode').click(function (e)
    {
        document.getElementById("txtAddEmployeeCode").value = "" ;
        $("#txtAddEmployeeCode").data("EmployeeIDs","");
        $("#txtAddEmployeeCode").removeClass("fontColorOfPickItem");
    });
    $('#btnResetEmployeeBatch').click(function (e)
    {
        document.getElementById("txtAddEmployeeBatch").value = "" ;
        $("#txtAddEmployeeBatch").data("EmployeeBatchID",0);
        $("#txtAddEmployeeBatch").removeClass("fontColorOfPickItem");
    });

    /*-------------Department Picker start Collection----------------*/
    $("#btnDepartmentPicker_Collection").click(function(e){
        DepartmentPicker();
    });
    $("#btnPickUpdateDepartment").click(function(e){
        UpdateDepartmentPicker();
    });
    $("#btnPickDepartment").click(function(e){
        AddDepartmentPicker();
    });
    $("#btnPickUpdateLocation").click(function(e){
        UpdateLocationPicker();
    });
    $("#btnPickLocation").click(function(e){
        AddLocationPicker();
    });

    $("#txtDepartment_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            DepartmentPicker();
        }
    });
    $("#txtUpdateDepartment").keydown(function(e){
        if (e.which == 13)//enter=13
        {
            UpdateDepartmentPicker();
        }
        if(e.which==8)
        {
            $("#txtUpdateDepartment").removeClass("fontColorOfPickItem");
            $('#txtUpdateDepartment').data('DepartmentID', 0);
        }
    });

    $("#txtAddDepartment").keydown(function(e){
        if (e.which == 13)//enter=13
        {
            AddDepartmentPicker();
        }
        if(e.which==8)
        {
            $("#txtAddDepartment").removeClass("fontColorOfPickItem");
            $('#txtAddDepartment').data('DepartmentID', 0);
        }
    });

    $("#txtUpdateLocation").keydown(function(e){
        if (e.which == 13)//enter=13
        {
            UpdateLocationPicker();
        }
        if(e.which==8)
        {
            $("#txtUpdateLocation").removeClass("fontColorOfPickItem");
            $('#txtUpdateLocation').data('LocationID', 0);
        }
    });
    $("#txtAddLocation").keydown(function(e){
        if (e.which == 13)//enter=13
        {
            AddLocationPicker();
        }
        if(e.which==8)
        {
            $("#txtAddLocation").removeClass("fontColorOfPickItem");
            $('#txtAddLocation').data('LocationID', 0);
        }
    });
    function DepartmentPicker()
    {
        $("#winDepartmentPicker_Collection").icsWindow('open');
        var sLocationIDs=$("#txtLocation_Colection").data("LocationIDs");
        var oDepartment={DepartmentID:0,BusinessUnitIDs:$("#txtBusinessUnit_Collection").data("BusinessUnitIDs"),LocationIDs:sLocationIDs};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree_Collection').tree({ data: [response.obj] });
                }
            }
        });
    }

    function UpdateDepartmentPicker()
    {
        var sLocationID=$("#txtUpdateLocation").data("LocationID");
        var oDepartment={DepartmentID:0,BusinessUnitIDs:$("#txtUpdateBUsinessUnit").data("BusinessUnitID"),LocationIDs:sLocationID};
        //var oDepartment = {
        //    DepartmentID: 0
        //};

        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress") + "/Department/GetsDepartments",
            traditional: true,
            data: JSON.stringify(oDepartment),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oTDepartment = jQuery.parseJSON(data);
                if (oTDepartment != null) {
                    $("#winDepartment").icsWindow("open", "Department List");
                    var oDeptReqPolicy = $('#ttDepartment').tree({
                        data: [oTDepartment]
                    });
                    if (oDeptReqPolicy.DepartmentID != null) {
                        var nNodeID = parseInt(oDeptReqPolicy.DepartmentID);
                        if (nNodeID > 0) {
                            var node = $('#ttDepartment').tree('find', nNodeID);
                            $('#ttDepartment').tree('expandTo', node.target);
                            $('#ttDepartment').tree('select', node.target);
                        }
                    }
                }
                else {
                    alert('There is no department exists!')
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function AddDepartmentPicker()
    {
        var sLocationID=$("#txtAddLocation").data("LocationID");
        var oDepartment={DepartmentID:0,BusinessUnitIDs:$("#txtAddBUsinessUnit").data("BusinessUnitID"),LocationIDs:sLocationID};
        //var oDepartment = {
        //    DepartmentID: 0
        //};

        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress") + "/Department/GetsDepartments",
            traditional: true,
            data: JSON.stringify(oDepartment),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oTDepartment = jQuery.parseJSON(data);
                if (oTDepartment != null) {
                    $("#winAddDepartment").icsWindow("open", "Department List");
                    var oDeptReqPolicy = $('#ttDepartmentAdd').tree({
                        data: [oTDepartment]
                    });
                    if (oDeptReqPolicy.DepartmentID != null) {
                        var nNodeID = parseInt(oDeptReqPolicy.DepartmentID);
                        if (nNodeID > 0) {
                            var node = $('#ttDepartmentAdd').tree('find', nNodeID);
                            $('#ttDepartmentAdd').tree('expandTo', node.target);
                            $('#ttDepartmentAdd').tree('select', node.target);
                        }
                    }
                }
                else {
                    alert('There is no department exists!')
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function UpdateLocationPicker()
    {
        debugger;
        var oLocation={LocationID:0,BusinessUnitID:$("#txtUpdateBUsinessUnit").data("BusinessUnitID")};


        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationByBU",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].LocationID > 0) {
                    //debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winLocation',
                        winclass:'clsLocation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblLocation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Location List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeUpdateLocationPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    function AddLocationPicker()
    {
        debugger;
        var oLocation={LocationID:0,BusinessUnitID:$("#txtAddBUsinessUnit").data("BusinessUnitID")};


        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationByBU",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].LocationID > 0) {
                    //debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winLocation',
                        winclass:'clsLocation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblLocation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Location List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAddLocationPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    function IntializeUpdateLocationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

           
            var oLocation= $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winLocation')
            {
                if(oLocation!=null){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    $("#txtUpdateLocation").data("LocationID",oLocation.LocationID);
                    $("#txtUpdateLocation").val(oLocation.Name);
                    $("#txtUpdateLocation").addClass("fontColorOfPickItem");
                }
                else
                {
                    alert("Please select a Location.");
                }
            }
        });
    }

    function IntializeAddLocationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

           
            var oLocation= $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winLocation')
            {
                if(oLocation!=null){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    $("#txtAddLocation").data("LocationID",oLocation.LocationID);
                    $("#txtAddLocation").val(oLocation.Name);
                    $("#txtAddLocation").addClass("fontColorOfPickItem");
                }
                else
                {
                    alert("Please select a Location.");
                }
            }
        });
    }
    $("#btnLocationPickerOk").click(function(e){
        if(btnLocation=="btnLocationPicker")
        {
            var oLocation = $('#locationtree').tree('getSelected');
            var sLocationIDs="";
            if(oLocation!=null && oLocation.id>0){
                $("#winLocationPicker").icsWindow('close');
                sLocationIDs+=oLocation.id;
                $("#txtLocation_Colection").data("LocationIDs",sLocationIDs);
                $('#txtLocation').val(oLocation.text);
            }
            else{
                alert("Please select a location.");
            }
        }
        else
        {
            var oLocations = $('#locationtree').tree('getChecked');
            if(oLocations!=null && oLocations.length>0)
            {
                var LocationName="";
                var sLocationIDs="";
                for(var i=0; i<oLocations.length; i++)
                {
                    if(oLocations[i].id !=1)
                    {
                        LocationName+=oLocations[i].text+",";
                        sLocationIDs+=oLocations[i].id+",";
                    }
                }

                LocationName=LocationName.substring(0,LocationName.length-1);
                sLocationIDs=sLocationIDs.substring(0,sLocationIDs.length-1);
                $("#txtLocation_Colection").data("LocationIDs",sLocationIDs);
                $("#winLocationPicker").icsWindow('close');
                $('#txtLocation_Colection').val(LocationName);
                $("#txtLocation_Colection").addClass("fontColorOfPickItem");
            }
            else
            {
                alert("Please select a location.");
            }
        }
    });
    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });
    $("#btnDepartmentPickerOk_Collection").click(function(e){
        var oDepartments = $('#departmenttree_Collection').tree('getChecked');
        if(oDepartments!=null && oDepartments.length>0){
            $("#winDepartmentPicker_Collection").icsWindow('close');
            var sDepartmentIds="";
            for(var i=0; i<oDepartments.length; i++)
            {
                sDepartmentIds+=oDepartments[i].id+",";
            }

            sDepartmentIds=sDepartmentIds.substring(0,sDepartmentIds.length-1);
            $("#txtDepartment_Collection").data("DepartmentIDs",sDepartmentIds);
            $("#txtDepartment_Collection").val(oDepartments.length+" 's Department Selected");
            $("#txtDepartment_Collection").addClass("fontColorOfPickItem");
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnUpdateDepartmentPickerOk_Collection").click(function () {
        var oTDepartment = $('#ttDepartment').tree('getSelected');
        if (oTDepartment == null || parseInt(oTDepartment.id) <= 0) {
            alert("Please select an department!");
            return;
        }
        $('#txtUpdateDepartment').data('DepartmentID', parseInt(oTDepartment.id));
        $('#txtUpdateDepartment').val(oTDepartment.text);
        $("#txtUpdateDepartment").addClass("fontColorOfPickItem");
        $("#txtUpdateDepartment").icsWindow('close');
        
    });
    $("#btnAddDepartmentPickerOk_Collection").click(function () {
        var oTDepartment = $('#ttDepartmentAdd').tree('getSelected');
        if (oTDepartment == null || parseInt(oTDepartment.id) <= 0) {
            alert("Please select an department!");
            return;
        }
        $('#txtAddDepartment').data('DepartmentID', parseInt(oTDepartment.id));
        $('#txtAddDepartment').val(oTDepartment.text);
        $("#txtAddDepartment").addClass("fontColorOfPickItem");
        $("#winAddDepartment").icsWindow('close');
        
    });
   
    $("#btnCloseDepartmentPickerClose_Collection").click(function () {
        $("#winDepartment").icsWindow('close');
    });
    $("#btnCloseAddDepartmentPickerClose_Collection").click(function () {
        $("#winAddDepartment").icsWindow('close');
    });

  



    /*------------EmployeeBlock--------------*/
    //Advance Search
    $("#btnEmployeeBlockReset").click(function(e){
        $("#txtEmployeeBlock").val("");
        $("#txtEmployeeBlock").removeClass("fontColorOfPickItem");
        $("#txtEmployeeBlock").data("BlockIDs","");
    });
    $('#txtEmployeeBlock').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlock").val();
            var sTempName = "";
            SearchEmployeeBlock(txtSearchByBlock);
            $("#txtEmployeeBlock").val('');
        }
    });

    $("#btnEmployeeBlockPicker").click(function(e){
        SearchEmployeeBlock("");
    });
    function SearchEmployeeBlock(name) {
        $("#txtEmployeeBlock").val("");
        $("#txtEmployeeBlock").data("BlockIDs","");
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    //debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sBlockIDs="";
                    for(var i=0; i<oBlocks.length; i++)
                    {
                        sBlockIDs += oBlocks[i].EmployeeTypeID+",";

                    }
                    sBlockIDs=sBlockIDs.substring(0,sBlockIDs.length-1);
                    $("#txtEmployeeBlock").data("BlockIDs",sBlockIDs);
                    $("#txtEmployeeBlock").val(oBlocks.length+" 's Block Selected");
                    $("#txtEmployeeBlock").addClass("fontColorOfPickItem");
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }



    $('#txtEmployeeGroup').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroup").val();
            var sTempName = "";
            SearchEmployeeGroup(txtSearchByGroup);
            $("#txtEmployeeGroup").val('');
        }
    });


    $("#btnEmployeeGroupPicker").click(function(e){
        SearchEmployeeGroup("");
    });
    function SearchEmployeeGroup(name) {
        $("#txtEmployeeGroup").val("");
        $("#txtEmployeeGroup").data("GroupIDs","");
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    //debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sGroupIDs="";
                    for(var i=0; i<oGroups.length; i++)
                    {
                        sGroupIDs += oGroups[i].EmployeeTypeID+",";

                    }
                    sGroupIDs=sGroupIDs.substring(0,sGroupIDs.length-1);
                    $("#txtEmployeeGroup").data("GroupIDs",sGroupIDs);
                    $("#txtEmployeeGroup").val(oGroups.length+"' s Group Selected");
                    $("#txtEmployeeGroup").addClass("fontColorOfPickItem");
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }

    $("#btnEmployeeGroupPickerReset").click(function(e){

        $('#txtEmployeeGroup').val("");
        $("#txtEmployeeGroup").removeClass("fontColorOfPickItem");
        $("#txtEmployeeGroup").data("GroupIDs","");
    });



    //Employee Type
    $('#txtEmployeeType').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sEmployeeType = $("#txtEmployeeType").val();
            PickEmployeeType(sEmployeeType);
        }
    });


    $("#btnPickEmployeeType").click(function(e){
        PickEmployeeType("");
    });

    function PickEmployeeType(name) {
        var oEmployeeType={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oEmployeeType,
            ControllerName: "RosterPlanV2",
            ActionName: "GetsEmployeeType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    //debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winEmpType',
                        winclass:'clsEmpType',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblEmpType',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Type List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeEmpTypePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmpTypePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oEmpTypes=[];
            oEmpTypes= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winEmpType')
            {
                if(oEmpTypes!=null && oEmpTypes.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sEmployeeTypeIDs="";
                    for(var i=0; i<oEmpTypes.length; i++)
                    {
                        sEmployeeTypeIDs += oEmpTypes[i].EmployeeTypeID+",";

                    }
                    sEmployeeTypeIDs=sEmployeeTypeIDs.substring(0,sEmployeeTypeIDs.length-1);
                    $("#txtEmployeeType").data("EmployeeTypeIDs",sEmployeeTypeIDs);
                    $("#txtEmployeeType").val(oEmpTypes.length+"' s Employee Type Selected");
                    $("#txtEmployeeType").addClass("fontColorOfPickItem");
                }
                else
                {
                    alert("Please select a Employee Type.");
                }
            }
        });
    }


    $("#btnResetEmployeeType").click(function(e){
        $("#txtEmployeeType").val("");
        $("#txtEmployeeType").removeClass("fontColorOfPickItem");
        $("#txtEmployeeType").data("EmployeeTypeIDs","");
    });


    $('#btnAdvSearch').click(function (e)
    {
        //debugger;
        $("#winAdvSearch").icsWindow('open', "Advance Search");
    });

    $('#btnOkAdvSearch').click(function (e) {
        //debugger;
        $("#winAdvSearch").icsWindow('close');
        var oSalarySchemeIDs=$("#txtSalaryScheme").data("SalarySchemeIDs");
        var oAttendanceSchemeIDs=$("#txtAttendanceScheme").data("AttendanceSchemeIDs");
        var oShiftIDs= $("#txtShift").data("ShiftIDs");
        var oEmployeeTypeIDs=$("#txtEmployeeType").data("EmployeeTypeIDs");
        var oDesignationIDs=$("#txtDesignation").data("DesignationIDs");
        var IsJoiningDate=$("#chkJoiningDate").is(':checked');
        var sAuthenticationNo=$.trim($('#txtAuthenticationNo').val());
        var nCategoryID=parseInt($("#cboEmpCategory").val());
        var oBlockIDs=$("#txtEmployeeBlock").data("BlockIDs");
        var oGroupIDs=$("#txtEmployeeGroup").data("GroupIDs");
        if(oSalarySchemeIDs!="" || oAttendanceSchemeIDs!="" || oShiftIDs!="" || oEmployeeTypeIDs!="" || oDesignationIDs!="" || oBlockIDs!="" || oGroupIDs!="" || nCategoryID>0 || IsJoiningDate==true || sAuthenticationNo!="")
        {
            $("#btnAdvSearch").css('color', 'blue');
        }
        else{
            $("#btnAdvSearch").css('color', 'black');
        }
    });
    $('#btnCloseAdvSearch').click(function (e) {
        //debugger;
        $("#winAdvSearch").icsWindow('close');
        var oSalarySchemeIDs=$("#txtSalaryScheme").data("SalarySchemeIDs");
        var oAttendanceSchemeIDs=$("#txtAttendanceScheme").data("AttendanceSchemeIDs");
        var oShiftIDs= $("#txtShift").data("ShiftIDs");
        var oEmployeeTypeIDs=$("#txtEmployeeType").data("EmployeeTypeIDs");
        var oDesignationIDs=$("#txtDesignation").data("DesignationIDs");
        var IsJoiningDate=$("#chkJoiningDate").is(':checked');
        var sAuthenticationNo=$.trim($('#txtAuthenticationNo').val());
        var nCategoryID=parseInt($("#cboEmpCategory").val());
        var oBlockIDs=$("#txtEmployeeBlock").data("BlockIDs");
        var oGroupIDs=$("#txtEmployeeGroup").data("GroupIDs");
        if(oSalarySchemeIDs!="" || oAttendanceSchemeIDs!="" || oShiftIDs!="" || oEmployeeTypeIDs!="" || oDesignationIDs!="" || oBlockIDs!="" || oGroupIDs!="" || nCategoryID>0 || IsJoiningDate==true || sAuthenticationNo!="")
        {
            $("#btnAdvSearch").css('color', 'blue');
        }
        else{
            $("#btnAdvSearch").css('color', 'black');
        }
    });
    function RefreshAdvSearch()
    {
        $('#txtJoiningStartDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtJoiningEndDate').datebox('setValue', icsdateformat(new Date()));
        $("#txtSalaryScheme").data("SalarySchemeIDs","");
        $("#txtAttendanceScheme").data("AttendanceSchemeIDs","");
        $("#txtEmployeeGroup").data("GroupIDs",""),
        $("#txtEmployeeBlock").data("BlockIDs",""),
        $("#txtShift").data("ShiftIDs","");
        $("#txtEmployeeType").data("EmployeeTypeIDs","");
        $("#txtDesignation").data("DesignationIDs","");
        var oEmpCategorys=$("#cboEmpCategory").data("EmployeeCategorys");
        $("#cboEmpCategory").icsLoadCombo({
            List: oEmpCategorys,
            OptionValue: "Value",
            DisplayText: "Text",
            InitialValue:"--Select category--"
        });
    }
    //Designation
    $('#txtDesignation').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sDesignation = $("#txtDesignation").val();
            PickDesignation(sDesignation);
        }
    });


    $("#btnPickDesignation").click(function(e){
        PickDesignation("");
    });

    function PickDesignation(name) {
        var sLocationIDs= $("#txtLocation_Colection").data("LocationIDs");
        var sDepartmentIDs= $("#txtDepartment_Collection").data("DepartmentIDs");
        var sBusinessUnitIDs= $("#txtBusinessUnit_Collection").data("BusinessUnitIDs");
        var oDesignation={
            DesignationID:0,
            Params: sBusinessUnitIDs+'~'+sLocationIDs+'~'+ sDepartmentIDs
        };
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    //debugger;
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oDesignations=[];
            oDesignations= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignations!=null && oDesignations.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sDesignationIds="";
                    for(var i=0; i<oDesignations.length; i++)
                    {
                        sDesignationIds+=oDesignations[i].DesignationID+",";
                    }

                    sDesignationIds=sDesignationIds.substring(0,sDesignationIds.length-1);
                    $("#txtDesignation").data("DesignationIDs",sDesignationIds);
                    $("#txtDesignation").val(oDesignations.length+"' s Designation Selected");
                    $("#txtDesignation").addClass("fontColorOfPickItem");
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }


    $("#btnResetDesignation").click(function(e){
        $("#txtDesignation").val("");
        $("#txtDesignation").removeClass("fontColorOfPickItem");
        $("#txtDesignation").data("DesignationIDs","");
    });

    //Shift
    $('#txtShift').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sShift = $("#txtShift").val();
            PickShift(sShift);
        }
    });
    $('#txtUpdateShift').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sShift = $("#txtUpdateShift").val();
            PickUpdateShift(sShift);
        }
        if (e.which == 8) //backspace=8
        {
            $("#txtUpdateShift").removeClass("fontColorOfPickItem");
            $('#txtUpdateShift').data('ShiftID', 0);
        }
    });

    $('#txtAddShift').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sShift = $("#txtAddShift").val();
            PickAddShift(sShift);
        }
        if (e.which == 8) //backspace=8
        {
            $("#txtAddShift").removeClass("fontColorOfPickItem");
            $('#txtAddShift').data('ShiftID', 0);
        }
    });

    $("#btnPickShift").click(function(e){
        PickShift("");
    });
    $("#btnPickUpdateShift").click(function(e){
        PickUpdateShift("");
    });
    $("#btnPickAddShift").click(function(e){
        PickAddShift("");
    });

    function PickShift(name) {
        var oHrmShift={
            Name : name
        };
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oHrmShift,
            ControllerName: "RosterPlanV2",
            ActionName: "GetsHRMShiftByName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ShiftID > 0) {
                    //debugger;
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winShift',
                        winclass:'clsShift',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblShift',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Shift List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeShiftPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function PickUpdateShift(name) {
        var oHrmShift={
            Name : name
        };
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oHrmShift,
            ControllerName: "RosterPlanV2",
            ActionName: "GetsHRMShiftByName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ShiftID > 0) {
                    //debugger;
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;

                    var oPickerParam = {
                        winid: 'winShift',
                        winclass:'clsShift',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblShift',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Shift List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeUpdateShiftPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function PickAddShift(name) {
        var oHrmShift={
            Name : name
        };
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oHrmShift,
            ControllerName: "RosterPlanV2",
            ActionName: "GetsHRMShiftByName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ShiftID > 0) {
                    //debugger;
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;

                    var oPickerParam = {
                        winid: 'winShiftAdd',
                        winclass:'clsShiftAdd',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblShiftAdd',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Shift List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAddShiftPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    function IntializeShiftPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oShifts=[];
            oShifts= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winShift')
            {
                if(oShifts!=null && oShifts.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sShiftIDs="";
                    for(var i=0; i<oShifts.length; i++)
                    {
                        sShiftIDs+=oShifts[i].ShiftID+",";
                    }

                    sShiftIDs=sShiftIDs.substring(0,sShiftIDs.length-1);
                    $("#txtShift").data("ShiftIDs",sShiftIDs);
                    $("#txtShift").val(oShifts.length+"' s Shift Selected");
                    $("#txtShift").addClass("fontColorOfPickItem");
                }
                else{
                    alert("Please select a Shift.");
                }
            }
        });
    }

   

    function IntializeAddShiftPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            debugger;
            var oShift= $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winShiftAdd')
            {
                if(oShift!=null){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    $("#txtAddShift").data("ShiftID",oShift.ShiftID);
                    $("#txtAddShift").val(oShift.Name);
                    $("#txtAddShift").addClass("fontColorOfPickItem");
                }
                else{
                    alert("Please select a Shift.");
                }
            }
        });
    }

    function IntializeUpdateShiftPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            debugger;
            var oShift= $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winShift')
            {
                if(oShift!=null){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    $("#txtUpdateShift").data("ShiftID",oShift.ShiftID);
                    $("#txtUpdateShift").val(oShift.Name);
                    $("#txtUpdateShift").addClass("fontColorOfPickItem");
                }
                else{
                    alert("Please select a Shift.");
                }
            }
        });
    }


    $("#btnResetShift").click(function(e){
        $("#txtShift").val("");
        $("#txtShift").removeClass("fontColorOfPickItem");
        $("#txtShift").data("ShiftIDs","");
    });

    $("#btnResetAddShift").click(function(e){
        $("#txtAddShift").val("");
        $("#txtAddShift").removeClass("fontColorOfPickItem");
        $("#txtAddShift").data("ShiftID",0);
    });
    $("#btnResetUpdateShift").click(function(e){
        $("#txtUpdateShift").val("");
        $("#txtUpdateShift").removeClass("fontColorOfPickItem");
        $("#txtUpdateShift").data("ShiftID",0);
    });
    $("#btnResetUpdateDepartment").click(function(e){
        $("#txtUpdateDepartment").val("");
        $("#txtUpdateDepartment").removeClass("fontColorOfPickItem");
        $("#txtUpdateDepartment").data("DepartmentID",0);
    });

    $("#btnResetDepartment").click(function(e){
        $("#txtAddDepartment").val("");
        $("#txtAddDepartment").removeClass("fontColorOfPickItem");
        $("#txtAddDepartment").data("DepartmentID",0);
    });

    $("#btnResetUpdateLocation").click(function(e){
        $("#txtUpdateLocation").val("");
        $("#txtUpdateLocation").removeClass("fontColorOfPickItem");
        $("#txtUpdateLocation").data("LocationID",0);
    });
    $("#btnResetLocation").click(function(e){
        $("#txtAddLocation").val("");
        $("#txtAddLocation").removeClass("fontColorOfPickItem");
        $("#txtAddLocation").data("LocationID",0);
    });

    //Attendance Scheme

    $("#btnPickAttendanceScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    //debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oAttendanceSchemes=[];
            oAttendanceSchemes = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceSchemes!=null && oAttendanceSchemes.length>0)
                {
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sAttendanceSchemeIDs = "";
                    for(var i=0; i<oAttendanceSchemes.length; i++)
                    {
                        sAttendanceSchemeIDs+=oAttendanceSchemes[i].AttendanceSchemeID+",";
                    }
                    sAttendanceSchemeIDs=sAttendanceSchemeIDs.substring(0,sAttendanceSchemeIDs.length-1);
                    $("#txtAttendanceScheme").data("AttendanceSchemeIDs",sAttendanceSchemeIDs);
                    $("#txtAttendanceScheme").val(oAttendanceSchemes.length+" 's Attendance Scheme Selected");
                    $("#txtAttendanceScheme").addClass("fontColorOfPickItem");
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttendanceScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        $("#txtAttendanceScheme").data("AttendanceSchemeIDs","");
    });


    //Salary Scheme

    $('#txtSalaryScheme').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        var sSSName = document.getElementById("txtSalaryScheme").value;
        if (code == 13)//Enter key-13
        {
            PickerSalaryScheme(sSSName);
        }
    });
    $('#btnPickSalaryScheme').click(function (e)
    {
        var sSSName ="";
        PickerSalaryScheme(sSSName);
    });
    function PickerSalaryScheme(sSSName)
    {
        var oSalaryScheme = { Name: sSSName};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oSalaryScheme,
            ControllerName: "SalaryScheme",
            ActionName: "GetsBySalarySchemeName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].SalarySchemeID > 0) {

                    var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "NatureOfEmployeeInString", title: "Nature Of Employee", width: 140, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "PaymentCycleInString", title: "Payment Cycle", width: 140, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSalarySchemePicker',
                        winclass:'clsSalarySchemePicker',
                        winwidth: 520,
                        winheight: 460,
                        tableid: 'tblSalarySchemes',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Salary Scheme List'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeSalarySchemePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeSalarySchemePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oSalarySchemes=[];
            oSalarySchemes = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winSalarySchemePicker')
            {
                if(oSalarySchemes!=null && oSalarySchemes.length>0)
                {
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sSalarySchemeIDs = "";
                    for(var i=0; i<oSalarySchemes.length; i++)
                    {
                        sSalarySchemeIDs+=oSalarySchemes[i].SalarySchemeID+",";
                    }
                    sSalarySchemeIDs=sSalarySchemeIDs.substring(0,sSalarySchemeIDs.length-1);
                    $("#txtSalaryScheme").data("SalarySchemeIDs",sSalarySchemeIDs);
                    $("#txtSalaryScheme").val(oSalarySchemes.length+" 's Salary Scheme Selected");
                    $("#txtSalaryScheme").addClass("fontColorOfPickItem");
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetSalaryScheme").click(function(e){
        $('#txtSalaryScheme').val("");
        $("#txtSalaryScheme").data("SalarySchemeIDs","");
    });
    $("#btnAdvSearchClear").click(function(e){
        $("#txtSalaryScheme,#txtDesignation,#txtAttendanceScheme,#txtEmployeeGroup,#txtEmployeeBlock,#txtShift,#txtEmployeeType,#txtAuthenticationNo").val("");
        $("#cboEmpCategory").val(0);
        $("#chkJoiningDate").prop("checked", false);
        $('#txtJoiningStartDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtJoiningEndDate').datebox('setValue', icsdateformat(new Date()));
        $("#txtSalaryScheme").data("SalarySchemeIDs","");
        $("#txtAttendanceScheme").data("AttendanceSchemeIDs","");
        $("#txtEmployeeGroup").data("GroupIDs",""),
        $("#txtEmployeeBlock").data("BlockIDs",""),
        $("#txtShift").data("ShiftIDs","");
        $("#txtEmployeeType").data("EmployeeTypeIDs","");
        $("#txtDesignation").data("DesignationIDs","");
        $("#btnAdvSearch").css('color', 'black');
    });
    function RefreshControlRosterPlanEmployeeUpdate(oRosterPlanEmployee)
    {
        //debugger;


        $("#txtUpdateBUsinessUnit").val(oRosterPlanEmployee.BUName);
        $("#txtUpdateLocation").val(oRosterPlanEmployee.LocationName);
        $("#txtUpdateDepartment").val(oRosterPlanEmployee.Department);
        $("#txtUpdateShift").val(oRosterPlanEmployee.ShiftName);
        $("#txtUpdateBUsinessUnit").data("BusinessUnitID",oRosterPlanEmployee.BusinessUnitID);
        $("#txtUpdateLocation").data("LocationID",oRosterPlanEmployee.LocationID);
        $("#txtUpdateDepartment").data("DepartmentID",oRosterPlanEmployee.DepartmentID);
        $("#txtUpdateShift").data("ShiftID",oRosterPlanEmployee.ShiftID);
        $("#txtUpdateBUsinessUnit").addClass("fontColorOfPickItem");
        $("#txtUpdateLocation").addClass("fontColorOfPickItem");
        $("#txtUpdateDepartment").addClass("fontColorOfPickItem");
        $("#txtUpdateShift").addClass("fontColorOfPickItem");
        $('#chkUpdateDayOff').prop('checked', oRosterPlanEmployee.IsDayOff);
        $('#chkUpdateHoliday').prop('checked', oRosterPlanEmployee.IsHoliday);
        $("#txtUpdateEmpName").val(oRosterPlanEmployee.EmployeeName);
        $("#txtUpdateEmpCode").val(oRosterPlanEmployee.EmployeeCode);
        $("#txtUpdateAttdDate").val(oRosterPlanEmployee.DateInString);
        $("#winUpdateRosterPlanEmployee").icsWindow('open');
        $("#winUpdateRosterPlanEmployee").panel('setTitle', 'Roster Plan For ('+oRosterPlanEmployee.EmployeeCode +") AND Date "+oRosterPlanEmployee.DateInString);
    }
    $(function(){
        $('#tblRosterPlanEmployee').datagrid({
            onDblClickRow: function(rowIndex) {
                //debugger;
                $('#tblRosterPlanEmployee').datagrid('selectRow',rowIndex);
                $("#tblRosterPlanEmployee").data("SelectedRowIndex",rowIndex);
                var oRosterPlanEmployee =$("#tblRosterPlanEmployee").datagrid("getSelected");
                RefreshControlRosterPlanEmployeeUpdate(oRosterPlanEmployee);


            }
        });
    });
    var sDescription="";
    function RefreshRosterPlanEmployee()
    {
        //debugger;
        var oRosterPlanEmployee =$("#tblRosterPlanEmployee").datagrid("getSelected");
        oRosterPlanEmployee.BusinessUnitID=parseInt($("#txtUpdateBUsinessUnit").data("BusinessUnitID"));
        oRosterPlanEmployee.LocationID=parseInt($("#txtUpdateLocation").data("LocationID"));
        oRosterPlanEmployee.DepartmentID=parseInt($("#txtUpdateDepartment").data("DepartmentID"));
        oRosterPlanEmployee.ShiftID=parseInt($("#txtUpdateShift").data("ShiftID"));
        oRosterPlanEmployee.IsDayOff=$('#chkUpdateDayOff').is(':checked');
        oRosterPlanEmployee.IsHoliday=$('#chkUpdateHoliday').is(':checked');
        return oRosterPlanEmployee;
    }

    function validateUpdateRosterPlanEmployee()
    {
        //debugger;
        if(parseInt($("#txtUpdateBUsinessUnit").data("BusinessUnitID"))<=0)
        {
            alert("Please Select BusinessUnit");
            return false;
        }

        if(parseInt($("#txtUpdateLocation").data("LocationID"))<=0)
        {
            alert("Please Select Location");
            return false;
        }

        if(parseInt($("#txtUpdateDepartment").data("DepartmentID"))<=0)
        {
            alert("Please Select Department");
            return false;
        }

        if(parseInt($("#txtUpdateShift").data("ShiftID"))<=0)
        {
            alert("Please Select Shift");
            return false;
        }

        return true;
    }
    $("#btnRosterPlanEmployeeUpdate").click(function(e){
        //debugger;

        if(!validateUpdateRosterPlanEmployee())
        {
            return;
        }
        var oRosterPlanEmployee=RefreshRosterPlanEmployee();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress") + "/RosterPlanV2/UpdateRosterPlanEmployee",
            traditional: true,
            data: JSON.stringify(oRosterPlanEmployee),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                //debugger;
                var oRosterPlanEmployee = jQuery.parseJSON(data);
                if (oRosterPlanEmployee.RPEID>0)
                {
                    $('#tblRosterPlanEmployee').datagrid('updateRow', { index: parseInt( $("#tblRosterPlanEmployee").data("SelectedRowIndex")), row: oRosterPlanEmployee });
                    alert("Update Successfully !");
                    $("#winUpdateRosterPlanEmployee").icsWindow('close');
                }
                else
                {
                    alert(oRosterPlanEmployee.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });


    
    $(function(){
        debugger;
        var bCheckPageSize=false,bBeforeRefresh=false;
        var pager = $('#tblRosterPlanEmployee').datagrid('getPager');// get the pager of datagrid
        pager.pagination({
            showPageList : false,
            total : parseInt($("#btnSearch").data("TotalAttendanceCount")),
            pageSize : 50,


         
            
            onSelectPage:function(pageNumber, pageSize){
                    $(this).pagination('loading');
                    debugger;
                    if(!bCheckPageSize && !bBeforeRefresh)
                    {
                        
                        if(parseInt($("#btnSearch").data("PrevPageNum"))>parseInt(pageNumber))
                        {
                            debugger;
                         
                            var tempAttendanceDailys=[];
                            var oRosterPlanEmployees= $("#btnSearch").data("RosterPlanEmployees");
                            for (var j = 0; j <oRosterPlanEmployees.length; j++)
                            {
                              
                                tempAttendanceDailys.push(oRosterPlanEmployees[j]);
                               
                            }
                          
                            var tLength=tempAttendanceDailys.length-(pageSize*(parseInt($("#btnSearch").data("PrevPageNum"))-pageNumber));
                            for (var j = tempAttendanceDailys.length-1; j >=tLength; j--)
                            {
                                debugger;
                                var SelectedRowIndex=$('#tblRosterPlanEmployee').datagrid('getRowIndex',tempAttendanceDailys[j]);
                                $('#tblRosterPlanEmployee').datagrid('deleteRow',SelectedRowIndex);
                             
                                
                            }
                            $("#btnSearch").data("RosterPlanEmployees", $('#tblRosterPlanEmployee').datagrid('getRows'));
                         
                            $('#tblRosterPlanEmployee').datagrid('getPager').pagination({
                                total:parseInt($("#btnSearch").data("TotalAttendanceCount")),
                                pageSize: 50
                            })
                            
                        }
                        else
                        {
                            debugger;
                            
                            Search(pageNumber,(pageSize*(pageNumber-parseInt($("#btnSearch").data("PrevPageNum")))));
                        }
                        $("#btnSearch").data("PrevPageNum",parseInt(pageNumber));

                    }
                    bBeforeRefresh=false;
                    bCheckPageSize=false;
                    $(this).pagination('loaded');
                },
                onChangePageSize:function(){
                 
                    bCheckPageSize=true;
                    return true;
                },
            
                onRefresh:function(){
                    return true;
                },
                onBeforeRefresh:function(){
                    if($("#btnSearch").data("RosterPlanEmployees").length<=0)
                    {
                        return false;
                    }
                $("#btnSearch").data("RosterPlanEmployees",[])
                DynamicRefreshList([], 'tblRosterPlanEmployee');
                Search(0,0);///For Refresh and First time Adv Search
                bBeforeRefresh=true;
                $("#btnSearch").data("PrevPageNum",1);
                return true;
            },
           
        });
       
    });


    function Search(pageNumber,pageSize)
    {
        debugger;

        if(!ValidateInput())return;
        var oHCMSearchObj=RefreshObject();
       

        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress") + "/RosterPlanV2/GetCount",
            data:JSON.stringify(oHCMSearchObj),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oAtt = jQuery.parseJSON(data);
                $("#btnSearch").data("TotalAttendanceCount",parseInt(oAtt.TotalAttendanceCount)),
                $('#tblRosterPlanEmployee').datagrid('getPager').pagination({
               total:parseInt($("#btnSearch").data("TotalAttendanceCount")),
                pageSize:50
            })

               
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

        if(pageSize==0 && pageNumber==0)
        {
            $("#btnSearch").data("PrevPageNum",1);
            pageNumber=0;
            pageSize=50;
            $("#btnSearch").data("RosterPlanEmployees",[]);
            DynamicRefreshList([], 'tblRosterPlanEmployee');
        }
      
            
        
            oHCMSearchObj.LoadRecords=pageSize;
            oHCMSearchObj.RowLength= $("#btnSearch").data("RosterPlanEmployees").length;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress") + "/RosterPlanV2/AdvanceSearch",
            data:JSON.stringify(oHCMSearchObj),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oRosterPlanEmployees =[];
                oRosterPlanEmployees =data;
                if(oRosterPlanEmployees.length>0 && parseInt(oRosterPlanEmployees[0].RPEID)>0)
                {
                    debugger;
                    
                    var otempAttendanceDailys= $("#btnSearch").data("RosterPlanEmployees");
                    var nScrollTo=otempAttendanceDailys.length;
                    for (var j = 0; j < oRosterPlanEmployees.length; j++)
                    {
                        $('#tblRosterPlanEmployee').datagrid('appendRow',oRosterPlanEmployees[j]);
                        
                    }

                    $("#btnSearch").data("RosterPlanEmployees", $('#tblRosterPlanEmployee').datagrid('getRows'));

                   
                    $('#tblRosterPlanEmployee').datagrid('scrollTo',parseInt(nScrollTo)+10);
               
                   
                    $("#btnSearch").data("RosterPlanEmployees",$('#tblRosterPlanEmployee').datagrid('getRows'));
                    $('#tblRosterPlanEmployee').datagrid('getPager').pagination({
                        total:parseInt($("#btnSearch").data("TotalAttendanceCount")),
                        pageSize:50
                    })
                }
                else
                {
                        alert("No more data found by this date !");
              
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

</script>
