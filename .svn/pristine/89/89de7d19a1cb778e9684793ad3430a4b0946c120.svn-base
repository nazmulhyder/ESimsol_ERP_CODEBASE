@{
    ViewBag.Title = "Financial Postion Setup List";
}
@model ESimSol.BusinessObjects.FinancialPositionSetup
       <body>
           <div  class="easyui-layout" style="margin-left: 0px; height: 100%; width:100%">
               <div class="menuMainCollectionTable" data-options="region:'north'" style="height:1px;">

               </div>
               <div data-options="region:'west',split:true" style="width:50%;">
                   <table id="tblAsstes" title="Financial Postion Setup (Assets)" class="easyui-datagrid" fit="true" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" , autorowheight="false" toolbar="#toolbarAssets">
                       <thead>
                           <tr>
                               <th field="AccountCode" width="80" align="center">Account Code</th>
                               <th field="AccountHeadName" width="150">Account Head Name</th>
                               <th field="Sequence" width="100">Sequence</th>
                           </tr>
                       </thead>
                   </table>
                   <div id="toolbarAssets">
                       <input type="text" id="txtAccountHeadNameAssets" style="width:200px;" placeholder="Press Enter" />
                       <a id="btnAddAssets" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                       <a id="btnDeleteAssets" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                       <a id="btnUpAsset" style=" width:50px; text-align:left;" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-up" plain="true" onclick="UPAsset()">Up</a>
                       <a id="btnDownAsset" style=" width:60px; text-align:left;" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-down" plain="true" onclick="DownAsset()">Down</a>
                   </div>
               </div>
               <div data-options="region:'center',split:true" style="width:50%;">
                   <table id="tblLiabilitWithEquitys" title="Financeial Postion Setup (Liability & Equity)" class="easyui-datagrid" fit="true" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" , autorowheight="false" toolbar="#toolbarLiabilitywithEquity">
                       <thead>
                           <tr>
                               <th field="AccountCode" width="80" align="center">Account Code</th>
                               <th field="AccountHeadName" width="150">Account Head Name</th>
                               <th field="Sequence" width="100">Sequence</th>
                           </tr>
                       </thead>
                   </table>
                   <div id="toolbarLiabilitywithEquity">
                       <input type="text" id="txtAccountHeadNameLiabilityWithEquity" style="width:200px;" placeholder="Press Enter" />
                       <a id="btnAddLiabilityWithEquity" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                       <a id="btnDeleteLiabilityWithEquitys" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                       <a id="btnUpLiabilityWitEquity" style=" width:50px; text-align:left;" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-up" plain="true" onclick="UPLwithE()">Up</a>
                       <a id="btnDownLiabilityWitEquity" style=" width:60px; text-align:left;" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-down" plain="true" onclick="DownUPLwithE()">Down</a>
                   </div>
               </div>
               <div data-options="region:'south'" style="height:40px;">
                   <table border="0" style="width:100%;" >
                       <tr>
                           <td style="width:100%; text-align:right; font-weight:bold; font-size:small">
                               <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                           </td>
                       </tr>
                   </table>
               </div>
           </div>
           
       </body>
                      

      
   <script type="text/javascript">
    var _oFinancialPositionSetup = null;
    var _oAssets = [];
    var _oLiablilityWithEquitys = [];
    var _sBaseAddress = "";
    var _oAuthorizationRolesMapping = [];
    var _oCOAs = [];
    $(document).ready(function() {
        _oAssets = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.AssetSetups));
        _oLiablilityWithEquitys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.LiabilityWithOwnersEquitySetups));
        _oAuthorizationRolesMapping = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        debugger;
        RefreshListAssets(_oAssets);
        RefreshListLiabilityWithEquity(_oLiablilityWithEquitys);
        //RefreshControlLayout()

    });


    function RefreshListAssets(oAssets)
    {
        var data = oAssets;
        data = { "total": "" + data.length + "", "rows": data };
        $("#tblAsstes").datagrid("loadData", data);
    }
       
    function RefreshListLiabilityWithEquity(oLiablilityWithEquitys)
    {
        var data = oLiablilityWithEquitys;
        data = { "total": "" + data.length + "", "rows": data };
        $("#tblLiabilitWithEquitys").datagrid("loadData", data);
    }

    $("#btnAddAssets").click(function(){
        debugger;
        if(_oCOAs==null)
        {
            alert("Please pick A/C Head Name");
            $('#txtAccountHeadNameAssets').focus();
            return;
        }

        if(_oCOAs.length==0)
        {
            alert("Please pick A/C Head Name");
            $('#txtAccountHeadNameAssets').focus();
            return;
        }
        for(var i = 0;i<_oCOAs.length;i++)
        {
            if(IsExists(true, _oCOAs[i].AccountHeadID))
            {
                alert("Already Exists"); _oCOAs = [];
                $('#txtAccountHeadNameAssets').val("");
                $("#txtAccountHeadNameAssets").removeClass('fontColorOfPickItem');return;
            }
            var oFinancialPositionSetup = {
                FinancialPositionSetupID : 0,
                AccountHeadID :_oCOAs[i].AccountHeadID,
                AccountCode: _oCOAs[i].AccountCode,
                AccountHeadName: _oCOAs[i].AccountHeadName,
                Sequence:GetSequence(true)
            };
            $('#tblAsstes').datagrid('appendRow',oFinancialPositionSetup);
            
        }
        _oCOAs = [];
        $('#txtAccountHeadNameAssets').val("");
        $("#txtAccountHeadNameAssets").removeClass('fontColorOfPickItem');
    });

    function UPAsset()
    {
        debugger;
        var oAsset = $('#tblAsstes').datagrid('getSelected'); 
        if(oAsset==null)
        {
            alert("Please select color");
            return;
        }
         
        var SelectedRowIndex=$('#tblAsstes').datagrid('getRowIndex',oAsset);    
        if(SelectedRowIndex==0)return;        
        var oAssets=[];          
        oAssets=_oAssets;
        _oAssets=[];       
        for(var i=0; i<oAssets.length; i++)
        {
            if(i==(SelectedRowIndex-1))
            {
                _oAssets[i]=oAssets[i+1];                
            }
            else if(i==SelectedRowIndex)
            {
                _oAssets[i]=oAssets[i-1];    
            }
            else
            {
                _oAssets[i]=oAssets[i]; 
            }
            _oAssets[i].Sequence=i+1;
        }            
        data = _oAssets;
        data={"total":""+data.length+"","rows":data};
        $('#tblAsstes').datagrid('loadData',data);
        //    MakeAsset();
        var newSelectedRowIndex=SelectedRowIndex-1;
        $('#tblAsstes').datagrid('selectRow',newSelectedRowIndex); 
    
    }

    function DownAsset()
    {
        debugger;
        var oAsset = $('#tblAsstes').datagrid('getSelected'); 
        if(oAsset==null )
        {
            alert("Please select a item from list!");
            return;
        }                       
        var SelectedRowIndex=$('#tblAsstes').datagrid('getRowIndex',oAsset);    
        if(SelectedRowIndex==(_oAssets.length-1))return;        
        var oAssets=[];          
        oAssets=_oAssets;
        _oAssets=[];       
        for(var i=0; i<oAssets.length; i++)
        {
            if(i==(SelectedRowIndex+1))
            {
                _oAssets[i]=oAssets[i-1];                
            }
            else if(i==SelectedRowIndex)
            {
                _oAssets[i]=oAssets[i+1];    
            }
            else
            {
                _oAssets[i]=oAssets[i]; 
            }
            _oAssets[i].Sequence=i+1;
        }            
        data = _oAssets;
        data={"total":""+data.length+"","rows":data};
        $('#tblAsstes').datagrid('loadData',data);
        var newSelectedRowIndex=SelectedRowIndex+1;
        $('#tblAsstes').datagrid('selectRow',newSelectedRowIndex);                   
    } 

    $("#btnAddLiabilityWithEquity").click(function(){
        debugger;
        if(_oCOAs==null)
        {
            alert("Please pick A/C Head Name");
            $('#txtAccountHeadNameLiabilityWithEquity').focus();
            return;
        }

        if(_oCOAs.length==0)
        {
            alert("Please pick A/C Head Name");
            $('#txtAccountHeadNameLiabilityWithEquity').focus();
            return;
        }
        for(var i = 0;i<_oCOAs.length;i++)
        {
            if(IsExists(false, _oCOAs[i].AccountHeadID))
            {
                alert("Already Exists"); _oCOAs = [];
                $('#txtAccountHeadNameLiabilityWithEquity').val("");
                $("#txtAccountHeadNameLiabilityWithEquity").removeClass('fontColorOfPickItem');return;
            }
            var oFinancialPositionSetup = {
                FinancialPositionSetupID : 0,
                AccountHeadID :_oCOAs[i].AccountHeadID,
                AccountCode: _oCOAs[i].AccountCode,
                AccountHeadName: _oCOAs[i].AccountHeadName,
                Sequence:GetSequence(false)
            };
            $('#tblLiabilitWithEquitys').datagrid('appendRow',oFinancialPositionSetup);
        }
        _oCOAs = [];
        $('#txtAccountHeadNameLiabilityWithEquity').val("");
        $("#txtAccountHeadNameLiabilityWithEquity").removeClass('fontColorOfPickItem');
    });
    function UPLwithE()
    {
        debugger;
        var oAsset = $('#tblLiabilitWithEquitys').datagrid('getSelected'); 
        if(oAsset==null)
        {
            alert("Please select color");
            return;
        }
         
        var SelectedRowIndex=$('#tblLiabilitWithEquitys').datagrid('getRowIndex',oAsset);    
        if(SelectedRowIndex==0)return;        
        var oLiablilityWithEquitys=[];          
        oLiablilityWithEquitys=_oLiablilityWithEquitys;
        _oLiablilityWithEquitys=[];       
        for(var i=0; i<oLiablilityWithEquitys.length; i++)
        {
            if(i==(SelectedRowIndex-1))
            {
                _oLiablilityWithEquitys[i]=oLiablilityWithEquitys[i+1];                
            }
            else if(i==SelectedRowIndex)
            {
                _oLiablilityWithEquitys[i]=oLiablilityWithEquitys[i-1];    
            }
            else
            {
                _oLiablilityWithEquitys[i]=oLiablilityWithEquitys[i]; 
            }
            _oLiablilityWithEquitys[i].Sequence=i+1;
        }            
        data = _oLiablilityWithEquitys;
        data={"total":""+data.length+"","rows":data};
        $('#tblLiabilitWithEquitys').datagrid('loadData',data);
        //    MakeAsset();
        var newSelectedRowIndex=SelectedRowIndex-1;
        $('#tblLiabilitWithEquitys').datagrid('selectRow',newSelectedRowIndex); 
    
    }

    function DownUPLwithE()
    {
        debugger;
        var oAsset = $('#tblLiabilitWithEquitys').datagrid('getSelected'); 
        if(oAsset==null )
        {
            alert("Please select a item from list!");
            return;
        }                       
        var SelectedRowIndex=$('#tblLiabilitWithEquitys').datagrid('getRowIndex',oAsset);    
        if(SelectedRowIndex==(_oLiablilityWithEquitys.length-1))return;        
        var oLiablilityWithEquitys=[];          
        oLiablilityWithEquitys=_oLiablilityWithEquitys;
        _oLiablilityWithEquitys=[];       
        for(var i=0; i<oLiablilityWithEquitys.length; i++)
        {
            if(i==(SelectedRowIndex+1))
            {
                _oLiablilityWithEquitys[i]=oLiablilityWithEquitys[i-1];                
            }
            else if(i==SelectedRowIndex)
            {
                _oLiablilityWithEquitys[i]=oLiablilityWithEquitys[i+1];    
            }
            else
            {
                _oLiablilityWithEquitys[i]=oLiablilityWithEquitys[i]; 
            }
            _oLiablilityWithEquitys[i].Sequence=i+1;
        }            
        data = _oLiablilityWithEquitys;
        data={"total":""+data.length+"","rows":data};
        $('#tblLiabilitWithEquitys').datagrid('loadData',data);
        var newSelectedRowIndex=SelectedRowIndex+1;
        $('#tblLiabilitWithEquitys').datagrid('selectRow',newSelectedRowIndex);                   
    } 

    function GetSequence(bIsAssets)
    {
        var oLists = [];
        if(bIsAssets)
        {
            oLists = $('#tblAsstes').datagrid('getRows');
            
        }else
        {
            oLists = $('#tblLiabilitWithEquitys').datagrid('getRows');
        }
        return parseInt(oLists.length) + 1;
    }
    function IsExists(bIsAssets, nAccountHeadID)
    {
        var oLists = [];
        if(bIsAssets)
        {
            oLists = $('#tblAsstes').datagrid('getRows');
            
        }else
        {
            oLists = $('#tblLiabilitWithEquitys').datagrid('getRows');
        }
        for(var i =0;i<oLists.length;i++)
        {
            if(parseInt(oLists[i].AccountHeadID) == parseInt(nAccountHeadID))
            {
                return true;
            }
        }
        return false;
    }

    function Save()
    {
        _oAssets = $('#tblAsstes').datagrid('getRows');
        _oLiablilityWithEquitys = $('#tblLiabilitWithEquitys').datagrid('getRows');
        if(_oAssets.length<=0 )
        {
            alert("Please Add Account Head in Asset Part")
            return;
        }
        if(_oLiablilityWithEquitys.length<=0 )
        {
            alert("Please Add Account Head in Liability And Equity Part")
            return;
        }
        var oFinancialPositionSetup = {AssetSetups:_oAssets, LiabilityWithOwnersEquitySetups:_oLiablilityWithEquitys};
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+ "/BalanceSheet/Save",
            traditional: true,
            data:  JSON.stringify(oFinancialPositionSetup),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                 _oFinancialPositionSetup = jQuery.parseJSON(data);
                debugger;
                if (_oFinancialPositionSetup.AssetSetups.length>0 && _oFinancialPositionSetup.LiabilityWithOwnersEquitySetups.length>0) {
                    alert("Data Saved sucessfully");
                    
                    _oAssets = _oFinancialPositionSetup.AssetSetups;
                    _oLiablilityWithEquitys = _oFinancialPositionSetup.LiabilityWithOwnersEquitySetups;
                    RefreshListAssets(_oAssets);
                    RefreshListLiabilityWithEquity(_oLiablilityWithEquitys);
                }
                else {
                    alert(_oFinancialPositionSetup.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }
    $("#btnDeleteAssets").click(function(){
        debugger;
        var oFinancialPositionSetup= $('#tblAsstes').datagrid('getSelected');
        if(oFinancialPositionSetup==null)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblAsstes').datagrid('getRowIndex',oFinancialPositionSetup);
        if(oFinancialPositionSetup.FinancialPositionSetupID<=0)
        {
            alert("Delete sucessfully");
        }
        if (oFinancialPositionSetup.FinancialPositionSetupID > 0)
        {
            Delete(oFinancialPositionSetup);
        }
        $('#tblAsstes').datagrid('deleteRow',SelectedRowIndex);
        _oAssets = $('#tblAsstes').datagrid('getRows');
        for(var i=0; i<_oAssets.length; i++)
        {
            _oAssets[i].Sequence=i+1;
        }
        RefreshListAssets(_oAssets);
    });
    $("#btnDeleteLiabilityWithEquitys").click(function(){
        debugger;
        var oFinancialPositionSetup= $('#tblLiabilitWithEquitys').datagrid('getSelected');
        if(oFinancialPositionSetup==null)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblLiabilitWithEquitys').datagrid('getRowIndex',oFinancialPositionSetup);
        if(oFinancialPositionSetup.FinancialPositionSetupID<=0)
        {
            alert("Delete sucessfully");
        }
        if (oFinancialPositionSetup.FinancialPositionSetupID > 0)
        {
            Delete(oFinancialPositionSetup);
        }
        $('#tblLiabilitWithEquitys').datagrid('deleteRow',SelectedRowIndex);
        _oLiablilityWithEquitys = $('#tblLiabilitWithEquitys').datagrid('getRows');
        for(var i=0; i<_oLiablilityWithEquitys.length; i++)
        {
            _oLiablilityWithEquitys[i].Sequence=i+1;
        }
        RefreshListLiabilityWithEquity(_oLiablilityWithEquitys);
    });

    function Delete(oFinancialPositionSetup)
    {
        $.ajax
          ({
              type: "GET",
              dataType: "json",
              url : _sBaseAddress+  "/BalanceSheet/Delete",
              data: { id: oFinancialPositionSetup.FinancialPositionSetupID},
              contentType: "application/json; charset=utf-8",
              success: function (data) {
                  var feedbackmessage = jQuery.parseJSON(data);
                  if (feedbackmessage == "Deleted")
                  {
                      alert("Delete sucessfully");
                  }
                  else
                  {
                      alert(feedbackmessage);
                  }
              },
              error: function (xhr, status, error)
              {
                  alert(error);
              }
          });
    }

    $("#txtAccountHeadNameAssets").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oChartsOfAccount = {PathName: "SELECT * FROM View_ChartsOfAccount WHERE ComponentID = 2 AND AccountType=2" };//get Assets
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oChartsOfAccount,
                ControllerName: "ChartsOfAccount",
                ActionName: "GetsByString",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].AccountHeadID> 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: "AccountHeadCodeName", title: "AccountHead", width:250, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ComponentType", title: "ComponentType", width: 120, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "AccountTypeInString", title: "Account Type", width: 120, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winCOAs',
                            winclass: 'clsCOA',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblCOAs',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'COA List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
        if (code == 8|| code == 46) //backspace=8,delete=46
        {
            $("#txtAccountHeadNameAssets").val('');
            $("#txtAccountHeadNameAssets").removeClass('fontColorOfPickItem');
            //debugger;
            _oCOAs = [];
        }
    });
    $("#txtAccountHeadNameLiabilityWithEquity").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oChartsOfAccount = {PathName: "SELECT * FROM View_ChartsOfAccount WHERE ComponentID IN (3,4) AND AccountType=2" };//get Liabilitye and equity
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oChartsOfAccount,
                ControllerName: "ChartsOfAccount",
                ActionName: "GetsByString",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].AccountHeadID> 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: "AccountHeadCodeName", title: "AccountHead", width:250, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ComponentType", title: "ComponentType", width: 120, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "AccountTypeInString", title: "Account Type", width: 120, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winCOALWithEs',
                            winclass: 'clsCOA',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblCOAs',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'COA List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
        if (code == 8|| code == 46) //backspace=8,delete=46
        {
            $("#txtAccountHeadNameLiabilityWithEquity").val('');
            $("#txtAccountHeadNameLiabilityWithEquity").removeClass('fontColorOfPickItem');
            //debugger;
            _oCOAs = [];
        }
    });

    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winCOAs' || oPickerobj.winid =='winCOALWithEs') 
        {
            if (oreturnobjs != null && oreturnobjs.length > 0) {
                if(oPickerobj.winid =='winCOAs')
                {
                    $("#txtAccountHeadNameAssets").val(oreturnobjs.length+" Item's Selected");
                    $("#txtAccountHeadNameAssets").addClass('fontColorOfPickItem');
                    $("#txtAccountHeadNameAssets").focus();
                }else
                {
                    $("#txtAccountHeadNameLiabilityWithEquity").val(oreturnobjs.length+" Item's Selected");
                    $("#txtAccountHeadNameLiabilityWithEquity").addClass('fontColorOfPickItem');
                    
                    $("#txtAccountHeadNameLiabilityWithEquity").focus();
                }
                _oCOAs = oreturnobjs;
            }

        }

    }


    function RefreshControlLayout() {
        //FinancialPositionSetup
        $("#btnAdd").hide();
        $("#btnDelete").hide();

        if (HavePermission('Add', 'FinancialPositionSetup')) {
            $("#btnAdd").show();
        }


        if (HavePermission('Delete', 'FinancialPositionSetup')) {
            $("#btnDelete").show();
        }



    }

    function HavePermission(sOperationType,sDbObject) {
        var nUserId = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.currentUserID]));
        if(nUserId === -9) //check SuperUser
        {
            return true;
        }
        else
        {
            for(var i =0; i<_oAuthorizationRolesMapping.length; i++)
            {
                if(_oAuthorizationRolesMapping[i].OperationTypeInString === sOperationType && _oAuthorizationRolesMapping[i].DBObjectName === sDbObject)
                    return  true;
            }
            return false;
        }
    }

</script>
