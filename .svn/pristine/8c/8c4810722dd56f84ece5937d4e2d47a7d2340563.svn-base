@model ESimSol.BusinessObjects.EmployeeOfficial
<html>
<head>
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
</head>
<body>
    @using System.Web.UI.WebControls
    @using ESimSol.BusinessObjects
    <div style="font-family: Tahoma">
        <table border="0" cellspacing="2" cellpadding="2">
            <tr>
                <td style="background-color: #CFB53B; text-align: center; width: 930px; color: White">
                    <label id="lblHeaderName" style="font-size: 15px; font-weight: bold; text-decoration: Underline;
                        width: 930px">
                        </label>
                </td>
            </tr>
        </table>
    </div>
    <div style="clear: both;">
    </div>
   
    <div style="clear: both;">
    </div>
    <div style="width: 100%; font-family: Tahoma;">
        <div style="width: 50%; float: left;">
            <table style="width: 100%; font-size: 12px; font-weight: bold; text-align: right">
                <tr>
                    <td style="">
                        Scheme Name :
                    </td>
                    <td>
                        @*@Html.TextBox("txtSchemeName", " ", new { size = "29", disabled = "disable" })*@
                        @Html.TextBoxFor(model => model.AttendanceSchemeName, new { style = "width: 200px;", id = "txtSchemeName", disabled = "disable" })
                        <input type="hidden" id="attendanceSchemeID" />
                        <input value="pick" type="button" id="attendanceSchemePicker" style="width: 38px"
                            onclick="AttendanceSchemePiker()" />
                    </td>
                </tr>
                <tr>
                    <td>
                        Dept. Policy Name :
                    </td>
                    <td>
                        @*@Html.TextBox("txtDepartmentRequirementPolicy", " ", new { size = "29", disabled = "disable" })*@
                        @Html.TextBoxFor(model => model.DRPName, new { style = "width: 200px;", id = "txtDepartmentRequirementPolicy", disabled = "disable" })
                         <input type="hidden" id="departmentRequirementPolicyID" />
                        <input value="pick" type="button" id="departmentRequirementPolicyPicker" style="width: 38px"
                            onclick="DepartmentRequirementPolicyPicker()" />
                    </td>
                </tr>
                <tr>
                    <td>
                        Location :
                    </td>
                    <td>
                        @*@Html.TextBox("txtLocation", " ", new { size = "36", disabled = "disable" })*@
                        @Html.TextBoxFor(model => model.LocationName, new { style = "width: 243px;", id = "txtLocation", disabled = "disable" })
                    </td>
                </tr>
                <tr>
                    <td>
                        Dept./Section :
                    </td>
                    <td>
                        @*@Html.TextBox("txtDepartment", " ", new { size = "36", disabled = "disable" })*@
                        @Html.TextBoxFor(model => model.DepartmentName, new { style = "width: 243px;", id = "txtDepartment", disabled = "disable" })
                    </td>
                </tr>
                <tr>
                    <td>
                        Day Off :
                    </td>
                    <td>
                        @*@Html.TextBox("txtDayOff", " ", new { size = "36", disabled = "disable" })*@
                        @Html.TextBoxFor(model => model.AttendanceScheme.DayOff, new { style = "width: 243px;", id = "txtDayOff", disabled = "disable" })
                        @*<input type="hidden" id="dayOffID" />
                        <input value="pick" type="button" style="width: 38px" onclick="WeekdayPicker()" />*@
                    </td>
                </tr>
                <tr>
                    <td>
                        Attendance Calender :
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.AttendanceScheme.AttendanceCalendar, new { style = "width: 243px;", id = "txtAttendanceCalendar", disabled = "disable" })
@*                        <select id="cboAttendanceCalender" style="width: 243px;" onchange="" disabled="disable">
                        </select>*@
                    </td>
                </tr>
                
@*                <tr>
                    <td>
                        Nature of Employee :
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.AttendanceScheme.EmployeeNature, new SelectList(Enum.GetValues(typeof(ICS.Base.Client.Utility.EnumEmployeeNature))), new { id = "cboNatureOfEmployee", style = "width: 243px;", disabled = "disable" })
                    </td>
                </tr>*@
                
                @* <tr>
                    <td>
                    </td>
                    <td>
                        <input type="button" value="Add" onclick="HoliDayPicker()" />
                        <input type="button" value="Remove" onclick="RemoveForHoliDayTable()" />
                    </td>
                </tr>*@
                <tr>
                    <td>
                        Holiday :
                    </td>
                    <td style="float: right;">
                        <table id="tblHoliday" title="Holiday List" class="easyui-datagrid" style="width: 243px;
                            height: 130px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true"
                            autorowheight="false">
                            <thead>
                                <tr>
                                    <th field="HoliDayName" style="width: 190px;">
                                        Holiday
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td style="">
                        Designation :
                    </td>
                    <td><select id="cboDesignation" style="width: 243px;" onchange="">
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>
                        Current Shift :
                    </td>
                    <td>
                        <select id="cboCurrentShift" style="width: 243px;" onchange="">
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>
                        Date Of Join : 
                    </td>
                    <td>
                        <input id="txtDateOfJoin" type="text" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 243px;"/>  
                        @*<input type="datetime" id="txtDateOfJoin"/>*@
                    </td>
                </tr>
                <tr>
                    <td>
                        Date Of Confirmation : 
                    </td>
                    <td>
                        <input id="txtDateOfConfirmation" type="text" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 243px;" />  
                       @* <input type="datetime" id="txtDateOfConfirmation"/>*@
                    </td>
                </tr>
            </table>
        </div>
        <div style="margin-left: 25px; width: 47%; float: left;">
            <table style="width: 100%; font-size: 12px; font-weight: bold; text-align: right">
                <tr>
                    <td style="text-align: left">
                        Roster Plan:
                    </td>
                    <td style="text-align: left">
                         <input type="text" id="txtRosterPlan" disabled="disabled" style="width: 270px;" />
                    </td>
                </tr>
                <tr>
                    <table id="tblRosterPlan" title="Roster Plan List" class="easyui-datagrid" style="width: 400px;
                        height: 100px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true"
                        autorowheight="false">
                        <thead>
                            <tr>
                                <th field="Shift" style="width: 190px;">
                                    Shift
                                </th>
                                <th field="NextShift" style="width: 190px;">
                                    Next Shift
                                </th>
                            </tr>
                        </thead>
                    </table>
                </tr>
                <tr>
                    <td>
                        @*@Html.TextBox("txtRosterCycle", "", new { size = "10", disabled = "disable" })*@
                        @Html.TextBoxFor(model => model.AttendanceScheme.RosterCycle, new { style = "width: 100px;", id = "txtRosterCycle", disabled = "disable" })
                        Days Roster
                        @*<input type="checkbox" id="chkEnforceClosing" style="margin-left: 30px;" disabled="disable" />*@                        
                        @Html.CheckBoxFor(model => model.AttendanceScheme.EnforceMonthClosingRoster, new { id = "chkEnforceClosing", disabled = "disable" })
                        Enforcing Month Closing
                        <br />
                    </td>
                </tr>
           
             
                @* <br />
                <br />
                <br />
                <br />*@
                <tr>
                    <td>
                    </td>
                    <td>
                        Leave : @*  <input type="button" value="Add Leave" onclick="LeaveHeadPicker()" />
                        <input type="button" value="Remove Leave" onclick="RemoveForLeaveHeadTable()" />*@
                    </td>
                </tr>
                <br />
                <br />
                <tr>
                    <td style="float: right;">
                        <table id="tblLeave" class="easyui-datagrid" style="width: 420px; height: 124px;"
                               toolbar="" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true"
                               autorowheight="false">
                            <thead>
                                <tr>
                                    <th field="LeaveName" style="width: 190px;">
                                        Leave Head
                                    </th>
                                    @*<th field="TotalDay" style="width: 190px;">
                                        Day
                                    </th>*@
                                    <th data-options="field:'TotalDay',width:90,align:'right',editor:{type:'numberbox',options:{precision:0}}"
                                        align="right">
                                        Day
                                    </th>
                                    <th data-options="field: 'DeferredDay',width: 90,align:'right',editor:{type:'numberbox',options:{precision:0}}">
                                        Differed day
                                    </th>
                                    @*<th field="ActivationAfter" style="width: 190px;">*@
                                    <th field="ActivationAfterInString" width="90">
                                        @* <th data-options="field: 'ActivationAfter',width: 90,align:'right',editor:{type:'text',options:{data: }">*@
                                        Of
                                    </th>
                                </tr>
                            </thead>
                        </table>
                        @* <div id="toolbar">
                            <label>
                                Attendance Scheme Leave List
                            </label>
                            <input type="button" value="Update" style="float: right;" onclick="UpdateActivationAfter()" />
                            <select id="cboActivationAfter" style="mergin-left: 20px; width: 100px; float: right">
                            </select>
                        </div>*@
                    </td>
                </tr>
                <tr>
                    <td>
                        <input id="btnPickEmployee" type="button" value="Pick Other Employee To Assign" onclick="EmployeePicker()"/>
                        <input id="btnRemoveEmployee" type="button" value="Remove Employee" onclick="RemoveForEmployeeAssignTable()" />
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td>
                         <td style="float: right;">
                        <table id="tblEmployeeAssign" class="easyui-datagrid" style="width: 420px; height: 124px;"
                            toolbar="#toolbar" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true"
                            autorowheight="false">
                            <thead>
                                <tr>
                                    <th field="EmployeeName" style="width: 190px;">
                                        Employee Name
                                    </th>
                                    <th field="DesignationName" style="width: 190px;">
                                        Designation
                                    </th>
                                   
                                    @*<th field="ActivationAfter" style="width: 190px;">*@
                                    <th field="CurrentShiftName" width="90">
                                        @* <th data-options="field: 'ActivationAfter',width: 90,align:'right',editor:{type:'text',options:{data: }">*@
                                        Current Shift
                                    </th>
                                </tr>
                            </thead>
                        </table>
                        <div id="toolbar">
                             <select id="cboTblDesignation" style=" width: 100px; float: left">
                            </select>
                            <input type="button" value="Desg." style="" onclick="UpdateDesignation()" />
                            <select id="cboTblCurrentShift" style=" width: 150px; float: right">
                            </select>
                            <input type="button" value="Shift" style="float: right;" onclick="UpdateShift()" />
                        </div>
                    </td>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div style="clear: both;">
    </div>
    <div>
        <fieldset>
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                <tr>
                    <td style="width: 750px; text-align: right">
                    </td>
                    <td style="width: 50px">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save"
                            plain="true" onclick="Save()">Save</a>
                    </td>
                    <td style="width: 50px">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true"
                            onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">
    var _sBaseAddress = "";
    var _oEmployee = null;
    var _oAttendancecalenders = [];
    var _oEmployeeTypes = [];
    var _oDayOffs = [];
    var _oRosterPlanDetails = [];
    var _oRosterPlans = [];
    var _oDepartmentRequirementPolicys = [];
    var _oAttendanceSchemeHolidays = [];
    var _oAttendanceSchemeLeaves = [];
    var _oDesignations = [];
    var selectedRosterPlanDetails = [];
    var _oOrganograms = [];
    var locationID = null;
    var departmentID = null;
    var _oAttendanceScheme = null;
    var attendanceSchemeID = null;

    var _oEmployeeOfficial=null;

$(document).ready(function () {
    var obj = window.dialogArguments; 
    _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    _oEmployeeOfficial=@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    
    var header = "Official Information For " + obj.Employee.Name + " [" + obj.Employee.Code + "]";
    document.getElementById('lblHeaderName').innerHTML = header;

    if (_oEmployeeOfficial.EmployeeOfficialID>0)
    {
        //alert('Official information for this employee already exists. You can view only.');
        document.getElementById("departmentRequirementPolicyID").value=_oEmployeeOfficial.DRPID;
        _oAttendanceScheme=_oEmployeeOfficial.AttendanceScheme;
        _oAttendanceSchemeHolidays=_oAttendanceScheme.AttendanceSchemeHolidays;
        _oAttendanceSchemeLeaves=_oAttendanceScheme.AttendanceSchemeLeaves;
        _oRosterPlanDetails=_oAttendanceScheme.RosterPlanDetails;

        SetAttendanceScheme(_oAttendanceScheme);
        RefreshHoliDay(_oAttendanceSchemeHolidays);
        RefreshLeaveHead(_oAttendanceSchemeLeaves);
        RefreshRosterPlanDetails(_oRosterPlanDetails);
        
        //set current shift
        for (var i = 0; i < _oRosterPlanDetails.length; i++) 
        {
            debugger
            if (_oRosterPlanDetails[i].ShiftID==_oEmployeeOfficial.CurrentShiftID)
            {
                var oRPDs=[];
                oRPDs.push(_oRosterPlanDetails[i]);
                RefreshShift(oRPDs);
            }
        }
//        Set Designation
        var oOrganograms=[];
        var oOrganogram={DesignationID:_oEmployeeOfficial.DesignationID,Designation:_oEmployeeOfficial.DesignationName}
        oOrganograms.push(oOrganogram);
        RefreshDesignation(oOrganograms);

        //set date
        $('#txtDateOfJoin').datebox('setValue', _oEmployeeOfficial.DateOfJoinInString);
        $('#txtDateOfConfirmation').datebox('setValue', _oEmployeeOfficial.DateOfConfirmationInString);

        //document.getElementById("btnSave").style.display='none';
//        document.getElementById("attendanceSchemePicker").disabled=true;
//        document.getElementById("departmentRequirementPolicyPicker").disabled=true;

        document.getElementById("btnPickEmployee").style.display='none';
        document.getElementById("btnRemoveEmployee").style.display='none';
    }
    else{
        $('#txtDateOfJoin').datebox('setValue', icsdateformat(new Date()));
        $('#txtDateOfConfirmation').datebox('setValue', icsdateformat(new Date()));
    }
//  _oEmployee = obj.Employee;
// .text = ;
    //document.getElementById("lblHeaderName").value = header;
//    var listAttendanceCalenders="<option value='"+0+"'>" +"--Select Attendance Calenders--" + "</option>";
//    if(_oAttendancecalenders.length>0)
//    {
//        for (var i = 0; i < _oAttendancecalenders.length; i++) 
//        {
//            listAttendanceCalenders += "<option value='" + _oAttendancecalenders[i].AttendanceCalendarID+"'>" + _oAttendancecalenders[i].Name+"</option>";
//        }
//    }
//$("#cboAttendanceCalender").html(listAttendanceCalenders);
//var listEmployeeTypes="<option value='"+0+"'>" +"--Select Employee Types--" + "</option>";

//if(_oEmployeeTypes.length>0)
//{
//    for (var j = 0; j < _oEmployeeTypes.length; j++) 
//    {
//        listEmployeeTypes += "<option value='" + _oEmployeeTypes[j].EmployeeTypeID+"'>" + _oEmployeeTypes[j].Name+"</option>";
//    }
//}
//$("#cboEmployeeType").html(listEmployeeTypes);
       
    
});

function  icsdateformat(date)
{
    var mthNames = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
    var y = date.getFullYear();
    var m = date.getMonth();
    var d = date.getDate();
    //return m+'/'+d+'/'+y;
    var result= d +' '+ mthNames[m]+' '+ y;
        return result;
}
     
function RemoveForEmployeeAssignTable() {
    var oASH = $('#tblEmployeeAssign').datagrid('getSelected');
    if (oASH == null) {
        alert("Invalid Field!!! please select a valid Field!");
        return false;
    }
    var SelectedRowIndex = $('#tblEmployeeAssign').datagrid('getRowIndex', oASH);
    $('#tblEmployeeAssign').datagrid('deleteRow',SelectedRowIndex);
}

function UpdateShift()
{
    if($("#cboTblCurrentShift").val() <=0)
    {
        alert('Please select a Current Shift!');
        return;
    }
    var oObj= $('#tblEmployeeAssign').datagrid('getSelected'); 
    oObj.CurrentShiftID=$("#cboTblCurrentShift").val();
    var cboTblCurrentShift=document.getElementById('cboTblCurrentShift');
    var CurrentShiftName=cboTblCurrentShift.options[cboTblCurrentShift.selectedIndex].text;
    oObj.CurrentShiftName=CurrentShiftName;
    var SelectedRowIndex=$('#tblEmployeeAssign').datagrid('getRowIndex',oObj);
    $('#tblEmployeeAssign').datagrid('updateRow',{index: SelectedRowIndex,	row: oObj});
} 


function UpdateDesignation()
{       
    if($("#cboTblDesignation").val() <=0)
    {
        alert('Please select a Designation!');
        return;
    }
    var oObj= $('#tblEmployeeAssign').datagrid('getSelected'); 
    oObj.DesignationID=$("#cboTblDesignation").val();
    var cboTblDesignation=document.getElementById('cboTblDesignation');
    var designationName=cboTblDesignation.options[cboTblDesignation.selectedIndex].text;
    oObj.DesignationName=designationName;
    var SelectedRowIndex=$('#tblEmployeeAssign').datagrid('getRowIndex',oObj);
    $('#tblEmployeeAssign').datagrid('updateRow',{index: SelectedRowIndex,	row: oObj});
}


    


    function  RefreshListForEmployeeOfficial(oEmployee)
     {
        ////////debugger;
        var data=oEmployee;
        data={"total":""+data.length+"","rows":data};
        $('#tblEmployeeAssign').datagrid('loadData',data);
        $('#tblEmployeeAssign').datagrid({ selectOnCheck: false, checkOnSelect: false });
     }
     
     function RefreshListForAttendanceScheme(attendanceScheme) {

         $("#txtSchemeName")[0].value = attendanceScheme.Name;
//         $("#txtDepartmentRequirementPolicy")[0].value = attendanceScheme.DepartmentRequirementPolicyName;
//         $("#txtLocation")[0].value = attendanceScheme.Location;
          $("#attendanceSchemeID")[0].value = attendanceScheme.AttendanceSchemeID;
         attendanceSchemeID = attendanceScheme.AttendanceSchemeID;
         //$("#txtDepartment")[0].value = attendanceScheme.Department;
         var dayOffs = GetDayOffs(attendanceScheme.AttendanceSchemeID);
         $("#txtDayOff")[0].value = dayOffs;
         $("#cboAttendanceCalender").val(attendanceScheme.AttendanceCalenderID);
         document.getElementById('cboNatureOfEmployee').selectedIndex = attendanceScheme.EmployeeNature;
        
         $("#cboEmployeeType")[0].value = attendanceScheme.EmployeeTypeID;
          
         if (attendanceScheme.EnforceMonthClosingRoster == true) {           
            document.getElementById("chkEnforceClosing").checked = true;
         }
         if (attendanceScheme.OverTime == true) {            
            document.getElementById("chkOvertimeActivationAfter").checked = true;
         }        

         if (attendanceScheme.Accomodation == true) { 
            document.getElementById("chkAccomodationActivationAfter").checked = true;
         }
    
             
         
         document.getElementById('cboOvertimeActivationAfter').selectedIndex = attendanceScheme.OverTimeActivationAfter;
     
        
         
         $("#txtAccomodationActivationAfter")[0].value = attendanceScheme.AccommodationDeferredDay;
         document.getElementById('cboAccomodationActivationAfter').selectedIndex = attendanceScheme.AccommodationActivationAfter;
         //$("#cboAccomodationActivationAfter")[0].value = attendanceScheme.AccommodationDeferredDay;
         $("#txtDaysOffNoInWeek")[0].value = attendanceScheme.DayOffNoInWeek;
         ////////debugger;
         var rosterplanID = null;
        
         for (var k = 0; k < _oDepartmentRequirementPolicys.length; k++) {
             if (_oDepartmentRequirementPolicys[k].DepartmentRequirementPolicyID == attendanceScheme.DepartmentRequirementPolicyID) {
                 rosterplanID = _oDepartmentRequirementPolicys[k].RosterPlanID;
             }
         }

         for (var i = 0; i < _oRosterPlans.length; i++) {
             if (_oRosterPlans[i].RosterPlanID == rosterplanID) {
                 $("#txtRosterPlan")[0].value = _oRosterPlans[i].Description;
                 $("#txtRosterCycle")[0].value=_oRosterPlans[i].RosterCycle;
                 break;
             }
         }
        
         for (var j = 0; j < _oRosterPlanDetails.length; j++) {
             if (_oRosterPlanDetails[j].RosterPlanID == rosterplanID) {
                 selectedRosterPlanDetails.push(_oRosterPlanDetails[j]);
             }
         }
          RefreshRosterPlanDetails(selectedRosterPlanDetails);
         var selectedAttendanceSchemeHoliDays=[];
         var selectedAttendanceSchemeLeaves=[];
         for (var i = 0; i < _oAttendanceSchemeHolidays.length; i++) {
             if (_oAttendanceSchemeHolidays[i].AttendanceSchemeID == attendanceScheme.AttendanceSchemeID) {
                 selectedAttendanceSchemeHoliDays.push(_oAttendanceSchemeHolidays[i]);
             }
         }
         for (var i = 0; i < _oAttendanceSchemeLeaves.length; i++) {
             if (_oAttendanceSchemeLeaves[i].AttendanceSchemeID == attendanceScheme.AttendanceSchemeID) {
                 selectedAttendanceSchemeLeaves.push(_oAttendanceSchemeLeaves[i]);
             }
         }
        RefreshLeaveHead(selectedAttendanceSchemeLeaves);

        RefreshHoliDay(selectedAttendanceSchemeHoliDays);
         
          var listSelectedShifts="<option value='"+0+"'>" +"--Select--" + "</option>";
         ////////debugger;
        if(selectedRosterPlanDetails.length>0)
        {
            for (var j = 0; j < selectedRosterPlanDetails.length; j++) 
            {
                listSelectedShifts += "<option value='" + selectedRosterPlanDetails[j].ShiftID+"'>" + selectedRosterPlanDetails[j].Shift+"</option>";
            }
        }
        $("#cboCurrentShift").html(listSelectedShifts);
         $("#cboTblCurrentShift").html(listSelectedShifts); 
          for (var i = 0; i < _oDepartmentRequirementPolicys.length; i++) {
            if (_oDepartmentRequirementPolicys[i].DepartmentRequirementPolicyID == attendanceScheme.DepartmentRequirementPolicyID) {
                locationID = _oDepartmentRequirementPolicys[i].LocationID;
                departmentID = _oDepartmentRequirementPolicys[i].DepartmentID;
            }
        }
         var selectedDesignationIDs = [];
         for (var i = 0; i < _oOrganograms.length; i++) {
             if (_oOrganograms[i].LocationID == locationID && _oOrganograms[i].DepartmentID == departmentID) {
                 selectedDesignationIDs.push(_oOrganograms[i].DesignationID);
             }
         }
         var selectedDesignations = [];
         for (var i = 0; i < selectedDesignationIDs.length; i++) {
             for (var j = 0; j < _oDesignations.length; j++) {
                 if (selectedDesignationIDs[i] == _oDesignations[j].DesignationID) {
                     selectedDesignations.push(_oDesignations[j]);
                 }
             }
         }
         ////////debugger;
         var listSelectedDesignations="<option value='"+0+"'>" +"--Select--" + "</option>";
         ////////debugger;
        if(selectedDesignations.length>0)
        {
            for (var j = 0; j < selectedDesignations.length; j++) 
            {
                listSelectedDesignations += "<option value='" + selectedDesignations[j].DesignationID+"'>" + selectedDesignations[j].Name+"</option>";
            }
        }
        $("#cboDesignation").html(listSelectedDesignations);
        $("#cboTblDesignation").html(listSelectedDesignations);
         
     }

     

     
       function GetDayOffs(id) {
         var dayOffs = "";
         for (var i = 0; i < _oDayOffs.length; i++) {
             if (_oDayOffs[i].AttendanceSchemeID == id) {
                 dayOffs += _oDayOffs[i].WeekDay+" ,";
             }
         }
         return dayOffs;
     }
     

function RefreshObjectForEmployeeOfficialMain() {
  ////debugger;
    var cboDesignation= document.getElementById("cboDesignation");
    var cboCurrentShift = document.getElementById("cboCurrentShift"); 
    var oEmployeeOfficial = { 
        EmployeeOfficialID:_oEmployeeOfficial.EmployeeOfficialID,           
        EmployeeName: _oEmployeeOfficial.EmployeeName,
        AttendanceSchemeID: _oAttendanceScheme.AttendanceSchemeID,
        DRPID : $("#departmentRequirementPolicyID").val(),
        EmployeeID:_oEmployeeOfficial.EmployeeID,
        DateOfJoin: $('#txtDateOfJoin').datebox('getValue'),
        DateOfConfirmation: $('#txtDateOfConfirmation').datebox('getValue'),
        DesignationID:cboDesignation.options[cboDesignation.selectedIndex].value,
        CurrentShiftID:cboCurrentShift.options[cboCurrentShift.selectedIndex].value
    };
    return oEmployeeOfficial;
}

function MakingListOfEmployeeOfficial() {
    ////debugger;
    var oEmployeeOfficials = [];
    var mainEmployeeOfficial = RefreshObjectForEmployeeOfficialMain();
    oEmployeeOfficials=$('#tblEmployeeAssign').datagrid('getRows');
    oEmployeeOfficials.push(mainEmployeeOfficial);
    return oEmployeeOfficials;
}

function Save() {
////debugger;
    if (!ValidateEmployeeOfficial())return;
    var oEmployeeOfficials = MakingListOfEmployeeOfficial();
    $.ajax({
        type: "POST",
        dataType: "json",        
        url : _sBaseAddress+  "/Employee/OfficialInfoIU",
        traditional: true,
        data:  JSON.stringify(oEmployeeOfficials),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var oEmployeeOfficial = jQuery.parseJSON(data);
            var x = [];
            x = oEmployeeOfficial.EmployeeOfficials;
            if (x != null) {
                if (x.length>0) {
                alert("Data Saved sucessfully");
                window.returnValue = oEmployeeOfficial;
                window.close();
            }
            }
            else {
                alert(oEmployeeOfficial.ErrorMessage);
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }
    });
 }

function ValidateEmployeeOfficial()
{
    debugger;
    if (_oAttendanceScheme==null || _oAttendanceScheme.AttendanceSchemeID<=0) {
        alert("Please pick attendance scheme!");
        $('#txtSchemeName').focus();
        return false;
    }
    if (document.getElementById("departmentRequirementPolicyID").value == null || document.getElementById("departmentRequirementPolicyID").value == "") {
        alert("Please pick Department policy!");
        $('#txtDepartmentRequirementPolicy').focus();
        return false;
    }
    var sDateOfJoin= $('#txtDateOfJoin').datebox('getValue');
    var dDateOfJoin = new Date(sDateOfJoin);

    var sConfirmationDate= $('#txtDateOfConfirmation').datebox('getValue');
    var dConfirmationDate = new Date(sConfirmationDate);

    if (dDateOfJoin>dConfirmationDate)
    {
        alert('Confirmation Date must greater than Date of join.!!');
        $('#txtDateOfConfirmation').focus();
        return false
    }

    var e = document.getElementById("cboDesignation");
    var nDesignationID = e.options[e.selectedIndex].value;
    if (nDesignationID<=0)
    {
        alert('Please Select Designation.!!');
        $("#cboDesignation").focus();
        return false;
    }

    var e = document.getElementById("cboCurrentShift");
    var nCurrentShiftID = e.options[e.selectedIndex].value;
    if (nCurrentShiftID<=0)
    {
        alert('Please Select CurrentShift.!!');
        $("#cboCurrentShift").focus();
        return false;
    }
    return true;
}     
function SetAttendanceScheme(oAttendanceScheme)
{
       $("#txtSchemeName")[0].value = oAttendanceScheme.Name;
       $("#txtDayOff")[0].value = oAttendanceScheme.DayOff;
       $("#txtAttendanceCalendar")[0].value = oAttendanceScheme.AttendanceCalendar;
       //$("#txtEmployeeType")[0].value = oAttendanceScheme.EmployeeType;       
   

       
       $("#txtRosterPlan")[0].value = oAttendanceScheme.RosterPlanDescription;
       if (oAttendanceScheme.EnforceMonthClosingRoster == true) {document.getElementById("chkEnforceClosing").checked = true;}
       $("#txtRosterCycle")[0].value = oAttendanceScheme.RosterCycle;
       

        if (oAttendanceScheme.OverTime == true) 
        {document.getElementById("chkOvertimeActivationAfter").checked = true;}
        else {document.getElementById("chkOvertimeActivationAfter").checked = false;}
               
        document.getElementById('cboOvertimeActivationAfter').value = oAttendanceScheme.OverTimeActivationAfter;
                
        
 
        $("#txtAlternativeDayOffActivationAfter")[0].value = oAttendanceScheme.AlternativeDayOffDeferredDay;
        document.getElementById('cboAlternativeDayOffActivationAfter').value = oAttendanceScheme.AlternativeDayOffActivationAfter;

        
        if (oAttendanceScheme.Accomodation == true) 
        {document.getElementById("chkAccomodationActivationAfter").checked = true;}
        else {document.getElementById("chkAccomodationActivationAfter").checked = false;}
        $("#txtAccomodationActivationAfter")[0].value = oAttendanceScheme.AccommodationDeferredDay;
        document.getElementById('cboAccomodationActivationAfter').value = oAttendanceScheme.AccommodationActivationAfter;
        

        $("#txtDaysOffNoInWeek")[0].value = oAttendanceScheme.DayOffNoInWeek;       
                 
}

function AttendanceSchemePiker() {
    var oEmployeeOfficials=$('#tblEmployeeAssign').datagrid('getRows');
    if (oEmployeeOfficials.length>0)
    {
        alert('You already assigned '+oEmployeeOfficials.length.toString() +' employees. Remove all employees from grid first.!!');
        return;
    }
    var oParameter = new Object();
    oParameter.Name = "Pick Attendance Scheme";
    oParameter.MultipleItemReturn=false;
    var url = _sBaseAddress + "/AttendanceScheme/AttendanceSchemeSearch";
    var oAttendanceScheme = window.showModalDialog(url, oParameter, 'dialogHeight:423px;dialogWidth:850px;dialogLeft:150;dialogRight:150;dialogTop:200;center:yes;resizable:yes;status:no;scroll:no');
    //_oAttendanceScheme = RefreshListForAttendanceScheme(oAttendanceScheme);
    ////debugger;
    if (oAttendanceScheme ==null)return;
    if (oAttendanceScheme.AttendanceSchemeID>0)
    {
       _oAttendanceScheme=null;
       _oAttendanceScheme=oAttendanceScheme;
       SetAttendanceScheme(oAttendanceScheme);
       GetSchemeHolidays(oAttendanceScheme.AttendanceSchemeID);
       GetSchemeLeaves(oAttendanceScheme.AttendanceSchemeID);
       GetRosterPlanDetail(oAttendanceScheme.RosterPlanID);
    }

}

function GetRosterPlanDetail(RosterPlanID)
{    
    if (RosterPlanID<=0 || RosterPlanID==null)
    {
        alert('Invalid Roster plan');
        return;
    }

    $.ajax({
        type: "POST",
        dataType: "json",        
        url : _sBaseAddress+  "/RosterPlan/GetRosterPlanDetail",
        traditional: true,
        data:  JSON.stringify({nID:RosterPlanID}),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var oRosterPlanDetails = jQuery.parseJSON(data);
            if (oRosterPlanDetails.length > 0) {
                _oRosterPlanDetails=[];
                _oRosterPlanDetails=oRosterPlanDetails;
                RefreshRosterPlanDetails(_oRosterPlanDetails);
                RefreshShift(_oRosterPlanDetails);
            }
            else {
                alert(_oRosterPlanDetails[0].ErrorMessage);
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }

    });
}

function RefreshRosterPlanDetails(oRosterPlanDetails) {
    var data=oRosterPlanDetails;
    data={"total":""+data.length+"","rows":data};
    $('#tblRosterPlan').datagrid('loadData',data);
    $('#tblRosterPlan').datagrid({ selectOnCheck: false, checkOnSelect: false });
}

function GetSchemeHolidays(AttendanceSchemeID)
{   
    _oAttendanceSchemeHolidays=[]; 
    if (AttendanceSchemeID<=0 || AttendanceSchemeID==null)
    {
        RefreshHoliDay(_oAttendanceSchemeHolidays);
        return;
    }

    $.ajax({
        type: "POST",
        dataType: "json",        
        url : _sBaseAddress+  "/AttendanceScheme/GetSchemeHolidays",
        traditional: true,
        data:  JSON.stringify({nASID:AttendanceSchemeID}),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var oACHs = jQuery.parseJSON(data);
            if (oACHs.length > 0) {                
                _oAttendanceSchemeHolidays=oACHs;
                RefreshHoliDay(_oAttendanceSchemeHolidays);
            }
            else {
                alert(_oAttendanceSchemeHolidays[0].ErrorMessage);
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }

    });
}

function  RefreshHoliDay(oHolidays)
{
    var data=oHolidays;
    data={"total":""+data.length+"","rows":data};
    $('#tblHoliday').datagrid('loadData',data);
    $('#tblHoliday').datagrid({ selectOnCheck: false, checkOnSelect: false });
}

function GetSchemeLeaves(AttendanceSchemeID)
{   
    _oAttendanceSchemeLeaves=[]; 
    if (AttendanceSchemeID<=0 || AttendanceSchemeID==null)
    {
        RefreshLeaveHead(_oAttendanceSchemeLeaves);
        return;
    }
    $.ajax({
        type: "POST",
        dataType: "json",        
        url : _sBaseAddress+  "/AttendanceScheme/GetSchemeLeavs",
        traditional: true,
        data:  JSON.stringify({nASID:AttendanceSchemeID}),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var oASLs = jQuery.parseJSON(data);
            if (oASLs.length > 0) {                
                _oAttendanceSchemeLeaves=oASLs;
                RefreshLeaveHead(_oAttendanceSchemeLeaves);
            }
            else {
                alert(_oAttendanceSchemeLeaves[0].ErrorMessage);
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }

    });
}

function  RefreshLeaveHead(oLeaveHeads)
{
    var data=oLeaveHeads;
    data={"total":""+data.length+"","rows":data};
    $('#tblLeave').datagrid('loadData',data);
    $('#tblLeave').datagrid({ selectOnCheck: false, checkOnSelect: false });
}
    
function DepartmentRequirementPolicyPicker() {
    debugger;
    var oEmployeeOfficials=$('#tblEmployeeAssign').datagrid('getRows');
    if (oEmployeeOfficials.length>0)
    {
        alert('You already assigned '+oEmployeeOfficials.length.toString() +' employees. Remove all employees from grid first.!!');
        return;
    }
    var oParameter = new Object();
    oParameter.MultipleItemReturn = false;
    var url = _sBaseAddress + "/DepartmentRequirementPolicy/DepartmentRequirementPolicySearch";
    var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:300px;dialogWidth:750px;dialogLeft:150;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
    
    if (oReturnObject==null)return;
    if (oReturnObject=='undefined')return;
    debugger;    
    $("#txtDepartmentRequirementPolicy")[0].value = oReturnObject.Name;
    $("#departmentRequirementPolicyID")[0].value = oReturnObject.DepartmentRequirementPolicyID;
    $("#txtLocation")[0].value = oReturnObject.LocationName;
    $("#txtDepartment")[0].value = oReturnObject.DepartmentName;
    GetDesignationByOrganogram(oReturnObject.LocationID,oReturnObject.DepartmentID);
}


function GetDesignationByOrganogram(nLocationID,nDepartmentID)
{   
    _oOrganograms=[]; 
    if (nLocationID<=0 || nLocationID==null)
    {
        RefreshDesignation(_oOrganograms)
        return;
    }
    if (nDepartmentID<=0 || nDepartmentID==null)
    {
        RefreshDesignation(_oOrganograms)
        return;
    }
    var tsv = ((new Date()).getTime()) / 1000;
    $.ajax({
        type: "GET",
        dataType: "json",
        url: _sBaseAddress+ "/DepartmentRequirementDesignation/Gets",
        data: { nLocationID: nLocationID,nDepartmentID:nDepartmentID,ts:tsv },
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            ////debugger;
            var oOrganograms = jQuery.parseJSON(data);
            if (oOrganograms.length > 0) {
                
                _oOrganograms=oOrganograms;
                RefreshDesignation(_oOrganograms);
            }
            else {
                alert(_oOrganograms[0].ErrorMessage);
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }

    });
}

function RefreshDesignation(oOrganograms)
{
    var listSelectedDesignations=""; 
    if (_oEmployeeOfficial.EmployeeOfficialID<=0)
    {
        listSelectedDesignations="<option value='"+0+"'>" +"--Select--" + "</option>";         
    }   
    if(oOrganograms.length>0)
    {
        for (var j = 0; j < oOrganograms.length; j++) 
        {
            listSelectedDesignations += "<option value='" + oOrganograms[j].DesignationID+"'>" + oOrganograms[j].DesignationName+"</option>";
        }
    }
    $("#cboDesignation").html(listSelectedDesignations);
    $("#cboTblDesignation").html(listSelectedDesignations);     
}

function RefreshShift(oRosterPlanDetails)
{
    var listSelectedShifts="";         
    if (_oEmployeeOfficial.EmployeeOfficialID<=0)
    {
        listSelectedShifts="<option value='"+0+"'>" +"--Select--" + "</option>";         
    }
    if(oRosterPlanDetails.length>0)
    {
        for (var j = 0; j <  oRosterPlanDetails.length; j++) 
        {
            listSelectedShifts += "<option value='" + oRosterPlanDetails[j].ShiftID+"'>" + oRosterPlanDetails[j].Shift+"</option>";
        }
    }
    $("#cboCurrentShift").html(listSelectedShifts);
    $("#cboTblCurrentShift").html(listSelectedShifts);
}

function EmployeePicker() {
debugger;
    if (!ValidateEmployeeOfficial())return;
    var oParameter = new Object();
    oParameter.Name = "Employee Advance Search";
    oParameter.MultipleItemReturn=true;
    var url = _sBaseAddress + "/Employee/EmployeeHRMPiker";
    var oEmployees = window.showModalDialog(url, oParameter, 'dialogHeight:270px;dialogWidth:930px;dialogLeft:150;dialogRight:150;dialogTop:200;center:yes;resizable:yes;status:no;scroll:no');
    debugger;
    if (oEmployees.length<=0)return;
    var oEmployeeOfficials = [];
    for (var i = 0; i < oEmployees.length; i++) {
        if (oEmployees[i].WorkingStatus<=0 && oEmployees[i].EmployeeID!=_oEmployeeOfficial.EmployeeID)
        {
            var oEmployeeOfficial= RefreshObjectForEmployeeOfficial(oEmployees[i]);
            oEmployeeOfficials.push(oEmployeeOfficial);
        }
    }
    if (oEmployeeOfficials.length>0)
    {
        RefreshListForEmployeeOfficial(oEmployeeOfficials);
    }else {
        alert('Your Selected Employees are already assigned official Information.!!');
    }
}

function RefreshObjectForEmployeeOfficial(oEmployee) {
    var oEmployeeOfficial = {            
        EmployeeName: oEmployee.Name,
        AttendanceSchemeID: _oAttendanceScheme.AttendanceSchemeID,
        EmployeeID:oEmployee.EmployeeID,
        DRPID : $("#departmentRequirementPolicyID").val(),        
        DateOfJoin: $('#txtDateOfJoin').datebox('getValue'),
        DateOfConfirmation: $('#txtDateOfConfirmation').datebox('getValue'),
        DesignationID :0,
        DesignationName:"",
        CurrentShiftID:0,
        CurrentShiftName:""
    };
    return oEmployeeOfficial;
}  
         
function Close() {
    window.close();
}
$(document).keydown(function (e)
{
    var keyCode = e.keyCode || e.which;
    if (keyCode == 27)
    {
        window.close();
    }
});
</script>
