 @model IEnumerable<ESimSol.BusinessObjects.DULedger>
    @{
        ViewBag.Title = "DU Ledger";
    }

    <div ng-app="DUSApp" class="form-horizontal regionDULedger" style="width:1020p!important">
        <div ng-controller="DUSCntrl">
            <div class="ui-grid-top-panel" style="height:40px">
                <div class="text-left" style="padding-left:3px;padding-top:6px">
                    <div class="row col-md-12">
                        @*<div class="col-md-2 text-right" style="padding-left:35px;">
                           
                            <select style=" " class=" form-control" ng-model="cboDate" ng-change="DateChange()" ng-options="item.id as item.Value for item in CompareOperators">
                                <option value="">--Slecet One</option>
                            </select>
                        </div>*@
                        <div class="form-inline" style="padding-left:35px;">
                            <span> Date: From </span>
                            <div class="input-group date date-container">
                                <input type="text" class="form-control" style="width:100px" ng-model="DULedger.StartDateSt"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                            </div>
                            <span>to</span>
                            <div class="input-group date date-container">
                                <input type="text" class="form-control" style="width:100px" ng-model="DULedger.EndDateSt" ng-disabled="EndDateDisabled"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                            </div>
                            <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Refresh()"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Refresh</button>
                            <div style="float:right">
                                <button type="button" class="btn btn-sm btn-primary" style="float:right" aria-label="Left Align" ng-click="PrintDetails()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Print</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div>
                <div class="ui-grid-top-panel">
                    @*<div class="container" style="width:98%; height:30px">
                        <div class="form-inline">
                            <button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="view()"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> View Buyer Wise</button>
                            <button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="StepSetup()"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> View Mkt Wise</button>
                        </div>
                    </div>*@
                </div>
                <div style="height:525px" ui-grid="gridOptions" ui-grid-selection ui-grid-pinning class="grid"></div>
            </div>
        </div>
    </div>

    <style type="text/css">
        
        .regionDULedger .form-horizontal .control-label {
            padding-top: 3px;
        }

        .regionDULedger .form-control {
            height: 26px;
            padding: 0px 6px;
            font-size: 12px;
        }

        .regionDULedger .col-md-12 {
            width: 100%;
            padding-right: 5px;
            padding-left: 5px;
            margin-bottom: 5px;
        }

        .regionDULedger .col-md-2 {
            width: 16.6%;
            padding-right: 5px;
            padding-left: 5px;
        }

        .regionDULedger .col-md-3 {
            width: 20%;
            padding-right: 5px;
            padding-left: 5px;
        }

        .regionDULedger .col-md-4 {
            width: 28%;
            padding-right: 5px;
            padding-left: 5px;
        }

        .regionDULedger .col-md-5 {
            width: 40%;
            padding-right: 5px;
            padding-left: 0px;
        }

        .regionDULedger .col-md-6 {
            width: 50%;
            padding-right: 5px;
            padding-left: 5px;
        }

        .regionDULedger .col-md-10 {
            width: 83%;
            padding-right: 5px;
            padding-left: 5px;
        }

        .regionDULedger .col-md-8 {
            width: 69%;
            padding-right: 5px;
            padding-left: 5px;
        }

        .regionDULedger .btn-sm {
            padding: 3px 10px;
        }

        .regionDULedger .input-group-addon {
            padding: 4px 8px;
        }

        .ui-grid-row .ui-grid-cell {
           /*background-color: inherit !important;*/
        }

        .ui-grid-cell.lightGreen {
           background-color:  #cce698!important ;  /*90EE90*/ /*8ab92d*/ /*B5DA69*/
           color: #000 !important;
           font-size:12px;
           font-weight:bold;
        }
        .ui-grid-cell.lightGreen_79 {
           background-color:  #cce698!important ;  /*CEDD92*/ /*EAFCA6*/
           color: #000 !important;
           font-size:12px;
           font-weight:normal;
        }
   
        .ui-grid-cell.lightGrey {
           background-color: #DCDCDC !important ;  
           color: #000 !important;
           font-size:12px;
           font-weight:normal;
        }
        .ui-grid-cell.lightBlue {
           background-color: #bbd0f7 !important ;  /*76a0ef*/
           color: #000 !important;
           font-size:12px;
           font-weight:normal;
        }
        .ui-grid-cell.lightBlueF2 {
           background-color: #8db0f2 !important ;  
           color: #000 !important;
           font-size:12px;
           font-weight:normal;
        }
        
        .ui-grid-cell.lightGreyE6 {
           background-color: #e6e6e6 !important ;  
           color: #000 !important;
           font-size:12px;
           font-weight:normal;
        }
        .my-button {
            /*padding-top:-15px;*/
            background:#B5DA69;
            display: none;
            position: relative;

        }
   .ui-grid-cell:hover .my-button {
        display: block;
        padding-top:-5px;
        width: 95%;
        background-color: #555;
        color: #fff;
        text-align: center;
        border-radius: 6px;
        /*padding: 5px 0;*/
        position: static;
        z-index: 1;
        /*bottom: 2%;
        left: 1%;*/
        /*margin-top: 5px;*/
        opacity: 10;
        transition: opacity 2s;
        overflow:visible;
        visibility:visible;
        font-size:8px;
        cursor:pointer;
    }
    </style>

    <script type="text/javascript">

    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));

    var oDULedgers =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oDULedger = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DULedger));
    var nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oBusinessUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
    sessionStorage.setItem('BUID',nBUID);

    var  DUSApp = angular.module('DUSApp',['ngAnimate','ui.bootstrap','ui.grid','ui.grid.selection','ui.grid.pinning','ui.grid.resizeColumns','ms.service']);
    DUSApp.controller('DUSCntrl', function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession,icsMethod)
    {
        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });
        oDULedgers= (userSession.getData('DULedgers').length>0)? userSession.getData('DULedgers'):oDULedgers;
        oDULedger= (sessionStorage.getItem('DULedger')!=null)? JSON.parse(sessionStorage.getItem('DULedger')):oDULedger;
      
        $scope.BusinessUnits=oBusinessUnits;
        $scope.BusinessUnitID=nBUID;
        $scope.DUBusinessUnitID=nBUID;
        $scope.DULedger=oDULedger;
        $scope.selectedItems=[];

        $scope.gridOptions ={
            enableSorting: false,
            enableFullRowSelection: true,
            enableSelectAll: false,
            multiSelect:false,
            rowHeight:40,
            selectedItems: $scope.selectedItems,
            //enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
            //enableVarticalScrollbar: uiGridConstants.scrollbars.ALWAYS,
            columnDefs: [
                {   field: 'OrderTypeSt', name: 'Order Type',cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity);},
                width: '11%',enableCellEdit: false ,pinnedLeft:true,
                    //cellTemplate:'<div ng-dblclick="grid.appScope.ShowDetails(row.entity)" style="padding-top:5px;">{{row.entity.OrderTypeSt}}</div>' 
                cellTemplate:  '<div ng-dblclick="grid.appScope.ShowDetails(row.entity)" style="padding-top:5px;">{{row.entity.OrderTypeSt}} <span class="my-button">Double Click To View Details </span></div>' 
                },
                {   field: 'PaymentTypeSet', name: 'Payment Type',  cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity);}, width: '11%',enableCellEdit: false
                },
                {   field: 'OrderCount', name: 'Count',  cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex){return grid.appScope.GetClassByFiled(row.entity,col);},
                    width: '8%',enableCellEdit: false
                },
                {   field: 'QtySt', name: 'Qty',  cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClassByFiled(row.entity,col);},
                    width: '9%',enableCellEdit: false , //cellFilter:'number:0'
                },
                {   field: 'AmountSt', name: 'Amount',  cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClassByFiled(row.entity,col);},
                    width: '10%',enableCellEdit: false , //cellFilter:'number:0'
                },
                {   field: 'Qty_DCSt', name: 'DC Qty',  cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClassByFiled(row.entity,col);},
                    width: '9%',enableCellEdit: false  ,// cellFilter:'number:0'
                },
                    {   field: 'Amount_DCSt', name: 'DC Amount',  cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClassByFiled(row.entity,col);},
                    width: '10%',enableCellEdit: false  , //cellFilter:'number:0'
                },
                {
                    field: 'Amount_PaidSt', name: 'Paid Amount',cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClassByFiled(row.entity,col);},
                    width: '10%',enableCellEdit: false  , //cellFilter:'number:0'
                },
                {   field: 'Qty_YetToSt', name: 'Balance Qty ',  cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClassByFiled(row.entity,col);},
                    width: '9%',enableCellEdit: false  , //cellFilter:'number:0'
                },
                {   field: 'Amount_YetToSt', name: 'Balance Amount ', cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClassByFiled(row.entity,col);},
                    width: '10%',enableCellEdit: false  , //cellFilter:'number:0'
                }
            ],
            data:oDULedgers,
            onRegisterApi:function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
           
                //if(oDUOrderSetups.length>0 && userSession.getRowIndex()>=0)
                //{
                //    $scope.gridApi.grid.modifyRows(oDUOrderSetups);
                //    $scope.gridApi.selection.selectRow(oDUOrderSetups[userSession.getRowIndex()]);
                //    $scope.RowSelect(oDUOrderSetups[userSession.getRowIndex()]);
                //}
                userSession.clear();
            }
        };

       
        $scope.GetClass=function(row)
        {
            debugger;
            if(row.DyeingOrderType==0 && row.OrderTypeSt.includes('Order Issue'))
                return 'lightGreen text-center';
            else if(row.PaymentType==0 && row.DyeingOrderTypeSt!=row.OrderTypeSt)
                return 'lightGreen_79 text-center';
            else
                return '';
        }
        $scope.GetClassByFiled=function(row,col)
        {
            var sGetClass=$scope.GetClass(row);
            if(sGetClass=='')
            {
                if(col.field=='OrderCount')
                    return 'lightGreyE6 text-center';
                else if(col.field == 'QtySt' || col.field == 'AmountSt')
                    return 'lightGrey text-right';
                else if(col.field == 'Amount_PaidSt')
                    return 'lightBlueF2 text-right';
                else if(col.field == 'Qty_DCSt' || col.field == 'Amount_DCSt')
                    return 'lightBlue text-right';
                else if(col.field == 'Qty_YetToSt' || col.field == 'Amount_YetToSt')
                    return 'lightBlue text-right';
                else
                return 'lightGrey text-right';
            }
            else 
                return sGetClass;
        }

        $scope.Refresh = function()
        {
            var obj= {
                Params:icsdateformat(new Date($scope.DULedger.StartDateSt)) +'~'+ icsdateformat(new Date($scope.DULedger.EndDateSt))+ '~' + 1 +'~'+ 1 +'~'+ 0 +'~'+0 +'~'+0+'~'+0
            }
            console.log(obj);
            $http.post(_sBaseAddress + '/DULedger/GetsDULedger',JSON.stringify(obj)).then(
                  function (response)
                  {
                      debugger;
                      var results=JSON.parse(response.data);
                      console.log(results);
                      if (results.length > 0) 
                      {
                          if(results[0].ErrorMessage=='')
                              $scope.gridOptions.data= results;
                          else
                          {
                              alert(results[0].ErrorMessage); return;
                          }
                      }
                      else
                      {
                          msModal.Message({ headerTitle: '', bodyText: 'No Data Found !!', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                          return;
                      }
                  },
                  function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
            );
        }

        $scope.ShowDetails=function(value)
        {
            sessionStorage.setItem("DULedger",JSON.stringify($scope.DULedger));
            sessionStorage.setItem("DULedgers", JSON.stringify($scope.gridOptions.data));
            //sessionStorage.setItem("SelectedRowIndex", index);
            sessionStorage.setItem("BackLink", window.location.href);
            sessionStorage.setItem("BUID",nBUID);
            var  Params=icsdateformat(new Date($scope.DULedger.StartDateSt)) +'~'+ icsdateformat(new Date($scope.DULedger.EndDateSt))+ '~' + 1 +'~'+ 2 +'~'+ value.DyeingOrderType +'~'+value.PaymentType +'~'+0+'~'+value.CurrencyID
            window.location.href=_sBaseAddress + '/DULedger/ViewDULedgersDetails?sParam='+Params+'&buid='+nBUID;
        }

        $scope.PrintDetails=function(value)
        {
            var  Params=icsdateformat(new Date($scope.DULedger.StartDateSt)) +'~'+ icsdateformat(new Date($scope.DULedger.EndDateSt))+ '~' + 1 +'~'+ 1 +'~'+ 0 +'~'+0 +'~'+0+'~'+0;
            window.open(_sBaseAddress + '/DULedger/PrintDULedger?sParam='+Params+'&nBUID='+nBUID);
        }
        
    });

    </script>
