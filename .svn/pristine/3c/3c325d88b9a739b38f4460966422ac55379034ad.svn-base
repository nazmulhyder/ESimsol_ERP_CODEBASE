@{
    ViewBag.Title = "EL Encashment";
}
<!DOCTYPE html>
<html>
<head>
    <title> EL Encashment </title>
</head>
<body class="menuMainCollectionTable">
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>

    <div id="main-body">
        <div style="height:15%;" class="row table-bordered">
            <fieldset>
                <legend>Searching Criteria</legend>
                <div style="margin-left:1%">
                    <div class="row" style="margin-left:1%">
                        @*BU : <input id="cboBU_Collection" class="easyui-combobox" style="width:auto;">*@

                        <input id="txtBusinessUnit_Collection" type="text" style="width:14%;" placeholder="Pick Business Unit" />
                        <a id="btnBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                        <a id="btnResetBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

                        <input id="txtLocation_Colection" style="width:14%;" placeholder="Pick Location" type="text" />
                        <a id="btnLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                        <a id="btnResetLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

                        <input id="txtDepartment_Collection" style="width:13%;" type="text" placeholder="Pick Department" />
                        <a id="btnDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                        <a id="btnResetDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

                        <input id="txtDesignation_Collection" type="text" style="width:13%;" placeholder="Pick Designation" />
                        <a id="btnDesignationPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                        <a id="btnResetDesignationPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

                        <input id="txtEmployee_Collection" style="width:13%;" type="text" placeholder="Type Code & Enter" />
                        <a id="btnEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                        <a id="btnCEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

                    </div>
                    <div class="row" style="margin-left:1%">
                        S. Range :
                        <input id="txtStartSalaryRange" type="text" style="width:8%" class="number" /> To
                        <input id="txtEndeSalaryRange" type="text" style="width:8%" class="number" />
                        <select id="cboSession" style="width:14%"></select>
                        <span id="spanDeclarationDate" style="width: 15%">
                            Declaration Date :
                            <input id="chkDeclarationDate" type="checkbox" />
                            <input id="dtDeclarationDate" type="text" style="width: 100%" class="easyui-datebox" required="required" data-options="formatter:icsdateformat, parser:icsdateparser" />
                        </span>
                    </div>
                </div>
            </fieldset>
        </div>

        <div id="tab-ELEncash" class="easyui-tabs" style="width:100%;height:470px">
            <div title="EL Encash" data-options="iconCls:'icon-ok'" style="overflow: auto;padding:0px;">
                <table id="tblEarnLeave" class="easyui-datagrid" style="width:100%;height:390px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" toolbar="#ELToolbar">
                    <thead style="width:100%">
                        <tr style="width:100%">
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="100" align="left">Code</th>
                            <th field="Name" width="180" align="left">Name</th>
                            <th field="DPTName" width="180" align="left">Department</th>
                            <th field="DSGName" width="180" align="left">Designation</th>
                            <th field="DateOfJoinInString" width="180" align="left">Joining Date</th>
                            <th field="PresentDayBalance" width="100" align="left">PresentDayBalance</th>
                            <th field="ClassifiedEL" width="100" align="left">Total Leave</th>
                            <th field="Enjoyed" width="100" align="left">Enjoyed</th>
                            <th field="BalanceWithoutRunning" width="100" align="left">Balance</th>
                        </tr>
                    </thead>
                </table>

                <table>
                    <tr>
                        <td>
                            <input id="chkRange_ColectionS" type="checkbox" />Range
                            <label id="lblRange1_ColectionS">
                                <input id="txtFrom_ColectionS" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRangeS">
                                <input id="txtTo_ColectionS" type="text" style="width:40px" />
                            </label>

                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="NextS()">Next</a>
                        </td>
                        <td>
                            &nbsp;&nbsp;&nbsp;
                            <label id="lblcountS"></label>
                            &nbsp;&nbsp;&nbsp;
                            <label id="lblSortS"></label>
                        </td>
                    </tr>
                </table>
            </div>

            <div title="EL Encash Process" data-options="iconCls:'icon-ok'" style="overflow: auto;padding: 0px;">
                <table id="tblELEncashProcess" class="easyui-datagrid" style="width:100%;height:390px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" toolbar="#ELEncashToolbar">
                    <thead style="width:100%">
                        <tr style="width:100%">
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="EmployeeCode" width="100" align="left">Code</th>
                            <th field="EmployeeName" width="150" align="left">Name</th>
                            <th field="DPTName" width="180" align="left">Department</th>
                            <th field="DSGName" width="180" align="left">Designation</th>
                            <th field="DateOfJoinInString" width="180" align="left">Joining Date</th>
                            <th field="EncashELCount" width="100" align="left">Encashed EL</th>
                            <th field="EncashAmount" width="100" align="left" formatter="formatPrice">Amount</th>
                            <th field="DeclarationDateInString" width="100" align="left">Declaration Date</th>
                            <th field="ApproveByName" width="100" align="left">Approve By</th>
                            <th field="ApproveDateInString" width="100" align="left">Approve Date</th>
                        </tr>
                    </thead>
                </table>

                <table>
                    <tr>
                        <td>
                            <input id="chkRange_ColectionP" type="checkbox" />Range
                            <label id="lblRange1_ColectionP">
                                <input id="txtFrom_ColectionP" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRangeP">
                                <input id="txtTo_ColectionP" type="text" style="width:40px" />
                            </label>

                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="NextP()">Next</a>
                        </td>
                        <td>
                            &nbsp;&nbsp;&nbsp;
                            <label id="lblcountP"></label>
                            &nbsp;&nbsp;&nbsp;
                            <label id="lblSortP"></label>
                        </td>
                    </tr>
                </table>
            </div>
        </div>

        <div id="ELToolbar" style="height:auto;">
            <a id="btnELLSearch" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-search" onclick="ELSearch()">Search</a>
            <a id="btnELEncash" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-ok">Encash</a>
        </div>

        <div id="ELEncashToolbar" style="height:auto;">
            <a id="btnEncashedELLSearch" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-search" onclick="EncashedELSearch()">Search</a>
            <a id="btnELEncashRollBack" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-undo" onclick="RollBackELEncash()">RollBack</a>
            <a id="btnELEncashApprove" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-approved" onclick="ApproveELEncash()">Approve</a>


            <select id="cboPrint">
                <option value="0">-- Select One --</option>
                <option value="1">Format 1</option>
                <option value="2">Format 2(With Basic)</option>
                <option value="3">EL Summary</option>
            </select>

            <a id="btnEncashedEL" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-print" onclick="PrintEncashedEL()"></a>
            <a id="btnExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">Excel</a>

        </div>
    </div>

    <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="locationtree" data-options="checkbox:true" singleselect="false"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Present Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Permanent Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            BU :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboBU" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Block :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtBlock" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnBlock" class="pick-btn" type="button" value="P" />
                            <input id="btnResetBlock" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Category:
                        </td>
                        <td class="td-AdvSearch-Level">
                            <div>
                                <select id="cboCategory" style="width:160px; float:left;"></select>
                                &nbsp; Gender :
                                <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 75px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                            <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
            </div>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winELEncash" class="easyui-window winstyle" title="EL Encash" style="width:360px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <fieldset>
                <div style="width:95%">
                    <div style="width:100%">
                        <div class="col-md-4" style="text-align:right;">
                            Dec. Date :
                        </div>
                        <div class="col-md-8" style="text-align:left;">
                            <input id="dtDeclarationDate-Process" type="text" style="width: 100%" class="easyui-datebox" required="required" data-options="formatter:icsdateformat, parser:icsdateparser" />
                        </div>

                    </div>
                    <div id="divhide" style="width:100%; height:25px;"></div>
                    <div id="divSession" style="width:100%">
                        <div class="col-md-4" style="text-align:right;">
                            Session :
                        </div>
                        <div class="col-md-8" style="text-align:left;">
                            <select id="cboSession-Process" style="width:100%"></select>
                        </div>
                    </div>
                    <div style="width:100%; height:25px;"></div>
                    <div style="width:100%">
                        <div class="col-md-4" style="text-align:right;">
                            Consider EL :
                        </div>
                        <div class="col-md-8" style="text-align:left;">
                            <input id="txtConsiderEL" style="width:100%" type="text" class="number" />
                        </div>
                    </div>
                    <div style="width:100%; height:25px;"></div>
                    <div id="divApplyforallemployee" style="width:100%">
                        <div class="col-md-4" style="text-align:right;">

                        </div>
                        <div class="col-md-8" style="text-align:left;">
                            <input id="chkApplyforallemployee" type="checkbox" checked /> Apply for all employee
                        </div>
                    </div>
                    <div id="divEncashPresentBalance" style="width:100%">
                        <div class="col-md-4" style="text-align:right;">

                        </div>
                        <div class="col-md-8" style="text-align:left;">
                            <input id="chkEncashPresentBalance" type="checkbox" /> Encash Present Balance
                        </div>
                    </div>
                </div>
            </fieldset>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:350px; text-align:right"></td>
                        <td style="width:50px">
                            <a id="btnProcessELEnCash" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" >Process</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnCloseELEnCash" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

</body>
</html>

<style type="text/css">
    .lblStar {
        color: #ff0000;
        font-weight: bold;
    }

    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>
<script type="text/javascript">
    var _oEmployeeSalarys=[];
    var _sBaseAddress="";

    var _sAttendanceSchemeID ="";
    var _sBusinessUnitIds = "";
    var _sLocationID = "";
    var _sDepartmentIds = "";
    var _sDepartmentNames = "";
    var _sDesignationIds = "";
    var _sDesignationNames = "";
    var _sEmployeeIDs="";
    var _sBlockNames="";
    var _sBMMIDs="";

    var _nLastEmployeeID = 0;
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _oBusinessUnits=[];
    var _oACSs=[];
    
    var _nLastELIDS = 0;
    var _bNextS = false;
    var _nLoadRecordsS = 0;
    var _nRowLengthS = 0;
    var _oELsS=[];
    var _bAppendS = false;
    
    var _nLastELIDP = 0;
    var _bNextP = false;
    var _nLoadRecordsP = 0;
    var _nRowLengthP = 0;
    var _oELsP=[];
    var _bAppendP = false;
    
    var sEmpLeaveLedgerIDs="";

    $(document).ready(function ()
    {
        _oEmployeeSalarys =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oACSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.oACSs));
        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));

        InitializeAdvSearch();
        LoadCateGory(oEmployeeCategorys);
        LoadSession();
     
        

        
        
        $('#txtFrom_ColectionS').numberbox({min:0, precision:0 });
        $('#txtTo_ColectionS').numberbox({min:0, precision:0 });
        $('#txtFrom_ColectionS').numberbox('setValue',1);
        $('#txtTo_ColectionS').numberbox('setValue',50);
        
        $('#txtFrom_ColectionP').numberbox({min:0, precision:0 });
        $('#txtTo_ColectionP').numberbox({min:0, precision:0 });
        $('#txtFrom_ColectionP').numberbox('setValue',1);
        $('#txtTo_ColectionP').numberbox('setValue',50);
        
        document.getElementById("lblRange1_ColectionS").style.display = 'none';
        document.getElementById("lblRange1_ColectionP").style.display = 'none';

        $('#dtDeclarationDate').datebox({disabled:true});
        $('#dtDeclarationDate').datebox('setValue', icsdateformat(new Date()));

        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();

    });
    
    $('#chkRange_ColectionS').click(function()
    {
        if(document.getElementById("chkRange_ColectionS").checked == true)
        {
            document.getElementById("lblRange1_ColectionS").style.display = '';
        }
        else
        {
            document.getElementById("lblRange1_ColectionS").style.display = 'none';
        }
    });
    $('#chkRange_ColectionP').click(function()
    {
        if(document.getElementById("chkRange_ColectionP").checked == true)
        {
            document.getElementById("lblRange1_ColectionP").style.display = '';
        }
        else
        {
            document.getElementById("lblRange1_ColectionP").style.display = 'none';
        }
    });
    function updateProgress() 
    {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96)
        {
            value += Math.floor(Math.random() * 5);
            $('#progressbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds) 
    {
        $("#progressbarParent").hide();
    }

    $('#tab-ELEncash').tabs({
        onSelect:function(title){
            if(title=="EL Encash")
            {
                $('#spanDeclarationDate').hide();
            }
            else
            {
                $('#spanDeclarationDate').show();
            }
        }
    });

    $("#chkDeclarationDate").click(function(e){
        if($('#chkDeclarationDate').is(":checked")){
            $('#dtDeclarationDate').datebox({disabled:false});
            $('#dtDeclarationDate').datebox('setValue', icsdateformat(new Date()));
        }
        else{
            $('#dtDeclarationDate').datebox({disabled:true});
            $('#dtDeclarationDate').datebox('setValue', icsdateformat(new Date()));
        }
    });

    var nCurrent=0;
    function LoadSession()
    {
        var listItems="";
        listItems += "<option value=0>" +"-Session-" +"</option>";
        for (i = 0; i < _oACSs.length; i++)
        {
            listItems += "<option value='" + _oACSs[i].ACSID+"'>" +  _oACSs[i].Session+"</option>";
            if(_oACSs[i].IsActive){nCurrent=_oACSs[i].ACSID;}
        }
        $("#cboSession").html(listItems);
        $("#cboSession-Process").html(listItems);
        //$("#cboSession").val(nCurrent);
        $("#cboSession-Process").val(nCurrent);
    }

    function LoadCateGory(oEmployeeCategorys)
    {
        $("#cboCategory").icsLoadCombo({
            List: oEmployeeCategorys,
            OptionValue: "Value",
            DisplayText: "Text"
        });
    }

    function LoadYear()
    {
        var oDate=new Date();
        oDate.setFullYear(2014);
        var sYear="";
        sYear +="<option value='0'>"+'Year'+"</option>";
        for(var i=0; i<=15; i++)
        {
            sYear += "<option value='" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"'>" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"</option>";
        }
        $('#cboYear').html(sYear);
    }

    /*---------------- emp Search Start click----------------*/

    function InitializeAdvSearch(){
        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                    {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                    {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
    }

    $("#btnEmployee").click(function () {
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            $("#lblRange1").show();
        }
        else
        {
            $("#lblRange1").hide();
        }
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }
        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }

        var nBusinessUnitID = $("#cboBU").val();
        var nCategory=$('#cboCategory').val();
        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();

        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
           nEmployeeTypeID==0 && sGender=="None" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
           bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 
           && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBMMIDs=="")
        {
            alert("Please enter your selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                     sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                     bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                     sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                      +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBMMIDs;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }
                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnEmployeePickerOk").click(function () {
        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length<=0) { alert("please select atleast one item");return; }
        var sEmpIDs="";
        var sEmpNames="";
        for(var i=0;i<oEmployees.length;i++)
        {
            sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
            sEmpNames=sEmpNames+oEmployees[i].Name+",";
        }
        _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
        sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
        $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
        $("#txtEmployee_Collection").val(sEmpNames);
        $("#winEmployeePicker").icsWindow('close');
        SearchByDepartmentAndDateRangeWithPasignation();
    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });

    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    /*-------------Business Unit Picker----------------*/
    $("#btnBusinessUnitPicker_Collection").click(function(e){
        BusinessUnitPicker();
    });

    $("#txtBusinessUnit_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            BusinessUnitPicker();
        }
    });

    function BusinessUnitPicker()
    {
        var oBusinessUnit={
            BusinessUnitID:0
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBusinessUnit,
            ControllerName: "BusinessUnit",
            ActionName: "GetsBusinessUnitWithPermission",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BusinessUnitID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBusinessUnit',
                        winclass:'clsBusinessUnit',
                        winwidth: 320,
                        winheight: 400,
                        tableid: 'tblBusinessUnit',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Business Unit List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBusinessUnitPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBusinessUnits=[];
            oBusinessUnits = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBusinessUnit')
            {
                if(oBusinessUnits!=null && oBusinessUnits.length>0)
                {
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sBusinessUnitName = "";
                    for(var i=0; i<oBusinessUnits.length; i++)
                    {
                        sBusinessUnitName+=oBusinessUnits[i].Name+",";
                        _sBusinessUnitIds+=oBusinessUnits[i].BusinessUnitID+",";
                    }

                    sBusinessUnitName=sBusinessUnitName.substring(0,sBusinessUnitName.length-1);
                    _sBusinessUnitIds=_sBusinessUnitIds.substring(0,_sBusinessUnitIds.length-1);
                    $("#txtBusinessUnit_Collection").val(sBusinessUnitName);
                }
                else
                {
                    alert("Please select a Business Unit.");
                }
            }
        });
    }

    $("#btnResetBusinessUnitPicker_Collection").click(function(e){
        $('#txtBusinessUnit_Collection').val("");
        _sBusinessUnitIds="";
    });

    /*-------------Location Picker----------------*/
    var btnLocation="";
    $("#btnLocationPicker,#btnLocationPicker_Colection").click(function(e){
        btnLocation = $(this).attr("id");
        var sBusinessUnitIDs ="";
        var nBusinessUnitID=0;
        if(btnLocation=="btnLocationPicker")
        {
            nBusinessUnitID = $("#cboBU").val();
            sBusinessUnitIDs = String(nBusinessUnitID);
        }
        else{sBusinessUnitIDs=_sBusinessUnitIds;}
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        if(btnLocation=="btnLocationPicker")
        {
            var oLocation = $('#locationtree').tree('getSelected');
            if(oLocation!=null && oLocation.id>0){
                $("#winLocationPicker").icsWindow('close');
                _sLocationID=oLocation.id;
                $('#txtLocation').val(oLocation.text);
            }
            else{
                alert("Please select a location.");
            }
        }
        else
        {
            var oLocations = $('#locationtree').tree('getChecked');
            if(oLocations!=null && oLocations.length>0)
            {
                var LocationName="";
                for(var i=0; i<oLocations.length; i++)
                {
                    if(oLocations[i].id !=1)
                    {
                        LocationName+=oLocations[i].text+",";
                        _sLocationID+=oLocations[i].id+",";
                    }
                }
                LocationName=LocationName.substring(0,LocationName.length-1);
                _sLocationID=_sLocationID.substring(0,_sLocationID.length-1);
                $("#winLocationPicker").icsWindow('close');
                $('#txtLocation_Colection').val(LocationName);
            }
            else
            {
                alert("Please select a location.");
            }
        }
    });

    $('#txtLocation_Colection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            btnLocation = $(this).attr("id");
            var sBusinessUnitIDs ="";
            var nBusinessUnitID=0;
            if(btnLocation=="btnLocationPicker")
            {
                nBusinessUnitID = $("#cboBU").val();
                sBusinessUnitIDs = String(nBusinessUnitID);
            }
            else{sBusinessUnitIDs=_sBusinessUnitIds;}
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };
            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker,#btnResetLocationPicker_Colection").click(function(e){
        $('#txtLocation').val("");
        $('#txtLocation_Colection').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){
        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){
        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentIds= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose,#btnDepartmentPickerClose_Collection").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
        $("#winDepartmentPicker_Collection").icsWindow('close');
    });

    $("#btnResetDepartmentPicker,#btnResetDepartmentPicker_Collection").click(function(e){
        $('#txtDepartment,#txtDepartment_Collection').val("");
        _sDepartmentIds="";
        _sDepartmentNames="";
    });

    /*-------------Designation Picker----------------*/
    var btnDesignation="";
    $("#btnDesignationPicker,#btnDesignationPicker_Collection").click(function(e){
        btnDesignation = $(this).attr("id");
        DesignationPicker();
    });

    $("#txtDesignation_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            btnDesignation ="btnDesignationPicker_Collection";
            DesignationPicker();
        }
    });

    function DesignationPicker()
    {
        var oDesignation={
            DesignationID:0,
            Params: _sBusinessUnitIds+'~'+_sLocationID+'~'+ _sDepartmentIds
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;
                    if(btnDesignation=="btnDesignationPicker_Collection"){bmultiplereturn=true;}

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oDesignations=[];

            if(btnDesignation=="btnDesignationPicker_Collection")
            {
                oDesignations = $('#'+oPickerobj.tableid).datagrid('getChecked');
            }
            else
            {
                var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
                oDesignations.push(oDesignation);
            }

            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignations!=null && oDesignations.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames+=oDesignations[i].Name+",";
                        _sDesignationIds+=oDesignations[i].DesignationID+",";
                    }

                    _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                    _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
                    if(btnDesignation=="btnDesignationPicker_Collection")
                    {
                        $("#txtDesignation_Collection").val(_sDesignationNames);
                    }
                    else
                    {
                        $("#txtDesignation").val(_sDesignationNames);
                    }
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker,#btnResetDesignationPicker_Collection").click(function(e){
        $('#txtDesignation').val("");
        $('#txtDesignation_Collection').val("");
        _sDesignationIds="";
        _sDesignationNames = "";
    });

    /*------------- Start Block Picker----------------*/
   
    $("#btnBlock,#btnBlock_Collection").click(function(e){
        BlockPicker($(this).attr("id"));
    });
 
    function BlockPicker(btnBlock)
    {
        var oBlockMachineMapping={
            ProductionProcessInt:0,
            DepartmentID:0,
            BlockName:""
        }
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlockMachineMapping,
            ControllerName: "BlockMachineMapping",
            ActionName: "BlockMachineMapping_Search",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
        
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BMMID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
                    var bmultiplereturn=true;
                    if(btnBlock=="btnBlock"){bmultiplereturn=false;}
                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblShift',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'BlockName',
                        windowTittle: 'Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam,btnBlock);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
   
    function IntializeBlockPickerbutton(oPickerobj,btnBlock)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBlocks=[];
            if(btnBlock=="btnBlock"){
                var oBlock= $('#'+oPickerobj.tableid).datagrid('getSelected');
                oBlocks.push(oBlock);
            }
            else
            {
                oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            }
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNames += oBlocks[i].BlockName+",";
                        _sBMMIDs += oBlocks[i].BMMID+",";
                    
                    }
                    _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                    _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
                    if(btnBlock=="btnBlock"){$("#txtBlock").val(_sBlockNames);}else{$("#txtBlock_Collection").val(_sBlockNames);}
                }
                else
                {
                    alert("Please select a Block.");
                }
            }
        });
    }

    $("#btnResetBlock,#btnResetBlock_Collection").click(function(e){
        $('#txtBlock').val("");
        $('#txtBlock_Collection').val("");
        _sBlockNames="";
        _sBMMIDs = "";
    });

    $("#txtBlock,#txtBlock_Collection").keypress(function(e){
        if (e.which == 13)
        {
            BlockPicker();
        }
    });
    /*------------- End Block Picker----------------*/

    /*---------------- emp Search End click ----------------*/

    /*---------------- emp Search Start keyprees----------------*/
    $('#txtEmployee_Collection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee_Collection").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
            SearchEmployeeByText(sCodeName);
        }
    });

    function SearchEmployeeByText(sEmpNameCode){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _sEmployeeIDs=oreturnObj.EmployeeID;
                    $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
                    $("#txtEmployee_Collection").val(oreturnObj.Name);
                    $("#winEmployeePicker").icsWindow('close');
                    SearchByDepartmentAndDateRangeWithPasignation();
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        _sEmployeeIDs=oreturnObj.EmployeeID;
                        $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
                        $("#txtEmployee_Collection").val(oreturnObj.Name);
                        $("#winEmployeePicker").icsWindow('close');
                        SearchByDepartmentAndDateRangeWithPasignation();
                    }
                }
            }
        });
    }

    $('#btnCEmployee').click(function (e)
    {
        document.getElementById("txtEmployee_Collection").value = "" ;
        $('#txtEmployeeName').data("EmployeeIDs","");
        _sEmployeeIDs = "";
    });

    /*---------------- emp Search Start keyprees----------------*/

    /*-------------Department Picker start Collection----------------*/
    $("#btnDepartmentPicker_Collection").click(function(e){
        DepartmentPicker();
    });

    $("#txtDepartment_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            DepartmentPicker();
        }
    });

    function DepartmentPicker()
    {
        $("#winDepartmentPicker_Collection").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree_Collection').tree({ data: [response.obj] });
                }
            }
        });
    }

    $("#btnDepartmentPickerOk_Collection").click(function(e){
        var oDepartments = $('#departmenttree_Collection').tree('getChecked');
        if(oDepartments!=null && oDepartments.length>0){
            $("#winDepartmentPicker_Collection").icsWindow('close');
            for(var i=0; i<oDepartments.length; i++)
            {
                _sDepartmentNames+=oDepartments[i].text+",";
                _sDepartmentIds+=oDepartments[i].id+",";
            }

            _sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
            _sDepartmentIds=_sDepartmentIds.substring(0,_sDepartmentIds.length-1);
            $("#txtDepartment_Collection").val(_sDepartmentNames);
        }
        else{
            alert("Please select a department.");
        }
    });

    /*-------------Location Picker----------------*/

    $('#txtLocation').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            btnLocation = $(this).attr("id");
            var sBusinessUnitIDs ="";
            var nBusinessUnitID=0;
            if(btnLocation=="btnLocationPicker")
            {
                nBusinessUnitID = $("#cboBU").val();
                sBusinessUnitIDs = String(nBusinessUnitID);
            }
            else{sBusinessUnitIDs=_sBusinessUnitIds;}
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        }
    });
    
    function NextS()
    {
        var oELs =[];
        oELs=$('#tblEarnLeave').datagrid('getRows');
        _nRowLengthS = oELs.length;
        _bNextS = true;

        if (oELs.length<=0)
        {
            alert('Please Select Criteria and click on "Search" to find information.!!');
            return;
        }
        var oEL=oELs[oELs.length-1];

        if (_nLastELIDS==oEL.EmpLeaveLedgerID)
        {
            alert('No more data found');
            return;
        }
        _nLastELIDS=oEL.EmpLeaveLedgerID;
        ELSearch();
    }
    function ELSearch()
    {
        debugger;
        var nACSID= $('#cboSession').val();
        if(nACSID<=0)
        {
            alert("Please select a session");
            return;
        }

        
        if(!_bNextS)
        {
            _nRowLengthS = 0;
            _nLastELIDS = 0;
            _oELsS=[];
        }
        _nLoadRecordsS = document.getElementById("txtTo_ColectionS").value;
        if(document.getElementById("chkRange_ColectionS").checked == true)
        {
            var RangeFrom = 0;
            var RangeTo = 0;
            RangeFrom = parseFloat(document.getElementById("txtFrom_ColectionS").value);
            RangeTo = parseFloat(document.getElementById("txtTo_ColectionS").value);

            if(RangeFrom > RangeTo)
            {
                alert("Invalid Range !");
                return;
            }
            _nRowLengthS = 0;
            _nLoadRecordsS = 0;

            _nRowLengthS = RangeFrom-1;
            _nLoadRecordsS = RangeTo - RangeFrom +1;
        }
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        $("#main-body").hide();
        var intervalID = setInterval(updateProgress, 250);


        
        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }


        var tsv = ((new Date()).getTime()) / 1000;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EarnLeave/ELGetsToEncash",
            data: JSON.stringify({sBusinessUnitIds:_sBusinessUnitIds, sEmployeeIDs:_sEmployeeIDs, sLocationID:_sLocationID, sDepartmentIds: _sDepartmentIds,sDesignationIDs:_sDesignationIds, nACSID:nACSID,nStartSalaryRange:nStartSalaryRange,nEndSalaryRange:nEndSalaryRange,nLoadRecordsS : _nLoadRecordsS, nRowLengthS : _nRowLengthS,ts: tsv}),
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                $("#main-body").show();
                var oELs =[];
                oELs= jQuery.parseJSON(data);
                if(oELs.length>0 && oELs[0].ErrorMessage=="")
                {
                    if(!_bNextS && !_bAppendS)
                    {
                        _oELs=[];
                        DynamicRefreshList([],"tblEarnLeave");
                    }
                    for (var j = 0; j < oELs.length; j++)
                    {
                        $('#tblEarnLeave').datagrid('appendRow',oELs[j]);
                        _oELsS.push(oELs[j]);
                    }
                }
                else
                {
                    alert(oELs[0].ErrorMessage);
                    DynamicRefreshList([],"tblEarnLeave");
                }
                _bNextS = false;
                _bAppendS = false;
                var oCs = $('#tblEarnLeave').datagrid('getRows');
                document.getElementById("lblcountS").innerHTML = " | Count =" + oCs.length;
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
        
    }
    
    $("#btnELEncash").click(function(e){
        var oELs = $('#tblEarnLeave').datagrid('getChecked');
        sEmpLeaveLedgerIDs="";
        if(oELs.length<=0 || oELs== null)
        {
            $("#divhide").show();
            $("#divSession").show();
            $("#divApplyforallemployee").show();
        }
        else
        {
            for(var i=0; i<oELs.length; i++)
            {
                sEmpLeaveLedgerIDs+=oELs[i].EmpLeaveLedgerID+",";
            }
            sEmpLeaveLedgerIDs=sEmpLeaveLedgerIDs.substring(0,sEmpLeaveLedgerIDs.length-1);

            $("#divhide").hide();
            $("#divSession").hide();
            $("#divApplyforallemployee").hide();
            $("#chkEncashPresentBalance").prop("checked", false);
        }
        $("#winELEncash").icsWindow('open');
        $('#dtDeclarationDate-Process').datebox('setValue', icsdateformat(new Date()));
    });

    $("#btnCloseELEnCash").click(function(e){
        $("#winELEncash").icsWindow('close');
        $('#dtDeclarationDate-Process').datebox('setValue', icsdateformat(new Date()));
        $("#cboSession-Process").val(nCurrent);
        $('#txtConsiderEL').val("");
    });

    $("#btnProcessELEnCash").click(function(e){
        debugger;
        var DeclarationDate = $('#dtDeclarationDate-Process').datebox('getValue');
        var nACSID= $('#cboSession-Process').val();
        if(nACSID<=0 && sEmpLeaveLedgerIDs=="")
        {
            alert("Please select a session");
            return;
        }
        var nConsiderEL= $('#txtConsiderEL').val();
        //if(nConsiderEL<=0)
        //{
        //    alert("Please enter Consider EL");
        //    return;
        //}
        if(nConsiderEL=="" || nConsiderEL<0 || nConsiderEL == null)
        {
            nConsiderEL=0;
        }
        var IsApplyforallemployee= $('#chkApplyforallemployee').is(":checked");
        var IsEncashPresentBalance = $('#chkEncashPresentBalance').is(":checked");
        if(!IsApplyforallemployee && sEmpLeaveLedgerIDs=="")
        {
            alert("Please Check Apply for All Employee");
            return;
        }
        if(sEmpLeaveLedgerIDs!="")
        {
            nACSID=0;
            IsApplyforallemployee=0;
        }
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        $("#main-body").hide();
        var intervalID = setInterval(updateProgress, 250);

        $("#winELEncash").icsWindow('close');
        var tsv = ((new Date()).getTime()) / 1000;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EarnLeave/EncashEL",
            data: JSON.stringify({sEmpLeaveLedgerIDs:sEmpLeaveLedgerIDs, DeclarationDate:DeclarationDate, nACSID:nACSID, nConsiderEL: nConsiderEL,IsApplyforallemployee:IsApplyforallemployee, IsEncashPresentBalance:IsEncashPresentBalance,ts: tsv}),
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                debugger;
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                $("#main-body").show();
                
                var oEL= jQuery.parseJSON(data);
                if(oEL.ErrorMessage=="")
                {
                    alert("Encashed Successfully!");
                }
                else
                {
                    alert(oEL.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                $("#main-body").show();
            }
        });
    });
    
    function NextP()
    {
        var oELs =[];
        oELs=$('#tblELEncashProcess').datagrid('getRows');
        _nRowLengthP = oELs.length;
        _bNextP = true;

        if (oELs.length<=0)
        {
            alert('Please Select Criteria and click on "Search" to find information.!!');
            return;
        }
        var oEL=oELs[oELs.length-1];

        if (_nLastELIDP==oEL.EmpLeaveLedgerID)
        {
            alert('No more data found by this date');
            return;
        }
        _nLastELIDP=oEL.EmpLeaveLedgerID;
        EncashedELSearch();
    }
    function EncashedELSearch()
    {
        var dtDeclarationDate= $('#dtDeclarationDate').datebox('getValue');
        var IsDeclarationDate=$('#chkDeclarationDate').is(":checked");
        var nACSID= $('#cboSession').val();
        
        if(nACSID<=0 && !IsDeclarationDate)
        {
            alert("Please select a session or declaration date");
            return;
        }
        if(!_bNextP)
        {
            _nRowLengthP = 0;
            _nLastELIDP = 0;
            _oELP=[];
        }

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }

        debugger;
        _nLoadRecordsP = document.getElementById("txtTo_ColectionP").value;
        if(document.getElementById("chkRange_ColectionP").checked == true)
        {
            var RangeFrom = 0;
            var RangeTo = 0;
            RangeFrom = parseFloat(document.getElementById("txtFrom_ColectionP").value);
            RangeTo = parseFloat(document.getElementById("txtTo_ColectionP").value);

            if(RangeFrom > RangeTo)
            {
                alert("Invalid Range !");
                return;
            }
            _nRowLengthP = 0;
            _nLoadRecordsP = 0;

            _nRowLengthP = RangeFrom-1;
            _nLoadRecordsP = RangeTo - RangeFrom +1;
        }
        //alert(nStartSalaryRange);
        //return;
        var sParams=_sBusinessUnitIds+"~"+_sEmployeeIDs+"~"+_sLocationID+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+nACSID+"~"+IsDeclarationDate+"~"+dtDeclarationDate + "~" + _nLoadRecordsP + "~" + _nRowLengthP + "~" + nStartSalaryRange + "~" + nEndSalaryRange;

        var tsv = ((new Date()).getTime()) / 1000;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EarnLeave/EncashedELSearch",
            data: JSON.stringify({sParams:sParams,ts: tsv}),
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                var oELs =[];
                oELs= jQuery.parseJSON(data);
                if(oELs.length>0 && oELs[0].ErrorMessage=="")
                {if(!_bNextP && !_bAppendP)
                {
                    _oELs=[];
                    DynamicRefreshList([],"tblELEncashProcess");
                }
                    for (var j = 0; j < oELs.length; j++)
                    {
                        $('#tblELEncashProcess').datagrid('appendRow',oELs[j]);
                        _oELs.push(oELs[j]);
                    }
                }
                else
                {
                    alert(oELs[0].ErrorMessage);
                    DynamicRefreshList([],"tblELEncashProcess");
                }
                _bNextP = false;
                _bAppendP = false;
                var oCs = $('#tblELEncashProcess').datagrid('getRows');
                document.getElementById("lblcountP").innerHTML = " | Count =" + oCs.length;
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function RollBackELEncash()
    {
        var sELEncashIDs="";
        var dtDeclarationDate= $('#dtDeclarationDate').datebox('getValue');
        var IsDeclarationDate=$('#chkDeclarationDate').is(":checked");
        var oELEncashs = $('#tblELEncashProcess').datagrid('getChecked');
        var nIndexes = [];
        for(var i=0; i<oELEncashs.length; i++)
        {
            sELEncashIDs+=oELEncashs[i].ELEncashID+",";
            var SelectedRowIndex = $('#tblELEncashProcess').datagrid('getRowIndex', oELEncashs[i]);
            nIndexes.push(SelectedRowIndex);
        }
        sELEncashIDs=sELEncashIDs.substring(0,sELEncashIDs.length-1);

        if(sELEncashIDs=="" && !IsDeclarationDate)
        {
            alert("Please select a session or declaration date");
            return;
        }

        var tsv = ((new Date()).getTime()) / 1000;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EarnLeave/RollBackEncashedEL",
            data: JSON.stringify({sELEncashIDs:sELEncashIDs,dtDeclarationDate:dtDeclarationDate,ts: tsv}),
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                var sMsg ="";
                sMsg= jQuery.parseJSON(data);
                if(sMsg=="")
                {
                    for (var i =nIndexes.length-1 ; i >=0; i--) {
                        $('#tblELEncashProcess').datagrid('deleteRow', nIndexes[i]);
                    }
                    alert("Roll Back Successfully!");
                }
                else
                {
                    alert(sMsg);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function ApproveELEncash()
    {
        var dtDeclarationDate= $('#dtDeclarationDate').datebox('getValue');
        var IsDeclarationDate=$('#chkDeclarationDate').is(":checked");
        var oELEncashs = $('#tblELEncashProcess').datagrid('getChecked');
        var nIndexes = [];
        var sELEncashIDs = "";

        for (var i = 0; i < oELEncashs.length; i++) 
        {
            if(oELEncashs[i].ApproveBy>0)
            {
                alert("Already Approved!");
                return;
            }
            var SelectedRowIndex = $('#tblELEncashProcess').datagrid('getRowIndex', oELEncashs[i]);
            nIndexes.push(SelectedRowIndex);
            sELEncashIDs += oELEncashs[i].ELEncashID + ",";
        }
        sELEncashIDs = sELEncashIDs.substring(0, sELEncashIDs.length - 1);
        if(sELEncashIDs=="" && !IsDeclarationDate)
        {
            alert("Please select a session or declaration date");
            return;
        }
        if (!confirm("Confirm to Approve!")) return;
        var tsv = ((new Date()).getTime()) / 1000;
        $.ajax
         ({
             type: "POST",
             dataType: "json",
             url: _sBaseAddress + "/EarnLeave/ApproveEncashedEL",
             traditional: true,
             data: JSON.stringify({sELEncashIDs:sELEncashIDs,dtDeclarationDate:dtDeclarationDate,ts: tsv}),
             contentType: "application/json; charset=utf-8",
             success: function (data) {
                 var oELEncashs = [];
                 oELEncashs = jQuery.parseJSON(data);
                 if (oELEncashs[0].ErrorMessage == "" && oELEncashs.length > 0) 
                 {
                     for (var i = 0; i < oELEncashs.length; i++)
                     {
                         $('#tblELEncashProcess').datagrid('updateRow', { index: nIndexes[i], row: oELEncashs[i] });
                     }
                     alert("Approved Successfully !");
                 }
                 else 
                 {
                     alert(oELEncashs[0].ErrorMessage);
                 }
             },
             error: function (xhr, status, error) {
                 alert(error);
             }
         });
    }

    function PrintEncashedEL()
    {
        var nPrintType=$("#cboPrint").val();
        if(nPrintType == 0) {
            alert("Please select any format");
            return;
        }
        var sFormat = "";
        if(nPrintType == 1) {
            sFormat = "withoutbasic";
        }
        else sFormat = "withbasic";



        var nACSID= $('#cboSession').val();
        var oELEncashs = $('#tblELEncashProcess').datagrid('getChecked');
        var sELEncashIDs = "";
        for (var i = 0; i < oELEncashs.length; i++) 
        {
            sELEncashIDs += oELEncashs[i].ELEncashID + ",";
        }
        sELEncashIDs = sELEncashIDs.substring(0, sELEncashIDs.length - 1);
        var dtDeclarationDate= $('#dtDeclarationDate').datebox('getValue');
        var IsDeclarationDate=$('#chkDeclarationDate').is(":checked");
        if(nACSID<=0 && !IsDeclarationDate)
        {
            alert("Please select a session or declaration date");
            return;
        }

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }

        var sParams=_sBusinessUnitIds+"~"+_sEmployeeIDs+"~"+_sLocationID+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+nACSID+"~"+IsDeclarationDate+"~"+dtDeclarationDate+"~"+sELEncashIDs+"~"+sFormat+"~"+nStartSalaryRange+"~"+nEndSalaryRange;

        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/EarnLeave/PrintEncashedEL?sParams="+sParams+"&ts="+tsv, "_blank");
    }


    $('#cboPrint').change(function(e){
        if($('#cboPrint').val()==3){
            $('#btnExcel').show();
            $('#btnEncashedEL').hide();
        }
        else {
            $('#btnExcel').show();
            $('#btnEncashedEL').show();
        }
    });
    $('#btnExcel').click(function(e){
        var nPrintType=$("#cboPrint").val();
        if(nPrintType == 0) {
            alert("Please select any format");
            return;
        }
        var sFormat = "";
        if(nPrintType == 1) {
            sFormat = "withoutbasic";
        }
        if(nPrintType == 2) { 
            sFormat = "withbasic";
        }



        var nACSID= $('#cboSession').val();
        var oELEncashs = $('#tblELEncashProcess').datagrid('getChecked');
        var sELEncashIDs = "";
        for (var i = 0; i < oELEncashs.length; i++) 
        {
            sELEncashIDs += oELEncashs[i].ELEncashID + ",";
        }
        sELEncashIDs = sELEncashIDs.substring(0, sELEncashIDs.length - 1);
        var dtDeclarationDate= $('#dtDeclarationDate').datebox('getValue');
        var IsDeclarationDate=$('#chkDeclarationDate').is(":checked");
        if(nACSID<=0 && !IsDeclarationDate)
        {
            alert("Please select a session or declaration date");
            return;
        }
        
        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }

        var sParams=_sBusinessUnitIds+"~"+_sEmployeeIDs+"~"+_sLocationID+"~"+_sDepartmentIds+"~"+_sDesignationIds+"~"+nACSID+"~"+IsDeclarationDate+"~"+dtDeclarationDate+"~"+sELEncashIDs+"~"+sFormat+"~"+nStartSalaryRange+"~"+nEndSalaryRange;

        var sAction = "Print_ReportXL";
        if(nPrintType==3) {
            sAction = "Summary_ReportXL";
        }
        var tsv = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress + '/EarnLeave/'+sAction+'?sParams='+sParams);

        
    });


</script>