@{
    ViewBag.Title = "Received Cheques List";
}
@model IEnumerable<ESimSol.BusinessObjects.ReceivedCheque>
<head>
    
</head>
<body>
    <div id="winAdvanceSearch" class="easyui-window winClass" title="Advance Search" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width:730px; float: left;">
            <table border="0" cellpadding="0" cellspacing="0" style="font-size: 12px">
                <tr style="height: 200px">
                    <td style="width: 300px">
                        <table border="0" cellpadding="0" cellspacing="0" style="font-size: 12px">
                            <tr style="height: 200px">
                                <td style="width: 400px; vertical-align: top; height: 200px">
                                    <fieldset>
                                        <legend style="font-weight: bold; font-size: 12px">Searching Criteria : </legend>
                                        <table border="0" cellpadding="0" cellspacing="0" style="width: 340px; font-size: 12px">
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    Money Receipt No :
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left">
                                                    @Html.TextBox("txtMoneyReceiptNo", "", new { style = "width: 325px", id = "txtMoneyReceiptNo" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    Bill Number:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left">
                                                    @Html.TextBox("txtBillNumber", "", new { style = "width: 325px", id = "txtBillNumber" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    Cheque No:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left">
                                                    @Html.TextBox("txtChequeNo", "", new { style = "width: 325px", id = "txtChequeNo" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    Customer :
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left">
                                                    @Html.TextBox("txtCustomer", "", new { style = "width: 255px", id = "txtCustomer", placeholder = "Type Customer & Press Enter" })<input type="button" style="width: 70px; font-size: 12px" id="btnCustomerPicker" value="Pick" />
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    Receipt Date:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left; font-size: 12px">
                                                    <table border="0" style="font-size: 12px">
                                                        <tr>
                                                            <td style="width: 100px; font-size: 12px; text-align: left">
                                                                @Html.DropDownList("cboReceiptDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboReceiptDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeA" })
                                                            </td>
                                                            <td style="width: 98px; font-size: 12px">
                                                                <input id="txtReceiptStartDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 98px;" />
                                                            </td>

                                                            <td style="width: 9px; font-size: 12px" id="enddateT">
                                                                To
                                                            </td>
                                                            <td style="width: 97px; font-size: 12px" id="enddate">
                                                                <input id="txtReceiptEndDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 98px;" />
                                                            </td>

                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 130px; text-align: left; font-weight: bold">
                                                    Cheque Date:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width: 325px; text-align: left; font-size: 12px">
                                                    <table border="0" style="font-size: 12px">
                                                        <tr>
                                                            <td style="width: 100px; font-size: 12px; text-align: left">
                                                                @Html.DropDownList("cboChequeDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboChequeDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeB" })
                                                            </td>
                                                            <td style="width: 98px; font-size: 12px">
                                                                <input id="txtChequeStartDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 98px;" />
                                                            </td>

                                                            <td style="width: 9px; font-size: 12px" id="enddateT2">
                                                                To
                                                            </td>
                                                            <td style="width: 97px; font-size: 12px" id="enddate2">
                                                                <input id="txtChequeEndDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 98px;" />
                                                            </td>

                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                            <tr style="height:165px; vertical-align: bottom">
                                                <td style=" text-align:left; width:325px;">
                                                    <table border="0" cellpadding="0" cellspacing="0">
                                                        <tr>
                                                            <td style=" text-align:left;"><input type="button" value="Reset" id="btnReset" style="width:70px; text-align:left;" /></td>
                                                            <td style=" text-align:right; width:255px;"><input type="button" value="Search" id="btnSearch" style="width:70px; text-align:right;" /></td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                        </table>
                                    </fieldset>
                                </td>
                                <td style="width: 323px; height: 440px;  vertical-align:top;">
                                    <div style="margin-left:0px; margin-top:6px; height:340px">
                                        <table id="tblRCheque" title="Received Cheque" class="easyui-datagrid" style="width: 358px;height: 436px; font-size: 12px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" data-options="resizehandle:'right', resizable:true ">
                                            <thead>
                                                <tr>
                                                    <th data-options="field:'Selected',checkbox:true"></th>
                                                    <th field="MoneyReceiptNo" width="80">Receipt No</th>
                                                    <th field="ContractorName" width="150">Received From</th>
                                                    <th field="AmountSt" width="80" align="right">Amount</th>
                                                    <th field="MoneyReceiptDateSt" width="100">Money Receipt Date</th>
                                                    <th field="BillNumber" width="100">Bill Number</th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr style="height:30px">
                    <td style="width: 650px; text-align: right">
                        <a href="javascript:void(0)" id="btnOkButtonClick" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        <a href="javascript:void(0)" id="btnSearchClose" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div id="winStatusChangeConfirmation" style="width:500px;height:200px;" class="easyui-window" title="Status Change Confirmation" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma;">
            <textarea id="txtRemarks" placeholder="Remarks" rows="4" cols="50" style="width:98%;"></textarea>
        </div>
        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:80%; text-align:right"></td>

                    <td style="width:10%;">
                        <a id="btnOkStatusChange" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Yes</a>
                    </td>
                    <td style="width:10%;">
                        <a id="btnNoStatusChange" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">No</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
    <div class="menuMainCollectionTable" style="margin-left: 0px; height:100%; width:100%">
        <table id="tblReceivedCheques" title="ReceivedCheque List" class="easyui-datagrid" fit="true" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarReceivedCheque">
            <thead>
                <tr>
                    <th field="MoneyReceiptNo" width="15%">Money Receipt No</th>
                    <th field="MoneyReceiptDateSt" width="15%">Money Receipt Date</th>
                    <th field="BillNumber" width="15%">Bill Number</th>
                    <th field="ContractorName" width="15%">Received From</th>
                    <th field="TransactionTypeSt" width="10%">Transaction Type</th>
                    <th field="ChequeNo" width="15%">Pay Order/Cheque No</th>
                    <th field="ChequeStatusSt" width="10%">Status</th>
                    <th field="AmountSt" width="10%" align="right">Amount</th>
                    <th field="ChequeDateSt" width="10%">Cheque Date</th>
                    <th field="IssueDateSt" width="10%">Issue Date</th>
                    <th field="BankName" width="15%">Bank Name</th>
                    <th field="Remarks" width="10%">Remarks</th>
                </tr>
            </thead>
        </table>
        <div id="toolbarReceivedCheque">
            <table>
                <tr>
                    <td>                        
                        <input type="text" id="txtSearchbyChequeNo" placeholder="Search by Cheque No" />
                        <a id="btnAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Search</a>
                        <a id="btnAddReceivedCheque" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">New</a>
                        <a id="btnEditReceivedCheque" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
                        <a id="btnViewReceivedCheque" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
                        <a id="btnDeleteReceivedCheque" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                        <a id="btnReceivedFromParty" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-receive" plain="true">Receive From Party</a>
                        <a id="btnEncash" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-encashment" plain="true">Encash</a>
                        <a id="btnDishonor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-dishonor" plain="true">Dishonor</a>
                        <a id="btnReturn" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-forword" plain="true">Return</a>
                        <a id="btnCancel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Cancel</a>
                        <a id="btnAttachment" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-attachment" plain="true" onclick="Attchment()">Attchment</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</body>

<script type="text/javascript">
    var _oReceivedCheque = null;
    var _oReceivedCheques = [];
    var _sBaseAddress = "";
    var _oAuthorizationRolesMapping = [];
    var _oReceivedChequeBranch = null;
    var _nContractorIDs="";
    var _nID=null,_nReceivedChequeStatus=null,_nSelectedRowIndex=null;
    $(document).ready(function() {
        _oReceivedCheques = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oAuthorizationRolesMapping = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _nID =parseInt(sessionStorage.getItem("SelectedRowIndex"));
        var oReceivedCheques =sessionStorage.getItem("ReceivedCheques");
        if(oReceivedCheques!=null)
        {
            oReceivedCheques = jQuery.parseJSON(oReceivedCheques);  
        }
        else
        {
            oReceivedCheques=_oReceivedCheques;
        }
        
        DynamicRefreshList(oReceivedCheques, 'tblReceivedCheques');
        if(_nID!=-1)
        {
            $('#tblReceivedCheques').datagrid('selectRow', _nID);
        }
        
        RefreshControlLayout();
        
        //$('#btnPrintInXLReceivedCheque').hide();
        
    });
    $('#txtSearchbyChequeNo').keyup(function (e){$(this).icsSearchByText({Event: e,SearchProperty: "ChequeNo",GlobalObjectList: _oReceivedCheques,TableId: "tblReceivedCheques"});});

    $('#btnAuthorized').click(function(){
        
        _oReceivedCheque = $('#tblReceivedCheques').datagrid('getSelected');
        if(_oReceivedCheque==null || _oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("Please select an item from list!");
            return false;
        }
        _nSelectedRowIndex=$('#tblReceivedCheques').datagrid('getRowIndex',_oReceivedCheque);
        _nReceivedChequeStatus=1;
        $('#winStatusChangeConfirmation').icsWindow('open','Confirm To Authorize?');
    });

    $('#btnReceivedFromParty').click(function(){
        
        _oReceivedCheque = $('#tblReceivedCheques').datagrid('getSelected');
        if(_oReceivedCheque==null || _oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("Please select an item from list!");
            return false;
        }
        _nSelectedRowIndex=$('#tblReceivedCheques').datagrid('getRowIndex',_oReceivedCheque);
        _nReceivedChequeStatus=2;
        $('#winStatusChangeConfirmation').icsWindow('open','Confirm To Receive?');
    });
    
    $('#btnEncash').click(function(){
        
        _oReceivedCheque = $('#tblReceivedCheques').datagrid('getSelected');
        if(_oReceivedCheque==null || _oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("Please select an item from list!");
            return false;
        }
        _nSelectedRowIndex=$('#tblReceivedCheques').datagrid('getRowIndex',_oReceivedCheque);
        _nReceivedChequeStatus=3;
        $('#winStatusChangeConfirmation').icsWindow('open','Confirm To Encash?');
    });
    $('#btnDishonor').click(function(){
        
        _oReceivedCheque = $('#tblReceivedCheques').datagrid('getSelected');
        if(_oReceivedCheque==null || _oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("Please select an item from list!");
            return false;
        }
        _nSelectedRowIndex=$('#tblReceivedCheques').datagrid('getRowIndex',_oReceivedCheque);
        _nReceivedChequeStatus=4;
        $('#winStatusChangeConfirmation').icsWindow('open','Confirm To Dishonor?');
    });
    $('#btnReturn').click(function(){
        
        _oReceivedCheque = $('#tblReceivedCheques').datagrid('getSelected');
        if(_oReceivedCheque==null || _oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("Please select an item from list!");
            return false;
        }
        _nSelectedRowIndex=$('#tblReceivedCheques').datagrid('getRowIndex',_oReceivedCheque);
        _nReceivedChequeStatus=5;
        $('#winStatusChangeConfirmation').icsWindow('open','Confirm To Return?');
    });
    $('#btnCancel').click(function(){
        
        _oReceivedCheque = $('#tblReceivedCheques').datagrid('getSelected');
        if(_oReceivedCheque==null || _oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("Please select an item from list!");
            return false;
        }
        _nSelectedRowIndex=$('#tblReceivedCheques').datagrid('getRowIndex',_oReceivedCheque);
        _nReceivedChequeStatus=6;
        $('#winStatusChangeConfirmation').icsWindow('open','Confirm To Cancel?');
    });

    $('#btnOkStatusChange').click(function ()
    {
        var txtRemarks= $('#txtRemarks').val();
        if(txtRemarks!=null||txtRemarks!=''){_oReceivedCheque.ErrorMessage=txtRemarks;}else{_oReceivedCheque.ErrorMessage='';}

        if(_nReceivedChequeStatus===1){Authorized();}
        else if(_nReceivedChequeStatus===2){ReceivedFromParty();}
        else if(_nReceivedChequeStatus===3){Encash();}
        else if(_nReceivedChequeStatus===4){Dishonor();}
        else if(_nReceivedChequeStatus===5){Return();}
        else if(_nReceivedChequeStatus===6){Cancel();}
        $('#txtRemarks').val('');
        $('#winStatusChangeConfirmation').icsWindow('close');
    });
    $('#btnNoStatusChange').click(function ()
    {
        $('#txtRemarks').val('');
        $('#winStatusChangeConfirmation').icsWindow('close');
    });

    function Cancel()
    {
        
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/ReceivedCheque/Cancel",
            traditional: true,
            data:  JSON.stringify(_oReceivedCheque),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oReceivedCheque = jQuery.parseJSON(data);
                if(_oReceivedCheque.ErrorMessage=="Cheque Cancel Successfully")
                {
                    alert(_oReceivedCheque.ErrorMessage);
                    $('#tblReceivedCheques').datagrid('updateRow',{index: _nSelectedRowIndex,	row: _oReceivedCheque});
                }
                else{alert(_oReceivedCheque.ErrorMessage);}

            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    function Return()
    {
        
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/ReceivedCheque/Return",
            traditional: true,
            data:  JSON.stringify(_oReceivedCheque),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oReceivedCheque = jQuery.parseJSON(data);
                if(_oReceivedCheque.ErrorMessage=="Cheque Return Successfully")
                {
                    alert(_oReceivedCheque.ErrorMessage);
                    $('#tblReceivedCheques').datagrid('updateRow',{index: _nSelectedRowIndex,	row: _oReceivedCheque});
                }
                else{alert(_oReceivedCheque.ErrorMessage);}

            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    function Dishonor()
    {
        
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/ReceivedCheque/Dishonor",
            traditional: true,
            data:  JSON.stringify(_oReceivedCheque),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oReceivedCheque = jQuery.parseJSON(data);
                if(_oReceivedCheque.ErrorMessage=="Cheque Dishonor Successfully")
                {
                    alert(_oReceivedCheque.ErrorMessage);
                    $('#tblReceivedCheques').datagrid('updateRow',{index: _nSelectedRowIndex,	row: _oReceivedCheque});
                }
                else{alert(_oReceivedCheque.ErrorMessage);}

            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    function Encash()
    {
        
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/ReceivedCheque/Encash",
            traditional: true,
            data:  JSON.stringify(_oReceivedCheque),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oReceivedCheque = jQuery.parseJSON(data);
                if(_oReceivedCheque.ErrorMessage=="Cheque Encash Successfully")
                {
                    alert(_oReceivedCheque.ErrorMessage);
                    $('#tblReceivedCheques').datagrid('updateRow',{index: _nSelectedRowIndex,	row: _oReceivedCheque});
                }
                else{alert(_oReceivedCheque.ErrorMessage);}

            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    function Authorized()
    {
        
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/ReceivedCheque/Authorized",
            traditional: true,
            data:  JSON.stringify(_oReceivedCheque),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oReceivedCheque = jQuery.parseJSON(data);
                if(_oReceivedCheque.ErrorMessage=="Cheque Authorized Successfully")
                {
                    alert(_oReceivedCheque.ErrorMessage);
                    $('#tblReceivedCheques').datagrid('updateRow',{index: _nSelectedRowIndex,	row: _oReceivedCheque});
                }
                else{alert(_oReceivedCheque.ErrorMessage);}

            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    function ReceivedFromParty()
    {
        
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/ReceivedCheque/ReceivedFromParty",
            traditional: true,
            data:  JSON.stringify(_oReceivedCheque),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oReceivedCheque = jQuery.parseJSON(data);
                if(_oReceivedCheque.ErrorMessage=="Cheque Received Successfully")
                {
                    alert(_oReceivedCheque.ErrorMessage);
                    $('#tblReceivedCheques').datagrid('updateRow',{index: _nSelectedRowIndex,	row: _oReceivedCheque});
                }
                else{alert(_oReceivedCheque.ErrorMessage);}

            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function RefreshArguments(){
        var sErrorMessage='Arguments;';
        
        var txtSearchbyChequeNo=$("#txtSearchbyChequeNo").val();
        if(txtSearchbyChequeNo!=null)
        {
            sErrorMessage=sErrorMessage+txtSearchbyChequeNo+'~';
        }
        
        return {ErrorMessage:sErrorMessage};
    }    
    $('#btnPrintReceivedCheque').click(function(){
        var oReceivedCheques=$('#tblReceivedCheques').datagrid('getRows');
        if(oReceivedCheques==null||oReceivedCheques.length<=0){return false;}
        for(var i=0;i<oReceivedCheques.length;i++){
            oReceivedCheques[i].IssueDate=oReceivedCheques[i].IssueDateSt;
            oReceivedCheques[i].ChequeDate=oReceivedCheques[i].ChequeDateSt;
        }
        $("#txtReceivedChequeCollectionList").val(JSON.stringify(oReceivedCheques));
    });
    $("#btnAddReceivedCheque").click(function(){
        //var tsv=((new Date()).getTime())/1000;
        //var oParameter = new Object();
        //oParameter.Name = "Add Received Cheque";
        //var url =_sBaseAddress+ "/ReceivedCheque/ViewVoucherReceivedCheque?id=0";
        //var oReceivedCheque = window.showModalDialog(url, oParameter, 'dialogHeight:380px;dialogWidth:950px;dialogLeft:200;dialogTop:150;center:yes;resizable:no;status:no;scroll:no');
        //if(oReceivedCheque!=null)
        //{
        //    if(oReceivedCheque.ReceivedChequeID>0)
        //    {                
        //        var nIndex = $('#tblReceivedCheques').datagrid('getRows').length;
        //        $('#tblReceivedCheques').datagrid('appendRow', oReceivedCheque);
        //        $('#tblReceivedCheques').datagrid('selectRow', nIndex);
        //    }
        //}


        var oReceivedCheques= $('#tblReceivedCheques').datagrid('getRows');
        sessionStorage.setItem("ReceivedCheques", JSON.stringify(oReceivedCheques)); 
        sessionStorage.setItem("SelectedRowIndex", -1);   
        sessionStorage.setItem("ReceivedChequeHeader", "Add Received Cheque");
        sessionStorage.setItem("ReceivedChequeBackTo", window.location.href);
        window.location.href = _sBaseAddress+ "/ReceivedCheque/ViewReceivedCheque?id=0";
    });
    $("#btnEditReceivedCheque").click(function(){
        var oReceivedCheque= $('#tblReceivedCheques').datagrid('getSelected'); 
        if(oReceivedCheque==null || oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(oReceivedCheque.ChequeStatus!=0)
        {
            alert("please select an Initialized Cheque!");                  
            return false;
        }
        
        var SelectedRowIndex=$('#tblReceivedCheques').datagrid('getRowIndex',oReceivedCheque);
        var oReceivedCheques= $('#tblReceivedCheques').datagrid('getRows');
        sessionStorage.setItem("ReceivedCheques", JSON.stringify(oReceivedCheques));        
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);   
        sessionStorage.setItem("ReceivedChequeHeader", "Edit Received Cheque");
        sessionStorage.setItem("ReceivedChequeBackTo", window.location.href);
        window.location.href = _sBaseAddress+  "/ReceivedCheque/ViewReceivedCheque?id="+oReceivedCheque.ReceivedChequeID;    
    });
    $("#btnViewReceivedCheque").click(function(){
        var oReceivedCheque= $('#tblReceivedCheques').datagrid('getSelected'); 
        if(oReceivedCheque==null || oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        
        var SelectedRowIndex=$('#tblReceivedCheques').datagrid('getRowIndex',oReceivedCheque);
        var oReceivedCheques= $('#tblReceivedCheques').datagrid('getRows');
        sessionStorage.setItem("ReceivedCheques", JSON.stringify(oReceivedCheques));        
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);   
        sessionStorage.setItem("ReceivedChequeHeader", "View Received Cheque");    
        sessionStorage.setItem("ReceivedChequeBackTo", window.location.href);
        window.location.href = _sBaseAddress+  "/ReceivedCheque/ViewReceivedCheque?id="+oReceivedCheque.ReceivedChequeID;
    });
    $("#btnDeleteReceivedCheque").click(function(){
        
        var oReceivedCheque= $('#tblReceivedCheques').datagrid('getSelected');
        if(oReceivedCheque==null || oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("please select an Item from the list!");                  
            return false;
        }
        if(oReceivedCheque.ChequeStatus!=0)
        {
            alert("please select an Initialized Cheque!");                  
            return false;
        }

        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblReceivedCheques').datagrid('getRowIndex',oReceivedCheque);
        if (oReceivedCheque.ReceivedChequeID > 0) 
        {
            $.icsDelete({
                BaseAddress: _sBaseAddress,
                Object: oReceivedCheque,
                ControllerName: "ReceivedCheque",
                ActionName: "Delete",
                TableId: "tblReceivedCheques",
                IsWinClose: false
            });
        }
    });
    

    ///////Search
    $("#btnAdvSearch").click(function () {
        $("#winAdvanceSearch").icsWindow('open', "Advance Search");
        $("#winAdvanceSearch input").not("input[type='button']").val("");        
        SetTodayDate();
        DynamicRefreshList([],'tblRCheque');
        _nContractorIDs="";
    });
    //Pick Supplier
    $("#txtCustomer").keydown(function (e) {        
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oContractor = { Param: "1" + '~' + document.getElementById('txtCustomer').value };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {
                        
                        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 150, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ContractorTypeInString", title: "Type", width: 150, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winBuyers',
                            winclass: 'clsBuyer',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblBuyers',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Buyer List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }
    });
    $("#btnCustomerPicker").click(function () {
        var oContractor = { Param: "1" };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "GetsByContractorType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 150, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBuyers',
                        winclass: 'clsBuyer',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblBuyers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Buyer List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });

    });
    $('#txtCustomer').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //
            var txtCustomerName = document.getElementById("txtCustomer");
            txtCustomerName.style.color = "black";
            txtCustomerName.style.fontWeight = "normal";
            _nContractorIDs = "";

        }
    });

    //Refresh
    $('#btnSearch').click(function () {   
        var sMoneyReceiptNo = $.trim($("#txtMoneyReceiptNo").val());
        var sBillNumber = $.trim($("#txtBillNumber").val());
        var sChequeNo = $.trim($("#txtChequeNo").val());
        
        var cboReceiptDate = document.getElementById("cboReceiptDate");
        var nReceiptDate = cboReceiptDate.options[cboReceiptDate.selectedIndex].index;        
        var dReceiptStartDate = $('#txtReceiptStartDate').datebox('getValue');
        var dReceiptEndDate = $('#txtReceiptEndDate').datebox('getValue');

        var cboChequeDate = document.getElementById("cboChequeDate");
        var nChequeDate = cboChequeDate.options[cboChequeDate.selectedIndex].index;              
        var dChequeStartDate = $('#txtChequeStartDate').datebox('getValue');
        var dChequeEndDate = $('#txtChequeEndDate').datebox('getValue');

        var chkResult = CheckEmpty();
        if (chkResult!= true) {
            alert("Please Select at lease one Criteria !!");
            return;
        }
        var sTempString = sMoneyReceiptNo+'~'+sBillNumber+'~'+sChequeNo+'~'+ nReceiptDate + '~' + dReceiptStartDate + '~' + dReceiptEndDate + '~' + nChequeDate + '~'+ dChequeStartDate + '~'+ dChequeEndDate + '~' + _nContractorIDs;
        var oReceivedCheque = { ErrorMessage : sTempString };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/ReceivedCheque/AdvSearch",
            traditional: true,
            data:  JSON.stringify(oReceivedCheque),
            contentType: "application/json; charset=utf-8",
            success: function (data) {                
                var oReceivedCheques = jQuery.parseJSON(data);                
                if (oReceivedCheques != null)
                {
                    if (oReceivedCheques.length > 0)
                    {
                        DynamicRefreshList(oReceivedCheques,'tblRCheque');
                        $('#tblRCheque').datagrid({ selectOnCheck: false, checkOnSelect: false });
                    }
                    else {
                        alert("Data not found!!");
                        DynamicRefreshList([],'tblRCheque');
                    }
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    //Reset
    $('#btnReset').click(function () {        
        DynamicRefreshList([],'tblRCheque');
        $('#txtMoneyReceiptNo').val('');
        $('#txtBillNumber').val('');
        $('#txtChequeNo').val('');
        
        document.getElementById("enddate").style.display = '';
        document.getElementById("enddateT").style.display = '';
        $('#cboReceiptDate').val('None');

        document.getElementById("enddate2").style.display = '';
        document.getElementById("enddateT2").style.display = '';
        $('#cboChequeDate').val('None');
        SetTodayDate();

        document.getElementById("txtCustomer").value = '';
        var txtCustomer = document.getElementById("txtCustomer");
        txtCustomer.style.color = "black";
        txtCustomer.style.fontWeight = "normal";
        _nContractorIDs = "";
    });

    //Button Click
    $('#btnOkButtonClick').click(function () {
        var oRCheques = [];
        var oRCheques = $('#tblRCheque').datagrid('getChecked');
        if (oRCheques.length <= 0) {
            alert("please select at least one item");
            return;
        }
        DynamicRefreshList(oRCheques,'tblReceivedCheques');
        $("#winAdvanceSearch").icsWindow('close');
    });

    //Close Picker
    $('#btnSearchClose').click(function () {
        $("#winAdvanceSearch").icsWindow('close');
    });

    $('._select_changeA').change(function () {          
        var x = $("#cboReceiptDate").val();
        if (x == "EqualTo" || x == "NotEqualTo" || x == "GreaterThen" || x == "SmallerThen") {
            document.getElementById("enddate").style.display = 'none';
            document.getElementById("enddateT").style.display = 'none';
        }
        else {
            document.getElementById("enddate").style.display = '';
            document.getElementById("enddateT").style.display = '';
        }
    });

    $('._select_changeB').change(function () {          
        var x = $("#cboChequeDate").val();
        if (x == "EqualTo" || x == "NotEqualTo" || x == "GreaterThen" || x == "SmallerThen") {
            document.getElementById("enddate2").style.display = 'none';
            document.getElementById("enddateT2").style.display = 'none';
        }
        else {
            document.getElementById("enddate2").style.display = '';
            document.getElementById("enddateT2").style.display = '';
        }
    });

    function SetTodayDate() {
        $('#cboChequeDate').val('None');
        $('#cboReceiptDate').val('None');
        $('#txtReceiptStartDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtReceiptEndDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtChequeStartDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtChequeEndDate').datebox('setValue', icsdateformat(new Date()));
    }

    function CheckEmpty() {
        var sMoneyReceiptNo = $.trim($("#txtMoneyReceiptNo").val());
        var sBillNumber = $.trim($("#txtBillNumber").val());
        var sChequeNo = $.trim($("#txtChequeNo").val());
                
        var cboReceiptDate = document.getElementById("cboReceiptDate");
        var nReceiptDate = cboReceiptDate.options[cboReceiptDate.selectedIndex].index;        
        var cboChequeDate = document.getElementById("cboChequeDate");
        var nChequeDate = cboChequeDate.options[cboChequeDate.selectedIndex].index;

        if(sMoneyReceiptNo ==="" && sBillNumber === "" && sChequeNo==="" &&  nReceiptDate === 0  && nChequeDate === 0  && _nContractorIDs === "")
        {
            return false;
        }
        return true;
    }

    function IntializePickerbutton(oPickerobj) {
        
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            
            //for Single Select
            PickerEvents(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                PickerEvents(oPickerobj);
            }
        });
    }
    function PickerEvents(oPickerobj) {
        var oreturnobj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else
        {
            oreturnobj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }

        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winclass == 'clsBuyer')
        {
            _nContractorIDs = "";
            if (oPickerobj.multiplereturn)
            {
                var ncount = 0;
                for (var i = 0; i <oreturnobjs.length; i++) {
                    var nSupplierID = oreturnobjs[i].ContractorID;
                    _nContractorIDs = _nContractorIDs + nSupplierID + ',';
                    ncount++;
                }
                if (ncount > 1)
                {
                    $('#txtCustomer').val("Select " + ncount + " Buyer's");
                } else
                {
                    $('#txtCustomer').val(oreturnobjs[0].Name);
                }
                _nContractorIDs = _nContractorIDs.substring(0, _nContractorIDs.length - 1);

            } else
            {
                $('#txtCustomer').val(oreturnobj.Name);
                _nContractorIDs = "" + oreturnobj.ContractorID + "";
                $('#txtCustomer').focus();
            }
            var txtCustomer = document.getElementById("txtCustomer");
            txtCustomer.style.color = "blue";
            txtCustomer.style.fontWeight = "bold";
        }
    }

    $(document).keydown(function (e) {
        //
        if (e.which == 27)//escape=27
        {
            //
            $("#winAdvanceSearch").icsWindow('close');
        }
    });


    function Attchment() {
        var oReceivedCheque = $('#tblReceivedCheques').datagrid('getSelected'); 
        if(oReceivedCheque==null || parseInt(oReceivedCheque.ReceivedChequeID)<=0)
        {
            alert("Please select a item from list!");
            return;
        }      
        var oParameter = new Object();    
        var tsv= ((new Date()).getTime())/1000;
        var url =_sBaseAddress+  "/ReceivedCheque/Attachment?id="+oReceivedCheque.ReceivedChequeID+"&ts="+tsv;
        window.showModalDialog(url, oParameter, 'dialogHeight:445px;dialogWidth:700px;dialogLeft:350;dialogTop:70;center:yes;resizable:no;status:no;scroll:no');     
    }

    function RefreshControlLayout() {
        //ReceivedCheque
        $("#btnAddReceivedCheque").hide();
        $("#btnEditReceivedCheque").hide();
        $("#btnViewReceivedCheque").hide();
        $("#btnDeleteReceivedCheque").hide();
        
        $("#btnPrintListReceivedCheque").hide();
        $("#btnPrintInXLReceivedCheque").hide();

        if (HavePermission('Add', 'ReceivedCheque')) {
            $("#btnAddReceivedCheque").show();
        }
        if (HavePermission('Edit', 'ReceivedCheque')) {
            $("#btnEditReceivedCheque").show();
        }
        if (HavePermission('View', 'ReceivedCheque')) {
            $("#btnViewReceivedCheque").show();
        }
        if (HavePermission('Delete', 'ReceivedCheque')) {
            $("#btnDeleteReceivedCheque").show();
        }
        
        if (HavePermission('PrintList', 'ReceivedCheque')) {
            $("#btnPrintListReceivedCheque").show();
        }
        if (HavePermission('XLPrint', 'ReceivedCheque')) {
            $("#btnPrintInXLReceivedCheque").show();
        }

       
    }

    function HavePermission(sOperationType,sDbObject) {
        var nUserId = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.currentUserID]));
        if(nUserId === -9) //check SuperUser
        {
            return true;
        }
        else
        {
            for(var i =0; i<_oAuthorizationRolesMapping.length; i++)
            {
                if(_oAuthorizationRolesMapping[i].OperationTypeInString === sOperationType && _oAuthorizationRolesMapping[i].DBObjectName === sDbObject)
                    return  true;
            }
            return false;
        }
    }


</script>