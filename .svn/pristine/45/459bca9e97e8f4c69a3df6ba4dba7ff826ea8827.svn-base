<html>
@{
    ViewBag.Title = "View Packing List";
}
<body>
    @model ESimSol.BusinessObjects.PackingList
    <div class="menuMainCollectionTable" style="width:100%;height:100%">
        <div class="easyui-panel" title="Packing List" style="font-family:Tahoma;text-align:center;height:90%;">
            <fieldset>
                <legend style="font-weight: bold;">Invoice Info: </legend>
                <table border="0" cellspacing="0" cellpadding="1" style="font-size: 11px; font-weight: bold">

                    <tr>
                        <td style="width: 150px; text-align: right">Style/Recap:</td>
                        <td style="width:300px; text-align:left;"> @Html.TextBoxFor(model => model.StyleWithRecapNo, new { style = "width: 250px;", id = "txtStyleWithRecapNo", disabled = "disabled" })<input type="button" id="btnPickRecap" value="Pick" style="width:45px;" onclick="PickRecap()" />  </td>
                        <td style="width:165px; text-align: right">Invoice No</td>
                        <td style="width:300px;">
                            <table border="0" cellpadding="0" cellspacing="0">
                                <tr>
                                    <td style="width:100px; text-align:left;">@Html.TextBoxFor(model => model.InvoiceNo, new { style = "width: 100px;", id = "txtInvoiceNo", disabled = "disabled" }) </td>
                                    <td style="width:100px; text-align:right;">Invoice Date</td>
                                    <td style="width:100px; text-align:left;">@Html.TextBoxFor(model => model.InvoiceDateInString, new { style = "width: 100px;", id = "txtInvoiceDateInString", disabled = "disabled" }) </td>
                                </tr>
                            </table>
                        </td>

                    </tr>
                    <tr>
                        <td style="width: 150px; text-align: right; ">Buyer Name:</td>
                        <td style="width:300px; text-align:left;">@Html.TextBoxFor(model => model.BuyerName, new { style = "width: 300px;", id = "txtBuyerName", disabled = "disabled" })</td>

                        <td style="width:165px; text-align: right">Factory:</td>
                        <td style="width:300px; text-align:left;">@Html.TextBoxFor(model => model.FactoryName, new { style = "width:300px;", id = "txtFactoryName", disabled = "disabled" }) </td>

                    </tr>
                    <tr>
                        <td style="width: 150px; text-align: right">Product:</td>
                        <td style="width:300px; text-align:left;">@Html.TextBoxFor(model => model.ProductName, new { style = "width: 300px;", id = "txtProductName", disabled = "disabled" })  </td>
                        <td style="width:165px; text-align: right">Fabrication:</td>
                        <td style="width:300px; text-align:left;">@Html.TextBoxFor(model => model.Fabrication, new { style = "width: 300px;", id = "txtFabrication", disabled = "disabled" })  </td>
                    </tr>
                    <tr>
                        <td style="width: 150px; text-align: right">Note:</td>
                        <td colspan="3" style="width:780px; text-align:left;">@Html.TextBoxFor(model => model.Note, new { style = "width:780px;", id = "txtRemarks" }) </td>
                    </tr>
                </table>

            </fieldset>
      
        <div style="width:100%; height:49%;">
            <table id="tblColorSizeWiseRatio" class="easyui-datagrid" title="Color Size Ratio" fit="true" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" data-options="onClickRow: onClickRow"></table>
        </div>
        <div id="divTotalSummary" style="font-size:12px; height:15px; width:100%;"><b>Total :</b></div>
        <div>
            <table border="0" cellspacing="0" cellpadding="1" style="font-size: 11px; font-weight: bold">
                <tr>
                    <td style="width:150px; text-align: right">Unit In Pack:</td>
                    <td style="width:300px; text-align:left;">
                        <table>
                            <tr>
                                <td style="width:100px; text-align:left;"> @Html.TextBoxFor(model => model.UnitInPack, new { style = "width: 100px;", id = "txtUnitInPack", disabled = "disabled", @class = "number" })  </td>
                                <td style="width:120px; text-align:right;">Pack In Carton:</td>
                                <td style="width:80px; text-align:left;"> @Html.TextBoxFor(model => model.PackInCarton, new { style = "width:80px;", id = "txtPackInCarton",@class="number" })  </td>
                            </tr>
                        </table>
                    </td>
                    <td style="width:165px; text-align: right">Qty In Carton:</td>
                    <td style="width:300px;">
                        <table border="0" cellpadding="0" cellspacing="0">
                            <tr>
                                <td style="width:100px; text-align:left;">@Html.TextBoxFor(model => model.QtyInCarton, new { style = "width: 100px;", id = "txtQtyInCarton", disabled = "disabled", @class = "number" }) </td>
                                <td style="width:100px; text-align:right;">Shipment Qty</td>
                                <td style="width:100px; text-align:left;">@Html.TextBoxFor(model => model.TotalQty, new { style = "width: 100px;", id = "txtTotalQty", disabled = "disabled", @class = "number" }) </td>
                            </tr>
                        </table>
                    </td>
                </tr>

                <tr>
                    <td style="width:150px; text-align: right">Carton Qty:</td>
                    <td style="width:300px; text-align:left;">
                        <table>
                            <tr>
                                <td style="width:100px; text-align:left;"> @Html.TextBoxFor(model => model.CartonQty, new { style = "width: 100px;", id = "txtCartonQty", disabled = "disabled", @class = "number" })  </td>
                                <td style="width:120px; text-align:right;">Carton No:</td>
                                <td style="width:80px; text-align:left;"> @Html.TextBoxFor(model => model.CartonNo, new { style = "width:80px;", id = "txtCartonNo" })  </td>
                            </tr>
                        </table>
                    </td>
                    <td style="width:165px; text-align: right">G.W/CTN(Kg):</td>
                    <td style="width:300px;">
                        <table border="0" cellpadding="0" cellspacing="0">
                            <tr>
                                <td style="width:100px; text-align:left;">@Html.TextBoxFor(model => model.GrossWeight, new { style = "width: 100px;", id = "txtGrossWeight", @class = "number" }) </td>
                                <td style="width:100px; text-align:right;">N.W/CTN(Kg):</td>
                                <td style="width:100px; text-align:left;">@Html.TextBoxFor(model => model.NetWeight, new { style = "width: 100px;", id = "txtNetWeight", @class = "number" }) </td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td style="width:150px; text-align: right">CTN Meas(CM):</td>
                    <td style="width:300px; text-align:left;">
                        <table>
                            <tr>
                                <td style="width:100px; text-align:left;"> @Html.TextBoxFor(model => model.CTNMeasurement, new { style = "width: 100px;", id = "txtCTNMeasurement"})  </td>
                                <td style="width:120px; text-align:right;">Volume:</td>
                                <td style="width:80px; text-align:left;"> @Html.TextBoxFor(model => model.TotalVolume, new { style = "width:80px;", id = "txtTotalVolume", @class = "number" })  </td>
                            </tr>
                        </table>
                    </td>
                    <td style="width:165px; text-align: right">Ttl Gross Weight:</td>
                    <td style="width:300px;">
                        <table border="0" cellpadding="0" cellspacing="0">
                            <tr>
                                <td style="width:100px; text-align:left;">@Html.TextBoxFor(model => model.TotalGrossWeight, new { style = "width: 100px;", id = "txtTotalGrossWeight", disabled = "disabled", @class = "number" }) </td>
                                <td style="width:100px; text-align:right;">Ttl Net Weight:</td>
                                <td style="width:100px; text-align:left;">@Html.TextBoxFor(model => model.TotalNetWeight, new { style = "width: 100px;", id = "txtTotalNetWeight", disabled = "disabled", @class = "number" }) </td>
                            </tr>
                        </table>
                    </td>
                </tr>

             </table>
            </div>
            </div>
        <fieldset style="height:38px; width:98%;">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="0" cellpadding="0" style="font-size: 11px; font-weight: bold; vertical-align:middle; width:100%">
                <tr>
                    
                    <td style="width:85%; text-align: right">
                    </td>
                    <td style="width:7%">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                    </td>
                    <td style="width:8%">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">
    var _oPackingList=null;
    var _sBaseAddress="";
    var _oTechnicalSheetSizes =[];
    var _oColorSizeRatios = [];
    var _oPackingListDetails = [];
    var _sPackingListHeader = "";
    var _oAuthorizationRolesMapping = [];
    var _lBackLink = "";
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        _oPackingList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oTechnicalSheetSizes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.TechnicalSheetSizes));
        _oColorSizeRatios = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ColorSizeRatios));
        _sPackingListHeader = sessionStorage.getItem("PackingListHeader");
        _lBackLink = sessionStorage.getItem("BackLink");
        RefreshControl();
        MakeSaleOrderDetailTable(_oTechnicalSheetSizes);
        //RefreshOrderRecapColorSizeList(_oColorSizeRatios);
    });


    function RefreshControl()
    {
        debugger;
        if(_sPackingListHeader=="Edit Packing List")
        {
            var txtBuyerName=document.getElementById("txtBuyerName");
            txtBuyerName.style.color="blue";
            txtBuyerName.style.fontWeight="bold";
        }
        if(_sPackingListHeader=="View Packing List")
        {
            document.getElementById('txtRemarks').disabled = true;
            $('#btnSave').hide();
        }
       
    }

    function RefreshDetails(oPackingListDetails)
    {
        data=oPackingListDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblColorSizeWiseRatio').datagrid('loadData',data);
    }

    
    function PickRecap()
    {
        if(parseInt(sessionStorage.getItem("CommercialInvoiceID"))<=0)
        {
            alert("Sorry, there is No commercial Invoice ");
            return;
        }

        var oCommercialInvoiceDetail = {CommercialInvoiceID:sessionStorage.getItem("CommercialInvoiceID")};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oCommercialInvoiceDetail,
            ControllerName: "CommercialInvoice",
            ActionName: "GetCommercialInvoiceDetails",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].CommercialInvoiceDetailID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "StyleNo", title: "Style No", width: 140, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "OrderRecapNo", title: "Order Recap", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShipmentDateInString", title: "Shipment Date", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Garments Name", width: 130, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "InvoiceQty", title: "Quantity", width: 100, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winCIDs',
                        winclass: 'clsCID',
                        winwidth: 700,
                        winheight: 500,
                        tableid: 'tblCIDs',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'StyleNo',
                        windowTittle: 'Commercial Invoice Details'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else
            {
                alert("Data Not Found.");
                return;
            }
        });
    }

    $( "#txtPackInCarton" ).change(function() {//onchange of pack in unit
        endEditing();
        if(parseInt($("#txtPackInCarton").val())>0 && parseInt($("#txtUnitInPack").val())>0)
        {
            $("#txtQtyInCarton").val(Math.ceil(parseInt($("#txtUnitInPack").val()) * parseInt($("#txtPackInCarton").val())));
            $("#txtCartonQty").val(Math.ceil(parseInt($("#txtTotalQty").val())/parseInt($("#txtQtyInCarton").val())));
        }else{
            $("#txtQtyInCarton").val(0);
            $("#txtCartonQty").val(0);
        }

    });

    
    $("#txtGrossWeight" ).change(function() {//onchange of GrossWeight
        endEditing();
        if(parseFloat($("#txtGrossWeight").val())>0 && parseInt($("#txtCartonQty").val())>0)
        {
            $("#txtTotalGrossWeight").val(formatPrice(parseFloat($("#txtGrossWeight").val()) * parseInt($("#txtCartonQty").val())));
        }else{
            $("#txtTotalGrossWeight").val(0);
        }

    });

        
    $("#txtNetWeight" ).change(function() {//onchange of GrossWeight
        endEditing();
        if(parseFloat($("#txtNetWeight").val())>0 && parseInt($("#txtCartonQty").val())>0)
        {
            $("#txtTotalNetWeight").val(formatPrice(parseFloat($("#txtNetWeight").val()) * parseInt($("#txtCartonQty").val())));
        }else{
            $("#txtTotalNetWeight").val(0);
        }

    });

    //
    var editIndex = undefined;
    function endEditing(){
        if (editIndex == undefined){return true}
        if ($('#tblColorSizeWiseRatio').datagrid('validateRow', editIndex)){
            $('#tblColorSizeWiseRatio').datagrid('endEdit', editIndex);
            $('#tblColorSizeWiseRatio').datagrid('selectRow',editIndex);
            var oCSWRatio=$('#tblColorSizeWiseRatio').datagrid('getSelected');
            if(oCSWRatio!=null)
            {
                oCSWRatio.ColorWiseTotal = parseInt(oCSWRatio.OrderQty1)+parseInt(oCSWRatio.OrderQty2)+parseInt(oCSWRatio.OrderQty3)+parseInt(oCSWRatio.OrderQty4)+parseInt(oCSWRatio.OrderQty5)+parseInt(oCSWRatio.OrderQty6)+parseInt(oCSWRatio.OrderQty7)+parseInt(oCSWRatio.OrderQty8)+parseInt(oCSWRatio.OrderQty9)+parseInt(oCSWRatio.OrderQty10)+parseInt(oCSWRatio.OrderQty11)+parseInt(oCSWRatio.OrderQty12)+parseInt(oCSWRatio.OrderQty13)+parseInt(oCSWRatio.OrderQty14)+parseInt(oCSWRatio.OrderQty15)+parseInt(oCSWRatio.OrderQty16)+parseInt(oCSWRatio.OrderQty17)+parseInt(oCSWRatio.OrderQty18)+parseInt(oCSWRatio.OrderQty19)+parseInt(oCSWRatio.OrderQty20);
                $('#tblColorSizeWiseRatio').datagrid('updateRow',{index: editIndex,	row: oCSWRatio});
            }
            RefreshSummary(_oTechnicalSheetSizes);

            editIndex = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRow(index){
        if (editIndex != index){
            if (endEditing())
            {
                $('#tblColorSizeWiseRatio').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else
            {
                $('#tblColorSizeWiseRatio').datagrid('selectRow', editIndex);
            }
        }
    }

    function ValidateInput()
    {
        if(parseInt(_oPackingList.CIDID)<=0)
        {
            alert("Please Pick Order Recap");
            return false;
        }

        if(parseInt($('#txtPackInCarton').val())<=0)
        {
            alert("Pack in Carton Qty Should be greater than 0");
            $('#txtPackInCarton').focus();
            return false;
        }
        
        //if(parseInt(nTotalQuantity)!=parseInt($('#txtTotalQty').val()))
        //{
        //    alert("Pack in Carton Qty Should be greater than 0");
        //    $('#txtTotalQty').focus();
        //    return false;
        //}

        if($('#txtCartonNo').val()=="" || $('#txtCartonNo').val()== null)
        {
            alert("Please Type Carton No");
            $('#txtCartonNo').focus();
            return false;
        }
        if(parseInt($('#txtGrossWeight').val())<=0)
        {
            alert("Gross Weight Should be greater than 0");
            $('#txtGrossWeight').focus();
            return false;
        }

        if(parseInt($('#txtNetWeight').val())<=0)
        {
            alert("Net Weight Should be greater than 0");
            $('#txtNetWeight').focus();
            return false;
        }

        if($('#txtCTNMeasurement').val()=="" || $('#txtCTNMeasurement').val()== null)
        {
            alert("Please Type Carton Measurement");
            $('#txtCTNMeasurement').focus();
            return false;
        }
        if(parseInt($('#txtTotalVolume').val())<=0)
        {
            alert("Total Volume Should be greater than 0");
            $('#txtTotalVolume').focus();
            return false;
        }
        var oPackingListDetails =$('#tblColorSizeWiseRatio').datagrid('getRows');
        if(oPackingListDetails.length<=0 && _oPackingListDetails.length<=0)
        {
            alert("Sorry, there is No Color Size Ratio");
            return false;
        }
        return true;
    }


    function RefreshObject()
    {
        var oPackingList= {
            PackingListID :_oPackingList.PackingListID,
            CIDID :_oPackingList.CIDID,
            UnitInPack:$('#txtUnitInPack').val(),
            PackInCarton:$('#txtPackInCarton').val(),
            QtyInCarton:$('#txtQtyInCarton').val(),
            CartonQty:$('#txtCartonQty').val(),
            CartonNo:$('#txtCartonNo').val(),
            GrossWeight:$('#txtGrossWeight').val(),
            NetWeight:$('#txtNetWeight').val(),
            CTNMeasurement:$('#txtCTNMeasurement').val(),
            TotalVolume:$('#txtTotalVolume').val(),
            Note:$('#txtRemarks').val(),
            TechnicalSheetID : _oPackingList.TechnicalSheetID,
            ColorSizeRatios:$('#tblColorSizeWiseRatio').datagrid('getRows')
        };
        return oPackingList;
    }

    function MakeRefreshDetails()
    {

        var oPackingListDetails = $('#tblColorSizeWiseRatio').datagrid('getData');
        var oTempPackingListDetails= [];
        if(oPackingListDetails.length>0)
        {
            for(var i =0;i<oPackingListDetails.length;i++)
            {
                var oPackingListDetail= {
                    PackingListDetailID :oPackingListDetails[i].PackingListDetailID,
                    PackingListID:_oPackingList.PackingListID,
                    PackingListStepID :oPackingListDetails[i].id,
                    Sequence :oPackingListDetails[i].Sequence,
                    Remarks :oPackingListDetails[i].Remarks
                };
                oTempPackingListDetails.push(oPackingListDetail);
                var oTempChildrens =oPackingListDetails[i].children;
                for(var j = 0; j<oTempChildrens.length;j++)
                {
                    var oPackingListDetail= {
                        PackingListDetailID :oTempChildrens[j].PackingListDetailID,
                        PackingListID:_oPackingList.PackingListID,
                        PackingListStepID :oTempChildrens[j].id,
                        Sequence :oTempChildrens[j].Sequence,
                        Remarks :oTempChildrens[j].Remarks
                    };
                    oTempPackingListDetails.push(oPackingListDetail);
                }
            }
        }

        if(_oPackingListDetails.length>0)//Data exist in _oPackingListDetails when pick Template or Order STep
        {
            for(var i =0;i<_oPackingListDetails.length;i++)
            {
                var oPackingListDetail= {
                    PackingListDetailID :_oPackingListDetails[i].PackingListDetailID,
                    PackingListID:_oPackingList.PackingListID,
                    PackingListStepID :_oPackingListDetails[i].PackingListStepID,
                    Sequence :_oPackingListDetails[i].Sequence,
                    Remarks :_oPackingListDetails[i].Remarks
                };
                oTempPackingListDetails.push(oPackingListDetail);
            }
        }
        _oPackingListDetails = [];//Reset
        return oTempPackingListDetails;
    }

    function Save()
    {
        debugger;
        endEditing();
        if(!ValidateInput()) return;
        var oPackingList=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/PackingList/Save",
            traditional: true,
            data:  JSON.stringify(oPackingList),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
               var oPackingList = jQuery.parseJSON(data);
               if (oPackingList.PackingListID>0)
                {
                    alert("Data Saved sucessfully");
                    var oPackingLists = sessionStorage.getItem("PackingLists");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oPackingLists != null) {
                        oPackingLists = jQuery.parseJSON(oPackingLists);
                    }
                    else {
                        oPackingLists = [];
                    }
                    if (nIndex != -1) {
                        oPackingLists[nIndex] = oPackingList;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oPackingLists.length);
                        oPackingLists.push(oPackingList);
                    }
                    sessionStorage.setItem("PackingLists", JSON.stringify(oPackingLists));
                    window.location.href = _lBackLink;
                    
                }
                else {
                   alert(oPackingList.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }



    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            PickerEvents(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                PickerEvents(oPickerobj);
            }
        });
    }
    function PickerEvents(oPickerobj) {
        var oreturnobj = null, oreturnobjs = [];
        if(oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        }else{
            oreturnobj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }

        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winclass == 'clsCID')
        {
            debugger;
            if(oreturnobj.CommercialInvoiceDetailID>0)
            {
                $('#txtStyleWithRecapNo').val(oreturnobj.StyleNo+'/'+oreturnobj.OrderNo);
                $('#txtInvoiceNo').val(oreturnobj.InvoiceNo);
                $('#txtInvoiceDateInString').val(oreturnobj.InvoiceDateInString);
                $('#txtBuyerName').val(oreturnobj.BuyerName);
                $('#txtFactoryName').val(oreturnobj.FactoryName);
                $('#txtFabrication').val(oreturnobj.Fabrication);
                $('#txtProductName').val(oreturnobj.ProductName);
                $('#txtTotalQty').val(oreturnobj.InvoiceQty);
                _oPackingList.CIDID = oreturnobj.CommercialInvoiceDetailID;
                _oPackingList.TechnicalSheetID = oreturnobj.TechnicalSheetID;
                TechnicalSheetSize(oreturnobj.TechnicalSheetID);
                GetColorSizeRatios (oreturnobj.OrderRecapID);
                
            }
        }
    }

    function MakePackingListDetails(nPackingListStepID)
    {
        debugger;
        for(var j = 0; j<_oTempPackingListSteps.length;j++)
        {
            if(parseInt(_oTempPackingListSteps[j].ParentID) == parseInt(nPackingListStepID))
            {
                if(!IsExist(_oTempPackingListSteps[j].PackingListStepID))
                {
                    var dTempDate = new Date(_oPackingList.ShipmentDateInString);
                    dTempDate.setDate(dTempDate.getDate() - 1);
                    var oPackingListDetail ={
                        PackingListDetailID:0,
                        PackingListID:_oPackingList.PackingListID,
                        PackingListStepID :_oTempPackingListSteps[j].PackingListStepID,
                        PackingListStepName :_oTempPackingListSteps[j].PackingListStepName,
                        Sequence :0,
                        ApprovalPackingListDate:dTempDate,
                        ApprovalPackingListDateInString:icsdateformat(dTempDate),
                        Remarks :_oTempPackingListSteps[j].Remarks
                    };
                    _oPackingListDetails.push(oPackingListDetail);
                }
            }
        }
    }


    function TechnicalSheetSize(nTechnicalSheetID)
    {
        //debugger;
        var oTechnicalSheet={
            TechnicalSheetID : nTechnicalSheetID
        };
        $.ajax ({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/SaleOrder/GetTechnicalSheetSize",
            data:  JSON.stringify(oTechnicalSheet),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var  oTechnicalSheetSizes = jQuery.parseJSON(data);
                if (oTechnicalSheetSizes!=null)
                {
                    if(oTechnicalSheetSizes.length>0)
                    {
                        MakeSaleOrderDetailTable(oTechnicalSheetSizes);
                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }


    function MakeSaleOrderDetailTable(oTechnicalSheetSizes)
    {
        _oTechnicalSheetSizes=[];
        var tblColums=[];
        var oColumn=null;
        oColumn= { field :"ColorName", title:"Color Name", width:"120"};
        tblColums.push(oColumn);
        var count =0;
        for(var i=0; i<oTechnicalSheetSizes.length;i++)
        {
            count++;
            oColumn= {
                field:"OrderQty"+count,
                title: oTechnicalSheetSizes[i].SizeCategoryName,
                width: "60",
                align: "right",
                editor: {type:'numberbox',options:{ precision:0}}
            };
            tblColums.push(oColumn);
            _oTechnicalSheetSizes.push(oTechnicalSheetSizes[i]);
        }
        oColumn= { field :"ColorWiseTotal", title:"Total", width:"100",  align: "right"};
        tblColums.push(oColumn);
        $('#tblColorSizeWiseRatio').datagrid({ columns:[tblColums]});
        RefreshOrderRecapColorSizeList(_oColorSizeRatios);
        RefreshSummary(_oTechnicalSheetSizes);
    }

    function RefreshSummary(oTechnicalSheetSizes)
    {
        debugger;
        var sInnerHTML="<table border='0' cellspacing='2' cellpadding='2' style='font-size:11px; font-weight:bold'><tr>";
        sInnerHTML=sInnerHTML+"<td style='width:135px; text-align:right'> Total :</td>";
        var count =0;
        for(var j=0; j<oTechnicalSheetSizes.length;j++)
        {
            count++;
            sInnerHTML=sInnerHTML+"<td style='width:56px; text-align:right'>"+SizeWiseTotal(count)+"</td>";
        }
        var nTotalQuantity=SizeWiseTotal(21);
        sInnerHTML=sInnerHTML+"<td style='width:90px; text-align:right'>"+nTotalQuantity+"</td>";
        sInnerHTML=sInnerHTML+"</tr></table>";
        //debugger;
        var divTotalSummary= document.getElementById('divTotalSummary');
        divTotalSummary.innerHTML=sInnerHTML;
        $('#txtUnitInPack').val(nTotalQuantity);
        if(parseInt($("#txtPackInCarton").val())>0 && parseInt($("#txtUnitInPack").val())>0)
        {
            $("#txtQtyInCarton").val(Math.ceil(parseInt($("#txtUnitInPack").val()) * parseInt($("#txtPackInCarton").val())));
            $("#txtCartonQty").val(Math.ceil(parseInt($("#txtTotalQty").val())/parseInt($("#txtQtyInCarton").val())));
        }else{
            $("#txtQtyInCarton").val(0);
            $("#txtCartonQty").val(0);
        }
        if(parseInt($("#txtGrossWeight").val())>0 && parseInt($("#txtCartonQty").val())>0)
        {
            $("#txtTotalGrossWeight").val(formatPrice(parseFloat($("#txtGrossWeight").val()) * parseInt($("#txtCartonQty").val())));
        }else{
            $("#txtTotalGrossWeight").val(0);
        }
        if(parseInt($("#txtNetWeight").val())>0 && parseInt($("#txtCartonQty").val())>0)
        {
            $("#txtTotalNetWeight").val(formatPrice(parseFloat($("#txtNetWeight").val()) * parseInt($("#txtCartonQty").val())));
        }else{
            $("#txtTotalNetWeight").val(0);
        }
    }
    function GetColorSizeRatios (nSaleOrderID)
    {
        if( parseInt(nSaleOrderID)>0)
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : _sBaseAddress+"/PackingList/GetColorSizeRatio",
                data: {nSaleOrderID:nSaleOrderID},
                contentType: "application/json; charset=utf-8",
                success: function (data)
                {
                    //debugger;
                    oColorSizeRatios = jQuery.parseJSON(data);
                    if (oColorSizeRatios.length >0)
                    {
                        _oColorSizeRatios = oColorSizeRatios;
                        RefreshOrderRecapColorSizeList(_oColorSizeRatios);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }

    }

    function RefreshOrderRecapColorSizeList(oColorSizeRatios)
    {
        data=oColorSizeRatios;
        data={"total":""+data.length+"","rows":data};
        $('#tblColorSizeWiseRatio').datagrid('loadData',data);
        RefreshSummary(_oTechnicalSheetSizes);
    }
    function SizeWiseTotal(n)
    {
        var nSizeWiseTotal=0;
        var oColorSizeWiseRatios = $('#tblColorSizeWiseRatio').datagrid('getRows');
        for(var i=0; i<oColorSizeWiseRatios.length; i++)
        {
            if(n==1){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty1);}
            else if(n==1){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty1);}
            else if(n==2){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty2);}
            else if(n==3){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty3);}
            else if(n==4){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty4);}
            else if(n==5){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty5);}
            else if(n==6){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty6);}
            else if(n==7){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty7);}
            else if(n==8){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty8);}
            else if(n==9){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty9);}
            else if(n==10){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty10);}
            else if(n==11){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty11);}
            else if(n==12){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty12);}
            else if(n==13){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty13);}
            else if(n==14){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty14);}
            else if(n==15){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty15);}
            else if(n==16){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty16);}
            else if(n==17){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty17);}
            else if(n==18){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty18);}
            else if(n==19){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty19);}
            else if(n==20){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty20);}
            else if(n==21){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].ColorWiseTotal);}
        }
        return nSizeWiseTotal;
    }

    function Close()
    {
        window.location.href = _lBackLink;
    }

    $(document).keydown(function(e) {
        //debugger;
        if(e.which == 27)//escape=27
        {
            //debugger;
            window.location.href = _lBackLink;
        }
    });

    function RefreshControlLayout()
    {
        document.getElementById('btnRemoveDetail').style.display = 'none';
        if(HavePermission('Delete','PackingListDetail')){document.getElementById('btnRemoveDetail').style.display = '';}
    }

    function HavePermission(sOperationType, sDbObject)
    {
        var nSessionID =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.currentUserID]));
        if(nSessionID == -9) //check SuperUser
        {
            return true;
        }else
        {

            for(var i =0;i<_oAuthorizationRolesMapping.length;i++)
            {
                if(_oAuthorizationRolesMapping[i].OperationTypeInString == sOperationType && _oAuthorizationRolesMapping[i].DBObjectName == sDbObject)
                    return  true;
            }
            return false;
        }
    }

</script>
