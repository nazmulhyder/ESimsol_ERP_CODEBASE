<html>
@{
    ViewBag.Title = "Sales Quotation";
}
<body>
    @model IEnumerable<ESimSol.BusinessObjects.SalesQuotation>
<div class="menuMainCollectionTable" ng-app="SalesQuotationApp">
    <div ng-controller="SalesQuotationController" title="Sales Quotation" class="ms-custom-control">
        <div style="margin-bottom:2px; display:block" class="form-inline ui-grid-top-panel regionInvoice">
            <input type="text" class="form-control" ng-model="RefNo" ng-keydown="searchByRefNo($event)" placeholder="Type Ref No & Press Enter">
            <button type="button" ng-show="btnView" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="AdvanceSearch()"><span class="glyphicon glyphicon-search" aria-hidden="true"> Advance Search</span></button>
            <button type="button" ng-show="btnAdd" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Add()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>
            <button type="button" ng-show="btnEdit" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Edit()"><span class="glyphicon glyphicon-edit" aria-hidden="true"> Edit</span></button>
            <button type="button" ng-show="btnView" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="View()"><span class="glyphicon glyphicon-th" aria-hidden="true"> View</span></button>
            <button type="button" ng-show="btnCopy" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Copy()"><span class="glyphicon glyphicon-copy" aria-hidden="true"> Copy</span></button>
            <button type="button" ng-show="btnDelete" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Delete()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Delete</span></button>
            
            <button type="button" ng-show="btnApprove" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Approve()"><span class="glyphicon glyphicon-ok" aria-hidden="true"> Approve</span></button>
            <button type="button" ng-show="btnUndoApprove" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="UndoApprove()"><span class="glyphicon glyphicon-circle-arrow-left" aria-hidden="true"> Undo Approve</span></button>
            <button type="button" ng-show="btnRevise" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Revise()"><span class="glyphicon glyphicon-edit" aria-hidden="true"> Revise</span></button>

            <button type="button" ng-show="btnImage" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="UpImage()"><span class="glyphicon glyphicon-save-file" aria-hidden="true"> Up Image</span></button>
            <button type="button" ng-show="btnUpdateStatus" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="OpenUpdateModal()"><span class="glyphicon glyphicon-save-file" aria-hidden="true"> Update Status</span></button>
            <button type="button" ng-show="btnPrintList" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PrintList()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Print List</span></button>
            <button type="button" ng-show="btnPriview" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PrintPreview()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Preview</span></button>
            <button type="button" ng-show="btnPriview" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PartyWiseModal()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Bank Quotation</span></button>
            <button type="button" ng-show="btnPriview" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="ViewReviseHistory()"><span class="glyphicon glyphicon-list" aria-hidden="true"> Revise History</span></button>
            
        </div>
        <div ui-grid="gridOptions" ui-grid-selection ui-grid-pinning ui-grid-resize-columns style=" width: 99%; height: 495px;"></div>
    </div>
    <script type="text/ng-template" id="SalesQuotation.html">
        <div class="modal-header">
            <h4 class="modal-title" id="modal-title">Update Sales Status</h4>
        </div>
        <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">Status:</label></div>
                    <div class="col-md-7 text-left">
                        <select ng-model="SalesQuotation.SalesStatus" class="form-control" ng-options="oItem.id as oItem.Value for oItem in SalesStatusList">
                            <option value="">--Select One--</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">Note:</label></div>
                    <div class="col-md-7 text-left">
                        <input type="text" class="form-control" ng-model="SalesQuotation.SalesStatusRemarks">
                    </div>
                </div>
            </div>

        </div>
        <div class="modal-footer">
            <button type="button" class="btn-success btn-sm" aria-label="Left Align" ng-click="UpdateStatus()" ng-hide="hide"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Save</button>
            <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
        </div>
    </script>

    <script type="text/ng-template" id="PartyWiseBank.html">
        <div class="modal-header">
            <h4 class="modal-title" id="modal-title">Print Bank Qutation :</h4>
        </div>
        <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">Customer Name:</label>
                    </div>
                    <div class="col-md-8 text-left">
                        <input type="text" class="form-control" ng-model="PartyWiseBank.ContractorName" disabled>
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px;">
                        <label class="control-label">Bank :</label>
                    </div>
                    <div class="col-md-8 text-left">
                        <select ng-model="PartyWiseBank.PartyWiseBankID" class="form-control" style="float:left; width:75%" ng-change="cboChange()" ng-options="oItem.PartyWiseBankID as oItem.BankName for oItem in PartyWiseBanks">
                            <option value="">--Select Bank--</option>
                        </select>
                        <span style="float:right">
                            <button ng-click="RefreshBank()" class="btn btn-success btn-sm" style="float:right"><span class="glyphicon glyphicon-refresh"></span></button>
                            <button ng-click="AddBank()" class="btn btn-success btn-sm" style="float:right"><span class="glyphicon glyphicon-plus"></span></button>
                        </span>
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">Account Name:</label>
                    </div>
                    <div class="col-md-8 text-left">
                        <input type="text" class="form-control" ng-model="PartyWiseBank.AccountName" disabled>
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">Account No:</label>
                    </div>
                    <div class="col-md-8 text-left">
                        <input type="text" class="form-control" ng-model="PartyWiseBank.AccountNo" disabled>
                    </div>
                </div>

                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">Total Amount:</label>
                    </div>
                    <div class="col-md-8 text-left">
                        <input type="text" class="form-control" ng-model="PartyWiseBank.PrintOTRAmount">
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">Print Date:</label>
                    </div>
                    <div class="col-md-8 text-left">
                        <div class="input-group date date-container">
                            <input type="text" class="form-control" ng-model="PrintDateInString"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn-primary btn-sm" aria-label="Left Align" ng-click="UpdateBank()" ng-hide="hide"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Print</button>
            <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
        </div>
    </script>
</div>

<style type="text/css">
    .regionInvoice .form-control {
        height: 26px;
        width: 15%;
        padding: 0px 6px;
        font-size: 12px;
    }
    .regionExportUP .form-control {
        height: 26px;
        margin: 0px 4px 2px 4px;
        font-size: 12px;
    }
</style>

 <script type="text/javascript">
    var oSalesQuotationList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    var oSalesStatusList = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.SalesStatusList));
    var oCompareOperators =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));

     var CInvoiceapp= angular.module('SalesQuotationApp', ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection','ui.grid.resizeColumns', 'ui.grid.cellNav','ms.service','ui.grid.pinning']);
    CInvoiceapp.controller('SalesQuotationController',  function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession,advanceSearch) {
        oSalesQuotationList= (userSession.getData('SalesQuotations').length>0)? userSession.getData('SalesQuotations'):oSalesQuotationList;
        debugger;
        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });

        $scope.gridOptions = {
            enableRowSelection: true,
            enableSelectAll: true,
            multiSelect: false,
            enableFullRowSelection: true,
            columnDefs: [
                 {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false,pinnedLeft:true },
                { field: 'FileNo', name:'File No', width:'10%' ,pinnedLeft:true },
                { field: 'KommNo', name:'Komm No', width:'15%' },
                { field: 'RefNo', name:'Code/Ref No', width:'8%' },
                { field: 'QuotationDateInString', name:'Issue Date', width:'7%' },
                { field: 'ModelNo', name:'Model No', width:'10%' },
                { field: 'ApproveByName', name:'ApproveBy', width:'10%' },
                { field: 'ChassisNo', name:'Chassis No', width:'10%' },
                { field: 'EngineNo', name:'Engine No', width:'10%' },
                { field: 'InteriorColorName', name:'Interior Color', width:'15%' },
                { field: 'ExteriorColorName', name:'Exterior Color', width:'15%' },
                { field: 'SalesStatusInString', name:'Status', width: '10%'},
                { field: 'BuyerName', name:'Buyer', width: '10%', enableSorting: false },
                { field: 'Remarks', name: 'Remarks', width: '10%' }
            ],
            data: oSalesQuotationList,
            onRegisterApi : function(gridApi)
            {
                debugger;
                //$scope.gridApi = gridApi;
                //$scope.gridApi.selection.clearSelectedRows();
                ////$scope.gridApi.grid.modifyRows(oSalesQuotationList);
                //$scope.gridApi.selection.selectRow(oSalesQuotationList[userSession.getRowIndex()]);
                ////userSession.clear();
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                debugger;
                if(oSalesQuotationList.length>0 && userSession.getRowIndex()>=0)
                {
                    $scope.gridApi.grid.modifyRows(oSalesQuotationList);
                    $scope.gridApi.selection.selectRow(oSalesQuotationList[userSession.getRowIndex()]);
                    $scope.RowSelect(oSalesQuotationList[userSession.getRowIndex()]);
                }
                $scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                    $scope.RowSelect(row.entity ); });
                //userSession.clear();
            }
        };

        $scope.AdvanceSearch=function()
        { 
            var oColumns = [];
            var oColumn = { field: 'ModelNo', name: 'ModelNo',width: '30%'  };oColumns.push(oColumn);
            oColumn = { field: 'CategoryName', name: 'CategoryName',width: '40%', enableSorting: false  };oColumns.push(oColumn);
            
            var paramObj_Model={
                obj:{ModelNo: '@@VehicleModelID'},
                objName:'ModelNo',
                url:_sBaseAddress+'/VehicleModel/GetVehicleModels',
                title:'Model List',
                multiSelect:true,
                columns:oColumns
            }

            oColumns = [];
            var oColumn = { field: 'Name', name: 'Applicant Name',width: '70%', enableSorting: false  };oColumns.push(oColumn);
            oColumn = { field: 'Address', name: 'Address',width: '30%', enableSorting: false  };oColumns.push(oColumn);

            var paramObj_Contractor={
                obj:{Params: '2' + '~' +'@@ContractorID'+'~'+sessionStorage.getItem('BUID')},
                objName:'Params',
                url:_sBaseAddress+'/Contractor/ContractorSearchByNameType',
                title:'Contractor List',
                multiSelect:true,
                columns:oColumns
            }

            var oElementList = [{ DisplayName: "Komm No",           BOField: "KommNo",          InputType: 'text' },
                                { DisplayName: "Sales Status",      BOField: "SalesStatus",     InputType: 'select', OptionList:oSalesStatusList},
                                { DisplayName: "Quotation Date",    BOField: "QuotationDate",   InputType: 'date' },
                                { DisplayName: "Model No",          BOField: "VehicleModelID",  InputType: 'picker', PickerObject:paramObj_Model },
                                { DisplayName: "Customer ",         BOField: "ContractorID",    InputType: 'picker', PickerObject:paramObj_Contractor }
                                //{ DisplayName: ["Yet To Forward (HO)","Yet To Forward (Buyer)"],  BOField: ["YetToHO","YetToBuyer"],   InputType: 'bool'},
                                //{ DisplayName: "SomeType",    BOField: "SomeType",       InputType: 'select', OptionList:[{id:2,Value:"KisuNai"}]},
            ];
            var modalObj={
                size:'md',
                title:"Advance Search",
                url:_sBaseAddress+'/Home/AdvanceSearch',
                CompareOperators:oCompareOperators,
                HtmlElements:oElementList,
                isAdvanceSearch:true, // if TRUE: 'urlAdvanceSearch' should be define
                urlAdvanceSearch:_sBaseAddress + '/SalesQuotation/AdvSearch'
            }

            var modalInstance=advanceSearch.Instance(modalObj);
            modalInstance.result.then(function (result) 
            {
                console.log(result);
                $scope.gridOptions.data=result;
                //sessionStorage.setItem("SalesQuotationList", JSON.stringify(result));
            }, function () 
            {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

       
        $scope.searchByRefNo = function(e)
        {
            debugger;
            var RefNo = $scope.RefNo;
            var oSalesQuotations = oSalesQuotationList;
            var sTempName="";
            var oSearchedList = [];
            var oCurrentList = $scope.gridOptions.data;
            if (e.which == 8)
            {
                oCurrentList = oSalesQuotations;
            }
            for(i=0;i<oCurrentList.length;++i)
            {
                sTempName=oCurrentList[i].RefNo;
                n=sTempName.toUpperCase().indexOf(RefNo.toUpperCase())
                if(n!=-1)
                {
                    oSearchedList.push(oCurrentList[i]);
                }
            }
            $scope.gridOptions= {data:oSearchedList};
        }
        $scope.Add  = function ()
        {
            debugger;
            sessionStorage.setItem("SalesQuotations", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("SalesQuotationHeader", "Add Sales Quotation");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href =sessionStorage.getItem('BaseAddress')+"/SalesQuotation/ViewSalesQuotation?id=0&buid="+sessionStorage.getItem('BUID');
        }
        $scope.Edit =  function ()
        {
            debugger;
            var oSalesQuotation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oSalesQuotation==null || oSalesQuotation.SalesQuotationID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.SalesQuotationID == oSalesQuotation.SalesQuotationID)
                {
                    sessionStorage.setItem("SalesQuotations", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("SalesQuotationHeader", "Edit Sales Quotation");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/SalesQuotation/ViewSalesQuotation?id="+oSalesQuotation.SalesQuotationID+"&buid="+sessionStorage.getItem('BUID');
                }
            }, $scope.gridOptions.data);
        }
        $scope.View =  function ()
        {
            //debugger;
            var oSalesQuotation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oSalesQuotation==null || oSalesQuotation.SalesQuotationID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.SalesQuotationID == oSalesQuotation.SalesQuotationID)
                {
                    sessionStorage.setItem("SalesQuotations", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("SalesQuotationHeader", "View Sales Quotation");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/SalesQuotation/ViewSalesQuotation?id="+oSalesQuotation.SalesQuotationID+"&buid="+sessionStorage.getItem('BUID');
                }
            }, $scope.gridOptions.data);
        }
        $scope.Copy =  function ()
        {
            debugger;
            var oSalesQuotation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oSalesQuotation==null || oSalesQuotation.SalesQuotationID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.SalesQuotationID == oSalesQuotation.SalesQuotationID)
                {
                    sessionStorage.setItem("SalesQuotations", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("SalesQuotationHeader", "Copy Sales Quotation");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/SalesQuotation/ViewSalesQuotation?id="+oSalesQuotation.SalesQuotationID+"&buid="+sessionStorage.getItem('BUID');
                }
            }, $scope.gridOptions.data);
        }
        $scope.PrintPreview = function ()
        {
            debugger;
            var oSalesQuotation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oSalesQuotation==null || oSalesQuotation.SalesQuotationID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/SalesQuotation/PrintSQ?id='+oSalesQuotation.SalesQuotationID);
        };
        $scope.UpImage = function ()
        {
            var oSalesQuotation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oSalesQuotation==null || oSalesQuotation.SalesQuotationID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.SalesQuotationID == oSalesQuotation.SalesQuotationID)
                {
                    sessionStorage.setItem("SalesQuotationList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("ModelHeader", oSalesQuotation.RefNo);
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/SalesQuotation/ImageHelper?id="+oSalesQuotation.SalesQuotationID;
                }
            }, $scope.gridOptions.data);

        }

        $scope.Approve= function ()
        {
            var oSalesQuotation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oSalesQuotation==null || oSalesQuotation.SalesQuotationID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            
            var index=$scope.gridOptions.data.indexOf(oSalesQuotation);

            if (!confirm("Confirm to Approve : "+oSalesQuotation.RefNo+" ?")) return ;
            debugger;
          
            $http.post(sessionStorage.getItem('BaseAddress')+'/SalesQuotation/Approve', JSON.stringify(oSalesQuotation)).then(
                            function (response)
                            {
                                debugger;
                                var result = jQuery.parseJSON(response.data);
                                if (result.ErrorMessage=="" && result.SalesQuotationID > 0)
                                {
                                    $scope.gridOptions.data[index]=result;
                                    $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                    $scope.gridApi.selection.selectRow($scope.gridOptions.data[index]);
                                    alert("Quotation Successfully Approved.");
                                }
                                else
                                {
                                    alert(result.ErrorMessage);
                                }
                            },
                            function (response) { alert(response.statusText); }
                        );
        };
        
        $scope.UndoApprove= function ()
        {
            var oSalesQuotation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oSalesQuotation==null || oSalesQuotation.SalesQuotationID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            
            var index=$scope.gridOptions.data.indexOf(oSalesQuotation);

            if (!confirm("Confirm to Unapprove : "+oSalesQuotation.RefNo+" ?")) return ;
            debugger;
          
            $http.post(sessionStorage.getItem('BaseAddress')+'/SalesQuotation/UndoApprove', JSON.stringify(oSalesQuotation)).then(
                            function (response)
                            {
                                debugger;
                                var result = jQuery.parseJSON(response.data);
                                if (result.ErrorMessage=="" && result.SalesQuotationID > 0)
                                {
                                    $scope.gridOptions.data[index]=result;
                                    $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                    $scope.gridApi.selection.selectRow($scope.gridOptions.data[index]);
                                    alert("Quotation Successfully Unapproved.");
                                }
                                else
                                {
                                    alert(result.ErrorMessage);
                                }
                            },
                            function (response) { alert(response.statusText); }
                        );
        };

        $scope.Revise =  function ()
        {
            debugger;
            var oSalesQuotation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oSalesQuotation==null || oSalesQuotation.SalesQuotationID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            if(oSalesQuotation.ApproveBy==0)
            {
                alert("Please Select an approved item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.SalesQuotationID == oSalesQuotation.SalesQuotationID)
                {
                    sessionStorage.setItem("SalesQuotations", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("SalesQuotationHeader", "Revise Sales Quotation");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/SalesQuotation/ViewSalesQuotation?id="+oSalesQuotation.SalesQuotationID+"&buid="+sessionStorage.getItem('BUID');
                }
            }, $scope.gridOptions.data);
        }

        $scope.Delete= function ()
        {
            debugger;
            var oSalesQuotation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oSalesQuotation==null || oSalesQuotation.SalesQuotationID<=0)
            {
                alert("Please Select an item from list");
                return;
            }

            if (!confirm("Confirm to Delete?")) return ;
            $http.post(sessionStorage.getItem('BaseAddress')+'/SalesQuotation/Delete', JSON.stringify(oSalesQuotation)).then(
                            function (response) {
                                if (jQuery.parseJSON(response.data) == 'Deleted') {
                                    angular.forEach($scope.gridOptions.data, function (value, index)
                                    {
                                        if (value.SalesQuotationID == oSalesQuotation.SalesQuotationID)
                                        {
                                            alert("Successfully Deleted.");
                                            $scope.gridOptions.data.splice(index, 1);
                                        }
                                    }, $scope.gridOptions.data);
                                }
                                else {
                                    alert(jQuery.parseJSON(response.data));
                                }
                            },
                            function (response) { alert(jQuery.parseJSON(response.data)); }
                        );

        };

        $scope.PartyWiseModal = function () {
            debugger;
            var oSalesQuotation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oSalesQuotation==null || oSalesQuotation.SalesQuotationID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            $scope.PrintDateInString = oSalesQuotation.QuotationDateInString;
            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'PartyWiseBank.html',
                controller: 'PartyWiseBankCtrl',
                controllerAs: 'PartyWiseBankController',
                resolve: {
                    obj: function () {
                        return { value:oSalesQuotation, Operation: 'Print'  };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                debugger;
                if(result.FDOID>0)
                {
                    debugger;
                    var index=sessionStorage.getItem('SelectedRowIndex');
                    $scope.IsMeter=result.IsMeter;
                    $scope.IsYard=result.IsYard;
                    console.log(result);
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };
       
        $scope.OpenUpdateModal=function ()
        {
            debugger;
            var oSalesQuotation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oSalesQuotation==null || oSalesQuotation.SalesQuotationID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.SalesQuotationID == oSalesQuotation.SalesQuotationID)
                {
                    sessionStorage.setItem("SelectedRowIndex", index);
                }
            }, $scope.gridOptions.data);


            $scope.Modal(oSalesQuotation, 'Edit');
        }
        $scope.Modal = function (objSQ, operation) {
            debugger;
            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'SalesQuotation.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'SalesQuotationController',
                resolve: {
                    obj: function () {
                        return { SalesQuotation:objSQ, Operation: operation  };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                debugger;
                if(result.SalesQuotationID>0)
                {
                    debugger;
                    var index=sessionStorage.getItem('SelectedRowIndex');
                    //alert(index);
                    //alert(result.SalesStatusInString);
                    $scope.gridOptions.data[index]=result;
                    $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                    $scope.gridApi.selection.selectRow($scope.gridOptions.data[index]);
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        $scope.ViewReviseHistory= function ()
        {
            debugger;
            var oSalesQuotation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oSalesQuotation==null || oSalesQuotation.SalesQuotationID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/SalesQuotation/GetSalesQuotationLogs',$.param(oSalesQuotation), config).then(
                        function (response)
                        {
                            var results=jQuery.parseJSON(response.data);

                            if(results.length<=0)
                            {
                                alert("No data found!"); return;
                            }

                            var oColumns =  [
                                                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false,pinnedLeft:true },
                                                { field: 'FileNo', name:'File No', width:'11%' },
                                                { field: 'KommNo', name:'Komm No', width:'11%' },
                                                { field: 'RefNo', name:'Ref No', width:'15%' },
                                                { field: 'QuotationDateInString', name:'Issue Date', width:'12%' },
                                                { field: 'ModelNo', name:'Model No', width:'15%' },
                                                { field: 'BuyerName', name:'Buyer', width: '15%', enableSorting: false },
                                                { field: 'ApproveByName', name:'ReviseBy', width:'12%' },
                                                //{ field: 'ApproveByName', name:'ApproveBy', width:'10%' },
                                                //{ field: 'ChassisNo', name:'Chassis No', width:'10%' },
                                                //{ field: 'EngineNo', name:'Engine No', width:'10%' },
                                                //{ field: 'InteriorColorName', name:'Interior Color', width:'15%' },
                                                //{ field: 'ExteriorColorName', name:'Exterior Color', width:'15%' },
                                                //{ field: 'SalesStatusInString', name:'Status', width: '10%'},
                                                //{ field: 'BuyerName', name:'Buyer', width: '10%', enableSorting: false }
                                            ];

                            var modalObj={
                                size:'lg',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Revise History',
                                searchingbyfieldName:'FileNo',
                                columns:oColumns,
                                okButtonLabel:'View'
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                if(result.SalesQuotationLogID>0)
                                {
                                    window.open(sessionStorage.getItem('BaseAddress') + '/SalesQuotation/PrintSQ_Log?logid='+result.SalesQuotationLogID);
                                }
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );
        };

        $scope.close = function()
        {
            window.location.href =sessionStorage.getItem("BackLink");
        }

        //button hide
        $scope.btnAdd = $scope.btnEdit = $scope.btnDetails = $scope.btnCopy = $scope.btnDelete = $scope.btnImage=   $scope.btnPriview = $scope.btnUpdateStatus =false;
        //button show
        if(PermissionChecker('Add','SalesQuotation',oAuthorizationRolesMapping)){$scope.btnAdd =$scope.btnImage = true; }
        if(PermissionChecker('Edit','SalesQuotation',oAuthorizationRolesMapping)){$scope.btnEdit = true;}
        if(PermissionChecker('View','SalesQuotation',oAuthorizationRolesMapping)){$scope.btnView = true;}
        if(PermissionChecker('Copy','SalesQuotation',oAuthorizationRolesMapping)){$scope.btnCopy = true;}
        if(PermissionChecker('Delete','SalesQuotation',oAuthorizationRolesMapping)){$scope.btnDelete = true;}
        if(PermissionChecker('Preview','SalesQuotation',oAuthorizationRolesMapping)){$scope.btnPriview = true;}
        if(PermissionChecker('Edit','SalesQuotation',oAuthorizationRolesMapping)){$scope.btnUpdateStatus = true;}
        if(PermissionChecker('Approved','SalesQuotation',oAuthorizationRolesMapping)){$scope.btnApprove = true;}
        if(PermissionChecker('UnApproved','SalesQuotation',oAuthorizationRolesMapping)){$scope.btnUndoApprove = true;}
        if(PermissionChecker('Revise','SalesQuotation',oAuthorizationRolesMapping)){$scope.btnRevise = true;}

    });

    CInvoiceapp.controller('ModalInstanceCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) {
        $scope.Operation=obj.Operation;
        $scope.SalesStatusList=oSalesStatusList;
        if(obj.SalesQuotation.SalesQuotationID==null || obj.SalesQuotation.SalesQuotationID<=0)
        {
            $scope.SalesQuotation={
                SalesQuotationID : 0,
                BUID:sessionStorage.getItem('BUID'),
                Name : "",
                Activity : true
            }
        }
        else
        {
            $scope.SalesQuotation = obj.SalesQuotation;
        }

        $scope.Validation=function()
        {
            if($scope.SalesQuotation.Name == "" || $scope.SalesQuotation.Name == undefined){
                msModal.Message({headerTitle : '', bodyText:'Enter DyeingType Name.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }

            return  true;
        };

        $scope.UpdateStatus= function ()
        {
            if (!confirm("Confirm to Update for "+$scope.SalesQuotation.RefNo+" ?")) return ;
            debugger;
            var oSalesQuotation= $scope.SalesQuotation;
            //    {
            //        SalesQuotationID:$scope.SalesQuotation.SalesQuotationID,
            //    SalesStatus: $scope.SalesQuotation.SalesStatus,
            //    SalesStatusRemarks:$scope.SalesQuotation.SalesStatusRemarks
            //};
            $http.post(sessionStorage.getItem('BaseAddress')+'/SalesQuotation/UpdateStatus', JSON.stringify(oSalesQuotation)).then(
                            function (response)
                            {
                                debugger;

                                if (jQuery.parseJSON(response.data)!=null && jQuery.parseJSON(response.data).SalesQuotationID > 0)
                                {
                                    alert("Status Successfully Updated.");
                                    $uibModalInstance.close(jQuery.parseJSON(response.data));
                                }
                                else
                                {
                                    alert(jQuery.parseJSON(response.data).ErrorMessage);
                                }
                            },
                            function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
                        );
        };

        $scope.cancel= function () {
            $uibModalInstance.close($scope.SalesQuotation);
        };

    });

    CInvoiceapp.controller('PartyWiseBankCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) {
        $scope.Operation=obj.Operation;
        debugger;
        $scope.PartyWiseBank = obj.value;
        if(obj.value!=undefined)
        {
            $scope.PartyWiseBank.ContractorID = obj.value.BuyerID;
            $scope.PartyWiseBank.ContractorName = obj.value.BuyerName;
            $scope.PrintDateInString = obj.value.QuotationDateInString;
            (obj.value.PrintOTRAmount > 0) ? $scope.PartyWiseBank.PrintOTRAmount = parseFloat(obj.value.PrintOTRAmount).toFixed(2) : $scope.PartyWiseBank.PrintOTRAmount = parseFloat(obj.value.OTRAmount).toFixed(2);
            //$scope.PartyWiseBank.PrintOTRAmount = obj.value.OTRAmount.toFixed(2);
        }
        
        $scope.RefreshBank=function()
        {
            $http.post(sessionStorage.getItem('BaseAddress')+'/PartyWiseBank/GetsPartyWiseBanks', JSON.stringify($scope.PartyWiseBank)).then(
                          function (response)
                          {
                              debugger;
                              $scope.PartyWiseBanks = JSON.parse(response.data).PartyWiseBanks;
                              $scope.PartyWiseBank.PartyWiseBankID=obj.value.PartyWiseBankID;
                              $scope.cboChange();
                          },
                          function (response) { alert(response.statusText); }
                      );
        };
        $scope.RefreshBank();

        $scope.AddBank=function()
        {
            localStorage.setItem("PartyWiseBankFromSQ", "true");
            localStorage.setItem("PartyWiseBanksHeader", "Party Bank List For: "+$scope.PartyWiseBank.ContractorName);
            window.open(sessionStorage.getItem("BaseAddress")+  "/PartyWiseBank/ViewPartyWiseBanks?id="+$scope.PartyWiseBank.ContractorID,"blank");
        }

        $scope.UpdateBank= function ()
        {
            if($scope.PartyWiseBank.BankID<=0)
            {
                alert("Please Select A Bank !!"); return;
            }
            if($scope.PartyWiseBank.PrintOTRAmount<=0)
            {
                alert("Total Amount should be greater than 0 !!"); return;
            }
            $scope.PrintBQ();
        };

        $scope.PrintBQ = function ()
        {
            //QuotationDateInString
            window.open(sessionStorage.getItem('BaseAddress') + '/SalesQuotation/PrintBQ?id='+$scope.PartyWiseBank.SalesQuotationID+'&PWBID='+$scope.PartyWiseBank.PartyWiseBankID+'&PrintOTRAmount='+$scope.PartyWiseBank.PrintOTRAmount+'&PrintDate='+$scope.PrintDateInString);
        };

        $scope.cboChange=function()
        {
            debugger;
            if($scope.PartyWiseBank.PartyWiseBankID>0)
            {
                for(var i=0; i<$scope.PartyWiseBanks.length;i++)
                {
                    if($scope.PartyWiseBanks[i].PartyWiseBankID==$scope.PartyWiseBank.PartyWiseBankID)
                    {
                        $scope.PartyWiseBank.BankID=$scope.PartyWiseBanks[i].BankID;
                        $scope.PartyWiseBank.AccountName=$scope.PartyWiseBanks[i].AccountName;
                        $scope.PartyWiseBank.AccountNo=$scope.PartyWiseBanks[i].AccountNo;
                    }
                }
            }else
            {
                $scope.PartyWiseBank.BankID=0;
                $scope.PartyWiseBank.AccountName="";
                $scope.PartyWiseBank.AccountNo="";
            }
        }
        $scope.cancel= function () {
            $uibModalInstance.close($scope.PartyWiseBank);
        };

    });

</script>
