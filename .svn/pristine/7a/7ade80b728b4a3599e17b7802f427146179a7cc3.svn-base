@{
    
        ViewBag.Title = "Cost Sheet list";
  
}
@model IEnumerable<ESimSol.BusinessObjects.CostSheet>
    <div id="winApprovalRequest" class="easyui-window" title="Request For Approval" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <fieldset style="margin-top:3px">
                <table border="0" style="font-size:12px">
                    <tr>
                        <td style="width:150px; text-align:right">Request To:</td>
                        <td style="width:250px; text-align:left"><select id="cboApprovalRequestTo" style="width:225px;font-size:12px;" /></td>
                    </tr>
                    <tr>
                        <td style="width:150px; text-align:right">Note :</td>
                        <td style="width:250px; text-align:left">
                            <input type="text" id="txtApprovalRequestNote" style="width:220px" />
                        </td>
                    </tr>
                </table>
            </fieldset>

            <fieldset style="margin-bottom:3px">
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; width:400px">
                    <tr>
                        <td style="width:300px; text-align:right"></td>
                        <td style="width:50px">
                            <a id="btnApprovalRequestConfirm" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Confirm</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnApprovalRequestClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
    <div id="winAdvanceSearch" class="easyui-window" title="Request For Approval" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma" class="menuMainCollectionTable">
            <table border="0" style="background-color:#CFB53B;width:730px">
                <tr>
                    <td style="width:730px; text-align:center; text-decoration:underline; font-size:15px; font-weight:bold; color: White"><label id="lblHeaderName">Cost Sheet Advance Search</label></td>
                </tr>
            </table>
            <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px">
                <tr style="height:270px">
                    <td style="width:500px">
                        <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px">
                            <tr style="height:260px">
                                <td style="width:400px; vertical-align:top;height:420px">
                                    <fieldset>
                                        <legend style="font-weight:bold; font-size:12px"> Searching Criteria : </legend>
                                        <table border="0" cellpadding="0" cellspacing="0" style=" width:340px; font-size:12px">
                                            <tr><td style="width:130px; text-align:left; font-weight:bold">File No:</td></tr>
                                            <tr><td style="width:325px;text-align:left">@Html.TextBox("txtFileNo", "", new { style = "width: 325px", id = "txtFileNo" })</td></tr>
                                            <tr>
                                                <td style="width:130px; text-align:left; font-weight:bold">Style No:</td>
                                            </tr>
                                            <tr>
                                                <td style="width:325px;text-align:left">
                                                    @Html.TextBox("txtPickerStyleNo", "", new { style = "width: 270px", id = "txtPickerStyleNo", placeholder = "Type Style No & Press Enter" })
                                                    <input type="button" id="btnPickStyle" value="Pick" onclick="PickStyle()" style="width:50px; text-align:left;" />
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:130px;text-align:left; font-weight:bold">Costing Date:</td>
                                            </tr>

                                            <tr>
                                                <td style="width:325px;text-align:left; font-size:12px">
                                                    <table border="0" style="font-size:12px">
                                                        <tr>
                                                            <td style="width:100px;font-size:12px;text-align:left">@Html.DropDownList("cboCostingDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboCostingDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeA" })</td>
                                                            <td style="width:98px;font-size:12px"><input id="txtStartCostingDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 98px;" /></td>
                                                            <td style="width:9px; font-size:12px" id="enddateT">To</td>
                                                            <td style="width:97px;font-size:12px" id="enddate"><input id="txtEndCostingDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 97px;" /></td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>

                                            <tr>
                                                <td style="width:130px;text-align:left; font-weight:bold">Shipment Date:</td>
                                            </tr>

                                            <tr>
                                                <td style="width:325px;text-align:left; font-size:12px">
                                                    <table border="0" style="font-size:12px">
                                                        <tr>
                                                            <td style="width:100px;font-size:12px;text-align:left">@Html.DropDownList("cboShipmentDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboShipmentDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeB" })</td>
                                                            <td style="width:98px;font-size:12px"><input id="txtStartShipmentDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 98px;" /></td>
                                                            <td style="width:9px; font-size:12px" id="enddateST">To</td>
                                                            <td style="width:97px;font-size:12px" id="enddateS"><input id="txtEndShipmentDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width: 97px;" /></td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:130px;text-align:left; font-weight:bold">Approve By:</td>
                                            </tr>
                                            <tr>
                                                <td style="width:325px;text-align:left; font-size:12px">
                                                    <select id="cboApproveBy" style="width:325px;font-size:12px" />
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:130px;text-align:left; font-weight:bold">Season:</td>
                                            </tr>
                                            <tr>
                                                <td style="width:325px;text-align:left; font-size:12px">
                                                    <select id="cboSeason" style="width:325px;font-size:12px" />
                                                </td>
                                            </tr>

                                            <tr>
                                                <td style="width:130px; text-align:left; font-weight:bold">Buyer:</td>
                                            </tr>

                                            <tr>
                                                <td style="width:325px;text-align:left">
                                                    @Html.TextBox("txtPickerBuyerName", "", new { style = "width: 270px", id = "txtPickerBuyer", placeholder = "Type Buyer Name & Press Enter" })
                                                    <input type="button" id="btnPickBuyer" value="Pick" onclick="PickBuyer()" style="width:50px; text-align:left;" />
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:130px; text-align:left; font-weight:bold">Merchandiser:</td>
                                            </tr>

                                            <tr>
                                                <td style="width:325px;text-align:left">
                                                    @Html.TextBox("txtPickerMerchandiserName", "", new { style = "width: 270px", id = "txtPickerMerchandiser", placeholder = "Type Merchandiser Name & Press Enter" })
                                                    <input type="button" id="btnPickMerchandiser" value="Pick" onclick="PickMerchandiser()" style="width:50px; text-align:left;" />
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:130px; text-align:left; font-weight:bold">Department:</td>
                                            </tr>

                                            <tr>
                                                <td style="width:325px;text-align:left">
                                                    @Html.TextBox("txtPickerDepartmentName", "", new { style = "width: 270px", id = "txtPickerDepartment", placeholder = "Type Department Name & Press Enter" })
                                                    <input type="button" id="btnPickDepartment" value="Pick" onclick="PickDepartment()" style="width:50px; text-align:left;" />
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:130px; text-align:left; font-weight:bold">Status:</td>
                                            </tr>

                                            <tr>
                                                <td style="width:325px;text-align:left">
                                                    @Html.TextBox("txtPickerStatusName", "", new { style = "width: 270px", id = "txtPickerStatus", placeholder = "Type Status Name & Press Enter" })
                                                    <input type="button" id="btnPickStatus" value="Pick" onclick="PickStatus()" style="width:50px; text-align:left;" />
                                                </td>
                                            </tr>
                                            <tr style="height:48px; vertical-align:bottom">
                                                <td style=" text-align:left; width:325px;">
                                                    <table border="0" cellpadding="0" cellspacing="0">
                                                        <tr>
                                                            <td style=" text-align:left;"><input type="button" value="Reset" id="btnReset" style="width:70px; text-align:left;" /></td>
                                                            <td style="width:185px;"><label class="lblLoadingMessage" style="float:right;font-weight:bold;color:red;">Loading Please Wait...</label> </td>
                                                            <td style=" text-align:right; width:70px;"><input type="button" value="Search" id="btnRefresh" style="width:70px; text-align:right;" /></td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                        </table>
                                    </fieldset>
                                </td>
                                <td style="width:323px; height:453px;vertical-align:top">
                                    <div style="margin-left:0px; margin-top:6px; height:425px">
                                        <table id="tblPickerCostSheet" title="Cost Sheet List" class="easyui-datagrid" style="width:360px;height:470px;font-size:12px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                                            <thead>
                                                <tr>
                                                    <th data-options="field:'Selected',checkbox:true"></th>
                                                    <th field="FileNo" width="90">File No</th>
                                                    <th field="StyleNo" width="70">Style No</th>
                                                    <th field="CostingDateInString" width="60">Date</th>
                                                    <th field="FOBPricePerPcs" formatter="formatPrice" width="100">FOB/Pcs</th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr style="height:50px">
                    <td style="width:650px; text-align:right">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseAdvanceSearch()">Close</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="menuMainCollectionTable" id="divCostSheets">
        <table id="tblCostSheet" title="Cost Sheet Issue" class="easyui-datagrid" fit="true" fitcolumns="false" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbar">
            <thead data-options="frozen:true">
                <tr>
                    <th field="FileNo" width="11%">File No</th>
                    <th field="StyleNo" width="10%">Style No</th>
                    <th field="CostSheetStatusInString" width="10%">Status</th>
                    <th field="BuyerName" width="10%">Buyer</th>
                    <th field="MerchandiserName" width="11%">Merchandiser</th>
                </tr>
            </thead>
            <thead>
                <tr>
                    <th field="BrandName" width="5%">Brand</th>
                    <th field="CostingDateInString" width="8%">Costing Date</th>
                    <th field="FabricCostPerDozenInString" align="right" width="10%">Fabric Cost/Dzn</th>
                    <th field="AccessoriesCostPerDozenInString" width="10%">Accessories Cost/Dsn</th>
                    <th field="PrintPricePerPcs" width="10%" formattter="formatPrice">Print/Pcs</th>
                    <th field="EmbrodaryPricePerPcs" width="10%" formattter="formatPrice">Embrodary/Pcs</th>
                    <th field="TestPricePerPcs" width="10%" formattter="formatPrice">Test/Pcs</th>
                    <th field="FOBPricePerPcsInString" width="10%">FOB/Pcs</th>
                </tr>
            </thead>
        </table>
        <div id="toolbar">
            <input type="text" id="txtStyleNo" style="width:100px;" placeholder="Type Style No & Press Enter">
            <input type="text" id="txtBuyerName" style="width:100px;" placeholder="Type Buyer Name & Press Enter">
            <select style="width:100px;" id="cboCostSheetType"></select>
            <a id="btnAdvanceSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" onclick="AdvanceSearch()" plain="true"></a>
            <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" onclick="Add()" plain="true">Add</a>
            <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" onclick="Edit()" plain="true">Edit</a>
            <a id="btnDetails" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" onclick="View()" plain="true">View</a>
            <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" onclick="Delete()" plain="true">Delete</a>
            <a id="btnCopy" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-copy" onclick="Copy()" plain="true">Copy</a>
            <a id="btnRequestforApproval" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-request" onclick="RequestforApproval()" plain="true">Request for Approval</a>
            <a id="btnUndoRequest" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" onclick="UndoRequest()" plain="true">Undo Request</a>
            <a id="btnWaitforApproval" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" onclick="WaitForApproval()" plain="true">Wait for Approval</a>
            <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" onclick="CSApprove()" plain="true">Approve</a>
            <a id="btnUndoApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" onclick="UndoApprove()" plain="true">Undo Approved</a>

            <a id="btnRFRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-request" onclick="RequestForRevise()" plain="true"> Req For Revise</a>
            <a id="btnAcceptRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" onclick="AcceptRevise()" plain="true"> Accept Revise</a>
            <a id="btnHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" onclick="History()" plain="true"> History</a>
            <a id="btnRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" onclick="ReviseHistory()" plain="true"> Amendment History</a>
            <a id="btnCompareSheet" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" onclick="CompareSheet()" plain="true"> Compare Sheet</a>
            <a id="btnBudget" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" onclick="Budget()" plain="true">Budget</a>
            <a id="btnCancel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" onclick="Cancel()" plain="true">Cancel</a>
            <a id="btnPreView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" onclick="PrintPreview()" plain="true">Preview</a>
            <a id="btnPreView2" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" onclick="PrintPreview2()" plain="true">Preview-2</a>
            <a id="btnExcelPreview" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" onclick="ExcelPreview()" plain="true">Excel Preview</a>
            <a id="btnPrintList" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" onclick="PrintList()" plain="true">Print List</a>
            <a id="btnBodyMeasurement" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" onclick="BodyMeasurement()" plain="true">Body Measurement</a>
        </div>
    </div>


    <script type="text/javascript">
        //debugger;
        var  _sBaseAddress= null;
        $(document).ready(function () {
            var oTempCostSheets =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
            _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
            var oCostSheetTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CostSheetTypes));
            var oUsers= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Users));
            var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
            var oBusinessSessions = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessSessions));
            var oCostSheetStatusList = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CostSheetStatusList));
            var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
            oCostSheetTypes.push({id:-1,Value:'--Select type--'});
            $("#cboCostSheetType").icsLoadCombo({List: oCostSheetTypes, OptionValue: "id",DisplayText: "Value",InitialValue:"Fixed"});
            $("#cboCostSheetType").val(-1);
            $('#divCostSheets').data('Users',oUsers);
            $('#divCostSheets').data('BusinessSessions',oBusinessSessions);
            $('#divCostSheets').data('CostSheetStatusList',oCostSheetStatusList);

            var oCostSheets =sessionStorage.getItem("CostSheets");
            if(oCostSheets!=null)
            {
                oCostSheets  = jQuery.parseJSON(oCostSheets);
            }
            else
            {
                oCostSheets = oTempCostSheets ;
            }
            RefreshCostSheetList(oCostSheets);
            RefreshControlLayout(oAuthorizationRolesMapping);
            $('#divCostSheets').data('TechnicalSheetIDs',"");
            $('#divCostSheets').data('MerchandiserIDs',"");
            $('#divCostSheets').data('StatusIDs',"")
            $('#divCostSheets').data('BuyerIDs',"")
            $('#divCostSheets').data('DepartmentIDs',"");
        });
        function  RefreshCostSheetList(oCostSheets)
        {
            //debugger;
            data=oCostSheets;
            data={"total":""+data.length+"","rows":data};
            $('#tblCostSheet').datagrid('loadData',data);
            var nID =parseInt(sessionStorage.getItem("SelectedRowIndex"));
            if(nID!=-1)
            {
                $('#tblCostSheet').datagrid('selectRow', nID);
            }
        }

        function Add ()
        {
            //debugger;
            var oList = $('#tblCostSheet').datagrid('getRows');
            sessionStorage.setItem("CostSheets", JSON.stringify(oList));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("CostSheetHeader", "Add Cost Sheet");
            sessionStorage.setItem("CostSheetType", parseInt($("#cboCostSheetType").val()));
            sessionStorage.setItem("BackLink", window.location.href);
            if(parseInt($("#cboCostSheetType").val())==-1)
            {
                alert("Please Select Cost Sheet Type.");$("#cboCostSheetType").focus();return;
            }
            if(parseInt($("#cboCostSheetType").val())==0)
            {
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheet?id=0";
            }else{
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheetWoven?id=0";
            }
        }
        function Edit ()
        {
            debugger;
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            if(parseInt(oCostSheet.CostSheetStatus)!=1 )
            {
                alert("Without Initialized Item can't Update!");
                return;
            }
            var oList = $('#tblCostSheet').datagrid('getRows');
            sessionStorage.setItem("CostSheets", JSON.stringify(oList));
            var SelectedRowIndex=$('#tblCostSheet').datagrid('getRowIndex',oCostSheet);
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("CostSheetHeader", "Edit Cost Sheet");
            sessionStorage.setItem("CostSheetType", oCostSheet.CostSheetTypeInInt);
            sessionStorage.setItem("BackLink", window.location.href);
            if(oCostSheet.CostSheetTypeInInt==0)
            {
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheet?id="+oCostSheet.CostSheetID;
            }else{
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheetWoven?id="+oCostSheet.CostSheetID;
            }
        }
        function Copy ()
        {
            debugger;
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            var oList = $('#tblCostSheet').datagrid('getRows');
            sessionStorage.setItem("CostSheets", JSON.stringify(oList));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("CostSheetHeader", "Copy Cost Sheet");
            sessionStorage.setItem("CostSheetType", oCostSheet.CostSheetTypeInInt);
            sessionStorage.setItem("BackLink", window.location.href);
            if(oCostSheet.CostSheetTypeInInt==0)
            {
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheet?id="+oCostSheet.CostSheetID;
            }else{
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheetWoven?id="+oCostSheet.CostSheetID;
            }

        }
        function View ()
        {
            //debugger;
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            var oList = $('#tblCostSheet').datagrid('getRows');
            sessionStorage.setItem("CostSheets", JSON.stringify(oList));
            var SelectedRowIndex=$('#tblCostSheet').datagrid('getRowIndex',oCostSheet);
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("CostSheetHeader", "View Cost Sheet");
            sessionStorage.setItem("CostSheetType", oCostSheet.CostSheetTypeInInt);
            sessionStorage.setItem("BackLink", window.location.href);
            if(oCostSheet.CostSheetTypeInInt==0)
            {
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheet?id="+oCostSheet.CostSheetID;
            }else{
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheetWoven?id="+oCostSheet.CostSheetID;
            }
        }
        function Delete ()
        {
            debugger;
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            if(parseInt(oCostSheet.CostSheetStatus)!=1)
            {
                alert("Please select Only Initialized Item from List!");
                return;
            }
            if (!confirm("Confirm to Delete?")) return ;
            var SelectedRowIndex=$('#tblCostSheet').datagrid('getRowIndex',oCostSheet);
            $.ajax({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress")+ "/CostSheet/Delete",
                traditional: true,
                data:  JSON.stringify(oCostSheet),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $('#tblCostSheet').datagrid('deleteRow',SelectedRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        }
        function CompareSheet()
        {
            //debugger;
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            var oList = $('#tblCostSheet').datagrid('getRows');
            sessionStorage.setItem("CostSheets", JSON.stringify(oList));
            var SelectedRowIndex=$('#tblCostSheet').datagrid('getRowIndex',oCostSheet);
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("CostSheetHeader", "View Compare Sheet");
            sessionStorage.setItem("CostSheetType", oCostSheet.CostSheetTypeInInt);
            sessionStorage.setItem("BackLink", window.location.href);
            window.open(sessionStorage.getItem("BaseAddress") + '/CostSheet/CompareSheet?id='+parseInt(oCostSheet.CostSheetID), '_blank');
        }
        function WaitForApproval()
        {
            var oCostSheet = {BUID:sessionStorage.getItem('BUID')};

            $.ajax({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress")+ "/CostSheet/WaitingSearch",
                traditional: true,
                data:  JSON.stringify(oCostSheet),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    oCostSheets = jQuery.parseJSON(data);
                    if (oCostSheets.length>0)
                    {
                        DynamicRefreshList(oCostSheets,'tblCostSheet');
                    }
                    else
                    {
                        alert("Please Select Item From List");
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }

        function RequestforApproval ()
        {
            debugger;
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Select an item from list");
                return false;
            }

            if  (oCostSheet.CostSheetStatus!=1)
            {
                alert("Please select only Initialized item from list");
                return;
            }

            var SelectedRowIndex=$('#tblCostSheet').datagrid('getRowIndex', oCostSheet);
            var oEmployee = { DesignationName : '2,23' };//Management, Merchandiser
            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+"/User/GetsRequestedUsers",
                traditional: true,
                data:  JSON.stringify(oEmployee),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oUsers = jQuery.parseJSON(data);
                    if(oUsers===null){ oUsers=[]; }
                    $("#cboApprovalRequestTo").icsLoadCombo({ List: oUsers, OptionValue: "UserID", DisplayText: "UserName" });
                    $("#winApprovalRequest").icsWindow('open', "Approval Request");
                    $("#winApprovalRequest input").not("input[type='button']").val("");
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });




        }

        $('#btnApprovalRequestClose').click(function(e){
            $("#winApprovalRequest").icsWindow('close');
        });

        $('#btnApprovalRequestConfirm').click(function(e){
            var oCostSheet = $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(parseInt($('#cboApprovalRequestTo').val())==0)
            {
                alert('Please Select Approval User');
                $('#cboApprovalRequestTo').focus();
                return false;
            }
            var oApprovalRequest= {
                ApprovalRequestID :0,
                OperationObjectID : parseInt(oCostSheet.CostSheetID),
                RequestTo : parseInt($('#cboApprovalRequestTo').val()),
                Note :$.trim($("#txtApprovalRequestNote").val())

            };

            var oTempCostSheet = {
                CostSheetID : parseInt(oCostSheet.CostSheetID),
                ActionTypeExtra : "RequestForApproved",
                StatusInInt:0,
                ApprovalRequest : oApprovalRequest
            }
            var SelectedRowIndex=$('#tblCostSheet').datagrid('getRowIndex', oCostSheet);
            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+"/CostSheet/ChangeStatus",
                traditional: true,
                data:  JSON.stringify(oTempCostSheet),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oCostSheet = jQuery.parseJSON(data);
                    if(oCostSheet!=null)
                    {
                        if(oCostSheet.ErrorMessage=="" || oCostSheet.ErrorMessage == null)
                        {
                            alert("Cost Sheet Approval Request  Successfully.");
                            $('#tblCostSheet').datagrid('updateRow',{index: SelectedRowIndex,	row: oCostSheet});
                            $("#winApprovalRequest").icsWindow('close');
                        }
                        else
                        {
                            alert(oCostSheet.ErrorMessage);
                        }
                    }
                    else
                    {
                        alert("Invalid Operation!");
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        });

        function UndoRequest()
        {
            //debugger;
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Select an item from list");
                return false;
            }
            if(oCostSheet.CostSheetStatus!=2)
            {
                alert("Please select only Requested  item from list");
                return;
            }
            if (!confirm("Confirm to Undo Request?")) return ;
            oCostSheet.ActionTypeExtra="UndoRequest";
            StatusChange(oCostSheet,"Undo Request");
        }
        function CSApprove ()
        {
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oCostSheet.CostSheetStatus!=2)
            {
                alert("Please select only Requested  item from list");
                return;
            }

            var oList = $('#tblCostSheet').datagrid('getRows');
            sessionStorage.setItem("CostSheets", JSON.stringify(oList));
            var SelectedRowIndex=$('#tblCostSheet').datagrid('getRowIndex',oCostSheet);
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("CostSheetHeader", "Approve Cost Sheet");
            sessionStorage.setItem("CostSheetType", oCostSheet.CostSheetTypeInInt);
            sessionStorage.setItem("BackLink", window.location.href);
            if(oCostSheet.CostSheetTypeInInt==0)
            {
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheet?id="+oCostSheet.CostSheetID;
            }else{
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheetWoven?id="+oCostSheet.CostSheetID;
            }
        };
        function UndoApprove ()
        {
            //debugger;
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || oCostSheet.CostSheetID<=0)
            {
                alert("Please select a item from list!");
                return;
            }else if(oCostSheet.CostSheetStatus!=3)
            {
                alert("Please select only Approved item from list");
                return;
            }
            if (!confirm("Confirm to Undo Approve?")) return ;
            oCostSheet.ActionTypeExtra="UndoApprove";
            StatusChange(oCostSheet,"Undo Approve");
        };
        function SendToBuyer()
        {
            //debugger;
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || oCostSheet.CostSheetID<=0)
            {
                alert("Please select a item from list!");
                return;
            }else if(oCostSheet.CostSheetStatus!=3)
            {
                alert("Please select only Approved item from list");
                return;
            }
            if (!confirm("Confirm to Send To Buyer?")) return ;
            oCostSheet.ActionTypeExtra="PI_In_Buyer_Hand";
            StatusChange(oCostSheet,"Sent to Buyer");
        };
        function Cancel()
        {
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || oCostSheet.CostSheetID<=0)
            {
                alert("Please select a item from list!");
                return;
            }else if(oCostSheet.CostSheetStatus<2 || oCostSheet.CostSheetStatus>0)
            {
                alert("In this stage you can't Cancel the Item");
                return;
            }
            if (!confirm("Confirm to Cancel?")) return ;
            oCostSheet.ActionTypeExtra="Cancel";
            StatusChange(oCostSheet,"Cancel");
        };
        function RequestForRevise ()
        {
            //debugger;
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please select a item from list!");
                return;
            }else if(oCostSheet.CostSheetStatus!=3)
            {
                alert(oCostSheet.CostSheetStatusInString+" Item Can't Request for Ammendment");
                return;
            }
            if (!confirm("Confirm to Request for Revise?")) return ;
            oCostSheet.ActionTypeExtra="RequestForRevise";
            StatusChange(oCostSheet,"RequestForRevise");
        };
        function AcceptRevise ()
        {
            //debugger;
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            if(oCostSheet.CostSheetStatus!=4 )
            {
                alert("Without Request for Revise Item can't Accept!");
                return;
            }
            var oList = $('#tblCostSheet').datagrid('getRows');
            sessionStorage.setItem("CostSheets", JSON.stringify(oList));
            var SelectedRowIndex=$('#tblCostSheet').datagrid('getRowIndex',oCostSheet);
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("CostSheetHeader", "Cost Sheet Revise");
            sessionStorage.setItem("CostSheetType", oCostSheet.CostSheetTypeInInt);
            sessionStorage.setItem("BackLink", window.location.href);
            if(oCostSheet.CostSheetTypeInInt==0)
            {
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheet?id="+oCostSheet.CostSheetID;
            }else{
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheetWoven?id="+oCostSheet.CostSheetID;
            }
        }
        function ReviseHistory ()
        {
            //debugger;
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(parseInt(oCostSheet.CostSheetStatus)<3 )
            {
                alert("In this moment can't see Revise History!");
                return;
            }
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oCostSheet,
                ControllerName: "CostSheet",
                ActionName: "GetCostSheetReviseHistory",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].CostSheetID > 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: "FileNo", title: "File No", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "StyleNo", title: "Style No", width: 120, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "CostSheetStatusInString", title: "Status", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "BuyerName", title: "Buyer Name", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "CostingDateInString", title: "Costing Date", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: 'MerchandiserName', title: 'Merchandser', width: 90, align: "left"};tblColums.push(oColumn);
                        oColumn = { field: 'FabricCostPerDozen', title: 'Fabric Cost/Dzn', width: 90, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: 'AccessoriesCostPerDozen', title: 'Accessories Cost /Dzn', width: 100, align: "left"};tblColums.push(oColumn);
                        oColumn = { field: 'ProductionCostPerDozen', title: 'CM/Dzn', width: 80, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: 'FOBPricePerPcs', title: 'FOB/Pcs', width: 60, align: "left"};tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winCostSheets',
                            winclass: 'clsCostSheet',
                            winwidth: 950,
                            winheight: 460,
                            tableid: 'tblCostSheets',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            btnOkText : "Print",
                            searchingbyfieldName: 'FileNo',
                            windowTittle: 'CostSheet List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Found.");
                }
            });

        }


        function SetCostSheetStatusExtra (oCostSheet)
        {

            switch (oCostSheet.CostSheetStatus)
            {
                case 1 : {
                    oCostSheet.StatusInInt =1;
                    break;
                }
                case 2 :{
                    oCostSheet.StatusInInt =2;
                    break;
                }
                case 3 :{
                    oCostSheet.StatusInInt =3;
                    break;
                }
                case 4 :{
                    oCostSheet.StatusInInt =4;
                    break;
                }
                case 5 :{
                    oCostSheet.StatusInInt =5;
                    break;
                }

            }

            return oCostSheet;
        }
        function StatusChange (oCostSheet,sParamIdentifier)
        {
            debugger;
            var oCostSheet = SetCostSheetStatusExtra(oCostSheet);
            var SelectedRowIndex=$('#tblCostSheet').datagrid('getRowIndex',oCostSheet);
            $.ajax({
                type: "POST",
                dataType: "json",
                url:_sBaseAddress+ "/CostSheet/ChangeStatus",
                traditional: true,
                data:  JSON.stringify(oCostSheet),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oCostSheet= jQuery.parseJSON(data);
                    if (oCostSheet.ErrorMessage=="" || oCostSheet.ErrorMessage == null)
                    {
                        if(sParamIdentifier=="Undo Request")
                        {
                            alert("Successfully Undo the Request !");
                        }
                        else if(sParamIdentifier=="RequestForRevise")
                        {
                            alert("Successfully Request for Revise!");
                        }else   if(sParamIdentifier=="Approve")
                        {
                            alert("Approved Successfully!!");

                        }else  if(sParamIdentifier=="Undo Approve")
                        {
                            alert("Successfully Undo Approve !");

                        }
                        else  if(sParamIdentifier=="Accept Revise")
                        {
                            alert("Successfully Accept Revise!");

                        }
                        else if(sParamIdentifier=="Cancel")
                        {
                            alert("Successfully Cancel Selected Item!");
                        }
                        $('#tblCostSheet').datagrid('updateRow',{index: SelectedRowIndex,row: oCostSheet});
                    }else
                    {
                        alert(oCostSheet.ErrorMessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
        function PrintPreview ()
        {
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || oCostSheet.CostSheetID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(parseInt(oCostSheet.CostSheetTypeInInt)==0 )//EnumCostSheetType{Sweater = 0,Knit = 1,Woven = 2}
            {
                window.open(sessionStorage.getItem('BaseAddress') + '/CostSheet/PrintCostSheetPreview?id='+oCostSheet.CostSheetID);
            }else{
                window.open(sessionStorage.getItem('BaseAddress') + '/CostSheet/CostSheetWovenPreview?id='+oCostSheet.CostSheetID);
            }
        }
        function PrintPreview2()
        {
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || oCostSheet.CostSheetID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(parseInt(oCostSheet.CostSheetTypeInInt)==0 )//EnumCostSheetType{Sweater = 0,Knit = 1,Woven = 2}
            {
                window.open(sessionStorage.getItem('BaseAddress') + '/CostSheet/PrintCostSheetPreview?id='+oCostSheet.CostSheetID);
            }else{
                window.open(sessionStorage.getItem('BaseAddress') + '/CostSheet/CostSheetWovenPreviewWithBodyPart?id='+oCostSheet.CostSheetID);
            }
        }

        function ExcelPreview()
        {
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || oCostSheet.CostSheetID<=0)
            {
                alert("Please select a item from list!");
                return;
            }

            window.open(sessionStorage.getItem('BaseAddress') + '/CostSheet/PrintExcelPreview?id='+oCostSheet.CostSheetID);

        }
        function PrintList()
        {
            var oCostSheets=  $('#tblCostSheet').datagrid('getRows');;//$('#tblCostSheet').datagrid('getRows');
            var ids ="";
            if(oCostSheets.length >0)
            {

                for(var i =0;i<oCostSheets.length;i++)
                {
                    ids =ids+oCostSheets[i].CostSheetID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else
            {
                alert("Data not found ");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/CostSheet/PrintCostSheetList?sIDs='+ids);
        }
        $('#txtStyleNo').keydown(function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var StyleNo = $.trim($('#txtStyleNo').val());
                if (StyleNo=!"")
                {
                    debugger;
                    //BuyerName = "";
                    var tsv=((new Date()).getTime())/1000;
                    $.ajax
                      ({
                          type: "GET",
                          dataType: "json",
                          url : _sBaseAddress+  "/CostSheet/SearchStyleAndBuyer",
                          data: { sTempData:$.trim($('#txtStyleNo').val()),bIsStyle:true,BUID:sessionStorage.getItem('BUID'), ts:tsv},
                          contentType: "application/json; charset=utf-8",
                          success: function (data)
                          {
                              ////
                              var oResults = jQuery.parseJSON(data);
                              if(oResults.length>0)
                              {
                                  DynamicRefreshList(oResults,'tblCostSheet')
                              }else{
                                  alert("Data Not found.");
                              }
                          },
                          error: function (xhr, status, error)
                          {
                              alert(error);
                          }

                      });
                }
            }else if (code == 8) //backspace=8
            {
                $('#txtStyleNo').val('');
            }
        });
        $('#txtBuyerName').keydown(function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var BuyerName = $.trim($('#txtBuyerName').val());
                if (BuyerName=!"")
                {
                    debugger;
                    $('#txtStyleNo').val('');
                    var tsv=((new Date()).getTime())/1000;
                    $.ajax
                     ({
                         type: "GET",
                         dataType: "json",
                         url : _sBaseAddress+  "/CostSheet/SearchStyleAndBuyer",
                         data: { sTempData:$.trim($('#txtBuyerName').val()),bIsStyle:false,BUID:sessionStorage.getItem('BUID'),  ts:tsv},
                         contentType: "application/json; charset=utf-8",
                         success: function (data)
                         {
                             ////
                             var oResults = jQuery.parseJSON(data);
                             if(oResults.length>0)
                             {
                                 DynamicRefreshList(oResults,'tblCostSheet')
                             }else{
                                 alert("Data Not found.");
                             }
                         },
                         error: function (xhr, status, error)
                         {
                             alert(error);
                         }

                     });
                }
            }else if (code == 8) //backspace=8
            {
                $('#txtBuyerName').val('');
            }
        });
        function History ()
        {
            debugger;
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || oCostSheet.CostSheetID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oCostSheet,
                ControllerName: "CostSheet",
                ActionName: "GetCostSheetHistory",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].CostSheetID > 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: 'PreviousStatusInString', title: 'Previous State', width: 200, align: "left" };
                        oColumn = { field: 'CurrentStatusInString', title: 'Current State',  width:100, align: "left"};tblColums.push(oColumn);
                        oColumn = { field: 'Note', title: 'Note',  width: 100, align: "left"};tblColums.push(oColumn);
                        oColumn = { field: 'OperateByName', title: 'Operation By',  width: 100, align: "left"};tblColums.push(oColumn);
                        oColumn = { field: 'OperationDateTimeInString', title: 'Operation Date',  width: 120, align: "left"};tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winCostSheetHistorys',
                            winclass: 'clsCostSheetHistory',
                            winwidth: 660,
                            winheight: 460,
                            tableid: 'tblCostSheetHistorys',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'PreviousStatusInString',
                            windowTittle: 'Cost Sheet History List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Found.");
                }
            });

        }

        function BodyMeasurement()
        {
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            var oList = $('#tblCostSheet').datagrid('getRows');
            sessionStorage.setItem("CostSheets", JSON.stringify(oList));
            var SelectedRowIndex=$('#tblCostSheet').datagrid('getRowIndex',oCostSheet);
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("CostSheetType", oCostSheet.CostSheetTypeInInt);
            sessionStorage.setItem("BackLink", window.location.href);
            var tsv=((new Date()).getTime())/1000;
            window.location.href =sessionStorage.getItem('BaseAddress')+"/BodyMeasure/ViewBodyMeasure?csid="+parseInt(oCostSheet.CostSheetID)+"&ts="+tsv;


        }
        function Budget()
        {
            var oCostSheet= $('#tblCostSheet').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress')+"/StyleBudget/ViewBudgetMgt?nCSID="+parseInt(oCostSheet.CostSheetID));
        }


        //Search region
        function AdvanceSearch()
        {

            $("#cboApproveBy").icsLoadCombo({List: $('#divCostSheets').data('Users'), OptionValue: "UserID",DisplayText: "UserName",InitialValue:"Default"});
            $("#cboSeason").icsLoadCombo({List: $('#divCostSheets').data('BusinessSessions'), OptionValue: "BusinessSessionID",DisplayText: "SessionName",InitialValue:"Default"});
            $(".lblLoadingMessage").hide();
            SetDate();
            $("#winAdvanceSearch").icsWindow('open', "Advance Search");
        }
        $('#btnRefresh').click(function ()
        {
            //debugger;
            var cboCostingDate = document.getElementById("cboCostingDate");
            var nComboCostingDate=cboCostingDate.options[cboCostingDate.selectedIndex].index;

            var cboShipmentDate = document.getElementById("cboShipmentDate");
            var nComboShipmentDate=cboShipmentDate.options[cboShipmentDate.selectedIndex].index;

            var cboApproveBy=document.getElementById("cboApproveBy");
            var nApproveByID=cboApproveBy.options[cboApproveBy.selectedIndex].value;

            var cboSeason=document.getElementById("cboSeason");
            var nSeasonID=cboSeason.options[cboSeason.selectedIndex].value;

            var sFileNo= document.getElementById("txtFileNo").value;
            var dStartCostingDate=$('#txtStartCostingDate').datebox('getValue');
            var dEndCostingDate=$('#txtEndCostingDate').datebox('getValue');

            var dStartShipmentDate=$('#txtStartShipmentDate').datebox('getValue');
            var dEndShipmentDate=$('#txtEndShipmentDate').datebox('getValue');

          
            var sTempString = nComboCostingDate+'~'+dStartCostingDate+'~'+dEndCostingDate+'~'+nComboShipmentDate+'~'+dStartShipmentDate+'~'+dEndShipmentDate+'~'+sFileNo+'~'+$('#divCostSheets').data('TechnicalSheetIDs')+'~'+nApproveByID+'~'+$('#divCostSheets').data('MerchandiserIDs')+'~'+$('#divCostSheets').data('StatusIDs')+'~'+sessionStorage.getItem('BUID')+'~'+nSeasonID+'~'+$('#divCostSheets').data('BuyerIDs')+'~'+$('#divCostSheets').data('DepartmentIDs');
            $(".lblLoadingMessage").show();

            $.ajax({
                type: "GET",
                dataType: "json",
                url:'@Url.Action("Search", "CostSheet")',
                data: { sTemp: sTempString },
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    var  oCostSheets = jQuery.parseJSON(data);
                    $(".lblLoadingMessage").hide();
                    if (oCostSheets != null) {
                        if(oCostSheets.length>0)
                        {
                            RefreshList(oCostSheets);
                            $('#tblPickerCostSheet').datagrid({selectOnCheck:false, checkOnSelect:false})
                        }
                        else
                        {
                            alert("Data not found!!");
                            RefreshList(oCostSheets);
                        }
                    }
                },
                error: function (xhr, status, error) {
                    $(".lblLoadingMessage").hide();
                    alert(error);
                }
            })

        });

        function RefreshList(oCostSheets)
        {
            data =oCostSheets;
            data={"total":""+data.length+"","rows":data};
            $('#tblPickerCostSheet').datagrid('loadData',data);
        }

        $('#btnReset').click(function () {
            //debugger;
            document.getElementById("txtFileNo").value='';
            document.getElementById("txtPickerStyleNo").value='';
            document.getElementById("enddate").style.display = '';
            document.getElementById("enddateT").style.display = '';
            document.getElementById("enddateS").style.display = '';
            document.getElementById("enddateST").style.display = '';
            $('#cboApproveBy').val(0);
            $('#cboSeason').val(0);
            $('#cboCostingDate').val('None');
            $('#cboShipmentDate').val('None');
            SetDate();
            $('#divCostSheets').data('TechnicalSheetIDs',"");
            $('#divCostSheets').data('BuyerIDs',"");
            $('#divCostSheets').data('MerchandiserIDs',"");
            $('#divCostSheets').data('DepartmentIDs',"");
            $('#divCostSheets').data('StatusIDs',"");
            $("#txtPickerStyleNo,#txtPickerBuyer,#txtPickerMerchandiser,#txtPickerDepartment,#txtPickerStatus").val('');
            $("#txtPickerStyleNo,#txtPickerBuyer,#txtPickerMerchandiser,#txtPickerDepartment,#txtPickerStatus").removeClass('fontColorOfPickItem');

            var oCostSheets=[];
            RefreshList(oCostSheets);

        });

        function SetDate()
        {
            $('#txtStartCostingDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtEndCostingDate').datebox('setValue',icsdateformat(new Date()));
            $('#txtStartShipmentDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtEndShipmentDate').datebox('setValue',icsdateformat(new Date()));
        }

        function CheckEmpty()
        {
            var cboCostingDate = document.getElementById("cboCostingDate");
            var nComboCostingDate=cboCostingDate.options[cboCostingDate.selectedIndex].index;

            var cboShipmentDate = document.getElementById("cboShipmentDate");
            var nComboShipmentDate=cboShipmentDate.options[cboShipmentDate.selectedIndex].index;

            var cboApproveBy=document.getElementById("cboApproveBy");
            var nApproveByID=cboApproveBy.options[cboApproveBy.selectedIndex].value;

            var cboSeason=document.getElementById("cboSeason");
            var nSeasonID=cboSeason.options[cboSeason.selectedIndex].value;
            var sFileNo= document.getElementById("txtFileNo").value;

            if(parseInt(nComboCostingDate)==0 && parseInt(nComboShipmentDate) ==0)
            {
                if( parseInt(nApproveByID)==0 && parseInt(nSeasonID)==0 &&  $('#divCostSheet').data('TechnicalSheetIDs')=="" && $('#divCostSheet').data('BuyerIDs')=="" && $('#divCostSheet').data('MerchandiserIDs')=="" &&  $('#divCostSheet').data('DepartmentIDs')=="" && $('#divCostSheet').data('StatusIDs')=="" && sFileNo=="" )
                {
                    return false;
                }
                return true;
            }
            return true;
        }

        function OkButtonClick()
        {
            //debugger;
            var oCostSheets = $('#tblPickerCostSheet').datagrid('getChecked');
            if(oCostSheets.length<=0)
            {
                alert("please select atleast one item");
                return;
            }
            RefreshCostSheetList(oCostSheets);

            CloseAdvanceSearch();
        }

        function CloseAdvanceSearch()
        {
            $("#winAdvanceSearch").icsWindow('close');
        }
        $('._select_changeA').change(function () {
            //debugger;
            var x = $("#cboCostingDate").val();
            if (x == "EqualTo" || x == "NotEqualTo" || x == "GreaterThen" || x == "SmallerThen") {
                document.getElementById("enddate").style.display = 'none';
                document.getElementById("enddateT").style.display = 'none';
            }
            else {
                document.getElementById("enddate").style.display = '';
                document.getElementById("enddateT").style.display = '';
            }
        });

        $('._select_changeB').change(function () {
            //debugger;
            var x = $("#cboShipmentDate").val();
            if (x == "EqualTo" || x == "NotEqualTo" || x == "GreaterThen" || x == "SmallerThen") {
                document.getElementById("enddateS").style.display = 'none';
                document.getElementById("enddateST").style.display = 'none';
            }
            else {
                document.getElementById("enddateS").style.display = '';
                document.getElementById("enddateST").style.display = '';
            }
        });

        //
        $('#txtPickerStyleNo').keydown(function (e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                PickStyle();
            }else if (code == 8) //backspace=8
            {
                //debugger;

                $('#divCostSheets').data('TechnicalSheetIDs',"");
                // $("#txtPickerMerchandiser").val('');
                $("#txtPickerStyleNo").removeClass('fontColorOfPickItem');
            }
        });
        function PickStyle()
        {
            //debugger;
            var oStyleSearch ={}; //assign parameter
            var oStyleSearch = {StyleNo:$.trim($('#txtPickerStyleNo').val()), BUID: sessionStorage.getItem('BUID')};
            var obj = {
                BaseAddress: sessionStorage.getItem('BaseAddress'),
                Object: oStyleSearch,
                ControllerName: "TechnicalSheet",
                ActionName: "StyleSearch",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                //debugger;
                if (response.status && response.objs.length > 0)
                {
                    if (response.objs[0].TechnicalSheetID > 0)               //assign objs.OBJECT_ID,NAME
                    {
                        //debugger;
                        var tblColums = []; var oColumn = { field: "StyleNo", title: "Opearation Name", width: "330px", align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winStyleSearchs',
                            winclass: 'clsStyleSearch',
                            winwidth:500,
                            winheight: 460,
                            tableid: 'tblStyleSearchs',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'StyleNo',
                            windowTittle: 'StyleSearch List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else{
                    alert("Data Not Found.");
                    return;
                }
            });
        }
        $('#txtPickerMerchandiser').keydown(function (e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {

                PickMerchandiser();


            }else if (code == 8) //backspace=8
            {
                //debugger;

                $('#divCostSheets').data('MerchandiserIDs',"");
               // $("#txtPickerMerchandiser").val('');
                $("#txtPickerMerchandiser").removeClass('fontColorOfPickItem');
            }
        });
        function PickMerchandiser()
        {

            var oEmployee = {EmployeeTypeID:23, Name:$('#txtPickerMerchandiser').val(), BUID: sessionStorage.getItem('BUID')};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oEmployee,
                ControllerName: "Employee",
                ActionName: "EmployeeSearchByName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                //debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].EmployeeID > 0) {
                        var tblColums = [];
                        var oColumn = { field: 'Code', title: 'Code',width:200, align: "left"  };tblColums.push(oColumn);
                        oColumn = { field: 'Name', title: 'Employee',width:200, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winMerchandiser',
                            winclass: 'clsMerchandiser',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblMerchandiser',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Merchandiser List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                } else{
                    alert("Data Not Found.");
                    return;
                }
            });
        }

        $('#txtPickerBuyer').keydown(function (e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {

                PickBuyer();

            }else if (code == 8) //backspace=8
            {
                //debugger;

                $('#divCostSheets').data('BuyerIDs',"");
                //$("#txtPickerBuyer").val('');
                $("#txtPickerBuyer").removeClass('fontColorOfPickItem');
            }
        });
        function PickBuyer()
        {

            var oContractor = {Params: 2 + '~' + $('#txtPickerBuyer').val() + '~' + sessionStorage.getItem("BUID")};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                //debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {
                        var tblColums = [];
                        var  oColumn = { field: 'Name', title: 'Buyer Name',width:200, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winBuyer',
                            winclass: 'clsBuyer',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblBuyer',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Buyer List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                } else{
                    alert("Data Not Found.");
                    return;
                }
            });
        }

        $('#txtPickerDepartment').keydown(function (e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                PickDepartment();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $('#divCostSheets').data('DepartmentIDs',"");
              //  $("#txtPickerDepartment").val('');
                $("#txtPickerDepartment").removeClass('fontColorOfPickItem');
            }
        });
        function PickDepartment()
        {

            var oStyleDepartment = {Name:$('#txtPickerDepartment').val()};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oStyleDepartment,
                ControllerName: "StyleDepartment",
                ActionName: "GetStyleDepartments",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                //debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].StyleDepartmentID > 0) {
                        var tblColums = [];
                        var oColumn = { field: 'Name', title: 'Department Name',width:200, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winDepartment',
                            winclass: 'clsDepartment',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblDepartment',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Department List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                } else{
                    alert("Data Not Found.");
                    return;
                }
            });
        }

        $('#txtPickerStatus').keydown(function (e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                PickStatus();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $('#divCostSheets').data('StatusIDs',"");
            //    $("#txtPickerStatus").val('');
                $("#txtPickerStatus").removeClass('fontColorOfPickItem');
            }
        });
        function PickStatus()
        {
            var sStatusName=$('#txtPickerStatus').val();
            var results = [];
            if (sStatusName != "" || sStatusName !=null)
            {
                var oStatusList = $('#divCostSheets').data('CostSheetStatusList');
                for (i = 0; i < oStatusList.length; ++i)
                {
                    var sTempCode = oStatusList[i]['Value'].substring(0, sStatusName.length);
                    if (sStatusName.toUpperCase() == sTempCode.toUpperCase()) {
                        results.push(oStatusList[i]);
                    }
                }
            } else {
                results = $('#divCostSheets').data('CostSheetStatusList');
            }
            var tblColums = [];
            var oColumn = { field: 'Value', title: 'Status Name',width:200, align: "left" };tblColums.push(oColumn);

            var oPickerParam = {
                winid: 'winStatus',
                winclass: 'clsStatus',
                winwidth: 600,
                winheight: 460,
                tableid: 'tblStatus',
                tablecolumns: tblColums,
                datalist: results,
                multiplereturn: true,
                searchingbyfieldName: 'Value',
                windowTittle: 'Status List'
            };
            $.icsPicker(oPickerParam);
            IntializePickerbutton(oPickerParam);
        }
        function IntializePickerbutton(oPickerobj) {
            //debugger;
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                //debugger;
                //for Single Select
                SetPickerValueAssign(oPickerobj);
            });
            $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
                if (e.which == 13)//enter=13
                {
                    SetPickerValueAssign(oPickerobj);
                }
            });
        }
        function SetPickerValueAssign(oPickerobj)
        {
            //debugger;
            var oreturnObj = null, oreturnobjs = [];
            if (oPickerobj.multiplereturn)
            {
                oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
            } else {
                oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            }
            $("#" + oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();

            if (oPickerobj.winid == 'winStyleSearchs')
            {
                if (oreturnobjs!=null && oreturnobjs.length>0)
                {
                    debugger;
                    $('#divCostSheets').data('TechnicalSheetIDs',ICS_PropertyConcatation(oreturnobjs,'TechnicalSheetID'));
                    $("#txtPickerStyleNo").val(oreturnobjs.length>1?oreturnobjs.length+" Item's Selected.":oreturnobjs[0].StyleNo);
                    $("#txtPickerStyleNo").addClass('fontColorOfPickItem');

                }else
                {
                    alert("Please Select Item From List.");return;
                }

            }else if (oPickerobj.winid == 'winMerchandiser')
            {
                if (oreturnobjs!=null && oreturnobjs.length>0)
                {
                $('#divCostSheets').data('MerchandiserIDs',ICS_PropertyConcatation(oreturnobjs,'EmployeeID'));
                $("#txtPickerMerchandiser").val(oreturnobjs.length>1?oreturnobjs.length+" Item's Selected.":oreturnobjs[0].Name);
                $("#txtPickerMerchandiser").addClass('fontColorOfPickItem');
                }else
                {
                    alert("Please Select Item From List.");return;
                }
            }else if (oPickerobj.winid == 'winBuyer')
            {
                if (oreturnobjs!=null && oreturnobjs.length>0)
                {
                $('#divCostSheets').data('BuyerIDs',ICS_PropertyConcatation(oreturnobjs,'ContractorID'));
                $("#txtPickerBuyer").val(oreturnobjs.length>1?oreturnobjs.length+" Item's Selected.":oreturnobjs[0].Name);
                $("#txtPickerBuyer").addClass('fontColorOfPickItem');
                }else
                {
                    alert("Please Select Item From List.");return;
                }
            }else if (oPickerobj.winid == 'winDepartment')
            {
                if (oreturnobjs!=null && oreturnobjs.length>0)
                {
                $('#divCostSheets').data('DepartmentIDs',ICS_PropertyConcatation(oreturnobjs,'DepartmentID'));
                $("#txtPickerDepartment").val(oreturnobjs.length>1?oreturnobjs.length+" Item's Selected.":oreturnobjs[0].Name);
                $("#txtPickerDepartment").addClass('fontColorOfPickItem');
                }else
                {
                    alert("Please Select Item From List.");return;
                }
            }else if (oPickerobj.winid == 'winStatus')
            {
                if (oreturnobjs!=null && oreturnobjs.length>0)
                {
                $('#divCostSheets').data('StatusIDs',ICS_PropertyConcatation(oreturnobjs,'id'));
                $("#txtPickerStatus").val(oreturnobjs.length>1?oreturnobjs.length+" Item's Selected.":oreturnobjs[0].Value);
                $("#txtPickerStatus").addClass('fontColorOfPickItem');
                }else
                {
                    alert("Please Select Item From List.");return;
                }
            }
            else if (oPickerobj.winid == 'winCostSheets')
            {
                if (oreturnObj!=null && oreturnObj.CostSheetLogID>0)
                {
                    if(parseInt(oreturnObj.CostSheetTypeInInt)==0 )//EnumCostSheetType{Sweater = 0,Knit = 1,Woven = 2}
                    {
                        window.open(sessionStorage.getItem('BaseAddress') + '/CostSheet/PrintCostSheetPreview?id='+oreturnObj.CostSheetLogID);
                    }else{
                        window.open(sessionStorage.getItem('BaseAddress') + '/CostSheet/CostSheetWovenPreviewWithBodyPartLog?id='+oreturnObj.CostSheetLogID);
                    }

                }else
                {
                    alert("Please Select Item From List.");return;
                }

            }
        }
        //button hide
        function RefreshControlLayout(oAuthorizationRolesMapping)
        {

            $('#btnAdvanceSearch,#btnAdd,#btnEdit,#btnUpdateInfo,#btnDetails,#btnDelete,#btnBodyMeasurement,#btnReqForApprove,#btnUndoRequest,#btnWaitforApproval,#btnWaitforRevise,#btnApprove,#btnUndoApproved,#btnRFRevise,#btnAcceptRevise,#btnRevise,#btnHistory,#btnPreView,#btnPrintList,#btnPreView2,#btnDocumentSetup,#btnCompareSheet,#btnBudget').hide();
            if(PermissionChecker('AdvSearch','CostSheet',oAuthorizationRolesMapping)){$("#btnAdvanceSearch").show();}
            if(PermissionChecker('Add','CostSheet',oAuthorizationRolesMapping)){$(" #btnAdd,#btnRequestforApproval,#btnWaitforRevise,#btnCopy,#btnRFRevise,#btnDocumentSetup,#btnBodyMeasurement,#btnCompareSheet,#btnBudget").show();}
            if(PermissionChecker('Edit','CostSheet',oAuthorizationRolesMapping)){$("#btnEdit").show();}
            if(PermissionChecker('View','CostSheet',oAuthorizationRolesMapping)){$("#btnDetails,#btnRevise,#btnHistory").show();}
            if(PermissionChecker('Delete','CostSheet',oAuthorizationRolesMapping)){$("#btnDelete").show();}
            if(PermissionChecker('UndoRequest','CostSheet',oAuthorizationRolesMapping)){$("#btnUndoRequest").show();}
            if(PermissionChecker('WaitforApproval','CostSheet',oAuthorizationRolesMapping)){$("#btnWaitforApproval").show();}
            if(PermissionChecker('Approved','CostSheet',oAuthorizationRolesMapping)){$("#btnApprove,#btnUndoApproved").show();}
            if(PermissionChecker('Amendment','CostSheet',oAuthorizationRolesMapping)){$("#btnAcceptRevise").show();}
            if(PermissionChecker('Preview','CostSheet',oAuthorizationRolesMapping)){$("#btnPreView,#btnPreView2").show();}
            if(PermissionChecker('PrintList','CostSheet',oAuthorizationRolesMapping)){$("#btnPrintList").show(); }

        }



    </script>
