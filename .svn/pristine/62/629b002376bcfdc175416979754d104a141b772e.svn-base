<html>
<body>
    @{
        ViewBag.Title = "Store Permission";
    }
    @model ESimSol.BusinessObjects.StorePermission
    <div class="menuMainCollectionTable">
        <div id="divStorePermission" class="easyui-panel" title="" style="font-family:Tahoma; height:100%; width:100%">
            <div style="width:100%; height:87%; text-align:center">
                <table id="tblStorePermission" title="" class="easyui-datagrid" style="width:100%;height:100%" data-options="singleSelect: true,fitColumns:false,rownumbers:true,pagination:false,autoRowHeight:false,toolbar: '#toolbar'">
                    <thead>
                        <tr>
                            <th field="ModuleNameST" width="300" align="left">Module Name</th>
                            <th field="WorkingUnitName" width="300" align="left">Store Name</th>
                            <th field="StoreTypeST" width="300" align="left">Store Type</th>
                            <th field="Remarks" width="300" align="left">Remarks</th>
                        </tr>
                    </thead>
                </table>
                <div style="text-align:left" id="toolbar">
                    Module : <input type="text" id="txtModuleName" placeholder="Type Module Name & Press Enter" style="width:130px" />
                    <a id="btnPickModule" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>
                    @*@Html.DropDownListFor(model => model.ModuleNameInt, Model.ModuleNameObjs.Select(x => new SelectListItem() { Text = x.Value, Value = x.id.ToString() }), new { id = "cboModule", style = "width:150px;" })*@
                    Store : <input type="text" id="txtStoreName" placeholder="Type Store Name & Press Enter" style="width:130px" />
                    <a id="btnPickStore" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>
                    Store Type : @Html.DropDownListFor(model => model.StoreTypeInt, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumStoreType))), new { id = "cboStoreType", style = "width: 100px;" })
                    Remarks : @Html.TextBoxFor(model => model.Remarks, new { style = "width: 200px;", id = "txtRemarks" })
                    <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                    <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                    <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a>
                </div>
            </div>
            <div style="width:100%; height:10%">
                <fieldset>
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                        <tr>
                            <td style="width:80%; text-align:right"></td>
                            <td style="width: 10%"></td>
                            <td style="width: 10%">
                                <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
    </div>
</body>
</html>


<script type="text/javascript">

    var _oStorePermission=null;
    var _Module = null;
    $(document).ready(function () {
        _oStorePermission =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        $('#tblStorePermission').datagrid({ title: ('Store Permission for User : ' +_oStorePermission.UserName)});
        RefreshList(_oStorePermission.StorePermissions);
        $('#divStorePermission').data('Stores', []);
        $('#divStorePermission').data('_Module', 0);

    });

    // Module Picker
    $("#btnPickModule").click(function () {

        GetModules("");

    });

    $("#txtModuleName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtModuleName').val())==null || $.trim($('#txtModuleName').val())=="")
            {
                alert("Type Module Name and Press Enter.");
                $('#txtModuleName').focus();
                return;
            }
            
            var sModuleName = $.trim($('#txtModuleName').val());
            GetModules(sModuleName);
        }else if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtModuleName").removeClass("fontColorOfPickItem");
        }
    });

    function GetModules(sModuleName)
    {
        debugger;
        var oStorePermission = {UserName:sModuleName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oStorePermission,
            ControllerName: "UserPermission",
            ActionName: "SearchByModuleName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                    var tblColums = []; var oColumn = { field: "id", title: "ID", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Value", title: "Module Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winModulePicker',
                        winclass: 'clsModulePicker',
                        winwidth: 400,
                        winheight: 460,
                        tableid: 'tblModulePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Value',
                        windowTittle: 'Module List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);

            }else{
                alert("Data Not Found.");
            }
        });
    }

    // Store Picker
    $("#btnPickStore").click(function () {

        GetStores("");

    });

    $("#txtStoreName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtStoreName').val())==null || $.trim($('#txtStoreName').val())=="")
            {
                alert("Type Store Name and Press Enter.");
                $('#txtStoreName').focus();
                return;
            }
            
            var sStoreName = $.trim($('#txtStoreName').val());
            GetStores(sStoreName);
        }else if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtStoreName").removeClass("fontColorOfPickItem");
        }
    });

    function GetStores(sStoreName)
    {
        debugger;
        var oStorePermission = {UserName:sStoreName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oStorePermission,
            ControllerName: "UserPermission",
            ActionName: "SearchByStoreName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if(response.status && response.objs.length > 0 ){
                if (response.objs[0].ErrorMessage == "") {
                    var tblColums = []; var oColumn = { field: "WorkingUnitCode", title: "Store Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "WorkingUnitName", title: "Store Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winStorePicker',
                        winclass: 'clsStorePicker',
                        winwidth: 400,
                        winheight: 460,
                        tableid: 'tblStorePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'WorkingUnitName',
                        windowTittle: 'Store List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);

                }else{
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else{
                alert("Data Not Found!");
            }
            
        });
    }

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if(oPickerobj.winid == 'winStorePicker'){
            
            if(oreturnobjs != null && oreturnobjs.length>0)
            {
                if(oreturnobjs[0].ErrorMessage == "")
                {
                    $('#txtStoreName').val(oreturnobjs.length+"'s Stores seleted");
                    $('#txtStoreName').addClass('fontColorOfPickItem');
                    $('#divStorePermission').data('Stores', oreturnobjs);
                    $('#txtStoreName').focus();
                }
                else{
                    alert(oreturnobjs[0].ErrorMessage);
                }
                
            }
            else{
                alert("No Date Found!");
            }

        }

        if(oPickerobj.winid == 'winModulePicker')
        {
            debugger;
            if(oreturnObj.id != null){
                $('#txtModuleName').val(oreturnObj.Value);
                $('#divStorePermission').data('_Module', oreturnObj.id);
            }
        }
    }

    function ValidateInput()
    {
        if($('#divStorePermission').data('_Module')<=0)
        {
            alert("Please select Module!");
            $('#txtModuleName').focus();
            return false;
        }
        if($('#divStorePermission').data('Stores').length <= 0)
        {
            alert("Please select Store!");
            $('#txtStoreName').focus();
            return false;
        }
        if(parseInt($("#cboStoreType").prop('selectedIndex'))<=0)
        {
            alert("Please select Store Type!");
            $('#cboStoreType').focus();
            return false;
        }
        if(_oStorePermission==null || parseInt(_oStorePermission.UserID)<=0)
        {
            alert("Invalid User!");
            return false;
        }
        return true;
    }


    function RefreshObject()
    {
        var oStorePermission=   {
            StorePermissionID : 0,
            UserID : parseInt(_oStorePermission.UserID),
            ModuleNameInt : $('#divStorePermission').data('_Module'),
            WorkingUnits : $('#divStorePermission').data('Stores'),
            StoreTypeInt : parseInt($("#cboStoreType").prop('selectedIndex')),
            Remarks : $.trim($('#txtRemarks').val())
        };
        return oStorePermission;
    }

    $("#btnAdd").click(function(){
        debugger;
        if(!ValidateInput()) return;
        var oStorePermission=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem("BaseAddress")+  "/UserPermission/SaveStorePermission",
            traditional: true,
            data:  JSON.stringify(oStorePermission),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger
                var oStorePermissions = jQuery.parseJSON(data);
                if(oStorePermissions != null && oStorePermissions.length>0){
                    if(oStorePermissions[0].ErrorMessage == "")
                    {
                        alert("Data Saved sucessfully");
                        var nIndex=$('#tblStorePermission').datagrid('getRows').length;
                        for(var i=0;i<oStorePermissions.length;i++){
                            $('#tblStorePermission').datagrid('appendRow',oStorePermissions[i]);
                            $('#tblStorePermission').datagrid('selectRow', nIndex);
                            nIndex=$('#tblStorePermission').datagrid('getRows').length;
                        };
                        $("#xtModuleName,#txtStoreName").val('');
                        $("#txtRemarks").val('');
                    }
                    else {
                        alert(oStorePermissions[0].ErrorMessage);
                    }
                }
                else{
                    alert("Same Row Exists!");
                }
                
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $('#btnDelete').click(function(e){
        var oStorePermission = $('#tblStorePermission').datagrid('getSelected');
        if(oStorePermission==null)
        {
            alert("Please select a item from list!");
            return;
        }
        var conf = confirm("Confirm to delete?");
        if(conf==false)return;
        var SelectedRowIndex=$('#tblStorePermission').datagrid('getRowIndex',oStorePermission);
        if (parseInt(oStorePermission.StorePermissionID)> 0)
        {
            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem("BaseAddress")+  "/UserPermission/DeleteStorePermission",
                traditional: true,
                data:  JSON.stringify(oStorePermission),
                contentType: "application/json; charset=utf-8",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $('#tblStorePermission').datagrid('deleteRow',SelectedRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    });

    function RefreshList(oStorePermissions)
    {
        var data=oStorePermissions;
        data={"total":""+data.length+"","rows":data};
        $('#tblStorePermission').datagrid('loadData',data);
    }

    $("#btnRefresh").click(function(){
        var data=$('#tblStorePermission').datagrid('getRows');
        data={"total":""+data.length+"","rows":data};
        $('#tblStorePermission').datagrid('loadData',data);
    });

    $("#btnClose").click(function(){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            window.location.href = sessionStorage.getItem("BackLink");
        }
    });
</script>