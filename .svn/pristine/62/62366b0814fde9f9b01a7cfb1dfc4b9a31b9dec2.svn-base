@{
    ViewBag.Title = "Master LC list";
}
@model IEnumerable<ESimSol.BusinessObjects.MasterLC>
 <script src="~/Views/CommonModal/CommonRequestModal.js"></script>
  <script src="~/Views/CommonModal/CommonHistoryModal.js"></script>
    <script src="~/Views/ExportDocTnC/ExportDocTAndC.js"></script>
    <script src="~/Views/MasterLC/AdvanceSearch.js"></script>
<div class="menuMainCollectionTable" ng-app="MasterLCApp">
    <div ng-controller="MasterLCController" title="Master LC Issue">
        <div style="margin-bottom:2px; display:block" class="form-inline ui-grid-top-panel regionLC">
            <input type="text" class="form-control" ng-model="LCNo" ng-keydown="searchByLCNo($event)" placeholder="Type LC No & Press Enter"><input type="text" class="form-control" ng-model="BuyerName" ng-keydown="searchByBuyerName($event)" placeholder="Type Buyer Name & Press Enter">
            <button type="button" ng-show="btnAdvanceSearch"    class="btn btn-default btn-sm" aria-label="Left Align" ng-click="AdvanceSearch()"><span class="glyphicon glyphicon-search" aria-hidden="true"> Search</span></button>
            <button type="button" ng-show="btnAdd"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Add()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>
            <button type="button" ng-show="btnEdit"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Edit()"><span class="glyphicon glyphicon-edit" aria-hidden="true"> Edit</span></button>
            <button type="button" ng-show="btnDetails"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="View()"><span class="glyphicon glyphicon-th" aria-hidden="true"> View</span></button>
            <button type="button" ng-show="btnDelete"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Delete()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Delete</span></button>
            <button type="button" ng-show="btnRequestforApproval"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="RequestforApproval()"><span class="glyphicon glyphicon-share-alt" aria-hidden="true"> Rqst for App</span></button>
            <button type="button" ng-show="btnUndoRequest"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="UndoRequest()"><span class="glyphicon glyphicon-share" aria-hidden="true"> Undo Req</span></button>
            <button type="button" ng-show="btnWaitforApproval"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="WaitForApproval()"><span class="glyphicon glyphicon-search" aria-hidden="true"> Wait For Approval</span></button>
            <button type="button" ng-show="btnApproved"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Approved()"><span class="glyphicon glyphicon-ok-circle" aria-hidden="true"> Approved</span></button>
            <button type="button" ng-show="btnUndoApproved"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="UndoApprove()"><span class="glyphicon glyphicon-share" aria-hidden="true"> Undo Approve</span></button>
            <button type="button" ng-show="btnRFRevise"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="RequestForAmendment()"><span class="glyphicon glyphicon-share-alt" aria-hidden="true"> Req For Amndmnt</span></button>
            <button type="button" ng-show="btnAcceptAmendment"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="AcceptAmendment()"><span class="glyphicon glyphicon-hand-up" aria-hidden="true"> Accept Amendment</span></button>
            <button type="button" ng-show="btnWaitforRevise"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="WaitForRevise()"><span class="glyphicon glyphicon-search" aria-hidden="true"> Wait For Revise</span></button>
            <button type="button" ng-show="btnB2BLCAllocation"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="B2BLCAllocation()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> B2B LC Allocation</span></button>
            <button type="button" ng-show="btnAddCommerecialInvoice"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="AddCommercialInvioice()"><span class="glyphicon glyphicon-plus" aria-hidden="true">Invoice</span></button>
            <button type="button" ng-show="btnAddLCTransfer"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="AddLCTransfer()"><span class="glyphicon glyphicon-plus" aria-hidden="true">LC Transfer</span></button>
            <button type="button" ng-show="btnHistory"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="History()"><span class="glyphicon glyphicon-th-large" aria-hidden="true"> History</span></button>
            <button type="button" ng-show="btnAmendment"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="AmendmentHistory()"><span class="glyphicon glyphicon-th-large" aria-hidden="true"> Amendment History</span></button>
            <button type="button" ng-show="btnDocumentSetup" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="DocumentSetup()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Document Setup</span></button>
            <button type="button" ng-show="btnUpdatePartyInfo" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="UpdatePartyInfo()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Update Party Info</span></button>
            <button type="button" ng-show="btnOrderTrack"  class="btn btn-default btn-sm" aria-label="Left Align" ng-click="OrderTrack()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Order Tag</span></button>
            <button type="button" ng-show="btnPreView"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PrintPreview()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Preview</span></button>
            <button type="button" ng-show="btnPrintList"   class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PrintList()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Print List</span></button>
        </div>
        <div ui-grid="gridOptions" ui-grid-selection class="grid-angular"></div>
    </div>
</div>

<style type="text/css">
    .regionLC .form-control {
        height:26px;
        width:15%;
        padding: 0px 6px;
        font-size: 12px;
    }
    .grid-angular {
        width: 100%;
        height: 540px;
    }
</style>
<script type="text/javascript">
    debugger;
    var oMasterLCs =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oBussinessSessions= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BussinessSessions));
    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    var oClientOperationSetting = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ClientOperationSetting));
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    oBussinessSessions.push({BussinessSessionID:0,SessionName:'--Select One--'});
    var MLCapp= angular.module('MasterLCApp', ['ngAnimate','ui.bootstrap','ui.grid','ui.grid.selection','ms.service','masterlc.service','CommonHistory.service','ExportDocTnC.service','CommonRequest.service']);
    MLCapp.controller('MasterLCController',  function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession, lcservice, commonhistoryservice,DocumentSetupService,CommonRequestservice) {
        oMasterLCs=(userSession.getData('MasterLCs').length>0)? userSession.getData('MasterLCs'):oMasterLCs;
        $('.date-container').datepicker({format: "dd M yyyy",calendarWeeks:true,autoclose:true,todayHighlight:true});
        $scope.gridOptions = {
            enableSelectAll: true,
            multiSelect: false,
            enableFullRowSelection: true,
            columnDefs:[
              { field:'FileNo', name:'File No', width:'10%'},
              { field:'MasterLCNo', name:'LC No', width:'15%'},
              { field:'LCStatusInString', name:'Status', width:'10%',enableSorting: false },
              { field:'ApplicantName', name:'Buyer Name', width:'10%',enableSorting: false },
              { field:'MasterLCDateSt', name:'Issue Date', width:'10%'},
              { field:'BeneficiaryName', name:'Benificiary', width: '10%', enableSorting: false },
              { field:'AdviceBankName', name:'Advise Bank', width: '10%', enableSorting: false },
              { field:'ApprovedByName', name:'Approved By', width: '10%', enableSorting: false },
              { field:'LCValue', name:'LC Amount', width:'15%',align:'right',pinnedLeft:true }
            ],
            data: oMasterLCs,
            onRegisterApi : function(gridApi)
            {
                debugger;
                $scope.gridApi = gridApi;
                $scope.gridApi.grid.modifyRows(oMasterLCs);
                $scope.gridApi.selection.selectRow(oMasterLCs[userSession.getRowIndex()]);
            }
        };
        $scope.BussinessSessions = oBussinessSessions;
        $scope.CompareOperators= oCompareOperators;

        $scope.Add  = function ()
        {
            ////debugger;
            sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("MasterLCHeader", "Add Master LC");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLC?id="+0+"&buid="+sessionStorage.getItem('BUID');
        }
        $scope.Edit =  function () {
            debugger;
            var oMasterLC = $scope.gridApi.selection.getSelectedRows()[0];
            if (oMasterLC == null) {
                alert("Please Select an item from list");
                return;
            }
            if (oMasterLC.LCStatus != 1 ) {
                alert("Without Initialized Item can't Update!");
                return;
            }
            var SelectedRowIndex = $scope.gridOptions.data.indexOf(oMasterLC);
            sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("BackLink", window.location.href);

            //if (oMasterLC.MLCWithOrder == true) {
            //    sessionStorage.setItem("MasterLCHeader", "Edit Master LC With Order");
            //    window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLCWithOrder?id="+oMasterLC.MasterLCID+"&buid="+sessionStorage.getItem('BUID');
            //}
            //else {
            //    sessionStorage.setItem("MasterLCHeader", "Edit Master LC");
            //    window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLC?id="+oMasterLC.MasterLCID+"&buid="+sessionStorage.getItem('BUID');
            //}

            sessionStorage.setItem("MasterLCHeader", "Edit Master LC");
            window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLC?id="+oMasterLC.MasterLCID+"&buid="+sessionStorage.getItem('BUID');


            //var data = $scope.gridApi.selection.getSelectedRows();
            //if(data == null || data.length <= 0) {
            //    alert("Please Select an item from list");
            //    return;
            //}
            //angular.forEach($scope.gridOptions.data, function (value, index) 
            //{
            //    if (value.MasterLCID == data[0].MasterLCID)
            //    {
            //        var oMasterLC = data[0];
            //        if(oMasterLC.LCStatus!=1 )
            //        {
            //            alert("Without Initialized Item can't Update!");
            //            return;
            //        }
            //        sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
            //        sessionStorage.setItem("SelectedRowIndex", index);
            //        sessionStorage.setItem("MasterLCHeader", "Edit Master LC");
            //        sessionStorage.setItem("BackLink", window.location.href);
            //        window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLC?id="+oMasterLC.MasterLCID+"&buid="+sessionStorage.getItem('BUID');
            //    }
            //}, $scope.gridOptions.data);
        };
        $scope.View =  function () {
            debugger;
            var oMasterLC = $scope.gridApi.selection.getSelectedRows()[0];
            if (oMasterLC == null) {
                alert("Please Select an item from list");
                return;
            }
            var SelectedRowIndex = $scope.gridOptions.data.indexOf(oMasterLC);
            sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("BackLink", window.location.href);

            if (oMasterLC.MLCWithOrder == true) {
                sessionStorage.setItem("MasterLCHeader", "View Master LC With Order");
                window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLCWithOrder?id="+oMasterLC.MasterLCID+"&buid="+sessionStorage.getItem('BUID');
            }    
            else {
                sessionStorage.setItem("MasterLCHeader", "View Master LC");
                window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLC?id="+oMasterLC.MasterLCID+"&buid="+sessionStorage.getItem('BUID');
            }

            //debugger;
            //var data = $scope.gridApi.selection.getSelectedRows();
            //if(data==null || data.length<=0)
            //{
            //    alert("Please Select an item from list");
            //    return;
            //}
            //angular.forEach($scope.gridOptions.data, function (value, index) {
            //    if (value.MasterLCID == data[0].MasterLCID)
            //    {
            //        var oMasterLC = data[0];
            //        sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
            //        sessionStorage.setItem("SelectedRowIndex", index);
            //        sessionStorage.setItem("MasterLCHeader", "View Master LC");
            //        sessionStorage.setItem("BackLink", window.location.href);
            //        window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLC?id="+oMasterLC.MasterLCID+"&buid="+sessionStorage.getItem('BUID');
            //    }
            //}, $scope.gridOptions.data);
        };

        $scope.UpdatePartyInfo =  function ()
        {
            //debugger;
            var oMasterLC = $scope.gridApi.selection.getSelectedRows()[0];
            if(oMasterLC==null || parseInt(oMasterLC.MasterLCID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.MasterLCID == oMasterLC.MasterLCID)
                {
                    sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("MasterLCHeader", "View Master LC");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.open(sessionStorage.getItem("BaseAddress") + '/ExportPartyInfo/ViewPartyWiseExportInfo?pid='+parseInt(oMasterLC.Applicant), '_blank');
                }
            }, $scope.gridOptions.data);
        }
        $scope.Delete= function ()
        {
            debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            if(data[0].LCStatus!=1)
            {
                alert("Please select Only Initialized Item from List!");
                return;
            }
            if (!confirm("Confirm to Delete?")) return ;
            $http.post(sessionStorage.getItem('BaseAddress')+'/MasterLC/Delete', JSON.stringify(data[0])).then(
                            function (response) {
                                if (jQuery.parseJSON(response.data) == 'Deleted') {
                                    angular.forEach($scope.gridOptions.data, function (value, index)
                                    {
                                        if (value.MasterLCID == data[0].MasterLCID)
                                        {
                                            alert("Successfully Deleted.");
                                            $scope.gridOptions.data.splice(index, 1);
                                        }
                                    }, $scope.gridOptions.data);
                                }
                                else {
                                    alert(jQuery.parseJSON(response.data));
                                }
                            },
                            function (response) { alert(jQuery.parseJSON(response.data)); }
                        );

        };

        $scope.WaitForApproval= function()
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+  "/MasterLC/WaitingSearch",
                data: {},
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    var oMasterLCs = jQuery.parseJSON(data);
                    if (_oMasterLCs.length>0)
                    {
                        $scope.gridOptions.data = oMasterLCs;
                    }
                    else
                    {
                        alert("Data Not found");
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
        $scope.WaitForRevise=function()
        {
            var tsv=((new Date()).getTime())/1000;
            $.ajax
                ({
                    type: "GET",
                    dataType: "json",
                    url : sessionStorage.getItem('BaseAddress')+"/MasterLC/WaitForRevise",
                    data: {ts:tsv},
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        //debugger;
                        var oMasterLCs = jQuery.parseJSON(data);
                        if (oMasterLCs[0].ErrorMessage=="" || oMasterLCs[0].ErrorMessage==null)
                        {
                            $scope.gridOptions.data = oMasterLCs;
                        }
                        else
                        {
                            RefreshList([]);
                        }
                    },
                    error: function (xhr, status, error)
                    {
                        alert(error);
                    }

                });
        }

        $scope.RequestforApproval= function ()
        {
            debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || parseInt(oMasterLC.MasterLCID)<=0)
            {
                alert("Select an item from list");
                return false;
            }

            if  (oMasterLC.LCStatus!=1)
            {
                alert("Please select only Initialized item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.MasterLCID== oMasterLC.MasterLCID)
                {
                    debugger;
                    sessionStorage.setItem("SelectedRowIndex", index);
                    var oEmployee = { DesignationName : '2,24' };
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(sessionStorage.getItem('BaseAddress')+"/User/GetsRequestedUsers",$.param(oEmployee), config).then(
                            function (response)
                            {
                                var results=jQuery.parseJSON(response.data);
                                var modalObj={
                                    size:'sm',
                                    url:sessionStorage.getItem('BaseAddress')+'/CommonModal/CommonRequestModal',
                                    modalcontroller:'ModalCommonRequestCtrl',
                                    appcontroller:'MasterLCController',
                                    Users:results,
                                    pickertitle:'Request For Approve',
                                    objectFieldName:'MasterLCID',
                                    objectID:oMasterLC.MasterLCID,
                                    controllerName:'MasterLC',
                                    requestactionType:'RequestForApproved'
                                }
                                var modalInstance=CommonRequestservice.Instance(modalObj);
                                modalInstance.result.then(function (result)
                                {
                                    debugger;
                                    $scope.gridOptions.data[index]=result;
                                    $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                    $scope.gridApi.selection.selectRow(result);

                                }, function () {
                                    $log.info('Modal dismissed at: ' + new Date());
                                });
                            },
                                function (response) { alert(jQuery.parseJSON(response.data).Message);}
                        );

                }
            }, $scope.gridOptions.data);
        }

        $scope.UndoRequest =function ()
        {
            //debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || parseInt(oMasterLC.MasterLCID)<=0)
            {
                alert("Select an item from list");
                return false;
            }
            if(oMasterLC.LCStatus!=2)
            {
                alert("Please select only Requested  item from list");
                return;
            }
            if (!confirm("Confirm to Undo Request?")) return ;
            oMasterLC.ActionTypeExtra="UndoRequest";
            $scope.StatusChange(oMasterLC,"Undo Request");
        }

        $scope.Approved= function ()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oMasterLC.LCStatus!=2)
            {
                alert("Please select only Requested  item from list");
                return;
            }
            if (!confirm("Confirm to Approve?")) return ;
            oMasterLC.ActionTypeExtra="Approve";
            $scope.StatusChange(oMasterLC,"Approve");
        };

        $scope.UndoApprove= function ()
        {
            //debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }else if(oMasterLC.LCStatus!=3)
            {
                alert("Please select only Approved item from list");
                return;
            }
            if (!confirm("Confirm to Undo Approve?")) return ;
            oMasterLC.ActionTypeExtra="UndoApprove";
            $scope.StatusChange(oMasterLC,"Undo Approve");
        };

        $scope.RequestForAmendment= function ()
        {
            //debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }else if(oMasterLC.LCStatus!=3)
            {
                alert(oMasterLC.LCStatusInString+" Item Can't Request for Ammendment");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.MasterLCID== oMasterLC.MasterLCID)
                {
                    debugger;
                    sessionStorage.setItem("SelectedRowIndex", index);
                    var oEmployee = { DesignationName : '2' };
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(sessionStorage.getItem('BaseAddress')+"/User/GetsRequestedUsers",$.param(oEmployee), config).then(
                            function (response)
                            {
                                var results=jQuery.parseJSON(response.data);
                                var modalObj={
                                    size:'sm',
                                    url:sessionStorage.getItem('BaseAddress')+'/CommonModal/CommonRequestModal',
                                    modalcontroller:'ModalCommonRequestCtrl',
                                    appcontroller:'MasterLCController',
                                    Users:results,
                                    pickertitle:'Request For Ammendment',
                                    objectFieldName:'MasterLCID',
                                    objectID:oMasterLC.MasterLCID,
                                    controllerName:'MasterLC',
                                    requestactionType:'Req_for_Ammendment'
                                }
                                var modalInstance=CommonRequestservice.Instance(modalObj);
                                modalInstance.result.then(function (result)
                                {
                                    debugger;
                                    $scope.gridOptions.data[index]=result;
                                    $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                    $scope.gridApi.selection.selectRow(result);

                                }, function () {
                                    $log.info('Modal dismissed at: ' + new Date());
                                });
                            },
                                function (response) { alert(jQuery.parseJSON(response.data).Message);}
                        );

                }
            }, $scope.gridOptions.data);
        };


        $scope.AcceptAmendment =  function ()
        {

            ////debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oMasterLC.LCStatus!=4 )
            {
                alert("Without Request for Amendment Item can't Accept!");
                return;
            }

            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.MasterLCID == data[0].MasterLCID)
                {
                    sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("MasterLCHeader", "Master LC Ammendment");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLCAmendment?id="+oMasterLC.MasterLCID+"&buid="+sessionStorage.getItem('BUID');
                }
            }, $scope.gridOptions.data);

        };

        $scope.AdvanceSearch = function ()
        {
            debugger;

            var modalObj={
                modalcontroller:'ModalAdvanceSearchCtrl',
                appcontroller:'MasterLCController',
                CompareOperators:$scope.CompareOperators,
                BussinessSessions:$scope.BussinessSessions
            }
            var modalInstance=lcservice.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                debugger;
                $scope.gridOptions.data = result;
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        $scope.B2BLCAllocation= function ()
        {
            //debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var oParameter = new Object();
            oParameter.Name = "B2B LC Allocation";
            //    if(parseInt(oSalesContract.B2BLCAllocationApprovedID)!=0)
            //    {
            //        if (!confirm("Your Selected Sales Contract Allocation Already Approved!\nYou can view it?")) return ;
            //        oParameter.Name = "View B2B LC Allocation";
            //    }
            var SelectedRowIndex=$('#tblMasterLC').datagrid('getRowIndex',oMasterLC);
            var tsv=((new Date()).getTime())/1000;
            var url = sessionStorage.getItem('BaseAddress')+"/B2BLCAllocation/ViewB2BLCAllocation?id="+oMasterLC.MasterLCID+"&ts="+tsv;
            var oB2BLCAllocation = window.showModalDialog(url, oParameter,  'dialogHeight:635px;dialogWidth:1200px;dialogLeft:100;dialogTop:10;center:yes;resizable:yes;status:no;scroll:yes');
        };

        $scope.DocumentSetup = function()
        {
            var oMasterLC= $scope.gridApi.selection.getSelectedRows()[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            //RefTypeInInt = 1;//EnumMasterLCType:1:MasterLC;2:ExportLC  don't remove this code without ask developer;
            var oExportLC= {MasterLCID:oMasterLC.MasterLCID,RefTypeInInt:1,BUID:sessionStorage.getItem('BUID')};
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/ExportDocTnC/Get_ExportDocTnCSetup',$.param(oExportLC), config).then(
                                function (response)
                                {
                                    var result=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        modalcontroller:'ModalAdvanceSearchCtrl',
                                        appcontroller:'MasterLCController',
                                        ExportDocTnC:result
                                    }
                                    var modalInstance=DocumentSetupService.Instance(modalObj);

                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );


            GetFormatInformation(oExportLC);
        };

        $scope.AmendmentHistory =  function ()
        {
            ////debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oMasterLC.LCStatus<3 )
            {
                alert("In this can't see Amendment History!");
                return;
            }
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/MasterLC/GetMasterLCReviseHistory',$.param(oMasterLC), config).then(
                                function (response)
                                {
                                    var oColumns = [];
                                    var oColumn = { field: 'FileNo', name: 'File No', width: '10%' };
                                    oColumn = { field: 'MasterLCNo', name: 'LC No', width: '10%' };oColumns.push(oColumn);
                                    oColumn = { field: 'LCStatusInString', name: 'Status', width: '15%' };oColumns.push(oColumn);
                                    oColumn = { field: 'ApplicantName', name: 'Buyer', width: '10%' };oColumns.push(oColumn);
                                    oColumn = { field: 'IssueDateInString', name: 'Issue Date', width: '8%' };oColumns.push(oColumn);
                                    oColumn = { field: 'BeneficiaryName', name: 'Beneficiary', width: '15%' };oColumns.push(oColumn);
                                    oColumn = { field: 'AdviceBankName', name: 'Advice Bank', width: '15%' };oColumns.push(oColumn);
                                    oColumn = { field: 'ApprovedByName', name: 'Approved By', width: '10%' };oColumns.push(oColumn);
                                    oColumn = { field: 'LCValue', name: 'Amount', width: '10%' };oColumns.push(oColumn);
                                    var results=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        size:'lg',
                                        appcontroller:'MasterLCController',
                                        objs:results,
                                        multiSelect:false,
                                        showColumnFooter:false,
                                        pickertitle:'LC Ammendment History',
                                        objectFieldName:'MasterLCLogID',
                                        controllerName:'MasterLC',
                                        controlleractionName:'PrintMasterLCLogPreview',
                                        columns:oColumns
                                    }
                                    var modalInstance=commonhistoryservice.Instance(modalObj);

                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );
        };


        $scope.Cancel =  function ()
        {
            var oMasterLC= $scope.gridApi.selection.getSelectedRows()[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }else if(oMasterLC.LCStatus<1 || oMasterLC.LCStatus>4)
            {
                alert("In this stage you can't Cancel the Item");
                return;
            }
            if (!confirm("Confirm to Cancel?")) return ;
            oMasterLC.ActionTypeExtra="Cancel";
            $scope.StatusChange(oMasterLC,"Cancel");
        };

        $scope.SetOrderStatusExtra =  function(oMasterLC)
        {

            switch (oMasterLC.LCStatus)
            {
                case 1 : {
                    oMasterLC.LCStatusInInt =1;
                    break;
                }
                case 2 :{
                    oMasterLC.LCStatusInInt =2;
                    break;
                }
                case 3 :{
                    oMasterLC.LCStatusInInt =3;
                    break;
                }
                case 4 :{
                    oMasterLC.LCStatusInInt =4;
                    break;
                }
                case 5 :{
                    oMasterLC.LCStatusInInt =5;
                    break;
                }

            }

            return oMasterLC;
        };

        $scope.StatusChange = function (oMasterLC,sParamIdentifier)
        {
            debugger;
            var oMasterLC = $scope.SetOrderStatusExtra(oMasterLC);
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.MasterLCID== oMasterLC.MasterLCID)
                {
                    debugger;
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(sessionStorage.getItem('BaseAddress')+"/MasterLC/ChangeStatus",$.param(oMasterLC), config).then(
                            function (response)
                            {
                                //var result=jQuery.parseJSON(response.data);
                                var oMasterLC= jQuery.parseJSON(response.data);
                                if (oMasterLC.ErrorMessage=="" || oMasterLC.ErrorMessage == null)
                                {
                                    if(sParamIdentifier=="Undo Request")
                                    {
                                        alert("Successfully Undo the Request !");
                                    }
                                    else if(sParamIdentifier=="Req_for_Ammendment")
                                    {
                                        alert("Successfully Request for Ammendment!");
                                    }else   if(sParamIdentifier=="Approve")
                                    {
                                        alert("Approved Successfully!!");

                                    }else  if(sParamIdentifier=="Undo Approve")
                                    {
                                        alert("Successfully Undo Approve !");

                                    }
                                    else  if(sParamIdentifier=="Accept Revise")
                                    {
                                        alert("Successfully Accept Revise!");

                                    }
                                    else if(sParamIdentifier=="Cancel")
                                    {
                                        alert("Successfully Cancel Selected Item!");
                                    }
                                    $scope.gridOptions.data[index]=oMasterLC;
                                    $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                    $scope.gridApi.selection.selectRow(oMasterLC);
                                }else
                                {
                                    alert(oMasterLC.ErrorMessage);
                                }

                            },
                                function (response) { alert(jQuery.parseJSON(response.data).Message);}
                        );

                }
            }, $scope.gridOptions.data);



        };

        $scope.PrintPreview = function ()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/MasterLC/PrintMasterLCPreview?id='+oMasterLC.MasterLCID);
        };

        $scope.OrderTrack =  function () {
            debugger;
            var oMasterLC = $scope.gridApi.selection.getSelectedRows()[0];
            if(oMasterLC == null || oMasterLC.length <= 0){
                alert("Please Select an item from list");
                return;
            }
            if (oMasterLC.MLCWithOrder == false) {
                alert("Can't perfom order track operation");
                return;
            }
            var SelectedRowIndex = $scope.gridOptions.data.indexOf(oMasterLC);
            sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("MasterLCHeader", "Add Master LC With Order");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href =sessionStorage.getItem('BaseAddress')+"/MasterLC/ViewMasterLCWithOrder?id="+oMasterLC.MasterLCID+"&buid="+sessionStorage.getItem('BUID');
        };
        $scope.PrintList = function ()
        {
            var oMasterLCs=  $scope.gridOptions.data;//$('#tblMasterLC').datagrid('getRows');
            var ids ="";
            if(oMasterLCs.length >0)
            {

                for(var i =0;i<oMasterLCs.length;i++)
                {
                    ids =ids+oMasterLCs[i].MasterLCID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else
            {
                alert("Data not found ");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/MasterLC/PrintMasterList?sIDs='+ids);


        };

        $scope.searchByLCNo = function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var LCNo = $.trim($scope.LCNo);
                if (LCNo=!"")
                {
                    debugger;
                    $scope.BuyerName = "";
                    var tsv=((new Date()).getTime())/1000;
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.get(sessionStorage.getItem('BaseAddress') + '/MasterLC/SearchLCAndBuyer', {params:{sTempData:$scope.LCNo,bIsLC:true,BUID:sessionStorage.getItem('BUID'), ts:tsv} }, config).then(
                                function (response)
                                {
                                    var oResults = jQuery.parseJSON(response.data);
                                    if(oResults.length>0)
                                    {
                                        $scope.gridOptions.data = jQuery.parseJSON(response.data);
                                    }else{
                                        alert("Data Not found.");
                                    }

                                },
                                    function (response) { alert(jQuery.parseJSON(response.data).Message); }
                            );


                }
            }else if (code == 8) //backspace=8
            {
                $scope.LCNo='';
            }
        };

        $scope.searchByBuyerName = function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var BuyerName = $.trim($scope.BuyerName);
                if (BuyerName=!"")
                {
                    debugger;
                    $scope.LCNo = "";
                    var tsv=((new Date()).getTime())/1000;
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.get(sessionStorage.getItem('BaseAddress') + '/MasterLC/SearchLCAndBuyer', {params:{sTempData:$scope.BuyerName,bIsLC:false,BUID:sessionStorage.getItem('BUID'), ts:tsv} }, config).then(
                                function (response)
                                {
                                    var oResults = jQuery.parseJSON(response.data);
                                    if(oResults.length>0)
                                    {
                                        $scope.gridOptions.data = jQuery.parseJSON(response.data);
                                    }else{
                                        alert("Data Not found.");
                                    }

                                },
                                    function (response) { alert(jQuery.parseJSON(response.data).Message); }
                            );


                }
            }else if (code == 8) //backspace=8
            {
                $scope.BuyerName='';
            }
        };

        $scope.History = function ()
        {

            var data = $scope.gridApi.selection.getSelectedRows();
            var oMasterLC = data[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/MasterLC/GetMasterLCHistory',$.param(oMasterLC), config).then(
                                function (response)
                                {
                                    var results=jQuery.parseJSON(response.data);
                                    var oColumns = [];
                                    var oColumn = { field: 'PreviousStatusInString', name: 'Previous State', width: '20%' };
                                    oColumn = { field: 'CurrentStatusInString', name: 'Current State', width: '20%' };oColumns.push(oColumn);
                                    oColumn = { field: 'Note', name: 'Note', width: '15%' };oColumns.push(oColumn);
                                    oColumn = { field: 'OperateByName', name: 'Operation By', width: '30%' };oColumns.push(oColumn);
                                    oColumn = { field: 'OperationDateTimeInString', name: 'Operation Date', width: '15%' };oColumns.push(oColumn);
                                    var results=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        size:'lg',
                                        url:sessionStorage.getItem('BaseAddress')+'/CommonModal/CommonHistoryModal',
                                        modalcontroller:'ModalCommonHistoryCtrl',
                                        appcontroller:'MasterLCController',
                                        objs:results,
                                        multiSelect:false,
                                        showColumnFooter:false,
                                        pickertitle:'Master LC History List',
                                        objectFieldName:'MasterLCID',
                                        controllerName:'MasterLC',
                                        controlleractionName:'MasterLCHistoryPreview',
                                        columns:oColumns
                                    }
                                    var modalInstance=msModal.call(modalObj);

                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );

        };

        $scope.AddLCTransfer = function()
        {
            var oMasterLC = $scope.gridApi.selection.getSelectedRows()[0];
            if(oMasterLC==null || oMasterLC.MasterLCID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (parseInt(value.MasterLCID)== parseInt(oMasterLC.MasterLCID))
                {
                    sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("MasterLCHeader", "LC Transfer For Master LC : "+oMasterLC.MasterLCNo);
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/LCTransfer/ViewLCWiseTransfers?id="+oMasterLC.MasterLCID;
                }
            }, $scope.gridOptions.data);
        };

        $scope.AddCommercialInvioice= function()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.MasterLCID == data[0].MasterLCID)
                {
                    var oMasterLC = data[0];
                    sessionStorage.setItem("MasterLCs", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("MasterLCHeader", "Commercial Invoice For Master LC : "+oMasterLC.MasterLCNo);
                    sessionStorage.setItem("BackLinkCI", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/CommercialInvoice/ViewLCWiseCommercialInvoices?id="+oMasterLC.MasterLCID;
                }
            }, $scope.gridOptions.data);
        };

        //button hide
        $scope.btnAdvanceSearch = $scope.btnAdd = $scope.btnEdit = $scope.btnDetails = $scope.btnDelete = $scope.btnRequestforApproval = $scope.btnUndoRequest = $scope.btnWaitforApproval =  false;
        $scope.btnApproved = $scope.btnUndoApproved = $scope.btnRFRevise = $scope.btnAcceptAmendment = $scope.btnB2BLCAllocation = $scope.btnHistory = $scope.btnAmendment = $scope.btnWaitforRevise =  false;
        $scope.btnAddCommerecialInvoice = $scope.btnAddLCTransfer= $scope.btnOrderTrack = $scope.btnPreView = $scope.btnPrintList = $scope.btnDocumentSetup = $scope.btnUpdatePartyInfo= false;

        //button show
        if(PermissionChecker('AdvSearch','MasterLC',oAuthorizationRolesMapping)){$scope.btnAdvanceSearch = true;}
        if(PermissionChecker('Add','MasterLC',oAuthorizationRolesMapping)){$scope.btnAdd = $scope.btnRequestforApproval = $scope.btnWaitforRevise= $scope.btnRFRevise= $scope.btnDocumentSetup= $scope.btnUpdatePartyInfo= $scope.btnOrderTrack = true; }
        if(PermissionChecker('Edit','MasterLC',oAuthorizationRolesMapping)){$scope.btnEdit = true;}
        if(PermissionChecker('View','MasterLC',oAuthorizationRolesMapping)){$scope.btnDetails = $scope.btnHistory = $scope.btnAmendment= true;}
        if(PermissionChecker('Delete','MasterLC',oAuthorizationRolesMapping)){$scope.btnDelete = true;}
        if(PermissionChecker('UndoRequest','MasterLC',oAuthorizationRolesMapping)){$scope.btnUndoRequest = true;}
        if(PermissionChecker('WaitforApproval','MasterLC',oAuthorizationRolesMapping)){$scope.btnWaitforApproval = true;}
        if(PermissionChecker('Approved','MasterLC',oAuthorizationRolesMapping)){$scope.btnApproved = $scope.btnUndoApproved= true;}
        if(PermissionChecker('Amendment','MasterLC',oAuthorizationRolesMapping)){$scope.btnAcceptAmendment = true;}
        if(PermissionChecker('Add','LCTransfer',oAuthorizationRolesMapping)){$scope.btnAddLCTransfer = true;}
        if(PermissionChecker('Add','CommercialInvoice',oAuthorizationRolesMapping)){$scope.btnAddCommerecialInvoice = true;}
        if(PermissionChecker('View','B2BLCAllocation',oAuthorizationRolesMapping)){$scope.btnB2BLCAllocation = true;}
        if(PermissionChecker('Preview','MasterLC',oAuthorizationRolesMapping)){$scope.btnPreView = true;}
        if(PermissionChecker('PrintList','MasterLC',oAuthorizationRolesMapping)){$scope.btnPrintList = true;}
        if(parseInt(oClientOperationSetting.Value)==16)//for garments format
        {
            $scope.btnAddCommerecialInvoice = true;
            $scope.btnAddLCTransfer = false;
        }else
        {
            $scope.btnAddCommerecialInvoice = false; //for buying format
        }

    });

</script>
