<html>
@{
    ViewBag.Title = "Sale Order";
}
<body>
    @model ESimSol.BusinessObjects.SaleOrder
    <div id="divSaleOrder" class="menuMainCollectionTable" style="height:100%; width:100%">
        <div class="easyui-panel" title="Sale Order Configure" style="font-family:Tahoma;text-align:center;  width:100%;height:100%;">
            <div id="divSaleOrder" style="width:100%; height:88%;">
                <fieldset style="text-align:center;height:37%">
                    <legend style="font-weight:bold">Sale Order Info: </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold; width:100%;">
                        <tr>
                            <td style="width:10%; text-align:right">
                                Ref No :
                            </td>
                            <td style="width:15%">
                                @Html.TextBoxFor(model => model.RefNo, new { style = "width: 100%;", id = "txtRefNo" })
                            </td>
                            <td style="width:10%; text-align:right">
                                Sales No :
                            </td>
                            <td style="width:20%;text-align:left">
                                @Html.TextBoxFor(model => model.SalesNo, new { style = "width: 97%;", id = "txtSalesNo" })
                            </td>
                            <td style="width:15%; text-align:right;">
                                @Html.TextBoxFor(model => model.BUCode, new { style = "width: 94%;", id = "txtBusinessUnit", placeholder = "Business Unit" })
                            </td>
                            <td style="width:30%; text-align:center">
                                @Html.TextBoxFor(model => model.AreaCode, new { style = "width: 20%;", id = "txtArea", placeholder = "Area" })
                                @Html.TextBoxFor(model => model.ZoneCode, new { style = "width: 20%;", id = "txtZone", placeholder = "Zone" })
                                @Html.TextBoxFor(model => model.SiteCode, new { style = "width: 20%;", id = "txtSite", placeholder = "Site" })
                                @Html.TextBoxFor(model => model.DeptCode, new { style = "width: 20%;", id = "txtDept", placeholder = "Dept" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width:10%; text-align:right">
                                Date :
                            </td>
                            <td style="width:15%; text-align:left;">
                                <input id="txtSalesDateSt" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser,onSelect: CalculateCreditDays" style="width:100%;" />
                            </td>
                            <td style="width:10%; text-align:right">
                                Credit Days :
                            </td>
                            <td style="width:20%; text-align:left;">
                                @Html.TextBoxFor(model => model.CreditDays, new { style = "width: 100%;", id = "txtCreditDays" })
                            </td>
                            <td style="width:15%; text-align:right">
                                Maturity Date :
                            </td>
                            <td style="width:30%; text-align:left;">
                                <input id="txtMaturityDateSt" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser,onSelect: CalculateCreditDays" style="width:100%;" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width:10%; text-align:right">
                                Client :
                            </td>
                            <td colspan="5" style="width:90%; text-align:left;">
                                @Html.TextBoxFor(model => model.ClientName, new { style = "width: 96%;", id = "txtClientName" })
                                <a id="btnPickClient" href="javascript:void(0)" class="easyui-linkbutton" plain="false">P</a>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:10%; text-align:right">
                                DO No :
                            </td>
                            <td style="width:15%">
                                @Html.TextBoxFor(model => model.DONo, new { style = "width: 100%;", id = "txtDONo" })
                            </td>
                            <td style="width:10%; text-align:right">
                                Project :
                            </td>
                            <td style="width:20%; text-align:left">
                                @Html.TextBoxFor(model => model.ProjectName, new { style = "width: 83%;", id = "txtProjectName" })
                                <a id="btnPickProject" href="javascript:void(0)" class="easyui-linkbutton" plain="false">P</a>
                            </td>
                            <td style="width:15%; text-align:right">
                                MKT Person :
                            </td>
                            <td style="width:30%">
                                @Html.TextBoxFor(model => model.MerketPersonName, new { style = "width: 97%;", id = "txtMerketPersonName", placeholder = "Type MKT Person Name" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width:10%; text-align:right">
                                Remarks :
                            </td>
                            <td style="width:90%; text-align:left;" colspan="5">
                                @Html.TextBoxFor(model => model.Note, new { style = "width: 99%;", id = "txtNote" })
                            </td>
                        </tr>
                    </table>
                </fieldset>
                <div title="SaleOrder Details" style="padding:0px; width:100%;">
                    <div id="DetailtoolBar">
                        <select id="cboGroups" style="width:135px;"></select>
                        <input type="text" id="txtProductName" placeholder="Product Name" style="width:150px;" />
                        <input type="button" id="btnPickProduct" value="Pick" style="width:50px; font-size:12px;" />
                        <a id="btnRemoveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="RemoveDetail()">Remove</a>
                    </div>
                    <table id="tblSaleOrderDetail" title="Sale Order Details" class="easyui-datagrid" style="width:100%;  height:270px;" fitcolumns="true" fit="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#DetailtoolBar"
                           data-options="onClickRow: onClickRow">
                        <thead>
                            <tr>
                                <th field="VProductName" width="240" align="left">Group</th>
                                <th field="ProductName" width="540" align="left">Item</th>
                                <th field="UnitName" width="150" align="left">Unit</th>
                                <th width="200" data-options="field:'UnitPrice',align:'right'" formatter="formatPrice">Unit Price</th>
                                <th width="200" data-options="field:'Quantity',align:'right'" formatter="formatPrice">Quantity</th>
                                <th field="Amount" width="250" align="left" formatter="formatPrice">Amount</th>
                            </tr>
                        </thead>
                    </table>
                    <table border="0" style="width:97%;">
                        <tr>
                            <td id="tdTotalCaption" style="width: 550px; text-align: right; font-size: 12px; font-weight:bold"> Total : </td>
                            <td style="width:120px; text-align: right; font-size: 12px"> <label id="lblTotalAmount" style="text-align:right; font-size:12px; float: right; font-weight:bold">0</label> </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div style="width:100%; height:10%">
                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold; width:100%;">
                        <tr>
                            <td style="width:65%; text-align:right"></td>

                            <td style="width: 15%; text-align:right;">
                                @*<a id="btnViewVoucher" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="false">View Voucher</a>*@
                            </td>
                            <td style="width:10%;text-align:right;">
                                <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true" onclick="Approve()">Approve</a>
                                <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                            </td>
                            <td style="width:10%;text-align:right;">
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
    </div>
</body>
</html>


<script type="text/javascript">
var _oEmployees = [];
$(document).ready(function () {
    //debugger;
    var oSaleOrder =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oEmployees = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.Employees));
    var oGroups = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Groups));


    $('#divSaleOrder').data('SaleOrder',oSaleOrder);

    $("#cboMarketPerson").icsLoadCombo({List: oEmployees,OptionValue: "EmployeeID",DisplayText: "Name"});
    $("#cboMarketPerson").data('objs',oEmployees);
    $("#cboGroups").icsLoadCombo({List: oGroups,OptionValue: "VProductID",DisplayText: "ProductName",InitialValue:'--Select Group--'});
    $("#cboGroups").data('objs',oGroups);
    $('#txtCreditDays').icsCurrencyBox();
    

    
    var oVouchers=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.Vouchers));

    sessionStorage.setItem("Vouchers",JSON.stringify(oVouchers));


    
    
    $('#divSaleOrder input,select').prop('disabled',true);
    RefreshControl();
    CalculateCreditDays();
});
    function CalculateCreditDays(date){

        var dSalesDate=new Date($('#txtSalesDateSt').datebox('getValue'));
        var dMaturityDate=new Date($('#txtMaturityDateSt').datebox('getValue'));
        var nCreditDays= Math.floor((dMaturityDate - dSalesDate) / (1000*60*60*24));
        $('#txtCreditDays').val(nCreditDays);
    }
    $('#txtCreditDays').keyup(function(e){
        
        var nDays=parseInt($(this).val());
        var sSalesDate=$('#txtSalesDateSt').datebox('getValue');
        var dSalesDate=new Date(sSalesDate);
        var dMaturityDate=dSalesDate;
        dMaturityDate.setDate(dMaturityDate.getDate()+nDays);
        $('#txtMaturityDateSt').datebox('setValue', icsdateformat(dMaturityDate));
    });
    ////////Voucher View start
    $("#btnViewVoucher").click(function (){
        var oVouchers=jQuery.parseJSON(sessionStorage.getItem("Vouchers"));
        if(!oVouchers || oVouchers.length<=0){return false;}
        else if(parseInt(oVouchers.length)===1){
            var oParam={
                OperationName:'View Voucher',
                Voucher:oVouchers[oVouchers.length-1]
            }
            var url =sessionStorage.getItem('BaseAddress')+ "/Voucher/ViewAutoVoucherDetails";
            var oVoucher = window.showModalDialog(url, oParam, 'dialogHeight:515px;dialogWidth:1000px;dialogLeft:230;dialogTop:70;center:yes;resizable:no;status:no;scroll:no');
        }
        else{
            var oParam={
                OperationName:'Auto Voucher List',
                Vouchers:oVouchers
            }
            var url =sessionStorage.getItem('BaseAddress')+ "/Voucher/ViewAutoVouchers";
            window.showModalDialog(url, oParam, 'dialogHeight:515px;dialogWidth:1000px;dialogLeft:230;dialogTop:70;center:yes;resizable:no;status:no;scroll:no');
        }
    });
    ////////Voucher View end

    $('#cboGroups').change(function (){
        $("#txtProductName").val('');
        $("#txtProductName").removeClass('fontColorOfPickItem');
        $("#txtProductName").data('obj',null);
    });

    function SetTotal()
    {
        var oSaleOrderDetails = $('#tblSaleOrderDetail').datagrid('getRows');
        var nTotalAmount =0;

        if(oSaleOrderDetails.length>0)
        {
            for(var i =0;i<oSaleOrderDetails.length;i++)
            {
                nTotalAmount +=parseFloat(oSaleOrderDetails[i].Amount);
            }
        }
        $('#divSaleOrder').data('SaleOrder').Amount = nTotalAmount;
        document.getElementById('lblTotalAmount').innerHTML =formatPrice(parseFloat(nTotalAmount ) ,0);
    }

    function RemoveDetail()
    {
        var oSaleOrderDetail =$('#tblSaleOrderDetail').datagrid('getSelected');
        if(oSaleOrderDetail==null)
        {
            alert("Select At least One item !");
            return;
        }
        var SelectedRowIndex=$('#tblSaleOrderDetail').datagrid('getRowIndex',oSaleOrderDetail);
        if (!confirm("Confirm to Delete?")) return ;
        $('#tblSaleOrderDetail').datagrid('deleteRow',SelectedRowIndex);
        editIndex=undefined;
        SetTotal();
    }

    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#tblSaleOrderDetail').datagrid('validateRow', editIndex)) {
            $('#tblSaleOrderDetail').datagrid('endEdit', editIndex);
            $('#tblSaleOrderDetail').datagrid('selectRow', editIndex);
            var oSaleOrderDetail = $('#tblSaleOrderDetail').datagrid('getSelected');
            oSaleOrderDetail.Amount = parseFloat(parseFloat(oSaleOrderDetail.Quantity) * parseFloat(oSaleOrderDetail.UnitPrice));
            $('#tblSaleOrderDetail').datagrid('updateRow', { index: editIndex, row: oSaleOrderDetail });
            SetTotal();
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRow(index){

        if (editIndex != index){
            if (endEditing())
            {
                $('#tblSaleOrderDetail').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editIndex  = index;
            }
            else
            {
                $('#tblSaleOrderDetail').datagrid('selectRow', editIndex);
            }
        }
    }


function RefreshControl()
{
    $('#txtSalesDateSt').datebox('setValue', $('#divSaleOrder').data('SaleOrder').SalesDateSt);
    $('#txtMaturityDateSt').datebox('setValue', $('#divSaleOrder').data('SaleOrder').MaturityDateSt);
    $("#cboMarketPerson").val($('#divSaleOrder').data('SaleOrder').MarketPersonID);
    DynamicRefreshList($('#divSaleOrder').data('SaleOrder').SaleOrderDetails,'tblSaleOrderDetail');

    $('#btnApprove').hide();
        
    if(sessionStorage.getItem("SaleOrderHeader")=="View Sale Order")
    {
        $('#btnSave').hide();
        $('#btnPickClient').hide();
        $('#btnPickProject').hide();
        $('#btnRemoveDetail').hide();
        $("#divSaleOrder input,select").prop("disabled", true);
    }
    if(sessionStorage.getItem("SaleOrderHeader")=="Approve Sale Order")
    {
        $("#divSaleOrder input,select").prop("disabled", true);
        $('#btnPickClient').hide();
        $('#btnPickProject').hide();
        $('#btnRemoveDetail').hide();
        $('#btnApprove').show();
        $('#btnSave').hide();
    }
}

//Pick Business Unit
$("#txtBusinessUnit").keydown(function (e) {
    var code = (e.keyCode ? e.keyCode : e.which);
    if (e.which == 13) // Enter Press
    {
        if($('#txtBusinessUnit').val()===null || $('#txtBusinessUnit').val()==="")
        {
            alert("Please Press Enter With Business Code OR Name!");
            $('#txtBusinessUnit').focus();
            return false;
        }
        var oBusinessUnit = {
            NameCode: $('#txtBusinessUnit').val()
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oBusinessUnit,
            ControllerName: "BusinessUnit",
            ActionName: "GetsBUByCodeOrName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BusinessUnitID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "Code", title: "Code", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBusinessUnit',
                        winclass: 'clsBusinessUnit',
                        winwidth: 500,
                        winheight: 420,
                        tableid: 'tblBusinessUnit',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Business Unit List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });
    }
    else if (e.which == 8 || e.which==46) //backspace=8
    {
        $('#txtBusinessUnit').removeClass('fontColorOfPickItem');
        $('#divSaleOrder').data('SaleOrder').BUID = 0;
        $('#divSaleOrder').data('SaleOrder').BusinessUnitName = "";
        $('#divSaleOrder').data('SaleOrder').AreaID = 0;
        $('#divSaleOrder').data('SaleOrder').ZoneID = 0;
        $('#divSaleOrder').data('SaleOrder').SiteID = 0;
        $('#txtArea').val("");
        $('#txtZone').val("");
        $('#txtSite').val("");
        
    }
});


//Pick area
$("#txtArea").keydown(function (e) {
    debugger;
    var code = (e.keyCode ? e.keyCode : e.which);
    if (e.which == 13) // Enter Press
    {
        if(parseInt($('#divSaleOrder').data('SaleOrder').BUID)<=0)
        {
            alert("Please Select Business Unit");
            $('#txtBusinessUnit').focus();
            return;
        }
        if($('#txtArea').val()===null || $('#txtArea').val()==="")
        {
            alert("Please Press Enter With Area Code OR Name!");
            $('#txtArea').focus();
            return false;
        }
        if($('#txtArea').val()==="00")
        {
            $('#txtDept').focus();
            return false;
        }
        var oLocation = {
            BusinessUnitID : parseInt($('#divSaleOrder').data('SaleOrder').BUID),
            ParentID : 1,
            LocationNameCode : $('#txtArea').val()
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsByCodeOrName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].LocationID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "LocCode", title: "Code", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winArea',
                        winclass: 'clsArea',
                        winwidth: 500,
                        winheight: 420,
                        tableid: 'tblAreas',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Code',
                        windowTittle: 'Area List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });
    }
    else if (e.which == 8 || e.which==46) //backspace=8
    {
        $('#txtArea').removeClass('fontColorOfPickItem');
        $('#divSaleOrder').data('SaleOrder').AreaID = 0;
        $('#divSaleOrder').data('SaleOrder').AreaName = "";
        $('#divSaleOrder').data('SaleOrder').ZoneID = 0;
        $('#divSaleOrder').data('SaleOrder').SiteID = 0;
        
    }
});


//Pick Zone
$("#txtZone").keydown(function (e) {
    debugger;
    var code = (e.keyCode ? e.keyCode : e.which);
    if (e.which == 13) // Enter Press
    {
        if(parseInt($('#divSaleOrder').data('SaleOrder').AreaID)<=0)
        {
            alert("Please Select Area");
            $('#txtArea').focus();
            return;
        }
        if($('#txtZone').val()===null || $('#txtZone').val()==="")
        {
            alert("Please Press Enter With Zone Code OR Name!");
            $('#txtZone').focus();
            return false;
        }
        if($('#txtZone').val()==="00")
        {
            $('#txtDept').focus();
            return false;
        }
        var oLocation = {
            BusinessUnitID : parseInt($('#divSaleOrder').data('SaleOrder').BUID),
            ParentID : parseInt($('#divSaleOrder').data('SaleOrder').AreaID),
            LocationNameCode : $('#txtZone').val()
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsByCodeOrName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].LocationID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "LocCode", title: "Code", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winZone',
                        winclass: 'clsZone',
                        winwidth: 500,
                        winheight: 420,
                        tableid: 'tblZones',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Code',
                        windowTittle: 'Zone List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });
    }
    else if (e.which == 8 || e.which==46) //backspace=8
    {
        $('#txtZone').removeClass('fontColorOfPickItem');
        $('#divSaleOrder').data('SaleOrder').ZoneID = 0;
        $('#divSaleOrder').data('SaleOrder').ZoneName = "";
        $('#divSaleOrder').data('SaleOrder').SiteID = 0;
        
    }
});


//Pick Site
$("#txtSite").keydown(function (e) {
    debugger;
    var code = (e.keyCode ? e.keyCode : e.which);
    if (e.which == 13) // Enter Press
    {
        if(parseInt($('#divSaleOrder').data('SaleOrder').ZoneID)<=0)
        {
            alert("Please Select Zone");
            $('#txtZone').focus();
            return;
        }
        if($('#txtSite').val()===null || $('#txtSite').val()==="")
        {
            alert("Please Press Enter With Site Code OR Name!");
            $('#txtSite').focus();
            return false;
        }
        if($('#txtSite').val()==="0000")
        {
            $('#txtDept').focus();
            return false;
        }
        var oLocation = {
            BusinessUnitID : parseInt($('#divSaleOrder').data('SaleOrder').BUID),
            ParentID : parseInt($('#divSaleOrder').data('SaleOrder').ZoneID),
            LocationNameCode : $('#txtSite').val()
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsByCodeOrName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].LocationID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "LocCode", title: "Code", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSite',
                        winclass: 'clsSite',
                        winwidth: 500,
                        winheight: 420,
                        tableid: 'tblSites',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Code',
                        windowTittle: 'Site List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });
    }
    else if (e.which == 8 || e.which==46) //backspace=8
    {
        $('#txtSite').removeClass('fontColorOfPickItem');
        $('#divSaleOrder').data('SaleOrder').SiteID = 0;
        $('#divSaleOrder').data('SaleOrder').SiteName = "";
    }
});


//Pick Site
$("#txtDept").keydown(function (e) {
    var code = (e.keyCode ? e.keyCode : e.which);
    if (e.which == 13) // Enter Press
    {
        debugger;
        if($('#txtDept').val()===null || $('#txtDept').val()==="")
        {
            alert("Please Press Enter With Dept Code OR Name!");
            $('#txtDept').focus();
            return false;
        }
        if($('#txtDept').val()==="00")
        {
            $('#cboSaleOrderType').focus();
            return false;
        }
        var oDepartment = {
            NameCode : $('#txtDept').val()
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsByCodeOrName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (parseInt(response.objs[0].DepartmentID) > 0) {
                    var tblColums = []; var oColumn = { field: "Code", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Department Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winDepartment',
                        winclass: 'clsDepartment',
                        winwidth: 500,
                        winheight: 420,
                        tableid: 'tblDepartment',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Department List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("Data Not Found!");
            }
        });
    }
    else if (e.which == 8 || e.which==46) //backspace=8
    {
        $('#txtDept').removeClass('fontColorOfPickItem');
        $('#divSaleOrder').data('SaleOrder').DeptID = 0;
        $('#divSaleOrder').data('SaleOrder').DepartmentName = "";
    }
});


//Client Part
$("#txtClientName").keydown(function (e) {
    debugger;
    var code = (e.keyCode ? e.keyCode : e.which);
    if (e.which == 13) // Enter Press
    {
        if($('#txtClientName').val()===null || $('#txtClientName').val()==="")
        {
            alert("Please Press Enter With Vendor Name!");
            $('#txtClientName').focus();
            return false;
        }
        var oContractor = { Param: '1~' + document.getElementById('txtClientName').value };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    debugger;
                    var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 150, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winContractors',
                        winclass:'clsSupplier',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblSuppliers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Vendor List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("Data Not Found!");
            }
        });
    }
    else if (e.which == 8 || e.which == 46) //backspace=8
    {
        $('#txtClientName').removeClass('fontColorOfPickItem');
        $('#divSaleOrder').data('SaleOrder').ClientID = 0;
    }
});
$("#btnPickClient").click(function () {
    var oContractor = { Param:"1"};
    var obj = {
        BaseAddress: sessionStorage.getItem('BaseAddress'),
        Object: oContractor,
        ControllerName: "Contractor",
        ActionName: "GetsByContractorType",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {
        debugger;
        if (response.status && response.objs.length > 0) {
            if (response.objs[0].ContractorID > 0) {
                var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "ContractorTypeInString", title: "Type", width: 100, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "Phone", title: "Phone", width: 100, align: "left" };tblColums.push(oColumn);
                var oPickerParam = {
                    winid: 'winContractors',
                    winclass: 'clsSupplier',
                    winwidth: 500,
                    winheight: 420,
                    tableid: 'tblSuppliers',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: false,
                    searchingbyfieldName: 'Name',
                    windowTittle: 'Vendor List'
                };
                $.icsPicker(oPickerParam);
                IntializePickerbutton(oPickerParam);
            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });

});

//Product Part
$("#txtProductName").keydown(function (e) {
    debugger;
    var code = (e.keyCode ? e.keyCode : e.which);
    if (e.which == 13) // Enter Press
    {
        //if(!parseInt($('#cboGroups').val()) || parseInt($('#cboGroups').val())<=0){
        //    alert("Please select Group");  
        //    $('#cboGroups').focus();
        //    return false;
        //}
        var TextBox=$(this);
            
        var oProduct = {ProductName: $('#txtProductName').val(), VProductID: parseInt($('#cboGroups').val())?parseInt($('#cboGroups').val()):0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "SaleOrder",
            ActionName: "GenerateSODs",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width: '30%', align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Name", width: '67%', align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ProductName',
                        windowTittle: 'Product List',
                        TextBox:TextBox
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }                    
        });
    }
    if (e.which === 8 || e.which===46) //backspace=8
    {
        $("#txtProductName").val('');
        $("#txtProductName").removeClass('fontColorOfPickItem');
        $("#txtProductName").data('obj',null);
    }
});
$("#btnPickProduct").click(function () {
    //if(!parseInt($('#cboGroups').val()) || parseInt($('#cboGroups').val())<=0){
    //    alert("Please select Group");  
    //    $('#cboGroups').focus();
    //    return false;
    //}
        
    var oProduct = {VProductID: parseInt($('#cboGroups').val())?parseInt($('#cboGroups').val()):0};
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oProduct,
        ControllerName: "SaleOrder",
        ActionName: "GenerateSODs",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {
        debugger;
        if (response.status && response.objs.length > 0) {
                
            if (response.objs[0].ProductID > 0) {
                var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width: 150, align: "left" }; tblColums.push(oColumn);
                oColumn = { field: "ProductName", title: "Name", width: 450, align: "left" }; tblColums.push(oColumn);
                var oPickerParam = {
                    winid: 'winProductPicker',
                    winclass: 'clsProductPicker',
                    winwidth: 600,
                    winheight: 460,
                    tableid: 'tblProductPicker',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: false,
                    searchingbyfieldName: 'ProductName',
                    windowTittle: 'Product List'
                };
                $.icsPicker(oPickerParam);
                IntializePickerbutton(oPickerParam);//multiple return
            }
            else {
                alert(response.objs[0].ErrorMessage);
            }
        }
    });

});

function IntializePickerbutton(oPickerobj) {
    debugger;
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
        debugger;
        //for Single Select
        SetPickerValueAssign(oPickerobj);
    });
    $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
        if (e.which == 13)//enter=13
        {
            SetPickerValueAssign(oPickerobj);

        }
    });
}

function SetPickerValueAssign(oPickerobj) {
    var oreturnObj = null, oreturnObjs = [];
    if (oPickerobj.multiplereturn) {
        oreturnObjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
    } else {
        oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
    }
    $("#" + oPickerobj.winid).icsWindow("close");
    $("#" + oPickerobj.winid).remove();
    if (oPickerobj.winid == 'winContractors')
    {
        if (oreturnObj != null && oreturnObj.ContractorID > 0) {
            $('#txtClientName').val(oreturnObj.Name);
            $('#divSaleOrder').data('SaleOrder').ClientID = parseInt(oreturnObj.ContractorID);
            $('#divSaleOrder').data('SaleOrder').ClientName = oreturnObj.Name;
            $('#txtClientName').addClass('fontColorOfPickItem');
            $("#txtClientName").data('obj',oreturnObj);
            $('#txtClientName').focus();
        }
    }else if (oPickerobj.winid == 'winBusinessUnit') {
        if (oreturnObj != null && oreturnObj.BusinessUnitID > 0) {
            $('#txtBusinessUnit').val(oreturnObj.Code);
            $('#txtBusinessUnit').addClass('fontColorOfPickItem');
            $('#divSaleOrder').data('SaleOrder').BUID = parseInt(oreturnObj.BusinessUnitID);
            $('#divSaleOrder').data('SaleOrder').BusinessUnitName = oreturnObj.Name;
            $("#txtBusinessUnit").data('obj',oreturnObj);
            $('#txtArea').focus();
        }
    }else if (oPickerobj.winid == 'winArea') {
        if (oreturnObj != null && oreturnObj.LocationID > 0) {
            $('#txtArea').val(oreturnObj.LocCode);
            $('#txtArea').addClass('fontColorOfPickItem');
            $('#divSaleOrder').data('SaleOrder').AreaID = parseInt(oreturnObj.LocationID);
            $('#divSaleOrder').data('SaleOrder').AreaName = oreturnObj.Name;
            $("#txtArea").data('obj',oreturnObj);
            $('#txtZone').focus();
        }
    }else if (oPickerobj.winid == 'winZone') {
        if (oreturnObj != null && oreturnObj.LocationID > 0) {
            $('#txtZone').val(oreturnObj.LocCode);
            $('#txtZone').addClass('fontColorOfPickItem');
            $('#divSaleOrder').data('SaleOrder').ZoneID = parseInt(oreturnObj.LocationID);
            $('#divSaleOrder').data('SaleOrder').ZoneName = oreturnObj.Name;
            $("#txtZone").data('obj',oreturnObj);
            $('#txtSite').focus();
        }
    } else if (oPickerobj.winid == 'winSite') {
        if (oreturnObj != null && oreturnObj.LocationID > 0) {
            $('#txtSite').val(oreturnObj.LocCode);
            $('#txtSite').addClass('fontColorOfPickItem');
            $('#divSaleOrder').data('SaleOrder').SiteID = parseInt(oreturnObj.LocationID);
            $('#divSaleOrder').data('SaleOrder').SiteName = oreturnObj.Name;
            $("#txtSite").data('obj',oreturnObj);
            $('#txtDept').focus();
        }
    } else if (oPickerobj.winid == 'winDepartment') {
        if (oreturnObj != null && oreturnObj.DepartmentID > 0) {
            $('#txtDept').val(oreturnObj.Code);
            $('#txtDept').addClass('fontColorOfPickItem');
            $('#divSaleOrder').data('SaleOrder').DeptID = parseInt(oreturnObj.DepartmentID);
            $('#divSaleOrder').data('SaleOrder').DepartmentName = oreturnObj.Name;
            $("#txtDept").data('obj',oreturnObj);
        }
    } else if (oPickerobj.winclass == 'clsProductPicker')
    {
        if (oreturnObj != null && oreturnObj.ProductID > 0) {
            $("#txtProductName").val(oreturnObj.ProductName);
            $("#txtProductName").addClass('fontColorOfPickItem');

            if(IsDuplicate(oreturnObj.ProductID)){
                $('#tblSaleOrderDetail').datagrid('appendRow',oreturnObj);
                SetTotal();
            }

            $("#txtProductName").data('obj',oreturnObj);
            $("#txtProductName").focus();
        }
    }

}

function IsDuplicate(nID)
{
    var oSaleOrderDetails = $('#tblSaleOrderDetail').datagrid('getRows');
    for(var i =oSaleOrderDetails.length-1;i>=0;i--)
    {
            
        if(parseInt(oSaleOrderDetails[i].ProductID)== parseInt(nID))
        {
            alert('"'+oSaleOrderDetails[i].ProductName + '" already exists!');
            return false;
            //$('#tblSaleOrderDetail').datagrid('deleteRow',i);
        }
    }
    return true;
}

function ValidateInput()
{
    var oSaleOrder=$('#divSaleOrder').data('SaleOrder');
    if (!parseInt(oSaleOrder.BUID) || parseInt(oSaleOrder.BUID)<=0) {
        alert("Please slect Business Unit!");
        $("#txtBusinessUnit").addClass("errorFieldBorder");
        $("#txtBusinessUnit").focus();
        return false;
    } else {
        $("#txtBusinessUnit").removeClass("errorFieldBorder");
    }

    if(document.getElementById("txtSalesNo").value==null || document.getElementById("txtSalesNo").value=="")
    {
        alert("Please Type Sales No.");
        $('#txtSalesNo').focus();
        return false;
    }

    if(parseInt(oSaleOrder.ClientID)<=0)
    {
        alert("Please Pick Client.");
        $('#txtClientName').focus();
        return false;
    }
   
    if(document.getElementById("txtDONo").value==null || document.getElementById("txtDONo").value=="")
    {
        alert("Please Type Do No.");
        $('#txtDONo').focus();
        return false;
    }
    if(parseInt($('#cboMarketPerson').val())<=0)
    {
        alert("Please Select Market Person");
        $('#cboMarketPerson').focus();
        return false;
    }

    var oSaleOrderDetails = $('#tblSaleOrderDetail').datagrid('getRows');
    if(!oSaleOrderDetails || oSaleOrderDetails.length<=0)
    {
        alert('Please add Product!');
        return false;
    }

    for(var i =oSaleOrderDetails.length-1;i>=0;i--)
    {
        if(!parseFloat(oSaleOrderDetails[i].Amount) || parseFloat(oSaleOrderDetails[i].Amount)== 0)
        {
            alert('Please Enter UnitPrice and/or Quantity for "'+oSaleOrderDetails[i].ProductName +'"!');
            return false;
        }
    }

    
    return true;
}


function RefreshObject()
{
    debugger;
    var oTempSaleOrder=$('#divSaleOrder').data('SaleOrder');
    var oSaleOrder= {
        SaleOrderID :  $('#divSaleOrder').data('SaleOrder').SaleOrderID,
        RefNo: $("#txtRefNo").val(),
        SalesNo:$("#txtSalesNo").val(),
        ClientID: $('#divSaleOrder').data('SaleOrder').ClientID,
        DONo:$("#txtDONo").val(),
        MarketPersonID:$('#cboMarketPerson').val(),
        BUID :parseInt(oTempSaleOrder.BUID),
        AreaID : parseInt(oTempSaleOrder.AreaID),
        ZoneID : parseInt(oTempSaleOrder.ZoneID),
        SiteID : parseInt(oTempSaleOrder.SiteID),
        DeptID : parseInt(oTempSaleOrder.DeptID),
        Note : $("#txtNote").val(),
        Amount:parseFloat(oTempSaleOrder.Amount),
        SalesDate :$('#txtSalesDateSt').datebox('getValue'),
        MaturityDate :$('#txtMaturityDateSt').datebox('getValue'),
        SaleOrderDetails:$('#tblSaleOrderDetail').datagrid('getRows')
    };
    return oSaleOrder;
}

function Save()
{
    debugger;
    if(!ValidateInput()) return;
    var oSaleOrder=RefreshObject();
    $.ajax({
        type: "POST",
        dataType: "json",
        url : sessionStorage.getItem('BaseAddress')+"/SaleOrder/Save",
        traditional: true,
        data:  JSON.stringify(oSaleOrder),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            //debugger;
            var oSaleOrder = jQuery.parseJSON(data);
            if (oSaleOrder.ErrorMessage=="" || oSaleOrder.ErrorMessage==null) {
                alert("Data Saved sucessfully");
                var oSaleOrders = sessionStorage.getItem("SaleOrders");
                var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                if (oSaleOrders != null) {
                    oSaleOrders = jQuery.parseJSON(oSaleOrders);
                }
                else {
                    oSaleOrders = [];
                }
                if (nIndex != -1) {
                    oSaleOrders[nIndex] = oSaleOrder;
                }
                else {
                    sessionStorage.setItem("SelectedRowIndex", oSaleOrders.length);
                    oSaleOrders.push(oSaleOrder);
                }
                sessionStorage.setItem("SaleOrders", JSON.stringify(oSaleOrders));
                window.location.href = sessionStorage.getItem("SaleOrderBackLink");
            }
            else {
                alert(oSaleOrder.ErrorMessage);
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }

    });
}

function Approve()
{
    debugger;
    if (!confirm("Confirm to Approve?")) return false;
    if(!ValidateInput()) return false;
    var oSaleOrder=RefreshObject();
    $.ajax({
        type: "POST",
        dataType: "json",
        url : sessionStorage.getItem('BaseAddress')+"/SaleOrder/Approve",
        traditional: true,
        data:  JSON.stringify(oSaleOrder),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            //debugger;
            var oSaleOrder = jQuery.parseJSON(data);
            if ((oSaleOrder.ErrorMessage=="" || oSaleOrder.ErrorMessage==null ) && parseInt(oSaleOrder.ApprovedBy)!=0) {
                alert("Sucessfully Approved");
                var oSaleOrders = sessionStorage.getItem("SaleOrders");
                var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                if (oSaleOrders != null) {
                    oSaleOrders = jQuery.parseJSON(oSaleOrders);
                }
                else {
                    oSaleOrders = [];
                }
                if (nIndex != -1) {
                    oSaleOrders[nIndex] = oSaleOrder;
                }
                else {
                    sessionStorage.setItem("SelectedRowIndex", oSaleOrders.length);
                    oSaleOrders.push(oSaleOrder);
                }
                sessionStorage.setItem("SaleOrders", JSON.stringify(oSaleOrders));
                window.location.href = sessionStorage.getItem("SaleOrderBackLink");
            }
            else {
                alert(oSaleOrder.ErrorMessage);
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }

    });
}

function Close()
{
    window.location.href = sessionStorage.getItem("SaleOrderBackLink");
}
</script>