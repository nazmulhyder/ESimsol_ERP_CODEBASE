@{
    ViewBag.Title = "Payment";
}
@model ESimSol.BusinessObjects.Payment
@{var MenuID = HttpContext.Current.Session[SessionInfo.MenuID];}
<!DOCTYPE html>

<html>
    <head>
        <title>Payment</title>
    </head>
    <body class="menuMainCollectionTable">
        <div id="p" class="easyui-panel" title="Payment" style="width:100%;height:100%; padding:10px;background:#fafafa;">
            <div class="wrapperForNextPage">
                <fieldset class="wrapperContentFieldSet">
                    <legend>Payment Info</legend>
                    <table>
                        <tr>
                            <td style="text-align:right;">
                                <label>
                                    Payment No :
                                </label>
                            </td>
                            <td>
                                <input id="txtPaymentNo" type="text" placeholder="Auto Generate" disabled/>
                            </td>
                            <td style="width:300px;">
                                <label>Money Receipt : </label>
                                <input id="txtMoneyReceipt" type="text" />
                            </td>
                            <td>
                                <label>
                                    Date :
                                </label>
                            </td>
                            <td>
                                <input id="dDate" type="text" style="width: 100%;float:right;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align:right;">
                                <label>
                                    Buyer :
                                </label>
                            </td>
                            <td colspan="4">
                                <input id="txtBuyer" type="text" placeholder="Type Name & Press Enter" style="width:99%;" />
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align:right;"></td>
                            <td colspan="4">
                                <table id="tblPaymentPIs" class="easyui-datagrid" style="width:700px;height:200px;margin:0;" data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbarPaymentPI', onClickRow: onClickRow">
                                    <thead>
                                        <tr>
                                            <th field="PINo" width="20%">PI No</th>
                                            <th field="ExportPIDateSt" width="15%" align="center">PI Date</th>
                                            <th field="ExportPIAmount" width="15%" align="right">PI Value</th>
                                            <th field="Received" width="15%" align="right">Received</th>
                                            <th field="Remaining" width="15%" align="right">Remaining</th>
                                            <th data-options="field:'Amount',width:100,align:'right',editor:{type:'numberbox',options:{min:0,precision:2}}" align="right">Amount</th>
                                        </tr>
                                    </thead>
                                </table>
                                <div id="toolbarPaymentPI">
                                    <input id="txtPINo" type="text" placeholder="Type PI No & Press Enter" style="width:144px;">
                                    <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                                    <a id="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                                    <div style="float:right;">
                                        <select id="cboCurrency" style="min-width:100px;"></select>
                                        <label>Con Rate : </label>
                                        <input id="txtConRate" type="text" class="number" value="1" style="width:40px;">
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align:right;">
                                <label>
                                    Payment :
                                </label>
                            </td>
                            <td>
                                <select id="cboPaymentMethod" style="width:103%;"></select>
                            </td>
                            <td colspan="2" style="text-align:right;">
                                <label>
                                    Amount :
                                </label>
                            </td>
                            <td>
                                <input id="txtAmount" type="text" class="number" disabled/>
                                (<label id="lblCurrencyName"></label>)
                            </td>
                        </tr>
                        <tr class="hideShow">
                            <td style="text-align:right;">
                                <label>
                                    Bank :
                                </label>
                            </td>
                            <td>
                                <input id="txtBank" type="text" placeholder="Type Name & Press Enter" style="width:100%;" />
                            </td>
                            <td colspan="2" style="text-align:right;">
                                <label>
                                    Branch :
                                </label>
                            </td>
                            <td>
                                <select id="cboBranch" style="width:103%; max-width:192px;"></select>
                            </td>
                        </tr>
                        <tr class="hideShow">
                            <td style="text-align:right;">
                                <label>
                                    Cheque Dt :
                                </label>
                            </td>
                            <td>
                                <input id="dChequeDate" type="text" style="width: 100px;float:right;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                            <td colspan="2" style="text-align:right;">
                                <label>
                                    Cheque No :
                                </label>
                            </td>
                            <td>
                                <input id="txtChequeNo" type="text" placeholder="Write Doc No" style="width:100%;" />
                            </td>
                        </tr>
                        <tr class="hideShow">
                            <td style="text-align:right;">
                                <label>
                                    Account No :
                                </label>
                            </td>
                            <td>
                                <input id="txtAccountNo" type="text" placeholder="Write Account No" style="width:100%;" />
                            </td>
                            <td colspan="3" style="text-align:right;">
                                <input id="chkAccountPay" type="checkbox">Account Pay
                            </td>
                        </tr>
                        <tr class="hideShow">
                            <td style="text-align:right;">
                                <label>
                                    Pay To :
                                </label>
                            </td>
                            <td colspan="4">
                                <input id="txtPayTo" type="text" placeholder="Write the text that your Cheque shows in pay to." style="width:100%;" />
                            </td>
                        </tr>
                        <tr class="hideShow">
                            <td style="text-align:right;">
                                <label>
                                    Note :
                                </label>
                            </td>
                            <td colspan="4">
                                <input id="txtNote" type="text" style="width:100%;" />
                            </td>
                        </tr>
                        <tr class="hideShow">
                            <td style="text-align:right;"></td>
                            <td colspan="4">
                                <input id="chkChequeAttachment" type="checkbox" />Cheque Attachment
                            </td>
                        </tr>
                        <tr class="hideShow">
                            <td style="text-align:right;" class="CAHideShow"></td>
                            <td colspan="4" class="CAHideShow">
                                <input id="fileInput" type="file" style="width:100px;" />
                            </td>
                        </tr>
                    </table>
                </fieldset>
                <fieldset class="actionfieldsetstyle">
                    <legend>Actions : </legend>
                    <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    <a id="btnBack" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-back" plain="true">Back</a>
                </fieldset>
            </div>
        </div>
    </body>
</html>
<script type="text/javascript">
    var _nMenuid=0;
    var _oPayment=null;
    var _oPaymentMethods = [];
    var _oCurrencys=[];
    var _oCompany=null;
    var _isInvalidAmount=false;
    var _sInvalidAmountMessage="Invalid Detail";
    var _oTempObj = {
        BuyerID : 0,
        BankID : 0
    }

    $(document).ready(function () {
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(MenuID));
        _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oPayment = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oPaymentMethods = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PaymentMethods));
        _oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        _oCompany =  @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));

        $("#txtBuyer").focus();
        SetDefaultValues();
        LoadAllComboboxes();
        SetCurrencyName();
        RefreshControl(_oPayment);
        TotalAmountCal();
    });

    $(document).keydown(function (e) { if (e.keyCode === 27) { $("div").icsWindow("close")}});

    function RefreshObject(){
        TotalAmountCal();
        var oPayment={
            PaymentID : (_oPayment == null ? 0 : _oPayment.PaymentID),
            PaymentNo : $.trim($("#txtPaymentNo").val()),
            MoneyReceipt : $.trim($("#txtMoneyReceipt").val()),
            ContractorID : _oTempObj.BuyerID,
            PaymentMethodInInt : parseInt($("#cboPaymentMethod").val()),
            CurrencyID : parseInt($("#cboCurrency").val()),
            ConversionRate : parseFloat($("#txtConRate").val()),
            Amount : parseFloat($("#txtAmount").val()),
            BankBranchID : parseInt($("#cboBranch").val()),
            DocDate : $('#dChequeDate').datebox('getValue'),
            AccountNo:$.trim($("#txtAccountNo").val()),
            DocNo : $.trim($("#txtChequeNo").val()),
            PayTo : $.trim($("#txtPayTo").val()),
            IsAccountPay : $("#chkAccountPay").is(':checked'),
            Note:$.trim($("#txtNote").val()),
            PaymentDate : $('#dDate').datebox('getValue'),
            PaymentPIs : $("#tblPaymentPIs").datagrid("getRows")
        };
        return oPayment;
    }

    $("#btnRefresh").click(function(){
        endEditing();
        if(!CheckDetail()){
            return false;
        }
        TotalAmountCal();
    });

    $("#cboCurrency").change(function(){
        SetCurrencyName();
    });

    $("#txtBank").keydown(function(e){
        if(e.keyCode === 13)
        {
            var oBank={
                Name : $.trim($(this).val())
            };

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBank,
                ControllerName: "Bank",
                ActionName: "Gets",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].BankID > 0) {
                        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 120, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winBanks',
                            winclass: 'clsBankPI',
                            winwidth: 400,
                            winheight: 460,
                            tableid: 'tblBanks',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Bank List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }
                }
                else
                {
                    alert("Sorry, No Export PI Found.");
                }
            });
        }
        else if(e.keyCode === 8)
        {
            $(this).removeClass("fontColorOfPickItem");
            $("#cboBranch").empty();
            _oTempObj.BankID=0;
        }
    });

    $("#btnRemove").click(function(){
        var oPaymentPI = $("#tblPaymentPIs").datagrid("getSelected");
        if(oPaymentPI == null || oPaymentPI.PIID < 0)
        {
            alert("Please select an item from list.");
            return false;
        }
        var nRowIndex = $("#tblPaymentPIs").datagrid("getRowIndex", oPaymentPI);
        $("#tblPaymentPIs").datagrid("deleteRow", nRowIndex);
        TotalAmountCal();
    });

    $("#txtPINo").keydown(function(e){
        if(e.keyCode === 13)
        {
            if(_oTempObj.BuyerID <= 0){
                alert("Please select a buyer");
                $("#txtBuyer").focus();
                $("#txtBuyer").addClass("errorFieldBorder");
                return false;
            }else{
                $("#txtBuyer").removeClass("errorFieldBorder");
            }

            var oExportPI = {
                BuyerID : _oTempObj.BuyerID,
                PINo : $.trim($("#txtPINo").val()),
                PaymentTypeInInt:2,
                IsApproved:true
            };

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oExportPI,
                ControllerName: "ExportPI",
                ActionName: "GetsBuyerExportPIForPayment",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ExportPIID > 0) {
                        var tblColums = []; var oColumn = { field: "PINo", title: "PI No", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "IssueDateInString", title: "PI Date", width: 120, align: "center" }; tblColums.push(oColumn);
                        oColumn = { field: "AmountSt", title: "Amount", width: 100, align: "right" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winExportPIs',
                            winclass: 'clsExportPI',
                            winwidth: 400,
                            winheight: 460,
                            tableid: 'tblExportPIs',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'PINo',
                            windowTittle: 'Bill List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }
                }
                else
                {
                    alert("Sorry, No Export PI Found.");
                }
            });
        }
        else if(e.keyCode === 8){
            $(this).removeClass("fontColorOfPickItem");
        }
    });

    $("#txtBuyer").keydown(function(e)
    {
        if(e.keyCode === 13)
        {
            
            var oContractor = {
                Params : 2 + "~" + $.trim($(this).val()) //Buyer
            };

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {
                
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {
                        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ContractorTypeInString", title: "Type", width: 150, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winBuyers',
                            winclass: 'clsBuyer',
                            winwidth: 400,
                            winheight: 460,
                            tableid: 'tblBuyers',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Buyer List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }
                }
                else
                {
                    alert("Sorry, No Buyer Found.");
                }
            });
        }
        else if(e.keyCode === 8){
            $(this).removeClass("fontColorOfPickItem");
            _oTempObj.BuyerID = 0;
        }
    });

    $("#btnBack").click(function () {
        window.location.href = _sBaseAddress + "/Payment/View_Payments?menuid=" + _nMenuid;
    });

    $("#chkChequeAttachment").change(function() {
        if(this.checked) {
            $(".CAHideShow").show();
        }else{
            $(".CAHideShow").hide();
        }
    });

    $("#cboPaymentMethod").change(function(){
        
        if(_oCompany!=null){
            if($(this).val() == 2){
                $("#txtPayTo").val(_oCompany.Name);
            }
        }else{
            if($(this).val() == 2){
                $("#txtPayTo").val("Akij Textile Mills Ltd");
            }
        }
        HideShow();
    });

   

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which === 13) {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }

        if (oPickerobj.winid == 'winBuyers') {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                $("#txtBuyer").val(oreturnObj.Name);
                $("#txtBuyer").addClass("fontColorOfPickItem");
                $('#txtPINo').focus();
                _oTempObj.BuyerID = oreturnObj.ContractorID;
            }else{
                alert("Please select a buyer.");
                return false;
            }
        }
        else if (oPickerobj.winid == 'winExportPIs') {
            if (oreturnobjs != null && oreturnobjs.length > 0)
            {
                var oExportPIs=[];
                var oEPIs = oreturnobjs;
                var oGetRows = $("#tblPaymentPIs").datagrid("getRows");
                for(var i=0;i<oEPIs.length;i++){
                    if(!IsInList(oEPIs[i],oGetRows))
                    {
                        oExportPIs.push(oEPIs[i]);
                    }
                }

                var oExportPI = {
                    ExportPIs : oExportPIs
                };

                var obj =
                {
                    BaseAddress: _sBaseAddress,
                    Object: oExportPI,
                    ControllerName: "Payment",
                    ActionName: "GetsPaymentPIByExportPI",
                    IsWinClose: false
                };
                $.icsDataGets(obj, function (response) {
                    if (response.status && response.objs.length > 0) {
                        for(var i=0;i<response.objs.length;i++){
                            response.objs[i].Amount=response.objs[i].Remaining;
                            $("#tblPaymentPIs").datagrid("appendRow", response.objs[i]);
                        }
                        $("#cboCurrency").focus();
                        TotalAmountCal();
                    }
                    else{
                        alert("Your Selected Item(s) already in the list.");
                    }
                });
            }else{
                alert("Please select minimum one item from list.");
                return false;
            }
        }
        else if (oPickerobj.winid == 'winBanks') {
            if (oreturnObj != null && oreturnObj.BankID > 0) {
                $("#txtBank").val(oreturnObj.Name);
                $("#txtBank").addClass("fontColorOfPickItem");
                $('#cboBranch').focus();
                _oTempObj.BankID = oreturnObj.BankID;
                GetBankBranches(oreturnObj.BankID,0);
            }else{
                alert("Please select a bank.");
                return false;
            }
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }

    function GetBankBranches(nBankID,nBankBranchID)
    {
        if(nBankID>0)
        {
            var oBankBranch = {
                BankID : nBankID
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBankBranch,
                ControllerName: "BankBranch",
                ActionName: "ATMLNewGetsByBank",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].BankBranchID > 0) {
                        $("#cboBranch").icsLoadCombo({
                            List: response.objs,
                            OptionValue: "BankBranchID",
                            DisplayText: "BranchName"
                        });
                        $("#cboBranch").val(nBankBranchID);
                    }
                    else{
                        $("#cboBranch").empty();
                    }
                }
                else
                {
                    $("#cboBranch").empty();
                }
            });
        }
        else{
            $("#cboBranch").empty();
        }

    }

    function IsInList(oExportPI,oPaymentPIs)
    {
        for(var j=0;j<oPaymentPIs.length;j++)
        {
            if(oPaymentPIs[j].PIID == oExportPI.ExportPIID){
                return true;
            }
        }
        return false;
    }

    function SetDefaultValues()
    {
        $(".easyui-datebox").datebox({ disabled: false });
        $(".easyui-datebox").datebox("setValue", icsdateformat(new Date()));
        $(".hideShow").hide();
        $('#chkChequeAttachment').prop('checked', true);
    }

    function LoadAllComboboxes(){
        _oPaymentMethods.shift();
        var _oPayMeths=[];
        for(var i=0;i<_oPaymentMethods.length;i++){
            if(_oPaymentMethods[i].id == 1 || _oPaymentMethods[i].id == 2){
                _oPayMeths.push(_oPaymentMethods[i]);
            }
        }
        $("#cboPaymentMethod").icsLoadCombo({
            List: _oPayMeths,
            OptionValue: "id",
            DisplayText: "Value",
            InitialValue : "Select First One."
        });

        $("#cboCurrency").icsLoadCombo({
            List: _oCurrencys,
            OptionValue: "CurrencyID",
            DisplayText: "CurrencyName",
            InitialValue : "Select First One."
        });
    }

    function ValidateInput(){
        endEditing();

        if(_oTempObj.BuyerID <= 0)
        {
            alert("Please select a Buyer");
            $("#txtBuyer").focus();
            $("#txtBuyer").addClass("errorFieldBorder");
            return false;
        }else{
            $("#txtBuyer").removeClass("errorFieldBorder");
        }

        if(parseFloat($("#cboCurrency").val()) == 0)
        {
            alert("Please select Currency.");
            $("#cboCurrency").focus();
            $("#cboCurrency").addClass("errorFieldBorder");
            return false;
        }else{
            $("#cboCurrency").removeClass("errorFieldBorder");
        }

        if($.trim($("#txtConRate").val()) == "" || parseFloat($("#txtConRate").val()) == 0)
        {
            alert("Please give Conversion Rate");
            $("#txtConRate").focus();
            $("#txtConRate").addClass("errorFieldBorder");
            return false;
        }else{
            $("#txtConRate").removeClass("errorFieldBorder");
        }

        var oPaymentPIs = $("#tblPaymentPIs").datagrid("getRows");
        if(oPaymentPIs.length == 0){
            alert("Please pick minimum one Payment PI.");
            return false;
        }

        var nPaymentMethod = parseInt($("#cboPaymentMethod").val());
        if(nPaymentMethod == 2){  //Cheque
            if(_oTempObj.BankID <= 0)
            {
                alert("Please select a Bank.");
                $("#txtBank").focus();
                $("#txtBank").addClass("errorFieldBorder");
                return false;
            }else{
                $("#txtBank").removeClass("errorFieldBorder");
            }

            if($.trim($("#txtChequeNo").val()) == "")
            {
                alert("Please give Cheque No");
                $("#txtChequeNo").focus();
                $("#txtChequeNo").addClass("errorFieldBorder");
                return false;
            }else{
                $("#txtChequeNo").removeClass("errorFieldBorder");
            }

            if(parseInt($("#cboBranch").val()) == 0)
            {
                alert("Please select Bank Branch");
                $("#cboBranch").focus();
                $("#cboBranch").addClass("errorFieldBorder");
                return false;
            }else{
                $("#cboBranch").removeClass("errorFieldBorder");
            }

            if($.trim($("#txtAccountNo").val()) == "")
            {
                alert("Please give Account No");
                $("#txtAccountNo").focus();
                $("#txtAccountNo").addClass("errorFieldBorder");
                return false;
            }else{
                $("#txtAccountNo").removeClass("errorFieldBorder");
            }
        }

        if(!CheckDetail()){
            return false;
        }
        return true;
    }

    function CheckDetail(){
        var oPaymentPIs = $("#tblPaymentPIs").datagrid("getRows");
        for(var i=0;i<oPaymentPIs.length;i++){
            if(oPaymentPIs[i].Amount <= 0){
                alert("You cannot exceed the remaining quantity.");
                return false;
            }
            if(oPaymentPIs[i].Amount > oPaymentPIs[i].ExportPIAmount){
                alert("Amount can't be Greater then PI Amount at row no. " + (i+1));
                return false;
            }
            else if(oPaymentPIs[i].Amount > oPaymentPIs[i].Remaining){
                alert("Amount can't be Greater then Remaining Amount at row no. " + (i+1));
                return false;
            }
        }
        return true;
    }

    function HideShow()
    {
        var nVal = parseInt($("#cboPaymentMethod").val());
        if(nVal == 2){
            $(".hideShow").show();
        }
        else{
            $(".hideShow").hide();
        }
    }

    function ResetAllField(){
        _oTempObj.BuyerID=0;
        _oTempObj.BankID=0;

        $("#txtBuyer,#txtPINo,#txtBank").val("");
        $("#txtBuyer,#txtPINo,#txtBank").removeClass("fontColorOfPickItem");

        $("#cboCurrency").val(1);
        $("#txtConRate").val(1);
        DynamicRefreshList([], "tblPaymentPIs");
        $("#txtAmount,#txtChequeNo,#txtAccountNo,#txtPayTo,#txtNote,#txtPaymentNo,#txtMoneyReceipt").val("");
        $("#cboBranch").empty();
        $(".easyui-datebox").datebox({ disabled: false });
        $(".easyui-datebox").datebox("setValue", icsdateformat(new Date()));
        $('#chkChequeAttachment,#chkAccountPay').prop('checked', false);
        $(".CAHideShow").hide();
        $("#txtAmount").val(0);
    }

    function SetCurrencyName(){
        var sCurrencyName = $("#cboCurrency option:selected").text();
        $("#lblCurrencyName").text(sCurrencyName);
    }

    function RefreshControl(oPayment)
    {
        DisableEnable(oPayment);
        if(oPayment.PaymentID > 0)
        {
            $("#txtBuyer").prop("disabled",true);
            $("#txtPaymentNo").val(oPayment.PaymentNo);
            $("#txtMoneyReceipt").val(oPayment.MoneyReceipt);
            $("#txtBuyer").val(oPayment.BuyerName);
            _oTempObj.BuyerID = oPayment.ContractorID;
            if(_oTempObj.BuyerID > 0){
                $("#txtBuyer").addClass("fontColorOfPickItem");
            }else{
                $("#txtBuyer").removeClass("fontColorOfPickItem");
            }
            $("#cboCurrency").val(oPayment.CurrencyID);
            SetCurrencyName();
            $("#txtConRate").val(oPayment.ConversionRate);
            $("#cboPaymentMethod").val(oPayment.PaymentMethod);
            HideShow();
            $("#txtAmount").val(oPayment.Amount);

            $("#txtBank").val(oPayment.BankName);
            _oTempObj.BankID = oPayment.BankID;
            if(_oTempObj.BankID > 0){
                $("#txtBank").addClass("fontColorOfPickItem");
            }else{
                $("#txtBank").removeClass("fontColorOfPickItem");
            }
            GetBankBranches(oPayment.BankID,oPayment.BankBranchID);
            $("#txtChequeNo").val(oPayment.AccountNo);
            $("#txtAccountNo").val(oPayment.DocNo);
            $('#chkAccountPay').prop('checked', oPayment.IsAccountPay);
            $("#txtPayTo").val(oPayment.PayTo);
            $("#txtNote").val(oPayment.Note);
            $("#dChequeDate").datebox("setValue", oPayment.DocDateSt);
            $("#dDate").datebox("setValue", oPayment.PaymentDateSt);
            DynamicRefreshList(oPayment.PaymentPIs,"tblPaymentPIs");
            TotalAmountCal();
        }
        else{
            ResetAllField();
        }
    }

    function DisableEnable(oPayment)
    {
        if(oPayment.BtnIDHtml == "btnView"){
            $("fieldset").find("input, select").prop("disabled",true);
            $("#btnSave,#btnRemove").hide();
        }
    }

    function onClickRow(index) {
        if (editIndex != index) {
            if (endEditing()) {
                $('#tblPaymentPIs').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else {
                $('#tblPaymentPIs').datagrid('selectRow', editIndex);
            }
        }
        TotalAmountCal();
    }

    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) {
            return true;
        }
        if ($('#tblPaymentPIs').datagrid('validateRow', editIndex)) {
            $('#tblPaymentPIs').datagrid('endEdit', editIndex);
            $('#tblPaymentPIs').datagrid('selectRow', editIndex);
            var oPaymentPI = $('#tblPaymentPIs').datagrid('getSelected');
            if(oPaymentPI.Amount <= 0){
                _sInvalidAmountMessage = "At Row " +editIndex+" Amount can't be zero.";
                _isInvalidAmount = true;
            }
            if(oPaymentPI.Amount > oPaymentPI.Remaining)
            {
                _sInvalidAmountMessage = "At Row " +editIndex+" Amount can't be Greater than Remaining Amount.";
                $("#tblPaymentPIs").datagrid("selectRow", editIndex);
                var oPaymentPI = $("#tblPaymentPIs").datagrid("getSelected");
                oPaymentPI.Amount = 0;
                $("#tblPaymentPIs").datagrid("updateRow", { index: editIndex, row: oPaymentPI });
                _isInvalidAmount=true;
            }
            else{
                _isInvalidAmount=false;
            }
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function TotalAmountCal()
    {
        var nTotalAmount=0;
        var oPaymentPIs = $("#tblPaymentPIs").datagrid("getRows");
        for(var i=0;i<oPaymentPIs.length;i++)
        {
            nTotalAmount = parseFloat(nTotalAmount) + parseFloat(oPaymentPIs[i].Amount);
        }
        $("#txtAmount").val(nTotalAmount);
    }


    $("#btnSave").click(function(){
        _isInvalidAmount=false;
        if (!ValidateInput()) return false;
        var oPayment = RefreshObject();
        if(_isInvalidAmount){
            alert(_sInvalidAmountMessage);
            return false;
        }
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oPayment,
            ObjectId: oPayment.PaymentID,
            ControllerName: "Payment",
            ActionName: "Save",
            TableId: "",
            IsWinClose: false,
            Message : ""
        };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                if(response.obj.PaymentID > 0)
                {
                    sessionStorage.setItem("Payment", JSON.stringify(response.obj));
                    var bConfirm = confirm("Save Successful. Do you want to create another payment?");
                    TotalAmountCal();
                    _oPayment = null;
                    if(bConfirm)
                    {
                        ResetAllField();
                    }
                    else{
                        window.location.href = _sBaseAddress + "/Payment/View_Payments?menuid=" + _nMenuid;
                    }
                }
            }
        });
    });









    //$("#btnSave").click(function(){
    //    _isInvalidAmount=false;
    //    if (!ValidateInput()) return false;
    //    var oPayment = RefreshObject();
    //    var _formdata = new FormData();
    //    var fileInput = $("#fileInput").val();
    //    if (fileInput.files[0] != null) {
    //        _formdata.append(fileInput.files[0].name, fileInput.files[0]);
    //    }
    //    var tsv = ((new Date()).getTime()) / 1000;
    //    var xhr = new XMLHttpRequest();
    //    xhr.open('POST', _sBaseAddress + '/Payment/Save?ts=' + tsv);
    //    xhr.setRequestHeader('PaymentID', oPayment.PaymentID);
    //    xhr.setRequestHeader('PaymentNo', oPayment.PaymentNo);
    //    xhr.setRequestHeader('MoneyReceipt', oPayment.MoneyReceipt);
    //    xhr.setRequestHeader('ContractorID', oPayment.ContractorID);
    //    xhr.setRequestHeader('PaymentMethodInInt', oPayment.PaymentMethodInInt);
    //    xhr.setRequestHeader('CurrencyID', oPayment.CurrencyID);
    //    xhr.setRequestHeader('ConversionRate', oPayment.ConversionRate);
    //    xhr.setRequestHeader('Amount', oPayment.Amount);
    //    xhr.setRequestHeader('BankBranchID', oPayment.BankBranchID);
    //    xhr.setRequestHeader('DocDate', oPayment.DocDate);
    //    xhr.setRequestHeader('AccountNo', oPayment.AccountNo);
    //    xhr.setRequestHeader('DocNo', oPayment.DocNo);
    //    xhr.setRequestHeader('PayTo', oPayment.PayTo);
    //    xhr.setRequestHeader('IsAccountPay', oPayment.IsAccountPay);
    //    xhr.setRequestHeader('Note', oPayment.Note);
    //    xhr.setRequestHeader('PaymentDate', oPayment.PaymentDate);
    //    xhr.setRequestHeader('PaymentPIs', oPayment.PaymentPIs);
    //    xhr.send(_formdata);
    //    xhr.onreadystatechange = function () {
    //        if (xhr.readyState == 4 && xhr.status == 200) {
    //            var bConfirm = confirm("Save Successful. Do you want to create another payment?");
    //            TotalAmountCal();
    //            _oPayment = null;
    //            if(bConfirm)
    //            {
    //                ResetAllField();
    //            }
    //            else{
    //                window.location.href = _sBaseAddress + "/Payment/View_Payments?menuid=" + _nMenuid;
    //            }
    //        }
    //    }
    //});

</script>
