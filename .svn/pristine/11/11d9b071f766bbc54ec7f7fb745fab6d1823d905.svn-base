<html>
@{
    ViewBag.Title = "Packing List";
}
<body>
    @model ESimSol.BusinessObjects.ImportPack
    <div class="menuMainCollectionTable" style="height:100%">
        <div id="divImportPack" title="Import Invoice" style="padding:4px; height:100%; width:100%">
            <fieldset>
                <legend> <span style=" font-weight:bold; color:Gray; ">Packing Info</span>  </legend>
                <div>
                    <table cellpadding="2" style="width:100%; font-size:12px;">
                        <tr>
                            <td style="width:10%;text-align:right">
                                Invoice No
                            </td>

                            <td style="width:23%;text-align:left">
                                @Html.TextBoxFor(model => model.ImportInvoiceNo, new { style = "width: 100%;", id = "txtInvoiceNo", disabled = "disabled" })
                            </td>
                            <td style="width:10%;text-align:right">
                                LC No
                            </td>

                            <td style="width:23%;text-align:left">
                                @Html.TextBoxFor(model => model.ImportLCNo, new { style = "width: 100%;", id = "txtImportLCNo", disabled = "disabled" })
                            </td>
                            <td style=" width:10%; text-align:right"></td>
                            <td style="width:24%;text-align:left"></td>
                        </tr>

                        <tr>
                            <td style="width:10%;text-align:right">
                                Pack No
                            </td>

                            <td style="width:23%;text-align:left">
                                @Html.TextBoxFor(model => model.PackNo, new { style = "width: 100%;", id = "txtPackNo" })
                            </td>
                            <td style=" width:10%; text-align:right">
                                Packing Date
                            </td>
                            <td style="width:23%;text-align:left">
                                <input id="PackingDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:60%;" />
                            </td>
                            <td style="width:10%;text-align:right">
                                Remarks:
                            </td>


                            <td style="width:24%;text-align:right">
                                @Html.TextBoxFor(model => model.Remarks, new { style = "width: 100%;", id = "txtRemarks" })
                            </td>


                        </tr>

                    </table>
                </div>
            </fieldset>
            <div style="height:360px;">
                <table id="tblImportPack" class="easyui-datagrid" title="Packing(s)" style="width:100%;height:355px" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
                    <thead>
                        <tr>
                            <th field="ProductCode" width="12%" align="left">Code</th>
                            <th field="ProductName" width="22%" align="left">Product Name</th>
                            <th field="InvoiceQty" width="10%" align="right" formatter="formatPrice">Invoice Qty</th>
                            <th field="LotNo" width="15%" align="left">Lot No</th>
                            <th field="TotalPack" width="15%" align="right" formatter="formatPrice">Number Of <label id="lblNumberOfPack">Pack</label> </th>
                            <th field="NetWeight" width="10%" align="right" formatter="formatPrice">Qty</th>
                            <th field="MUSymbol" width="8%" align="left">M.Unit</th>
                            @*<th data-options="field:'QtyPerPack',width:150,align:'right',editor:{type:'numberbox',options:{precision:3}}">Qty/<label id="lblQtyPerPack">Pack</label></th>
                                <th data-options="field:'Qty',width:150,align:'right',editor:{type:'numberbox',options:{precision:2}},formatter:formatPrice">Qty</th>*@
                        </tr>
                    </thead>
                </table>
                <div id="toolbar">
                    @*<a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>*@
                    <a id="btnPickDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Add Lot</a>
                    <a id="btnCopy" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-copy" plain="true" onclick="Copy()">Copy</a>
                    <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                    <input type="text" id="txtProduct" placeholder="Type Product & Press Enter" style="width:210px;" />
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" id="btnProduct">Pick Other</a>
                    <a id="btnSaveFromDO" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Gets Lot From Order </a>
                </div>
            </div>

            <div>
                <table style=" width:100%; font-size:12px; padding-top:2px; font-weight:bold;" cellpadding="0" cellspacing="0">
                    <tr>
                        <td style=" text-align:right; width:12%">Total: <label id="lblPackUName"></label></td>
                        <td style=" text-align:left; width:10%">@Html.TextBoxFor(model => model.TotalPack, new { style = "width: 100%;text-align:right", id = "txtTotalPack", disabled = "disabled" })</td>
                        <td style=" text-align:right; width:12%">Net Weight:<label id="lblNetWUName"></label> </td>
                        <td style=" text-align:left; width:10%">@Html.TextBoxFor(model => model.NetWeight, new { style = "width: 100%;text-align:right", id = "txtNetWeight", disabled = "disabled" })</td>
                        <td style=" text-align:right; width:12%">Gross Weight : <label id="lblGrossUName"></label></td>
                        <td style=" text-align:left; width:10%">@Html.TextBoxFor(model => model.GrossWeight, new { style = "width:90%;text-align:right", id = "txtGrossWeight" })</td>
                    </tr>
                </table>
            </div>
            <fieldset id="Action">
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style=" width: 100%;font-weight: bold; font-size: 12px">
                    <tr>
                        <td style="width: 10%; text-align: right;">
                            <a id="btnPrintPackingList" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview</a>
                        </td>
                        <td style="width:70%; text-align:right;"></td>
                        <td style="width: 10%; text-align: right;">
                            @*<a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>*@
                        </td>
                        <td style="width: 10%; text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-closed" plain="true" onclick="Close()">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
    <div id="winImportPackDetail" style="width:820px;height:505px" class="easyui-window winstyle" title="Schedule Informations" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <legend>Lot Info:</legend>
                <div>
                    <table style="font-size: 12px;width: 100%">
                        <tr>
                            <td style="width:25%;text-align:right;">
                                Product:
                            </td>
                            <td colspan="3" style="padding-left: 2px;width:75%;text-align:left">
                                <input id="txtProduct_Lot" type="text" style="width:100%" disabled="disabled" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width:25%;text-align:right;">
                                Lot No:
                            </td>
                            <td style="padding-left: 2px;width:30%;text-align:left">
                                <input id="txtLotNo" type="text" style="width:100%" />
                            </td>
                            <td style=" width:20%; text-align:right"></td>
                            <td style="width:25%;text-align:left"></td>
                        </tr>
                        <tr>
                            <td style="width:25%;text-align:right;">
                                Origin:
                            </td>
                            <td style="padding-left: 2px;width:30%;text-align:left">
                                <input id="txtOrigin" type="text" style="width:100%" />
                            </td>
                            <td style=" width:20%; text-align:right">
                                Brand:
                            </td>
                            <td style="width:25%;text-align:left">
                                <input id="txtBrand" type="text" style="width:100%" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width:25%;text-align:right">
                                Count By Pack :
                            </td>
                            <td style="width:30%;text-align:left">
                                <select id="cboPackCountBy" style="width:100%" class="ChangePack"></select>
                            </td>
                            <td style=" width:20%; text-align:right">
                                Remarks:
                            </td>
                            <td style="width:25%;text-align:left">
                                <input id="txtRemark" type="text" style="width:100%" />
                            </td>
                        </tr>
                    </table>

                </div>
            </fieldset>

        </div>
        <div style="padding-left:0px; padding-right:0px; padding-top:2px;">
            @*<table id="tblImportPackDetail" class="easyui-datagrid" style="width:100%; height:150px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarPS">*@
            <table id="tblImportPackDetail" class="easyui-datagrid" title="Packing Details" style="width:100%;height:265px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarPS" data-options="onClickRow:onClickRow">
                <thead>
                    <tr>
                        <th field="ProductName" width="15%" align="left">Product Name</th>
                        <th field="MUSymbol" width="6%" align="left">M. Unit</th>
                        <th field="InvoiceQty" width="100" align="right" formatter="formatPrice">Invoice Qty</th>
                        <th data-options="field:'NumberOfPack',width:80,align:'right',editor:{type:'numberbox',options:{precision:2}},formatter:formatPrice">No Of <label id="lblNumberOfPack">Pack</label></th>
                        <th data-options="field:'QtyPerPack',width:90,align:'right',editor:{type:'numberbox',options:{precision:8}}">Qty<span class="lblMUnitOne"></span>/<label id="lblQtyPerPack">Pack</label></th>
                        @*<th data-options="field:'Qty',width:100,align:'right',editor:{type:'numberbox',options:{precision:2}},formatter:formatPrice">Qty<span class="lblMUnitOne"></span></th>*@
                        <th field="Qty" width="10%" align="right" formatter="formatPrice">Qty<span class="lblMUnitOne"></span></th>
                        <th data-options="field:'QtyPerPackTwo',width:90,align:'right',editor:{type:'numberbox',options:{precision:8}}">Qty<span class="lblMUnitTwo"></span>/<label id="lblQtyPerPack">Pack</label></th>
                        @*<th data-options="field:'QtyTwo',width:100,align:'right',editor:{type:'numberbox',options:{precision:5}},formatter:formatPrice">Qty<span class="lblMUnitTwo"></span></th>*@
                        <th field="QtyTwo" width="10%" align="right" formatter="formatPrice">Qty<span class="lblMUnitTwo"></span></th>
                    </tr>
                </thead>
            </table>
            <div>
                <div id="toolbarPS">
                    <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                    <a id="btnCopy" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-copy" plain="true" onclick="CopyDetail()">Copy</a>
                    <select id="cboProduct_Inv" style="width:20%"></select>
                    <a id="btnAddProductInvoice" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add Invoice Product</a>

                </div>

            </div>
        </div>
        <fieldset class="actionfieldsetstyle">
            <legend>Actions : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:30%;text-align:right;"></td>
                    <td style="width:70%;text-align:right;">
                        <a id="btnSavePL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" style=" height:22px;">Save</a>
                        <a id="btnClosePS" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>

<script type="text/javascript">
    var _sBaseAddress = "";
    var _nQtyPerPack = 0;
    var _nQtyPerPackTwo = 0;
    $(document).ready(function() {
        _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oImportPack = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oImportPackDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ImportPackDetails));
        var oImportInvoiceDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ImportInvoiceDetails));
        var oPacksCountBy = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PacksCountBy));
        debugger;
        $('#divImportPack').data('ImportPack', oImportPack);
        $('#divImportPack').data('ImportPackDetails',oImportPackDetails);
        $('#divImportPack').data('ImportInvoiceDetails',oImportInvoiceDetails);
        //$('#divImportPack').data('RouteLocations', oRouteLocations);
        //$("#cboLoadingPort,#cboDischargePort").icsLoadCombo({List: oRouteLocations,OptionValue: "RouteLocationID",DisplayText: "Name"});
        $("#cboPackCountBy").icsLoadCombo({List: oPacksCountBy,OptionValue: "id",DisplayText: "Value"});
        $('#txtGrossWeight').icsCurrencyBox();
        RefreshControl();

    });

   

    $('.ChangePack').change(function(){
        debugger;
        if(parseInt($('#cboPackCountBy').val())>0)
        {
            debugger;
            RefreshTotal();
            SetUnitName();
        }
    });

    function SetUnitName()
    {
        $('#lblNumberOfPack,#lblQtyPerPack,#lblPackUName').html($('#cboPackCountBy option:selected').text());
    }

    function Copy()
    {
        debugger;
        var oImportPack = $('#tblImportPack').datagrid('getSelected');
        if(oImportPack==null || oImportPack.ProductID<=0)
        {
            alert("Please select an Item from List");
            return;
        }
        if(oImportPack.ImportInvoiceID<=0)
        {
            alert("Please select an Item from List");
            return;
        }
        var SelectedRowIndex=$('#tblImportPack').datagrid('getRowIndex',oImportPack);
       
        var oImportPacks = $('#tblImportPack').datagrid('getRows');
        var nIndex = oImportPacks.length;
        oImportPack.ImportPackID=0;
        oImportPack.LotNo="";
        oImportPack.TotalPack=0;

        var oNewImportPack =
       {
           ImportPackID: oImportPack.ImportPackID,
           ImportInvoiceID:oImportPack.ImportInvoiceID,
           PackNo:oImportPack.PackNo,
           ImportInvoiceNo:oImportPack.ImportInvoiceNo,
           ImportLCNo:oImportPack.ImportLCNo,
           ProductName:oImportPack.ProductName,
           MUName:oImportPack.MUName,
           ProductID:oImportPack.ProductID,
           PackCountByInInt:oImportPack.PackCountByInInt,
           PackDate:oImportPack.PackDate,
           TotalPack:oImportPack.TotalPack,
           NetWeight:oImportPack.NetWeight,
           GrossWeight:oImportPack.GrossWeight,
           Remarks:oImportPack.Remarks,
           Origin:oImportPack.Origin,
           Brand:oImportPack.Brand,
           PackCountByInInt:oImportPack.PackCountByInInt,
           ProductCode:oImportPack.ProductCode,
           LotNo:"4",
           ProductID:oImportPack.ProductID,
           MUNameTwo:oImportPack.MUNameTwo,
           ImportPackDetails: []
       }


        $("#tblImportPack").datagrid("appendRow", oNewImportPack);
        $("#tblImportPack").datagrid("selectRow", nIndex);
        RefreshTotal();
    }
    function RefreshControl()
    {
        debugger;
        var oImportPack = $('#divImportPack').data('ImportPack');
       
        //$("#cboLoadingPort").val(oImportPack.LoadingPortID);
        //$("#cboDischargePort").val(oImportPack.DischargePortID);
        $("#cboPackCountBy").val(oImportPack.PackCountByInInt);
        DynamicRefreshList(oImportPack.ImportPacks,'tblImportPack');
        if( parseInt(oImportPack.ImportPacks.length)>0)
        {
            $('#PackingDate').datebox('setValue',oImportPack.ImportPacks[0].PackDateInST);
            SetUnitName();
        }
        RefreshTotal();
    }

    $("#btnProduct").click(function () {
        var oPackingDetail = $('#tblImportPack').datagrid('getSelected');
        if(oPackingDetail==null || oPackingDetail.ProductID<=0)
        {
            alert("Please select an Item from List");
            return;
        }
        GetProducts();
    });
    $("#txtProduct").keydown(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oPackingDetail = $('#tblImportPack').datagrid('getSelected');
            if(oPackingDetail==null || oPackingDetail.ProductID<=0)
            {
                alert("Please select an Item from List");
                return;
            }
            if($('#txtProduct').val()=="" || $('#txtProduct').val()==null)
            {
                alert("Please Type Product Name And Press Enter.");
                return;
            }
            GetProducts();
        }
        if (code == 8) //backspace=8
        {
            //
            $("#txtProduct").val('');
            $("#txtProduct").removeClass('fontColorOfPickItem');
            _oTempProducts = [];
        }
    });
    function GetProducts()
    {
        var oProduct = { BUID:sessionStorage.getItem('BUID'),ProductName:$('#txtProduct').val()};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "ImportPI",
            ActionName: "GetProducts",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0)
            {
                if ( response.objs[0].ProductID > 0) {

                    var tblColums = [], searcingField = "", windowTittle = "";
                    var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "FullName", title: "Item Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    searcingField = "FullName";
                    windowTittle = "Item List";
                    var oPickerParam = {
                        winid: 'winProduct',
                        winclass: 'clsProduct',
                        winwidth: 450,
                        winheight: 460,
                        tableid: 'tblProduct',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: searcingField,
                        windowTittle: windowTittle
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("Data Not Fund");
                return;
            }

        });
    }
    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }
    function SetPickerValueAssign(oPickerobj) {

        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winProduct')
        {
            if (oreturnObj!=null && oreturnObj.ProductID> 0)
            {
                var oIPD = $('#tblImportPack').datagrid('getSelected');
                var oTempPackingDetail = {
                    ImportPackDetailID:0,
                    ImportPackID :0,
                    ProductID :oreturnObj.ProductID,
                    NumberOfPack :0,
                    QtyPerPack :0,
                    MUnitID :oreturnObj.MeasurementUnitID,
                    Qty :0,
                    InvoiceQty :oIPD.InvoiceQty,
                    InvoiceQtySt :oIPD.InvoiceQtySt,
                    ProductCode :oreturnObj.ProductCode,
                    ProductName :oreturnObj.ProductName,
                    LotNo :'',
                    MUName :oreturnObj.MUnitName,
                    MUSymbol :oreturnObj.MUnit,
                    ImportInvoiceID :oIPD.ImportInvoiceID
                };
                $('#tblImportPack').datagrid('appendRow',oTempPackingDetail);
            }
        }
    }

    function RefreshObject()
    {
        var oImportPack = $('#divImportPack').data('ImportPack');
        var oNewImportPack =
        {
            ImportPackID: oImportPack.ImportPackID,
            ImportInvoiceID:oImportPack.ImportInvoiceID,
            PackNo: $('#txtPackNo').val(),
            PackDate:$('#PackingDate').datebox('getValue'),
            PackCountByInInt:$('#cboPackCountBy').val(),
            TotalPack:oImportPack.TotalPack,
            NetWeight:oImportPack.NetWeight,
            GrossWeight:oImportPack.GrossWeight,
            Remarks:$('#txtRemarks').val(),
            Origin:$('#txtOrigin').val(),
            Brand:$('#txtBrand').val(),
            ImportPackDetails: $('#tblImportPack').datagrid('getRows')
        }
        return oNewImportPack;
    }
    function RefreshTotal()
    {
       
        var oImportPacks = $('#tblImportPack').datagrid('getRows');
        var sPackName = ""; //$('#cboPackCountBy').val()>0?$('#cboPackCountBy option:selected').text():"";
        var nTotalNumberOfPack=0;
        var nNetWeight = 0, nGrossWeight = 0;
        if(oImportPacks.length>0)
        {
            for(var i =0;i<oImportPacks.length;i++)
            {
                sPackName= oImportPacks[i].PackCountByInString;
                nTotalNumberOfPack = nTotalNumberOfPack+ parseFloat(oImportPacks[i].TotalPack);
                nGrossWeight= nGrossWeight+ parseFloat(oImportPacks[i].NetWeight);
                nNetWeight= nNetWeight+ parseFloat(oImportPacks[i].NetWeight);
            }
            $('#lblNumberOfPack,#lblQtyPerPack,#lblPackUName').html(sPackName);
        }
        $('#txtTotalPack').val(formatPrice(nTotalNumberOfPack));
        $('#txtNetWeight').val(formatPrice(nNetWeight));
        $('#txtGrossWeight').val(formatPrice(nGrossWeight));
        if(oImportPacks.length>0)
        {
            $('#lblNetWUName,#lblGrossUName').html(oImportPacks[0].MUSymbol);
        }
        $('#divImportPack').data('ImportPack').TotalPack = nTotalNumberOfPack;
        $('#divImportPack').data('ImportPack').NetWeight = nNetWeight;
        $('#divImportPack').data('ImportPack').GrossWeight = nGrossWeight;
    }
    function Remove()
    {
        var oImportPackDetail= $('#tblImportPack').datagrid('getSelected');
        if (!confirm("Confirm to Delete?")) return false;
        if (oImportPackDetail == null || parseInt(oImportPackDetail.ProductID)<= 0)
        {
            alert("Please Select a Item from a List.");
            return;
        }
        var nSelectedIndex = $('#tblImportPack').datagrid('getRowIndex', oImportPackDetail);
        $('#tblImportPack').datagrid('deleteRow',nSelectedIndex);
        alert("Delete sucessfully");
        RefreshTotal();
    }
    $('#btnDelete').click(function(e){
  
        var oImportPack= $('#tblImportPack').datagrid('getSelected');
      
        if (oImportPack == null )
        {
            alert("Please Select a Item from a List.");
            return;
        }
        var nSelectedIndex = $('#tblImportPack').datagrid('getRowIndex', oImportPack);
        if (!confirm("Confirm to Delete?")) return ;
    
        if (parseInt(oImportPack.ImportPackID) > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/ImportInvoice/DeletePL",
                traditional: true,
                data:  JSON.stringify(oImportPack),
                contentType: "application/json; charset=utf-8",
                success: function (data) {                    
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        $('#tblImportPack').datagrid('deleteRow',nSelectedIndex);
                        alert("Delete sucessfully");
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
        else
        {
            $('#tblImportPack').datagrid('deleteRow',nSelectedIndex);
            alert("Delete sucessfully");
        }
    });
    function Close()
    {
        window.location.href = sessionStorage.getItem("BackLink");
    }
    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            window.location.href = sessionStorage.getItem("BackLink")
        }
    });
    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#tblImportPackDetail').datagrid('validateRow', editIndex)) {
            $('#tblImportPackDetail').datagrid('endEdit', editIndex);
            $('#tblImportPackDetail').datagrid('selectRow', editIndex);
            var oPODetail = $('#tblImportPackDetail').datagrid('getSelected');
            if (oPODetail == null)
            {
                return;
            }
           
            if (parseFloat(oPODetail.QtyPerPackTwo) != _nQtyPerPackTwo )
            {
                oPODetail.QtyPerPack = (oPODetail.QtyPerPackTwo/oPODetail.UnitConValue).toFixed(8);
            }
            else
            {
                oPODetail.QtyPerPackTwo = (oPODetail.QtyPerPack*oPODetail.UnitConValue).toFixed(8);
            }
            oPODetail.Qty = (parseFloat(oPODetail.NumberOfPack)*parseFloat(oPODetail.QtyPerPack));
            oPODetail.QtyTwo = (parseFloat(oPODetail.NumberOfPack)*parseFloat(oPODetail.QtyPerPackTwo));

            $('#tblImportPackDetail').datagrid('updateRow', { index: editIndex, row: oPODetail });
            RefreshTotal();
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }
    _nQtyPerPack = 0;
    _nQtyPerPackTwo = 0;
    function onClickRow(index) {

        if (editIndex != index) {
            if (endEditing()) {
                $('#tblImportPackDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oPODetail= $('#tblImportPackDetail').datagrid('getSelected');
                _nQtyPerPack = parseFloat(oPODetail.QtyPerPack).toFixed(8);
                _nQtyPerPackTwo = parseFloat(oPODetail.QtyPerPackTwo).toFixed(8);
                editIndex = index;
            }
            else {
                $('#tblImportPackDetail').datagrid('selectRow', editIndex);
            }
        }
    }
    //$('#btnRefresh').click(function(e){
    //    endEditing();
    //    var oImportPackDetails = $('#tblImportPack').datagrid('getRows');
    //    DynamicRefreshList(oImportPackDetails,'tblImportPack');
    //});
    $("#btnPrintPackingList").click(function () {
        debugger;
        var oImportPack = $('#divImportPack').data('ImportPack');
        if(parseInt(oImportPack.ImportInvoiceID)<=0)
        {
            alert("Sorry, there is no Invoice.");
            return false;
        }
        window.open(_sBaseAddress + '/ImportInvoice/PrintPackingList?id='+ oImportPack.ImportInvoiceID, "_blank");
    });
    //////
    $("#btnPickDetail").click(function () {
        debugger;
        var oImportPack = $("#tblImportPack").datagrid("getSelected");
        if (oImportPack == null) { alert("Please select an item from list!"); return false; }
        var nIndex=$('#tblImportPack').datagrid('getRowIndex',oImportPack);

        $.ajax({
            type: "POST",
            url: _sBaseAddress + "/ImportInvoice/GetPackingList",
            traditional: true,
            data:  JSON.stringify(oImportPack),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oImportPackNew = jQuery.parseJSON(data);
                $(".lblMUnitTwo").html("("+oImportPackNew.MUNameTwo+")");
                $(".lblMUnitOne").html("("+oImportPackNew.MUName+")");
                if(oImportPackNew.ImportPackDetails!=null )
                {
                    DynamicRefreshList(oImportPackNew.ImportPackDetails, "tblImportPackDetail");
                }
                else
                {
                    DynamicRefreshList([], "tblImportPackDetail");
                }
                if(oImportPackNew.ImportPackID<=0)
                {
                    oImportPackNew=oImportPack;
                }
                RefreshControl_PL(oImportPackNew)
                $('#divImportPack').data('ImportPack', oImportPackNew);
                var oImportInvoiceDetails = $('#divImportPack').data('ImportInvoiceDetails');
                $("#cboProduct_Inv").icsLoadCombo({List: oImportInvoiceDetails,OptionValue: "ImportInvoiceDetailID",DisplayText: "ProductName"});
                $("#winImportPackDetail").icsWindow("open", "Packing List Entry");
            }
        });
    });
    function RefreshControl_PL(oImportPack)
    {
        debugger;
      
        $("#txtLotNo").val(oImportPack.LotNo);
        $("#txtOrigin").val(oImportPack.Origin);
        $("#txtBrand").val(oImportPack.Brand);
        $("#cboPackCountBy").val(oImportPack.PackCountByInInt);
        $("#txtProduct_Lot").val(oImportPack.ProductName);
        $('#txtRemarks').val(oImportPack.Remarks);
        if( parseInt(oImportPack.ImportPackID)>0)
        {
            SetUnitName();
        }
        RefreshTotal();
    }
    function ValidateInput(oImportPack)
    {
        if(oImportPack.ImportInvoiceID<=0)
        {
            alert("Sorry, there is no Invoice.");
            return false;
        }
        if(parseInt($('#cboPackCountBy').val())<=0)
        {
            alert("Please Select Pack Count By.");
            $('#cboPackCountBy').focus();
            return false;
        }
        if( oImportPack.ImportPackDetails.length<=0)
        {
            alert("Please Add At Least One Item.");
            return false;
        }
       
        for(var i =0;i<oImportPack.ImportPackDetails.length;i++)
        {   
            if(parseFloat(oImportPack.ImportPackDetails[i].ImportInvoiceDetailID)<=0)
            {
                alert("Invoice Reference not found");
                return false;
            }
            if(parseFloat(oImportPack.ImportPackDetails[i].NumberOfPack)<=0)
            {
                alert("Number of "+$('#cboPackCountBy option:selected').text()+" Should be Greater then 0 for Product "+oImportPack.ImportPackDetails[i].ProductName);
                return false;
            }
            if(parseFloat(oImportPack.ImportPackDetails[i].QtyPerPack)<=0)
            {
                alert("Qty Per "+$('#cboPackCountBy option:selected').text()+" Should be Greater then 0 for Product "+oImportPack.ImportPackDetails[i].ProductName);
                return false;
            }
            if(parseFloat(oImportPack.ImportPackDetails[i].Qty)<=0)
            {
                alert("Qty Should be Greater then 0 for Product "+oDetails[i].ProductName);
                return false;
            }
        }

        return true;
    }
    $("#btnSavePL").click(function () {
      
        endEditing();
      
        var oImportPack = $("#tblImportPack").datagrid("getSelected");
        if (oImportPack == null) { alert("Please select an item from list!"); return false; }
        var nIndex=$('#tblImportPack').datagrid('getRowIndex',oImportPack);
      
        oImportPack.ImportPackID= oImportPack.ImportPackID;
        oImportPack.ImportInvoiceID=oImportPack.ImportInvoiceID;
        oImportPack.PackNo= $('#txtPackNo').val();
        oImportPack.PackDate=$('#PackingDate').datebox('getValue');
        oImportPack.PackCountByInInt=$('#cboPackCountBy').val();
        //NetWeight:oImportPack.NetWeight,
        //GrossWeight:oImportPack.GrossWeight,
        oImportPack.Remarks=$('#txtRemarks').val();
        oImportPack.Origin=$('#txtOrigin').val();
        oImportPack.Brand=$('#txtBrand').val();
        oImportPack.LotNo=$('#txtLotNo').val();
        oImportPack.ImportPackDetails= $('#tblImportPackDetail').datagrid('getRows')
        if(!ValidateInput(oImportPack))return;
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+ "/ImportInvoice/SavePackingList",
            traditional: true,
            data:  JSON.stringify(oImportPack),
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {
                debugger
                var oImportPack = jQuery.parseJSON(data);
                if (oImportPack.ErrorMessage=="" || oImportPack.ErrorMessage==null )
                {
                    $('#divImportPack').data('ImportPack').Brand =oImportPack.Brand;
                    $('#divImportPack').data('ImportPack').Origin =oImportPack.Origin;
                    $('#tblImportPack').datagrid('updateRow', { index: nIndex, row: oImportPack });
                    $("#winImportPackDetail").icsWindow("close");
                    alert("Data Saved successfully");
                }
                else
                {
                    alert(oImportPack.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
   

    });
    $("#btnClosePS").click(function () {
        debugger;
        $("#winImportPackDetail").icsWindow("close");

    });
    $("#btnRefresh").click(function () {
        endEditing();
    });
    function MakeObject(oPackingDetail)
    {
        var oTempPackingDetail = {
            ImportPackDetailID:0,
            ImportPackID :oPackingDetail.ImportPackID,
            ProductID :oPackingDetail.ProductID,
            NumberOfPack :0,
            QtyPerPackTwo:0,
            QtyPerPack :0,
            MUnitID :oPackingDetail.MUnitID,
            Qty :0,
            InvoiceQty :oPackingDetail.InvoiceQty,
            UnitConValue:oPackingDetail.UnitConValue,
            InvoiceQtySt :oPackingDetail.InvoiceQtySt,
            ProductCode :oPackingDetail.ProductCode,
            ProductName :oPackingDetail.ProductName,
            LotNo :oPackingDetail.LotNo,
            MUName :oPackingDetail.MUName,
            MUSymbol :oPackingDetail.MUSymbol,
            ImportInvoiceDetailID :oPackingDetail.ImportInvoiceDetailID
        };

        return oTempPackingDetail;
    }
    function CopyDetail()
    {
        debugger;
        var oPackingDetail = $('#tblImportPackDetail').datagrid('getSelected');
        if(oPackingDetail==null || oPackingDetail.ProductID<=0)
        {
            alert("Please select an Item from List");
            return;
        }
        var SelectedRowIndex=$('#tblImportPackDetail').datagrid('getRowIndex',oPackingDetail);
        var oPackingDetails = $('#tblImportPackDetail').datagrid('getRows');
        //var oNewPackingDetails = [];var nTempIndex = 0;
        oPackingDetails.push(MakeObject(oPackingDetail));
      
        DynamicRefreshList(oPackingDetails,'tblImportPackDetail');
        endEditing();
        RefreshTotal();
    }
    $("#btnAddProductInvoice").click(function () {
        debugger;
        if ($('#cboProduct_Inv').val()===null || parseInt($('#cboProduct_Inv').val())<=0)
        {
            alert("Please Select Invoice Product!");
            $("#cboProduct_Inv").addClass("errorFieldBorder");
            $("#cboProduct_Inv").focus();
            return false;
        } else {
            $("#cboProduct_Inv").removeClass("errorFieldBorder");
        }

        var oPackingDetails = $('#tblImportPackDetail').datagrid('getRows');
        var oImportPack = $('#divImportPack').data('ImportPack');

        var oImportInvoiceDetails = $('#divImportPack').data('ImportInvoiceDetails');
        var oImportInvoiceDetail=null;
        for(var i =0;i<oImportInvoiceDetails.length;i++)
        {
            if(oImportInvoiceDetails[i].ImportInvoiceDetailID==parseInt($('#cboProduct_Inv').val()))
            {
                oImportInvoiceDetail=oImportInvoiceDetails[i];
            }
        }

        var oTempPackingDetail = {
            ImportPackDetailID:0,
            ImportPackID :oImportPack.ImportPackID,
            ProductID :oImportInvoiceDetail.ProductID,
            NumberOfPack :0,
            QtyPerPackTwo:0,
            QtyPerPack :0,
            MUnitID :oImportPack.MUnitID,
            Qty :0,
            InvoiceQty :oImportPack.InvoiceQty,
            UnitConValue:oImportPack.UnitConValue,
            InvoiceQtySt :oImportPack.InvoiceQtySt,
            ProductCode :oImportInvoiceDetail.ProductCode,
            ProductName :oImportInvoiceDetail.ProductName,
            MUName :oImportPack.MUName,
            MUSymbol :oImportPack.MUSymbol,
            ImportInvoiceDetailID :oImportInvoiceDetail.ImportInvoiceDetailID
        };
        $('#tblImportPackDetail').datagrid('appendRow',oTempPackingDetail);
    });
    $("#btnSaveFromDO").click(function () {
      
        var oImportPack = $('#divImportPack').data('ImportPack');
        if(oImportPack.ImportInvoiceID<=0)
        {
            alert("Sorry, there is no Invoice.");
            return false;
        }
       
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+ "/ImportInvoice/Save_FromDO",
            traditional: true,
            data:  JSON.stringify(oImportPack),
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {
                debugger
                var oImportPack = jQuery.parseJSON(data);
                if (oImportPack.ErrorMessage=="" || oImportPack.ErrorMessage==null )
                {
                    $('#divImportPack').data('ImportPack', oImportPack);
                    RefreshControl();
                }
                else
                {
                    alert(oImportPack.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
   

    });
</script>
