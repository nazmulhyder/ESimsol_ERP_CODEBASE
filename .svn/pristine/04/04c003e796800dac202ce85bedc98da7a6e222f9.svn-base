@model ESimSol.BusinessObjects.AttendanceDaily_ZN
@{
    ViewBag.Title = "Employee Wise Attendance";
}
<div class="menuMainCollectionTable" style="margin-left: 0px; width:100%; height:100%">
    <table id="tblAttendanceDaily" title="Attendance List" class="easyui-datagrid" style="width:100%; height:100%" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true"
           autorowheight="false" toolbar="#toolbar"
           data-options=" rowStyler: function(index,row){

                if (row.InTimeInString == '-' && row.OutTimeInString == '-' &&  row.IsOSD == false)
                {   if(row.IsDayOff == true)
                    {
                        return 'background-color:blue;color:white';
                    }
                    else if (row.IsLeave == true)
                    {
                        return 'background-color:gray;color:white;';
                    }
                    else
                    {
                        return 'background-color:#FA8072;color:white';
                    }
                }
                else
                {
                    if (row.OverTimeInMinute <= 0)
                    {
                        return 'background-color:green;color:white';
                    }
                    else
                    {
                        return 'background-color:white;color:black';
                    }
                }
            }">

        <thead>
            <tr>
                <th field="AttendanceDateInString" width="100px;">
                    AttendanceDate
                </th>
                <th field="InTimeInString" width="80">
                    InTime
                </th>
                <th field="OutTimeInString" width="80">
                    OutTime
                </th>
                <th field="AttStatusInString" width="80">
                    Description
                </th>
                <th field="ShiftName" width="80">
                    Shift
                </th>
                <th field="TotalWorkingHourSt" width="80">
                    Total Working Hour
                </th>
                <th field="OverTimeInMinuteHourSt" width="80">
                    OT Hour
                </th>
            </tr>
        </thead>
    </table>

    <div id="toolbar" style="height:auto">
               
        <input id="dtStartDate" type="text" style="width: 100px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
        <input id="dtEndDate" type="text" style="width: 100px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />

        <input id="txtBusinessUnit_Collection" type="text" style="width:12%;" placeholder="Pick Business Unit" />
        <a id="btnBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
        <a id="btnResetBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

        <input id="txtLocation_Colection" style="width:12%;" placeholder="Pick Location" type="text" />
        <a id="btnLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
        <a id="btnResetLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

        <input id="txtDepartment_Collection" style="width:12%;" type="text" placeholder="Pick Department" />
        <a id="btnDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
        <a id="btnResetDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

        <input id="txtEmployee_Collection" style="width:12%;" type="text" placeholder="Type Code & Enter" />
        <a id="btnEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
        <a id="btnCEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

        <br />
        <span style="padding-left: 8px;">
            @*<a id="btnPrintFirstTimeCard" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="PrintFirstTimeCard()">First TimeCard</a>
            <a id="btnPrintOTTimeCard" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="PrintOTTimeCard()">OT TimeCard</a>
            <a id="btnPrintFinalTimeCard" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="PrintFinalTimeCard()">Final TimeCard</a>*@
            
            <input id="txtEmployeeGroup" style="width:160px;" type="text" placeholder="Enter Group" />
            <a id="btnEmployeeGroupPicker" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
            <a id="btnEmployeeGroupPickerReset" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

            <input id="txtEmployeeBlock" style="width:12%;" type="text" placeholder="Enter Block" />
            <a id="btnEmployeeBlockPicker" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
            <a id="btnEmployeeBlockReset" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

            
            @*<input id="txtBlock_Collection" type="text" style="width:14%" placeholder="Type Block & enter" />
            <a id="btnBlock_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>*@
            @*<a id="btnResetBlock_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>*@

            <span id="spSalaryRange">
                S. Range :
                <input id="txtStartSalaryRange" type="text" style="width:8%" class="number" /> To
                <input id="txtEndeSalaryRange" type="text" style="width:8%" class="number" />
            </span>
            &nbsp;
            <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="Search()">Search</a>
            &nbsp;
            Print Type:
            <select id="cboPrintType" style="width:120px;"></select>
            <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
            <a id="btnPrintBangla" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print Bangla</a>

            <a id="btnExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true"></a>

            @*<a id="btnPrintMamiyaTimeCard" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="PrintMamiyaTimeCard()">TimeCard</a>*@
            <a id="btnReProcess" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Reprocess()">Reprocess</a>
            <a id="btnExportToExcel" style="display:none" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">Export to Excel</a>
        </span>
    </div>

    <div id="winManualAttendance" class="easyui-window winstyle" title="Manual Attendance" style="width:400px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
            <tr>
                <td>
                    In Time :
                </td>
                <td>
                    <input id="timeSpinner" class="easyui-timespinner" style="width: 150px;" requird="required"
                           data-options="showSeconds:false" />
                </td>
                <td></td>
                <td>
                    <input id="chkIsOSD" type="checkbox" />
                    OSD
                </td>
            </tr>
            <tr>
                <td style=" text-align: right">
                    Out Time :
                </td>
                <td>
                    <input id="txtOutTime" class="easyui-timespinner" style="width: 150px;" requird="required"
                           data-options="showSeconds:false" />
                </td>
                <td></td>
                <td>
                    <input id="chkIsConsiderLate" type="checkbox" />
                    No Late
                </td>
            </tr>
            <tr>
                <td style=" text-align: right">
                    Shift :
                </td>
                <td>
                    <select id="cboEditedShift" style="width:150px;"></select>
                </td>
                <td></td>
                <td>
                    <input id="chkIsConsiderEarlyLeave" type="checkbox" />
                    No Early Leave
                </td>
            </tr>
            <tr>

                <td style=" text-align: right">
                    Remark :
                </td>
                <td>
                    <input id="txtRemark" style="width:150px;" type="text" />
                </td>
                <td></td>
                <td>
                    <input id="chkIsAbsent" type="checkbox" />
                    Absent
                </td>
            </tr>
            <tr>

                <td style=" text-align: right">
                    
                </td>
                <td>
                    <input id="chkIsManualOT" type="checkbox" />
                    Manual OT
                    <input id="txtManualOT" type="text" class="number" style="width:74px;"  />
                </td>
                <td></td>
                <td>
                    <input id="chkIsDayoff" type="checkbox" />
                    Dayoff
                </td>
            </tr>
            <tr>

                <td style=" text-align: right"></td>
                <td></td>
                <td></td>
                <td>
                    <input id="chkIsHoliday" type="checkbox" disabled />
                    Holiday
                </td>
            </tr>
            <tr>
                <td style=" text-align: right"></td>
                <td></td>
                <td></td>
                <td>
                    <input id="chkIsPresent" type="checkbox" />
                    Present
                </td>
            </tr>
        </table>
        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:400px; text-align:left"><span id="spAttStatus"></span></td>

                    <td style="width:50px">
                        <a id="btnManualAttendanceUpdate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Update</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnManualAttendanceClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>

    <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="locationtree" data-options="checkbox:true" singleselect="false"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            BU :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboBU" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" style="width:130px; float:left;" class="selection-search cboReset"></select>
                            &nbsp; Group:
                            <input id="txtEmployeeGroupAdv" style="width:90px;" type="text" />
                            <input id="btnEmployeeGroupPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                            <input id="btnEmployeeGroupResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Category:
                        </td>
                        <td class="td-AdvSearch-Level">
                            <div>
                                <select id="cboCategory" style="width:130px; float:left;"></select>
                                &nbsp; Gender :
                                <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch" style="width:130px; float:left;" class="selection-search cboReset"></select>

                            &nbsp; Block:
                            <input id="txtEmployeeBlockAdv" style="width:90px;" type="text" />
                            <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                            <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 75px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                            <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 425px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
            </div>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
</div>

<style type="text/css">
    .lblStar {
        color: #ff0000;
        font-weight: bold;
    }

    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>

<script type="text/javascript">
    var _sTempString="";
    var _sBaseAddress="";
    var _oAttendanceDaily = null;
    var _nEmployeeID = 0;
    var _nLocationID=0;

    var _sAttendanceSchemeID ="";
    var _sLocationID = "";
    var _sDepartmentIds = "";
    var _sDepartmentNames = "";
    var _sDesignationIds = "";
    var _sDesignationNames = "";
    var _sEmployeeIDs="";

    var _nLastEmployeeID = 0;
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _oBusinessUnits=[];
    var _sBusinessUnitIds="";

    var _oAURolesMapping=[];
    var _oAURolesMapping_ESS=[];
    var _oAuthorizationRolesMappingPermission = [];
    var _sBlockNames="";
    var _sBlockIDs="";
    var _sGroupNames="";
    var _sGroupIDs="";


    var _sBlockNamesAdv="";
    var _sBlockIDsAdv="";
    var _sGroupNamesAdv="";
    var _sGroupIDsAdv="";
    $(document).ready(function ()
    {
        debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oAttendanceDaily =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));

        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _oAURolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        _oAuthorizationRolesMappingPermission= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.AuthorizationRolesMappingPermission));
        _oAURolesMapping_ESS=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.AuthorizationRolesMapping_ESS));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        //SetDateTime();
        //var oDate=new Date();
        //SetStartTime(oDate);
        //SetEndTime(oDate);
        $('#btnExcel').hide();
        $('#btnPrintBangla').hide();

        $("#cboEditedShift").icsLoadCombo({
            List:  _oAttendanceDaily.HRMShifts,
            OptionValue: "ShiftID",
            DisplayText: "Name",
        });
        $('#timeSpinner').timespinner('setValue', '00:00');
        $('#txtOutTime').timespinner('setValue', '00:00');

        $('#cboEditedShift').val(0);
        //PrintTypeObject();
        InitializeAdvSearch();
        if(PermissionChecker('Add','Attendance',_oAURolesMapping))
        {
            $('#btnReProcess').show();
            $('#btnSearch').show();
        }
        else{$('#btnReProcess').hide();$('#btnSearch').hide();}
        if(PermissionChecker('View','EmployeeSalaryStructure',_oAURolesMapping_ESS))
        {
            $('#spSalaryRange').show();
        }
        
        else{$('#spSalaryRange').hide();}
        LoadCateGory(oEmployeeCategorys);
        $('#dtStartDate').datebox('setValue', icsdateformat(new Date()));
        $('#dtEndDate').datebox('setValue', icsdateformat(new Date()));
        //LoadBU();
        $("#cboPrintType").icsLoadCombo({
            List: _oAuthorizationRolesMappingPermission,
            OptionValue: "id",
            DisplayText: "Value"
        });
        if(PermissionChecker('MultipleSummary','Attendance',_oAURolesMapping))
        {
            $('#btnExportToExcel').show();
        }
    });



    function LoadCateGory(oEmployeeCategorys)
    {
        $("#cboCategory").icsLoadCombo({
            List: oEmployeeCategorys,
            OptionValue: "Value",
            DisplayText: "Text"
        });
    }
    //function LoadBU()
    //{
    //    $('#cboBU_Collection').combobox({
    //        data:_oBusinessUnits,
    //        valueField:'BusinessUnitID',
    //        textField:'Name',
    //        multiple:true
    //    });
    //    $('#cboBU_Collection').combobox('setValue',  _oBusinessUnits.length>0?_oBusinessUnits[0].BusinessUnitID:0);
    //}
    function TempString()
    {
        var sTempString = "";
        var dtDateFrom = $('#dtStartDate').datebox('getValue');
        var dtDateTo = $('#dtEndDate').datebox('getValue');

        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }

        if(_sEmployeeIDs == "" && _sLocationID=="" && _sDepartmentIds=="" && _sBusinessUnitIds=="" && nStartSalaryRange<=0 && nEndSalaryRange<=0 && _sBlockIDs=="" && _sGroupIDs=="")
        {
            alert("Please enter at lest one searching criteria with date !");
            return  sTempString;
        }

        sTempString=_sEmployeeIDs+'~'+dtDateFrom+'~'+dtDateTo+'~'+_sLocationID+'~'+_sDepartmentIds+"~"+_sBusinessUnitIds+'~'+nStartSalaryRange+'~'+nEndSalaryRange+"~"+_sBlockIDs+"~"+_sGroupIDs;
        return sTempString;
    }

    function Search()
    {
        var sTempString=TempString();
        if(sTempString == "")
        {
            return;
        }

        $.ajax({

            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceDaily_ZN/EmployeeWiseAttendanceSearch",
            traditional: true,
            data: JSON.stringify({sTemp : sTempString}),
            contentType: "application/json; charset=utf-8",

            success: function (data)
            {
                var  oAttendanceDailys= [];
                oAttendanceDailys = jQuery.parseJSON(data);

                if (oAttendanceDailys.length>0 && oAttendanceDailys[0].ErrorMessage=="")
                {
                    //RefreshList(oAttendanceDailys);
                    RefreshAtt(oAttendanceDailys,'Append');
                }
                else
                {
                    alert(oAttendanceDailys[0].ErrorMessage);
                    oAttendanceDailys=[];
                    RefreshList(oAttendanceDailys);
                }
            },

            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function RefreshList(oEmployees)
    {
        data=oEmployees;
        data={"total":""+data.length+"","rows":data};
        $('#tblAttendanceDaily').datagrid('loadData',data);
        $('#tblAttendanceDailys').datagrid({onSelect: function(rowIndex, rowData){ RowSelect(rowIndex, rowData);}});
    }

    function PrintFirstTimeCard()
    {
        var sTempString=TempString();
        if(sTempString == "")
        {
            return;
        }
        window.open(_sBaseAddress + '/AttendanceDaily_ZN/PrintFirstTimeCard?sTemp='+sTempString);
    }
    function PrintOTTimeCard()
    {
        var sTempString=TempString();
        if(sTempString == "")
        {
            return;
        }
        window.open(_sBaseAddress + '/AttendanceDaily_ZN/PrintOTTimeCard?sTemp='+sTempString);
    }
    function PrintFinalTimeCard()
    {
        var sTempString=TempString();
        if(sTempString == "")
        {
            return;
        }
        window.open(_sBaseAddress + '/AttendanceDaily_ZN/PrintFinalTimeCard?sTemp='+sTempString);
    }
    //function PrintMamiyaTimeCard()
    //{
    //    var sTempString=TempString();
    //    if(sTempString == "")
    //    {
    //        return;
    //    }
    //    window.open(_sBaseAddress + '/AttendanceDaily/PrintMamiyaTimeCard?sTemp='+sTempString);
    //}
    //function PrintTimeCard_F2(sType)
    //{
    //    var sTempString=TempString();
    //    if(sTempString == "")
    //    {
    //        return;
    //    }
    //    window.open(_sBaseAddress + '/AttendanceDaily_ZN/PrintTimeCard_F2?sTemp='+sTempString+"&sType="+sType);
    //}
    function TimeCardF2Bangla(sType)
    {
        var sTempString=TempString();
        if(sTempString == "")
        {
            return;
        }
        window.open(_sBaseAddress + '/AttendanceDaily_ZN/PrintTimeCardBangla_F2?sTemp='+sTempString+"&sType="+sType);
    }
    //function PrintTimeCard_F4(sType)
    //{
    //    var sTempString=TempString();
    //    if(sTempString == "")
    //    {
    //        return;
    //    }
    //    window.open(_sBaseAddress + '/AttendanceDaily_ZN/PrintTimeCard_F4?sTemp='+sTempString+"&sType="+sType);
    //}
    //function PrintTimeCard_Worker()
    //{
    //    var sTempString=TempString();
    //    if(sTempString == "")
    //    {
    //        return;
    //    }
    //    window.open(_sBaseAddress + '/AttendanceDaily_ZN/PrintTimeCard_Worker?sTemp='+sTempString);
    //}
    //function PrintTimeCard_F6()
    //{
    //    var sTempString=TempString();
    //    if(sTempString == "")
    //    {
    //        return;
    //    }
    //    window.open(_sBaseAddress + '/AttendanceDaily_ZN/PrintTimeCard_F6?sTemp='+sTempString);
    //}
    function PrintTimeCard_F7()
    {
        var sTempString=TempString();
        if(sTempString == "")
        {
            return;
        }
        window.open(_sBaseAddress + '/AttendanceDaily_ZN/PrintTimeCard_F7?sTemp='+sTempString);
    }
    //function PrintTimeCard_FC7()
    //{
    //    var sTempString=TempString();
    //    if(sTempString == "")
    //    {
    //        return;
    //    }
    //    window.open(_sBaseAddress + '/AttendanceDaily_ZN/PrintTimeCard_FC7?sTemp='+sTempString);
    //}
    //function PrintTimeCard_AMG()
    //{
    //    var sTempString=TempString();
    //    if(sTempString == "")
    //    {
    //        return;
    //    }
    //    window.open(_sBaseAddress + '/AttendanceDaily_ZN/PrintTimeCard_AMG?sTemp='+sTempString);
    //}


    $('#cboPrintType').change(function(e){

        debugger;
        if($('#cboPrintType').val() == 106){
            $('#btnPrintBangla').hide();
            $('#btnExcel').show();
        }
        else if($('#cboPrintType').val() == 102 || $('#cboPrintType').val() == 104) {
            $('#btnPrintBangla').show();
        }
        else{
            //$('#btnExcel,#btnPrintBangla').hide();
            $('#btnPrintBangla').hide();
            $('#btnExcel').hide();
        }
    });

    $('#btnExcel').click(function(e){
        var sTempString=TempString();
        if(sTempString == "")
        {
            return;
        }
        window.open(_sBaseAddress + '/AttendanceDaily_ZN/Print_ReportXL?sTemp='+sTempString);


    });
    //Sagor date picker start

    //function SetDateTime()
    // {
    //    var oDate=new Date();
    //    oDate.setFullYear(2014);
    //    /*---------------------------------------- Start Set Year-------------------------------------------*/
    //    var sYear="";
    //    sYear +="<option value='0'>"+'Year'+"</option>";
    //    for(var i=0; i<=10; i++)
    //    {
    //        sYear += "<option value='" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"'>" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"</option>";
    //    }
    //    $('#cboYear').html(sYear);
    //    $('#cboEndYear').html(sYear);
    //    /*---------------------------------------- End Set Year-------------------------------------------*/

    //    /*---------------------------------------- Start Set Month-------------------------------------------*/
    //    var sMonth="";
    //    var oMonths=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
    //    sMonth +="<option value='0'>"+'Month'+"</option>";
    //    for(var i=0; i<oMonths.length; i++)
    //    {
    //        sMonth += "<option value='" +(parseInt(i)+1)+"'>" + oMonths[i] +"</option>";
    //    }
    //    $('#cboMonth').html(sMonth);
    //    $('#cboEndMonth').html(sMonth);
    //    /*---------------------------------------- End Set Month-------------------------------------------*/

    //    /*---------------------------------------- Start Set Date-------------------------------------------*/
    //    var sDay ="<option value='0'>"+'Day'+"</option>";
    //    $('#cboDay').html(sDay);
    //    $('#cboEndDay').html(sDay);
    //    /*---------------------------------------- End Set Date-------------------------------------------*/
    // }

    // $('#cboYear').change(function(e)
    // {
    //   var nYear=$('#cboYear').val();
    //   var nMonth=$('#cboMonth').val();
    //   if(nYear>0 && nMonth>0)
    //   {
    //     $('#cboDay').html(SetDateEvent(nYear, nMonth));
    //   }
    // });

    // $('#cboEndYear').change(function(e)
    // {
    //   var nYear=$('#cboEndYear').val();
    //   var nMonth=$('#cboEndMonth').val();
    //   if(nYear>0 && nMonth>0)
    //   {
    //     $('#cboEndDay').html(SetDateEvent(nYear, nMonth));
    //   }
    // });

    //  $('#cboMonth').change(function(e)
    // {
    //   var nYear=$('#cboYear').val();
    //   var nMonth=$('#cboMonth').val();
    //   if(nYear>0 && nMonth>0)
    //   {
    //     $('#cboDay').html(SetDateEvent(nYear, nMonth));
    //   }
    // });

    // $('#cboEndMonth').change(function(e)
    // {

    //   var nYear=$('#cboEndYear').val();
    //   var nMonth=$('#cboEndMonth').val();
    //   if(nYear>0 && nMonth>0)
    //   {
    //     $('#cboEndDay').html(SetDateEvent(nYear, nMonth));
    //   }

    // });

    // function SetDateEvent(nYear, nMonth)
    // {
    //   var oDate=new Date();
    //   var sDay="";
    //   if( parseInt(nMonth)>0)
    //   {
    //        var nDay= new Date(parseInt(nYear), parseInt(nMonth), 0).getDate();
    //        sDay +="<option value='0'>"+'Day'+"</option>";
    //        for(var i=1; i<=parseInt(nDay); i++)
    //        {
    //            if(i<10)
    //            {
    //              sDay += "<option value='" +i+"'>" + '0'+i +"</option>";
    //            }
    //            else
    //            {
    //              sDay += "<option value='" +i+"'>" + i +"</option>";
    //            }
    //        }
    //    }
    //    return sDay;
    // }

    // function SetStartTime(oDate)
    // {
    //      var nyear=oDate.getFullYear();
    //      var nmonth=oDate.getMonth()+1;
    //      var nday=oDate.getDate();
    //      $('#cboYear').val(nyear);
    //      $('#cboMonth').val(nmonth);
    //      $('#cboDay').html(SetDateEvent(nyear,nmonth));
    //      $('#cboDay').val(nday);
    // }

    // function SetEndTime(oDate)
    // {
    //      debugger;
    //      var nyear=oDate.getFullYear();
    //      var nmonth=oDate.getMonth()+1;
    //      var nday=oDate.getDate();
    //      $('#cboEndYear').val(nyear);
    //      $('#cboEndMonth').val(nmonth);
    //      $('#cboEndDay').html(SetDateEvent(nyear,nmonth));
    //      $('#cboEndDay').val(nday);
    // }

    //function GenerateStartTimeInString()
    //{
    //    var sDate=  $('#cboMonth').val() +'/'+ $('#cboDay').val() +'/'+ $('#cboYear').val();
    //    return sDate;
    //}

    //function GenerateEndTimeInString()
    //{
    //   var sDate=  $('#cboEndMonth').val() +'/'+ $('#cboEndDay').val() +'/'+ $('#cboEndYear').val();
    //   return sDate;
    //}

    //function ValidationOfStartTime()
    //{
    //   if($('#cboYear').val()==0)
    //   {
    //     alert("Please select a year.");
    //     document.getElementById('cboYear').focus();
    //     return false;
    //   }
    //   if($('#cboMonth').val()==0)
    //   {
    //     alert("Please select a month.");
    //     document.getElementById('cboMonth').focus();
    //     return false;
    //   }
    //   if($('#cboDay').val()==0)
    //   {
    //     alert("Please select a day.");
    //     document.getElementById('cboDay').focus();
    //     return false;
    //   }
    //   return true;
    //}

    //function ValidationOfEndTime()
    //{
    //   if($('#cboEndYear').val()==0)
    //   {
    //     alert("Please select a year.");
    //     document.getElementById('cboEndYear').focus();
    //     return false;
    //   }
    //   if($('#cboEndMonth').val()==0)
    //   {
    //     alert("Please select a month.");
    //     document.getElementById('cboEndMonth').focus();
    //     return false;
    //   }
    //   if($('#cboEndDay').val()==0)
    //   {
    //     alert("Please select a day.");
    //     document.getElementById('cboEndDay').focus();
    //     return false;
    //   }
    //   return true;
    //}

    /*---------------- emp Search Start click----------------*/

    function InitializeAdvSearch(){

        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                    {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                    {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
        $('#txtEmployeeGroupAdv').val("");
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDsAdv = "";
        _sGroupIDsAdv = "";
    }

    $("#btnEmployee").click(function () {

        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            $("#lblRange1").show();
        }
        else
        {
            $("#lblRange1").hide();
        }
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        debugger
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }

        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }

        var nBusinessUnitID = $("#cboBU").val();
        var nCategory=$('#cboCategory').val();
        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
           nEmployeeTypeID==0 && sGender=="None" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
           bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 && !bIsJoiningDate && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0&& _sBlockIDsAdv==""&& _sGroupIDsAdv=="")
        {
            alert("Please enter your selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                     sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                     bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                     sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo+"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+""+"~"+""+"~"+_sBlockIDsAdv+"~"+_sGroupIDsAdv;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnEmployeePickerOk").click(function () {
        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length<=0) { alert("please select atleast one item");return; }
        var sEmpIDs="";
        var sEmpNames="";
        for(var i=0;i<oEmployees.length;i++)
        {
            sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
            sEmpNames=sEmpNames+oEmployees[i].Name+",";
        }
        _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
        sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
        $("#txtEmployee_Collection").val(sEmpNames);
        $("#winEmployeePicker").icsWindow('close');
    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });

    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    /*-------------Business Unit Picker----------------*/
    $("#btnBusinessUnitPicker_Collection").click(function(e){
        BusinessUnitPicker();
    });

    $("#txtBusinessUnit_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            BusinessUnitPicker();
        }
    });

    function BusinessUnitPicker()
    {
        var oBusinessUnit={
            BusinessUnitID:0
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBusinessUnit,
            ControllerName: "BusinessUnit",
            ActionName: "GetsBusinessUnitWithPermission",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BusinessUnitID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBusinessUnit',
                        winclass:'clsBusinessUnit',
                        winwidth: 320,
                        winheight: 400,
                        tableid: 'tblBusinessUnit',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Business Unit List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBusinessUnitPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBusinessUnits=[];
            oBusinessUnits = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBusinessUnit')
            {
                if(oBusinessUnits!=null && oBusinessUnits.length>0)
                {
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sBusinessUnitName = "";
                    for(var i=0; i<oBusinessUnits.length; i++)
                    {
                        sBusinessUnitName+=oBusinessUnits[i].Name+",";
                        _sBusinessUnitIds+=oBusinessUnits[i].BusinessUnitID+",";
                    }

                    sBusinessUnitName=sBusinessUnitName.substring(0,sBusinessUnitName.length-1);
                    _sBusinessUnitIds=_sBusinessUnitIds.substring(0,_sBusinessUnitIds.length-1);
                    $("#txtBusinessUnit_Collection").val(sBusinessUnitName);
                }
                else
                {
                    alert("Please select a Business Unit.");
                }
            }
        });
    }

    $("#btnResetBusinessUnitPicker_Collection").click(function(e){
        $('#txtBusinessUnit_Collection').val("");
        _sBusinessUnitIds="";
    });

    /*-------------Location Picker----------------*/
    var btnLocation="";
    $("#btnLocationPicker,#btnLocationPicker_Colection").click(function(e){
        btnLocation = $(this).attr("id");
        var sBusinessUnitIDs ="";
        var nBusinessUnitID=0;
        if(btnLocation=="btnLocationPicker")
        {
            nBusinessUnitID = $("#cboBU").val();
            sBusinessUnitIDs = String(nBusinessUnitID);
        }
        else{sBusinessUnitIDs=_sBusinessUnitIds;}
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        if(btnLocation=="btnLocationPicker")
        {
            var oLocation = $('#locationtree').tree('getSelected');
            if(oLocation!=null && oLocation.id>0){
                $("#winLocationPicker").icsWindow('close');
                _sLocationID+=oLocation.id;
                $('#txtLocation').val(oLocation.text);
            }
            else{
                alert("Please select a location.");
            }
        }
        else
        {
            var oLocations = $('#locationtree').tree('getChecked');
            if(oLocations!=null && oLocations.length>0)
            {
                var LocationName="";
                for(var i=0; i<oLocations.length; i++)
                {
                    if(oLocations[i].id !=1)
                    {
                        LocationName+=oLocations[i].text+",";
                        _sLocationID+=oLocations[i].id+",";
                    }
                }

                LocationName=LocationName.substring(0,LocationName.length-1);
                _sLocationID=_sLocationID.substring(0,_sLocationID.length-1);
                $("#winLocationPicker").icsWindow('close');
                $('#txtLocation_Colection').val(LocationName);
            }
            else
            {
                alert("Please select a location.");
            }
        }
    });

    $('#txtLocation_Colection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            btnLocation = $(this).attr("id");
            var sBusinessUnitIDs ="";
            var nBusinessUnitID=0;
            if(btnLocation=="btnLocationPicker")
            {
                nBusinessUnitID = $("#cboBU").val();
                sBusinessUnitIDs = String(nBusinessUnitID);
            }
            else{sBusinessUnitIDs=_sBusinessUnitIds;}
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };
            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker,#btnResetLocationPicker_Colection").click(function(e){
        $('#txtLocation').val("");
        $('#txtLocation_Colection').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){
        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){
        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentIds= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose,#btnDepartmentPickerClose_Collection").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
        $("#winDepartmentPicker_Collection").icsWindow('close');
        _sDepartmentIds="";
    });

    $("#btnResetDepartmentPicker,#btnResetDepartmentPicker_Collection").click(function(e){
        $('#txtDepartment,#txtDepartment_Collection').val("");
        _sDepartmentIds="";
    });

    /*-------------Designation Picker----------------*/

    $("#btnDesignationPicker").click(function(e){
        var oDesignation={
            DesignationID:0,
            Params: _sBusinessUnitIds+'~'+_sLocationID+'~'+ _sDepartmentIds
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oDesignations=[];
            var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
            oDesignations.push(oDesignation);

            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignations!=null && oDesignations.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames+=oDesignations[i].Name+",";
                        _sDesignationIds+=oDesignations[i].DesignationID+",";
                    }

                    _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                    _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
                    $("#txtDesignation").val(_sDesignationNames);
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker").click(function(e){
        $('#txtDesignation').val("");
        _sDesignationIds="";
        _sDesignationNames = "";
    });

    /*---------------- emp Search End click ----------------*/

    /*---------------- emp Search Start keyprees----------------*/
    $('#txtEmployee_Collection').keypress(function (e)
    {
        debugger
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee_Collection").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
            SearchEmployeeByText(sCodeName);
        }
    });

    function SearchEmployeeByText(sEmpNameCode){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCodeForTimeCard",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _sEmployeeIDs=oreturnObj.EmployeeID;
                    $("#txtEmployee_Collection").val(oreturnObj.Name);
                    $("#winEmployeePicker").icsWindow('close');
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        _sEmployeeIDs=oreturnObj.EmployeeID;
                        $("#txtEmployee_Collection").val(oreturnObj.Name);
                        $("#winEmployeePicker").icsWindow('close');
                    }
                }
            }
        });
    }

    $('#btnCEmployee').click(function (e)
    {
        document.getElementById("txtEmployee_Collection").value = "" ;
        _sEmployeeIDs = 0;
    });

    /*---------------- emp Search Start keyprees----------------*/

    /*-------------Department Picker start Collection----------------*/
    $("#btnDepartmentPicker_Collection").click(function(e){
        DepartmentPicker();
    });

    $("#txtDepartment_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            DepartmentPicker();
        }
    });

    function DepartmentPicker()
    {
        $("#winDepartmentPicker_Collection").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree_Collection').tree({ data: [response.obj] });
                }
            }
        });
    }

    $("#btnDepartmentPickerOk_Collection").click(function(e){
        var oDepartments = $('#departmenttree_Collection').tree('getChecked');
        if(oDepartments!=null && oDepartments.length>0){
            $("#winDepartmentPicker_Collection").icsWindow('close');
            for(var i=0; i<oDepartments.length; i++)
            {
                _sDepartmentNames+=oDepartments[i].text+",";
                _sDepartmentIds+=oDepartments[i].id+",";
            }

            _sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
            _sDepartmentIds=_sDepartmentIds.substring(0,_sDepartmentIds.length-1);
            $("#txtDepartment_Collection").val(_sDepartmentNames);
        }
        else{
            alert("Please select a department.");
        }
    });

    /*-------------Department Picker start Collection----------------*/

    //$('#cboDateType').change(function ()
    //{
    //
    //        var nDateType = $("#cboDateType").val();
    //        if (nDateType == 0) {
    //              document.getElementById("regionDateTo").style.display = 'none';
    //              document.getElementById("regionDateFrom").style.display = 'none';
    //        }
    //        if (nDateType == 1 )
    //        {
    //          document.getElementById("regionDateFrom").style.display = '';
    //          document.getElementById("regionDateTo").style.display = 'none';
    //        }
    //        if (nDateType == 2 )
    //        {
    //          document.getElementById("regionDateFrom").style.display = '';
    //          document.getElementById("regionDateTo").style.display = '';
    //        }

    //});

    //sagor date picker end

    function Reprocess()
    {       
        var dtDateFrom=$('#dtStartDate').datebox('getValue');
        var dtDateTo=$('#dtEndDate').datebox('getValue');
        var dtDateFrom = new Date(dtDateFrom);
        var dtDateTo = new Date(dtDateTo);

        if(dtDateFrom>dtDateTo)
        {
            alert("Invalid date range !");
            return;
        }
        if(_sEmployeeIDs == "")
        {
            alert("Please enter employee !");
            return;
        }
        var EIDs="";
        var oEmpIDs=[];
        EIDs=_sEmployeeIDs+",";
        oEmpIDs = EIDs.split(',');

        if(oEmpIDs.length>2)//because the list takes one more item !
        {
            alert("Please enter only one employee at a time !");
            return;
        }

        var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds
        var nDays = Math.round(Math.abs((dtDateFrom.getTime() - dtDateTo.getTime())/(oneDay)))
        if(nDays>31)
        {
            alert("Date range should not be more then 30!");
            return;
        }

        if (!confirm("Confirm to Reprocess?")) return;
        
        var oAPM =  {
            EmployeeID : parseInt(oEmpIDs[0]),
            StartDate : icsdateformat(dtDateFrom),
            EndDate : icsdateformat(dtDateTo)
        };

        $('#btnReProcess').hide();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/ProcessManagementV2/EmployeeWiseManualAttendanceProcess",
            traditional: true,
            data: JSON.stringify(oAPM),
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {
                var  oAttendanceDailys= [];
                oAttendanceDailys = jQuery.parseJSON(data);
                if (oAttendanceDailys.length>0 && oAttendanceDailys[0].ErrorMessage=="")
                {
                    RefreshList(oAttendanceDailys);
                }
                else
                {
                    alert(oAttendanceDailys[0].ErrorMessage);
                    oAttendanceDailys=[];
                    RefreshList(oAttendanceDailys);
                }
                $('#btnReProcess').show();
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }


    $('#btnExportToExcel').click(function(e){
        if(_sBusinessUnitIds=="" || _sBusinessUnitIds == null)
        {
            alert("Please Select Business Unit");
            return;
        }
        if(_sLocationID=="" || _sLocationID == null)
        {
            alert("Please Select Location");
            return;
        }
        var tsv=((new Date()).getTime())/1000;
        sParam = $('#dtStartDate').datebox('getValue') + '~' + $('#dtEndDate').datebox('getValue') + '~' + _sBusinessUnitIds + '~' + _sLocationID + '~'+_sDepartmentIds;
        window.open(_sBaseAddress+'/AttendanceDaily_ZN/DailyAttendanceExcelReport?sParam='+ sParam +'&ts='+tsv,"_blank");
    });
    $(function(){
        $('#tblAttendanceDaily').datagrid({
            onDblClickRow: function(rowIndex) {
                $('#tblAttendanceDaily').datagrid('selectRow',rowIndex);
                var oAttDaily =$("#tblAttendanceDaily").datagrid("getSelected");
                $('#timeSpinner').timespinner('setValue', oAttDaily.InTimeInString);
                $('#txtOutTime').timespinner('setValue', oAttDaily.OutTimeInString);
                $('#cboEditedShift').val(oAttDaily.ShiftID);
                $('#chkIsOSD').prop('checked', oAttDaily.IsOSD);

                if(oAttDaily.InTimeInString != "-" || oAttDaily.OutTimeInString != "-" ) {
                    $('#chkIsPresent').prop('checked', true);
                }
                else {
                    $('#chkIsPresent').prop('checked', false);
                }

                if(oAttDaily.LateArrivalMinute <= 0  && oAttDaily.InTimeInString != "-") {
                    $('#chkIsConsiderLate').prop('checked', true);
                }
                else {
                    $('#chkIsConsiderLate').prop('checked', false);
                }
                if(oAttDaily.EarlyDepartureMinute <= 0 && oAttDaily.OutTimeInString != "-") {
                    $('#chkIsConsiderEarlyLeave').prop('checked', true);
                }
                else {
                    $('#chkIsConsiderEarlyLeave').prop('checked', false);
                }
                if(oAttDaily.IsDayOff == true) {
                    $('#chkIsDayoff').prop('checked', true);
                }
                else {
                    $('#chkIsDayoff').prop('checked', false);
                }
                if(oAttDaily.IsHoliday == true) {
                    $('#chkIsHoliday').prop('checked', true);
                }
                else {
                    $('#chkIsHoliday').prop('checked', false);
                }
                $('#txtRemark').val(oAttDaily.Remark);

                //alert(oAttDaily.InTimeInString);
                //alert(oAttDaily.OutTimeInString);
                //if(oAttDaily.InTimeInString=="-" && oAttDaily.OutTimeInString=="-")
                //{
                //    $('#chkIsAbsent').prop('checked', true);
                //}
                //else
                //{
                //    $('#chkIsAbsent').prop('checked', false);
                //}
                $('#spAttStatus').html("Description : "+oAttDaily.AttStatusInString);



                if(oAttDaily.IsManualOT == true) {
                    $('#chkIsManualOT').prop('disabled',true);
                    $('#chkIsManualOT').prop('checked', true);
                }
                else {
                    $('#chkIsManualOT').prop('disabled',false);
                    $('#chkIsManualOT').prop('checked', false);
                }
                $('#txtManualOT').val(oAttDaily.OverTimeInMinute);


                $("#winManualAttendance").icsWindow('open');
            }
        });
    });

    $("#btnManualAttendanceClose").click(function(e){
        $('#timeSpinner').timespinner('setValue', '00:00');
        $('#txtOutTime').timespinner('setValue', '00:00');
        $('#cboEditedShift').val(0);
        $('#txtRemark').val('');
        $('#IsOSD').prop('checked', false);
        $('#chkIsConsiderLate').prop('checked', false);
        $('#chkIsConsiderEarlyLeave').prop('checked', false);
        $('#chkIsAbsent').prop('checked', false);
        $('#chkIsHoliday').prop('disabled',false);
        $('#chkIsPresent').prop('disabled',false);
        $('#txtManualOT').val('');
        $("#winManualAttendance").icsWindow('close');
    });


    //$('#cboEditedShift').change(function(e){

    //    debugger;
    //    if(document.getElementById("chkIsPresent").checked == true)
    //    {
    //        var startTime = "";
    //        var endTime = "";
    //        var shiftID = $('#cboEditedShift').val();
    //        for(var i = 0; i < _oShifts.length; i++) {
    //            if(shiftID == _oShifts[i].ShiftID) {
    //                startTime = _oShifts[i].StartTimeInString;
    //                endTime = _oShifts[i].EndTimeInString;
    //                break;
    //            }
    //        }

    //        $('#timeSpinner').timespinner('setValue', startTime);
    //        $('#txtOutTime').timespinner('setValue', endTime);
    //    }
    //});

    $('#chkIsPresent').click(function()
    {
        debugger;
        if(document.getElementById("chkIsPresent").checked == true)
        {

            var startTime = "";
            var endTime = "";
            var shiftID = $('#cboEditedShift').val();
            for(var i = 0; i < _oShifts.length; i++) {
                if(shiftID == _oShifts[i].ShiftID) {
                    startTime = _oShifts[i].StartTimeInString;
                    endTime = _oShifts[i].EndTimeInString;
                    break;
                }
            }

            $('#timeSpinner').timespinner('setValue', startTime);
            $('#txtOutTime').timespinner('setValue', endTime);
        }
    });

    $("#btnManualAttendanceUpdate").click(function(e){
        var oAttDaily =$("#tblAttendanceDaily").datagrid("getSelected");
        var SelectedRowIndex = $('#tblAttendanceDaily').datagrid('getRowIndex', oAttDaily);
        oAttDaily.InTime=$('#timeSpinner').timespinner('getValue');
        oAttDaily.OutTime=$('#txtOutTime').timespinner('getValue');
        oAttDaily.ShiftID=$('#cboEditedShift').val();
        oAttDaily.IsOSD=$('#chkIsOSD').is(':checked');
        oAttDaily.IsDayOff=$('#chkIsDayoff').is(':checked');
        oAttDaily.IsAbsent=$('#chkIsAbsent').is(':checked');
        oAttDaily.IsHoliday=$('#chkIsHoliday').is(':checked');
        oAttDaily.LateArrivalMinute = $('#chkIsConsiderLate').is(':checked')?0:1;
        oAttDaily.EarlyDepartureMinute = $('#chkIsConsiderEarlyLeave').is(':checked')?0:1;
        if($('#chkIsAbsent').is(':checked'))
        {
            oAttDaily.InTime='00:00';
            oAttDaily.OutTime='00:00';
        }
        oAttDaily.Remark=$('#txtRemark').val();
        if($('#chkIsManualOT').is(':checked'))
        {
            oAttDaily.IsManualOT=$('#chkIsManualOT').is(':checked');
            oAttDaily.OverTimeInMinute=$('#txtManualOT').val();
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceDaily/AttendanceDaily_Manual_Single",
            traditional: true,
            data: JSON.stringify(oAttDaily),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                var oAttDaily = jQuery.parseJSON(data);
                if (oAttDaily.AttendanceID>0)
                {
                    $('#tblAttendanceDaily').datagrid('updateRow', { index: SelectedRowIndex, row: oAttDaily });
                    alert("Update Successfully !");
                    $("#winManualAttendance").icsWindow('close');
                }
                else
                {
                    alert(oAttDaily.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });

    function RefreshAtt(oARows,sType)
    {
        if(sType=='Append')
        {
            data={"total":""+oARows.length+"","rows":oARows};
            $('#tblAttendanceDaily').datagrid('loadData',data);
        }
        if(oARows.length>0)
        {
            var nTotalOT = 0;
            if(sType=='Append')
            {
                for(var i=0;i<oARows.length;i++)
                {
                    nTotalOT = parseFloat(nTotalOT)+parseFloat(oARows[i].OverTimeInMinute);
                }
            }
            else if(sType=='Update')
            {
                for(var i=0;i<oARows.length-1;i++)
                {
                    nTotalOT = parseFloat(nTotalOT)+parseFloat(oARows[i].OverTimeInMinute);
                }
            }

            var OTST=TotalOTInST(nTotalOT);

            var oAttendance =
            {
                AttendanceDateInString : '',
                InTimeInString : '',
                OutTimeInString : '',
                AttDescriptionInString : '',
                ShiftName : '',
                TotalWorkingHourSt : '<b>Total OT</b>',
                OverTimeInMinuteHourSt : '<b>'+OTST+'</b>'
            }
            if(sType=='Append')
            {
                $('#tblAttendanceDaily').datagrid('appendRow',oAttendance);
            }
            else if(sType=='Update')
            {
                $('#tblAttendanceDaily').datagrid('updateRow', { index: oARows.length-1, row: oAttendance });
            }
        }
    }

    function TotalOTInST(nTotalOT)
    {
        var S = "";
        if (nTotalOT > 0)
        {
            if (nTotalOT / 60 >= 1) { S += ((nTotalOT - nTotalOT % 60) / 60) + "h "; }
            if (nTotalOT % 60 != 0) { S += (nTotalOT % 60) + "m"; }
            return S;
        }
        else return "-";
    }

    $('#btnPrintBangla').click(function (e)
    {
        var nPType=$("#cboPrintType").val();
        if(nPType==0)
        {
            alert("Please select one type!");
            return;
        }
        else if(nPType==102)
        {
            TimeCardF2Bangla('F2');
        }
        else if(nPType==104)
        {
            TimeCardF2Bangla('F3');
        }
    });
    $('#btnPrint').click(function (e)
    {
        var nPType=$("#cboPrintType").val();
        if(nPType==0)
        {
            alert("Please select one type!");
            return;
        }
        var sTempString=TempString();
        if(sTempString == "")
        {
            return;
        }
        var sVersion = "";
            
        //if(nPType==107)
        //{
        //    window.open(_sBaseAddress + '/Compliance/PrintTimeCard_F7?sTemp='+sTempString+"&nType="+nPType+"&sVersion="+sVersion);
        //}
        //else
        //{
        if(nPType < 100) // for dynamic
        {
            //PrintTimeCardConf();
            sTempString += "~";sTempString += $('#cboPrintType').val();
            window.open(_sBaseAddress + '/TimeCard/PrintTimeCardConf?sTemp='+sTempString);
        }
        else // for static
        {
            window.open(_sBaseAddress + '/TimeCard/PrintTimeCard?sTemp='+sTempString+"&nType="+nPType+"&sVersion="+sVersion);
        }
        //}
        
    });
    //$('#btnPrint').click(function (e)
    //{
    //    var nPType=$("#cboPrintType").val();
    //    if(nPType==0)
    //    {
    //        alert("Please select one type!");
    //        return;
    //    }
    //    var sTempString=TempString();
    //    if(sTempString == "")
    //    {
    //        return;
    //    }
    //    var sVersion = "";
    //    if(nPType==2)sVersion="F2";
    //    if(nPType==3)sVersion="F2.1";
    //    if(nPType==4)sVersion="F3";
    //    if(nPType==5)sVersion="F4";
    //    window.open(_sBaseAddress + '/AttendanceDaily_ZN/PrintTimeCard?sTemp='+sTempString+"&nType="+nPType+"&sVersion="+sVersion);

        //else if(nPType==1)
        //{
        //    PrintMamiyaTimeCard();
        //}
        //else if(nPType==2)
        //{
        //    PrintTimeCard_F2('F2');
        //}
        //else if(nPType==3)
        //{
        //    PrintTimeCard_F2('F2.1');
        //}
        //else if(nPType==4)
        //{
        //    PrintTimeCard_F2('F3');
        //}
        //else if(nPType==5)
        //{
        //    PrintTimeCard_F4('F4');
        //}
        //else if(nPType==6)
        //{
        //    PrintTimeCard_F6();
        //}
        //else if(nPType==7)
        //{
        //    PrintTimeCard_F7();
        //}
        //else if(nPType==8)
        //{
        //    PrintTimeCard_FC7();
        //}
        //else if(nPType==20)
        //{
        //    PrintTimeCard_AMG();
        //}
        //else if(nPType==21)
        //{
        //    PrintTimeCard_Worker();
        //}
    //});



    $('#txtEmpCodeForSearch').keyup(function (e) {
        var nCode = (e.keyCode ? e.keyCode : e.which);
        var c = String.fromCharCode(e.which);
        var txtSearchbyCode = $("#txtEmpCodeForSearch").val();
        if (nCode != 13) return;
        GetEmployeeByNameCode(txtSearchbyCode, true);
        $("#txtEmpCodeForSearch").val('');
        $("#txtEmpCodeForSearch").focus();
    });

    function GetEmployeeByNameCode(sNameCode,bIsCode)
    {
        var nts = ((new Date()).getTime()) / 1000;
        $.ajax
        ({
            type: "GET",
            dataType: "json",
            url : _sBaseAddress+  "/Employee/GetByEmployeeNameCode",
            data: {sNameCode:sNameCode,bIsCode:bIsCode,nts:nts},
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmployees = jQuery.parseJSON(data);
                if(oEmployees.length>0)
                {
                    var bAppend=false;
                    var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');

                    if(oTEmps.length>0)
                    {
                        for (var i = 0; i < oEmployees.length; i++)
                        {
                            var IsAppend=true;
                            for (var j = 0; j < oTEmps.length; j++)
                            {
                                if(oEmployees[i].EmployeeID==oTEmps[j].EmployeeID)
                                {
                                    IsAppend=false;
                                    break;
                                }
                            }
                            if(IsAppend)
                            {
                                bAppend=true;
                                $('#tblEmployeesForPicker').datagrid('appendRow', oEmployees[i]);
                            }
                        }
                    }
                    else
                    {
                        DynamicRefreshList(oEmployees, "tblEmployeesForPicker");
                    }
                    //SessionStorageList();
                }
                else
                {
                    alert('Data not found.!!!');
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }


    /*------------EmployeeGroup--------------*/

    $('#txtEmployeeGroup').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroup").val();
            var sTempName = "";
            SearchEmployeeGroup(txtSearchByGroup);
            $("#txtEmployeeGroup").val('');
        }
    });


    $("#btnEmployeeGroupPicker").click(function(e){
        SearchEmployeeGroup("");
    });
    function SearchEmployeeGroup(name) {
        $("#txtEmployeeGroup").val("");
        _sGroupNames = "";
        _sGroupIDs = "";
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oGroups.length; i++)
                    {
                        _sGroupNames += oGroups[i].Name+",";
                        _sGroupIDs += oGroups[i].EmployeeTypeID+",";

                    }
                    _sGroupNames=_sGroupNames.substring(0,_sGroupNames.length-1);
                    _sGroupIDs=_sGroupIDs.substring(0,_sGroupIDs.length-1);
                    $("#txtEmployeeGroup").val(_sGroupNames);
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }

    $("#btnEmployeeGroupPickerReset").click(function(e){

        $('#txtEmployeeGroup').val("");
        _sGroupIDs = "";
    });


    /*------------EmployeeBlock--------------*/

    $("#btnEmployeeBlockReset").click(function(e){
        $("#txtEmployeeBlock").val("");
        _sBlockNames = "";
        _sBlockIDs = "";
    });
    $('#txtEmployeeBlock').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlock").val();
            var sTempName = "";
            SearchEmployeeBlock(txtSearchByBlock);
            $("#txtEmployeeBlock").val('');
        }
    });

    $("#btnEmployeeBlockPicker").click(function(e){
        SearchEmployeeBlock("");
    });
    function SearchEmployeeBlock(name) {
        $("#txtEmployeeBlock").val("");
        _sBlockNames = "";
        _sBlockIDs = "";
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNames += oBlocks[i].Name+",";
                        _sBlockIDs += oBlocks[i].EmployeeTypeID+",";

                    }
                    _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                    _sBlockIDs=_sBlockIDs.substring(0,_sBlockIDs.length-1);
                    $("#txtEmployeeBlock").val(_sBlockNames);
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }

    ///*------------- Start Block Picker----------------*/

    //$("#btnBlock,#btnBlock_Collection").click(function(e){
    //    BlockPicker($(this).attr("id"));
    //});

    //function BlockPicker(btnBlock)
    //{
    //    var oBlockMachineMapping={
    //        ProductionProcessInt:0,
    //        DepartmentID:0,
    //        BlockName:""
    //    }
    //    var obj = {
    //        BaseAddress: _sBaseAddress,
    //        Object: oBlockMachineMapping,
    //        ControllerName: "BlockMachineMapping",
    //        ActionName: "BlockMachineMapping_Search",
    //        IsWinClose: false
    //    };
    //    $.icsDataGets(obj, function (response) {

    //        if (response.status && response.objs.length > 0) {
    //            if (response.objs[0].BMMID > 0) {
    //                var tblColums = [];
    //                var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
    //                var bmultiplereturn=true;
    //                if(btnBlock=="btnBlock"){bmultiplereturn=false;}
    //                var oPickerParam = {
    //                    winid: 'winBlock',
    //                    winclass:'clsBlock',
    //                    winwidth: 320,
    //                    winheight: 460,
    //                    tableid: 'tblShift',
    //                    tablecolumns: tblColums,
    //                    datalist: response.objs,
    //                    multiplereturn: bmultiplereturn,
    //                    searchingbyfieldName:'BlockName',
    //                    windowTittle: 'Block List'
    //                };
    //                $.icsPicker(oPickerParam);
    //                IntializeBlockPickerbutton(oPickerParam,btnBlock);//multiplereturn, winclassName
    //            }
    //            else { alert(response.objs[0].ErrorMessage); }
    //        }
    //    });
    //}

    //function IntializeBlockPickerbutton(oPickerobj,btnBlock)
    //{
    //    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
    //        var oBlocks=[];
    //        if(btnBlock=="btnBlock"){
    //            var oBlock= $('#'+oPickerobj.tableid).datagrid('getSelected');
    //            oBlocks.push(oBlock);
    //        }
    //        else
    //        {
    //            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
    //        }
    //        if (oPickerobj.winid == 'winBlock')
    //        {
    //            if(oBlocks!=null && oBlocks.length>0){
    //                $("#"+oPickerobj.winid).icsWindow("close");
    //                $("#" + oPickerobj.winid).remove();

    //                for(var i=0; i<oBlocks.length; i++)
    //                {
    //                    _sBlockNames += oBlocks[i].BlockName+",";
    //                    _sBMMIDs += oBlocks[i].BMMID+",";

    //                }
    //                _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
    //                _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
    //                if(btnBlock=="btnBlock"){$("#txtBlock").val(_sBlockNames);}else{$("#txtBlock_Collection").val(_sBlockNames);}
    //            }
    //            else
    //            {
    //                alert("Please select a Block.");
    //            }
    //        }
    //    });
    //}

    //$("#btnResetBlock,#btnResetBlock_Collection").click(function(e){
    //    $('#txtBlock').val("");
    //    $('#txtBlock_Collection').val("");
    //    _sBlockNames="";
    //    _sBMMIDs = "";
    //});

    //$("#txtBlock,#txtBlock_Collection").keypress(function(e){
    //    if (e.which == 13)
    //    {
    //        BlockPicker();
    //    }
    //});
    //    /*------------- End Block Picker----------------*/

    $("#chkIsManualOT").click(function(e){
        if($('#chkIsManualOT').is(':checked'))
        {
            $("#txtManualOT").prop('disabled',false);
        }
        else{$("#txtManualOT").prop('disabled',true);}
    });

    /*------------EmployeeGroupAdv--------------*/

    $("#btnEmployeeGroupResetAdv").click(function(e){
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
    });

    $('#txtEmployeeGroupAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroupAdv").val();
            var sTempName = "";
            SearchEmployeeGroupAdv(txtSearchByGroup);
            $("#txtEmployeeGroupAdv").val('');
        }
    });


    $("#btnEmployeeGroupPickerAdv").click(function(e){
        SearchEmployeeGroupAdv("");
    });
    function SearchEmployeeGroupAdv(name) {
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oGroups.length; i++)
                    {
                        _sGroupNamesAdv += oGroups[i].Name+",";
                        _sGroupIDsAdv += oGroups[i].EmployeeTypeID+",";

                    }
                    _sGroupNamesAdv=_sGroupNamesAdv.substring(0,_sGroupNamesAdv.length-1);
                    _sGroupIDsAdv=_sGroupIDsAdv.substring(0,_sGroupIDsAdv.length-1);
                    $("#txtEmployeeGroupAdv").val(_sGroupNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }


    /*------------EmployeeBlockAdv--------------*/

    $('#txtEmployeeBlockAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlockAdv").val();
            var sTempName = "";
            SearchEmployeeBlockAdv(txtSearchByBlock);
            $("#txtEmployeeBlockAdv").val('');
        }
    });

    $("#btnEmployeeBlockPickerAdv").click(function(e){
        SearchEmployeeBlockAdv("");
    });
    function SearchEmployeeBlockAdv(name) {
        $("#txtEmployeeBlockAdv").val("");
        _sBlockNamesAdv = "";
        _sBlockIDsAdv = "";
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNamesAdv += oBlocks[i].Name+",";
                        _sBlockIDsAdv += oBlocks[i].EmployeeTypeID+",";

                    }
                    _sBlockNamesAdv=_sBlockNamesAdv.substring(0,_sBlockNamesAdv.length-1);
                    _sBlockIDsAdv=_sBlockIDsAdv.substring(0,_sBlockIDsAdv.length-1);
                    $("#txtEmployeeBlockAdv").val(_sBlockNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }


    $("#btnEmployeeBlockResetAdv").click(function(e){
        debugger;
        _sBlockNamesAdv = "";
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDsAdv = "";
    });


</script>
