@{
    ViewBag.Title = "FN Production List";
}
@model IEnumerable<ESimSol.BusinessObjects.FNProduction>
    <div class="menuMainCollectionTable" ng-app="FNProductionApp" style="height:510px">
        <div ng-controller="FNProductionController">
            <div title="FNProduction List" class="row ui-grid-top-panel">
                <div class="container">
                    <div class="form-inline">
                        <input type="text" ng-model="txtSearchByName" ng-keyup="SearchByName($event)" placeholder="Search by Machine Name" style="width:170px"/>
                        <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Search()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span>Adv. Search</button>
                        <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Add()"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> New</button>
                        <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Edit()" ng-hide="btnEdit"> <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit</button>
                        <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Delete()" ng-hide="btnDelete"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Delete</button>
                        <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="View()"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> View</button>
                    </div>
                </div>
            </div>
            <div ui-grid="gridOptions" ui-grid-selection  class="grid-angular"></div>
        </div>
    </div>
<style type="text/css">
    .grid-angular {
        width:100%;
        height:500px;
    }
</style>
<script type="text/javascript">
    debugger;
    var oFNProductions =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oFNProductionTypes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.FNProductionTypes));
    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.CompareOperators));
    var oFNTreatments = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.FNTreatments));
    var oFNProcessList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.FNProcessList));
    var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    debugger;

    var CCapp= angular.module('FNProductionApp', ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.cellNav','ms.service','ui.grid.pinning']);
    CCapp.controller('FNProductionController',function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession,advanceSearch)
    {
        oFNProductions= (userSession.getData('FNProductions').length>0)? userSession.getData('FNProductions'):oFNProductions;
        
        $scope.gridOptions= {
            multiSelect: false,
            enableFullRowSelection: true,
            columnDefs: [
              { field: 'FNMachineName', name:'Machine Name',cellClass: 'text-left', width:'20%' },
              { field: 'FNTreatmentSt', name:'Treatment',cellClass: 'text-left', width:'10%' },
              { field: 'FNProcess', name:'Process',cellClass: 'text-left', width:'12%' },
              { field: 'IssueDateSt', name:'Issue Date',cellClass: 'text-left', width:'10%' },
              { field: 'StartDateTimeSt', name:'Start Time', width:'14%' , enableSorting: false},
              { field: 'EndDateTimeSt', name:'End Time', width:'14%' , enableSorting: false},
              { field: 'NoOfBatchInOrder', name:'No Of Batch', width:'14%' , enableSorting: false}

            ],
            data: oFNProductions,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.selection.selectRow($scope.gridOptions.data[userSession.getRowIndex()]);
                userSession.clear();
            }
        };

        $scope.Search = function()
        {
            debugger;

            var oFNMachine = {
                Name: '@@FNMachineID',
                CheckActiveProcess:true,
                FNMachineTypeInt:1//forEnumFNMachineType None = 0,Machine = 1,Batcher_Trolly = 2
            };

            var oColumns = [];
            var oColumn = { field: 'Name', name: 'Name',width: '70%'  };oColumns.push(oColumn);
            oColumn = { field: 'Note', name: 'Note',width: '20%', enableSorting: false  };oColumns.push(oColumn);

            var paramObj_FNMachine={
                obj: oFNMachine,//{FNMachineTypeInt:1, Name:'@@FNMachineID'},
                objName:'Name',
                url:_sBaseAddress+'/FNMachine/GetFNMachines',
                title:'Machine List',
                multiSelect:true,
                columns:oColumns
            }
            var oElementList = [{ DisplayName: "Issue Date",    BOField: "IssueDate",   InputType: 'date' },
                                { DisplayName: "Treatment",      BOField: "FNTreatment",     InputType: 'select', OptionList:oFNTreatments},
                                { DisplayName: "Machine Name",          BOField: "FNMachineID",  InputType: 'picker', PickerObject:paramObj_FNMachine },
                              
            ];
            var modalObj={
                size:'md',
                title:"Advance Search",
                url:_sBaseAddress+'/Home/AdvanceSearch',
                CompareOperators:oCompareOperators,
                HtmlElements:oElementList,
                data:{FNTreatment:1},
                isAdvanceSearch:true, // if TRUE: 'urlAdvanceSearch' should be define
                urlAdvanceSearch:_sBaseAddress + '/FNProduction/Search'
            }

            var modalInstance=advanceSearch.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                $scope.gridOptions.data=result;
            }, function ()
            {
                $log.info('Modal dismissed at: ' + new Date());
            });
        }
        $scope.SearchByName = function(e)
        {
            debugger;
            var txtSearchByName = $scope.txtSearchByName;
            var rows = $scope.gridOptions.data;
            var sTempName="";
            var oSearchedList = [];
            var oCurrentList = $scope.gridOptions.data;
            if (e.which == 8)
            {
                oCurrentList = oFNProductions;
            }
            for(i=0;i<oCurrentList.length;++i){
                sTempName=oCurrentList[i].FNMachineName;
                n=sTempName.toUpperCase().indexOf(txtSearchByName.toUpperCase())
                if(n!=-1)
                {
                    oSearchedList.push(oCurrentList[i]);
                }
            }
            $scope.gridOptions= {data: oSearchedList};
        }
        $scope.Add=function()
        {
            sessionStorage.setItem("FNProductions", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("FNProductionHeader", "Add FN Production");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = _sBaseAddress+ "/FNProduction/ViewFNProduction?id=0";
        }
        $scope.Edit= function ()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oFNProduction= data[0];//get selected index
            if(oFNProduction==null || oFNProduction.FNProductionID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oFNProduction.EndDateTimeSt!="-")
            {
                alert("Already Finished!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oFNProduction);
            sessionStorage.setItem("FNProductions", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("FNProductionHeader", "Edit FN Production");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = _sBaseAddress+  "/FNProduction/ViewFNProduction?id="+oFNProduction.FNProductionID
        }
        $scope.View= function ()
        {
            //debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oFNProduction= data[0];//get selected index
            if(oFNProduction==null || oFNProduction.FNProductionID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oFNProduction);
            sessionStorage.setItem("FNProductions", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("FNProductionHeader", "View FN Production");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = _sBaseAddress+  "/FNProduction/ViewFNProduction?id="+oFNProduction.FNProductionID;
        }

        $scope.Delete = function()
        {
            var data=$scope.gridApi.selection.getSelectedRows();
            var oFNProduction= data[0];//get selected index
            if(oFNProduction==null || oFNProduction.FNProductionID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oFNProduction.EndDateTimeSt!="-")
            {
                alert("Already Finished!");
                return;
            }
            if(oFNProduction.IsDelatable)
            {
                alert("Sorry, This item Can't Delete. It's Almost Complete.");
                return;
            }

            var SelectedRowIndex=$scope.gridOptions.data.indexOf(oFNProduction);
            if (!confirm("Confirm to Delete?")) return ;
            $http.post(_sBaseAddress+ '/FNProduction/Delete',JSON.stringify(oFNProduction)).then(
                            function (response) {
                                debugger;
                                var sMessage= jQuery.parseJSON(response.data).toLowerCase();
                                if(sMessage=='deleted')
                                {
                                    alert("Successfully Deleted.");
                                    $scope.gridOptions.data.splice(SelectedRowIndex,1);
                                }
                                else{
                                    alert(sMessage);
                                    msModal.Message({headerTitle : '', bodyText:result[0].ErrorMessage, sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                }
                            },
                            function (response) {alert(jQuery.parseJSON(response.data));}
                        );

        }

        $scope.PrintList = function()
        {
            var oFNProductions= $scope.gridOptions.data;
            var ids ="";
            if(oFNProductions.length >0)
            {
                for(var i =0;i<oFNProductions.length;i++)
                {
                    ids =ids+oFNProductions[i].FNProductionID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else
            {
                alert("Data not found ");
                return;
            }
            window.open(_sBaseAddress+'/FNProduction/PrintList?sIDs='+ids);
        }
        $scope.ExportToExcel = function()
        {
            var oFNProductions=  $scope.gridOptions.data;
            var ids ="";
            if(oFNProductions.length >0)
            {
                for(var i =0;i<oFNProductions.length;i++)
                {
                    ids =ids+oFNProductions[i].FNProductionID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else
            {
                alert("Data not found ");
                return;
            }
            window.open(_sBaseAddress + '/FNProduction/FNProductionExportToExcel?sIDs='+ids);
        }

    });


</script>