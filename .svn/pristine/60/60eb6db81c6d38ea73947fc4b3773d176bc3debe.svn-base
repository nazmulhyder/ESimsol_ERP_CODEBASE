@{
    ViewBag.Title = "Purchase Return ";
}
<html>
<body>
    @model ESimSol.BusinessObjects.PurchaseReturn
    <div id="divPurchaseReturn" class="easyui-panel menuMainCollectionTable" title="Add Purchase Return" style="font-family:Tahoma; height:100%; width:100%">
        <div style="width:100%; height:87%; text-align:center">
            <fieldset id="fldPurchaseReturn" class="bodyfieldsetstyle" style="height:25%">
                <legend style="text-align:left; font-weight:bold;"> Purchase Return Informations : </legend>
                <table border="0" cellpadding="2" cellspacing="2" style="width:100%;">
                    <tr>
                        <td style="width:9%; text-align:right">
                            Return Type :
                        </td>
                        <td style="width:16%; text-align:center">
                            <select style="width:100%" id="cboRefType"></select>
                        </td>
                         <td style="width:9%; text-align:right">
                            Return No :
                        </td>
                        <td style="width:13%; text-align:center">
                            <input type="text" style="width:100%" id="txtReturnNo" disabled="disabled" />
                        </td>
                        <td style="width:10%; text-align:right">
                            Return Date :
                        </td>
                        <td style="width:16%; text-align:left">
                            <input id="txtReturnDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100%" />
                        </td>
                        <td style="width:10%; text-align:right">
                            Store :
                        </td>
                        <td style="width:17%; text-align:left">
                            <input id="txtWorkingUnit" style="width:80%;" type="text" placeholder="Type store & Press Enter" />
                            <input type="button" value="P" style="width:16%;" id="btnPickWorkingUnit" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:9%; text-align:right">
                            Supplier:
                        </td>
                        <td colspan="3" style="width:39%; text-align:left">
                            <table border="0" cellpadding="0" cellspacing="0" width="102%">
                                <tr>
                                    <td style="width:85%">
                                        <input type="text" style="width:98%" id="txtSupplierName" placeholder="Press Enter With Vendor Name" />
                                    </td>
                                    <td style="width:15%; text-align:right">
                                        <input type="button" style="width:100%;" id="btnPickSupplier" value="Pick" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width:10%; text-align:right">
                            <label id="lblRefNo" style="font-weight:normal">PO No :</label>
                        </td>
                        <td style="width:16%; text-align:left">
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td style="width:85%">
                                        <input type="text" style="width:98%" id="txtRefNo" />
                                    </td>
                                    <td style="width:15%; text-align:right">
                                        <input type="button" style="width:100%;" id="btnPickRefObject" value="Pick" />
                                    </td>
                                </tr>
                            </table>             
                        </td>
                        <td style="width:10%; text-align:right">
                            <label id="lblRefDate" style="font-weight:normal">PO Date :</label>
                        </td>
                        <td style="width:17%; text-align:left">
                            <input type="text" style="width:100%" id="txtRefDate" disabled="disabled" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:9%; text-align:right">
                            Remarks :
                        </td>
                        <td style="width:91%; text-align:left" colspan="7">
                            <input type="text" style="width:100%" id="txtRemarks" />   
                        </td>
                    </tr>
                </table>
            </fieldset>
            <div style="height:70%; width:100%">
                <table id="tblPurchaseReturnDetail" title="Item Descriptions" class="easyui-datagrid" style="width:101%; height:305px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="onClickRow: onClickRow">
                    <thead data-options="frozen:true">
                        <tr>
                            <th field="ProductCode" width="10%" align="left"> Item Code</th>
                            <th field="ProductName" width="20%" align="left">Item Name</th>
                            <th field="StyleNo" width="10%" align="left">Style No</th>
                            <th field="BuyerName" width="10%" align="left">Buyer Name</th>
                        </tr>
                    </thead>
                    <thead>
                        <tr>                            
                            <th field="ColorName" width="10%" align="left">Color</th>
                            <th field="SizeName" width="10%" align="left">Size</th>                            
                            <th field="MUSymbol" width="5%" align="left">Unit</th>
                            <th field='RefDetailQty' formatter="formatPrice" width="10%" align="right"> PO/Invoice Qty</th>
                            <th field='YetToPurchaseReturnQty' formatter="formatPrice" width="10%" align="right">Yet To Return</th>
                            <th field='LotBalance' formatter="formatPrice" width="10%" align="right">Lot Balance</th>
                            <th data-options="field:'ReturnQty',align:'right',editor:{type:'numberbox',options:{precision:2}}" formatter="formatPrice" width="10%">Return Qty</th>
                            <th field='LotNo' align="left" width="15%">Lot No</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbar">
                    <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="false"></a>                    
                    <a id="btnPickItem" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="false">Pick Item</a>
                    <a id="btnUpdateStyle" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="false">Update Style</a>
                    <a id="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="false">Remove</a>
                    <a id="btnCopyItem" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-copy" plain="false">Copy Item</a>
                </div>
            </div>
        </div>
        <div style="width:100%; height:10%">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:70%; text-align:right"></td>
                        <td style="width: 20%; text-align:right;">
                            <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="false">Approve</a>
                            <a id="btnDisburse" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-disburse" plain="false">Disburse</a>
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="false">Save</a>
                        </td>
                        <td style="width: 10%; text-align:right;">
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="false">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
</body>
</html>
<script type="text/javascript">
    $(document).ready(function () {
        var oPurchaseReturn =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oRefTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.RefTypes));
        var oStores = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Stores));
        var oClientOperationSetting = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ClientOperationSetting));
        debugger;
        $('#txtReturnDate').datebox('setValue',icsdateformat(new Date()));
        $('#divPurchaseReturn').data('ClientOperationSetting', oClientOperationSetting);
        $('#divPurchaseReturn').data('PurchaseReturn', oPurchaseReturn);
        $('#cboRefType').data('RefTypes', oRefTypes);
        $('#txtWorkingUnit').data('Stores', oStores);
        var sPurchaseReturnHeader=sessionStorage.getItem("PurchaseReturnHeader");
        $('#divPurchaseReturn').panel({ title:sPurchaseReturnHeader});
        RefreshControl(oPurchaseReturn);
        if(sPurchaseReturnHeader=="View Purchase Return" || sPurchaseReturnHeader=="Disburse Purchase Return" || sPurchaseReturnHeader=="Approve Purchase Return")
        {
            $('#fldPurchaseReturn input,select').prop('disabled',true);
            $('#txtReturnDate').datebox({disabled:true});
            $('#txtReturnDate').datebox('setValue', oPurchaseReturn.ReturnDateInString);
            $('#btnSave').hide();
            $('#btnApprove').hide();
            $('#btnDisburse').hide();
            if(sPurchaseReturnHeader=="Approve Purchase Return")
            {
                $('#btnApprove').show();
                $('#btnDisburse').hide();
            }
            else if(sPurchaseReturnHeader=="Disburse Purchase Return")
            {
                $('#btnApprove').hide();
                $('#btnDisburse').show();
            }
        }
        else {
            $('#btnApprove').hide();
            $('#btnDisburse').hide();
            $('#btnSave').show();
        }
    });

   

    function RefreshControl(oPurchaseReturn)
    {
        RefreshComboBoxes();
        $('#cboRefType').val(oPurchaseReturn.RefTypeInt);
        $('#txtReturnNo').val(oPurchaseReturn.ReturnNo);
        $('#txtReturnDate').datebox('setValue', oPurchaseReturn.ReturnDateInString);
        $('#txtSupplierName').val(oPurchaseReturn.SupplierName);    
        $('#txtRefNo').val(oPurchaseReturn.RefNo);
       // $('#txtRefDate').val(oPurchaseReturn.RefObjectDateSt);
        $('#txtRemarks').val(oPurchaseReturn.Remarks);
        $('#txtWorkingUnit').val(oPurchaseReturn.WorkingUnitName);
        if(parseInt(oPurchaseReturn.WorkingUnitID)>0)
        {
            $('#txtWorkingUnit').addClass('fontColorOfPickItem');
        }
        
        if(parseInt(oPurchaseReturn.SupplierID)>0)
        {
            $('#txtSupplierName').addClass('fontColorOfPickItem');
        }
        if(parseInt(oPurchaseReturn.RefObjectID)>0)
        {
            $('#txtRefNo').addClass('fontColorOfPickItem');
            $('#txtRefDate').addClass('fontColorOfPickItem');
        }
        var sPurchaseReturnHeader=sessionStorage.getItem("PurchaseReturnHeader");
        $("#btnPickRefObject").prop("disabled", (sPurchaseReturnHeader=="View Purchase Return" || sPurchaseReturnHeader=="Confirm Purchase Return" || sPurchaseReturnHeader=="Approve Purchase Return"));   
        DynamicRefreshList($('#divPurchaseReturn').data('PurchaseReturn').PurchaseReturnDetails, 'tblPurchaseReturnDetail');
        RefreshGridColumn();
    }

    function RefreshComboBoxes()
    {
        var oRefTypes=$('#cboRefType').data('RefTypes');     

       // oRefTypes.splice(0,1);
        $("#cboRefType").icsLoadCombo({List: oRefTypes,OptionValue: "id",DisplayText: "Value",InitialValue:'Default'});
     
    }

    $('#cboRefType').change(function(){
        RefTypeChange(true);
    });

    function RefTypeChange(bIsComboChange)
    {
        //EnumRefType : LocalInvoice = 1, ImportInvoice = 2, WorkOrder = 3, ImportPI = 4,  PurchaseOrder = 5
        var nRefType = parseInt($('#cboRefType').val());
        if(nRefType===1 || nRefType===2)
        {
            $('#lblRefNo').html('Invoice No :');
            $('#lblRefDate').html('Invoice Date :');
        }else if(nRefType===3)// For Work Order
        {
            $('#lblRefNo').html('WO No :');
            $('#lblRefDate').html('WO Date :');
        }
        else if(nRefType===4)// For Import PI
        {
            $('#lblRefNo').html('Import PI :');
            $('#lblRefDate').html('PI Date :');
        }
        else if(nRefType===5)// For Purchase Order
        {
            $('#lblRefNo').html('PO No :');
            $('#lblRefDate').html('PO Date :');
        }

        $('#txtRefNo').val('');
        $('#txtRefDate').val('');
        $('#divPurchaseReturn').data('PurchaseReturn').RefObjectID=0;
  
        $("#btnPickRefObject").prop("disabled", false);
        $('#btnPickItem').show();
        DynamicRefreshList([], 'tblPurchaseReturnDetail');
        RefreshGridColumn();
    }

    function RefreshGridColumn()
    {
        //EnumRefType : LocalInvoice = 1, ImportInvoice = 2, WorkOrder = 3, ImportPI = 4,  PurchaseOrder = 5
      debugger;
        var nRefType = parseInt($('#cboRefType').val());
        if(nRefType===1 || nRefType===2 || nRefType===4 || nRefType===5)
        {
            $('#tblPurchaseReturnDetail').datagrid('hideColumn', 'ColorName');
            $('#tblPurchaseReturnDetail').datagrid('hideColumn', 'SizeName');
            $('#tblPurchaseReturnDetail').datagrid('hideColumn', 'StyleNo');
            $('#tblPurchaseReturnDetail').datagrid('hideColumn', 'BuyerName');
        }
        else
        {

            $('#tblPurchaseReturnDetail').datagrid('hideColumn', 'StyleNo');
            $('#tblPurchaseReturnDetail').datagrid('hideColumn', 'BuyerName');
            $('#tblPurchaseReturnDetail').datagrid('showColumn', 'ColorName');
            $('#tblPurchaseReturnDetail').datagrid('showColumn', 'SizeName');
        }
        if(nRefType===2 || nRefType===3 || nRefType===4 )
        {
            $('#tblPurchaseReturnDetail').datagrid('showColumn', 'StyleNo');
            $('#tblPurchaseReturnDetail').datagrid('showColumn', 'BuyerName');
        }
        if(parseInt(nRefType)===2 || parseInt(nRefType)===4 )
        {
            $('#btnCopyItem').hide();
        }
        else
        {
            $('#btnCopyItem').show();
        }
        var oClientOperationSetting = $('#divPurchaseReturn').data('ClientOperationSetting');
        if(parseInt(oClientOperationSetting.Value)==0)//if not Apply
        {
            $('#tblPurchaseReturnDetail').datagrid('hideColumn', 'StyleNo');
            $('#tblPurchaseReturnDetail').datagrid('hideColumn', 'BuyerName');
            $('#btnUpdateStyle').hide();
        }
    }

    function ValidateInput()
    {
        var oPurchaseReturn=$('#divPurchaseReturn').data('PurchaseReturn');

        if (parseInt($("#cboRefType").val()) === 0) {
            alert("Please slect PurchaseReturn Type");
            $("#cboRefType").addClass("errorFieldBorder");
            $("#cboRefType").focus();
            return false;
        } else {
            $("#cboRefType").removeClass("errorFieldBorder");
        }

        var txtReturnDate = $('#txtReturnDate').datebox('getValue');
        if(txtReturnDate === null || txtReturnDate==="")
        {
            alert("Please Select PurchaseReturn Date!");
            return false;
        }

     
        if (parseInt($("#cboRefType").val()) != 7) {
            if (!parseInt(oPurchaseReturn.SupplierID) || parseInt(oPurchaseReturn.SupplierID)<=0) {
                alert("Please slect an Vendor!");
                $("#txtSupplierName").addClass("errorFieldBorder");
                $("#txtSupplierName").focus();
                return false;
            } else {
                $("#txtSupplierName").removeClass("errorFieldBorder");
            }
        }
        var oPurchaseReturn= $('#divPurchaseReturn').data('PurchaseReturn');
        if ($("#txtWorkingUnit").val()=== null ||  $("#txtWorkingUnit").val()=== "" ||  parseInt(oPurchaseReturn.WorkingUnitID) === 0)
        {
            alert("Please slect received Store!");
            $("#txtWorkingUnit").addClass("errorFieldBorder");
            $("#txtWorkingUnit").focus();
            return false;
        } else {
            $("#txtWorkingUnit").removeClass("errorFieldBorder");
        }


        var oPurchaseReturnDetails = $('#tblPurchaseReturnDetail').datagrid('getRows');
        if(oPurchaseReturnDetails===null || oPurchaseReturnDetails.length<=0)
        {
            alert("Please enter at least one item(s)!")
            return;
        }
        var  nRefType = $('#cboRefType').val();
        for(var i=0; i<oPurchaseReturnDetails.length; i++)
        {
            if(parseFloat(oPurchaseReturnDetails[i].ReturnQty)<=0)
            {
                alert("Please enter Return qty for : "+ oPurchaseReturnDetails[i].ProductName);
                return false;
            }
            if(parseFloat(oPurchaseReturnDetails[i].ReturnQty)>parseFloat(oPurchaseReturnDetails[i].LotBalance))
            {
                alert("Return qty Should be Less than or Equal Lot Balance for  : "+ oPurchaseReturnDetails[i].ProductName);
                return false;
            }
        }
        return true;
    }

    function RefreshObject()
    {
        var oTempPurchaseReturn=$('#divPurchaseReturn').data('PurchaseReturn');
        var oPurchaseReturn= {
            PurchaseReturnID : parseInt(oTempPurchaseReturn.PurchaseReturnID),
            ReturnNo : oTempPurchaseReturn.ReturnNo,
            ReturnDate : $('#txtReturnDate').datebox('getValue'),
            RefTypeInt :parseInt($('#cboRefType').val()),
            BUID :sessionStorage.getItem('BUID'),
            SupplierID : parseInt(oTempPurchaseReturn.SupplierID),
            RefObjectID : parseInt(oTempPurchaseReturn.RefObjectID),
            Remarks : $('#txtRemarks').val(),     
            ApproveBy : parseInt(oTempPurchaseReturn.ApproveBy),
            ApproveDate :oTempPurchaseReturn.ApproveDateSt,
            WorkingUnitID:parseInt(oTempPurchaseReturn.WorkingUnitID),
            PurchaseReturnDetails: $('#tblPurchaseReturnDetail').datagrid('getRows')
        };
        return oPurchaseReturn;
    }

$("#btnSave").click(function(){
    endEditing();
    if(!ValidateInput()) return;
    debugger;
    var oPurchaseReturn=RefreshObject();
    $('#btnSave').hide();
    $.ajax({
        type: "POST",
        dataType: "json",
        url : sessionStorage.getItem('BaseAddress')+"/PurchaseReturn/Save",
        traditional: true,
        data:  JSON.stringify(oPurchaseReturn),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            oPurchaseReturn = jQuery.parseJSON(data);
            $('#btnSave').show();
            if (oPurchaseReturn.ErrorMessage == '' || oPurchaseReturn.ErrorMessage == null)
            {
                   
                if(oPurchaseReturn.PurchaseReturnID>0)
                {
                    alert("Data Save Successfully");
                    $('#txtReturnNo').val(oPurchaseReturn.ReturnNo);
                    var oPurchaseReturns =sessionStorage.getItem("PurchaseReturns");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oPurchaseReturns!=null)
                    {
                        oPurchaseReturns = jQuery.parseJSON(oPurchaseReturns);
                    }
                    else
                    {
                        oPurchaseReturns=[];
                    }
                    if(nIndex!=-1)
                    {
                        oPurchaseReturns[nIndex]=oPurchaseReturn;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oPurchaseReturns.length);
                        oPurchaseReturns.push(oPurchaseReturn);
                    }
                    sessionStorage.setItem("PurchaseReturns", JSON.stringify(oPurchaseReturns));
                    window.location.href = sessionStorage.getItem('BackLink');
                }
                else
                {
                    alert("Invalid Operation!");
                }
            }
            else
            {
                alert(oPurchaseReturn.ErrorMessage);
            }
        },
        error: function (xhr, status, error)
        {
            alert(xhr+'~' +status+'~'+error);
        }
    });
});

$("#btnApprove").click(function(){
    endEditing();
    if(!ValidateInput()) return false;
    if(!confirm('Confirm to Approve?')){return false;}
    var oPurchaseReturn=RefreshObject();
    $.ajax({
        type: "POST",
        dataType: "json",
        url : sessionStorage.getItem('BaseAddress')+  "/PurchaseReturn/Approve",
        traditional: true,
        data:  JSON.stringify(oPurchaseReturn),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            oPurchaseReturn = jQuery.parseJSON(data);
            if (oPurchaseReturn.ErrorMessage == '' || oPurchaseReturn.ErrorMessage == null)
            {
                if(oPurchaseReturn.PurchaseReturnID>0)
                {
                    alert("Approved Successfully");
                    var oPurchaseReturns =sessionStorage.getItem("PurchaseReturns");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oPurchaseReturns!=null)
                    {
                        oPurchaseReturns = jQuery.parseJSON(oPurchaseReturns);
                    }
                    else
                    {
                        oPurchaseReturns=[];
                    }
                    if(nIndex!=-1)
                    {
                        oPurchaseReturns[nIndex]=oPurchaseReturn;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oPurchaseReturns.length);
                        oPurchaseReturns.push(oPurchaseReturn);
                    }
                    sessionStorage.setItem("PurchaseReturns", JSON.stringify(oPurchaseReturns));
                    window.location.href = sessionStorage.getItem('BackLink');
                }
                else
                {
                    alert("Invalid Operation!");
                }
            }
            else
            {
                alert(oPurchaseReturn.ErrorMessage);
            }
        },
        error: function (xhr, status, error)
        {
            alert(xhr+'~' +status+'~'+error);
        }
    });
});

$("#btnDisburse").click(function(){
    endEditing();
    if(!ValidateInput()) return false;
    if(!confirm('Confirm to Disburse?')){return false;}
    var oPurchaseReturn=RefreshObject();
    $.ajax({
        type: "POST",
        dataType: "json",
        url : sessionStorage.getItem('BaseAddress')+  "/PurchaseReturn/Disburse",
        traditional: true,
        data:  JSON.stringify(oPurchaseReturn),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            oPurchaseReturn = jQuery.parseJSON(data);
            if (oPurchaseReturn.ErrorMessage == '' || oPurchaseReturn.ErrorMessage == null)
            {
                if(oPurchaseReturn.PurchaseReturnID>0)
                {
                    alert("Purchase Return Successfully");
                    var oPurchaseReturns =sessionStorage.getItem("PurchaseReturns");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oPurchaseReturns!=null)
                    {
                        oPurchaseReturns = jQuery.parseJSON(oPurchaseReturns);
                    }
                    else
                    {
                        oPurchaseReturns=[];
                    }
                    if(nIndex!=-1)
                    {
                        oPurchaseReturns[nIndex]=oPurchaseReturn;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oPurchaseReturns.length);
                        oPurchaseReturns.push(oPurchaseReturn);
                    }
                    sessionStorage.setItem("PurchaseReturns", JSON.stringify(oPurchaseReturns));
                    window.location.href = sessionStorage.getItem('BackLink');
                }
                else
                {
                    alert("Invalid Operation!");
                }
            }
            else
            {
                alert(oPurchaseReturn.ErrorMessage);
            }
        },
        error: function (xhr, status, error)
        {
            alert(xhr+'~' +status+'~'+error);
        }
    });
});

$("#btnClose").click(function(){
    window.location.href = sessionStorage.getItem('BackLink');
});

 var editIndex = undefined;
 function endEditing() {
     if (editIndex == undefined) { return true }
     if ($('#tblPurchaseReturnDetail').datagrid('validateRow', editIndex)) {
         $('#tblPurchaseReturnDetail').datagrid('endEdit', editIndex);
         $('#tblPurchaseReturnDetail').datagrid('selectRow', editIndex);
         var oPurchaseReturnDetail = $('#tblPurchaseReturnDetail').datagrid('getSelected');
         if(oPurchaseReturnDetail.IsSerialNoApply){oPurchaseReturnDetail.ReturnQty=1;}
         oPurchaseReturnDetail.Amount = parseFloat(parseFloat(oPurchaseReturnDetail.ReturnQty) * parseFloat(oPurchaseReturnDetail.UnitPrice));
         $('#tblPurchaseReturnDetail').datagrid('updateRow', { index: editIndex, row: oPurchaseReturnDetail });
         editIndex = undefined;
         return true;
     }
     else {
         return false;
     }
 }

 function onClickRow(index) {
     if (editIndex != index) {
         if (endEditing()) {
             $('#tblPurchaseReturnDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
             var oPurchaseReturnDetail= $('#tblPurchaseReturnDetail').datagrid('getSelected');
             editIndex = index;
         }
         else {
             $('#tblPurchaseReturnDetail').datagrid('selectRow', editIndex);
         }
     }
 }

 $("#btnPickSupplier").click(function ()
 {
     var sSupplierName=$.trim($("#txtSupplierName").val());
     GetSuppliers(sSupplierName);
 });

 $("#txtSupplierName").keydown(function (e) {
     var nkeyCode = e.keyCode || e.which;
     if(nkeyCode==13){
         var sSupplierName=$.trim($("#txtSupplierName").val());
         GetSuppliers(sSupplierName);
     }
     else if(nkeyCode==8){
         $("#txtSupplierName").val("");
         _nSupplierID=0;
         $("#cboCPIssueTo").empty();
     }
 });
 $("#btnResetSupplier").click(function () {
     $("#txtSupplierName").val("");
     _nSupplierID=0;
 });

 function GetSuppliers(sSupplierName){

     var oContractor = {
         Params: '1' +'~'+sSupplierName+'~'+sessionStorage.getItem('BUID'),
     };
     var obj = {
         BaseAddress: sessionStorage.getItem('BaseAddress'),
         Object: oContractor,
         ControllerName: "Contractor",
         ActionName: "ContractorSearchByNameType",
         IsWinClose: false
     };

     $.icsDataGets(obj, function (response) {

         if (response.status && response.objs.length > 0) {
             if (response.objs[0].ContractorID > 0) {

                 var tblColums = [];
                 var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "center" };tblColums.push(oColumn);
                 oColumn = { field: "Name", title: "Name", width: 190, align: "left" };tblColums.push(oColumn);
                 oColumn = { field: "Phone", title: "Phone", width: 140, align: "left" };tblColums.push(oColumn);

                 var oPickerParam = {
                     winid: 'winSupplierPicker',
                     winclass:'clsSupplierPicker',
                     winwidth: 460,
                     winheight: 460,
                     tableid: 'tblSupplierPicker',
                     tablecolumns: tblColums,
                     datalist: response.objs,
                     multiplereturn: false,
                     searchingbyfieldName:'Name',
                     windowTittle: 'Supplier List'
                 };
                 $.icsPicker(oPickerParam);
                 IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
             }
             else { alert(response.objs[0].ErrorMessage); }
         }
         else{
             alert("No Supplier found.");
         }
     });
 }
 //Ref Object Part
 $("#btnPickRefObject").click(function () {
     var nType = $('#cboRefType').val();
     var nRefType = parseInt($('#cboRefType').val());
     if(nRefType===0)
     {
         alert("Please select PurchaseReturn Type!");
         return;
     }
     //if(nRefType===7)
     //{
     //    if($('#txtRefNo').val()===null || $('#txtRefNo').val()==="")
     //    {
     //        alert("Please Pick With Style No!");
     //        return;
     //    }
     //}
     var oPurchaseReturn = {
         BUID : parseInt(sessionStorage.getItem('BUID')),
         RefTypeInt : nRefType,
         RefNo : $.trim($('#txtRefNo').val()),
         SupplierID : parseInt($('#divPurchaseReturn').data('PurchaseReturn').SupplierID)
     };
     if(parseInt(nRefType)===1 )
     {
         var obj = {
             BaseAddress: sessionStorage.getItem('BaseAddress'),
             Object: oPurchaseReturn,
             ControllerName: "PurchaseReturn",
             ActionName: "GetsPurchaseInvocie",
             IsWinClose: false
         };
         $.icsDataGets(obj, function (response) {
             if (response.status && response.objs.length > 0) {
                 if (response.objs[0].PurchaseInvoiceID > 0) {
                     var tblColums = [];var oColumn = { field: "PurchaseInvoiceNo", title: "Invoice No", width: 100, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "BillNo", title: "Bill No", width: 80, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "DateofInvoiceSt", title: "Invoice Date", width: 80, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "SupplierName", title: "Vendor Name", width: 150, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "ProductName", title: "Product Name", width: 120, align: "left" };tblColums.push(oColumn);
                     var oPickerParam = {
                         winid: 'winPurchaseInvoices',
                         winclass: 'clsPurchaseInvoice',
                         winwidth: 500,
                         winheight: 420,
                         tableid: 'tblPurchaseInvoices',
                         tablecolumns: tblColums,
                         datalist: response.objs,
                         multiplereturn: false,
                         searchingbyfieldName: 'PurchaseInvoiceNo',
                         windowTittle: 'Purchase Invoice List'
                     };
                     $.icsPicker(oPickerParam);
                     IntializePickerbutton(oPickerParam);
                 }
                 else { alert(response.objs[0].ErrorMessage); }
             }
             else
             {
                 alert("Data Not Found!");
             }
         });
     }
     else if(parseInt(nRefType)===2)
     {
         var obj = {
             BaseAddress: sessionStorage.getItem('BaseAddress'),
             Object: oPurchaseReturn,
             ControllerName: "PurchaseReturn",
             ActionName: "GetsImportInvocie",
             IsWinClose: false
         };
         $.icsDataGets(obj, function (response) {
             if (response.status && response.objs.length > 0) {
                 if (response.objs[0].RefObjectID > 0) {
                     var tblColums = [];var oColumn = { field: "RefNo", title: "Invoice No", width: 150, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "RefObjectDateSt", title: "Invoice Date", width: 100, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "SupplierName", title: "Vendor Name", width: 150, align: "left" };tblColums.push(oColumn);

                     var oPickerParam = {
                         winid: 'winImportInvoices',
                         winclass: 'clsImportInvoice',
                         winwidth: 500,
                         winheight: 420,
                         tableid: 'tblImportInvoices',
                         tablecolumns: tblColums,
                         datalist: response.objs,
                         multiplereturn: false,
                         searchingbyfieldName: 'RefNo',
                         windowTittle: 'Import Invoice List'
                     };
                     $.icsPicker(oPickerParam);
                     IntializePickerbutton(oPickerParam);
                 }
                 else { alert("Data Not Found!"); }
             }
             else
             {
                 alert("Data Not Found!");
             }
         });
     }
     else if(parseInt(nRefType)===3)
     {
         var obj = {
             BaseAddress: sessionStorage.getItem('BaseAddress'),
             Object: oPurchaseReturn,
             ControllerName: "PurchaseReturn",
             ActionName: "GetsWorkOrder",
             IsWinClose: false
         };
         $.icsDataGets(obj, function (response) {
             if (response.status && response.objs.length > 0) {
                 if (response.objs[0].WorkOrderID > 0) {
                     var tblColums = [];var oColumn = { field: "FullFileNo", title: "File No", width: 150, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "WorkOrderNo", title: "WO No", width: 150, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "WorkOrderDateSt", title: "WO Date", width: 100, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "SupplierName", title: "Supplier Name", width: 150, align: "left" };tblColums.push(oColumn);

                     var oPickerParam = {
                         winid: 'winWorkOrder',
                         winclass: 'clsWorkOrder',
                         winwidth: 500,
                         winheight: 420,
                         tableid: 'tblWorkOrder',
                         tablecolumns: tblColums,
                         datalist: response.objs,
                         multiplereturn: false,
                         searchingbyfieldName: 'FileNo',
                         windowTittle: 'Work Order List'
                     };
                     $.icsPicker(oPickerParam);
                     IntializePickerbutton(oPickerParam);
                 }
                 else { alert("Data Not Found!"); }
             }
             else
             {
                 alert("Data Not Found!");
             }
         });
     }
     else if(parseInt(nRefType)===4)
     {
         var obj = {
             BaseAddress: sessionStorage.getItem('BaseAddress'),
             Object: oPurchaseReturn,
             ControllerName: "PurchaseReturn",
             ActionName: "GetsImportPIs",
             IsWinClose: false
         };
         $.icsDataGets(obj, function (response) {
             if (response.status && response.objs.length > 0) {
                 if (response.objs[0].ImportPIID > 0) {
                     var tblColums = [];var oColumn = { field: "ImportPINo", title: "ImportPI No", width: 125, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "ImportLCNo", title: "ImportLC No", width: 125, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "IssueDateSt", title: "Issue Date", width: 100, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "SupplierName", title: "Supplier Name", width: 150, align: "left" };tblColums.push(oColumn);

                     var oPickerParam = {
                         winid: 'winImportPI',
                         winclass: 'clsImportPI',
                         winwidth: 500,
                         winheight: 420,
                         tableid: 'tblImportPI',
                         tablecolumns: tblColums,
                         datalist: response.objs,
                         multiplereturn: false,
                         searchingbyfieldName: 'ImportPINo',
                         windowTittle: 'ImportPI List'
                     };
                     $.icsPicker(oPickerParam);
                     IntializePickerbutton(oPickerParam);
                 }
                 else { alert("Data Not Found!"); }
             }
             else
             {
                 alert("Data Not Found!");
             }
         });
     }
    else if(parseInt(nRefType)===5 )//for PO
     {
         var obj = {
             BaseAddress: sessionStorage.getItem('BaseAddress'),
             Object: oPurchaseReturn,
             ControllerName: "PurchaseReturn",
             ActionName: "GetsPurchaseOrders",
             IsWinClose: false
         };
         $.icsDataGets(obj, function (response) {
             if (response.status && response.objs.length > 0) {
                 if (response.objs[0].POID > 0) {
                     var tblColums = [];var oColumn = { field: "PONo", title: "Invoice No", width: 100, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "PODateSt", title: "PO Date", width: 80, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "ContractorName", title: "Vendor Name", width: 150, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "YetToPurchaseReturnQty",formatter:formatPrice,  title: "Yet To Return Qty", width: 100, align: "right" };tblColums.push(oColumn);
                     oColumn = { field: "LotBalance",formatter:formatPrice,  title: "Qty", width:80, align: "right" };tblColums.push(oColumn);
                     var oPickerParam = {
                         winid: 'winPurchaseOrders',
                         winclass: 'clsPurchaseOrder',
                         winwidth: 500,
                         winheight: 420,
                         tableid: 'tblPurchaseOrders',
                         tablecolumns: tblColums,
                         datalist: response.objs,
                         multiplereturn: false,
                         searchingbyfieldName: 'PONo',
                         windowTittle: 'Purchase Order List'
                     };
                     $.icsPicker(oPickerParam);
                     IntializePickerbutton(oPickerParam);
                 }
                 else { alert(response.objs[0].ErrorMessage); }
             }
             else
             {
                 alert("Data Not Found!");
             }
         });
     }
 });
//Item with reference
 $("#btnPickItem").click(function () {
     var nRefType = parseInt($('#cboRefType').val());
     if(parseInt($('#divPurchaseReturn').data('PurchaseReturn').RefObjectID)<=0)
     {
         if(nRefType===1)
         {
             alert("Please slect an Local Invoice!");
             return false;
         }
         else if(nRefType===2||nRefType===3)
         {
             alert("Please slect an Import Invoice!");
             return false;
         }
         else if(nRefType===4)
         {
             alert("Please slect an Work Order!");
             return false;
         }
        else if(nRefType===5)//PO
         {
             alert("Please slect an Purchase Order!");
             return false;
         }
     }
     
     if(parseInt( $('#divPurchaseReturn').data('PurchaseReturn').WorkingUnitID)<=0)
     {
         alert("Please slect Store.");
         return false;
     }
     var oPurchaseReturn = {
         RefTypeInt : nRefType,
         RefObjectID : parseInt($('#divPurchaseReturn').data('PurchaseReturn').RefObjectID),
         WorkingUnitID:parseInt( $('#divPurchaseReturn').data('PurchaseReturn').WorkingUnitID)
     };
     var obj = {
         BaseAddress: sessionStorage.getItem('BaseAddress'),
         Object: oPurchaseReturn,
         ControllerName: "PurchaseReturn",
         ActionName: "GetsRefItems",
         IsWinClose: false
     };
     $.icsDataGets(obj, function (response) {

         if (response.status && response.objs.length > 0) {
             if (response.objs[0].ProductID > 0) {
                 var tblColums = [];var oColumn = { field: "ProductCode", title: "Code", width: 80, align: "left" };tblColums.push(oColumn);
                 oColumn = { field: "ProductName", title: "Product Name", width: 150, align: "left" };tblColums.push(oColumn);
                 oColumn = { field: "ReturnQty", title: "Yet To Return", width: 100, align: "right" };tblColums.push(oColumn);
                 oColumn = { field: "MUSymbol", title: "Unit", width: 80, align: "left" };tblColums.push(oColumn);
                 if(parseInt(nRefType)===2 ||parseInt(nRefType)===4 ||parseInt(nRefType)===5)
                 {
                     oColumn = { field: "LotNo", title: "Lot No", width: 80, align: "left" };tblColums.push(oColumn);
                   
                 }
                 if(parseInt(nRefType)===2|| parseInt(nRefType)===3)
                 {
                     var oClientOperationSetting = $('#divPurchaseReturn').data('ClientOperationSetting');
                     if(parseInt(oClientOperationSetting.Value)==1)//if Procurement  Apply
                     {
                         oColumn = { field: "StyleNo", title: "Style No", width: 80, align: "left" };tblColums.push(oColumn);
                         oColumn = { field: "BuyerName", title: "Buyer Name", width: 80, align: "left" };tblColums.push(oColumn);     
                         
                     }
                 }
                 if(parseInt(nRefType)===3)
                 {
                     oColumn = { field: "ColorName", title: "Color Name", width: 80, align: "left" };tblColums.push(oColumn);
                     oColumn = { field: "SizeName", title: "Size Name", width: 80, align: "left" };tblColums.push(oColumn);
                 }
                 if(parseInt(nRefType)===4)//for work order
                 {
                     var oClientOperationSetting = $('#divPurchaseReturn').data('ClientOperationSetting');
                     if(parseInt(oClientOperationSetting.Value)==1)//if Procurement  Apply
                     {
                         oColumn = { field: "MCDia", title: "MC Dia", width:70, align: "left" };tblColums.push(oColumn);
                         oColumn = { field: "FinishDia", title: "Finish Dia", width:70, align: "left" };tblColums.push(oColumn);
                         oColumn = { field: "GSM", title: "GSM", width:60, align: "left" };tblColums.push(oColumn);
                     }
                 }
                 
                 var oPickerParam = {
                     winid: 'winRefItems',
                     winclass: 'clsRefItem',
                     winwidth:720,
                     winheight: 420,
                     tableid: 'tblRefItems',
                     tablecolumns: tblColums,
                     datalist: response.objs,
                     multiplereturn: true,
                     searchingbyfieldName: 'ProductName',
                     windowTittle: 'Item List'
                 };
                 $.icsPicker(oPickerParam);
                 IntializePickerbutton(oPickerParam);
             }
             else { alert(response.objs[0].ErrorMessage); }
         }
         else
         {
             alert("Data Not Found!");
         }
     });
 });
  //update style
 $("#btnUpdateStyle").click(function () {
     var oPurchaseReturnDetail = $('#tblPurchaseReturnDetail').datagrid('getSelected');
     if(oPurchaseReturnDetail==null)
     {
         alert("Please Select PurchaseReturn Detail");
         return;
     }
     var SelectedRowIndex=$('#tblPurchaseReturnDetail').datagrid('getRowIndex',oPurchaseReturnDetail);
     sessionStorage.setItem('TempPurchaseReturnDetailIndex',SelectedRowIndex);
     var oTechnicalSheet =  {BUID: sessionStorage.getItem("BUID")};
     var obj = {
         BaseAddress: sessionStorage.getItem('BaseAddress'),
         Object: oTechnicalSheet,
         ControllerName: "TechnicalSheet",
         ActionName: "StyleSearch",
         IsWinClose: false
     };
     $.icsDataGets(obj, function (response) {
         if (response.status && response.objs.length > 0) {
             if (response.objs[0].TechnicalSheetID > 0) {
                 var tblColums = []; var oColumn = { field: "StyleNo", title: "Style No", width: 150, align: "left" }; tblColums.push(oColumn);
                 oColumn = { field: "BuyerName", title: "Buyer", width:120, align: "left" }; tblColums.push(oColumn);
                 oColumn = { field: "DeptName", title: "Dept", width:120, align: "left" }; tblColums.push(oColumn);
                 oColumn = { field: "SessionName", title: "Session", width: 90, align: "left" }; tblColums.push(oColumn);
                 oColumn = { field: "ProductName", title: "Product Name", width:130, align: "left" }; tblColums.push(oColumn);
                 var oPickerParam = {
                     winid: 'winTechnicalSheets',
                     winclass: 'clsTechnicalSheet',
                     winwidth: 800,
                     winheight: 500,
                     tableid: 'tblTechnicalSheets',
                     tablecolumns: tblColums,
                     datalist: response.objs,
                     multiplereturn: false,
                     searchingbyfieldName: 'StyleNo',
                     searchingbyfieldCaption:'Search By Style No',
                     windowTittle: 'Style List'
                 };
                 $.icsPicker(oPickerParam);
                 IntializePickerbutton(oPickerParam);
             }
             else { alert(response.objs[0].ErrorMessage); }
         }
     });

 });


 $("#txtWorkingUnit").keydown(function (e) {
     var nkeyCode = e.keyCode || e.which;
     if(nkeyCode==13){
         var txtWorkingUnit=$.trim($("#txtWorkingUnit").val());
         if(txtWorkingUnit==""){ alert("Type Store name to search."); return false; }
         GetWorkingUnit(txtWorkingUnit);
     }
     else if(nkeyCode==8)
     {
         var oPurchaseReturn = $('#divPurchaseReturn').data('PurchaseReturn');
         $("#txtWorkingUnit").removeClass("fontColorOfPickItem");
         oPurchaseReturn.WorkingUnitID = 0;
         $('#divPurchaseReturn').data('PurchaseReturn',oPurchaseReturn);
     }
 });
 $("#btnPickWorkingUnit").click(function () {
     var txtWorkingUnit=$.trim($("#txtWorkingUnit").val());
     GetWorkingUnit(txtWorkingUnit);
 });
 function GetWorkingUnit(txtWorkingUnit)
 {
     var oWorkingUnits = $('#txtWorkingUnit').data('Stores');
     if(oWorkingUnits.length>0)
     {
         var tblColums = [];
         var oColumn = { field: "WorkingUnitCode", title: "Code", width: 80, align: "left" };tblColums.push(oColumn);
         oColumn = { field: "WorkingUnitName", title: "Name", width: 270, align: "left" };tblColums.push(oColumn);

         var oPickerParam = {
             winid: 'winWorkingUnitPicker',
             winclass:'clsWorkingUnitPicker',
             winwidth: 520,
             winheight: 460,
             tableid: 'tblWorkingUnit',
             tablecolumns: tblColums,
             datalist:oWorkingUnits,
             multiplereturn: false,
             searchingbyfieldName:'WorkingUnitName',
             windowTittle: 'Store List'
         };
         $.icsPicker(oPickerParam);
         IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
     }
     else 
     {
         alert("Data Not Found."); 
     }
           

 }

 function IntializePickerbutton(oPickerobj) {

     $("#" + oPickerobj.winid).find("#btnOk").click(function () {

         //for Single Select
         SetPickerValueAssign(oPickerobj);
     });
     $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
         if (e.which == 13)//enter=13
         {
             SetPickerValueAssign(oPickerobj);

         }
     });
 }

 function SetPickerValueAssign(oPickerobj) {
     var oreturnObj = null, oreturnobjs = [];
     if (oPickerobj.multiplereturn) {
         oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
     } else {
         oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
     }
     $("#" + oPickerobj.winid).icsWindow("close");
     $("#" + oPickerobj.winid).remove();
     if (oPickerobj.winid == 'winSupplierPicker') {
         if (oreturnObj != null && oreturnObj.ContractorID > 0) {
             $('#txtSupplierName').val(oreturnObj.Name);
             $('#txtSupplierName').addClass('fontColorOfPickItem');
             $('#divPurchaseReturn').data('PurchaseReturn').SupplierID = parseInt(oreturnObj.ContractorID);
             $('#divPurchaseReturn').data('PurchaseReturn').SupplierName = oreturnObj.Name;
             $('#txtRefNo').focus();
         }
     }   else if (oPickerobj.winid == 'winItemPicker') {
         if (oreturnObj != null && oreturnObj.ProductID > 0) {
             if(!IsItemExist(oreturnObj.ProductID))
             {
                 var oPurchaseReturnDetails = $('#tblPurchaseReturnDetail').datagrid('getRows');
                 var nIndex = oPurchaseReturnDetails.length;
                 var oPurchaseReturnDetail = MapPurchaseReturnDetailObject(oreturnObj);
                 $('#tblPurchaseReturnDetail').datagrid('appendRow',oPurchaseReturnDetail);
                 $('#tblPurchaseReturnDetail').datagrid('selectRow', nIndex);
             }
             else
             {
                 alert("Your Selected Item Already Exists!");
             }
         }
     } else if (oPickerobj.winid == 'winPurchaseInvoices') {
         if (oreturnObj != null && oreturnObj.PurchaseInvoiceID > 0) {
             $('#divPurchaseReturn').data('PurchaseReturn').RefObjectID = parseInt(oreturnObj.PurchaseInvoiceID);
             $('#divPurchaseReturn').data('PurchaseReturn').RefNo = oreturnObj.PurchaseInvoiceNo;
             $('#divPurchaseReturn').data('PurchaseReturn').RefObjectDateSt = oreturnObj.DateofInvoiceSt;
             $('#txtRefNo').val(oreturnObj.PurchaseInvoiceNo);
             $('#txtRefDate').val(oreturnObj.DateofInvoiceSt);
             $('#txtRefNo').addClass('fontColorOfPickItem');
             $('#txtRefDate').addClass('fontColorOfPickItem');
             $('#divPurchaseReturn').data('PurchaseReturn').BUID = parseInt(oreturnObj.BUID);
             $('#divPurchaseReturn').data('PurchaseReturn').BusinessUnitName = oreturnObj.BUName;

         }
     }else if (oPickerobj.winid == 'winPurchaseOrders') {
         if (oreturnObj != null && oreturnObj.POID > 0) {
             $('#divPurchaseReturn').data('PurchaseReturn').RefObjectID = parseInt(oreturnObj.POID);
             $('#divPurchaseReturn').data('PurchaseReturn').RefNo = oreturnObj.PONo;
             $('#divPurchaseReturn').data('PurchaseReturn').RefObjectDateSt = oreturnObj.PODateSt;
             $('#txtRefNo').val(oreturnObj.PONo);
             $('#txtRefDate').val(oreturnObj.PODateSt);
             $('#txtRefNo').addClass('fontColorOfPickItem');
             $('#txtRefDate').addClass('fontColorOfPickItem');        
             $('#divPurchaseReturn').data('PurchaseReturn').BUID = parseInt(oreturnObj.BUID);
             $('#divPurchaseReturn').data('PurchaseReturn').BusinessUnitName = oreturnObj.BUName;

         }
     }
     else if (oPickerobj.winid == 'winImportInvoices')
     {
         if (oreturnObj != null && oreturnObj.RefObjectID > 0)
         {
             $('#divPurchaseReturn').data('PurchaseReturn').RefObjectID = parseInt(oreturnObj.RefObjectID);
             $('#divPurchaseReturn').data('PurchaseReturn').RefNo = oreturnObj.RefNo;
             $('#divPurchaseReturn').data('PurchaseReturn').RefObjectDateSt = oreturnObj.RefObjectDateSt;
             $('#txtRefNo').val(oreturnObj.RefNo);
             $('#txtRefDate').val(oreturnObj.RefObjectDateSt);
             $('#txtSupplierName').val(oreturnObj.SupplierName);
             $('#txtRefNo,#txtRefDate,#txtSupplierName').addClass('fontColorOfPickItem');
             $('#divPurchaseReturn').data('PurchaseReturn').SupplierID = parseInt(oreturnObj.ContractorID);
             $('#divPurchaseReturn').data('PurchaseReturn').SupplierName = oreturnObj.SupplierName;

         }
     }
     else if (oPickerobj.winid == 'winWorkOrder')
     {
         if (oreturnObj != null && oreturnObj.WorkOrderID > 0)
         {
             $('#divPurchaseReturn').data('PurchaseReturn').RefObjectID = parseInt(oreturnObj.WorkOrderID);
             $('#divPurchaseReturn').data('PurchaseReturn').RefNo = oreturnObj.FileNo;
             $('#divPurchaseReturn').data('PurchaseReturn').RefObjectDateSt = oreturnObj.WorkOrderDateSt;
             $('#txtRefNo').val(oreturnObj.FileNo);
             $('#txtRefDate').val(oreturnObj.WorkOrderDateSt);
             $('#txtSupplierName').val(oreturnObj.SupplierName);
             $('#txtRefNo,#txtRefDate,#txtSupplierName').addClass('fontColorOfPickItem');
             $('#divPurchaseReturn').data('PurchaseReturn').SupplierID = parseInt(oreturnObj.SupplierID);
             $('#divPurchaseReturn').data('PurchaseReturn').SupplierName = oreturnObj.SupplierName;
 
         }
     }
     else if (oPickerobj.winid == 'winImportPI')
     {
         if (oreturnObj != null && oreturnObj.ImportPIID > 0)
         {
             $('#divPurchaseReturn').data('PurchaseReturn').RefObjectID = parseInt(oreturnObj.ImportPIID);
             $('#divPurchaseReturn').data('PurchaseReturn').RefNo = oreturnObj.ImportPINo;
             $('#divPurchaseReturn').data('PurchaseReturn').RefObjectDateSt = oreturnObj.IssueDateSt;
             $('#txtRefNo').val(oreturnObj.ImportPINo);
             $('#txtRefDate').val(oreturnObj.IssueDateSt);
             $('#txtSupplierName').val(oreturnObj.SupplierName);
             $('#txtRefNo,#txtRefDate,#txtSupplierName').addClass('fontColorOfPickItem');
             $('#divPurchaseReturn').data('PurchaseReturn').SupplierID = parseInt(oreturnObj.SupplierID);
             $('#divPurchaseReturn').data('PurchaseReturn').SupplierName = oreturnObj.SupplierName;

         }
     }
     else if (oPickerobj.winid == 'winRefItems')
     {
         if (oreturnobjs != null && oreturnobjs.length > 0) {
             if(oreturnobjs[0].ProductID>0)
             {
                 for(var i=0; i< oreturnobjs.length; i++)
                 {
                     if(!IsItemExist(oreturnobjs[i].RefObjectID))
                     {
                         $('#tblPurchaseReturnDetail').datagrid('appendRow',oreturnobjs[i]);
                     }
                 }
             }
         }
     }else if (oPickerobj.winid == 'winWorkingUnitPicker')
     {
         debugger;
         if (oreturnObj != null && parseInt(oreturnObj.WorkingUnitID)> 0)
         {
             var oPurchaseReturn = $('#divPurchaseReturn').data('PurchaseReturn');
             $('#txtWorkingUnit').val(oreturnObj.WorkingUnitName);
             $("#txtWorkingUnit").addClass("fontColorOfPickItem");
             oPurchaseReturn.WorkingUnitID = oreturnObj.WorkingUnitID;
             $('#divPurchaseReturn').data('PurchaseReturn',oPurchaseReturn);
         }

     }

 }

 function IsItemExist(nRefObjectID)
 {
     var oPurchaseReturnDetails = $('#tblPurchaseReturnDetail').datagrid('getRows');
     if(oPurchaseReturnDetails!=null)
     {
         for(var i=0; i<oPurchaseReturnDetails.length; i++)
         {
             if(parseInt(oPurchaseReturnDetails[i].RefObjectID)===parseInt(nRefObjectID))
             {
                 return true;
             }
         }
     }
     return false;
 }

 function MapPurchaseReturnDetailObject(oItem)
 {
     var oPurchaseReturnDetail={
         PurchaseReturnDetailID : 0,
         PurchaseReturnID : 0,
         ProductID : parseInt(oItem.ProductID),
         MUnitID : parseInt(oItem.MeasurementUnitID),
         RefDetailQty : 0,
         ReturnQty : 0,
         LotID : 0,
         LotNo : '',
         RefTypeInt : 1,
         RefObjectID : 0,
         ReturnNo : "",
         MUName : oItem.MeasurementUnitName,
         MUSymbol : oItem.Symbol,
         OperationUnitName : "",
         LocationName : "",
         ProductName : oItem.ProductName,
         ProductCode : oItem.ProductCode,
         LotNo : ""
     };
     return oPurchaseReturnDetail;
 }

 $('#btnRemove').click(function(e){
     var oPurchaseReturnDetail= $('#tblPurchaseReturnDetail').datagrid('getSelected');
     if(oPurchaseReturnDetail==null || parseInt(oPurchaseReturnDetail.ProductID) <=0)
     {
         alert("please select an Item!");
         return false;
     }
     if (!confirm("Confirm to Delete?")) return ;
     var SelectedRowIndex=$('#tblPurchaseReturnDetail').datagrid('getRowIndex',oPurchaseReturnDetail);
     $('#tblPurchaseReturnDetail').datagrid('deleteRow',SelectedRowIndex);
     editIndex = undefined;
 });

 $('#btnCopyItem').click(function(){
     var oPurchaseReturnDetail= $('#tblPurchaseReturnDetail').datagrid('getSelected');
     if(oPurchaseReturnDetail==null || parseInt(oPurchaseReturnDetail.ProductID) <=0)
     {
         alert("please select an Item!");
         return false;
     }
     if (!confirm("Confirm to Copy?")) return;

     var oTempPurchaseReturnDetail = {
         PurchaseReturnDetailID : 0,
         PurchaseReturnID : 0,
         ProductID : oPurchaseReturnDetail.ProductID,
         TechnicalSpecification : oPurchaseReturnDetail.TechnicalSpecification,
         MUnitID : oPurchaseReturnDetail.MUnitID,
         RefDetailQty : oPurchaseReturnDetail.RefDetailQty,
         ReturnQty : oPurchaseReturnDetail.ReturnQty,
         UnitPrice : oPurchaseReturnDetail.UnitPrice,
         Amount : oPurchaseReturnDetail.Amount,
         LotID : oPurchaseReturnDetail.LotID,
         RefType : oPurchaseReturnDetail.RefType,
         RefTypeInt : oPurchaseReturnDetail.RefTypeInt,
         RefObjectID : oPurchaseReturnDetail.RefObjectID,
         StyleID : oPurchaseReturnDetail.StyleID,
         ColorID : oPurchaseReturnDetail.ColorID,
         SizeID : oPurchaseReturnDetail.SizeID,
         ReturnNo : oPurchaseReturnDetail.ReturnNo,
         MUName : oPurchaseReturnDetail.MUName,
         MUSymbol : oPurchaseReturnDetail.MUSymbol,
         ProductName : oPurchaseReturnDetail.ProductName,
         ProductCode : oPurchaseReturnDetail.ProductCode,
         StyleNo : oPurchaseReturnDetail.StyleNo,
         BuyerName : oPurchaseReturnDetail.BuyerName,
         BuyerName : oPurchaseReturnDetail.BuyerName,
         ColorName : oPurchaseReturnDetail.ColorName,
         SizeName : oPurchaseReturnDetail.SizeName,
         LotNo : oPurchaseReturnDetail.LotNo
     };
     $('#tblPurchaseReturnDetail').datagrid('appendRow',oTempPurchaseReturnDetail);
 });

 $('#btnRefresh').click(function(e){
     endEditing();
     var oPurchaseReturnDetails = $('#tblPurchaseReturnDetail').datagrid('getRows');
     RefreshList(oPurchaseReturnDetails);
 });

 $(document).keydown(function(e) {
     if(e.which == 27)//escape=27
     {
         window.location.href = sessionStorage.getItem('BaseAddress')+ "/PurchaseReturn/ViewPurchaseReturns?menuid="+sessionStorage.getItem('MenuID');
     }
 });
</script>