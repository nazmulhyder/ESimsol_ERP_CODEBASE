<html>
<body>
    @model ESimSol.BusinessObjects.ProductionSchedule
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div id="winDyeingOrderDetailAdvanceSearch" class="easyui-window winClass" title="Advance Search" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width:760px; float: left;">
            <table border="0" cellpadding="0" cellspacing="0">
                <tr style="height:300px">
                    <td style="width:850px">
                        <table border="0" cellpadding="0" cellspacing="0">
                            <tr style="height:300px">
                                <td style="width:300px; vertical-align:top;height:300px">
                                    <fieldset>
                                        <legend style="font-weight:bold; font-size:12px"> Searching Criteria : </legend>
                                        <table border="0" cellpadding="0" cellspacing="2">
                                            <tr>
                                                <td style="width:300px;font-size:12px;">
                                                    Order No:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:350px">
                                                    @Html.TextBox("txtDyeingOrderNo", "", new { style = "width: 325px", id = "txtDyeingOrderNo" })
                                                </td>
                                            </tr>

                                            <tr>
                                                <td style="width:300px;font-size:12px;">
                                                    Buyer Name:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:300px;font-size:12px;">
                                                    @Html.TextBox("txtBuyerName", "", new { style = "width: 260px;font-size:12px;", id = "txtBuyerName", placeholder = " Type Buyer & Press Enter" }) <input type="button" id="btnBuyerPicker" style="width:60px;" value="Pick" />

                                                </td>
                                            </tr>

                                            <tr>
                                                <td style="width:300px;font-size:12px;">
                                                    Order Date:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:300px">
                                                    <table border="0" cellpadding="0" cellspacing="0">
                                                        <tr>
                                                            <td style="width:97px;font-size:12px;">@Html.DropDownList("cboOrderCreateDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboOrderCreateDate", style = "width: 97px;font-size:12px;", @class = "_select_changeA" })</td>
                                                            <td style="width:97px;font-size:12px;"><input type="text" id="txtStartOrderDate" value="" style="width: 108px;font-size:12px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                                            <td style="width:9px;font-size:12px;" id="enddateT">To</td>
                                                            <td style="width:97px;font-size:12px;" id="enddate"><input type="text" id="txtEndOrderDate" value="" style="width: 108px;font-size:12px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>

                                            <tr style="height:137px; vertical-align:bottom">
                                                <td style=" text-align:left; width:330px;">
                                                    <table border="0" cellpadding="0" cellspacing="0">
                                                        <tr>
                                                            <td style=" text-align:left;"><input type="button" value="Reset" id="btnReset" onclick="Reset()" style="width:70px; text-align:left;" /></td>
                                                            <td style=" text-align:right; width:260px;"><input type="button" value="Search" id="btnRefresh" style="width:70px; text-align:right;" /></td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                        </table>
                                    </fieldset>
                                </td>
                                <td style="width:400px; vertical-align:top">
                                    <div style="margin-left:0px; margin-top:6px; height:265px">
                                        <table id="tblDyeingOrderDetailsList" title="Dyeing Order Detail List" class="easyui-datagrid" style="width:400px;height:295px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                                            <thead>
                                                <tr>
                                                    <th field="JobNo" width="80">Order No</th>
                                                    <th field="BuyerName" width="100">Buyer Name</th>
                                                    <th field="ProductName" width="80">Product</th>
                                                    <th field="ColorName" width="70">Color</th>
                                                    <th field="YetToScheduleQty" align="right" width="60">Yet To Schedule</th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </td>

                            </tr>
                        </table>
                    </td>
                </tr>
                <tr style="height:50px">
                    <td style="width:850px; text-align:right">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="SearchClose()">Close</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>

    <div class="menuMainCollectionTable" id="divPS">
        <div class="easyui-panel" title="Production Schedule" style="font-family:Tahoma; text-align:left; width:100%;  height:89%;">
            <fieldset style="width:98%;">
                <legend>Production Schedule </legend>
                <table style="width: 100%; font-size: 12px;" border="0">
                    <tr>
                        <td style="text-align:right; width:10%">Start Time:</td>
                        <td style="width:35%; text-align:left;">
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td style="width:100%">
                                        <div id="startDateTime" style="float:left; width:100%;">
                                            <span>
                                                <select id="cboYear"></select>
                                            </span>
                                            <span>
                                                <select id="cboMonth"></select>
                                            </span>
                                            <span>
                                                <select id="cboDay"></select>
                                            </span>
                                            <span>
                                                <select id="cboHour"></select>
                                            </span>
                                            <span>
                                                <select id="cboMinute"></select>
                                            </span>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width:10%">
                            <div>
                                <div style="float: left; width: 100%;">
                                </div>
                            </div>
                        </td>
                        <td style="text-align:right; width:10%">End Time:</td>
                        <td style="width:35%; text-align:left;">
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td style="width:100%">
                                        <div style="float: left; width:100%;">
                                            <span>
                                                <select id="cboEndYear"></select>
                                            </span>
                                            <span>
                                                <select id="cboEndMonth"></select>
                                            </span>
                                            <span>
                                                <select id="cboEndDay"></select>
                                            </span>
                                            <span>
                                                <select id="cboEndHour"></select>
                                            </span>
                                            <span>
                                                <select id="cboEndMinute"></select>
                                            </span>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align:right; width:10%"></td>
                        <td style="width:35%;text-align:left;">
                            <div>
                                <div style="float: left; width:100%;">
                                    <span>
                                        <input type="button" id="btnScheduleLastTime" value="Default Time" style="font-size: 11px;width:80px;" />
                                    </span>
                                    <span>
                                        <input type="button" id="btnCurrenttime" value="Current Time" style="font-size: 11px;width:77px;" />
                                    </span>
                                    <span>
                                        <input id="timeSpinner" class="easyui-timespinner" style="width: 75px;font-size: 11px;" required="required" data-options="showSeconds:false" />
                                    </span>
                                    <span>
                                        <input type="button" id="btnAddSpinnerTime" value="Add" style="font-size: 11px; width:30px;" />
                                    </span>

                                </div>
                            </div>
                        </td>
                        <td style="width:10%">
                           
                        </td>
                        <td style="text-align:right; width:10%">Machine</td>
                        <td style="width:35%;text-align:left;">
                            <div style="width:100%">
                                <div style="float: left; width:100%;">
                                    <input type="text" id="txtMachineName" style="width:67%;" />
                                    <button onclick="ChangeLocationMachine()"> P</button>
                                </div>
                            </div>
                           
                        </td>
                    </tr>

                    <tr>
                        <td style="text-align:right; width:10%">Location:</td>
                        <td style="width:90%; text-align:left;" colspan="4">
                         <input type="text" id="txtLocationName" style="width:91%;" align="middle" disabled />
                        </td>
                    </tr>
                </table>
            </fieldset>
    
              <div style="width:100%">
                    <table id="tblProductionScheduleDetail" title="Production Schedule Detail List" class="easyui-datagrid"style="width:100%; height:340px;" fitcolumns="false" rownumbers="true" pagination="false"
                           singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="singleSelect: true, fitColumns:false, rownumbers:true,pagination:false, autoRowHeight:false,toolbar: '#toolbar',onClickRow: onClickRow ">
                        <thead>
                            <tr>
                                <th field="OrderNo" width="120" align="left">
                                    Order No
                                </th>
                                <th field="BuyerName" width="150" align="left">
                                    Buyer Name
                                </th>
                                <th field="ProductName" width="180" align="left">
                                    Product Name
                                </th>
                                <th field="ColorName" width="130" align="left">
                                    Color Name
                                </th>
                                <th min-width="120" align="right" data-options="field:'YetToProductionQty',formatter:formatPrice">
                                    Yet To Production Qty
                                </th>
                                <th min-width="120" align="right" data-options="field:'WaitingForProductionQty',formatter:formatPrice">
                                    Already Scheduled
                                </th>
                                <th min-width="120" align="right" data-options="field:'RemainingScheduleQuantity',formatter:formatPrice">
                                    Yet To Schedule
                                </th>
                                <th data-options="field:'ProductionQty',width:120,align:'right',editor:{type:'numberbox',options:{precision:2}},formatter:formatPrice"
                                    align="right">
                                    Scheduled Quantity
                                </th>
                                <th data-options="field:'Remarks',width:200,align:'right',editor:{type:'text'}" align="left">
                                    Remarks
                                </th>
                            </tr>
                        </thead>
                    </table>

                    <div id="toolbar">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"id="btnAddOrder" onclick="AddOrder()">Add Order</a> 
                        <a href="javascript:void(0)"class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="Delete()"id="btnDelete">Remove</a>
                        <select id="cboOrderType" style="width:130px;"></select>
                        <input type="text" id="txtOrderNo" value="Order No" style="width:150px; font-size: 11px;"onclick="ClearJobNofield()" />
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true"id="btnOrder">Search</a> 
                        <span style="padding-left: 8px;"> <label id="lblColor">Color</label> </span>
                        <select id="cboColor" style="width: 310px; height: 20px;"></select>
                        <span style="padding-left: 8px;">
                            <a href="javascript:void(0)" class="easyui-linkbutton"iconcls="icon-add" plain="true" id="btnAddJob">Add</a>
                        </span>
                    </div>
                </div>
     
                <div style="padding-right:12px;">
                    <table border="0" width="100%" cellpadding="0" cellspacing="0" style="font-weight:bold;">
                        <tr>
                            <td style="width:80%;text-align:right" >Total Quantity:</td>
                            <td style="width:20%;text-align:right"><label id="lblTotalQuantity" style="width: 144px;" readonly /></td>
                        </tr>
                    </table>
                </div>
            </div>
        <fieldset style="height:8%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:60%; text-align:right"></td>
                    <td style="width:40%;text-align:right;">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" style=" height:22px;" onclick="Save()">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" onclick="Close()" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
    </body>
</html>
<script type="text/javascript">
    var _sBaseAddress="";
    var _nRemoveFlag=0;
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oProductionSchedule =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oLocation=  @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.LocationList));
        var oDyeMachine=  @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.CapitalResources));
     var eOrderTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.OrderTypes));
        $('#divPS').data("ProductionSchedule",oProductionSchedule);
        $('#divPS').data('BuyerIDs',"");
     $("#cboOrderType").icsLoadCombo({List: eOrderTypes,OptionValue: "Value",DisplayText: "Text"});
        if(sessionStorage.getItem('ProductionScheduleHeader')=="Edit Production Schedule")
        {
           Controll();
           SetDateTime();
           SetValues();
        }
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
 });


 function SetValues()
 {
        var oProductionSchedule = $('#divPS').data("ProductionSchedule");
         SetStartTime(new Date(oProductionSchedule.StartTimeInString));
         SetEndTime(new Date(oProductionSchedule.EndTimeInString));
         SetSpinnerValue(new Date(oProductionSchedule.StartTimeInString),new Date(oProductionSchedule.EndTimeInString));
         $('#txtLocationName').val(oProductionSchedule.LocationName);
         $('#txtMachineName').val(oProductionSchedule.MachineName);

         ControllForCombineRouteSheet(oProductionSchedule.ProductionScheduleDetails);
         data=oProductionSchedule.ProductionScheduleDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblProductionScheduleDetail').datagrid('loadData',data);
        $('#tblProductionScheduleDetail').datagrid({selectOnCheck:false, checkOnSelect:false});
        newTotalQuantity();
 }


 function Controll()
 {
      document.getElementById('cboEndYear').disabled=true;
      document.getElementById('cboEndMonth').disabled=true;
      document.getElementById('cboEndDay').disabled=true;
      document.getElementById('cboEndHour').disabled=true;
      document.getElementById('cboEndMinute').disabled=true;
 }

 function ControllForCombineRouteSheet(oPSDs)
 {

      for(var i=0; i<oPSDs.length;i++)
      {
         if(oPSDs[i].CRSID>0)
         {
             $('#btnAddOrder#btnDelete,#txtOrderNo,#btnOrder,#lblColor,#cboColor,#btnAddJob').hide();
             break;
         }
      }
 }

 function SetDateTime()
 {
    var oDate=new Date();

    /*---------------------------------------- Start Set Year-------------------------------------------*/
    var sYear="";
    sYear +="<option value='0'>"+'Year'+"</option>";
    for(var i=0; i<=10; i++)
    {
        sYear += "<option value='" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"'>" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"</option>";
    }
    $('#cboYear').html(sYear);
    $('#cboEndYear').html(sYear);
    /*---------------------------------------- End Set Year-------------------------------------------*/


    /*---------------------------------------- Start Set Month-------------------------------------------*/
    var sMonth="";
    var oMonths=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
    sMonth +="<option value='0'>"+'Month'+"</option>";
    for(var i=0; i<oMonths.length; i++)
    {
        sMonth += "<option value='" +(parseInt(i)+1)+"'>" + oMonths[i] +"</option>";
    }
    $('#cboMonth').html(sMonth);
    $('#cboEndMonth').html(sMonth);
    /*---------------------------------------- End Set Month-------------------------------------------*/


    /*---------------------------------------- Start Set Date-------------------------------------------*/
    var sDay ="<option value='0'>"+'Day'+"</option>";
    $('#cboDay').html(sDay);
    $('#cboEndDay').html(sDay);
    /*---------------------------------------- End Set Date-------------------------------------------*/


    /*---------------------------------------- Start Set Hour-------------------------------------------*/
    var sHour="";
    sHour +="<option value='-1'>"+'hh'+"</option>";
    for(var i=0; i<24; i++)
    {
        if(i<10)
        {
          sHour += "<option value='" +i+"'>" + '0'+i+"</option>";
        }
        else
        {
          sHour += "<option value='" +i+"'>" + i+"</option>";
        }
    }
    $('#cboHour').html(sHour);
    $('#cboEndHour').html(sHour);
    /*---------------------------------------- End Set hour-------------------------------------------*/


    /*---------------------------------------- Start Set Minute-------------------------------------------*/
    var sMinute="<option value='-1'>"+'mm'+"</option>";
    $('#cboMinute').html(sMinute);
    $('#cboEndMinute').html(sMinute);
    /*---------------------------------------- End Set Minute-------------------------------------------*/

 }



 $('#cboYear').change(function(e)
 {
   var nYear=$('#cboYear').val();
   var nMonth=$('#cboMonth').val();
   if(nYear>0 && nMonth>0)
   {
     $('#cboDay').html(SetDateEvent(nYear, nMonth));
   }

 });

 $('#cboEndYear').change(function(e)
 {
   var nYear=$('#cboEndYear').val();
   var nMonth=$('#cboEndMonth').val();
   if(nYear>0 && nMonth>0)
   {
     $('#cboEndDay').html(SetDateEvent(nYear, nMonth));
   }

 });

  $('#cboMonth').change(function(e)
 {
   var nYear=$('#cboYear').val();
   var nMonth=$('#cboMonth').val();
   if(nYear>0 && nMonth>0)
   {
     $('#cboDay').html(SetDateEvent(nYear, nMonth));
   }

 });

 $('#cboEndMonth').change(function(e)
 {

   var nYear=$('#cboEndYear').val();
   var nMonth=$('#cboEndMonth').val();
   if(nYear>0 && nMonth>0)
   {
     $('#cboEndDay').html(SetDateEvent(nYear, nMonth));
   }

 });

 function SetDateEvent(nYear, nMonth)
 {

   var oDate=new Date();
   var sDay="";
   if( parseInt(nMonth)>0)
   {
        var nDay= new Date(parseInt(nYear), parseInt(nMonth), 0).getDate();
        sDay +="<option value='0'>"+'Day'+"</option>";
        for(var i=1; i<=parseInt(nDay); i++)
        {
            if(i<10)
            {
              sDay += "<option value='" +i+"'>" + '0'+i +"</option>";
            }
            else
            {
              sDay += "<option value='" +i+"'>" + i +"</option>";
            }

        }
    }
    return sDay;
 }



 $('#cboHour').change(function(e)
 {
   if($('#cboHour').val()>=0)
   {
        $('#cboMinute').html(SetMinuteEvent());
   }

 });

 $('#cboEndHour').change(function(e)
 {
   if($('#cboEndHour').val()>=0)
   {
        $('#cboEndMinute').html(SetMinuteEvent());
   }

 });

 function SetMinuteEvent()
 {
    var sMinute="";
    sMinute +="<option value='-1'>"+'mm'+"</option>";
    for(var i=0; i<=60; i++)
    {
        if(i<10)
        {
            sMinute += "<option value='" +i+"'>" +'0'+ i+"</option>";
        }
        else
        {
            sMinute += "<option value='" +i+"'>" + i+"</option>";
        }

    }
    return sMinute;
 }

 $('#cboMinute').change(function(e)
 {
   if($('#cboMinute').val()==60)
   {
      var nHour=$('#cboHour').val();
      nHour=parseInt(nHour)+1;
      $('#cboHour').val(nHour);
      $('#cboMinute').val(0);
   }

 });

 $('#cboEndMinute').change(function(e)
 {
   if($('#cboEndMinute').val()==60)
   {
      var nHour=$('#cboEndHour').val();
      nHour=parseInt(nHour)+1;
      $('#cboEndHour').val(nHour);
      $('#cboEndMinute').val(0);
   }

 });

 function SetStartTime(oDate)
 {
      debugger;
      var nyear=oDate.getFullYear();
      var nmonth=oDate.getMonth()+1;
      var nday=oDate.getDate();
      var nhour=oDate.getHours();
      var nminutes=oDate.getMinutes();
      $('#cboYear').val(nyear);
      $('#cboMonth').val(nmonth);
      $('#cboDay').html(SetDateEvent(nyear,nmonth));
      $('#cboDay').val(nday);
      $('#cboHour').val(nhour);
      $('#cboMinute').html(SetMinuteEvent());
      $('#cboMinute').val(nminutes);
 }

 function SetEndTime(oDate)
 {
      debugger;
      var nyear=oDate.getFullYear();
      var nmonth=oDate.getMonth()+1;
      var nday=oDate.getDate();
      var nhour=oDate.getHours();
      var nminutes=oDate.getMinutes();
      $('#cboEndYear').val(nyear);
      $('#cboEndMonth').val(nmonth);
      $('#cboEndDay').html(SetDateEvent(nyear,nmonth));
      $('#cboEndDay').val(nday);
      $('#cboEndHour').val(nhour);
      $('#cboEndMinute').html(SetMinuteEvent());
      $('#cboEndMinute').val(nminutes);
 }


function SetSpinnerValue(oSDate,oEDate)
{
   var nSeconds= Math.round(oEDate-oSDate)/1000;
   var nMinutes= Math.round(nSeconds)/60;
   var nHour=0;
   if(nMinutes>59)
   {
     nHour= parseInt(nMinutes/60);
     var nTempMinutes= nMinutes-(nHour*60);
     if(nTempMinutes==59)
     {
       nHour= parseInt(nHour)+1;
       nMinutes=0;
     }
     else
     {
       nMinutes= nMinutes-(nHour*60);
     }
   }
   else if(nMinutes==59)
   {
      nHour=1;
      nMinutes=0;
   }
   var sHour="", sMinutes="";
   if(nHour<10)
   {
      sHour='0'+nHour;
   }
   else
   {
      sHour=nHour;
   }
   if(nMinutes<10)
   {
     sMinutes='0'+nMinutes;
   }
   else
   {
      sMinutes=nMinutes;
   }
   var sHourMinute=sHour+':'+sMinutes;
    $('#timeSpinner').timespinner('setValue', sHourMinute);
}

function ValidationOfStartTime()
{
   if($('#cboYear').val()==0)
   {
     alert("Please select a year of start time.");
     return false;
   }
   if($('#cboMonth').val()==0)
   {
     alert("Please select a month of start time.");
     return false;
   }
   if($('#cboDay').val()==0)
   {
     alert("Please select a day of start time.");
     return false;
   }
   if($('#cboHour').val()==-1)
   {
     alert("Please select hour of start time.");
     return false;
   }
   if($('#cboMinute').val()==-1)
   {
     alert("Please select minute of start time.");
     return false;
   }
   return true;
}

function GenerateStartTimeInString()
{
    var sDate=  $('#cboMonth').val() +'/'+ $('#cboDay').val() +'/'+ $('#cboYear').val() + ' '+ $('#cboHour').val() +':'+ $('#cboMinute').val();
    return sDate;
}

function GenerateEndTimeInString()
{

   var sDate=  $('#cboEndMonth').val() +'/'+ $('#cboEndDay').val() +'/'+ $('#cboEndYear').val() + ' '+ $('#cboEndHour').val() +':'+ $('#cboEndMinute').val();
   return sDate;
}

$('#btnAddSpinnerTime').click(function(e)
{
    if(ValidationOfStartTime())
    {

        AddTime(GenerateStartTimeInString());
    }
});


 function AddTime(sDate)
 {
      var nhr=$('#timeSpinner').timespinner('getHours');
      var nmin=$('#timeSpinner').timespinner('getMinutes');
      if(isNaN(nhr))
      {
        nhr=0;
      }
      if(isNaN(nmin))
      {
        nmin=0;
      }

      var oDate=new Date(sDate);
      oDate.setHours(oDate.getHours()+nhr);
      oDate.setMinutes(oDate.getMinutes()+nmin);

      var nyear=oDate.getFullYear();
      var nmonth=oDate.getMonth()+1;
      var nday=oDate.getDate();
      var nhour=oDate.getHours();
      var nminutes=oDate.getMinutes();

      $('#cboEndYear').val(nyear);
      $('#cboEndMonth').val(nmonth);
      $('#cboEndDay').html(SetDateEvent(nyear,nmonth));
      $('#cboEndDay').val(nday);
      $('#cboEndHour').val(nhour);
      $('#cboEndMinute').html(SetMinuteEvent());
      $('#cboEndMinute').val(nminutes);

 }


function dateTimeValidation()
{
   if(ValidationOfStartTime())
   {
        var sStartTime= new Date(GenerateStartTimeInString());
        var sEndTime= new Date(GenerateEndTimeInString());

        if(new Date()>new Date(GenerateStartTimeInString()))
        {
           alert("Date time must be greater than current date time.");
           return false;
        }

        if(new Date(GenerateStartTimeInString())>=new Date(GenerateEndTimeInString()))
        {
           alert("End date time must be greater than start date time.");
           return false;
        }
        return true;
    }
    else
    {
       return false;
    }

}

  function isNumberKey(evt)
  {
         var charCode = (evt.which) ? evt.which : event.keyCode
         if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;

         return true;
  }

 var editIndex = undefined;
 function endEditing()
 {
 debugger;

            if (editIndex == undefined)
            {
              newTotalQuantity();
              return true;
            }
            if ($('#tblProductionScheduleDetail').datagrid('validateRow', editIndex))
            {

                $('#tblProductionScheduleDetail').datagrid('endEdit', editIndex);

                if(_nRemoveFlag==0)
                {

                  SetNewScheduledQuantity(editIndex);
                }
                editIndex = undefined;
                newTotalQuantity();
                return true;
            }
            else
            {
                return false;
            }

    }
 function onClickRow(index)
  {
      debugger;
           _nRemoveFlag=0;
            if (editIndex != index)
            {
                if (endEditing())
                {
                    $('#tblProductionScheduleDetail').datagrid('selectRow', index)
                            .datagrid('beginEdit', index);
                    editIndex = index;

                }
                else
                {
                    $('#tblProductionScheduleDetail').datagrid('selectRow', editIndex);

                }
            }

        newTotalQuantity();

 }
 function newTotalQuantity()
{
debugger;
         var oProductionScheduleDetails=$('#tblProductionScheduleDetail').datagrid('getRows');
         var count=0;
         for(var i=0;i<oProductionScheduleDetails.length;i++)
         {
             count=Number(count) + Number(oProductionScheduleDetails[i].ProductionQty);
         }

         document.getElementById("lblTotalQuantity").innerHTML=count.toFixed(2);
}
function TotalQuantity()
{

debugger;
         var oProductionScheduleDetails=$('#tblProductionScheduleDetail').datagrid('getRows');
         var count=0;
         for(var i=0;i<oProductionScheduleDetails.length;i++)
         {
             count=Number(count) + Number(oProductionScheduleDetails[i].ProductionQty);
             if(oProductionScheduleDetails[i].ProductionQty<1)
             {
                alert("In row number " + (i+1) + ", production quantity must be greater than one.");
                return false;

             }
         }

         document.getElementById("lblTotalQuantity").innerHTML=count.toFixed(2);
         return true;
}
function RefreshObject()
 {
    debugger;

       if(! TotalQuantity())
       return;
       var oTempProductionSchedule = $('#divPS').data("ProductionSchedule");
       var sDateTime=new Date(GenerateStartTimeInString());
       var eDateTime=new Date(GenerateEndTimeInString());


       var oProductionSchedule = {
                                  ProductionScheduleID  :oTempProductionSchedule.ProductionScheduleID,
                                  ScheduleStability     : oTempProductionSchedule.ScheduleStability,
                                  MachineID             : oTempProductionSchedule.MachineID,
                                  BatchNo               : oTempProductionSchedule.BatchNoInString,
                                  BatchNoInString       : oTempProductionSchedule.BatchNoInString,
                                  BatchGroup            : oTempProductionSchedule.BatchGroup,
                                  ScheduleStatus        : oTempProductionSchedule.ScheduleStatusInString,
                                  ScheduleStatusInString: oTempProductionSchedule.ScheduleStatusInString,
                                  LocationID            : oTempProductionSchedule.LocationID,
                                  ProductionQty         : document.getElementById("lblTotalQuantity").innerHTML,
                                  ScheduleType          : oTempProductionSchedule.ScheduleType,
                                  StartTime	            : sDateTime,
                                  EndTime               : eDateTime

                             };



      return oProductionSchedule;
 }
function RefreshObjectProductionScheduleDetails(oProductionScheduleDetails)
 {

  var oScheduleDetails=[];
   for(var i=0; i<oProductionScheduleDetails.length;i++)
   {

     var oProductionScheduleDetail=
           {

              ProductionScheduleDetailID :  oProductionScheduleDetails[i].ProductionScheduleDetailID,
              ProductionScheduleID       :  oProductionScheduleDetails[i].ProductionScheduleID,
              ProductionTracingUnitID    :  oProductionScheduleDetails[i].ProductionTracingUnitID,
              DODID                      :  oProductionScheduleDetails[i].DODID,
              WaitingForProductionQty    :  oProductionScheduleDetails[i].WaitingForProductionQty,
              ProductionQty              :  oProductionScheduleDetails[i].ProductionQty,
              Remarks                    :  oProductionScheduleDetails[i].Remarks

            };
      oScheduleDetails.push(oProductionScheduleDetail);

    }
  return oScheduleDetails;


 }
function ProductionScheduleDetailTable(oProductionScheduleDetails)
 {

  var oScheduleDetails=[];
   for(var i=0; i<oProductionScheduleDetails.length;i++)
   {

     var oProductionScheduleDetail=
           {
                  ProductionScheduleDetailID : oProductionScheduleDetails[i].ProductionScheduleDetailID,
                  ProductionScheduleID       : oProductionScheduleDetails[i].ProductionScheduleID,
                  ProductionTracingUnitID    : oProductionScheduleDetails[i].ProductionTracingUnitID,
                  DODID                      : oProductionScheduleDetails[i].DODID,
                  OrderNo                    : oProductionScheduleDetails[i].OrderNo,
                  BuyerName                  : oProductionScheduleDetails[i].BuyerName,
                  ProductName                : oProductionScheduleDetails[i].ProductName,
                  ColorName                  : oProductionScheduleDetails[i].ColorName,
                  YetToProductionQty         : oProductionScheduleDetails[i].YetToProductionQty,
                  WaitingForProductionQty    : oProductionScheduleDetails[i].WaitingForProductionQty,
                  ProductionQty              : oProductionScheduleDetails[i].ProductionQty,
                  RemainingScheduleQuantity  : oProductionScheduleDetails[i].RemainingScheduleQuantity

            };
      oScheduleDetails.push(oProductionScheduleDetail);

    }
  return oScheduleDetails;


 }


 function SetNewScheduledQuantity(editIndex)
 {
//  OrderNo BuyerName ProductName ColorName YetToProductionQty WaitingForProductionQty ProductionQty RemainingScheduleQuantity


       var oPSD= $('#tblProductionScheduleDetail').datagrid('getRows');



        var oProductionScheduleDetail=
               {

                  ProductionScheduleDetailID : oPSD[editIndex].ProductionScheduleDetailID,
                  ProductionScheduleID       : oPSD[editIndex].ProductionScheduleID,
                  ProductionTracingUnitID    : oPSD[editIndex].ProductionTracingUnitID,
                  DODID                      : oPSD[editIndex].DODID,
                  OrderNo                    : oPSD[editIndex].OrderNo,
                  BuyerName                  : oPSD[editIndex].BuyerName,
                  ProductName                : oPSD[editIndex].ProductName,
                  ColorName                  : oPSD[editIndex].ColorName,
                  YetToProductionQty         : oPSD[editIndex].YetToProductionQty,
                  WaitingForProductionQty    : oPSD[editIndex].WaitingForProductionQty,
                  ProductionQty              : oPSD[editIndex].ProductionQty,
                  RemainingScheduleQuantity  : oPSD[editIndex].RemainingScheduleQuantity,
                  Remarks                    : oPSD[editIndex].Remarks


                };


            $('#tblProductionScheduleDetail').datagrid('updateRow',{index: editIndex,	row: oProductionScheduleDetail});


 }

 function  ValidationScheduleQuantity(oProductionScheduleDetails)
 {



    return true;

 }


 debugger;
 function Save()
 {
      debugger;
        if(! dateTimeValidation())
        return;
        endEditing();
        var oProductionSchedule=RefreshObject();
        if(oProductionSchedule==false){return; }
        var nts=(new Date()).getTime()/1000;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/ProductionSchedule/GetSchedulesInTimePeriod",
            data: JSON.stringify({oProductionSchedule:oProductionSchedule, nts: nts}),
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                //debugger;
                var oPSs = jQuery.parseJSON(data);
                if (oPSs.length>0)
                {

                   if( new Date(new Date(oPSs[0].StartTimeInString))<= oProductionSchedule.EndTime)
                   {
                       if(confirm("Are you sure to increase time from next all schedules."))
                       {
                           oProductionSchedule.bIncreaseTime=true;
                           oProductionSchedule.ChangeGrid=1;
                           SaveProductionSchedule(oProductionSchedule);
                       }
                   }
                   else if( new Date(new Date(oPSs[0].StartTimeInString))> oProductionSchedule.EndTime)
                   {
                       if(confirm("Are you sure to decrease time from next all schedules."))
                       {
                           oProductionSchedule.ChangeGrid=1;
                           oProductionSchedule.bIncreaseTime=false;
                           SaveProductionSchedule(oProductionSchedule);
                       }
                       else
                       {
                            oProductionSchedule.ChangeGrid=0;
                            oProductionSchedule.bIncreaseTime=false;
                            SaveProductionSchedule(oProductionSchedule);
                       }
                   }

                 }
                 else if(oPSs.length<=0)
                 {
                     oProductionSchedule.bIncreaseTime=false;
                     SaveProductionSchedule(oProductionSchedule);
                       return;
                 }

                },
                error: function(xhr, status, error)
                {
                alert(error);
                }
           });


 }
 function SaveProductionSchedule(oProductionSchedule)
 {
          var oProductionScheduleDetails=$('#tblProductionScheduleDetail').datagrid('getRows');
          if(! ValidationScheduleQuantity(oProductionScheduleDetails))
          return;

          if( oProductionScheduleDetails.length==null || oProductionScheduleDetails.length<=0)
          {
              alert("Add Production Detail First!!");
              return;
          }
          oProductionSchedule.ProductionScheduleDetails= RefreshObjectProductionScheduleDetails(oProductionScheduleDetails);
          var oPSDEtails= ProductionScheduleDetailTable(oProductionScheduleDetails);

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/ProductionSchedule/Save",
            traditional: true,
            data:  JSON.stringify(oProductionSchedule),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                oProductionSchedule = jQuery.parseJSON(data);
                if (oProductionSchedule.ErrorMessage=="") {

                    alert("Data Saved successfully");
                    debugger;
                    ControllForCombineRouteSheet(oProductionSchedule.ProductionScheduleDetails);
                    var oProductionSchedules = sessionStorage.getItem("ProductionSchedules");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oProductionSchedules != null)
                    {
                        oProductionSchedules = jQuery.parseJSON(oProductionSchedules);
                    }
                    else
                    {
                        oProductionSchedules = [];
                    }
                    if (nIndex != -1)
                    {
                        oProductionSchedules[nIndex] = oProductionSchedule;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oProductionSchedules.length);
                        oProductionSchedules.push(oProductionSchedule);
                    }
                    sessionStorage.setItem("ProductionSchedules", JSON.stringify(oProductionSchedules));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else
                {
                    alert(oProductionSchedule.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }


        });
 }

 function objectMaping(getobj)
{
  debugger;

  //var nProductionQuantity= Number(getobj.RawYarnUseCapacity)- Number(getobj.WaitingForProductionQty);
  var oProductionScheduleDetail=
           {

              ProductionTracingUnitID    :  getobj.PTUID,
              DODID                      :  getobj.DyeingOrderDetailID,
              OrderNo                    :  getobj.JobNo,
              ProductName                :  getobj.ProductName,
              BuyerName                  :  getobj.BuyerName,
              ColorName                  :  getobj.ColorName,
              YetToProductionQty         :  getobj.RawYarnUseCapacity,
              WaitingForProductionQty    :  getobj.WaitingForProductionQty,
              ProductionQty              :  getobj.YetToScheduleQty,  //getobj.ProductionQty,
              RemainingScheduleQuantity  :  getobj.YetToScheduleQty
            };



  return oProductionScheduleDetail;
}



 function Delete()
 {
   debugger;
    var oProductionScheduleDetail= $('#tblProductionScheduleDetail').datagrid('getSelected');
    if(oProductionScheduleDetail==null || oProductionScheduleDetail.JobNo<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    if (!confirm("Confirm to Delete?")) return ;
    if(oProductionScheduleDetail.RSState>=4)
    {
       alert("Unable to delete.");
       return;
    }


    var SelectedRowIndex=$('#tblProductionScheduleDetail').datagrid('getRowIndex',oProductionScheduleDetail);
    $('#tblProductionScheduleDetail').datagrid('deleteRow',SelectedRowIndex);
    _nRemoveFlag=1;
     newTotalQuantity();
     endEditing();

 }

 $('#txtOrderNo').keypress(function(e)
 {
     var code = (e.keyCode ? e.keyCode : e.which);
     if (code==13 )//Entrer =13
     {
         GetDyeingOrders();
     }
 });
 $('#btnOrder').click(function (e)
 {
     GetDyeingOrders();
 });

 function GetDyeingOrders()
 {
     debugger;
     var nOrderType=$("#cboOrderType").val();
     var sOrderNo=$("#txtOrderNo").val();
     if (nOrderType<=0)
     {
         alert('Please select Order Type.');
         $('#cboOrderType').focus();
         return;
     }
     var oDyeingOrder = {OrderNo:$.trim(sOrderNo),DyeingOrderType:nOrderType };
     var obj = {
         BaseAddress: _sBaseAddress,
         Object: oDyeingOrder,
         ControllerName: "DyeingOrder",
         ActionName: "GetsDyeingOrder",
         IsWinClose: false
     };
     $.icsDataGets(obj, function (response) {
         debugger;
         if (response.status && response.objs.length > 0) {
             if (response.objs[0].DyeingOrderID > 0) {
                 var tblColums = [];
                 var oColumn = { field: "OrderNo", title: "Order No", width: 80, align: "left" }; tblColums.push(oColumn);
                 oColumn = { field: "OrderDateSt", title: "Order Date", width: 150, align: "left" }; tblColums.push(oColumn);
                 oColumn = { field: "ContractorName", title: "Buyer", width: 100, align: "left" }; tblColums.push(oColumn);
                 oColumn = { field: "ExportPINo", title: "PI No", width: 40, align: "left" }; tblColums.push(oColumn);
                 var oPickerParam = {
                     winid: 'winDyeingOrderPicker',
                     winclass: 'clsDyeingOrderPicker',
                     winwidth: 450,
                     winheight: 460,
                     tableid: 'tblDyeingOrderPicker',
                     tablecolumns: tblColums,
                     datalist: response.objs,
                     multiplereturn: false,
                     searchingbyfieldName: 'OrderNo',
                     windowTittle: 'Dyeing Order List'
                 };
                 $.icsPicker(oPickerParam);
                 IntializePickerbutton(oPickerParam);
             }
             else {
                 alert(response.objs[0].ErrorMessage);
             }

         }else{
             alert("Data Not Found.");
         }
     });
 }


function ClearJobNofield()
{
   $("#txtOrderNo")[0].value='';
}

$('#btnAddJob').click(function(e)
{
  
    if(parseInt($('#cboColor').val())<=0)
    {
        alert("Please select from color.");
        return;
    }
    
    var nts=(new Date()).getTime()/1000;
    $.ajax({
        type: "Get",
        dataType: "json",
        url: _sBaseAddress+ "/DyeingOrder/GetDOD",
        traditional: true,
        data:  {nID :parseInt($('#cboColor').val()), nts:nts},
        contentType: "application/json; charset=utf-8",
        success: function (data) 
        {
            debugger;
            var oDyeingOrderDetail= jQuery.parseJSON(data);
            if(oDyeingOrderDetail.DyeingOrderDetailID>0 && (oDyeingOrderDetail.ErrorMessage==null || oDyeingOrderDetail.ErrorMessage==""))
            {
                var oProductionScheduleDetails=[];
                oProductionScheduleDetails=$('#tblProductionScheduleDetail').datagrid('getRows');
                if(oProductionScheduleDetails.length>0)
                {
                    for(var j=0;j<oProductionScheduleDetails.length;j++)
                    {
                        if(parseInt(oProductionScheduleDetails[j].ProductionTracingUnitID)== parseInt(oDyeingOrderDetail.PTUID) && parseInt(oProductionScheduleDetails[j].DODID)== parseInt(oDyeingOrderDetail.DyeingOrderDetailID))
                        {

                            alert("You can't assign same type of order twice for a schedule.\n Only update can possible for 'Yet To Schedule' Quantity.");
                            return;
                        }
                    }
                }
                var oScheduleDetail= objectMaping(oDyeingOrderDetail);
                oProductionScheduleDetails=$('#tblProductionScheduleDetail').datagrid('getRows');
                oProductionScheduleDetails.push(oScheduleDetail);

                //$('#tblProductionSchedule').empty();
                data=oProductionScheduleDetails;
                data={"total":""+data.length+"","rows":data};
                $('#tblProductionScheduleDetail').datagrid('loadData',data);
                $('#tblProductionScheduleDetail').datagrid({selectOnCheck:false, checkOnSelect:false});
                endEditing();

            }
            else
            {
                alert(oDyeingOrderDetail.ErrorMessage);
            }

        },
        error: function (xhr, status, error) {
            alert(error);
        }
    });
});


//machine get
$("#txtMachineName").keydown(function (e) {
    debugger;
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13) // Enter Press
    {
        GetMachines();
    }if (code == 8) //backspace=8
    {
        //debugger;
        $("#txtMachineName").removeClass("fontColorOfPickItem");
        $("#txtLocationName").val('');
        $("#txtMachineName").val("");
        $('#divPS').data("ProductionSchedule").MachineID = 0;
        $('#divPS').data("ProductionSchedule").LocationID = 0;
    }
});

function ChangeLocationMachine()
{
    GetMachines();
}
function GetMachines()
{
    debugger;
    var oCapitalResource = { BUID:sessionStorage.getItem('BUID'),ResourcesTypeInInt:2,Name:$.trim($('#txtMachineName').val()) };
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oCapitalResource,
        ControllerName: "CapitalResource",
        ActionName: "GetsByBUandResourceTypeWithName",
        IsWinClose: false
    };
    $("#progressbar").progressbar({ value: 0 });
    $("#progressbarParent").show();
    var intervalID = setInterval(updateProgress, 250);
    $.icsDataGets(obj, function (response) {
        debugger;
        clearInterval(intervalID);
        $("#progressbarParent").hide();
        if (response.status && response.objs.length > 0) {
            if (response.objs[0].CRID > 0) {
                var tblColums = []; var  oColumn = { field: "Code", title: "Machine No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Machine Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "MachineCapacity", title: "Weight", width: 90, align: "left" }; tblColums.push(oColumn);

                var oPickerParam = {
                    winid: 'winMachines',
                    winclass: 'clsMachine',
                    winwidth: 600,
                    winheight: 460,
                    tableid: 'tblMachines',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: false,
                    searchingbyfieldName: 'Code',
                    windowTittle: 'Machine List'
                };
                $.icsPicker(oPickerParam);
                IntializePickerbutton(oPickerParam);
            }
            else { alert(response.objs[0].ErrorMessage); }
        }else{
            alert("Data Not Found.");
        }
    });
}

function IntializePickerbutton(oPickerobj) {
    debugger;
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
        debugger;
        //for Single Select
        PickerEvents(oPickerobj);
    });
    $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
        if (e.which == 13)//enter=13
        {
            PickerEvents(oPickerobj);
        }
    });
}
function PickerEvents(oPickerobj)
{
    var oreturnobj = null, oreturnobjs = [];
    if (oPickerobj.multiplereturn)
    {
        oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
    } else
    {
        oreturnobj = $('#' + oPickerobj.tableid).datagrid('getSelected');
    }
    $("#" + oPickerobj.winid).icsWindow("close");
    $("#" + oPickerobj.winid).remove();
    if (oPickerobj.winclass == 'clsMachine')
    {
        $("#txtLocationName").val(oreturnobj.LocationName);
        $("#txtMachineName").val(oreturnobj.Name);
        $('#divPS').data("ProductionSchedule").MachineID = oreturnobj.CRID;
        $('#divPS').data("ProductionSchedule").LocationID = oreturnobj.LocationID;
        $("#txtMachineName").addClass("fontColorOfPickItem");
    }else if (oPickerobj.winid == 'winDyeingOrderPicker')
    {
        debugger;
        if (oreturnobj != null && parseInt(oreturnobj.DyeingOrderID) > 0)
        {
            $('#txtOrderNo').val(oreturnobj.OrderNo);
            $('#txtOrderNo').addClass('fontColorOfPickItem');
            $('#DyeingOrderID').focus();
            SetColor(oreturnobj.DyeingOrderID);
        }
    }else  if (oPickerobj.winclass == 'clsContractor')
    {
        $('#divPS').data('BuyerIDs',"");
        var sBuyerIDs = "";
        if (oPickerobj.multiplereturn)
        {
            var ncount = 0;
            for (var i = 0; i <oreturnobjs.length; i++) {
                var nSupplierID = oreturnobjs[i].ContractorID;
                sBuyerIDs = sBuyerIDs + nSupplierID + ',';
                ncount++;
            }
            if (ncount > 1)
            {
                $('#txtBuyerName').val("Select " + ncount + " Buyer's");
            } else
            {
                $('#txtBuyerName').val(oreturnobjs[0].Name);
            }
            sBuyerIDs = sBuyerIDs.substring(0, sBuyerIDs.length - 1);

        } else
        {
            $('#txtBuyerName').val(oreturnobj.Name);
            sBuyerIDs = "" + oreturnobj.ContractorID + "";
            $('#txtBuyerName').focus();
        }
        $("#txtBuyerName").addClass("fontColorOfPickItem");
        $('#divPS').data('BuyerIDs',sBuyerIDs);
    }
}

function SetColor(nDyeingOrderID)
{
    var oDyeingOrderDetail={
        DyeingOrderID: nDyeingOrderID
    }
    $.ajax({
        type: "POST",
        dataType: "json",
        url: _sBaseAddress + "/DyeingOrder/GetsDOD",
        traditional: true,
        data:  JSON.stringify(oDyeingOrderDetail),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var oDyeingOrderDetails = jQuery.parseJSON(data);
            if(oDyeingOrderDetails.length>0 && (oDyeingOrderDetails[0].ErrorMessage==null || oDyeingOrderDetails[0].ErrorMessage==""))
            {
                $("#cboColor").icsLoadCombo({List:oDyeingOrderDetails,OptionValue:"DyeingOrderDetailID",DisplayText:"ColorName"});
            }
            else
            {
                alert(oDyeingOrderDetails[0].ErrorMessage);
                $("#cboColor").icsLoadCombo({List: [],OptionValue: "DyeingOrderDetailID",DisplayText: "ColorName"});
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }
    });

}

$('#btnCurrenttime').click(function(e)
{
    var oDate=new Date();
    oDate.setMinutes(oDate.getMinutes()+5);
    SetStartTime(oDate);
    AddTime(GenerateStartTimeInString());
});
$('#btnScheduleLastTime').click(function(e)
{
//   if($.trim(_StratTime)!=""){ SetStartTime(new Date(_StratTime));}
//   else
//   {
//    var oDate=new Date();
//    oDate.setMinutes(oDate.getMinutes()+5);
//    SetStartTime(oDate);
//    }
//   AddTime(GenerateStartTimeInString());
SetLastScheduleTime();
});
function SetLastScheduleTime()
{

    if(parseInt($('#divPS').data("ProductionSchedule").MachineID)>0 && parseInt($('#divPS').data("ProductionSchedule").LocationID)>0)
   {
        var nts=(new Date()).getTime()/1000;
        $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/ProductionSchedule/GetPSByMachine",
                data: { nMachineID: $('#divPS').data("ProductionSchedule").MachineID ,  nLocationID: $('#divPS').data("ProductionSchedule").LocationID , nts:nts },
                contentType: "application/json; charset=utf-8",
                success: function(data)
                {
                    //debugger;
                    _StratTime = jQuery.parseJSON(data);
                    if ($.trim(_StratTime)!='')
                    {
                        SetStartTime(new Date(_StratTime));
                        AddTime(GenerateStartTimeInString());
                    }
                    else
                    {

                        var oDate=new Date();
                        oDate.setMinutes(oDate.getMinutes()+5);
                        SetStartTime(oDate);
                    }
                    },
                    error: function(xhr, status, error)
                    {
                    alert(error);
                    }
                });
     }

}

//Add Order start
function AddOrder()
{
    $("#winDyeingOrderDetailAdvanceSearch").icsWindow('open', "Advance Search");
    $("#winDyeingOrderDetailAdvanceSearch input").not("input[type='button']").val("");
    $("#winDyeingOrderDetailAdvanceSearch select").val(0);
    SetTodayDate();
    Reset();
}

function SetTodayDate()
{
    $('#txtStartOrderDate').datebox('setValue', icsdateformat(new Date()));
    $('#txtEndOrderDate').datebox('setValue', icsdateformat(new Date()));
}

$('._select_changeA').change(function () {
    //debugger;
    var x = $("#cboOrderCreateDate").val();
    if (x == "EqualTo" || x == "NotEqualTo" || x == "GreaterThen" || x == "SmallerThen") {
        document.getElementById("enddate").style.display = 'none';
        document.getElementById("enddateT").style.display = 'none';
    }
    else {
        document.getElementById("enddate").style.display = '';
        document.getElementById("enddateT").style.display = '';
    }
    if (x == "None")
    {

        $('#txtStartOrderDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtEndOrderDate').datebox('setValue', icsdateformat(new Date()));
    }
});

///Contractor Pick
$("#txtBuyerName").keydown(function (e) {
    debugger;
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13) // Enter Press
    {
        GetBuyers();
    }if (code == 8) //backspace=8
    {
        //debugger;
        $("#txtBuyerName").removeClass("fontColorOfPickItem");
        $('#divPS').data('BuyerIDs',"");
    }
});
$("#btnBuyerPicker").click(function () {
        
    GetBuyers();
});
    
function GetBuyers()
{
    debugger;
    var oContractor = { Params: "2~"+$('#txtBuyerName').val()+'~'+sessionStorage.getItem('BUID') };
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oContractor,
        ControllerName: "Contractor",
        ActionName: "ContractorSearchByNameType",
        IsWinClose: false
    };
    $("#progressbar").progressbar({ value: 0 });
    $("#progressbarParent").show();
    var intervalID = setInterval(updateProgress, 250);
    $.icsDataGets(obj, function (response) {
        debugger;
        clearInterval(intervalID);
        $("#progressbarParent").hide();
        if (response.status && response.objs.length > 0) {
            if (response.objs[0].ContractorID > 0) {
                var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                var oPickerParam = {
                    winid: 'winContractors',
                    winclass: 'clsContractor',
                    winwidth: 600,
                    winheight: 460,
                    tableid: 'tblContractors',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: true,
                    searchingbyfieldName: 'Name',
                    windowTittle: 'Buyer List'
                };
                $.icsPicker(oPickerParam);
                IntializePickerbutton(oPickerParam);
            }
            else { alert(response.objs[0].ErrorMessage); }
        }else{
            alert("Data Not Found.");
        }
    });
}

$('#btnRefresh').click(function (){
    debugger;
    var sOrderNo= $("#txtDyeingOrderNo").val();
    var cboOrderCreateDate = document.getElementById("cboOrderCreateDate");
    var nOrderCreateDate=cboOrderCreateDate.options[cboOrderCreateDate.selectedIndex].index;
    var dOrderDateStart=$('#txtStartOrderDate').datebox('getValue');
    var dOrderDateEnd=$('#txtEndOrderDate').datebox('getValue');
    if(nOrderCreateDate==0 && sOrderNo=="" &&  $('#divPS').data('BuyerIDs') =="")
    {
        alert('Please Select a Search Criteria');
        return false;
    }
    var sTempString = nOrderCreateDate+'~'+dOrderDateStart+'~'+dOrderDateEnd+'~'+sOrderNo+'~'+ $('#divPS').data('BuyerIDs')+'~'+ sessionStorage.getItem('BUID');
    $.ajax({
        type: "GET",
        dataType: "json",
        url: '@Url.Action("DODetailsSearch", "DyeingOrder")',
        data: { Temp: sTempString },
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            ////debugger;
            oDyeingOrderDetails = jQuery.parseJSON(data);
            if (oDyeingOrderDetails != null) {
                if(oDyeingOrderDetails.length>0)
                {
                    RefreshListForSearch(oDyeingOrderDetails);
                }
                else
                {
                    alert("Data not found!!");
                    RefreshListForSearch([]);
                }
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }
    });

});

function Reset() {
    debugger;
    $("#txtDyeingOrderNo,#txtBuyerName").val('');
    document.getElementById("enddate").style.display = '';
    document.getElementById("enddateT").style.display = '';
    $('#cboOrderCreateDate').val('None');
    SetTodayDate();
    data ="";
    data={"total":""+data.length+"","rows":data};
    $('#tblDyeingOrderDetailsList').datagrid('loadData',data);
    $("#txtBuyerName").removeClass("fontColorOfPickItem");
    $('#divPS').data('BuyerIDs',"");
      
}


function RefreshListForSearch(oSameOrders)
{
    data =oSameOrders;
    data={"total":""+data.length+"","rows":data};
    $('#tblDyeingOrderDetailsList').datagrid('loadData',data);

}

function SearchClose()
{
    $("#winDyeingOrderDetailAdvanceSearch").icsWindow('close');
}

function OkButtonClick() {
    debugger;
    var oDyeingOrderDetail = $('#tblDyeingOrderDetailsList').datagrid('getSelected');
    if(oDyeingOrderDetail.DyeingOrderDetailID<=0)
    {
        alert("please select at least one item");
        return;
    }
    var oProductionScheduleDetails=[];
    oProductionScheduleDetails=$('#tblProductionScheduleDetail').datagrid('getRows');
    if(oProductionScheduleDetails.length>0)
    {
        for(var j=0;j<oProductionScheduleDetails.length;j++)
        {
            if(parseInt(oProductionScheduleDetails[j].ProductionTracingUnitID)== parseInt(oDyeingOrderDetail.PTUID) && parseInt(oProductionScheduleDetails[j].DODID)== parseInt(oDyeingOrderDetail.DyeingOrderDetailID))
            {

                alert("You can't assign same type of order twice for a schedule.\n Only update can possible for 'Yet To Schedule' Quantity.");
                return;
            }
        }
    }
    var oScheduleDetail= objectMaping(oDyeingOrderDetail);
    oProductionScheduleDetails=$('#tblProductionScheduleDetail').datagrid('getRows');
    oProductionScheduleDetails.push(oScheduleDetail);

    data=oProductionScheduleDetails;
    data={"total":""+data.length+"","rows":data};
    $('#tblProductionScheduleDetail').datagrid('loadData',data);
    $('#tblProductionScheduleDetail').datagrid({selectOnCheck:false, checkOnSelect:false});
    endEditing();
    $("#winDyeingOrderDetailAdvanceSearch").icsWindow('close');
}



function Close()
{
    window.location.href = sessionStorage.getItem("BackLink");
}

function formatPrice(val,row)
{

     if(parseFloat(val))
     {
         val=parseFloat(val);
         var test = val.toFixed(2);
         if (val < 0)
         {
         test=(-1*test);
         }
         var tests = addComma(test);
         if (val < 0)
         {
            return '<span style="color:red;">('+tests+')</span>';
         }
         else
         {
          return tests;
         }
     }

}

function addComma(nStr)
{

	nStr += '';
	x = nStr.split('.');
	x1 = x[0];
	x2 = x.length > 1 ? '.' + x[1] : '';
	var rgx = /(\d+)(\d{3})/;
	while (rgx.test(x1)) {
		x1 = x1.replace(rgx, '$1' + ',' + '$2');
	}
	return x1 + x2;
}

function updateProgress()
{
    var value =$('#progressbar').progressbar('getValue');
    if (value < 96){
        value += Math.floor(Math.random() * 10);
        $('#progressbar').progressbar('setValue', value);
    }
}
function hideShow(miliseconds) {
    $("#progressbarParent").hide();
}
</script>
