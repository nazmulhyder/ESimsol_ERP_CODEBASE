<html>
<head>
    @{ViewBag.Title = "Consumption Requisition";} 
</head>
<body>
    @model ESimSol.BusinessObjects.ConsumptionRequisition
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable">
        <div id="divConsumptionRequisition" class="easyui-panel" title="Consumption Requisition" style="font-family:Tahoma; text-align:center; height:89%;">
            <div style="width:100%;">
                <fieldset>
                    <legend style="font-weight:bold">Consumption Requisition info: </legend>
                    <table style="width:100%" cellpadding="1" cellspacing="1">
                        <tr>
                            <td style="width: 12%; text-align: right">
                                File No:
                            </td>
                            <td style="width: 25%; text-align: left">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:30%">@Html.TextBoxFor(model => model.RefNo, new { style = "width: 100%;", id = "txtRefNo", disabled = "disabled" })</td>
                                        <td style="width:30%; text-align:right;">CR Type :</td>
                                        <td style="width:40%">
                                            <select id="cboCRType" style="width:100%"></select>
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width: 10%; text-align:right;">
                                Requisition No:
                            </td>
                            <td style="width:18%; text-align:left;">
                                @Html.TextBoxFor(model => model.RequisitionNo, new { style = "width:99%;", id = "txtRequisitionNo" })
                            </td>                             
                            <td style="width:10%; text-align: right">
                                Requisition By :
                            </td>
                            <td style="width: 25%; text-align: right">
                               @Html.TextBoxFor(model => model.RequisitionByName, new { style = "width: 98%;", id = "txtRequisitionByName", disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width:12%; text-align:right;">
                                <label id="lblRequisitionFor" style="font-weight:normal;">Requisition For :</label>
                            </td>
                            <td colspan="3" style="width: 53%; text-align: left">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:90%;">@Html.TextBoxFor(model => model.RequisitionForName, new { style = "width: 99%;", id = "txtRequisitionFor", placeholder = "Press Enter With Style No/Consumption Unit Name" })</td>
                                        <td style="width:10%; text-align:right;"><input type="button" style="width:100%" value="Pick" id="btnPickRequisitionFor" /></td>
                                    </tr>
                                </table>
                            </td>                           
                            <td style="width:10%; text-align: right">
                                Store :
                            </td>
                            <td style="width: 25%; text-align: right">
                                <input id="txtWorkingUnit" style="width:85%;" type="text" placeholder="Type store & Press Enter" />
                                <input type="button" value="Pick" style="width:13%;" id="btnPickWorkingUnit" />

                            </td>
                        </tr>

                        <tr>
                            <td style="width: 12%; text-align: right">
                                Ref. Type:
                            </td>
                            <td colspan="3" style="width: 53%; text-align: left">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td>
                                            <select id="cboRefType" style="width:20%"></select>
                                            <input id="txtRefObjNo" style="width:68%;" type="text" placeholder="Type Ref No and press enter" />
                                            <input type="button" value="Pick" onclick="PickRefObj()" style="width:10%;" id="btnRefObj" />
                                        </td>
                                    </tr>
                                </table>
                            </td>      
                            <td style="width: 10%; text-align:right;">
                                Sub Ledger :
                            </td>
                            <td style="width: 25%; text-align: right">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:86%;">@Html.TextBoxFor(model => model.SubLedgerName, new { style = "width: 99%;", id = "txtSubLedgerName", placeholder = "Press Enter Sub Ledger Name" })</td>
                                        <td style="width:14%; text-align:right;"><input type="button" style="width:100%" onclick="PickSubLedger()" value="Pick" id="btnPickSubLedger" /></td>
                                    </tr>
                                </table>
                            </td>
                        </tr>

                        <tr>
                            <td style="width: 12%; text-align: right">
                                Remarks :
                            </td>
                            <td style="width:53%; text-align: left" colspan="3">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:100%; text-align:right;">@Html.TextBoxFor(model => model.Remarks, new { style = "width:100%;", id = "txtRemarks" })</td>
                                              
                                    </tr>
                                </table>
                            </td> 
                            <td style="width: 10%; text-align:right;">
                                Issue Date:
                            </td>
                            <td style="width: 25%; text-align: right">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:18%; text-align:left;"><input id="txtIssueDate" type="text" class="easyui-datebox" style="width: 100%;" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                        <td style="width:6%; text-align:left;">Shift:</td>
                                        <td style="width:24%; text-align:left;"><select id="cboShift" style="width:100%"></select> </td>  
                                    </tr>
                                </table>
                            </td>

                        </tr>                                
                    </table>
                </fieldset>
            </div>
            <table id="tblConsumptionRequisitionDetail" title="Consumption Requisition Details" class="easyui-datagrid" style="height:290px; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="onClickRow: onClickRow">
                <thead>
                    <tr>
                        <th field="ProductCode" width="10%" align="left">Code</th>
                        <th field="ProductName" width="15%" align="left">Product</th>
                        <th field="ProductGroupName" width="15%" align="left">Product Group</th>
                        <th field="LotNo" width="15%" align="left">Lot No</th>
                        <th field="StyleNo" width="15%" align="left">Style No</th>
                        <th field="ColorName" width="10%" align="left">Color</th>    
                        <th field="SizeName" width="10%" align="left">Size</th>                                
                        <th field="Symbol" width="5%" align="left">Unit</th>
                        <th field="Balance" width="10%" align="right" formatter="formatPrice">CurrentBalance</th>
                        <th width="7%" align="right" data-options="field:'Quantity',editor:{type:'numberbox',options:{precision:4}}">Qty</th>                        
                        <th field="UnitPrice" width="10%" formatter="formatPrice4digit" align="right">Rate</th>
                        <th field="Amount" width="10%" formatter="formatPrice4digit" align="right">Amount</th>
                    </tr>
                </thead>                
            </table>
            <div id="toolbar">
                <table border="0" cellpadding="1" cellspacing="1" style="width:100%;">
                    <tr>
                        <td style="width:50%"><input type="text" placeholder="Press Enter With Product Name" id="txtProductName" style="width:78%" /><input type="button" style="width:10%;" id="btnProductPiker" value="Pick" /><input type="button" style="width:10%;" id="btnSuggProductPiker" value="Sugg" /></td>
                        <td style="width:10%;">@*<select id="cboUnit" style="width:100%;"></select>*@</td>
                        <td style="width:40%"><input type="text" placeholder="Press Enter With Lot No" id="txtLot" style="width:74%" /><input type="button" style="width:12%;" id="btnLotPicker" value="Pick" /><input type="button" style="width:12%;" id="btnSuggLotPicker" value="Sugg" /></td>                        
                    </tr>
                    <tr>
                        <td style="width:50%"><input type="text" id="txtQty" placeholder="Type Qty" style="width:15%" /></td>                        
                        <td style="width:10%;text-align:right;"></td>
                        <td style="width:40%;text-align:right;">                            
                            @*<a id="btnAddDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>*@
                            <a id="btnRemoveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                            <a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a>
                        </td>
                    </tr>
                </table>
            </div>
            <table border="0" cellpadding="0" cellspacing="0" style="width:100%;">
                <tr>
                    <td style="width:62%;  text-align:right;font-weight:bold;">Total:</td>
                    <td style="width:10%;  text-align:right;font-weight:bold;"><label id="lblTotalQty">0</label> </td>
                    <td style="width:3%;  text-align:right;font-weight:bold;"> </td>
                    <td id="tdAmount"style="width:13%; text-align:right; font-weight:bold;"><label id="lblCurrencySymbol"></label>&nbsp;<label id="lblTotalAmount">0.00</label> </td>
                    <td style="width:15%;  text-align:right;font-weight:bold;"> </td>
                </tr>
            </table>
        </div>
        <fieldset style="height:8%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:83%; text-align:right"></td>
                    <td style="width:17%;text-align:right;">
                        <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true">Approve</a>
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">
    var _oConsumptionRequisition=null;
    $(document).ready(function () {
        _oConsumptionRequisition =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oStores = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Stores));
        var oCRTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.CRTypes));
        var oShifts = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        var oRefTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.RefTypes));
        debugger;
        var oAuthorizationRolesMapping = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        var oClientOperationSetting  = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ClientOperationSetting));
     
        $('#cboRefType').data('RefType', oRefTypes);
        $('#cboCRType').data('CRTypes', oCRTypes);
        $('#txtWorkingUnit').data('Stores', oStores);
        $('#txtRequisitionFor').data('RequisitionFor', _oConsumptionRequisition.RequisitionFor);
        $('#txtSubLedgerName').data('SubLedgerID', _oConsumptionRequisition.SubLedgerID);
        $('#txtProductName').data('Product', null);
        $('#divConsumptionRequisition').data('ClientOperationSetting', oClientOperationSetting);
        $('#txtLot').data('Lots', []);
        //cboShift
        $("#cboShift").icsLoadCombo({List: oShifts,OptionValue: "id",DisplayText: "Value"});
        $("#cboCRType").icsLoadCombo({List: oCRTypes,OptionValue: "id",DisplayText: "Value"});
        $("#cboRefType").icsLoadCombo({List: oRefTypes,OptionValue: "id",DisplayText: "Value"});
        $('#cboCRType').val(_oConsumptionRequisition.CRType);

        $('#txtQty').icsCurrencyBox(null, null, 4);
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
        if(oClientOperationSetting.Value==0)
        {
            $('#tblConsumptionRequisitionDetail').datagrid('hideColumn','StyleNo');
            $('#tblConsumptionRequisitionDetail').datagrid('hideColumn','ColorName');
            $('#tblConsumptionRequisitionDetail').datagrid('hideColumn','SizeName');
        }

        $('#txtIssueDate').datebox('setValue',_oConsumptionRequisition.IssueDateSt);
        $('#btnApprove').hide();
        if(parseInt(_oConsumptionRequisition.ConsumptionRequisitionID)>0)
        {
            RefreshControl(_oConsumptionRequisition);
        }
        ChangesCRType(false);
        $('#lblRequisitionFor').text('Consumption Unit:');
        $('#btnSuggProductPiker,#btnSuggLotPicker').prop('disabled', true);
        RefreshControlLayout(oAuthorizationRolesMapping);        
    });


    $('#cboCRType').change(function(){
        ChangesCRType(true);
    });


    function ChangesCRType(bIsComboChange)
    {
        //EnumConsumptionType { None =0, GeneralConsumption = 1, RawMaterialConsumption = 2 }
        var nCRType = parseInt($('#cboCRType').val());
        if(nCRType===0)
        {
            $('#lblRequisitionFor').text('Requisition For:');
            $('#btnSuggProductPiker,#btnSuggLotPicker').prop('disabled', true);
        }
        else if (nCRType===1)
        {
            $('#lblRequisitionFor').text('Consumption Unit:');
            $('#btnSuggProductPiker,#btnSuggLotPicker').prop('disabled', true);
        }
        else if (nCRType===2)
        {
            $('#lblRequisitionFor').text('Usages Style:');
            $('#btnSuggProductPiker,#btnSuggLotPicker').prop('disabled', false);
        }

        if(bIsComboChange)
        {
            $('#txtRequisitionFor').data('RequisitionFor', 0);
            $('#txtRequisitionFor').val('');
            RefreshDetailList([]);
        }
    }

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }

    function RefreshControl(oConsumptionRequisition)
    {
        $('#cboCRType').val(oConsumptionRequisition.CRTypeInt);
        $("#cboShift").val(oConsumptionRequisition.ShiftInInt);
        $("#txtRequisitionFor").addClass("fontColorOfPickItem");
        $('#cboRefType').val(oConsumptionRequisition.RefTypeInt);
        $('#txtRefObjNo').val(oConsumptionRequisition.RefObjNo);
        if(parseInt(oConsumptionRequisition.RefObjID)>0)
        {
            $("#txtRefObjNo").addClass("fontColorOfPickItem");
        }
        if(parseInt(oConsumptionRequisition.SubLedgerID)>0)
        {
            $("#txtSubLedgerName").addClass("fontColorOfPickItem");
        }
        $('#txtWorkingUnit').val(oConsumptionRequisition.StoreName);
        if(parseInt(oConsumptionRequisition.StoreID)>0)
        {
            $("#txtWorkingUnit").addClass("fontColorOfPickItem");
        }
        RefreshDetailList(oConsumptionRequisition.ConsumptionRequisitionDetails);
        var sConsumptionRequisitionHeader = sessionStorage.getItem("ConsumptionRequisitionHeader");
        if(sConsumptionRequisitionHeader=="View Consumption Requisition")
        {
            $('#btnSave,#btnAddDetail,#btnRemoveDetail').hide();
            $("#divConsumptionRequisition :input").prop('disabled', true);
        }
        if(sConsumptionRequisitionHeader=="Approved Consumption Requisition")
        {
            $('#btnSave,#btnAddDetail,#btnRemoveDetail').hide();
            $('#btnApprove').show();
        }
        SetTotal();
    }

    function RefreshDetailList(oOrderDetailList)
    {
        var data=oOrderDetailList;
        data={"total":""+data.length+"","rows":data};
        $('#tblConsumptionRequisitionDetail').datagrid('loadData',data);
    }

    function Validation()
    {
        var nCRType = parseInt($('#cboCRType').val());
        if(nCRType===0)
        {
            alert('Please select Rawmaterial Requsition Type!');
            $('#cboCRType').focus();
            return;
        }

        var sIssueDate = $('#txtIssueDate').datebox('getValue');
        if(sIssueDate===null || sIssueDate==="")
        {
            alert('Please select Requisition Date!');
            return false;
        }

        if(parseInt($('#txtRequisitionFor').data('RequisitionFor'))<=0){
            $('#txtRequisitionFor').focus();
            $('#txtRequisitionFor').addClass("errorFieldBorder");
            alert('Please Pick Buyer.');
            return false;
        }
        else{
            $('#txtRequisitionFor').removeClass("errorFieldBorder");
        }

        if(parseInt(_oConsumptionRequisition.StoreID)<=0)
        {
            $('#txtWorkingUnit').focus();
            $('#txtWorkingUnit').addClass("errorFieldBorder");
            alert('Please Select Store.');
            return false;
        }
        else{
            $('#txtWorkingUnit').removeClass("errorFieldBorder");
        }


        var oConsumptionRequisitionDetails = $('#tblConsumptionRequisitionDetail').datagrid('getRows');
        if(oConsumptionRequisitionDetails.length<=0)
        {
            alert("Please enter at least one Item!");
            return false;
        }

        for(i=0; i<oConsumptionRequisitionDetails.length; i++)
        {
            if(parseFloat(oConsumptionRequisitionDetails[i].Quantity)<=0)
            {
                alert("Please enter Qty for Product : "+ oConsumptionRequisitionDetails[i].ProductName +", & Lot No :"+ oConsumptionRequisitionDetails[i].LotNo);
                return false;
            }

            if(parseFloat(oConsumptionRequisitionDetails[i].UnitPrice)<=0)
            {
                alert("Invalid Rate for Product : "+ oConsumptionRequisitionDetails[i].ProductName +", & LotNo No :"+ oConsumptionRequisitionDetails[i].StyleNo);
                return false;
            }
        }
        return true;
    }

    function RefreshObject()
    {
        var oConsumptionRequisition={
            ConsumptionRequisitionID : parseInt(_oConsumptionRequisition.ConsumptionRequisitionID),
            BUID : parseInt(sessionStorage.getItem('BUID')),
            RefNo : $.trim($('#txtRefNo').val()),
            CRType  : parseInt($('#cboCRType').val()),
            CRTypeInt : parseInt($('#cboCRType').val()),
            RequisitionBy : parseInt(_oConsumptionRequisition.RequisitionBy),
            CRStatus : parseInt(_oConsumptionRequisition.CRStatusInt),
            CRStatusInt : parseInt(_oConsumptionRequisition.CRStatusInt),
            IssueDate : $('#txtIssueDate').datebox('getValue'),
            RequisitionFor : parseInt($('#txtRequisitionFor').data('RequisitionFor')),
            SubLedgerID:parseInt($('#txtSubLedgerName').data('SubLedgerID')),
            StoreID : parseInt(_oConsumptionRequisition.StoreID),
            Remarks : $.trim($('#txtRemarks').val()),
            RequisitionNo : $.trim($('#txtRequisitionNo').val()),
            ShiftInInt: $("#cboShift").val(),
            
            RefType:parseInt($('#cboRefType').val()),
            RefTypeInt:parseInt($('#cboRefType').val()),
            RefObjID:parseInt($('#txtRefObjNo').data('RefObjID')),

            DeliveryBy : parseInt(_oConsumptionRequisition.DeliveryBy),
            ApprovedBy : parseInt(_oConsumptionRequisition.ApprovedBy),
            ConsumptionRequisitionDetails : $('#tblConsumptionRequisitionDetail').datagrid('getRows')
        };
        return oConsumptionRequisition;
    }

    $("#btnSave").click(function (){
        endEditing();
        if(!Validation()) return false;
        var oConsumptionRequisition=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/ConsumptionRequisition/Save",
            traditional: true,
            data:  JSON.stringify(oConsumptionRequisition),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oConsumptionRequisition = jQuery.parseJSON(data);
                if (oConsumptionRequisition.ErrorMessage==null || oConsumptionRequisition.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    var oConsumptionRequisitions = sessionStorage.getItem("ConsumptionRequisitions");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oConsumptionRequisitions != null) {
                        oConsumptionRequisitions = jQuery.parseJSON(oConsumptionRequisitions);
                    }
                    else {
                        oConsumptionRequisitions = [];
                    }
                    if (nIndex != -1) {
                        oConsumptionRequisitions[nIndex] = oConsumptionRequisition;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oConsumptionRequisitions.length);
                        oConsumptionRequisitions.push(oConsumptionRequisition);
                    }
                    sessionStorage.setItem("ConsumptionRequisitions", JSON.stringify(oConsumptionRequisitions));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oConsumptionRequisition.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $("#btnApprove").click(function (){
        if(!Validation()) return false;
        if (!confirm("Confirm to Approve?")) return false;
        var oConsumptionRequisition=RefreshObject();
        oConsumptionRequisition.ActionTypeExtra = "Approve";
        oConsumptionRequisition.ConsumptionRequisitionStatusInInt = 2;//
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/ConsumptionRequisition/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oConsumptionRequisition),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //
                oConsumptionRequisition = jQuery.parseJSON(data);
                if (oConsumptionRequisition.ErrorMessage==null || oConsumptionRequisition.ErrorMessage=="") {
                    alert("Approved successfully");
                    var oConsumptionRequisitions = sessionStorage.getItem("ConsumptionRequisitions");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oConsumptionRequisitions != null) {
                        oConsumptionRequisitions = jQuery.parseJSON(oConsumptionRequisitions);
                    }
                    else {
                        oConsumptionRequisitions = [];
                    }
                    if (nIndex != -1) {
                        oConsumptionRequisitions[nIndex] = oConsumptionRequisition;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oConsumptionRequisitions.length);
                        oConsumptionRequisitions.push(oConsumptionRequisition);
                    }
                    sessionStorage.setItem("ConsumptionRequisitions", JSON.stringify(oConsumptionRequisitions));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oConsumptionRequisition.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    //start Requisition For picker
    $("#txtRequisitionFor").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //EnumConsumptionType { None =0, GeneralConsumption = 1, RawMaterialConsumption = 2 }
            var nCRType = parseInt($('#cboCRType').val());
            if(nCRType===0)
            {
                alert('Please select Requsition Type!');
                $('#cboCRType').focus();
                return;
            }
            else if (nCRType===1)
            {
                var sConsumptionUnit = $.trim($('#txtRequisitionFor').val());
                PickConsumptionUnit(sConsumptionUnit);
            }
            else if (nCRType===2)
            {
                var sStyleNo = $.trim($('#txtRequisitionFor').val());
                PickStyles(sStyleNo);
            }
        }
    });
    $("#btnPickRequisitionFor").click(function () {
        //EnumConsumptionType { None =0, GeneralConsumption = 1, RawMaterialConsumption = 2 }
        debugger;
        var nCRType = parseInt($('#cboCRType').val());
        if(nCRType===0)
        {
            alert('Please select Requsition Type!');
            $('#cboCRType').focus();
            return;
        }
        else if (nCRType===1)
        {
            PickConsumptionUnit('');
        }
        else if (nCRType===2)
        {
            PickStyles('');
        }
    });
    $('#txtRequisitionFor').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtRequisitionFor").removeClass("fontColorOfPickItem");
            $('#txtRequisitionFor').data('RequisitionFor', 0);
        }
    });


    $("#txtSubLedgerName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            PickSubLedger();
        }else if (code == 8) //backspace=8
        {
            $('#txtSubLedgerName').removeClass('fontColorOfPickItem');
            $('#txtSubLedgerName').data('SubLedgerID', 0);
        }
    });
    function PickSubLedger()
    {
        var oACCostCenter = { Name:$.trim($('#txtSubLedgerName').val())};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oACCostCenter,
            ControllerName: "ConsumptionRequisition",
            ActionName: "GetSubLedgers",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0)
            {
                if (response.objs[0].ACCostCenterID > 0)
                {
                    var tblColums = []; var oColumn = { field: "Code", title: "Code", width:100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSubLedger',
                        winclass: 'clsSubLedger',
                        winwidth: 400,
                        winheight: 460,
                        tableid: 'tblSubLedgers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'SubLedger List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }

    
    
    function PickConsumptionUnit(sConsumptionUnit)
    {
        var oConsumptionUnit = { Name:sConsumptionUnit,BUID:sessionStorage.getItem('BUID')};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oConsumptionUnit,
            ControllerName: "ConsumptionRequisition",
            ActionName: "ConsumptionUnitPicker",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ConsumptionUnitID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Consumption Unit", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winConsumptionUnit',
                        winclass: 'clsConsumptionUnit',
                        winwidth: 400,
                        winheight: 460,
                        tableid: 'tblConsumptionUnits',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ConsumptionUnitName',
                        windowTittle: 'Consumption Units'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    function PickStyles(sStyleNumber)
    {
        var oTechnicalSheet = { StyleNo: sStyleNumber };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oTechnicalSheet,
            ControllerName: "TechnicalSheet",
            ActionName: "StyleSearch",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].TechnicalSheetID > 0) {
                    var tblColums = []; var oColumn = { field: "StyleNo", title: "Style No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "SessionName", title: "Business Session", width: 100, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winStylePicker',
                        winclass: 'clsStylePicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblStylePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'StyleNo',
                        windowTittle: 'Style List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end requisition for picker

    //start product picker
    $("#txtProductName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sProductName = $.trim($('#txtProductName').val());
            if(sProductName === null || sProductName === "")
            {
                alert("Please Type Product and Press Enter.");
                $('#txtProductName').focus();
                return;
            }

            if(parseInt(_oConsumptionRequisition.StoreID)<=0){
                $('#txtWorkingUnit').focus();
                $('#txtWorkingUnit').addClass("errorFieldBorder");
                alert('Please Select Store.');
                return false;
            }
            else{
                $('#txtWorkingUnit').removeClass("errorFieldBorder");
            }
            PickProducts(sProductName, 0);
        }
    });
    $("#btnProductPiker").click(function () {

        if(parseInt(_oConsumptionRequisition.StoreID)<=0)
        {
            $('#txtWorkingUnit').focus();
            $('#txtWorkingUnit').addClass("errorFieldBorder");
            alert('Please Select Store.');
            return false;
        }
        else{
            $('#txtWorkingUnit').removeClass("errorFieldBorder");
        }
        PickProducts("", 0);
    });
    $("#btnSuggProductPiker").click(function () {
        var nCRType = parseInt($('#cboCRType').val());
        if(nCRType===0 || nCRType===1)
        {
            alert('Please select Rawmaterial Requsition Type!');
            $('#cboCRType').focus();
            return;
        }

        var nStyleID = parseInt($('#txtRequisitionFor').data('RequisitionFor'));
        if(nStyleID<=0)
        {
            alert('Please select an Style!');
            $('#txtRequisitionFor').focus();
            return;
        }
        PickProducts("", nStyleID);
    });
    $('#txtProductName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtProductName").removeClass("fontColorOfPickItem");
            $('#txtProductName').data('Product', null);
        }
    });
    function PickProducts(sProductName, nStyleID)
    {
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var oLot = { BUID: sessionStorage.getItem("BUID"), ProductName: sProductName, ProductID : nStyleID,WorkingUnitID:parseInt(_oConsumptionRequisition.StoreID) };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oLot,
            ControllerName: "ConsumptionRequisition",
            ActionName: "SearchProducts",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            $("#progressbar").progressbar({ value: 0 });//hide
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = []; var oColumn = { field: "NameCode", title: "Product Name", width: 300, align: "left" }; tblColums.push(oColumn);
                                            oColumn = { field: "ProductCategoryName", title: "Category", width: 200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end product picker

    //start style picker
    $("#txtLot").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sLotNo = $.trim($('#txtLot').val());
            if(sLotNo === null || sLotNo === "")
            {
                alert("Press Enter With Lot Number!");
                $('#txtLot').focus();
                return;
            }
            PickLots(sLotNo, 0);
        }
    });
    $("#btnLotPicker").click(function () {
        PickLots("", 0);
    });
    $("#btnSuggLotPicker").click(function () {
        var nCRType = parseInt($('#cboCRType').val());
        if(nCRType===0 || nCRType===1)
        {
            alert('Please select Rawmaterial Requsition Type!');
            $('#cboCRType').focus();
            return;
        }

        var nStyleID = parseInt($('#txtRequisitionFor').data('RequisitionFor'));
        if(nStyleID<=0)
        {
            alert('Please select an Style!');
            $('#txtRequisitionFor').focus();
            return;
        }
        PickLots("", nStyleID);
    });
    $('#txtLot').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtLot").removeClass("fontColorOfPickItem");
            $('#txtLot').data('Lots', []);
        }
    });
    function PickLots(sLotNo, nStyleID)
    {
        var nBUID = parseInt(sessionStorage.getItem('BUID'));
        if(nBUID<=0)
        {
            alert('Invalid Business Unit!');
            return;
        }

        var oProduct = $('#txtProductName').data('Product');
        if(oProduct===null || parseInt(oProduct.ProductID)<=0)
        {
            alert('Please Select a Product!');
            $('#txtProductName').focus();
            return;
        }

        var nStoreID = parseInt(_oConsumptionRequisition.StoreID);
        if(nStoreID<=0)
        {
            alert('Please Select an Store!');
            $('#txtWorkingUnit').focus();
            return;
        }
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var oLot = { BUID : nBUID, ProductID : parseInt(oProduct.ProductID), WorkingUnitID : nStoreID, LotNo : sLotNo, StyleID : nStyleID };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oLot,
            ControllerName: "ConsumptionRequisition",
            ActionName: "SearchLots",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            $("#progressbar").progressbar({ value: 0 });//hide
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].LotID > 0) {
                    var tblColums = []; var oColumn = { field: "LotNo", title: "Lot No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "StyleNo", title: "Style No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ColorName", title: "Color Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "SizeName", title: "Size Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BalanceSt", title: "Stock Qty", width: 100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "WorkingUnitName", title: "Store", width: 150, align: "left" }; tblColums.push(oColumn);
                    var oClientOperationSetting =  $('#divConsumptionRequisition').data('ClientOperationSetting');
                    if(parseInt(oClientOperationSetting.Value)==1)//if Procurement  Apply
                    {
                        oColumn = { field: "MCDia", title: "MC Dia", width:70, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "FinishDia", title: "Finish Dia", width:70, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "GSM", title: "GSM", width:60, align: "left" };tblColums.push(oColumn);
                    }
                    var oPickerParam = {
                        winid: 'winLotPicker',
                        winclass: 'clsLotPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblLotPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'LotNo',
                        windowTittle: ('Lot List For : '+ oProduct.ProductName)
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end Lot picker
    $("#btnRefreshDetail").click(function (){
        endEditing();
    });


    $("#txtWorkingUnit").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var txtWorkingUnit=$.trim($("#txtWorkingUnit").val());
            if(txtWorkingUnit==""){ alert("Type Store name to search."); return false; }
            GetWorkingUnit(txtWorkingUnit);
        }
        else if(nkeyCode==8)
        {

            $("#txtWorkingUnit").removeClass("fontColorOfPickItem");
            _oConsumptionRequisition.StoreID = 0;
            RefreshDetailList([]);
        }
    });
    $("#btnPickWorkingUnit").click(function () {
        var txtWorkingUnit=$.trim($("#txtWorkingUnit").val());
        GetWorkingUnit(txtWorkingUnit);
    });
    function GetWorkingUnit(txtWorkingUnit)
    {
        var oWorkingUnits = $('#txtWorkingUnit').data('Stores');
        if(oWorkingUnits.length>0)
        {
            var tblColums = [];
            var oColumn = { field: "WorkingUnitCode", title: "Code", width: 80, align: "left" };tblColums.push(oColumn);
            oColumn = { field: "WorkingUnitName", title: "Name", width: 270, align: "left" };tblColums.push(oColumn);

            var oPickerParam = {
                winid: 'winWorkingUnitPicker',
                winclass:'clsWorkingUnitPicker',
                winwidth: 520,
                winheight: 460,
                tableid: 'tblWorkingUnit',
                tablecolumns: tblColums,
                datalist:oWorkingUnits,
                multiplereturn: false,
                searchingbyfieldName:'WorkingUnitName',
                windowTittle: 'Store List'
            };
            $.icsPicker(oPickerParam);
            IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
        }
        else
        {
            alert("Data Not Found.");
        }


    }


    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj)
    {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid == 'winConsumptionUnit')
        {
            if (oreturnObj != null && oreturnObj.ConsumptionUnitID > 0)
            {
                $('#txtRequisitionFor').val(oreturnObj.Name);
                $('#txtRequisitionFor').addClass('fontColorOfPickItem');
                $('#txtRequisitionFor').data('RequisitionFor', parseInt(oreturnObj.ConsumptionUnitID));
                $('#txtWorkingUnit').focus();
            }
        }else if (oPickerobj.winid == 'winSubLedger')
        {
            if (oreturnObj != null && parseInt(oreturnObj.ACCostCenterID)> 0)
            {
                $('#txtSubLedgerName').val(oreturnObj.Name);
                $('#txtSubLedgerName').addClass('fontColorOfPickItem');
                $('#txtSubLedgerName').data('SubLedgerID', parseInt(oreturnObj.ACCostCenterID));
            }
        }else if (oPickerobj.winid == 'winRefObj')
        {
            if (oreturnObj != null && parseInt(oreturnObj.RefObjID)> 0)
            {
                $('#txtRefObjNo').val(oreturnObj.RefObjNo);
                $('#txtRefObjNo').addClass('fontColorOfPickItem');
                $('#txtRefObjNo').data('RefObjID', parseInt(oreturnObj.RefObjID));
            }
        }
        else if (oPickerobj.winid=='winStylePicker')
        {
            if (oreturnObj != null && oreturnObj.TechnicalSheetID > 0)
            {
                $('#txtRequisitionFor').val(oreturnObj.StyleNo);
                $('#txtRequisitionFor').addClass('fontColorOfPickItem');
                $('#txtRequisitionFor').data('RequisitionFor', parseInt(oreturnObj.TechnicalSheetID));
                $('#txtWorkingUnit').focus();
            }
        }
        else if (oPickerobj.winid == 'winProductPicker')
        {
            if (oreturnObj != null && oreturnObj.ProductID > 0)
            {
                $('#txtProductName').val(oreturnObj.ProductName);
                $('#txtProductName').addClass('fontColorOfPickItem');
                $('#txtProductName').data('Product', oreturnObj);
                GetMeasurementUnitByType(oreturnObj.UnitTypeInInt);
                $('#txtLot').focus();
            }
        }
        else if (oPickerobj.winid=='winLotPicker')
        {
            if (oreturnobjs != null && oreturnobjs.length > 0)
            {
                $('#txtLot').val(oreturnobjs.length+" Item(s) Selected");
                $('#txtLot').addClass('fontColorOfPickItem');
                $('#txtLot').data('Lots', oreturnobjs);
                $('#txtQty').focus();

                var oProduct = $('#txtProductName').data('Product');
                if(oProduct.ProductID<=0 || oProduct.ProductID==null)
                {
                    $('#txtProductName').focus();
                    $('#txtProductName').addClass("errorFieldBorder");
                    alert("Product not Found.");
                    return;
                }      

                for (i=0; i<oreturnobjs.length;i++)
                {

                    var nQty = parseFloat(oreturnobjs[i].Balance);
                    if(sessionStorage.getItem('BaseAddress')== "/amg")
                    {
                        nQty = 0;
                    }
                    var oConsumptionRequisitionDetail= {
                        ConsumptionRequisitionDetailID : 0,
                        ConsumptionRequisitionID : (_oConsumptionRequisition!=null &&  parseInt(_oConsumptionRequisition.ConsumptionRequisitionID)>0)? _oConsumptionRequisition.ConsumptionRequisitionID:0,
                        ProductID  : parseInt(oreturnobjs[i].ProductID),
                        LotID : parseInt(oreturnobjs[i].LotID),
                        UnitID : parseInt(oreturnobjs[i].MUnitID),
                        Quantity : nQty,
                        UnitPrice : parseFloat(oreturnobjs[i].UnitPrice),
                        ProductCode : oProduct.ProductCode,
                        ProductName : oProduct.ProductName,
                        ProductGroupName:oProduct.GroupName,
                        LotNo : oreturnobjs[i].LotNo,
                        Balance : parseFloat(oreturnobjs[i].Balance),
                        LotUnitPrice : parseFloat(oreturnobjs[i].UnitPrice),
                        LotUnitID : parseInt(oreturnobjs[i].MUnitID),
                        StyleID : parseInt(oreturnobjs[i].StyleID),
                        ColorID : parseInt(oreturnobjs[i].ColorID),
                        SizeID : parseInt(oreturnobjs[i].SizeID),
                        StyleNo : oreturnobjs[i].StyleNo,
                        BuyerName : oreturnobjs[i].BuyerName,
                        ColorName : oreturnobjs[i].ColorName,
                        SizeName : oreturnobjs[i].SizeName,
                        UnitName : oreturnobjs[i].MUName, // $("#cboUnit option:selected").text(),
                        Symbol :  oreturnobjs[i].MUName, // $("#cboUnit option:selected").text(),
                        Amount : (parseFloat(nQty) * parseFloat(oreturnobjs[i].UnitPrice))// (parseFloat(parseFloat(icsRemoveComma($('#txtQty').val()))) * parseFloat(oreturnobjs[i].UnitPrice))
                    };
                    $('#tblConsumptionRequisitionDetail').datagrid('appendRow',oConsumptionRequisitionDetail);
                }
                endEditing();
                SetTotal();
                ResetDetail();


            }
        }else if (oPickerobj.winid == 'winWorkingUnitPicker')
        {
            debugger;
            if (oreturnObj != null && parseInt(oreturnObj.WorkingUnitID)> 0)
            {
                $('#txtWorkingUnit').val(oreturnObj.WorkingUnitName);
                $("#txtWorkingUnit").addClass("fontColorOfPickItem");
                _oConsumptionRequisition.StoreID = oreturnObj.WorkingUnitID;
            }
        }
    }

    function GetMeasurementUnitByType(nUnitTypeInt)
    {
        var oMeasurementUnit={
            UnitTypeInInt : nUnitTypeInt
        };
        $.ajax ({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/MeasurementUnit/GetbyUnitType",
            data:  JSON.stringify(oMeasurementUnit),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //
                var  oUnits = jQuery.parseJSON(data);
                if (oUnits!=null)
                {
                    if(oUnits.length>0)
                    {
                        $("#cboUnit").icsLoadCombo({List: oUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function ValidateInputDetail()
    {
        var oProduct = $('#txtProductName').data('Product');
        if(oProduct===null || parseInt(oProduct.ProductID)<=0)
        {
            $('#txtProductName').focus();
            alert('Please select product!');
            return false;
        }


        var oLots = $('#txtLot').data('Lots');
        if(oLots===null || parseInt(oLots.length)<=0)
        {
            $('#txtLot').focus();
            alert('Please select Lot!');
            return false;
        }

        var nQty = parseFloat(icsRemoveComma($('#txtQty').val()));
        if(nQty<=0)
        {
            $('#txtQty').focus();
            alert('Qty Should be Greater than 0');
            return false;
        }

        if(parseInt(oLots.length)===1)
        {
            var nBalanceQty = (parseFloat(oLots[0].Balance) - parseFloat(nQty));
            if(nBalanceQty<0)
            {
                nBalanceQty = (nBalanceQty * (-1))
                if(nBalanceQty>0.5)
                {
                    $('#txtQty').focus();
                    alert('Qty Should be smaller than lot Balance Qty!');
                    return false;
                }    
            }
            
        }

        var oConsumptionRequisitionDetails = $('#tblConsumptionRequisitionDetail').datagrid('getRows');
        for(var i = 0; i<oLots.length; i++)
        {
            if(ICS_IsExist(oConsumptionRequisitionDetails, 'LotID', parseInt(oLots[i].LotID)))
            {
                $('#txtLot').focus();
                alert('Selected lot already exists!');
                return false;
            }
        }
        return true;
    }

    function ResetDetail(){
        $('#txtProductName').data('Product', null);
        $('#txtLots').data('Lot', []);
        $('#txtQty').val('');

        $('#txtProductName,#txtLot').removeClass("fontColorOfPickItem");
        $('#txtProductName,#txtLot').val("");
        $('#txtProductName,#btnProductPiker,#txtLot,#btnLotPicker').prop("disabled", false);

        $('#txtProductName').focus();
    }

    function SetTotal()
    {
        var nTotalValue = 0;
        var nTotalQty = 0;
        var oConsumptionRequisitionDetails = $('#tblConsumptionRequisitionDetail').datagrid('getRows');
        for(var i = 0;i<oConsumptionRequisitionDetails.length;i++)
        {
            nTotalValue = nTotalValue + parseFloat(oConsumptionRequisitionDetails[i].Amount);
            nTotalQty = nTotalQty + parseFloat(oConsumptionRequisitionDetails[i].Quantity);
        }
        $("#lblTotalQty").html(nTotalQty);
        $("#lblTotalAmount").html(formatPrice4digit(nTotalValue,0));
    }

    $("#btnAddDetail").click(function () {
        debugger;
        if(!ValidateInputDetail())return;
        var oProduct = $('#txtProductName').data('Product');
        var oLots = $('#txtLot').data('Lots');
        for(var i = 0;i<oLots.length;i++)
        {

            var oConsumptionRequisitionDetail= {
                ConsumptionRequisitionDetailID : 0,
                ConsumptionRequisitionID : parseInt(_oConsumptionRequisition.ConsumptionRequisitionID),
                ProductID  : parseInt(oProduct.ProductID),
                LotID : parseInt(oLots[i].LotID),
                UnitID : parseInt(oLots[i].MUnitID), //parseInt($('#cboUnit').val()),
                Quantity : icsRemoveComma($('#txtQty').val()),
                UnitPrice : parseFloat(oLots[i].UnitPrice),
                ProductCode : oProduct.ProductCode,
                ProductName : oProduct.ProductName,
                ProductGroupName:oProduct.GroupName,
                LotNo : oLots[i].LotNo,
                Balance : parseFloat(oLots[i].Balance),
                LotUnitPrice : parseFloat(oLots[i].UnitPrice),
                LotUnitID : parseInt(oLots[i].MUnitID),
                StyleID : parseInt(oLots[i].StyleID),
                ColorID : parseInt(oLots[i].ColorID),
                SizeID : parseInt(oLots[i].SizeID),
                StyleNo : oLots[i].StyleNo,
                BuyerName : oLots[i].BuyerName,
                ColorName : oLots[i].ColorName,
                SizeName : oLots[i].SizeName,
                UnitName : oLots[i].MUName, // $("#cboUnit option:selected").text(),
                Symbol :  oLots[i].MUName, // $("#cboUnit option:selected").text(),
                Amount : (parseFloat(parseFloat(icsRemoveComma($('#txtQty').val()))) * parseFloat(oLots[i].UnitPrice))
            };
            $('#tblConsumptionRequisitionDetail').datagrid('appendRow',oConsumptionRequisitionDetail);
        }
        SetTotal();
        ResetDetail();
    });

    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    $("#btnRemoveDetail").click(function () {

        var oConsumptionRequisitionDetail = $("#tblConsumptionRequisitionDetail").datagrid("getSelected");
        if (oConsumptionRequisitionDetail == null || parseInt(oConsumptionRequisitionDetail.ProductID) <= 0) { alert("Please select an item from list!"); return false; }
        if (!confirm("Confirm to Delete?")) return false;
        var SelectedRowIndex=$('#tblConsumptionRequisitionDetail').datagrid('getRowIndex',oConsumptionRequisitionDetail);
        alert("Data Delete Successfully.");
        $('#tblConsumptionRequisitionDetail').datagrid('deleteRow',SelectedRowIndex);
        SetTotal();
    });

    var editIndex = undefined;
    function endEditing(){
        if (editIndex == undefined){return true}
        if ($('#tblConsumptionRequisitionDetail').datagrid('validateRow', editIndex)){
            $('#tblConsumptionRequisitionDetail').datagrid('endEdit', editIndex);
            $('#tblConsumptionRequisitionDetail').datagrid('selectRow',editIndex);
            var oCRDetail=$('#tblConsumptionRequisitionDetail').datagrid('getSelected');
            if(oCRDetail!=null)
            {
                oCRDetail.Amount = parseFloat((parseFloat(oCRDetail.Quantity)) *parseFloat(oCRDetail.UnitPrice));
                $('#tblConsumptionRequisitionDetail').datagrid('updateRow',{index: editIndex,	row: oCRDetail});
            }
            SetTotal();
            editIndex = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRow(index){
        if (editIndex != index){
            if (endEditing())
            {
                $('#tblConsumptionRequisitionDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else
            {
                $('#tblConsumptionRequisitionDetail').datagrid('selectRow', editIndex);
            }
        }
    }

    $('#txtQty').tooltip({
        position: 'bottom',
        content: '<span style="color:#fff">Type Qty.</span>',
        onShow: function(){$(this).tooltip('tip').css({backgroundColor: '#666',borderColor: '#666'});}
    });


    $('#cboRefType').change(function(){
        $('#txtRefObjNo').val("");
        $('#txtRefObjNo').data('RefObjID', 0);
    });

    
    $("#txtRefObjNo").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            PickRefObj();
        }else if (code == 8) //backspace=8
        {
            $('#txtRefObjNo').removeClass('fontColorOfPickItem');
            $('#txtRefObjNo').data('RefObjID', 0);
        }
    });

    function PickRefObj()
    {
        if(parseInt($('#cboRefType').val()) == 0) {
            alert("Please select a ref type.");
            return false;
        }
        if($('#txtRefObjNo').val() == "") {
            alert("Please enter a value.");
            return false;
        }
        var oRefObj = { 
            RefObjNo:$.trim($('#txtRefObjNo').val()),
            RefTypeInt:parseInt($('#cboRefType').val())
        };

        debugger;
        
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oRefObj,
            ControllerName: "ConsumptionRequisition",
            ActionName: "GetRefObjs",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0)
            {
                if (response.objs[0].RefObjID > 0)
                {
                    if(parseInt($('#cboRefType').val()) == 1)
                    {
                        var tblColums = []; var oColumn = { field: "SCNoFull", title: "PONo", width:100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "SCDateSt", title: "PODate", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "BuyerName", title: "BuyerName", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "OrderName", title: "OrderName", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Qty", title: "Qty", width: 60, align: "left" }; tblColums.push(oColumn);
                    }
                    else if(parseInt($('#cboRefType').val()) == 2) {
                        var tblColums = []; var oColumn = { field: "ExeNoFull", title: "DispoNo", width:100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "SCNoFull", title: "PONo", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "SCDateSt", title: "PODate", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "BuyerName", title: "BuyerName", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ColorInfo", title: "Color", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Construction", title: "Construction", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Composition", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "FabricNo", title: "MKTRef", width: 100, align: "left" }; tblColums.push(oColumn);
                    }
                    var oPickerParam = {
                        winid: 'winRefObj',
                        winclass: 'clsRefObj',
                        winwidth: 400,
                        winheight: 460,
                        tableid: 'tblRefObjs',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'RefObjNo',
                        windowTittle: 'RefObj List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }

    function RefreshControlLayout(oAuthorizationRolesMapping)
    {
        debugger;
       
        $("#tblConsumptionRequisitionDetail").datagrid("hideColumn", "Amount");
        $("#tblConsumptionRequisitionDetail").datagrid("hideColumn", "UnitPrice");
        $("#tdAmount").hide();
        
        if(oAuthorizationRolesMapping!=null && oAuthorizationRolesMapping.length>0)
            {
                if (PermissionChecker('RateView', 'ConsumptionRequisition',oAuthorizationRolesMapping))
                {
                    $("#tblConsumptionRequisitionDetail").datagrid("showColumn", "Amount");
                    $("#tblConsumptionRequisitionDetail").datagrid("showColumn", "UnitPrice");
                    $("#tdAmount").show();
                }
            }
        
    }

</script>