<html>
@{ViewBag.Title = "Transfer(Avilable to Ready Stock)";}

<body>
    @model ESimSol.BusinessObjects.PTUUnit2
    <div class="menuMainCollectionTable" id="divPTUReceive">
        <div class="easyui-panel" title="Transfer(Avilable to Ready Stock)" style="font-family:Tahoma; text-align:center; height:89%;">
            <fieldset style="height:40%; text-align:center;">
                <legend style="font-weight:bold;">Receive To : </legend>
                <table border="0" cellspacing="1" cellpadding="1" style="font-size:11px; font-weight:bold; text-align:center; width:100%">
                    <tr>
                        <td style="width:20%; text-align:right">
                            PI NO :
                        </td>
                        <td style="width:30%">
                            @Html.TextBoxFor(model => model.ExportPINo, new { style = "width:100%;", id = "txtRcvtExportPINo", disabled = "disabled" })
                        </td>
                        <td style="width:20%; text-align:right">
                            PI Date :
                        </td>
                        <td style="width:30%">
                            @Html.TextBoxFor(model => model.PIDateInString, new { style = "width:100%;", id = "txtRcvtPIDateInString", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:20%; text-align:right">
                            Party :
                        </td>
                        <td style="width:80%" colspan="3">
                            @Html.TextBoxFor(model => model.ContractorName, new { style = "width:100%;", id = "txtRcvtContractorName", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:20%; text-align:right">
                            Product :
                        </td>
                        <td style="width:30%">
                            @Html.TextBoxFor(model => model.ProductName, new { style = "width:100%;", id = "txtRcvtProductName", disabled = "disabled" })
                        </td>
                        <td style="width:20%; text-align:right">
                            Color :
                        </td>
                        <td style="width:30%">
                            @Html.TextBoxFor(model => model.ColorName, new { style = "width:100%;", id = "txtRcvtColorName", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:20%; text-align:right">
                            Stock In Hand :
                        </td>
                        <td style="width:30%">
                            @Html.TextBoxFor(model => model.ReadyStockQty, new { style = "width:100%;text-align:right;", id = "txtReadyStockQty", disabled = "disabled" })
                        </td>
                        <td style="width:20%; text-align:right">
                            Avilable Stock :
                        </td>
                        <td style="width:30%">
                            @Html.TextBoxFor(model => model.AvialableStockQty, new { style = "width:100%;text-align:right;", id = "txtAvialableStockQty", disabled = "disabled" })
                        </td>
                    </tr>
                </table>
            </fieldset>
            <fieldset style="height:40%; text-align:center;">
                <legend style="font-weight:bold;">Receive From : </legend>
                <table border="0" cellspacing="1" cellpadding="1" style="font-size:11px; font-weight:bold; text-align:center; width:100%">
                    <tr>
                        <td style="width:20%; text-align:right">
                            Lot No:
                        </td>
                        <td style="width:40%">
                            <input type="text" id="txtLotNo" placeholder="Type Lot No" style="width:88%" /> <input type="button" id="btnPickLot" value="Pick" style="width:35px;" />
                        </td>
                        <td style="width:15%; text-align:right">
                            Store :
                        </td>
                        <td style="width:25%">
                            <select id="cboStores" style="width:100%"></select>
                        </td>
                    </tr>
                    
                    <tr>
                        <td style="width:20%; text-align:right">
                            Product :
                        </td>
                        <td style="width:40%">
                            <input type="text" id="txtProductName" style="width:100%" disabled />
                        </td>
                        <td style="width:15%; text-align:right">
                            Color :
                        </td>
                        <td style="width:25%">
                            <input type="text" id="txtColorName" style="width:100%" disabled />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:20%; text-align:right">
                            Lot Qty:
                        </td>
                        <td style="width:40%">
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td style="width:80%"><input type="text" id="txtLotQty" style="width:98%;text-align:right;" disabled /></td>
                                    <td style="width:20%"><input type="text" id="txtMUSymbol" style="width:100%;" disabled /></td>
                                </tr>
                            </table>
                        </td>
                        <td style="width:15%; text-align:right;">Transfer Qty:</td>
                        <td style="width:25%">
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td style="width:82%"><input type="text" id="txtTransferQty" style="width:100%;text-align:right;" /></td>
                                    <td style="width:18%">@Html.TextBoxFor(model => model.UnitSymbol, new { style = "width:100%;text-align:left;", id = "txtUnitSymbolPTU", disabled = "disabled" })</td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold; width:100%;">
                <tr>
                    <td style="width:100%;text-align:right">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Commit</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>


<script type="text/javascript">

    var _sBaseAddress="";
    var _sPTUUnit2Header = "";
    var _lBackLink = "";
    $(document).ready(function () {
        //debugger;
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oPTUUnit2 =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oStores = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Stores));
        debugger;
        $('#divPTUReceive').data('PTUUnit2',oPTUUnit2);
        $('#divPTUReceive').data('Lot',"");
        $('#txtLotQty,#txtTransferQty').icsCurrencyBox();
        $('#divPTUReceive').data('PTUUnit2Distributions',"");
        $("#cboStores").icsLoadCombo({List: oStores,OptionValue: "WorkingUnitID",DisplayText:"WorkingUnitName"});
    });


    $("#txtLotNo").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtLotNo').val())==null || $.trim($('#txtLotNo').val())=="")
            {
                alert("Please Type lot No and Press Enter");
                return;
            }
            GetLots($.trim($('#txtLotNo').val()));
        }else if(code==8)
        {
            $('#txtLotNo').val('');

        }
    });
    $("#btnPickLot").click(function ()
    {
        debugger;
        GetLots($.trim($('#txtLotNo').val()));
    });
    function GetLots(sLotNo)
    {
        debugger;
        var oTempPTUUnit2 = $('#divPTUReceive').data('PTUUnit2');
        var oLot = {LotNo:sLotNo, BUID:oTempPTUUnit2.BUID,ProductID:oTempPTUUnit2.ProductID,ColorID:oTempPTUUnit2.ColorID,UnitTypeInInt:4};//unit type :4 means avialbale
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLot,
            ControllerName: "Lot",
            ActionName: "GetsLotForAvilableStock",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].LotID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "LotNo", title: "Lot No", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Product", width:150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "WorkingUnitName", title: "Store", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Balance", title: "Balance", width:150,formatter:formatPriceWithZeroDecimal, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winLot',
                        winclass: 'clsLot',
                        winwidth: 670,
                        winheight: 460,
                        tableid: 'tblLots',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'LotNo',
                        windowTittle: 'Lot List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }
    function SetPickerValueAssign(oPickerobj) {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winLot')
        {
            if (oreturnObj != null && parseInt(oreturnObj.LotID)> 0)
            {
                debugger;
                $('#txtLotNo').val(oreturnObj.LotNo);
                $('#txtProductName').val(oreturnObj.ProductName);
                $('#txtColorName').val(oreturnObj.ColorName);
                $('#txtLotQty').val(parseFloat(oreturnObj.Balance).toFixed(2));
                $('#txtMUSymbol').val(oreturnObj.MUName);
                $('#divPTUReceive').data('Lot',oreturnObj);
            }
        }
    }



    function ValidateInput()
    {
        if(parseInt($('#divPTUReceive').data('PTUUnit2').PTUUnit2ID)<=0)
        {
            alert("Sorry there is no PTU.");
            return false;
        }
        if(parseInt($('#cboStores').val())<=0)
        {
            alert("Please Select Store.");
            return false;
        }
        if(parseInt($("#txtLotQty").val())<=0)
        {
            alert("Lot Qty Should be Greater than 0");
            $('#txtLotQty').focus();
            return false;
        }

        if(parseInt($("#txtTransferQty").val())<=0)
        {
            alert("Qty Should be Greater than 0");
            $('#txtTransferQty').focus();
            return false;
        }
        if(parseInt($('#divPTUReceive').data('PTUUnit2').UnitID)==parseInt($('#divPTUReceive').data('Lot').MUnitID))
        {
            if(parseInt($("#txtLotQty").val())<parseInt($("#txtTransferQty").val()))
            {
                alert("Transer Qty Should be Less than or Equal Lot Qty");
                $('#txtTransferQty').focus();
                return false;
            }
        }else{

            var nTempTransferQty = parseInt($("#txtTransferQty").val());
            nTempTransferQty = nTempTransferQty * parseInt($('#divPTUReceive').data('PTUUnit2').ConvertionValue);
            if(parseInt($("#txtLotQty").val())<parseInt(nTempTransferQty))
            {
                alert("Transer Qty Should be Less than or Equal Lot Qty");
                $('#txtTransferQty').focus();
                return false;
            }

        }

        return true;
    }


    function RefreshObject()
    {
        // debugger;
        var oPTUUnit2Distribution= {
            LotID:$('#divPTUReceive').data('Lot').LotID,
            PTUUnit2ID : $('#divPTUReceive').data('PTUUnit2').PTUUnit2ID,
            WorkingUnitID:$('#cboStores').val(),
            Qty : $("#txtTransferQty").val()
        };
        return oPTUUnit2Distribution;
    }

    function Save()
    {
        //debugger;
        if(!ValidateInput()) return;
        var oPTUUnit2Distribution=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/PTUUnit2/ReceiveInReadyeStock",
            traditional: true,
            data:  JSON.stringify(oPTUUnit2Distribution),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oPTUUnit2Distribution = jQuery.parseJSON(data);
                if (oPTUUnit2Distribution.ErrorMessage == null || oPTUUnit2Distribution.ErrorMessage == "")
                {
                    debugger;
                    alert("Sucessfully Received");
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oPTUUnit2Distribution.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function Close()
    {
        window.location.href = sessionStorage.getItem("BackLink");
    }

    $(document).keydown(function(e) {
        //debugger;
        if(e.which == 27)//escape=27
        {
            //debugger;
            window.location.href = _lBackLink;
        }
    });
</script>