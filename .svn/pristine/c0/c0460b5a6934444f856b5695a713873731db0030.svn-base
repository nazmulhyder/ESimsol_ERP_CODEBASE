@{ViewBag.Title = "Production Execution Plan";}
<html>
<body onfocus="parent_disable();" onclick="parent_disable()">
    @model ESimSol.BusinessObjects.ProductionExecutionPlan

    <div id="winOrderRecap" class="easyui-window" title="Order Recap Search" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <table id="tblPickerOrderRecaps" title="" class="easyui-datagrid" style="width:500px; height: 300px" fit="true" fitcolumns="false" rownumbers="true" singleselect="true" autorowheight="false" toolbar="#OrderRecapToolbar">
                <thead>
                    <tr>
                        <th field="OrderRecapNo" width="150" align="left">Order Recap No</th>
                        <th field="StyleNo" width="150" align="left">Style No</th>
                        <th field="BuyerName" width="150" align="left">Buyer Name</th>
                        <th field="ShipmentDateInString" width="150" align="left">Shipment Date</th>
                        <th field="TotalQuantityInString" width="150" align="right">Qty</th>
                        <th field="ProductName" width="150" align="left">Product</th>
                    </tr>
                </thead>
            </table>
            <div id="OrderRecapToolbar">
                <input type="text" id="txtSearchStyleNo" style="width:120px" placeholder="Type Style No & Press Enter" /><a id="btnPickerStyle" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="StylePiker()">Pick</a>
                <input type="text" id="txtSearchBuyerName" style="width:120px" placeholder="Type Buyer & Press Enter" />
                <a id="btnPickerBuyer" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="BuyerPicker()">Pick</a>
                @Html.DropDownList("cboShipmentDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboShipmentDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeA" })
                <input id="txtStartShipementDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100px" />To
                <input id="txtEndShipementDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100px" />
                <a id="btnPickerRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Refresh</a>
            </div>
            <fieldset style="margin-bottom:3px">
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; width:950px">
                    <tr>
                        <td style="width:850px; text-align:left"></td>
                        <td style="width:50px">
                            <a id="btnPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winProductionExecutionPlanDetail" class="easyui-window" title="Add Production Execution Plan Detail" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div style="margin-left:2px;">
                <table id="tblBreakDown" title="Detail Break Down List" class="easyui-datagrid" style="width:840px; height:380px" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbardetail">
                    <thead>
                        <tr>
                            <th field="WorkingDateInString" width="170">Date</th>
                            <th align="right" field="DailyProduction" width="100">Daily Production</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbardetail">
                    <table border="0" cellpadding="2" cellspacing="2" style="font-size:12px;">
                        <tr>
                            <td style="text-align:left; width:360px;">
                                PU Line:<select id="cboPLineConfigure" style="width:280px"></select>
                            </td>
                            <td style="width:200px; text-align:center; font-weight:bolder">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Qty: &nbsp;<input type="text" id="txtTotalOrderQty" style="width:80px; text-align:center; font-weight:bolder; padding-left:5px" disabled="disabled" /></td>
                            <td style="text-align:left; width:150px;font-weight:bolder">
                                M. Qty:<input type="text" id="txtMachineQty" style=" width:70px; text-align:right;" />
                            </td>
                            <td style="width:200px; text-align:center; font-weight:bolder">
                                P/H:<input type="text" id="txtPPHQty" style=" width:105px; text-align:right;" />
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align:left; width:560px;" colspan="2">
                                Start Date:<input id="txtStartDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:110px" />
                                &nbsp;End Date: <input id="txtEndDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:110px" />
                                &nbsp;Target Qty: <input type="text" id="txtTargetQty" style=" width:58px; text-align:right;" disabled />
                            </td>
                            <td style="width:150px; text-align:center;font-weight:bolder">
                                R/T:<input type="text" id="txtRegularTime" style=" width:70px; text-align:right;" />
                            </td>
                            <td style=" text-align:center; width:200px;font-weight:bolder">
                                O/T:<input type="text" id="txtOverTime" style=" width:50px; text-align:right;" />
                                <a id="btnDeatillAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"></a>
                                <a id="btnDetailRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true"></a>
                            </td>
                        </tr>
                    </table>
                </div>
                <table style=" font-size:12px;">
                    <tr>
                        <td style=" width:260px;text-align:right">Total:</td>
                        <td style=" width:570px;text-align:right"><label id="lblTotalProduction">0</label> </td>
                    </tr>
                </table>
            </div>
            <fieldset style="font-size:11px;width:820px; font-weight:bold">
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px;width:820px; font-weight:bold">
                    <tr>

                        <td style="width:100px; text-align:left">
                            <a id="btnDateAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Extra Date</a>
                        </td>
                        <td style="width:600px; text-align:right"></td>
                        <td style="width:50px">
                            <a id="btnDetailSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDetailClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div class=" easyui-panel menuMainCollectionTable" style="height:100%">
        <div class="easyui-panel" title="Production Execution Plan" style="width:100%;height:90%;">
            <div style="padding:5px 0 5px 5px;">
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                    <tr>
                        <td style="width:850px; text-align:right;">
                            <table border="0" cellpadding="1" cellspacing="1" style="font-size:11px; font-weight:bold">
                                <tr style="height:28px">
                                    <td style="width:120px; text-align:right">Ref No :</td>
                                    <td style="width:280px">@Html.TextBoxFor(model => model.RefNo, new { style = "width: 280px;", id = "txtRefNo", disabled = "disabled" })</td>
                                    <td style="width:120px; text-align:right">Plan Date :</td>
                                    <td style="width:230px"><input id="txtPlanDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:230px" /></td>
                                </tr>
                                <tr style="height:28px">
                                    <td style="width:120px; text-align:right"><input type="button" value="Pick Order" id="btnOrderRecap" /> </td>
                                    <td style="width:280px">@Html.TextBoxFor(model => model.RecapNo, new { style = "width: 280px;", id = "txtRecapNo", placeHolder = "Type Recap No & Press Enter" })</td>
                                    <td style="width:120px; text-align:right">Product Name :</td>
                                    <td style="width:230px">@Html.TextBoxFor(model => model.ProductName, new { style = "width: 230px;", id = "txtProductName", disabled = "disabled" })</td>
                                </tr>
                                <tr style="height:28px">
                                    <td style="width:120px; text-align:right">Buyer Name :</td>
                                    <td style="width:280px">@Html.TextBoxFor(model => model.BuyerName, new { style = "width: 280px;", id = "txtBuyerName", disabled = "disabled" })</td>

                                    <td style="width:120px; text-align:right">Style No:</td>
                                    <td style="width:230px">@Html.TextBoxFor(model => model.StyleNo, new { style = "width: 230px;", id = "txtStyleNo", disabled = "disabled" })</td>
                                </tr>
                                <tr style="height:28px">
                                    <td style="width:120px; text-align:right">Order Qty:</td>
                                    <td style="width:280px">
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td style="width:50%">@Html.TextBoxFor(model => model.RecapQty, new { style = "width: 100%;", id = "txtRecapQty", disabled = "disabled" })</td>
                                            <td style="width:20%">SMV :</td>
                                            <td style="width:30%">@Html.TextBoxFor(model => model.SMV, new { style = "width: 100%;", id = "txtSMV"})</td>
                                        </tr>
                                    </table>
                                    
                                    <td style="width:120px; text-align:right">Merchandiser:</td>
                                    <td style="width:230px">@Html.TextBoxFor(model => model.MerchandiserName, new { style = "width: 230px;", id = "txtMerchandiserName", disabled = "disabled" })</td>
                                </tr>
                                <tr style="height:28px">
                                    <td style="width:120px; font-size:12px; font-weight:bold;text-align:right">Note:</td>
                                    <td style="width:630px" colspan="3">@Html.TextBoxFor(model => model.Note, new { style = "width: 100%;", id = "txtNote" })</td>
                                </tr>
                            </table>
                        </td>
                        <td style="width:160px; vertical-align:middle">
                            <table border="1" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td style="vertical-align:middle;width:150px; height:160px;text-align:center;"><img id="imgCoverImage" src="@Url.Action("GetLargeImage", "TechnicalSheet", new { id = Model.TechnicalSheetID })" alt="Photo" style="width:150px; height:160px;" /></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </div>
            <table id="tblProductionExecutionPlanDetail" title="Production Execution Plan Detail(s):" class="easyui-datagrid" style="width:100%;height:260px" singleselect="true" toolbar="#toolbar">
                <thead>
                    <tr>
                        <th field="PUShortName" width="90" align="left">PU Name</th>
                        <th field="LineNo" width="90" align="left">Line No</th>
                        <th field="StartDateInString" width="90" align="left">Start Date</th>
                        <th field="EndDateInString" width="90" align="left">End Date</th>
                        <th field="WorkingDays" width="100" align="right">Working Days</th>
                        <th field="MachineQty" formatter="formatPrice" width="100" align="right">Mechine Qty</th>
                        <th field="ProductionPerHour" formatter="formatPrice" width="100" align="right">Production Per Hour</th>
                        <th field="AvgDailyProduction" formatter="formatPrice" width="180" align="right">Avg.Daily Production</th>
                        <th field="TotalProduction" formatter="formatPrice" width="90" align="right">Total</th>
                    </tr>
                </thead>
            </table>

            <table style=" font-size:12px;" border="0" cellpadding="0" cellspacing="0">
                <tr>
                    <td style=" width:550px; text-align:right;">Total:</td>
                    <td style=" width:350px; text-align:right;"><label id="lbltotalQty">0</label></td>
                </tr>
            </table>

            <div id="toolbar">
                <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="Add()">Add </a>
                <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="Edit()">Edit </a>
                <a id="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="Remove()">Remove </a>
                <a id="btnView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true" onclick="View()">View </a>
            </div>
        </div>
        <fieldset style=" font-family:Tahoma; height:10%; width:auto">
            <legend style="font-weight:bold; font-family:Tahoma"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;width:100%;">
                <tr>
                    <td style="width:85%; text-align:left"><a id="linkOrderSummary" style="cursor:pointer;">Order Summary</a></td>
                    <td style="width:15%">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>

<script type="text/javascript">

    var _oProductionExecutionPlan=null;
    var _sBaseAddress="";
    var _nTotalPlanExecutionQty =0;
    var _objName =null;
    var popupWindow;
    var _nTotalMachineQty = 0;
    var _nTotalCapcity = 0;
    var _aweekday = new Array(7);
    var _nTotalDailyProduction = 0;
    $(document).ready(function () {       
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oProductionExecutionPlan =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oPLineConfigures =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PLineConfigures));
        var oProductionTimeSetup =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ProductionTimeSetup));

        $('#winProductionExecutionPlanDetail').data('PLineConfigures', oPLineConfigures);
        $('#winProductionExecutionPlanDetail').data('ProductionTimeSetup', oProductionTimeSetup);

        _objName = sessionStorage.getItem("ProductionExecutionPlanHeader");
        $('#txtSMV').numberbox(null,null,1);
        $('#txtPlanDate').datebox('setValue', _oProductionExecutionPlan.PlanDateInString);
       
        if(_objName=="Edit Production Execution Plan" || _objName =="Accept Production Execution Plan")
        {
            ForEdit();
        }
        if(_objName=="View Production Execution Plan")
        {
            ForEdit();
            ForView();
        }
    });

    function ForEdit()
    {
        //_oProductionExecutionPlan.ODSDetailQty = parseFloat(_oProductionExecutionPlan.ODSDetailQty)+parseFloat(_oProductionExecutionPlan.TotalQty);
        RefreshStyleImage(_oProductionExecutionPlan.TechnicalSheetID);
        RefreshDetails(_oProductionExecutionPlan.ProductionExecutionPlanDetails);
        SetTotal();
    }
    function ForView()
    {

        document.getElementById('btnOrderRecap').disabled = true;
        document.getElementById('txtRecapNo').disabled = true;

        document.getElementById('txtNote').disabled = true;
        document.getElementById('btnAdd').style.display = 'none';
        document.getElementById('btnEdit').style.display = 'none';
        document.getElementById('btnRemove').style.display = 'none';
        document.getElementById('btnSave').style.display = 'none';


    }

    //DYNAMIC PICKER FUNCTIONS
    function DynamicPiker(pickerName,obj,pTblColums,pMultiReturn,pSearchField,pID)
    {
        debugger;
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0][pID] > 0) {
                    debugger;
                    var tblColums = pTblColums; 
                    var oPickerParam = {
                        winid: 'win'+pickerName,
                        winclass: 'cls'+pickerName,
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tbl'+pickerName,
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: pMultiReturn,
                        searchingbyfieldName: pSearchField,
                        windowTittle: pickerName+' List'
                    };
                    $.icsPicker(oPickerParam);
                    DynamicIntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("Data Not Found.");
                return;
            }
        });
    }
    function DynamicIntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            DynamicSetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                DynamicSetPickerValueAssign(oPickerobj);
            }
        });
    }
    function DynamicSetPickerValueAssign(oPickerobj)
    {
        $('#txtLocalYarnSupplierName').focus();
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winStyle') 
            {
                if (oreturnobjs != null && oreturnobjs.length> 0)
                {
                    debugger;
                    $('#txtSearchStyleNo').val(oreturnobjs.length+" Item's Selected");
                    $("#winOrderRecap").data("TechnicalSheetIDs",ICS_PropertyConcatation(oreturnobjs,'TechnicalSheetID'));
                }
            }
            if (oPickerobj.winid == 'winBuyer') 
            {
                if (oreturnobjs != null && oreturnobjs.length> 0)
                {
                    debugger;
                    $('#txtSearchBuyerName').val(oreturnobjs.length+" Item's Selected");
                    $("#winOrderRecap").data("BuyerIDs",ICS_PropertyConcatation(oreturnobjs,'ContractorID'));
                }
            }
        } 
        else 
        {
            oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winBuyerPiker') 
            {
                SetBuyer(oreturnObj);
            }else  if (oPickerobj.winid == 'winProductionUnitPiker') 
            {
                SetProductionUnit(oreturnObj);
            }
            else if (oPickerobj.winid == 'winOrderRecap') 
            {
                SetOrderRecap(oreturnObj);
            }
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }

    //ORDER PICKER
    $('#btnOrderRecap').click(function (e) {
        $("#winOrderRecap").data("TechnicalSheetIDs","");
        $("#winOrderRecap").data("BuyerIDs","");
        $('#txtSearchStyleNo,#txtBuyerName').val('');
        $('#txtStartShipementDate,#txtEndShipementDate').datebox('setValue', icsdateformat(new Date()));
        DynamicRefreshList([],'tblPickerOrderRecaps');
        $("#winOrderRecap").icsWindow('open', "Pick Order Recap");
    });

    $('#btnPickerRefresh').click(function(e){
        var cboShipmentDate = document.getElementById("cboShipmentDate");
        var nShipmentDate=cboShipmentDate.options[cboShipmentDate.selectedIndex].index;

        if($("#winOrderRecap").data("TechnicalSheetIDs")=="" && $("#winOrderRecap").data("BuyerIDs")=="" && parseInt(nShipmentDate)==0)
        {
            alert("Please Select  at Least One Searcing Criteria.");
            return;
        }
        var oOrderRecap = {BUID:sessionStorage.getItem('BUID'),ErrorMessage:$("#winOrderRecap").data("TechnicalSheetIDs")+'~'+$("#winOrderRecap").data("BuyerIDs")+'~'+parseInt(nShipmentDate)+'~'+$('#txtStartShipementDate').datebox('getValue')+'~'+$('#txtEndShipementDate').datebox('getValue')};
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/OrderRecap/GetOrderRecapsForPicker",
            traditional: true,
            data:  JSON.stringify(oOrderRecap),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oOrderRecaps = jQuery.parseJSON(data);
                if (oOrderRecaps.length >0 )
                {
                    DynamicRefreshList(oOrderRecaps,'tblPickerOrderRecaps');
                }
                else {
                    alert("Data Not Found");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });
    $('#btnPickerOk').click(function(e){
        var oOrderRecap = $('#tblPickerOrderRecaps').datagrid('getSelected');
        if(oOrderRecap==null||oOrderRecap.OrderRecapID<=0)
        {
            alert("Please Select a Item from List.");
            return;
        }
        $("#winOrderRecap").icsWindow('close');
        SetOrderRecap(oOrderRecap);
    });
    $('#btnPickerClose').click(function(e){
        $("#winOrderRecap").icsWindow('close');
    });

    $('#txtSearchStyleNo').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if(code==13)//enter
        {
            if($.trim($('#txtSearchStyleNo').val())==null || $.trim($('#txtSearchStyleNo').val())=="")
            {
                alert("Type Style No.");
                return;
            }
            StylePiker();
        }else if (code == 8) //backspace=8
        {
            $("#txtSearchStyleNo").val('');
            $("#txtSearchStyleNo").removeClass("fontColorOfPickItem");
            $('#txtSearchStyleNo').focus();
            $("#winOrderRecap").data("TechnicalSheetIDs","");

        }
    });  
    function StylePiker()
    {
        var oTechnicalSheet = { BUID:sessionStorage.getItem('BUID'),StyleNo:$.trim($('#txtStyleNo').val())};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oTechnicalSheet,
            ControllerName: "OrderRecap",
            ActionName: "StyleSearch",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].TechnicalSheetID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "StyleNo", title: "Style No", width:200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer", width:150, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winStyle',
                        winclass: 'clsStyle',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblStyle',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Style List'
                    };
                    $.icsPicker(oPickerParam);
                    DynamicIntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            } else{
                alert("Data Not Found.");
                return;
            }
        });
    }

    function BuyerPicker()
    {
        var oContractor = {
            Params: '2' + '~' + $.trim($('#txtBuyerName').val())+'~'+sessionStorage.getItem("BUID")
        };

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        debugger;
        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
        DynamicPiker('Buyer',obj,tblColums,true,'Name','ContractorID'); //pickerName(unique),obj,table,multiReturn,SearchingField
    }
    $("#txtBuyerName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            BuyerPicker();
        }
    });

    function PickOrderRecap(oTxtName)
    {
        debugger;
        var oTempName=""
        if (typeof oTxtName != 'undefined')
            oTempName=oTxtName;

        var oOrderRecap = {
            BuyerID: 0,
            OrderRecapNo:oTempName,
            bIsDependsOnShipment:true,
            BUID:parseInt(sessionStorage.getItem("BUID"))
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oOrderRecap,
            ControllerName: "OrderRecap",
            ActionName: "GetOrderRecapsByBU",
            IsWinClose: false
        };    

        var tblColums = []; 
        var oColumn = { field: "OrderRecapNo", title: "OrderRecap No", width: 180, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "StyleNo", title: "Style No", width: 160, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "BuyerName", title: "Buyer Name", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ShipmentDateInString", title: "Shipment Date", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "TotalQuantityInString", title: "Total Quantity", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ProductName", title: "Product Name", width: 100, align: "left" }; tblColums.push(oColumn);
  
        DynamicPiker('OrderRecap',obj,tblColums,false,'StyleNo','OrderRecapID'); //pickerName(unique),obj,table,multiReturn,SearchingField
    }
    function SetOrderRecap(oOrderRecap)
    {
        if(oOrderRecap!=null)
        {
            debugger;
            $("#txtRecapNo")[0].value = oOrderRecap.OrderRecapNo;
            $("#txtProductName")[0].value = oOrderRecap.ProductName;
            $("#txtBuyerName")[0].value = oOrderRecap.BuyerName;
            $("#txtMerchandiserName")[0].value = oOrderRecap.MerchandiserName;
            $("#txtRecapQty")[0].value = oOrderRecap.TotalQuantity;
            $("#txtStyleNo")[0].value = oOrderRecap.StyleNo;
            _oProductionExecutionPlan.OrderRecapID = oOrderRecap.OrderRecapID;
            _oProductionExecutionPlan.TechnicalSheetID =oOrderRecap.TechnicalSheetID;
            _oProductionExecutionPlan.RecapQty = oOrderRecap.TotalQuantity;
            _oProductionExecutionPlan.BuyerID = oOrderRecap.BuyerID;
            _oProductionExecutionPlan.ProductID =  oOrderRecap.ProductID;
            RefreshStyleImage(oOrderRecap.TechnicalSheetID);
        }
    }

    $('#txtRecapNo').keydown(function (e) {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            var txtOrderNo = document.getElementById('txtRecapNo').value;
            if(txtOrderNo!="")
            {
                PickOrderRecap(txtOrderNo);
                //var url =_sBaseAddress+ "/Contractor/ViewContractorSearch?sTemp="+txtBuyerName+"&pt=2&ts="+tsv;                 
            }
        }else  if (code == 8) //backspace=8   
        {
            //debugger;     
            var txtOrderNo=document.getElementById("txtRecapNo");   
            txtOrderNo.style.color="black";
            txtOrderNo.style.fontWeight="normal";
            _OrderRecapID=0;             
        } 
    });
   
    function child_open(url,oParameter)
    { 
        if(popupWindow && !popupWindow.closed)
            popupWindow.focus();
        else
            popupWindow =window.open(url,oParameter,"directories=no, status=no, menubar=no, scrollbars=yes, resizable=no,width=745px, height=600px,top=50,left=300");
    }
    function parent_disable() {
        if(popupWindow && !popupWindow.closed)
            popupWindow.focus();
    }
    function WinReturnPORSearch(oGUProductionOrder)
    {
        
    }

    function Add()    
    {
        if(parseInt(_oProductionExecutionPlan.OrderRecapID)<=0)
        {
            alert("Please Pick Productoin Order");
            return;
        }        
        
        $("#txtMachineQty,#txtPPHQty,#txtOverTime,#txtRegularTime").icsNumberField({ min: 0,precision: 2});
        $("#txtTargetQty").icsNumberField({ min: 0,precision:0});   
        $('#txtStartDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtEndDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtTotalOrderQty').val(_oProductionExecutionPlan.RecapQty);
        $("#txtTargetQty").val(Math.ceil(parseFloat(_oProductionExecutionPlan.RecapQty)*0.05+parseFloat(_oProductionExecutionPlan.RecapQty)));
        SetDay();
        CalculateEndDate();
        var oPLineConfigures = $('#winProductionExecutionPlanDetail').data('PLineConfigures');
        var oProductionTimeSetup = $('#winProductionExecutionPlanDetail').data('ProductionTimeSetup');
        if(oProductionTimeSetup!=null)
        {
            $('#txtRegularTime').val(oProductionTimeSetup.RegularTime);
            $('#txtOverTime').val(oProductionTimeSetup.OverTime);
        }
        $("#cboPLineConfigure").icsLoadCombo({ List: oPLineConfigures, OptionValue: "PLineConfigureID", DisplayText: "PULineNo" });
        var oProductionExecutionPlanDetail = {ProductionExecutionPlanDetailID :0, ProductionExecutionPlanDetailID : 0, PLineConfigureID :0 };
        $('#winProductionExecutionPlanDetail').data('ProductionExecutionPlanDetail', oProductionExecutionPlanDetail);
        $('#winProductionExecutionPlanDetail').data('SelectedRowIndex', -1);
        $("#cboPLineConfigure").val(oProductionExecutionPlanDetail.PLineConfigureID);
        BreakDownRefreshList([]);
        $("#btnDetailSave,#btnDateAdd").show();
        $('#winProductionExecutionPlanDetail :input').attr('disabled', false);
        $("#winProductionExecutionPlanDetail").icsWindow('open', "Add Production Execution Plan Detail");
    }

    function Edit()
    {
        var oPEPDetail = $('#tblProductionExecutionPlanDetail').datagrid('getSelected');
        if(oPEPDetail== null )
        {
            alert("Please select Item From List");
            return;
        }
        
        var SelectedRowIndex=$('#tblProductionExecutionPlanDetail').datagrid('getRowIndex',oPEPDetail);    
        $('#txtMachineQty').val(oPEPDetail.MachineQty);
        $('#txtPPHQty').val(oPEPDetail.ProductionPerHour);
        $('#txtStartDate').datebox('setValue', oPEPDetail.StartDateInString);
        $('#txtEndDate').datebox('setValue', oPEPDetail.EndDateInString);

        $("#txtMachineQty,#txtPPHQty,#txtOverTime,#txtRegularTime").icsNumberField({ min: 0,precision: 2});
        $("#txtTargetQty").icsNumberField({ min: 0,precision:0});        
        $('#txtTotalOrderQty').val(_oProductionExecutionPlan.RecapQty);
        $("#txtTargetQty").val(Math.ceil(parseFloat(_oProductionExecutionPlan.RecapQty)*0.05+parseFloat(_oProductionExecutionPlan.RecapQty)));
        BreakDownRefreshList(oPEPDetail.ProductionExecutionPlanDetailBreakdowns);
        BreakDownSetTotal();
        SetDay();
        //CalculateEndDate();
        var oPLineConfigures = $('#winProductionExecutionPlanDetail').data('PLineConfigures');
        var oProductionTimeSetup = $('#winProductionExecutionPlanDetail').data('ProductionTimeSetup');
        if(oProductionTimeSetup!=null)
        {
            $('#txtRegularTime').val(oProductionTimeSetup.RegularTime);
            $('#txtOverTime').val(oProductionTimeSetup.OverTime);
        }
        $("#cboPLineConfigure").icsLoadCombo({ List: oPLineConfigures, OptionValue: "PLineConfigureID", DisplayText: "PULineNo" });
        $('#winProductionExecutionPlanDetail').data('ProductionExecutionPlanDetail', oPEPDetail);
        $('#winProductionExecutionPlanDetail').data('SelectedRowIndex', SelectedRowIndex);
        $("#cboPLineConfigure").val(oPEPDetail.PLineConfigureID);   
        $("#btnDetailSave,#btnDateAdd").show();
        $('#winProductionExecutionPlanDetail :input').attr('disabled', false);
        $("#winProductionExecutionPlanDetail").icsWindow('open', "Edit Production Execution Plan Detail");
    }
    function View()
    {
        var oPEPDetail = $('#tblProductionExecutionPlanDetail').datagrid('getSelected');
        if(oPEPDetail== null )
        {
            alert("Please select Item From List");
            return;
        }
        
        var SelectedRowIndex=$('#tblProductionExecutionPlanDetail').datagrid('getRowIndex',oPEPDetail);    
        $('#txtMachineQty').val(oPEPDetail.MachineQty);
        $('#txtPPHQty').val(oPEPDetail.ProductionPerHour);
        $('#txtStartDate').datebox('setValue', oPEPDetail.StartDateInString);
        $('#txtEndDate').datebox('setValue', oPEPDetail.EndDateInString);

        $("#txtMachineQty,#txtPPHQty,#txtOverTime,#txtRegularTime").icsNumberField({ min: 0,precision: 2});
        $("#txtTargetQty").icsNumberField({ min: 0,precision:0});        
        $('#txtTotalOrderQty').val(_oProductionExecutionPlan.RecapQty);
        $("#txtTargetQty").val(Math.ceil(parseFloat(_oProductionExecutionPlan.RecapQty)*0.05+parseFloat(_oProductionExecutionPlan.RecapQty)));
        BreakDownRefreshList(oPEPDetail.ProductionExecutionPlanDetailBreakdowns);
        BreakDownSetTotal();
        SetDay();
        //CalculateEndDate();
        var oPLineConfigures = $('#winProductionExecutionPlanDetail').data('PLineConfigures');
        var oProductionTimeSetup = $('#winProductionExecutionPlanDetail').data('ProductionTimeSetup');
        if(oProductionTimeSetup!=null)
        {
            $('#txtRegularTime').val(oProductionTimeSetup.RegularTime);
            $('#txtOverTime').val(oProductionTimeSetup.OverTime);
        }
        $("#cboPLineConfigure").icsLoadCombo({ List: oPLineConfigures, OptionValue: "PLineConfigureID", DisplayText: "PULineNo" });
        $('#winProductionExecutionPlanDetail').data('ProductionExecutionPlanDetail', oPEPDetail);
        $('#winProductionExecutionPlanDetail').data('SelectedRowIndex', SelectedRowIndex);
        $("#cboPLineConfigure").val(oPEPDetail.PLineConfigureID);       
        $("#btnDetailSave,#btnDateAdd").hide();
        $('#winProductionExecutionPlanDetail :input').attr('disabled', true);
        $("#winProductionExecutionPlanDetail").icsWindow('open', "View Production Execution Plan Detail");
    }
    function Remove()
    {
        var oPEPDetail = $('#tblProductionExecutionPlanDetail').datagrid('getSelected');
        if(oPEPDetail== null )
        {
            alert("Please select Item From List");
            return;
        }
        var SelectedRowIndex=$('#tblProductionExecutionPlanDetail').datagrid('getRowIndex',oPEPDetail);
        if (!confirm("Confirm to Delete?")) return ;
        alert("Delete sucessfully");
        $('#tblProductionExecutionPlanDetail').datagrid('deleteRow',SelectedRowIndex);
        SetTotal();
    }


    $('#btnDeatillAdd').click(function(){
        if(!ValidateBrekDownInput())return;
        BreakDownRefreshList([]);
        var nTotalDailyProduction = 0;
        var dStartDate = new Date($('#txtStartDate').datebox('getValue'));
        var dEndDate = new Date($('#txtEndDate').datebox('getValue'));
        var nRegularTime = $('#txtRegularTime').val();
        var nOverTime = $('#txtOverTime').val();
        var oProductionTimeSetup = $('#winProductionExecutionPlanDetail').data('ProductionTimeSetup');
        var nEfficencyInParcent = 100;
        while(dStartDate<=dEndDate)
        {
            var nTempDailyProduction = 0;
           
            if(oProductionTimeSetup!=null && oProductionTimeSetup.OffDay===_aweekday[dStartDate.getDay()])
            {
                nRegularTime = nOverTime=nEfficencyInParcent = 0;nTempDailyProduction = 0;
            }else{
                nRegularTime = $('#txtRegularTime').val();
                nOverTime = $('#txtOverTime').val();
                nEfficencyInParcent = 100;

                if(parseFloat($("#txtTargetQty").val())-parseFloat(nTotalDailyProduction)>parseFloat(parseFloat($('#txtPPHQty').val())*( parseFloat(nRegularTime) + parseFloat(nOverTime))))
                {
                    nTempDailyProduction = parseFloat(parseFloat($('#txtPPHQty').val())*( parseFloat(nRegularTime) + parseFloat(nOverTime)));
                }else
                {
                    if(parseFloat($("#txtTargetQty").val())-parseFloat(nTotalDailyProduction)>0)
                    {
                        nTempDailyProduction = (parseFloat($("#txtTargetQty").val())-parseFloat(nTotalDailyProduction));
                        var nTargetQtyInFullEfficency = parseFloat(parseFloat($('#txtPPHQty').val())*( parseFloat(nRegularTime) + parseFloat(nOverTime)));
                        nEfficencyInParcent = ((nTempDailyProduction * 100) /  nTargetQtyInFullEfficency);
                    }
                    else
                    {
                        nEfficencyInParcent = 0;
                    }
                }
            }
            var oProductionExecutionPlanDetail = $('#winProductionExecutionPlanDetail').data('ProductionExecutionPlanDetail');
            var oPEDBreakDown = {
                ProductionExecutionPlanDetailBreakdownID:0,
                ProductionExecutionPlanDetailID:parseInt(oProductionExecutionPlanDetail.ProductionExecutionPlanDetailID),
                WorkingDate:icsdateformat(dStartDate),
                WorkingDateInString: icsdateformat(dStartDate)+'('+_aweekday[dStartDate.getDay()]+')',
                MachineQty:$('#txtMachineQty').val(),
                ProductionPerHour:$('#txtPPHQty').val(),
                RegularTime: nRegularTime,
                OverTime: nOverTime,
                EfficencyInParcent:nEfficencyInParcent,
                DailyProduction :nTempDailyProduction
            };
            nTotalDailyProduction += parseFloat(parseFloat($('#txtPPHQty').val())*( parseFloat(nRegularTime) + parseFloat(nOverTime)));
            $('#tblBreakDown').datagrid('appendRow',oPEDBreakDown);
            dStartDate.setDate(dStartDate.getDate() + 1);
        }        
        BreakDownSetTotal();
    });
    $('#btnDetailRemove').click(function(){
        var oPEPDetailBreakDown = $('#tblBreakDown').datagrid('getSelected');
        if(oPEPDetailBreakDown== null )
        {
            alert("Please select Item From List");
            return;
        }
        var SelectedRowIndex=$('#tblBreakDown').datagrid('getRowIndex',oPEPDetailBreakDown);
        if (!confirm("Confirm to Delete?")) return ;
        alert("Delete sucessfully");
        $('#tblBreakDown').datagrid('deleteRow',SelectedRowIndex);
        BreakDownSetTotal();
    });
    $('#btnDateAdd').click(function(){
        var nRegularTime = $('#txtRegularTime').val();
        var nOverTime = $('#txtOverTime').val();
        var nEfficencyInParcent = 100;
        var oProductionTimeSetup = $('#winProductionExecutionPlanDetail').data('ProductionTimeSetup');

        var oExistingList = $('#tblBreakDown').datagrid('getRows');
        var oLastItem = oExistingList[oExistingList.length-1];
        var dNewDate = new Date(oLastItem.WorkingDateInString.split('(')[0]);
        dNewDate.setDate(dNewDate.getDate()+1);
        if(oProductionTimeSetup!=null && oProductionTimeSetup.OffDay==_aweekday[dNewDate.getDay()])
        {
            nRegularTime = nOverTime=nEfficencyInParcent = 0;
        }
        var oProductionExecutionPlanDetail = $('#winProductionExecutionPlanDetail').data('ProductionExecutionPlanDetail');
        var oPEDBreakDown = {
            ProductionExecutionPlanDetailBreakdownID:0,
            ProductionExecutionPlanDetailID: parseInt(oProductionExecutionPlanDetail.ProductionExecutionPlanDetailID),
            WorkingDate:icsdateformat(dNewDate),
            WorkingDateInString: icsdateformat(dNewDate)+'('+_aweekday[dNewDate.getDay()]+')',
            MachineQty : $('#txtMachineQty').val(),
            ProductionPerHour:$('#txtPPHQty').val(),
            RegularTime: nRegularTime,
            OverTime: nOverTime,
            EfficencyInParcent:nEfficencyInParcent,
            DailyProduction :parseFloat(parseFloat($('#txtPPHQty').val())*( parseFloat(nRegularTime) + parseFloat(nOverTime)))
        };
        $('#tblBreakDown').datagrid('appendRow',oPEDBreakDown);
        $('#txtEndDate').datebox('setValue', icsdateformat(dNewDate));
        ReSetPlan();
        BreakDownSetTotal();
    });
    function BreakDownValidateInput()
    {
        var oPEPDetails = $('#tblProductionExecutionPlanDetail').datagrid('getRows');
        for(var i = 0;i<oPEPDetails.length;i++)
        {
            if(parseInt($('#cboPLineConfigure').val()) == parseInt(oPEPDetails[i].PLineConfigureID) && i != parseInt($('#winProductionExecutionPlanDetail').data('SelectedRowIndex')))
            {
                alert("Duplicate Line not Allow");
                return;
            }
        }
        var oPEDBreakDowns=$('#tblBreakDown').datagrid('getRows');
        if(oPEDBreakDowns.length<=0)
        {
            alert("Please Insert at least one Break Down");
            return false;
        }
        return true;
    }
    function BreakDownRefreshObject()
    {
        var dEndDate = new Date($('#txtEndDate').datebox('getValue'));
        var dStartDate = new Date($('#txtStartDate').datebox('getValue'));
        var yearDiff=dEndDate.getFullYear()-dStartDate.getFullYear();// for year difference
        var y1=dEndDate.getFullYear();
        var y2=dStartDate.getFullYear();
        var monthDiff=(dEndDate.getMonth() + y1*12)-(dStartDate.getMonth() +y2*12);
        var day1=parseInt(dEndDate.getDate());
        var day2=parseInt(dStartDate.getDate());
        var dayDiff= (day1-day2)+ (monthDiff * 30)+1; // here 1 increse because we calculate with start date
        var nAvgCapacity = parseFloat(parseFloat(_nTotalDailyProduction)/parseFloat(_nTotalMachineQty));
        var oPLineConfigures = $('#winProductionExecutionPlanDetail').data('PLineConfigures');
        var oPLineConfigure = ICS_FindObject(oPLineConfigures, "PLineConfigureID", parseInt($('#cboPLineConfigure').val()));
        var oProductionExecutionPlanDetail = $('#winProductionExecutionPlanDetail').data('ProductionExecutionPlanDetail');
        var oPEPDetail = {
            ProductionExecutionPlanDetailID: parseInt(oProductionExecutionPlanDetail.ProductionExecutionPlanDetailID),
            ProductionExecutionPlanID : parseInt(oProductionExecutionPlanDetail.ProductionExecutionPlanID),
            ProductionUnitID : parseInt(oPLineConfigure.ProductionUnitID),
            StartDate:$('#txtStartDate').datebox('getValue'),
            StartDateInString:$('#txtStartDate').datebox('getValue'),
            EndDate :$('#txtEndDate').datebox('getValue'),
            EndDateInString:$('#txtEndDate').datebox('getValue'),
            WorkingDays : parseInt(dayDiff),
            AvgMachineQty :parseFloat(parseFloat(_nTotalMachineQty)/ parseInt(dayDiff)),
            AvgCapacityPerMachine :parseFloat(nAvgCapacity),
            AvgDailyProduction:parseFloat(parseFloat(_nTotalDailyProduction)/parseInt(dayDiff)),
            TotalProduction :parseFloat(_nTotalDailyProduction),
            ProductionExecutionPlanDetailBreakdowns : $('#tblBreakDown').datagrid('getRows'),
            PLineConfigureID: parseInt($('#cboPLineConfigure').val()),            
            LineNo: oPLineConfigure.LineNo,
            PUShortName : oPLineConfigure.PUShortName,
            ProductionPerHour:parseInt($('#txtPPHQty').val()),
            MachineQty :  parseInt($('#txtMachineQty').val())
        };     
        return oPEPDetail;
    }
    $('#btnDetailSave').click(function(){        
        if(!BreakDownValidateInput()) return;
        var oPEPDetail = BreakDownRefreshObject();
        if(oPEPDetail!=null)
        {
            if(parseInt($('#winProductionExecutionPlanDetail').data('SelectedRowIndex'))==-1)
            {
                $('#tblProductionExecutionPlanDetail').datagrid('appendRow',oPEPDetail);
            }
            else
            {
                $('#tblProductionExecutionPlanDetail').datagrid('updateRow',{index: parseInt($('#winProductionExecutionPlanDetail').data('SelectedRowIndex')),	row: oPEPDetail});
            }
        }
        SetTotal();
        $("#winProductionExecutionPlanDetail").icsWindow('close');
    });
    $('#btnDetailClose').click(function(){
        $("#winProductionExecutionPlanDetail").icsWindow('close');
    });
   
    function ValidateBrekDownInput()
    {
        debugger;
        if(parseInt($('#cboPLineConfigure').val())<=0){alert("Please Select Line No.");$('#cboPLineConfigure').focus();return false;}
        if(parseFloat($('#txtMachineQty').val())<=0 ){ alert("Machine Qty should be greater than 0");$('#txtMachineQty').focus();return false;}
        if(parseFloat($('#txtRegularTime').val())<=0 ){ alert("Reguler Time should be greater than 0");$('#txtMachineQty').focus();return false;}
        var dStartDate = new Date($('#txtStartDate').datebox('getValue'));
        var dEndDate = new Date($('#txtEndDate').datebox('getValue'));
        if(dEndDate<dStartDate)
        {
            $('#txtEndDate').focus();
            alert("End Date Should be Greater than Start Date");
            return false;
        }
        if( parseInt($('#txtRegularTime').val())<=0 || isNaN(parseInt($('#txtRegularTime').val()))){ alert("Reguler Time should be greater than 0");$('#txtRegularTime').focus();return false;}

        return true;
    }
    function SetDay()
    {
        _aweekday[0]=  "SunDay";
        _aweekday[1] = "MonDay";
        _aweekday[2] = "TuesDay";
        _aweekday[3] = "WednesDay";
        _aweekday[4] = "ThursDay";
        _aweekday[5] = "FriDay";
        _aweekday[6] = "SuterDay";
    }
    function CalculateEndDate(){
        debugger;
        if(parseInt($("#txtTargetQty").val())>0)
        {
            var oProductionTimeSetup = $('#winProductionExecutionPlanDetail').data('ProductionTimeSetup');
            var dStartDate = new Date($('#txtStartDate').datebox('getValue'));
            var nDailyProduction = parseInt($('#txtPPHQty').val())* parseInt((parseInt($('#txtRegularTime').val())+parseInt($('#txtOverTime').val())));
            var nRequiredDays = Math.ceil(parseInt($("#txtTargetQty").val())/parseInt(nDailyProduction))+parseInt(2);//Extra day's add
            for(var nDay=1; nDay <=parseInt(nRequiredDays); nDay++ )
            {
                if(oProductionTimeSetup==null)
                {
                    alert("Please Set Production Time in your System.");
                    break;
                }

                if(oProductionTimeSetup.OffDay === _aweekday[dStartDate.getDay()])
                {
                    nDay--;                    
                }    
                if(nDay != parseInt(nRequiredDays))
                {
                    dStartDate.setDate(dStartDate.getDate() + 1);
                }
            }
            $('#txtEndDate').datebox('setValue',icsdateformat(dStartDate));
            
        }
    }  
    function ReSetPlan()
    {  
        var nPlanQty = 0; 
        var nTotalPlanQty = 0; 
        var nYetToPlanQty = 0;
        var nIncreaseEfficency=0;        
        var nRegularTime = $('#txtRegularTime').val();
        var nOverTime = $('#txtOverTime').val();
        var nTargetQty = parseFloat($("#txtTargetQty").val());
        var oPEDBreakDowns=$('#tblBreakDown').datagrid('getRows');
        var nTargetQtyInFullEfficency = parseFloat(parseFloat($('#txtPPHQty').val())*( parseFloat(nRegularTime) + parseFloat(nOverTime)));
        if(oPEDBreakDowns.length>0)
        {
            for(var i=0; i<oPEDBreakDowns.length; i++)
            {
                nTargetQtyInFullEfficency = parseFloat(parseFloat($('#txtPPHQty').val())*(parseFloat(oPEDBreakDowns[i].RegularTime)+ parseFloat(oPEDBreakDowns[i].OverTime)));
                if((parseFloat(oPEDBreakDowns[i].RegularTime)+ parseFloat(oPEDBreakDowns[i].OverTime)) >0)
                {
                    nYetToPlanQty = (nTargetQty - nTotalPlanQty);
                    if(nIncreaseEfficency<100)
                    {
                        nIncreaseEfficency = parseFloat(oPEDBreakDowns[i].EfficencyInParcent);
                    }
                    else
                    {
                        if(nYetToPlanQty > nTargetQtyInFullEfficency)
                        {
                            oPEDBreakDowns[i].EfficencyInParcent = 100;
                            oPEDBreakDowns[i].DailyProduction  = nTargetQtyInFullEfficency;
                        } 
                        else
                        {
                            if(nYetToPlanQty>0)
                            {
                                oPEDBreakDowns[i].EfficencyInParcent = ((nYetToPlanQty * 100) /  nTargetQtyInFullEfficency);
                                oPEDBreakDowns[i].DailyProduction  = nYetToPlanQty;
                            }
                            else
                            {
                                oPEDBreakDowns[i].EfficencyInParcent = 0;
                                oPEDBreakDowns[i].DailyProduction  = 0;
                            }
                        }
                    }                
                    nTotalPlanQty = nTotalPlanQty + parseFloat(oPEDBreakDowns[i].DailyProduction);
                    $('#tblBreakDown').datagrid('updateRow',{index: i,	row: oPEDBreakDowns[i]});
                }
            }
        }
    }
    function BreakDownSetTotal()
    {
        var oPEDBreakDowns=$('#tblBreakDown').datagrid('getRows');
        _nTotalMachineQty = 0;
        _nTotalDailyProduction = 0;
        for(var i =0;i<oPEDBreakDowns.length;i++)
        {
            _nTotalMachineQty+=parseFloat(oPEDBreakDowns[i].MachineQty);
            _nTotalDailyProduction+=parseFloat(oPEDBreakDowns[i].DailyProduction);
        }
        document.getElementById('lblTotalProduction').innerHTML = formatPrice(_nTotalDailyProduction,0);
    }
    function BreakDownRefreshList(oDetailBreakDowns)
    {
        data=oDetailBreakDowns;
        data={"total":""+data.length+"","rows":data};
        $('#tblBreakDown').datagrid('loadData',data);
    }
    $('#txtPPHQty,#txtRegularTime,#txtOverTime').change(function(){
        if(parseInt($('#txtPPHQty').val())>0)
        {
            CalculateEndDate();
        }
    });    
    $('#cboPLineConfigure').change(function(){
        if(parseInt($('#cboPLineConfigure').val())>0)
        {
            var oPLineConfigures = $('#winProductionExecutionPlanDetail').data('PLineConfigures');
            var oPLineConfigure = ICS_FindObject(oPLineConfigures, "PLineConfigureID", parseInt($('#cboPLineConfigure').val()));
            $('#txtMachineQty').val(oPLineConfigure.MachineQty);   
            $('#txtStartDate').datebox('setValue', oPLineConfigure.PlanStartDateSt);
        }
    });
    function Duplicate(oPEPDetail)
    {
        var oPEPDetails = $('#tblProductionExecutionPlanDetail').datagrid('getRows');
        for(var i = 0;i<oPEPDetails.length;i++)
        {
            if(parseInt(oPEPDetail.PLineConfigureID) == parseInt(oPEPDetails[i].BuildingID) && parseInt(oPEPDetail.FloorID) == parseInt(oPEPDetails[i].FloorID) && parseInt(oPEPDetail.LineID) == parseInt(oPEPDetails[i].LineID))
            {
                return true;
            }
        }
        return false;
    }



    
    function RefreshDetails (oProductionExecutionPlanDetails)
    {
        data=oProductionExecutionPlanDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblProductionExecutionPlanDetail').datagrid('loadData',data);
        SetTotal();
    }
    function RefreshStyleImage(nTechnicalsheetID)
    {
        $.ajax({
            cache:true,
            type: "GET",
            url : _sBaseAddress+ "/TechnicalSheet/GetStyleImageInBase64",            
            data: "id=" + nTechnicalsheetID,
            success: function (data) {
                //debugger;
                $('#imgCoverImage').attr('src', "data:image/jpg;base64," + data.base64imgage );
            }
        });

    }

    $('#linkOrderSummary').click(function(){
        debugger;
        if(parseInt(_oProductionExecutionPlan.OrderRecapID)<=0)
        {
            alert("Sorry, There is No Order Recap.");
            return;
        }
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href =_sBaseAddress+  "/OrderSummary/ViewOrderSummary?id="+_oProductionExecutionPlan.OrderRecapID+'&buid='+sessionStorage.getItem('BUID')+'&menuid=0';
    });
    function SetTotal()
    {
        debugger;
        _nTotalPlanExecutionQty = 0;
        var oPEPDetails = $('#tblProductionExecutionPlanDetail').datagrid('getRows');
        for(var i = 0;i<oPEPDetails.length;i++)
        {
            _nTotalPlanExecutionQty=parseFloat(_nTotalPlanExecutionQty)+ parseFloat(oPEPDetails[i].TotalProduction);
        }
        document.getElementById('lbltotalQty').innerHTML = formatPrice(_nTotalPlanExecutionQty,0);

    }

    function ValidateInput()
    {
        if(_oProductionExecutionPlan.OrderRecapID <=0 ){ alert("Sorry there is no Production Order, Please Pick Production  Order!");return false;}
        if(_oProductionExecutionPlan.BuyerID <=0 ){alert("Sorry there is no Buyer, Please Pick another  Order!");$('#btnOrderRecap').focus();return false;}
        if((parseInt(_oProductionExecutionPlan.RecapQty * 0.005) +parseInt(_nTotalPlanExecutionQty))< (parseInt(_nTotalPlanExecutionQty)))
        {
            alert("You Can Plan Maximumn "+parseInt(_oProductionExecutionPlan.RecapQty * 0.005)+parseInt(_oProductionExecutionPlan.RecapQty)+" Pcs");
            return false;
        }
        return true;
    }

    function RefreshObject()
    {
        var oProductionExecutionPlan= {
            ProductionExecutionPlanID: _oProductionExecutionPlan.ProductionExecutionPlanID,
            RefNo:_oProductionExecutionPlan.RefNo,
            PlanStatusInInt:1,//initalize
            OrderRecapID:_oProductionExecutionPlan.OrderRecapID,
            PlanDate:$('#txtPlanDate').datebox('getValue'),
            ShipmentDate:_oProductionExecutionPlan.ShipmentDate,
            PlanExecutionQty:_nTotalPlanExecutionQty,
            Note:$("#txtNote").val(),
            SMV:parseFloat($('#txtSMV').val()),
            ProductionExecutionPlanDetails : GetDetails()
        };

        return oProductionExecutionPlan;
    }

    function GetDetails()
    {
        var oPEPDetails =  $('#tblProductionExecutionPlanDetail').datagrid('getRows');
        for(var i = 0;i<oPEPDetails.length;i++)
        {
            oPEPDetails[i].StartDate = new Date(oPEPDetails[i].StartDateInString);
            oPEPDetails[i].EndDate = new Date(oPEPDetails[i].EndDateInString);

            for(var j = 0;j<oPEPDetails[i].ProductionExecutionPlanDetailBreakdowns.length;j++)
            {
                oPEPDetails[i].ProductionExecutionPlanDetailBreakdowns[j].WorkingDate = new Date( oPEPDetails[i].ProductionExecutionPlanDetailBreakdowns[j].WorkingDateInString);
            }
        }
        return oPEPDetails;
    }

    function Save()
    {
        debugger;
        if(!ValidateInput()) return;
        var oProductionExecutionPlan=RefreshObject();
        var sActionName = _objName=="Accept Production Execution Plan"?"AcceptRevise":"Save";
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+ "/ProductionExecutionPlan/"+sActionName,
            traditional: true,
            data:  JSON.stringify(oProductionExecutionPlan),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oProductionExecutionPlan = jQuery.parseJSON(data);
                if (oProductionExecutionPlan.ErrorMessage=="")
                {
                    alert("Data Saved sucessfully");
                    var oProductionExecutionPlans = sessionStorage.getItem("ProductionExecutionPlans");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oProductionExecutionPlans != null) {
                        oProductionExecutionPlans = jQuery.parseJSON(oProductionExecutionPlans);
                    }
                    else {
                        oProductionExecutionPlans = [];
                    }
                    if (nIndex != -1) {
                        oProductionExecutionPlans[nIndex] = oProductionExecutionPlan;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oProductionExecutionPlans.length);
                        oProductionExecutionPlans.push(oProductionExecutionPlan);
                    }
                    sessionStorage.setItem("ProductionExecutionPlans", JSON.stringify(oProductionExecutionPlans));
                    window.location.href = sessionStorage.getItem("BackLink");

                }
                else {
                    alert(oProductionExecutionPlan.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function Close()
    {
        if(sessionStorage.getItem("BackLink")==null || sessionStorage.getItem("BackLink")=="")
        {
            window.close();
        }else{
            window.location.href = sessionStorage.getItem("BackLink");
        }
    }

    $(document).keydown(function(e) {
        //debugger;
        if(e.which == 27)//escape=27
        {
            //debugger;
            window.close();
        }
    });

</script>