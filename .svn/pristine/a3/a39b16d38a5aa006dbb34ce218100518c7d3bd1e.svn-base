<html>
@{
    ViewBag.Title = "Commercial Invoice";
}
<body>
    @model ESimSol.BusinessObjects.CommercialInvoice
    <div ng-app="CommercialInvoiceApp">

        <div class="menuMainCollectionTable" ng-controller="CommercialInvoiceController as MLCC" id="divCI">
            <div style="font-family:Tahoma;text-align:center;height:75vh;width:99%;" class="regionCI">
                <fieldset>
                    <legend>Commercial Invoice Info :</legend>
                    <div class="row col-md-12">
                        <div class="col-md-2 text-right">
                            <input type="checkbox" ng-model="CommercialInvoice.IsSystemGeneratedInvoiceNo" ng-click="CheckUncheck()" />
                            <label class="control-label">Invoice No:</label>
                        </div>
                        <div class="col-md-2 text-left">
                            <input ng-model="CommercialInvoice.InvoiceNo" ng-disabled="InvoiceNoShow" class="form-control" disabled />
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Invoice Date:</label></div>
                        <div class="col-md-2 text-left">
                            <div class="input-group date date-container">
                                <input type="text" class="form-control" ng-model="CommercialInvoice.InvoiceDateInString"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                            </div>
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Receipt no:</label></div>
                        <div class="col-md-2 text-left">
                            <input ng-model="CommercialInvoice.ReceiptNo" class="form-control" required />
                        </div>
                    </div>
                    <div class="row col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label">Master LC No:</label></div>
                        <div class="col-md-2 text-left">
                            <input ng-model="CommercialInvoice.MasterLCNo" class="form-control" disabled />
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">LC Transfer No:</label></div>
                        <div class="col-md-2 text-left">
                            <input ng-model="CommercialInvoice.TransferNo" class="form-control" disabled />
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Transport no:</label></div>
                        <div class="col-md-2 text-left">
                            <input ng-model="CommercialInvoice.TransportNo" class="form-control" required />
                        </div>
                    </div>
                    <div class="row col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label">Transfer Value:</label></div>
                        <div class="col-md-2 text-left">
                            <input ng-model="CommercialInvoice.TransferAmount" class="form-control" style="text-align:right;" disabled />
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Yet to Invoice:</label></div>
                        <div class="col-md-2 text-left">
                            <input ng-model="CommercialInvoice.YetToInvoiceAmount" class="form-control" style="text-align:right;" disabled />
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Driver Name:</label></div>
                        <div class="col-md-2 text-left">
                            <input ng-model="CommercialInvoice.DriverName" class="form-control" required />
                        </div>
                    </div>

                    <div class="row col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label">Buyer Name:</label></div>
                        <div class="col-md-6 text-left">
                            <input ng-model="CommercialInvoice.BuyerName" class="form-control" />
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Delivery Date :</label></div>
                        <div class="col-md-2 text-left">
                            <div class="input-group date date-container">
                                <input type="text" class="form-control" ng-model="CommercialInvoice.DeliveryDateInString"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                            </div>
                        </div>
                    </div>

                    <div class="row col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label">Carrier:</label></div>
                        <div class="col-md-2 text-left">
                            <input ng-model="CommercialInvoice.Carrier" class="form-control" />
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Shipment Mode:</label></div>
                        <div class="col-md-2 text-left">
                            <select ng-model="CommercialInvoice.ShipmentMode" class="form-control" ng-options="oItem.id as oItem.Value for oItem in TransPortTypes"></select>
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Remark:</label></div>
                        <div class="col-md-2 text-left">
                            <input ng-model="CommercialInvoice.Note" class="form-control" />
                        </div>
                    </div>

                </fieldset>
                <div class="ui-grid-top-panel" style="text-align:left;">
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="InvoiceDetails()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Invoice Details</span></button>
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RemoveDetail()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Remove</span></button>
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RefreshDetail()"><span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                </div>
                <div style="width: 100%; height:185px;" ui-grid="gridOptionsCIDetail" ui-grid-selection ui-grid-cellnav ui-grid-edit></div>
                <div class="row col-md-12">
                    <div class="col-md-8 text-right"><label class="control-label">Annual Bonus:</label></div>
                    <div class="col-md-4 text-left">
                        <div class="col-md-5">
                            <input ng-change="setDiscountAndAdditionAmount('AnnualBonus')" ng-model="CommercialInvoice.AnnualBonus" class="form-controlsm number" />
                        </div>
                        <div class="col-md-2 text-right">
                            <label class="control-label">(%):</label>
                        </div>
                        <div class="col-md-5">
                            <input ng-change="setDiscountAndAdditionAmount('AnnualBonusInPercentageInSt')" ng-model="CommercialInvoice.AnnualBonusInPercentageInSt" class="form-controlsm" ng-pattern="/^[0-9]+(\.[0-9]{1,2})?$/" step="0.01" />
                        </div>
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-8 text-right"><label class="control-label">Discount:</label></div>
                    <div class="col-md-4 text-left">
                        <div class="col-md-5">
                            <input ng-change="setDiscountAndAdditionAmount('DiscountAmount')" ng-model="CommercialInvoice.DiscountAmount" class="form-controlsm number" />
                        </div>
                        <div class="col-md-2 text-right">
                            <label class="control-label">(%):</label>
                        </div>
                        <div class="col-md-5">
                            <input ng-change="setDiscountAndAdditionAmount('DiscountInPercentageInSt')" ng-model="CommercialInvoice.DiscountInPercentageInSt" class="form-controlsm" ng-pattern="/^[0-9]+(\.[0-9]{1,2})?$/" step="0.01" />
                        </div>
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="col-md-8 text-right"><label class="control-label">Addition:</label></div>
                    <div class="col-md-4 text-left">
                        <div class="col-md-5">
                            <input ng-change="setDiscountAndAdditionAmount('AdditionAmount')" ng-model="CommercialInvoice.AdditionAmount" class="form-controlsm number" />
                        </div>
                        <div class="col-md-2 text-right">
                            <label class="control-label">(%):</label>
                        </div>
                        <div class="col-md-5">
                            <input ng-change="setDiscountAndAdditionAmount('AdditionInPercentageInSt')" ng-model="CommercialInvoice.AdditionInPercentageInSt" class="form-controlsm" />
                        </div>
                    </div>
                </div>
                
                <div class="row col-md-12">
                    <div class="col-md-8 text-right"><label class="control-label">Net Amount:</label></div>
                    <div class="col-md-4 text-left">
                        <input ng-model="CommercialInvoice.NetInvoiceAmount" class="number form-controlsm" disabled />
                    </div>
                </div>
            </div>
            <fieldset>
                <legend>Action</legend>
                <div class="row col-md-12 text-right">
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="save()"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Save</span> </button>
                    <button type="button" id="btnclose" class="btn btn-sm" aria-label="Left Align" ng-click="close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
                </div>
            </fieldset>
        </div>
        <script type="text/ng-template" id="InvoiceDetail.html">
            <div class="modal-header">
                <h4 class="modal-title" id="modal-title">Order Recap List</h4>
            </div>
            <div class="form-inline ui-grid-top-panel" style="height:40px;padding-left:10px;">
                <input type="text" ng-model="SearchOrderRecapNo" placeholder="Type Order Recap" />&nbsp;<input type="text" ng-model="SearchStyleNo" placeholder="Type Style Number" />&nbsp; <input type="checkbox" id="chkIsDateSearch" /> &nbsp;<div class="input-group date date-container" style="width:150px;"><input type="text" class="form-control" style="height: 27px;" ng-model="SearchShipmentStartDateInString"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span></div>&nbsp;<div class="input-group date date-container" style="width:150px;"><input type="text" class="form-control" style="height: 27px;" ng-model="SearchShipmentEndDateInString"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span></div>
                <button type="button" class="btn btn-sm btn-info" aria-label="Left Align" ng-click="SearchRecap()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span>Search</button>
            </div>
            <div class="modal-body form-horizontal ms-custom-control" id="modal-body" style="height:400px">
                <div class="col-md-12">
                    <div style="width:inherit; height:inherit" ui-grid="OrderRecapGridOptions" ui-grid-selection class="grid"></div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="OkDetail()"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Ok</button>
                <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="RecapDetailsClose()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
            </div>
        </script>
    </div>
</body>
</html>
<style type="text/css">
    .regionCI .form-horizontal .control-label {
        padding-top: 1px;
    }

    .regionCI .form-control {
        height: 26px;
        padding: 0px 6px;
        font-size: 12px;
    }

    .regionCI .form-controlsm {
        height: 20px;
        padding: 0px 2px;
        text-align:right;
        width:100%;
        font-size: 12px;
    }
    .regionCI .col-md-12 {
        width: 100%;
        padding-right: 5px;
        padding-left: 5px;
        margin-bottom: 3px;
    }

    .regionCI .col-md-2 {
        width: 16.66%;
        padding-right: 5px;
        padding-left: 5px;
    }

  
    .regionCI .col-md-6 {
        width: 50%;
        padding-right: 5px;
        padding-left: 5px;
    }

     .regionCI .col-md-8 {
        width: 66.66%;
        padding-right: 5px;
        padding-left: 0px;
    }
      .regionCI .col-md-4 {
        width: 33.33%;
        padding-right: 5px;
        padding-left: 0px;
    }


    .regionCI .col-md-5 {
        width: 41.66%;
        padding-right: 5px;
        padding-left: 0px;
    }

    .regionCI .btn-sm {
        padding: 3px 10px;
    }

    .regionCI .input-group-addon {
        padding: 4px 8px;
    }
</style>
<script type="text/javascript">
    var oCOSForLCTransferType = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.COSForLCTransferType));
    var oCOSForCommerecialInvoiceFormat = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.COSForCommerecialInvoiceFormat));
    var oTransportTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.TransportTypes));
    var oCommercialInvoice = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oCommercialInvoiceDetails = oCommercialInvoice.CommercialInvoiceDetails;

    var CommercialInvoiceApp = angular.module('CommercialInvoiceApp', ['ngAnimate', 'ui.bootstrap','ui.grid', 'ui.grid.selection','ui.grid.edit', 'ms.service']);
    CommercialInvoiceApp.controller('CommercialInvoiceController', function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession,icsMethod,msGridControl) {
        
        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });
        debugger;
        oCommercialInvoice.BUID = sessionStorage.getItem('BUID');
        $scope.COSForLCTransferType = oCOSForLCTransferType;
        $scope.COSForCommerecialInvoiceFormat = oCOSForCommerecialInvoiceFormat;
        $scope.TransPortTypes = oTransportTypes;
        $scope.CommercialInvoiceDetails = oCommercialInvoiceDetails;
        $scope.CommercialInvoice = oCommercialInvoice;
        $scope.CommercialInvoice.NetInvoiceAmount = formatPrice($scope.CommercialInvoice.NetInvoiceAmount);
        if(sessionStorage.getItem("CommercialInvoiceHeader") == "View Commercial Invoice") {
            $("#divCI :input").prop('disabled', true);
            $('#btnclose').prop('disabled', false);
        }

        //<th field="" width="80" align="right" formatter="formatPrice" data-options="field:'InvoiceQty',editor:{type:'numberbox',options:{precision:0}}">Invoice Qty</th>
        //<th width="50" align="right" formatter="formatPrice" data-options="field:'Discount',editor:{type:'numberbox',options:{precision:2}}">Discount</th>
        var oDetailColumns = [];
        var oColumn = { field: 'StyleNo', name:'Style No', width:'10%',enableCellEdit:false };oDetailColumns.push(oColumn);
        oColumn ={ field: 'OrderRecapNo', name:'Order No', width:'7%',enableCellEdit:false };oDetailColumns.push(oColumn);
        oColumn ={ field: 'ProductName', name: 'Description', width: '10%',align:'left', enableSorting: false ,enableCellEdit:false};oDetailColumns.push(oColumn);
        oColumn ={ field: 'Fabrication', name: 'Fabrication', width: '10%', enableSorting: false ,enableCellEdit:false};oDetailColumns.push(oColumn);
        oColumn ={ field: 'ShipmentDateInString', name: 'Shipment Date', width: '10%',align:'left', enableSorting: false ,enableCellEdit:false};oDetailColumns.push(oColumn);
        if(parseInt($scope.COSForCommerecialInvoiceFormat.Value)==15)//buying format
        {
            oColumn ={ field: 'TransferQty', name: 'Transfer Qty', cellClass: 'text-right',enableCellEdit:false, width: '10%',cellFilter: 'number: 0', aggregationType: uiGridConstants.aggregationTypes.sum,aggregationHideLabel: true,footerCellClass: 'text-right',footerCellFilter: 'number:0'};oDetailColumns.push(oColumn);
        }
        oColumn ={ field: 'CartonQty', name: 'Carton Qty',cellClass: 'text-right', width: '7%',cellFilter: 'number:0',enableCellEdit:true  };oDetailColumns.push(oColumn);
        oColumn ={ field: 'YetToInvoiceQty', name: 'Yet To Qty',cellClass: 'text-right',enableCellEdit:false, width: '10%',align:'left',cellFilter: 'number:0', aggregationType: uiGridConstants.aggregationTypes.sum,aggregationHideLabel: true,footerCellClass: 'text-right',footerCellFilter: 'number:0' };oDetailColumns.push(oColumn);
        oColumn ={ field: 'InvoiceQty', name: 'Invoice Qty', cellClass: 'text-right',width: '10%' , cellFilter: 'number: 0', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:0'};oDetailColumns.push(oColumn);
        oColumn ={ field: 'UnitPrice', name: 'FOB',cellClass: 'text-right', width: '7%',cellFilter: 'number: 3',enableCellEdit:false  };oDetailColumns.push(oColumn);
        oColumn ={ field: 'Discount', name: 'Discount', cellClass: 'text-right',width: '7%', type: 'number', enableCellEdit:true,cellFilter: 'number: 3'};oDetailColumns.push(oColumn);
        oColumn ={ field: 'FOB', name: 'Actual FOB', cellClass: 'text-right',width: '8%' ,cellFilter: 'number: 3',enableCellEdit:false };oDetailColumns.push(oColumn);
        oColumn ={ field: 'Amount', name: 'Amount',cellClass: 'text-right',enableCellEdit:false, aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, width: '10%',align:'right',cellFilter: 'number: 2' };oDetailColumns.push(oColumn);

        ////Commercial invoice LC Detail
        $scope.gridOptionsCIDetail = {
            showColumnFooter: true,
            multiSelect: false,
            enableRowSelection: true,
            enableSelectAll: false,
            columnDefs:oDetailColumns,
            data:oCommercialInvoiceDetails,
            onRegisterApi: function (gridApi) {
                $scope.gridDetailApi = gridApi;
                gridApi.edit.on.afterCellEdit($scope,
                  function (rowEntity, colDef, newValue, oldValue) {
                      debugger;
                      rowEntity.FOB= parseFloat(parseFloat(rowEntity.UnitPrice )- parseFloat(rowEntity.Discount));
                      rowEntity.Amount= parseFloat(parseFloat(rowEntity.InvoiceQty )* parseFloat(rowEntity.FOB));
                      $scope.SetTotal();
                      return rowEntity;
                  });
            }
        };

        $scope.CheckUncheck = function () {
            if ($scope.CommercialInvoice.IsSystemGeneratedInvoiceNo) {
                $scope.InvoiceNoShow = true;
                $scope.CommercialInvoice.IsSystemGeneratedInvoiceNo = true;
            }
            else {
                $scope.InvoiceNoShow = false;
                $scope.CommercialInvoice.IsSystemGeneratedInvoiceNo = false;
            }
        };

        $scope.CheckUncheck();

        $scope.SetTotal = function () {
            debugger;
            var nNetAmount = 0;
            var nTotalAmount = $scope.gridOptionsCIDetail.data!=null?ICS_TotalCalculation($scope.gridOptionsCIDetail.data,'Amount'):0;
            //angular.forEach($scope.gridOptionsCIDetail.data, function (oItem, index) {
            //    nTotalAmount += oItem.Amount;
            //});
            nNetAmount = ((parseFloat(nTotalAmount) + parseFloat($scope.CommercialInvoice.AdditionAmount)) - (parseFloat($scope.CommercialInvoice.AnnualBonus)+  parseFloat($scope.CommercialInvoice.DiscountAmount) ));
            $scope.CommercialInvoice.InvoiceAmount = nTotalAmount;
            $scope.CommercialInvoice.NetInvoiceAmount = nNetAmount;
        };

        $scope.SetTotal();

        $scope.setDiscountAndAdditionAmount = function (type) {
            debugger;
            var nTotalAmount = 0;
            angular.forEach($scope.gridOptionsCIDetail.data, function (oItem, index) {
                nTotalAmount += oItem.Amount;
            });

            if (type == "DiscountAmount") {
                if(nTotalAmount > 0 && parseFloat($scope.CommercialInvoice.DiscountAmount) >= 0) 
                {
                    $scope.CommercialInvoice.DiscountInPercentageInSt = Number(($scope.CommercialInvoice.DiscountAmount * 100) / nTotalAmount).toFixed(2);
                }
            }
            else if (type == "DiscountInPercentageInSt") {
                if(nTotalAmount > 0 && parseFloat($scope.CommercialInvoice.DiscountInPercentageInSt) >= 0) 
                {
                    $scope.CommercialInvoice.DiscountAmount = Number(($scope.CommercialInvoice.DiscountInPercentageInSt * nTotalAmount) / 100).toFixed(2);
                }
            }else  if (type == "AnnualBonus") {
                if(nTotalAmount > 0 && parseFloat($scope.CommercialInvoice.AnnualBonus) >= 0) 
                {
                    $scope.CommercialInvoice.AnnualBonusInPercentageInSt = Number(($scope.CommercialInvoice.AnnualBonus * 100) / nTotalAmount).toFixed(2);
                }
            }
            else if (type == "AnnualBonusInPercentageInSt") {
                if(nTotalAmount > 0 && parseFloat($scope.CommercialInvoice.AnnualBonusInPercentageInSt) >= 0) 
                {
                    $scope.CommercialInvoice.AnnualBonus = Number(($scope.CommercialInvoice.AnnualBonusInPercentageInSt * nTotalAmount) / 100).toFixed(2);
                }
            }
            else if (type == "AdditionAmount") {
                if(nTotalAmount > 0 && parseFloat($scope.CommercialInvoice.AdditionAmount) >= 0) {
                    $scope.CommercialInvoice.AdditionInPercentageInSt = Number(($scope.CommercialInvoice.AdditionAmount * 100) / nTotalAmount).toFixed(2);
                }
            }
            else {
                if(nTotalAmount > 0 && parseFloat($scope.CommercialInvoice.AdditionInPercentageInSt) >= 0) {
                    $scope.CommercialInvoice.AdditionAmount = Number(($scope.CommercialInvoice.AdditionInPercentageInSt * nTotalAmount) / 100).toFixed(2);
                }
            }
            $scope.SetTotal();
        };

        $scope.InvoiceDetails =  function() {
            debugger;
            var oCommercialInvoice = $scope.CommercialInvoice;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/CommercialInvoice/GetCIDetails',$.param(oCommercialInvoice), config).then(
                function (response) {
                    debugger;
                    var data = jQuery.parseJSON(response.data);
                    var modalInstance = $uibModal.open({
                        ariaLabelledBy: 'modal-title',
                        ariaDescribedBy: 'modal-body',
                        size: 'lg',
                        templateUrl: 'InvoiceDetail.html',
                        controller: 'ModalInstanceCtrl',
                        controllerAs: 'FARController',
                        resolve: {
                            obj: function () {
                                return { InvoiceList:data, Operation: 'Log', CommercialInvoice:$scope.CommercialInvoice  };
                                ///$scope.FARegister.ActualDepRate = $result.ActualDepRate
                            }
                        }
                    });

                    modalInstance.result.then(function (result) {
                        debugger; 
                        if (result != null && result.length > 0) 
                        {
                            for(var i = 0; i < result.length; i++)
                            {
                                    var oCommercialInvoiceDetails = $scope.gridOptionsCIDetail.data;
                                    if(!icsMethod.ICS_IsExist(oCommercialInvoiceDetails,'OrderRecapID', result[i].OrderRecapID))
                                    {
                                        result[i].InvoiceQty = result[i].YetToInvoiceQty;
                                        $scope.gridOptionsCIDetail.data.push(result[i]);
                                    }
                            }
                            $scope.SetTotal();
                            }
                       
                    }, function () {
                        $log.info('Modal dismissed at: ' + new Date());
                    });
                },
                function (response) {
                    alert(jQuery.parseJSON(response.data).Message);
                });
        };

        $scope.RemoveDetail = function () {
            debugger;
            var oMLCDetail = $scope.gridDetailApi.selection.getSelectedRows()[0];
            if (oMLCDetail == null) {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex = $scope.gridOptionsCIDetail.data.indexOf(oMLCDetail);
            if (!confirm("Confirm to Delete?")) return ;
            $scope.gridOptionsCIDetail.data.splice(SelectedRowIndex, 1);
            $scope.SetTotal();
        };

        $scope.RefreshDetail = function () {
            $scope.gridOptionsCIDetail.data =  $scope.gridOptionsCIDetail.data;
        };

        $scope.ValidateInput =  function () {
            debugger;
            if($scope.CommercialInvoice.IsSystemGeneratedInvoiceNo == false)
            {
                if($scope.CommercialInvoice.InvoiceNo ==null || $scope.CommercialInvoice.InvoiceNo=="" ) { alert("Please write Invoice No!");  return false; }
            }
            //if($scope.CommercialInvoice.ReceiptNo==null || $scope.CommercialInvoice.ReceiptNo=="" ) { alert("Please write Receipt No!"); return false; }
            //if($scope.CommercialInvoice.DriverName ==null || $scope.CommercialInvoice.DriverName=="" ) { alert("Please write Driver Name!"); return false; }
            //if($scope.CommercialInvoice.Carrier ==null || $scope.CommercialInvoice.Carrier=="" ) { alert("Please write Carrier Name!"); return false; }
            //15:buying format ;16:Garments Format
            if(parseInt($scope.COSForCommerecialInvoiceFormat.Value)==15 && parseInt($scope.COSForLCTransferType.Value)===9)//9:full value, 10:partial value
            {
                if(Math.round(parseFloat($scope.CommercialInvoice.InvoiceAmount)) > Math.round(parseFloat($scope.CommercialInvoice.TransferAmount)))
                {
                    alert("Invoice Amount Should be Less  than Transfer Amount");
                    return false;
                }
            }

            if(Math.round(parseFloat( $scope.CommercialInvoice.DiscountAmount)) > Math.round(parseFloat($scope.CommercialInvoice.InvoiceAmount )))
            {
                alert("Net Amount Should be Less  than Gross Amount");
                return false;
            }

            if($scope.CommercialInvoice.ShipmentMode ==0)
            {
                alert('Please Select Shipment Mode');
                return false;
            }
            if($scope.gridOptionsCIDetail.data.length <=0){alert("Please Add Master LC Details");  return false;}

            var oCMIDetails = $scope.gridOptionsCIDetail.data;
            for(var i = 0;i<oCMIDetails.length;i++)
            {
                if(parseInt($scope.COSForCommerecialInvoiceFormat.Value)==15)//buying format
                {
                    if(parseFloat(oCMIDetails[i].InvoiceQty)>(parseFloat(oCMIDetails[i].TransferQty) + ((parseFloat(oCMIDetails[i].TransferQty)*5)/100)))
                    {
                        alert(" Invoice Quantity Should be Less than  or equal Tranfer Qty for '"+oCMIDetails[i].StyleNo+"'");
                        return false;
                    }
                }
                if(parseFloat(oCMIDetails[i].Discount)> parseFloat(oCMIDetails[i].UnitPrice))
                {
                    alert(" Discount Should be Less than FOB for '"+ oCMIDetails[i].StyleNo+"'");
                    return false;
                }
                if (parseFloat(oCMIDetails[i].InvoiceQty) <= 0) {
                    alert("Invoice Qty must be greater than 0 for '" + oCMIDetails[i].StyleNo + "'");
                    return false;
                }
                if (parseFloat(oCMIDetails[i].InvoiceQty) > parseFloat(oCMIDetails[i].YetToInvoiceQty)) {
                    alert("Invoice Qty should be Less than  or equal Yet To Qty for '" + oCMIDetails[i].StyleNo +"'");
                    return false;
                }
            }
            return true;
        };

        $scope.save = function () {
            debugger;
            if(!$scope.ValidateInput()) return;
            var oCommercialInvoice= $scope.CommercialInvoice;
            oCommercialInvoice.InvoiceDate = new Date(oCommercialInvoice.InvoiceDateInString);
            oCommercialInvoice.DeliveryDate = new Date(oCommercialInvoice.DeliveryDateInString);
            oCommercialInvoice.CIFormatInInt=parseInt($scope.COSForCommerecialInvoiceFormat.Value);
            oCommercialInvoice.CommercialInvoiceDetails= $scope.gridOptionsCIDetail.data;

            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+"/CommercialInvoice/Save",
                traditional: true,
                data:  JSON.stringify(oCommercialInvoice),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    var oCommercialInvoice= jQuery.parseJSON(data);
                    if (oCommercialInvoice.ErrorMessage=="" || oCommercialInvoice.ErrorMessage==null)
                    {
                        alert("Data Save Successfully!!");
                        var oCommercialInvoices = sessionStorage.getItem("CommercialInvoices");
                        var nIndex = parseInt(sessionStorage.getItem("CISelectedRowIndex"));
                        if (oCommercialInvoices != null) 
                        {
                            oCommercialInvoices = jQuery.parseJSON(oCommercialInvoices);
                        }
                        else {
                            oCommercialInvoices = [];
                        }
                        if (nIndex != -1) {
                            oCommercialInvoices[nIndex] = oCommercialInvoice;
                        }
                        else {
                            sessionStorage.setItem("CICISelectedRowIndex", oCommercialInvoices.length);
                            oCommercialInvoices.push(oCommercialInvoice);
                        }
                        sessionStorage.setItem("CommercialInvoices", JSON.stringify(oCommercialInvoices));
                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                    else
                    {
                        alert(oCommercialInvoice.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });

        };

        $scope.close = function () {
            window.location.href = sessionStorage.getItem("BackLink");
        };

       
    });

    CommercialInvoiceApp.controller('ModalInstanceCtrl', function ($scope, $http, $uibModalInstance,uiGridConstants, msModal, obj) {
        debugger;
        $(document).on('mousemove', '.modal-body', function () {
            $('.date-container').datepicker({
                format: "dd M yyyy",
                calendarWeeks: true,
                autoclose: true,
                todayHighlight: true
            });
        });
        $scope.SearchShipmentStartDateInString = $scope.SearchShipmentEndDateInString=icsdateformat(new Date());
        $scope.SearchStyleNo = "";
        $scope.SearchOrderRecapNo = "";
        
        $scope.operation=obj.Operation;
        $scope.CommercialInvoice= obj.CommercialInvoice;
        $scope.CommercialInvoiceList = obj.InvoiceList;

        $scope.OrderRecapGridOptions ={
            enableSorting: true,
            enableFullRowSelection: true,
            enableSelectAll: false,
            multiSelect:true,
            enableHorizontalScrollbar: uiGridConstants.scrollbars.ALWAYS,
            enableVerticalScrollbar : true,
            columnDefs:[{ field: 'OrderRecapNo', name: 'Recap No',width: '14%' ,enableSorting: false },
                                    { field: 'StyleNo', name: 'Style No',width: '20%', enableSorting: false },
                                    { field: 'ProductName', name: 'Product Name',width: '20%', enableSorting: false },
                                    { field: 'Fabrication', name: 'Fabrication',width: '15%', enableSorting: false },
                                    { field: 'PIDetailQty', name: 'LC Qty',cellFilter: 'number: 0',cellClass: 'text-right',width: '15%'},
                                    { field: 'ShipmentQty', name: 'Shipment Qty',cellFilter: 'number: 0',cellClass: 'text-right',width: '15%'},
                                    { field: 'InvoiceQty', name: 'Invoice Qty',cellFilter: 'number: 0',cellClass: 'text-right',width: '15%'},
                                    { field: 'YetToInvoiceQty', name: 'Yet To Invoice Qty',cellFilter: 'number: 0',cellClass: 'text-right',width: '15%'}
            ],
            data:$scope.CommercialInvoiceList,
            onRegisterApi:function(gridApi)
            {
                
                $scope.DetailGridApi = gridApi;
                debugger;
            }
        };

        $scope.SearchRecap=function()
        {
            var dDateRange = $("#chkIsDateSearch").attr("checked")?true:false;
            var oCommercialInvoice = {BuyerID:$scope.CommercialInvoice.BuyerID, Param:dDateRange+'~'+$scope.SearchShipmentStartDateInString+'~'+$scope.SearchShipmentEndDateInString+'~'+ $scope.SearchStyleNo+'~'+$scope.SearchOrderRecapNo};
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/CommercialInvoice/GetCIDetails', $.param(oCommercialInvoice), config).then(
                            function (response)
                            {
                                debugger;
                                $scope.CommercialInvoiceList = jQuery.parseJSON(response.data);
                                $scope.OrderRecapGridOptions.data = $scope.CommercialInvoiceList;
                            });
        }
        
        $scope.OkDetail = function()
        {
            debugger;

            var oCommercialInvoiceDetails=$scope.DetailGridApi.selection.getSelectedRows();
            if(oCommercialInvoiceDetails.length<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            $uibModalInstance.close(oCommercialInvoiceDetails);
        }

       
        $scope.RecapDetailsClose = function()
        {
            $uibModalInstance.close($scope.obj);
        }

    });
</script>