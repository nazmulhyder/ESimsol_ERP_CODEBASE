@{
    ViewBag.Title = "Re-Order Level Setup";
}
@model IEnumerable<ESimSol.BusinessObjects.ProductStock>
<div class="menuMainCollectionTable">
    <div style="margin-left:0px; height:100%; width:100%">
        <table id="tblProducts" title="Product List" class="easyui-datagrid" fit="true" fitcolumns="true" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="onClickRow: onClickRow">
            <thead>
                <tr>
                    <th field="ProductCode" width="100" sortable="true" order="asc">Product Code</th>
                    <th field="ProductName" width="250" sortable="true" order="asc">Product Name</th>
                    <th field="ProductCategoryName" width="100" sortable="true" order="asc">Product Category</th>
                    <th field="MUnitName" width="70">Unit</th>
                    <th field="CurrentStock" width="120" align="right" formatter="formatPrice" sortable="true" order="asc">Current Stock</th>
                    <th width="120" align="right" data-options="field:'ShortQty', editor:{type:'numberbox', options:{precision:2}}">Re-Order Level</th>
                    <th field="ProductID" width="80" align="center" formatter="FormatCommitButton">Action</th>
                </tr>
            </thead>
        </table>
        <div id="toolbar">
            <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a>
            <select id="cboProductCategory" class="easyui-combotree" style="width:160px;"></select>
            <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Search</a>
            <input type="text" id="txtSearchByCode" placeholder="Search by Code" style="width:120px" />
            <input type="text" id="txtSearchByName" placeholder="Search by Product Name" style="width:200px" />
            <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
        </div>
    </div>        
</div>
 
<script type="text/javascript">        
    $(document).ready(function () {            
        var oProducts =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));            
        $('#tblProducts').data('Products', oProducts);
        RefreshList(oProducts);
        RefreshProductCategory();            
    });    

    $('#btnPrint').click(function (e) {
        var nCategoryID = $('#cboProductCategory').combotree('getValue');
        if(nCategoryID=== undefined || nCategoryID === null || nCategoryID === "" || parseInt(nCategoryID) <=0 )
        {
            alert("Please select product category!");
            return;
        }        
        if(sessionStorage.getItem('BUID') === null || sessionStorage.getItem('BUID') === "" || parseInt(sessionStorage.getItem('BUID')) <=0 )
        {
            alert("Invalid Business Unit! Please try again!");
            return;
        }

        var tsv = ((new Date()).getTime())/1000;
        window.open(sessionStorage.getItem("BaseAddress") + '/Product/PrintReorderLevelSetUp?pcid='+parseInt(nCategoryID)+'&buid='+parseInt(sessionStorage.getItem('BUID'))+"&ts="+tsv, "_blank");
    });

    $('#tblProducts').datagrid({
        onSortColumn: function(sort,order){
            var oProducts = $('#tblProducts').datagrid('getRows');
            var oTempProducts=[];
            if(order=="asc")
            {
                oTempProducts= oProducts.sort(dynamicSort(sort));
            }
            else
            {
                oTempProducts= oProducts.sort(dynamicSort("-"+sort));
            }
            RefreshList(oTempProducts);
        }
    });

    function dynamicSort(property) {
        var sortOrder = 1;
        if(property[0] === "-") {
            sortOrder = -1;
            property = property.substr(1);
        }
        return function (a,b) {
            var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;
            return result * sortOrder;
        }
    }

    $('#btnSearch').click(function (e) {        
        var nCategoryID = $('#cboProductCategory').combotree('getValue');
        if(nCategoryID=== undefined || nCategoryID === null || nCategoryID === "" || parseInt(nCategoryID) <=0 )
        {
            alert("Please select product category!");
            return;
        }        
        if(sessionStorage.getItem('BUID') === null || sessionStorage.getItem('BUID') === "" || parseInt(sessionStorage.getItem('BUID')) <=0 )
        {
            alert("Invalid Business Unit! Please try again!");
            return;
        }
        var oProductStock = {  
            BUID : parseInt(sessionStorage.getItem('BUID')),
            ProductCategoryID : parseInt(nCategoryID) 
        };

        $.ajax
        ({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem("BaseAddress") +  "/Product/GetsForReorderLevel",
            data:  JSON.stringify(oProductStock),
            contentType: "application/json; charset=utf-8",
            success: function (data) {                    
                var oProductStocks = jQuery.parseJSON(data);
                if(oProductStocks!=null)
                {
                    $('#tblProducts').data('Products', oProductStocks);
                    RefreshList(oProductStocks);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });
        
    $('#txtSearchByCode').keyup(function (e) {            
        var c = String.fromCharCode(e.which);
        var txtSearchByCode = $.trim($('#txtSearchByCode').val());
        var oSearchedProducts = [];  var sTempCode="";
        var oProductList = $('#tblProducts').datagrid('getRows');
        if (e.which == 8)
        {
            oProductList = $('#tblProducts').data('Products');
        }
        for(i=0;i<oProductList.length;++i){
            sTempCode=oProductList[i].ProductCode;
            n=sTempCode.toUpperCase().indexOf(txtSearchByCode.toUpperCase())
            if(n!=-1)
            {
                oSearchedProducts.push(oProductList[i]);
            }
        }
        RefreshList(oSearchedProducts);
    });

    $('#txtSearchByName').keyup(function (e) {           
        var c = String.fromCharCode(e.which);
        var txtSearchByName = $.trim($('#txtSearchByName').val());

        var oSearchedProducts = [];  var sTempName="";
        var oProductList = $('#tblProducts').datagrid('getRows');
        if (e.which == 8)
        {
            oProductList = $('#tblProducts').data('Products');
        }
        for(i=0;i<oProductList.length;++i){
            sTempName=oProductList[i].ProductName;
            n=sTempName.toUpperCase().indexOf(txtSearchByName.toUpperCase())
            if(n!=-1)
            {
                oSearchedProducts.push(oProductList[i]);
            }
        }
        RefreshList(oSearchedProducts);
    });

    function RefreshProductCategory()
    {
        var oProductCategory ={  
            ProductCategoryID: 0,
            BusinessUnitID : parseInt(sessionStorage.getItem('BUID'))
        };
        $.ajax
        ({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem("BaseAddress")+  "/ProductCategory/GetsProductCategoryForCombo",
            data:  JSON.stringify(oProductCategory),
            contentType: "application/json; charset=utf-8",
            success: function (data) {                    
                var oProductCategorys = jQuery.parseJSON(data);
                if(oProductCategorys!=null)
                {
                    $('#cboProductCategory').combotree('loadData', oProductCategorys);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    $('#btnRefresh').click(function(){
        var oProducts = $('#tblProducts').datagrid('getRows');
        data=oProducts;
        data={"total":""+data.length+"","rows":data};
        $('#tblProducts').datagrid('loadData',data);
    });
    
    function RefreshList(oProducts)
    {
        data=oProducts;
        data={"total":""+data.length+"","rows":data};
        $('#tblProducts').datagrid('loadData',data);
    }

    function FormatCommitButton(value,row,index)
    {        
        var nid = parseInt(value);
        var sReturn = '<input type="button"  id="btnCommit"'+nid+' value="Commit" onclick="CommitReorderLevel('+nid+','+index+')" style="width:80px; height:19px; font-size:10px; font-weight:bold"/>'        
        return sReturn;
    }

    function CommitReorderLevel(nid, nindex)
    {   
        endEditing();
        $('#tblProducts').datagrid('selectRow',nindex);
        var oProductStock = $('#tblProducts').datagrid('getSelected');
        if(oProductStock === null ||  parseInt(oProductStock.ProductID)<=0)
        {
            alert("Invalid Product!");
            return;
        }
        if(parseFloat(oProductStock.ShortQty)<=0)
        {
            alert("Please enter Re-Order Level Qty!");
            return;
        }
        //alert("Product ID : "+ oProductStock.ProductID + " & Short Qty : "+ parseFloat(oProductStock.ShortQty));
        $.ajax
        ({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem("BaseAddress") +  "/Product/SetReorderLevel",
            data:  JSON.stringify(oProductStock),
            contentType: "application/json; charset=utf-8",
            success: function (data) {                    
                var oProductStock = jQuery.parseJSON(data);
                if(parseInt(oProductStock.ProductID) >0 )
                {
                    alert("Update Successfully");
                    $('#tblProducts').data('Products')[nindex]= oProductStock;
                    $('#tblProducts').datagrid('updateRow',{ index: nindex, row: oProductStock });
                }
                else
                {
                    alert(oProductStock.ErrorMessage)
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });        
    }

    var editIndex = undefined;
    function endEditing(){
        if (editIndex == undefined){return true}
        if ($('#tblProducts').datagrid('validateRow', editIndex)){
            $('#tblProducts').datagrid('endEdit', editIndex);
            editIndex = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }
    function onClickRow(index){
        if (editIndex != index){
            if (endEditing())
            {
                $('#tblProducts').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else
            {
                $('#tblProducts').datagrid('selectRow', editIndex);
            }
        }
    }
</script>
