@model IEnumerable<ESimSol.BusinessObjects.ITaxRateScheme>
@{
    ViewBag.Title = "Rate & Rebate";
}
@{var MenuID = HttpContext.Current.Session[SessionInfo.MenuID];}
<div style="margin-left:0px; height:auto; width:100%">
    <table style="width:97.7%;height:100%;" border="0" >
        <tr style="width:100%; border:none;">
            <td style="width:41%">
                <fieldset style="width:96%; height:200px;">
                    <legend>Rate Scheme</legend>
                    <table>
                        <tr>
                            <td>
                                <a id="btnDelete_ITaxRateScheme" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                                <a id="btnActivity_ITaxRateScheme" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Activity</a>
                            </td>
                        </tr>
                    </table>

                    <table id="tblITaxRateScheme" class="easyui-datagrid" title="Rate Scheme" style="width:100%;height:150px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="onClickRow: onClickRow">
                        <thead style="width:100%">
                            <tr style="width:100%">
                                <th field="TaxPayerTypeString" width="40%" align="left">Payer</th>
                                <th field="TaxAreaString" width="35%" align="left">Area</th>
                                <th field="Activity" width="23%" align="left">Activity</th>
                            </tr>
                        </thead>
                    </table>
                </fieldset>
            </td>

            <td style="width:1%; border:none;" rowspan="3"></td>

            <td style="width:58%">
                <fieldset style="width:100%;height:200px;">
                    <legend>Rate Scheme Add</legend>
                    <table style="width:100%">
                        <tr style="width:100%">
                            <td style="width:20%; text-align:right;">
                                Payer:
                            </td>
                            <td style="width:80%">
                                @Html.DropDownList("TaxPayerType", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumTaxPayerType))), new { id = "cboTaxPayerType", style = "width: 100%;" })
                            </td>
                        </tr>
                        <tr style="width:100%">
                            <td style="width:20%;text-align:right;">
                                Area:
                            </td>
                            <td style="width:80%">
                                @Html.DropDownList("TaxArea", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumTaxArea))), new { id = "cboTaxArea", style = "width: 100%;" })
                            </td>
                        </tr>
                        <tr style="width:100%">
                            <td style="width:20%;text-align:right;">
                                Min Tax :
                            </td>
                            <td style="width:80%">
                                <input class="number" id="txtMinimumTax" type="text" style="width:88%;" />(BDT)
                            </td>
                        </tr>
                        <tr style="width:100%">
                            <td style="width:20%;text-align:right;">
                                Salary Head :
                            </td>
                            <td style="width:80%">
                                <select id="cboSalaryHead" style="width:100%;"></select>
                            </td>
                        </tr>
                        <tr style="width:100%">
                            <td style="text-align:right;" colspan="2">
                                <a id="btnSave_RateScheme" onclick="Save_RateScheme()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            </td>
                        </tr>
                        <tr style="width:100%">
                            <td style="text-align:right;" colspan="2"></td>
                        </tr>
                        <tr style="width:100%">
                            <td style="text-align:left;" colspan="2">
                                <a onclick="Refresh_Child()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">New</a>
                            </td>
                        </tr>

                    </table>

                </fieldset>
            </td>
        </tr>

        <tr style="width:100%; border:none;">
            <td style="border: none;">
                @*<div style="width:100%; height:8px; clear:both;"></div>*@
            </td>
            <td style="border: none;">
                @*<div style="width:100%; height:8px; clear:both;"></div>*@
            </td>
        </tr>

        <tr style="width:100%">
            <td style="width:41%">
                <fieldset style="width:96%;">
                    <legend>Rate Scheme Slab</legend>
                    <table>
                        <tr>
                            <td>
                                @Html.DropDownList("cboSequenceType", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumSequenceType))), new { id = "cboSequenceType", style = "width: 90px;" })
                                <input id="txtAmount" type="text" style="width:70px;" placeholder="Set Amount" class="number" />
                                <input id="txtPercent" type="text" style="width:30px;" class="number" />(%)
                                <a id="btnSave_RateSchemeSlab" onclick="Save_RateSchemeSlab()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                <a id="btnRemove_ITaxRateSlab" onclick="Remove_ITaxRateSlab()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                            </td>
                        </tr>
                    </table>
                    <table id="tblITaxRateSchemeSlab" class="easyui-datagrid" style="width: 100%; height: 210px;
                    font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true"
                           autorowheight="true">
                        <thead>
                            <tr>
                                <th field="SequenceTypeString" width="160px">
                                    Slab
                                </th>
                                <th field="Amount" width="130px" align="right" formatter="formatPrice">
                                    Amount
                                </th>
                                <th field="Percents" width="67px" align="right">
                                    Percent
                                </th>
                            </tr>
                        </thead>
                    </table>
                </fieldset>
            </td>

            <td style="width:58%">
                <fieldset style="width:100%;">
                    <legend>Rebate</legend>
                    <table style="width:100%;">
                        <tr style="width:100%;">
                            <td style="width:58%;">
                                <table style="width:100%;">
                                    <tr style="width:100%">
                                        <td style="width:100%" colspan="2">
                                            @Html.DropDownList("ITaxRebateType", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumITaxRebateType))), new { id = "cboITaxRebateType", style = "width: 28%;" })
                                            Max Limit
                                            <input id="txtMaxRebateAmount" style="width:30%" class="number" type="text" />
                                            <label id="lblCurrency">(BDT)</label> or
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width:100%" colspan="2">
                                            <input id="txtPercentOfTaxIncome" style="width:20%" class="number" type="text" />(%)
                                            of taxable income whichever is lower.
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width:85%" colspan="2">
                                            <input id="txtRebateInPercent" class="number" type="text" style="width:20%" />(%)
                                            of <label id="lblRebateType"></label>
                                        </td>
                                    </tr>
                                    <tr style="width:100%;">
                                        <td colspan="2">
                                            <div>
                                                <a id="btnSave_ITaxRebateScheme" onclick="Save_ITaxRebateScheme()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                                <a id="btnRemove_ITaxRebateScheme" onclick="Remove_ITaxRebateScheme()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                                            </div>
                                        </td>
                                    </tr>
                                </table>

                                <table id="tblITaxRebateScheme" class="easyui-datagrid" style="height: 125px; width:99%;
                        font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" onscroll="true"
                                       autorowheight="true" data-options="onClickRow: onClickRow_RebateSchemeSlab">
                                    <thead>
                                        <tr>
                                            <th field="RebateST" width="590px">
                                                Description
                                            </th>
                                        </tr>
                                    </thead>
                                </table>
                            </td>
                            <td style="width:40%;">
                                <table style="width:100%;">
                                    <tr style="width:100%;">
                                        <td colspan="2" style="font-weight:bold;">Rebate Scheme Slab </td>
                                    </tr>
                                    <tr style="width:100%;">
                                        <td colspan="2"></td>
                                    </tr>
                                    <tr style="width:100%;">
                                        <td style="width:20%;">
                                            Min  :
                                        </td>
                                        <td style="width:80%;">
                                            <input id="txtRebateSchemeSlabMinAmount" class="number" type="text" style="width:90%" />
                                        </td>
                                    </tr>
                                    <tr style="width:100%;">
                                        <td style="width:20%;">
                                            Max  :
                                        </td>
                                        <td style="width:80%;">
                                            <input id="txtRebateSchemeSlabMaxAmount" class="number" type="text" style="width:90%" />
                                        </td>
                                    </tr>
                                    <tr style="width:100%;">
                                        <td colspan="2">
                                            <div>
                                                <a id="btnSave_ITaxRebateSchemeSlab" onclick="Save_ITaxRebateSchemeSlab()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                                <a id="btnRemove_ITaxRebateSchemeSlab" onclick="Remove_ITaxRebateSchemeSlab()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                                            </div>
                                        </td>
                                    </tr>
                                </table>

                                <table id="tblITaxRebateSchemeSlab" class="easyui-datagrid" style="height: 125px; width:96%;
                                font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true"
                                       autorowheight="true">
                                    <thead>
                                        <tr>
                                            <th field="AmountRangeST" width="185px">
                                                Amount Range
                                            </th>
                                        </tr>
                                    </thead>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
        </tr>
    </table>

    <fieldset style="width:97.9%;float:left;">
        <div style="width:100%;  text-align:right;">
            <a id="btnBack" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-back" plain="true">Back</a>
        </div>
    </fieldset>

    <div id="winITaxRebateSchemeSlabDetail" class="easyui-window winstyle" title="Rebate Scheme Slab Detail" style="width:25%;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <table style="width:100%;">
            <tr style="width:100%;">
                <td style="width:28%;text-align:right;">
                    Up to Amount
                </td>
                <td style="width:2%;text-align:center;">
                      :
                </td>
                <td style="width:70%;">
                    <input id="txtRebateSchemeSlabDetailUptoAmount" class="number" type="text" style="width:90%" />
                </td>
            </tr>
            <tr style="width:100%;">
                <td style="width:28%; text-align:right;">
                    Percent
                </td>
                <td style="width:2%;text-align:center;">
                      :
                </td>
                <td style="width:70%;">
                    <input id="txtRebateSchemeSlabDetailPercentAmount" class="number" type="text" style="width:90%" />
                </td>
            </tr>
            <tr style="width:100%;">
                <td colspan="3">
                    <div style="text-align:right;">
                        <a id="btnSave_ITaxRebateSchemeSlabDetail" onclick="Save_ITaxRebateSchemeSlabDetail()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                        <a id="btnRemove_ITaxRebateSchemeSlabDetail" onclick="Remove_ITaxRebateSchemeSlabDetail()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                    </div>
                </td>
            </tr>
        </table>
        <table id="tblITaxRebateSchemeSlabDetail" class="easyui-datagrid" style="width:100%; height:150px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
            <thead>
                <tr>
                    <th field="UptoAmount" width="50%" align="left" formatter="formatPrice">Up to Amount</th>
                    <th field="SlabRebateInPercent" width="45%" align="left" formatter="formatPrice">Percent</th>
                </tr>
            </thead>
        </table>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;width:100%;" >
            <tr>
                
                <td style="width:50%"></td>
                <td style="width:50%; text-align:right;">
                    <a id="winITaxRebateSchemeSlabDetailClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </td>
            </tr>
        </table>
    </div>

</div>

<script type="text/javascript">
    var _oITaxRateSchemes=[];
    var _sBaseAddress="";
    var _oCompany=null;
    var _nITaxRateSchemeID=0;
    var _nITaxRebateSchemeID=0;
    var _nITaxRSSID=0;
    var _nITaxAssessmentYearID=0;
    var _oITaxRateSchemeSlabs=[];
    var _oITaxRebateSchemes=[];
    var _oITaxRebateSchemeSlabs=[];
    var _oITaxRebateSchemeSlabDetails=[];
    var _nMenuid=0;

    $(document).ready(function ()
    {
        @*_oITaxRateSchemes =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));*@
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(MenuID));

        _oITaxRateSchemes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ITaxRateSchemes));
        _oITaxRateSchemeSlabs =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ITaxRateSchemeSlabs));
        _oITaxRebateSchemes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ITaxRebateSchemes));
        _oITaxRebateSchemeSlabs =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ITaxRebateSchemeSlabs));
        _oITaxRebateSchemeSlabDetails =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ITaxRebateSchemeSlabDetails));

        _oCompany= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Company));
        oSalaryHeads= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.SalaryHeads));
        _nITaxAssessmentYearID=sessionStorage.getItem("ITaxAssessmentYearID");
        $("#cboSalaryHead").icsLoadCombo({
            List:oSalaryHeads,
            OptionValue: "SalaryHeadID",
            DisplayText: "Name",
        });
        $('.number').icsCurrencyBox();
        DynamicRefreshList(_oITaxRateSchemes, "tblITaxRateScheme");
    });

    function ValidateInput_RateScheme()
    {
        if(document.getElementById("cboTaxPayerType").selectedIndex == 0)
        {
            alert("Please Select Tax Payer Type!");
            document.getElementById("cboTaxPayerType").style.borderColor = 'red';
            document.getElementById("cboTaxPayerType").focus();
            return false;
        }

        if(document.getElementById("cboTaxArea").selectedIndex == 0 )
        {
            alert("Please Select Tax Area!");
            document.getElementById("cboTaxArea").style.borderColor = 'red';
            document.getElementById("cboTaxArea").focus();
            return false;
        }

        if(document.getElementById("txtMinimumTax").value =="")
        {
            alert("Please Enter Minimum Tax!");
            document.getElementById("txtMinimumTax").style.borderColor = 'red';
            document.getElementById("txtMinimumTax").focus();
            return false;
        }

        if(document.getElementById("cboSalaryHead").selectedIndex == 0 )
        {
            alert("Please Select Salary Head!");
            document.getElementById("cboSalaryHead").style.borderColor = 'red';
            document.getElementById("cboSalaryHead").focus();
            return false;
        }

        return true;
    }

    function RefreshObject_RateScheme()
    {

        var oITaxRateScheme = {
            ITaxRateSchemeID : _nITaxRateSchemeID,
            ITaxAssessmentYearID:_nITaxAssessmentYearID,
            TaxPayerTypeInint: document.getElementById("cboTaxPayerType").selectedIndex,
            TaxAreaInint: document.getElementById("cboTaxArea").selectedIndex,
            MinimumTax: document.getElementById("txtMinimumTax").value,
            SalaryHeadID: $("#cboSalaryHead").val()

        };

        return oITaxRateScheme;
    }

    function Save_RateScheme()
    {
        if (!ValidateInput_RateScheme()) return;
        var oITaxRateScheme = RefreshObject_RateScheme();
        var oOS= {ID:oITaxRateScheme.ITaxRateSchemeID};

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/IncomeTaxBasicSetup/ITaxRateScheme_IU",
            traditional: true,
            data: JSON.stringify(oITaxRateScheme),
            contentType: "application/json; charset=utf-8",

            success: function(data) {
                var oITaxRateScheme = jQuery.parseJSON(data);
                if (oITaxRateScheme.ITaxRateSchemeID > 0) {

                    if(oOS.ID==0)
                    {
                        alert("Data Saved sucessfully");
                        _nITaxRateSchemeID=oITaxRateScheme.ITaxRateSchemeID;
                        var oITaxRateSchemes = $('#tblITaxRateScheme').datagrid('getRows');
                        var nIndex = oITaxRateSchemes.length;
                        $('#tblITaxRateScheme').datagrid('appendRow', oITaxRateScheme);
                        $('#tblITaxRateScheme').datagrid('selectRow', nIndex);
                        Refresh_Child();
                    }
                    else if(oOS.ID>0)
                    {
                        alert("Data Edited sucessfully");
                        _nITaxRateSchemeID=oITaxRateScheme.ITaxRateSchemeID;
                        var oRateScheme = $('#tblITaxRateScheme').datagrid('getSelected');
                        var SelectedRowIndex = $('#tblITaxRateScheme').datagrid('getRowIndex', oRateScheme);
                        $('#tblITaxRateScheme').datagrid('updateRow', { index: SelectedRowIndex, row: oITaxRateScheme });
                    }

                } else {
                    alert(oITaxRateScheme.ErrorMessage);
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    }

    $('#btnDelete_ITaxRateScheme').click(function (e)
    {
        var oITaxRateScheme = $('#tblITaxRateScheme').datagrid('getSelected');
        if (oITaxRateScheme == null || oITaxRateScheme.ITaxRateSchemeID <= 0)
        {
            alert("Please select an item from list!");
            return;
        }

        if (!confirm("Confirm to Delete?")) return;
        var SelectedRowIndex = $('#tblITaxRateScheme').datagrid('getRowIndex', oITaxRateScheme);
        var tsv = ((new Date()).getTime()) / 1000;
        if (oITaxRateScheme.ITaxRateSchemeID > 0)
        {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/IncomeTaxBasicSetup/ITaxRateScheme_Delete",
                data: { nITaxRateSchemeID : oITaxRateScheme.ITaxRateSchemeID,ts: tsv},
                contentType: "application/json; charset=utf-8",
                success: function(data)
                {

                    var feedbackmessage = jQuery.parseJSON(data);

                    if (feedbackmessage == "")
                    {
                        alert("Delete sucessfully");
                        $('#tblITaxRateScheme').datagrid('deleteRow', SelectedRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function(xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    });

    $('#btnActivity_ITaxRateScheme').click(function (e)
    {

        var Act="";
        var oITaxRateScheme = $('#tblITaxRateScheme').datagrid('getSelected');
        if (oITaxRateScheme == null || oITaxRateScheme.ITaxRateSchemeID <= 0)
        {
            alert("Please select an item from list!");
            return;
        }
        if(oITaxRateScheme.IsActive==false)
        {
            Act=true;

        }
        if(oITaxRateScheme.IsActive==true)
        {
            Act=false;

        }
        oITaxRateScheme.IsActive=Act;

        var SelectedRowIndex = $('#tblITaxRateScheme').datagrid('getRowIndex', oITaxRateScheme);
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/IncomeTaxBasicSetup/ITaxRateScheme_Activity",
            traditional: true,
            data: JSON.stringify(oITaxRateScheme),
            contentType: "application/json; charset=utf-8",

            success: function(data) {
                debugger;
                oITaxRateScheme = jQuery.parseJSON(data);
                if (oITaxRateScheme.ITaxRateSchemeID > 0)
                {

                    if(oITaxRateScheme.IsActive==true)
                    {
                        msg="Activated";
                    }
                    if(oITaxRateScheme.IsActive==false)
                    {
                        msg="InActivated";
                    }
                    alert(msg+" Successfully!");
                    $('#tblITaxRateScheme').datagrid('updateRow', { index: SelectedRowIndex, row: oITaxRateScheme });

                }
                else
                {
                    alert(oITaxRateScheme.ErrorMessage);
                }
            }
        });
    });


    function ValidateInput_RateSchemeSlab()
    {
        var oITaxRateScheme = $('#tblITaxRateScheme').datagrid('getSelected');
        if (oITaxRateScheme == null || oITaxRateScheme.ITaxRateSchemeID <= 0)
        {
            alert("Please select an item from list!");
            return;
        }
        else
        {
            _nITaxRateSchemeID = oITaxRateScheme.ITaxRateSchemeID;
        }
        if(document.getElementById("cboSequenceType").selectedIndex == 0)
        {
            alert("Please Select Sequence Type!");
            document.getElementById("cboSequenceType").style.borderColor = 'red';
            document.getElementById("cboSequenceType").focus();
            return false;
        }
        if(document.getElementById("txtAmount").value =="")
        {
            alert("Please Enter Amount!");
            document.getElementById("txtAmount").style.borderColor = 'red';
            document.getElementById("txtAmount").focus();
            return false;
        }

        if(document.getElementById("txtPercent").value =="")
        {
            alert("Please Enter Percent!");
            document.getElementById("txtPercent").style.borderColor = 'red';
            document.getElementById("txtPercent").focus();
            return false;
        }
        return true;
    }

    function RefreshObject_RateSchemeSlab()
    {
        var oITaxRateSlab ={
            ITaxRateSlabID : 0,
            ITaxRateSchemeID : _nITaxRateSchemeID,
            SequenceTypeString : document.getElementById("cboSequenceType").value,
            SequenceTypeInint : document.getElementById("cboSequenceType").selectedIndex,
            Amount : parseFloat(icsRemoveComma(document.getElementById("txtAmount").value)),
            Percents : parseInt(document.getElementById("txtPercent").value)
        }
        return oITaxRateSlab;
    }

    function Save_RateSchemeSlab()
    {
        if (!ValidateInput_RateSchemeSlab()) return;
        var oITaxRateSchemeSlab = RefreshObject_RateSchemeSlab();

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/IncomeTaxBasicSetup/ITaxRateSchemeSlab_IU",
            traditional: true,
            data: JSON.stringify(oITaxRateSchemeSlab),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                var oITaxRateSchemeSlab = jQuery.parseJSON(data);
                if(oITaxRateSchemeSlab.ITaxRateSlabID > 0) {
                    //alert("Data Saved sucessfully");
                    var oITaxRateSchemeSlabs = $('#tblITaxRateSchemeSlab').datagrid('getRows');
                    var nIndex = oITaxRateSchemeSlabs.length;
                    $('#tblITaxRateSchemeSlab').datagrid('appendRow', oITaxRateSchemeSlab);
                    $('#tblITaxRateSchemeSlab').datagrid('selectRow', nIndex);
                    $('#cboSequenceType').focus();
                    document.getElementById("cboSequenceType").selectedIndex =0;
                    document.getElementById("txtAmount").value ="";
                    document.getElementById("txtPercent").value ="";
                } else {
                    alert(oITaxRateSchemeSlab.ErrorMessage);
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    }

    function Remove_ITaxRateSlab()
    {
        var oITaxRateSlab = $('#tblITaxRateSchemeSlab').datagrid('getSelected');
        if (oITaxRateSlab == null)
        {
            alert("Please select an item from list!");
            return;
        }

        var SelectedRowIndex = $('#tblITaxRateSchemeSlab').datagrid('getRowIndex', oITaxRateSlab);

        var tsv = ((new Date()).getTime()) / 1000;
        if (oITaxRateSlab.ITaxRateSlabID > 0)
        {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/IncomeTaxBasicSetup/ITaxRateSlab_Delete",
                data: { nITaxRateSlabID : oITaxRateSlab.ITaxRateSlabID ,ts: tsv},
                contentType: "application/json; charset=utf-8",
                success: function(data)
                {
                    var feedbackmessage = jQuery.parseJSON(data);
                    if(feedbackmessage=="")
                    {
                        alert("Delete Successfully!");
                        $('#tblITaxRateSchemeSlab').datagrid('deleteRow', SelectedRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function(xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    }

    // rebate

    function ValidateInput_ITaxRebateScheme()
    {
        var oITaxRateScheme = $('#tblITaxRateScheme').datagrid('getSelected');
        if (oITaxRateScheme == null || oITaxRateScheme.ITaxRateSchemeID <= 0)
        {
            alert("Please select an item from list!");
            return;
        }
        else
        {
            _nITaxRateSchemeID = oITaxRateScheme.ITaxRateSchemeID;
        }
        if(document.getElementById("cboITaxRebateType").selectedIndex == 0)
        {
            alert("Please Select Rabate Type!");
            document.getElementById("cboITaxRebateType").style.borderColor = 'red';
            document.getElementById("cboITaxRebateType").focus();
            return false;
        }
        if(document.getElementById("txtMaxRebateAmount").value =="")
        {
            alert("Please Enter Max Rebate Amount!");
            document.getElementById("txtMaxRebateAmount").style.borderColor = 'red';
            document.getElementById("txtMaxRebateAmount").focus();
            return false;
        }

        if(document.getElementById("txtPercentOfTaxIncome").value =="")
        {
            alert("Please Enter Percent Of Tax Income!");
            document.getElementById("txtPercentOfTaxIncome").style.borderColor = 'red';
            document.getElementById("txtPercentOfTaxIncome").focus();
            return false;
        }
        if(document.getElementById("txtRebateInPercent").value =="")
        {
            alert("Please Enter Rebate In Percent!");
            document.getElementById("txtRebateInPercent").style.borderColor = 'red';
            document.getElementById("txtRebateInPercent").focus();
            return false;
        }
        return true;
    }

    function RefreshObject_ITaxRebateScheme()
    {
        var oITaxRateSlab ={
            ITaxRebateSchemeID : 0,
            ITaxRateSchemeID : _nITaxRateSchemeID,
            ITaxRebateTypeInint : document.getElementById("cboITaxRebateType").selectedIndex,
            MaxRebateAmount : $("#txtMaxRebateAmount").val(),
            PercentOfTaxIncome : $("#txtPercentOfTaxIncome").val(),
            RebateInPercent : $("#txtRebateInPercent").val(),
        }
        return oITaxRateSlab;
    }

    function Save_ITaxRebateScheme()
    {
        debugger
        if (!ValidateInput_ITaxRebateScheme()) return;
        var oITaxRebateScheme = RefreshObject_ITaxRebateScheme();

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/IncomeTaxBasicSetup/ITaxRebateScheme_IU",
            traditional: true,
            data: JSON.stringify(oITaxRebateScheme),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                var oITaxRebateScheme = jQuery.parseJSON(data);
                if(oITaxRebateScheme.ITaxRebateSchemeID > 0) {
                    alert("Data Saved sucessfully");
                    var oITaxRebateSchemes = $('#tblITaxRebateScheme').datagrid('getRows');
                    var nIndex = oITaxRebateSchemes.length;
                    $('#tblITaxRebateScheme').datagrid('appendRow', oITaxRebateScheme);
                    $('#tblITaxRebateScheme').datagrid('selectRow', nIndex);
                    document.getElementById("cboITaxRebateType").selectedIndex =0;
                    document.getElementById("txtMaxRebateAmount").value ="";
                    document.getElementById("txtPercentOfTaxIncome").value ="";
                    document.getElementById("txtRebateInPercent").value ="";
                } else {
                    alert(oITaxRebateScheme.ErrorMessage);
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    }

    function Remove_ITaxRebateScheme()
    {
        var oITaxRebateScheme = $('#tblITaxRebateScheme').datagrid('getSelected');
        if (oITaxRebateScheme == null)
        {
            alert("Please select an item from list!");
            return;
        }

        var SelectedRowIndex = $('#tblITaxRebateScheme').datagrid('getRowIndex', oITaxRebateScheme);

        var tsv = ((new Date()).getTime()) / 1000;
        if (oITaxRebateScheme.ITaxRebateSchemeID > 0)
        {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/IncomeTaxBasicSetup/ITaxRebateScheme_Delete",
                data: { nITaxRebateSchemeID : oITaxRebateScheme.ITaxRebateSchemeID ,ts: tsv},
                contentType: "application/json; charset=utf-8",
                success: function(data)
                {
                    var feedbackmessage = jQuery.parseJSON(data);
                    if(feedbackmessage=="")
                    {
                        alert("Delete Successfully!");
                        $('#tblITaxRebateScheme').datagrid('deleteRow', SelectedRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function(xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    }

    function onClickRow(index)
    {
        var oITaxRateScheme = $('#tblITaxRateScheme').datagrid('getSelected');
        var nITaxRateSchemeID=oITaxRateScheme.ITaxRateSchemeID;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/IncomeTaxBasicSetup/Gets_RateSchem_With_Salb_And_Rebate",
            traditional: true,
            data: JSON.stringify({nITaxRateSchemeID:nITaxRateSchemeID}),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                var oITaxRebateScheme = jQuery.parseJSON(data);
                if(oITaxRebateScheme.ITaxRateSchemeID > 0) {
                    _nITaxRateSchemeID=oITaxRebateScheme.ITaxRateSchemeID;
                    document.getElementById("cboTaxPayerType").selectedIndex=oITaxRebateScheme.TaxPayerType;
                    document.getElementById("cboTaxArea").selectedIndex=oITaxRebateScheme.TaxArea;
                    document.getElementById("txtMinimumTax").value=oITaxRebateScheme.MinimumTax;
                    $("#cboSalaryHead").val(oITaxRebateScheme.SalaryHeadID);
                    DynamicRefreshList(oITaxRebateScheme.ITaxRateSlabs, "tblITaxRateSchemeSlab");
                    DynamicRefreshList(oITaxRebateScheme.ITaxRebateSchemes, "tblITaxRebateScheme");
                    DynamicRefreshList([], "tblITaxRebateSchemeSlab");
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
        
        //var oITaxRateSchemeSlabs=[];
        //var oITaxRebateSchemes=[];

        //for(var j=0; j<_oITaxRateSchemeSlabs.length;j++)
        //{
        //    if(oITaxRateScheme.ITaxRateSchemeID==_oITaxRateSchemeSlabs[j].ITaxRateSchemeID)
        //    {
        //        oITaxRateSchemeSlabs.push(_oITaxRateSchemeSlabs[j]);
        //    }
        //}
        //for(var k=0; k<_oITaxRebateSchemes.length;k++)
        //{
        //    if(oITaxRateScheme.ITaxRateSchemeID==_oITaxRebateSchemes[k].ITaxRateSchemeID)
        //    {
        //        oITaxRebateSchemes.push(_oITaxRebateSchemes[k]);
        //    }
        //}



    }

    $("#btnBack").click(function () {

        window.location.href = _sBaseAddress+ "/IncomeTaxBasicSetup/View_AssessmentYears?menuid="+_nMenuid;
    });

    $("#cboITaxRebateType").change(function () {
        $("#lblRebateType").html($("#cboITaxRebateType option:selected").text());
    });

    function Refresh_Child()
    {
        _nITaxRateSchemeID=0;
        document.getElementById("cboTaxPayerType").selectedIndex =0;
        document.getElementById("cboTaxArea").selectedIndex =0;
        document.getElementById("txtMinimumTax").value ="";
        document.getElementById("cboSalaryHead").selectedIndex =0;

        document.getElementById("cboSequenceType").selectedIndex =0;
        document.getElementById("txtAmount").value ="";
        document.getElementById("txtPercent").value ="";
        DynamicRefreshList([], "tblITaxRateSchemeSlab");


        document.getElementById("cboITaxRebateType").selectedIndex =0;
        document.getElementById("txtMaxRebateAmount").value ="";
        document.getElementById("txtPercentOfTaxIncome").value ="";
        document.getElementById("txtRebateInPercent").value ="";
        DynamicRefreshList([], "tblITaxRebateScheme");
    }

    // rebate scheme slab start

    function onClickRow_RebateSchemeSlab(index)
    {
        var oITaxRebateScheme = $('#tblITaxRebateScheme').datagrid('getSelected');
        _nITaxRebateSchemeID=oITaxRebateScheme.ITaxRebateSchemeID;
        var oITaxRebateSchemeSlabs=[];
        for(var i=0;i<_oITaxRebateSchemeSlabs.length;i++)
        {
            if(_nITaxRebateSchemeID==_oITaxRebateSchemeSlabs[i].ITaxRebateSchemeID)
            {
                oITaxRebateSchemeSlabs.push(_oITaxRebateSchemeSlabs[i]);
            }
        }
        DynamicRefreshList(oITaxRebateSchemeSlabs, "tblITaxRebateSchemeSlab");
    }

    function ValidateInput_ITaxRebateSchemeSlab()
    {
        if(_nITaxRebateSchemeID<=0)
        {
            alert("Please save or select a rebate scheme!");
            return false;
        }
        if(document.getElementById("txtRebateSchemeSlabMinAmount").value =="")
        {
            alert("Please Enter Min Amount!");
            document.getElementById("txtRebateSchemeSlabMinAmount").style.borderColor = 'red';
            document.getElementById("txtRebateSchemeSlabMinAmount").focus();
            return false;
        }
        if(document.getElementById("txtRebateSchemeSlabMaxAmount").value =="")
        {
            alert("Please Enter Max  Amount!");
            document.getElementById("txtRebateSchemeSlabMaxAmount").style.borderColor = 'red';
            document.getElementById("txtRebateSchemeSlabMaxAmount").focus();
            return false;
        }
        return true;
    }

    function RefreshObject_ITaxRebateSchemeSlab()
    {
        var oITaxRebateSlab ={
            ITaxRSSID : 0,
            ITaxRebateSchemeID : _nITaxRebateSchemeID,
            MinAmount : $("#txtRebateSchemeSlabMinAmount").val(),
            MaxAmount : $("#txtRebateSchemeSlabMaxAmount").val(),
        }
        return oITaxRebateSlab;
    }

    function Save_ITaxRebateSchemeSlab()
    {
        if (!ValidateInput_ITaxRebateSchemeSlab()) return;
        var oITaxRebateSchemeSlab = RefreshObject_ITaxRebateSchemeSlab();

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/IncomeTaxBasicSetup/ITaxRebateSchemeSlab_IU",
            traditional: true,
            data: JSON.stringify(oITaxRebateSchemeSlab),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                var oITaxRebateSchemeSlab = jQuery.parseJSON(data);
                if(oITaxRebateSchemeSlab.ITaxRSSID > 0) {
                    alert("Data Saved sucessfully");
                    var oITaxRebateSchemeSlabs = $('#tblITaxRebateScheme').datagrid('getRows');
                    var nIndex = oITaxRebateSchemeSlabs.length;
                    $('#tblITaxRebateSchemeSlab').datagrid('appendRow', oITaxRebateSchemeSlab);
                    $('#tblITaxRebateSchemeSlab').datagrid('selectRow', nIndex);
                    $("#txtRebateSchemeSlabMinAmount").val("");
                    $("#txtRebateSchemeSlabMaxAmount").val("");
                    _oITaxRebateSchemeSlabs.push(oITaxRebateSchemeSlab);

                } else {
                    alert(oITaxRebateSchemeSlab.ErrorMessage);
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    }

    function Remove_ITaxRebateSchemeSlab()
    {
        var oITaxRebateSchemeSlab = $('#tblITaxRebateSchemeSlab').datagrid('getSelected');
        if (oITaxRebateSchemeSlab == null)
        {
            alert("Please select an item from list!");
            return;
        }

        var SelectedRowIndex = $('#tblITaxRebateSchemeSlab').datagrid('getRowIndex', oITaxRebateSchemeSlab);

        var tsv = ((new Date()).getTime()) / 1000;
        if (oITaxRebateSchemeSlab.ITaxRSSID > 0)
        {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/IncomeTaxBasicSetup/ITaxRebateSchemeSlab_Delete",
                data: { nITaxRSSID : oITaxRebateSchemeSlab.ITaxRSSID,ts: tsv},
                contentType: "application/json; charset=utf-8",
                success: function(data)
                {
                    var feedbackmessage = jQuery.parseJSON(data);
                    if(feedbackmessage=="Deleted")
                    {
                        alert("Delete Successfully!");
                        $('#tblITaxRebateSchemeSlab').datagrid('deleteRow', SelectedRowIndex);

                        var oList=[];
                        for(var i=0; i<_oITaxRebateSchemeSlabs.length; i++)
                        {
                            if(_oITaxRebateSchemeSlabs[i].ITaxRSSID!=oITaxRebateSchemeSlab.ITaxRSSID)
                            {
                                oList.push(_oITaxRebateSchemeSlabs[i]);
                            }
                        }
                        _oITaxRebateSchemeSlabs=[];
                        _oITaxRebateSchemeSlabs=oList;
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function(xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    }
    
    $(function(){
        $('#tblITaxRebateSchemeSlab').datagrid({
            onDblClickRow: function(rowIndex) {
             
                $('#tblITaxRebateSchemeSlab').datagrid('selectRow',rowIndex);
                var oITaxRebateSchemeSlab =$("#tblITaxRebateSchemeSlab").datagrid("getSelected");
                _nITaxRSSID=oITaxRebateSchemeSlab.ITaxRSSID;

                $("#txtRebateSchemeSlabDetailUptoAmount").val("");
                $("#txtRebateSchemeSlabDetailPercentAmount").val("");
                GetsITaxRebateSchemeSlabDetail();
                //var ITaxRSSDetails=[]
                //for(var i=0; i< _oITaxRebateSchemeSlabDetails.length;i++)
                //{
                //    if(_nITaxRSSID==_oITaxRebateSchemeSlabDetails[i].ITaxRSSID)
                //    {
                //        ITaxRSSDetails.push(_oITaxRebateSchemeSlabDetails[i]);
                //    }
                //}
                //DynamicRefreshList(ITaxRSSDetails, "tblITaxRebateSchemeSlabDetail");
                $("#winITaxRebateSchemeSlabDetail").icsWindow('open');
            }
        });
    });
    
    function GetsITaxRebateSchemeSlabDetail()
    {
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/IncomeTaxBasicSetup/GetsITaxRebateSchemeSlabDetail",
            traditional: true,
            data: JSON.stringify({nITaxRSSID:_nITaxRSSID}),
            contentType: "application/json; charset=utf-8",
            success: function(data) 
            {
                var oITaxRebateSchemeSlabDetails = jQuery.parseJSON(data);
                if(oITaxRebateSchemeSlabDetails.length> 0 && oITaxRebateSchemeSlabDetails[0].ErrorMessage=="") 
                {
                    DynamicRefreshList(oITaxRebateSchemeSlabDetails, "tblITaxRebateSchemeSlabDetail");
                } 
                else 
                {
                    alert(oITaxRebateSchemeSlabDetails[0].ErrorMessage);
                }
            },
            error: function(xhr, status, error) 
            {
                alert(error);
            }
        });
    }

    $("#winITaxRebateSchemeSlabDetailClose").click(function () {
        $("#winITaxRebateSchemeSlabDetail").icsWindow('close');
    });
    
    // rebate scheme slab end

    // rebate scheme slab detail start
    function ValidateInput_ITaxRebateSchemeSlabDetail()
    {
        if(_nITaxRSSID<=0)
        {
            alert("Please save or select a rebate scheme Slab!");
            return false;
        }
        if(document.getElementById("txtRebateSchemeSlabDetailUptoAmount").value =="")
        {
            alert("Please Enter Up to Amount!");
            document.getElementById("txtRebateSchemeSlabDetailUptoAmount").style.borderColor = 'red';
            document.getElementById("txtRebateSchemeSlabDetailUptoAmount").focus();
            return false;
        }
        if(document.getElementById("txtRebateSchemeSlabDetailPercentAmount").value =="")
        {
            alert("Please Enter Percent  Amount!");
            document.getElementById("txtRebateSchemeSlabDetailPercentAmount").style.borderColor = 'red';
            document.getElementById("txtRebateSchemeSlabDetailPercentAmount").focus();
            return false;
        }
        return true;
    }

    function RefreshObject_ITaxRebateSchemeSlabDetail()
    {
        var oITaxRebateSlabDetail ={
            ITaxRSSDID : 0,
            ITaxRSSID : _nITaxRSSID,
            UptoAmount : $("#txtRebateSchemeSlabDetailUptoAmount").val(),
            SlabRebateInPercent : $("#txtRebateSchemeSlabDetailPercentAmount").val(),
        }
        return oITaxRebateSlabDetail;
    }

    function Save_ITaxRebateSchemeSlabDetail()
    {
        if (!ValidateInput_ITaxRebateSchemeSlabDetail()) return;
        var oITaxRebateSchemeSlabDetail = RefreshObject_ITaxRebateSchemeSlabDetail();

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/IncomeTaxBasicSetup/ITaxRebateSchemeSlabDetail_IU",
            traditional: true,
            data: JSON.stringify(oITaxRebateSchemeSlabDetail),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                var oITaxRebateSchemeSlabDetail = jQuery.parseJSON(data);
                if(oITaxRebateSchemeSlabDetail.ITaxRSSDID > 0) {
                    alert("Data Saved sucessfully");
                    var oITaxRebateSchemeSlabDetails = $('#tblITaxRebateSchemeSlabDetail').datagrid('getRows');
                    var nIndex = oITaxRebateSchemeSlabDetails.length;
                    $('#tblITaxRebateSchemeSlabDetail').datagrid('appendRow', oITaxRebateSchemeSlabDetail);
                    $('#tblITaxRebateSchemeSlabDetail').datagrid('selectRow', nIndex);
                    $("#txtRebateSchemeSlabDetailUptoAmount").val("");
                    $("#txtRebateSchemeSlabDetailPercentAmount").val("");

                } else {
                    alert(oITaxRebateSchemeSlabDetail.ErrorMessage);
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    }

    function Remove_ITaxRebateSchemeSlabDetail()
    {
        var oITaxRebateSchemeSlabDetail = $('#tblITaxRebateSchemeSlabDetail').datagrid('getSelected');
        if (oITaxRebateSchemeSlabDetail == null)
        {
            alert("Please select an item from list!");
            return;
        }

        var SelectedRowIndex = $('#tblITaxRebateSchemeSlabDetail').datagrid('getRowIndex', oITaxRebateSchemeSlabDetail);
        var tsv = ((new Date()).getTime()) / 1000;
        if (oITaxRebateSchemeSlabDetail.ITaxRSSDID > 0)
        {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/IncomeTaxBasicSetup/ITaxRebateSchemeSlabDetail_Delete",
                data: { nITaxRSSDID : oITaxRebateSchemeSlabDetail.ITaxRSSDID,ts: tsv},
                contentType: "application/json; charset=utf-8",
                success: function(data)
                {
                    var feedbackmessage = jQuery.parseJSON(data);
                    if(feedbackmessage=="Deleted")
                    {
                        alert("Delete Successfully!");
                        $('#tblITaxRebateSchemeSlabDetail').datagrid('deleteRow', SelectedRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function(xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    }
    // rebate scheme slab detail end
</script>
