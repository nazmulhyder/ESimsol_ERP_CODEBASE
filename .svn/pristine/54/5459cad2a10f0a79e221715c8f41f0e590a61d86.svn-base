<html>
@{
    ViewBag.Title = "Landing Cost";
}
<body>
@model ESimSol.BusinessObjects.PurchaseInvoice
    <div id="progbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable" id="divPurchaseInvoice" class="easyui-panel" title="Add  Invoice" style="font-family:Tahoma; height:100%; width:100%">
        <div id="divPurchaseInvoiceBasicInfo" style="width:100%; height:28%;text-align:center">
            <fieldset style="height:100%">
                <legend style="font-weight: bold"> Landing Cost Informations : </legend>
                <table border="0" cellspacing="1" cellpadding="1" style="width:100%;font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:10%; text-align:right">
                            Invoice Type 
                        </td>
                        <td style="width:13%; text-align:left;">
                            <select id="cboInvoiceType" style=" width:100%;" @*onchange="InvoiceTypeChange()"*@></select>
                        </td>
                        <td style="width:7%; text-align:right;">
                            Reference
                        </td>
                        <td style="width:13%; text-align:left;">
                            <select id="cboReferenceType" style=" width:98%;"></select>
                        </td>
                        <td style="width:9%; text-align:right;">
                            Invoice Date
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:96%;" id="txtInvoiceDate" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>                        
                        <td style="width:10%; text-align:right;">
                            PO No
                        </td>
                        <td  style="width:25%;">                          
                            <input type="text" style="width:80%; text-align:left" id="txtPONo" />
                            <input type="button" value="Pick" style="width:15%" id="btnPickPO" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right">
                            Supplier Name
                        </td>
                        <td colspan="3" style="width:33%; text-align:left;">
                            <input type="text" style="width:82%; text-align:left" id="txtSupplierName" />
                            <input type="button" value="Pick" style="width:15%" id="btnPickSupplier" />                            
                        </td>                        
                        <td style="width:9%; text-align:right;">
                            C. Person
                        </td>
                        <td style="width:13%; text-align:left;">
                            <select id="cboSCPerson" style="width:98%;"></select>
                        </td>
                        <td style="width:10%; text-align:right;">
                            Payment Term
                        </td>
                        <td style="width:25%;">
                            <input type="text" style="width:68%; text-align:left" id="txtPaymentTerm" />
                            <input type="button" id="btnCPTerm" value="C" style="width:10%" />
                            <input type="button" value="Pick" style="width:15%" id="btnPickPaymentTerm" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right">
                            Invoice No
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:95%; text-align:left" id="txtInvoiceNo" disabled="disabled" />
                        </td>
                        <td style="width:7%; text-align:right;">
                            Bill NO
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:94%; text-align:left" id="txtBILLNo" />
                        </td>
                        <td style="width:9%; text-align:right;">
                            PO Date
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:96%;" id="txtPODate" class="easyui-datebox" disabled="disabled" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                        <td style="width:10%; text-align:right;">
                            PO Amount
                        </td>
                        <td style="width:25%;">
                            <table border="0" cellspacing="0" cellpadding="0" style="width:98%">
                                <tr>
                                    <td style="width:30%">
                                        <input type="text" style="width:90%; text-align:right" id="txtPOAmount" disabled="disabled" />
                                    </td>
                                    <td style="width:30%; text-align:right;font-size:10px;">
                                        Maturity Date
                                    </td>
                                    <td style="width:40%; text-align:right;">
                                        <input type="text" style="width:101%;" id="txtMaturityDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />                            
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right">
                            Payment Method 
                        </td>
                        <td colspan="3" style="width:33%; text-align:left;">
                            <select id="cboPaymentMethod" style=" width:98%;" onchange="PaymentMethodChange()"></select>
                        </td>
                        <td style="width:9%; text-align:right;">
                          Bill  Date
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:96%;" id="txtBillDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />                            
                        </td>
                        <td style="width:10%; text-align:right;">
                            Currency 
                        </td>
                        <td style="width:25%;">
                            <table border="0" cellspacing="0" cellpadding="0" style="width:98%">
                                <tr>
                                    <td style="width:30%">
                                        <select id="cboCurrency" style="width:99%;"></select>
                                    </td>                                    
                                    <td style="width:30%; text-align:right">
                                        C. Rate
                                    </td>
                                    <td style="width:40%">                                        
                                        <input type="text" style="width:94%; text-align:left" id="txtConvertionRate"/> 
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>

                    <tr>
                        <td style="width:10%; text-align:right">
                            Bank A/C 
                        </td>
                        <td colspan="3" style="width:33%; text-align:left;">
                            <select id="cboBankAC" style=" width:98%;"></select>
                        </td>
                        
                        <td style="width:10%; text-align:right">
                            Remarks
                        </td>
                        <td colspan="5" style="width:33%; text-align:left;">
                            <input type="text" style="width:98%; text-align:left" id="txtNote" />
                        </td>
                    </tr>
                                    
                </table>
            </fieldset>
        </div>
        <div title="Item Description" style="height:60%;">
            <table id="tblLandingCost" title="Landing Cost Detail" class="easyui-datagrid" style="width:100%;height:88%;" fitcolumns="true" singleselect="true" rownumbers="true" pagination="false" autorowheight="false"
                   data-options="toolbar: '#toolbarLandingCost',onClickRow:onClickRow ">
                <thead>
                    <tr>
                        <th field="LCNo" width="13%" align="left"> LC No </th>
                        <th field="ShipmentDateSt" width="10%" align="left">Shipment Date</th>
                        <th field="InvoiceNo" width="10%" align="left">Invoice No</th>
                        <th field="InvoiceDateSt" width="9%" align="left">Invoice Date</th>
                        <th field="ProductCode" width="9%" align="left">Product Code</th>
                        <th field="ProductName" width="10%" align="left">Product Name</th> 
                        <th field="CostHeadCode" width="9%" align="left">Code</th>
                        <th field="CostHeadName" width="10%" align="left">Cost Head</th>                        
                        <th data-options="field:'Remarks',align:'left',editor:{type:'textbox'}" width="10%"> Remark </th>
                        <th data-options="field:'Amount',align:'right',editor:{type:'numberbox',options:{precision:2}}" width="9%">Amount</th>                       
                    </tr>
                </thead>
            </table>
                <div id="toolbarLandingCost">
                    <input id="txtLCNo" type="text" style="width:120px; margin-top:2px" placeholder="LC No" />&nbsp;
                    <input id="txtLandingInvoiceNo" type="text" style="width:120px; margin-top:2px" placeholder="Invoice No" />&nbsp;
                    <input id="txtProductName" type="text" style="width:120px; margin-top:2px" placeholder="Product Name" />&nbsp;
                    <select id="cboLandingCostType" style="width:90px;"><option value="0">Ledger</option> <option value="1">Sub Ledger</option></select>
                    <input id="txtCostHead" type="text" style="width:150px; margin-top:2px" placeholder="Cost Head" /> 
                    <input id="txtRemarks" type="text" style="width:130px; margin-top:2px" placeholder="Remarks" /> 
                    Amount : <input id="txtCostHeadAmount" type="text" style="width:90px; margin-top:2px; text-align:right" />                    
                    <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"> </a>
                    <a id="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true"></a>
                    <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a>                    
                </div>
                <table id="tblOpenInvoiceTotal" border="0" style="width:100%;" cellpadding="2" cellspacing="2">
                    <tr>
                        <td style="width:35%;  text-align:right;font-weight:bold;"></td>
                        <td style="width:10%;  text-align:right;font-weight:bold;"></td>
                        <td style="width:10%; text-align:right; font-weight:bold;">Total:</td>
                        <td style="width:20%; text-align:right; font-weight:bold;"><label id="lblTotalValue">0</label>  </td>
                    </tr>
                </table>
            </div>
        <div style="width:100%; height:8%">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="0" cellpadding="0" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:70%; text-align:right">
                            <div style="width: 95%;margin: 0 auto;text-align: center;font-size: 15px; float: left;">                                
                            </div>
                        </td>
                        <td style="width: 20%;text-align:right;">
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>                            
                        </td>
                        <td style="width: 10%;text-align:right;">
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
</body>
</html>

<script type="text/javascript">
    $(document).ready(function () {
        debugger;
        var oPurchaseInvoice =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oPInvoiceTypeObjs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PInvoiceTypeObjs));
        var oInvoiceReferenceTypeObjs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.InvoiceReferenceTypeObj));
        var oCurrencys= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oCompany= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));
        var oClientOperationSetting = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ClientOperationSetting));
        var oPaymentMethod = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PaymentMethod));
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").hide();
        $('#txtLCNo').data('ImportLC', null);
        $('#txtLandingInvoiceNo').data('ImportInvoice', null);
        $('#txtLandingInvoiceNo').data('PurchaseInvoice', null);
        $('#txtProductName').data('ImportInvoiceDetail', []);
        $('#txtProductName').data('PurchaseInvoiceDetail', null);
        
        $('#txtCostHead').data('CostHead', null);
        $('#txtCostHead').data('ClientOperationSetting', oClientOperationSetting);
        $('#txtConvertionRate,#txtCostHeadAmount').icsCurrencyBox();
        $('#cboInvoiceType').data('PInvoiceTypes', oPInvoiceTypeObjs);
        $('#cboPaymentMethod').data('PaymentMethods', oPaymentMethod);
        //$('#cboBankAC').data('BankAccounts', oBankAccounts);

        $('#cboReferenceType').data('InvoiceReferenceType', oInvoiceReferenceTypeObjs);
        $('#cboCurrency').data('Currencys', oCurrencys);
        $('#divPurchaseInvoice').data('Company', oCompany);
        $('#divPurchaseInvoice').data('PurchaseInvoice', oPurchaseInvoice);
        RefreshComboBox();
        RefreshLayout();
        RefreshControl();
        RefreshSummery();
    });

    function updateProgress() {
        var value =$('#progbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds) {
        $("#progbarParent").hide();
    }

    function RefreshComboBox()
    {
        debugger;
        var oPInvoiceTypes = $('#cboInvoiceType').data('PInvoiceTypes');
        var oPaymentMethod = $('#cboPaymentMethod').data('PaymentMethods');
        //var oBankAccounts = $('#cboBankAC').data('BankAccounts');
        var oBankAccounts = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BankAccounts));
        var oInvoiceReferenceTypes = $('#cboReferenceType').data('InvoiceReferenceType');
        var oCurrencys = $('#cboCurrency').data('Currencys');
        var oMarketingAccounts = $('#cboMKTPerson').data('MKTPersons');

        $("#cboInvoiceType").icsLoadCombo({ List: oPInvoiceTypes, OptionValue: "id", DisplayText: "Value" });
        $("#cboPaymentMethod").icsLoadCombo({ List: oPaymentMethod, OptionValue: "id", DisplayText: "Value" });
        $("#cboBankAC").icsLoadCombo({ List: oBankAccounts, OptionValue: "BankAccountID", DisplayText: "AccountWithBankName" });
        $("#cboReferenceType").icsLoadCombo({ List: oInvoiceReferenceTypes, OptionValue: "id", DisplayText: "Value" });
        $("#cboCurrency").icsLoadCombo({ List: oCurrencys, OptionValue: "CurrencyID", DisplayText: "NameSymbol" });

        var oPurchaseInvoice = $('#divPurchaseInvoice').data('PurchaseInvoice');
        $("#cboInvoiceType").val(oPurchaseInvoice.InvoiceTypeInt);
        $("#cboPaymentMethod").val(oPurchaseInvoice.PaymentMethodInt);
        $("#cboBankAC").val(oPurchaseInvoice.BankAccountID);
        $("#cboReferenceType").val(oPurchaseInvoice.RefTypeInt);
        $("#cboCurrency").val(oPurchaseInvoice.CurrencyID);
    }

    function RefreshLayout()
    {
        //InvoiceType: Standard = 1, Advance = 2
        //ReferenceType : Open = 1, PO = 2, Import = 3, Local = 4
        var nInvoiceType = parseInt($("#cboInvoiceType").val());
        var nReferenceType = parseInt($("#cboReferenceType").val());
        $('#txtPONo,#btnPickPO').prop('disabled', true);
        $('#txtLCNo').val('');
        if(nReferenceType===3)
        {
            $('#txtLCNo').show();
        }
        else if (nReferenceType===4)
        {
            $('#txtLCNo').hide();
        }

        var sPurchaseInvoiceHeader = sessionStorage.getItem("PurchaseInvoiceHeader");
        if (sPurchaseInvoiceHeader != "Add PurchaseInvoice") {
            var nContractorID=parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID);
            $('#txtSupplierName').css('color', 'blue');
            $('#txtSupplierName').css('fontWeight', 'bold');
            LoadContactPerson(nContractorID);
        }

        if (sPurchaseInvoiceHeader === "View PurchaseInvoice") {
            $('#divPurchaseInvoiceBasicInfo,#toolbarLandingCost').find('input, textarea, button, select').attr('disabled','disabled');
            document.getElementById("cboBankAC").disabled = true;
            document.getElementById("cboPaymentMethod").disabled = true;
            $('#btnSave').hide();
        }
    }

    function RefreshControl()
    {
        var oPurchaseInvoice = $('#divPurchaseInvoice').data('PurchaseInvoice');
        $('#cboInvoiceType').val(oPurchaseInvoice.InvoiceTypeInt);
        $('#cboReferenceType').val(oPurchaseInvoice.RefTypeInt);
        $('#txtInvoiceDate').datebox('setValue', oPurchaseInvoice.DateofInvoiceSt);
        $('#txtPONo').val(oPurchaseInvoice.PONo);
        $('#txtSupplierName').val(oPurchaseInvoice.ContractorName);
        $('#cboSCPerson').val(oPurchaseInvoice.ContractorPersonalID);
        $('#txtPaymentTerm').val(oPurchaseInvoice.PaymentTermText);
        $('#txtInvoiceNo').val(oPurchaseInvoice.PurchaseInvoiceNo);
        $('#txtBILLNo').val(oPurchaseInvoice.BillNo);
        $('#txtPODate').datebox('setValue', oPurchaseInvoice.PODateST);
        $('#txtPOAmount').val(oPurchaseInvoice.POAmountSt);
        $('#txtMaturityDate').datebox('setValue', oPurchaseInvoice.DateofMaturitySt);
        $('#txtNote').val(oPurchaseInvoice.Note);
        $('#txtBillDate').datebox('setValue', oPurchaseInvoice.DateofBillSt);
        $('#cboCurrency').val(oPurchaseInvoice.CurrencyID);
        $('#txtConvertionRate').val(oPurchaseInvoice.ConvertionRateSt);
        $('#txtSupplierName,#txtPaymentTerm').addClass('fontColorOfPickItem');
        var oClientOperationSetting = $('#txtCostHead').data('ClientOperationSetting');
        if(parseInt(oClientOperationSetting.ClientOperationSettingID)>0)
        {
            if(oClientOperationSetting.Value==true)//for Ledger
            {
                $('#cboLandingCostType').val(0);
            }else{
                $('#cboLandingCostType').val(1);//for Subledger
            }
        }
        RefreshList(oPurchaseInvoice.PurchaseInvoiceDetails);
        ChangeCurrency(false);
        RefreshSummery();
        editIndex=undefined;
    }

    $('#cboInvoiceType').change(function(e){
        RefreshLayout();
        $('#divPurchaseInvoice').data('PurchaseInvoice').POID=0;
        $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID=0;
        $('#txtPONo,#txtPOAmount,#txtSupplierName').val('');
        $('#txtPODate').datebox('setValue', '');
        $('#txtLCNo').data('ImportLC', null);
        $('#txtLandingInvoiceNo').data('ImportInvoice', null);
        $('#txtLandingInvoiceNo').data('PurchaseInvoice', null);      
        $('#txtProductName').data('ImportInvoiceDetail', []);
        $('#txtProductName').data('PurchaseInvoiceDetail', null);
        $('#txtCostHead').data('CostHead', null);
        RefreshList([]);

        var val = $('#cboInvoiceType').val();
        if(val == 2){
            //$('#cboEmployee').show();
            document.getElementById("cboPaymentMethod").disabled = false;
        }
        else{
            //$('#cboEmployee').hide();
            document.getElementById("cboPaymentMethod").disabled = true;
            $('#cboPaymentMethod').val('');
            $('#cboBankAC').val('');
        }

    });

    $('#cboReferenceType').change(function(e){
        RefreshLayout();
        $('#divPurchaseInvoice').data('PurchaseInvoice').POID=0;
        $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID=0;
        $('#txtPONo,#txtPOAmount,#txtSupplierName').val('');
        $('#txtPODate').datebox('setValue', '');
        $('#txtLCNo').data('ImportLC', null);
        $('#txtLandingInvoiceNo').data('ImportInvoice', null);
        $('#txtLandingInvoiceNo').data('PurchaseInvoice', null);       
        $('#txtProductName').data('ImportInvoiceDetail', []);
        $('#txtProductName').data('PurchaseInvoiceDetail', null);
        $('#txtCostHead').data('CostHead', null);
        RefreshList([]);
    });

    $('#cboCurrency').change(function(e){
        ChangeCurrency(true);
    });

    function ChangeCurrency(bIsComboChange)
    {
        var oCompany= $('#divPurchaseInvoice').data('Company');
        var oCurrencys = $('#cboCurrency').data('Currencys');
        var nCurrencyID = $("#cboCurrency").val();
        for(var i=0;i<oCurrencys.length;i++)
        {
            if(parseInt(oCurrencys[i].CurrencyID) == parseInt(nCurrencyID))
            {
                if(parseInt(oCurrencys[i].CurrencyID) === parseInt(oCompany.BaseCurrencyID))
                {
                    $('#txtConvertionRate').val(1);
                    $("#txtConvertionRate" ).prop( "disabled", true );
                }else{
                    if(bIsComboChange)
                    {
                        $('#txtConvertionRate').val(0.00);
                        $("#txtConvertionRate" ).prop( "disabled", false);
                    }
                }
                RefreshSummery();
                break;
            }
        }
    }

    function ValidateInput()
    {
        var oPurchaseInvoice = $('#divPurchaseInvoice').data('PurchaseInvoice');
        if(oPurchaseInvoice===null)
        {
            alert("Invalid Purchase Invoice!\nPlease refresh & try again!");
            return false;
        }
        if(parseInt(sessionStorage.getItem('BUID'))<=0)
        {
            alert("Invalid Business Unit!\nPlease refresh & try again!");
            return false;
        }
        var nInvoiceType= parseInt($('#cboInvoiceType').val());
        if(parseInt(nInvoiceType)<=0)
        {
            alert("Please Select Invoice Type");
            $('#cboInvoiceType').focus();
            return false;
        }
        var nReferenceType=parseInt($('#cboReferenceType').val());
        if(parseInt(nReferenceType)<=0)
        {
            alert("Please Select Reference Type");
            $('#cboReferenceType').focus();
            return false;
        }
        var sInvoiceDate = $('#txtInvoiceDate').datebox('getValue');
        if(sInvoiceDate === null || sInvoiceDate ==="")
        {
            alert("Please select Invoice Date!");
            $('#txtInvoiceDate').focus();
            return false;
        }

        if(parseInt(oPurchaseInvoice.ContractorID)<=0)
        {
            alert("Please select an Supplier!");
            $('#txtSupplierName').focus();
            return false;
        }
        if(parseInt($('#cboSCPerson').val())<=0)
        {
            alert("Please select Contact Person!");
            $('#cboSCPerson').focus();
            return false;
        }
        if(parseInt(oPurchaseInvoice.PaymentTermID)<=0)
        {
            alert("Please select Payment Term!");
            $('#txtPaymentTerm').focus();
            return false;
        }
        if($.trim($("#txtBILLNo").val())===null || $.trim($("#txtBILLNo").val())==="")
        {
            alert("Please enter Bill No!");
            $('#txtBillNo').focus();
            return false;
        }
        var sMaturityDate = $('#txtMaturityDate').datebox('getValue');
        if(sMaturityDate === null || sMaturityDate ==="")
        {
            alert("Please select Maturity Date!");
            $('#txtMaturityDate').focus();
            return false;
        }
        var sBillDate = $('#txtBillDate').datebox('getValue');
        if(sBillDate === null || sBillDate ==="")
        {
            alert("Please select Bill Date!");
            $('#txtBillDate').focus();
            return false;
        }
        if(parseInt($('#cboCurrency').val())<=0)
        {
            alert("Please select Currency!");
            $('#cboCurrency').focus();
            return false;
        }
        var sConvertionRate =  $('#txtConvertionRate').val();
        if(sConvertionRate===null || sConvertionRate=== "")
        {
            alert("Please Enter Conversion Rate!");
            $('#txtConvertionRate').focus();
            return false;
        }

        var nConvertionRate = icsRemoveComma(sConvertionRate);
        if(nConvertionRate<=0)
        {
            alert("Please Enter Conversion Rate!");
            $('#txtConvertionRate').focus();
            return false;
        }
        var oPIDetails = $('#tblLandingCost').datagrid('getRows');
        if(oPIDetails.length<=0)
        {
            alert("Please Add At least one CostHead in Detail.");
            return false;
        }
        if(oPIDetails.length>0)
        {
            var nTotalAmount=0;
            for(var i = 0;i<oPIDetails.length;i++)
            {
                if(parseFloat(oPIDetails[i].Amount)<=0)
                {
                    alert("Please enter amount for  ''"+oPIDetails[i].CostHeadName+"''");
                    return false;
                }
                nTotalAmount = nTotalAmount + parseFloat(oPIDetails[i].Amount);
            }
            if(parseFloat(nTotalAmount)<=0)
            {
                alert("Total Amount should be Greater than Zero");
                return false;
            }
        }
        return true;
    }

    function RefreshObject()
    {
        var nInvoiceAmount=0;
        var oTempPurchaseInvoice = $('#divPurchaseInvoice').data('PurchaseInvoice');
        var oPurchaseInvoiceDetails =$('#tblLandingCost').datagrid('getRows');
        for(i=0; i<oPurchaseInvoiceDetails.length;i++)
        {
            nInvoiceAmount = nInvoiceAmount + parseFloat(oPurchaseInvoiceDetails[i].Amount);
        }
        var oPurchaseInvoice= {
            PurchaseInvoiceID : parseInt(oTempPurchaseInvoice.PurchaseInvoiceID),
            PurchaseInvoiceNo : $.trim($('#txtInvoiceNo').val()),
            BUID : parseInt(sessionStorage.getItem('BUID')),
            BillNo : $.trim($('#txtBILLNo').val()),
            DateofBill : $('#txtBillDate').datebox('getValue'),
            DateofInvoice : $('#txtInvoiceDate').datebox('getValue'),
            InvoiceTypeInt : parseInt($('#cboInvoiceType').val()),
            InvoiceStatusInt :parseInt(oTempPurchaseInvoice.InvoiceStatusInt),
            RefTypeInt : parseInt($('#cboReferenceType').val()),
            POID : parseInt(oTempPurchaseInvoice.POID),
            ContractorID : parseInt(oTempPurchaseInvoice.ContractorID),
            ContractorPersonalID :parseInt($('#cboSCPerson').val()),
            Amount : parseFloat(nInvoiceAmount),
            CurrencyID :parseInt($('#cboCurrency').val()),
            ConvertionRate : parseFloat(icsRemoveComma($('#txtConvertionRate').val())),
            DateofMaturity : $('#txtMaturityDate').datebox('getValue'),
            Note : $.trim($('#txtNote').val()),
            ApprovedBy : parseInt(oTempPurchaseInvoice.ApprovedBy),
            ApprovedDate : oTempPurchaseInvoice.ApprovedDateST,
            PaymentTermID : parseInt(oTempPurchaseInvoice.PaymentTermID),
            PurchaseInvoiceDetails : oPurchaseInvoiceDetails,

            PaymentMethodInt : parseInt($('#cboPaymentMethod').val()),
            BankAccountID : parseInt($('#cboBankAC').val()) 
        };
        return oPurchaseInvoice;
    }

    $("#btnSave").click(function(){
        endEditing();
        if(!ValidateInput()) return;
        var oPurchaseInvoice=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem("BaseAddress")+  "/PurchaseInvoice/Save",
            traditional: true,
            data:  JSON.stringify(oPurchaseInvoice),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oPI = jQuery.parseJSON(data);
                if (oPI.ErrorMessage==null ||oPI.ErrorMessage=="") {
                    alert("Data Saved sucessfully");
                    var oPurchaseInvoices =sessionStorage.getItem("PurchaseInvoices");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oPurchaseInvoices!=null)
                    {
                        oPurchaseInvoices = jQuery.parseJSON(oPurchaseInvoices);
                    }
                    else
                    {
                        oPurchaseInvoices=[];
                    }
                    if(nIndex!=-1)
                    {
                        oPurchaseInvoices[nIndex]=oPI;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oPurchaseInvoices.length);
                        oPurchaseInvoices.push(oPI);
                    }
                    sessionStorage.setItem("PurchaseInvoices", JSON.stringify(oPurchaseInvoices));
                    window.location.href = sessionStorage.getItem("InvoiceBackTo");
                }
                else {
                    alert(oPI.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#btnClose").click(function(){
        window.location.href =sessionStorage.getItem("InvoiceBackTo");
    });

    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            window.location.href =sessionStorage.getItem("InvoiceBackTo");
        }
    });

    $("#btnAdd").click(function () {
        debugger;
        if (!ValidatePurchaseInvoiceDetail()) return;

        var oImportInvoiceDetails = $('#txtProductName').data('ImportInvoiceDetail');
        if(oImportInvoiceDetails.length == 0){
            var oPurchaseInvoiceDetail = DetailRefreshObject();
            debugger;
            var oLandingCosts = $('#tblLandingCost').datagrid('getRows');
            for(var i=0;i<oLandingCosts.length;i++)
            {
                if(oPurchaseInvoiceDetail.LCID==oLandingCosts[i].LCID && oPurchaseInvoiceDetail.InvoiceID==oLandingCosts[i].InvoiceID && oPurchaseInvoiceDetail.CostHeadID==oLandingCosts[i].CostHeadID && oPurchaseInvoiceDetail.ProductID==oLandingCosts[i].ProductID)
                {
                    alert("Duplicate Data Entry!");return;
                }
            }
            $('#tblLandingCost').datagrid('appendRow', oPurchaseInvoiceDetail);
        }
        else{
            var oPurchaseInvoiceDetails = DetailRefreshObjectForMultiProduct();

            var oLandingCosts = $('#tblLandingCost').datagrid('getRows');
            debugger;
            for(var j=0;j<oPurchaseInvoiceDetails.length;j++){
                var IsDuplicate = false;
                for(var i=0;i<oLandingCosts.length;i++)
                {
                    if(oPurchaseInvoiceDetails[j].LCID==oLandingCosts[i].LCID && oPurchaseInvoiceDetails[j].InvoiceID==oLandingCosts[i].InvoiceID && oPurchaseInvoiceDetails[j].CostHeadID==oLandingCosts[i].CostHeadID && oPurchaseInvoiceDetails[j].ProductID==oLandingCosts[i].ProductID)
                    {
                        alert("Duplicate Data Entry for Costhead: " + oPurchaseInvoiceDetails[j].CostHeadName + " and Product: " + oPurchaseInvoiceDetails[j].ProductName + "!");
                        IsDuplicate = true;
                        //return;
                    }
                }
                if(IsDuplicate == false){
                    $('#tblLandingCost').datagrid('appendRow', oPurchaseInvoiceDetails[j]);
                }
            }
            
        }
        
        //Reset Detail Control
        $("#txtLCNo,#txtLandingInvoiceNo,#txtCostHead,#txtProductName").removeClass("fontColorOfPickItem");
        $('#txtLCNo').data('ImportLC', null);
        $('#txtLandingInvoiceNo').data('ImportInvoice', null);
        $('#txtLandingInvoiceNo').data('PurchaseInvoice', null);     
        $('#txtProductName').data('ImportInvoiceDetail', []);
        $('#txtProductName').data('PurchaseInvoiceDetail', null);
        $('#txtCostHead').data('CostHead', null);
        $("#txtLCNo,#txtLandingInvoiceNo,#txtCostHead,#txtRemarks,#txtProductName").val("");
        $('#txtCostHeadAmount').val('0.00');
        RefreshGrid();
        $('#txtLCNo').focus();
    });

    $("#btnRemove").click(function () {
        var oPurchaseInvoiceDetail = $('#tblLandingCost').datagrid('getSelected');
        if (oPurchaseInvoiceDetail == null) {
            alert("Please select a item from list!");
            return;
        }
        var conf = confirm("Confirm to delete?");
        if (conf == false) return;

        endEditing();
        var SelectedRowIndex = $('#tblLandingCost').datagrid('getRowIndex', oPurchaseInvoiceDetail);
        $('#tblLandingCost').datagrid('deleteRow', SelectedRowIndex);

        var oPurchaseInvoiceDetails = $('#tblLandingCost').datagrid('getRows');
        RefreshList(oPurchaseInvoiceDetails);
    });

    $("#btnRefresh").click(function () {
        endEditing();
        RefreshGrid();
    });

    function ValidatePurchaseInvoiceDetail() {
        //ReferenceType : Open = 1, PO = 2, Import = 3, Local = 4
        var nReferenceType=parseInt($('#cboReferenceType').val());
        var nInvoiceID = 0, nInvoiceDetailID = 0;
        if(nReferenceType===3)
        {
            var oImportLC = $('#txtLCNo').data('ImportLC');
            var oImportInvoice = $('#txtLandingInvoiceNo').data('ImportInvoice');
            var oImportInvoiceDetails = $('#txtProductName').data('ImportInvoiceDetail');
            if(oImportLC===null && oImportInvoice===null)
            {
                alert("Please select Import LC/Invoice!");
                $('#txtLCNo').focus();
                return false;
            }
            if(oImportInvoice!=null)
            {
                nInvoiceID = parseInt(oImportInvoice.ImportInvoiceID);
            }
            //if(oImportInvoiceDetails!=null)
            //{
            //    nInvoiceDetailID = oImportInvoiceDetails.ImportInvoiceDetailID;
            //}
        }
        else
        {
            var oPurchaseInvoice = $('#txtLandingInvoiceNo').data('PurchaseInvoice');
            if(oPurchaseInvoice===null)
            {
                alert("Please select Purchase Invoice!");
                $('#txtLandingInvoiceNo').focus();
                return false;
            }
            nInvoiceID = parseInt(oPurchaseInvoice.PurchaseInvoiceID);
        }

        var oCostHead = $('#txtCostHead').data('CostHead');
        if(parseInt($('#cboLandingCostType').val())==0)
        {
            if(oCostHead===null || parseInt(oCostHead.AccountHeadID)<=0)
            {
                alert("Please select Cost Head!");
                $('#txtCostHead').focus();
                return false;
            }
        }else{
            if(parseInt(oCostHead.ACCostCenterID)<=0)
            {
                alert("Please select Cost Head!");
                $('#txtCostHead').focus();
                return false;
            }
        }

        var oPurchaseInvoiceDetails = $('#tblLandingCost').datagrid('getRows');

        debugger;
        if(nReferenceType===3){
            if(oImportInvoiceDetails.length > 0){
                for(var j = 0; j<oImportInvoiceDetails.length; j++){
                    for (var i = 0; i < oPurchaseInvoiceDetails.length; i++)
                    {
                        if (parseInt(oPurchaseInvoiceDetails[i].InvoiceID) === parseInt(nInvoiceID) && parseInt(oPurchaseInvoiceDetails[i].CostHeadID) === parseInt(oCostHead.ACCostCenterID) && parseInt(oPurchaseInvoiceDetails[i].InvoiceDetailID) == parseInt(oImportInvoiceDetails[j].ImportInvoiceDetailID) )  
                        {
                            alert("Your Selected CostHead Already Exists for "+ oImportInvoiceDetails[j].ProductName + "[" + oImportInvoiceDetails[j].ProductCode +"]" +" !");
                            $('#txtCostHead').focus();
                            return false;
                        }
                    }
                }
            }
        }
        else{
            for (var i = 0; i < oPurchaseInvoiceDetails.length; i++)
            {
                if (parseInt(oPurchaseInvoiceDetails[i].InvoiceID) === parseInt(nInvoiceID) && parseInt(oPurchaseInvoiceDetails[i].CostHeadID) === parseInt(oCostHead.ACCostCenterID) )     //&& parseInt(oPurchaseInvoiceDetails[i].InvoiceDetailID) === parseInt(nInvoiceDetailID) 
                {
                    alert("Your Selected CostHead Already Exists!");
                    $('#txtCostHead').focus();
                    return false;
                }
            }
        }
        

        var nCostHeadAmount = icsRemoveComma($('#txtCostHeadAmount').val());
        if (nCostHeadAmount == null || nCostHeadAmount == "" || parseFloat(nCostHeadAmount) <= 0) {
            alert("Please Enter Amount!");
            $('#txtCostHeadAmount').focus();
            return false;
        }
        return true;
    }

    function DetailRefreshObjectForMultiProduct() {
        var oTempDetail = {
            LCNo:'',
            ShipmentDateSt:'',
            InvoiceNo:'',
            InvoiceDateSt:'',
            CostHeadCode:'',
            CostHeadName:'',
            LCID :0,
            InvoiceID:0,
            InvoiceDetailID:0,
            ProductID:0,
            ProductCode:'',
            ProductName:'',
            CostHeadID:0
        }
        //ReferenceType : Open = 1, PO = 2, Import = 3, Local = 4
        var nReferenceType=parseInt($('#cboReferenceType').val());
        if(nReferenceType===3)
        {
            debugger;
            var oImportLC = $('#txtLCNo').data('ImportLC');
            var oImportInvoice = $('#txtLandingInvoiceNo').data('ImportInvoice');
            var oImportInvoiceDetails = $('#txtProductName').data('ImportInvoiceDetail');
            if(oImportLC!=null)
            {
                oTempDetail.LCID = parseInt(oImportLC.ImportLCID);
                oTempDetail.LCNo = oImportLC.ImportLCNo;
                oTempDetail.ShipmentDateSt = oImportLC.ShipmentDateInString;
            }
            if(oImportInvoice!=null)
            {
                oTempDetail.LCID = parseInt(oImportInvoice.ImportLCID);
                oTempDetail.LCNo = oImportInvoice.ImportLCNo;
                oTempDetail.ShipmentDateSt = oImportInvoice.ShipmentDateInString;
                oTempDetail.InvoiceID = parseInt(oImportInvoice.ImportInvoiceID);
                oTempDetail.InvoiceNo = oImportInvoice.ImportInvoiceNo;
                oTempDetail.InvoiceDateSt = oImportInvoice.InvoiceDateInString;
            }
            //if(oImportInvoiceDetails!=null)
            //{
            //    oTempDetail.InvoiceDetailID = parseInt(oImportInvoiceDetails.ImportInvoiceDetailID);
            //    oTempDetail.ProductID = parseInt(oImportInvoiceDetails.ProductID);
            //    oTempDetail.ProductCode = oImportInvoiceDetails.ProductCode;
            //    oTempDetail.ProductName = oImportInvoiceDetails.ProductName;
            //}
        }
        //else
        //{
        //    var oPurchaseInvoice = $('#txtLandingInvoiceNo').data('PurchaseInvoice');
        //    oTempDetail.InvoiceID = parseInt(oPurchaseInvoice.PurchaseInvoiceID);
        //    oTempDetail.InvoiceNo = oPurchaseInvoice.BillNo;
        //    oTempDetail.InvoiceDateSt = oPurchaseInvoice.DateofBillSt;
        //}
        debugger;
        var oCostHead = $('#txtCostHead').data('CostHead');
        if(oCostHead!=null)
        {
            oTempDetail.CostHeadID = parseInt($('#cboLandingCostType').val())==0?parseInt(oCostHead.AccountHeadID):parseInt(oCostHead.ACCostCenterID);
            oTempDetail.CostHeadCode = parseInt($('#cboLandingCostType').val())==0?oCostHead.AccountCode:oCostHead.Code;
            oTempDetail.CostHeadName = parseInt($('#cboLandingCostType').val())==0?oCostHead.AccountHeadName:oCostHead.Name;
        }

        var TotalAmount = 0;
        for(var i=0;i<oImportInvoiceDetails.length;i++){
            TotalAmount += parseFloat(oImportInvoiceDetails[i].Amount);
        }

        var oPurchaseInvoiceDetails = [];
        for(var i=0;i<oImportInvoiceDetails.length;i++){
            var oPurchaseInvoiceDetail = {
                PurchaseInvoiceDetailID: 0,
                PurchaseInvoiceID: 0,
                LCID : parseInt(oTempDetail.LCID),
                InvoiceID : parseInt(oTempDetail.InvoiceID),
                InvoiceDetailID:parseInt(oImportInvoiceDetails[i].ImportInvoiceDetailID),
                ProductID:parseInt(oImportInvoiceDetails[i].ProductID),
                ProductCode:oImportInvoiceDetails[i].ProductCode,
                ProductName:oImportInvoiceDetails[i].ProductName,
                CostHeadID : parseInt(oTempDetail.CostHeadID),
                LCNo : oTempDetail.LCNo,
                ShipmentDateSt : oTempDetail.ShipmentDateSt,
                InvoiceNo : oTempDetail.InvoiceNo,
                InvoiceDateSt : oTempDetail.InvoiceDateSt,
                CostHeadCode : oTempDetail.CostHeadCode,
                CostHeadName : oTempDetail.CostHeadName,
                LandingCostTypeInt:$('#cboLandingCostType').val(),
                Remarks : $.trim($('#txtRemarks').val()),
                //Amount : (parseFloat(icsRemoveComma($('#txtCostHeadAmount').val()))/parseFloat(TotalAmount))*parseFloat(oImportInvoiceDetails[i].Amount),
                Amount : parseFloat(((parseFloat(icsRemoveComma($('#txtCostHeadAmount').val()))/parseFloat(TotalAmount))*parseFloat(oImportInvoiceDetails[i].Amount)).toFixed(2))
            };
            oPurchaseInvoiceDetails.push(oPurchaseInvoiceDetail);
        }
        console.log("test");
        console.log(oPurchaseInvoiceDetails);
        return oPurchaseInvoiceDetails;
    }

    function DetailRefreshObject() {
        var oTempDetail = {
            LCNo:'',
            ShipmentDateSt:'',
            InvoiceNo:'',
            InvoiceDateSt:'',
            CostHeadCode:'',
            CostHeadName:'',
            LCID :0,
            InvoiceID:0,
            InvoiceDetailID:0,
            ProductID:0,
            ProductCode:'',
            ProductName:'',
            CostHeadID:0
        }
        //ReferenceType : Open = 1, PO = 2, Import = 3, Local = 4
        var nReferenceType=parseInt($('#cboReferenceType').val());
        if(nReferenceType===3)
        {
            debugger;
            var oImportLC = $('#txtLCNo').data('ImportLC');
            var oImportInvoice = $('#txtLandingInvoiceNo').data('ImportInvoice');
            var oImportInvoiceDetails = $('#txtProductName').data('ImportInvoiceDetail');
            if(oImportLC!=null)
            {
                oTempDetail.LCID = parseInt(oImportLC.ImportLCID);
                oTempDetail.LCNo = oImportLC.ImportLCNo;
                oTempDetail.ShipmentDateSt = oImportLC.ShipmentDateInString;
            }
            if(oImportInvoice!=null)
            {
                oTempDetail.LCID = parseInt(oImportInvoice.ImportLCID);
                oTempDetail.LCNo = oImportInvoice.ImportLCNo;
                oTempDetail.ShipmentDateSt = oImportInvoice.ShipmentDateInString;
                oTempDetail.InvoiceID = parseInt(oImportInvoice.ImportInvoiceID);
                oTempDetail.InvoiceNo = oImportInvoice.ImportInvoiceNo;
                oTempDetail.InvoiceDateSt = oImportInvoice.InvoiceDateInString;
            }
            //if(oImportInvoiceDetail!=null)
            //{
            //    oTempDetail.InvoiceDetailID = parseInt(oImportInvoiceDetail.ImportInvoiceDetailID);
            //    oTempDetail.ProductID = parseInt(oImportInvoiceDetail.ProductID);
            //    oTempDetail.ProductCode = oImportInvoiceDetail.ProductCode;
            //    oTempDetail.ProductName = oImportInvoiceDetail.ProductName;
            //}
        }
        else
        {
            var oPurchaseInvoice = $('#txtLandingInvoiceNo').data('PurchaseInvoice');
            oTempDetail.InvoiceID = parseInt(oPurchaseInvoice.PurchaseInvoiceID);
            oTempDetail.InvoiceNo = oPurchaseInvoice.BillNo;
            oTempDetail.InvoiceDateSt = oPurchaseInvoice.DateofBillSt;
        }
        debugger;
        var oCostHead = $('#txtCostHead').data('CostHead');
        if(oCostHead!=null)
        {
            oTempDetail.CostHeadID = parseInt($('#cboLandingCostType').val())==0?parseInt(oCostHead.AccountHeadID):parseInt(oCostHead.ACCostCenterID);
            oTempDetail.CostHeadCode = parseInt($('#cboLandingCostType').val())==0?oCostHead.AccountCode:oCostHead.Code;
            oTempDetail.CostHeadName = parseInt($('#cboLandingCostType').val())==0?oCostHead.AccountHeadName:oCostHead.Name;
        }

        var oPurchaseInvoiceDetail = {
            PurchaseInvoiceDetailID: 0,
            PurchaseInvoiceID: 0,
            LCID : parseInt(oTempDetail.LCID),
            InvoiceID : parseInt(oTempDetail.InvoiceID),
            InvoiceDetailID:parseInt(oTempDetail.InvoiceDetailID),
            ProductID:parseInt(oTempDetail.ProductID),
            ProductCode:oTempDetail.ProductCode,
            ProductName:oTempDetail.ProductName,
            CostHeadID : parseInt(oTempDetail.CostHeadID),
            LCNo : oTempDetail.LCNo,
            ShipmentDateSt : oTempDetail.ShipmentDateSt,
            InvoiceNo : oTempDetail.InvoiceNo,
            InvoiceDateSt : oTempDetail.InvoiceDateSt,
            CostHeadCode : oTempDetail.CostHeadCode,
            CostHeadName : oTempDetail.CostHeadName,
            LandingCostTypeInt:$('#cboLandingCostType').val(),
            Remarks : $.trim($('#txtRemarks').val()),
            Amount : parseFloat(icsRemoveComma($('#txtCostHeadAmount').val()))
        };
        return oPurchaseInvoiceDetail;
    }

    function RefreshList(oPurchaseInvoiceDetails)
    {
        var data = oPurchaseInvoiceDetails;
        data = { "total": "" + data.length + "", "rows": data };
        $("#tblLandingCost").datagrid("loadData", data);
        RefreshSummery();
    }

    function RefreshGrid() {
        endEditing();
        data = $('#tblLandingCost').datagrid('getRows');
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblLandingCost').datagrid('loadData', data);
        RefreshSummery();
    }

    function RefreshSummery()
    {
        var oPIDetails = $('#tblLandingCost').datagrid('getRows');
        var nTotalValue= 0,nQty=0;
        for(var i = 0; i<oPIDetails.length;i++)
        {
            nTotalValue+=parseFloat(oPIDetails[i].Amount);
        }
        document.getElementById('lblTotalValue').innerHTML = formatPrice(nTotalValue,0);
    }

    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#tblLandingCost').datagrid('validateRow', editIndex)) {
            $('#tblLandingCost').datagrid('endEdit', editIndex);
            RefreshSummery();
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRow(index) {
        if (editIndex != index) {
            if (endEditing()) {
                $('#tblLandingCost').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oPurchaseInvoiceDetail= $('#tblLandingCost').datagrid('getSelected');
                editIndex = index;
            }
            else {
                $('#tblLandingCost').datagrid('selectRow', editIndex);
            }
        }
    }

    //Start Supplier Picker
    $("#txtSupplierName").keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            PickSupplier($.trim($('#txtSupplierName').val()));
        }
    });

    $("#btnPickSupplier").click(function () {
        PickSupplier($.trim($('#txtSupplierName').val()));
    });

    $('#txtSupplierName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtSupplierName").removeClass("fontColorOfPickItem");
            $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID=0;
            $("#cboSCPerson").icsLoadCombo({ List: [], OptionValue: "ContactPersonnelID", DisplayText: "Name" });
        }
    });

    function PickSupplier(sSupplierName)
    {
        var oContractor = { Params: 1 + '~' + sSupplierName+'~'+sessionStorage.getItem("BUID") };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        var $This=$(this);
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 50, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winContractor',
                        winclass:'clsContractor',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblContractors',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Contractor List',
                        TextBox:$This
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    //End Supplier Picker

    //ImportLC Pick
    $("#txtLCNo").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtLCNo').val()==null || $('#txtLCNo').val()=="")
            {
                alert("Press enter with LC No!");
                $('#txtLCNo').focus();
                return;
            }
            PickLC();
        }
    });

    $('#txtLCNo').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtLCNo").removeClass("fontColorOfPickItem");
            $('#txtLCNo').data('ImportLC', null);
        }
    });

    function PickLC()
    {
        var nBUID = parseInt(sessionStorage.getItem("BUID"));
        var oImportLC = { BUID: parseInt(nBUID), ImportLCNo: $.trim($('#txtLCNo').val())};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oImportLC,
            ControllerName: "PurchaseInvoice",
            ActionName: "GetsImportLC",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ImportLCID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ImportLCNo", title: "Import LCNo", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorName", title: "Party Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShipmentDateInString", title: "Shipment Date", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BankName_Nego", title: "Bank Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winImportLCPicker',
                        winclass: 'clsImportLCPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblImportLCPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ImportLCNo',
                        windowTittle: 'ImportLC List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    //End ImportLC

    //Invoice Pick
    $("#txtLandingInvoiceNo").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //ReferenceType : Open = 1, PO = 2, Import = 3, Local = 4
            var nReferenceType = parseInt($("#cboReferenceType").val());
            if(nReferenceType<=0)
            {
                alert("Please Select Reference Type!");$("#cboReferenceType").focus();return;
            }
            if(parseInt(nReferenceType)===3)
            {
                var sInvoiceNo = $.trim($('#txtLandingInvoiceNo').val());
                var oImportLC = $('#txtLCNo').data('ImportLC');
                if(sInvoiceNo===null){ sInvoiceNo ==="";}
                if(sInvoiceNo === "" && oImportLC===null)
                {
                    alert("Press enter with invoice no!\nOther wise pick Import LC first!");
                    $('#txtLandingInvoiceNo').focus();
                    return;
                }
                PickImportInvoice();
            }
            else if(parseInt(nReferenceType)===4)
            {
                if($('#txtLandingInvoiceNo').val()==null || $('#txtLandingInvoiceNo').val()=="")
                {
                    alert("Press enter with Purchase Invoice No!");
                    $('#txtLandingInvoiceNo').focus();
                    return;
                }
                PickPurchaseInvoice();
            }
        }
    });
    $('#txtLandingInvoiceNo').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtLandingInvoiceNo").removeClass("fontColorOfPickItem");
            $('#txtLandingInvoiceNo').data('ImportInvoice', null);
            $('#txtLandingInvoiceNo').data('PurchaseInvoice', null);
        }
    });

    function PickImportInvoice()
    {
        var nImportLCID=0;
        var oImportLC = $('#txtLCNo').data('ImportLC');
        if(oImportLC!=null){ nImportLCID = parseInt(oImportLC.ImportLCID); }
        var nBUID = parseInt(sessionStorage.getItem("BUID"));
        var oImportInvoice = { BUID: parseInt(nBUID), ImportLCID:parseInt(nImportLCID), ImportInvoiceNo: $.trim($('#txtLandingInvoiceNo').val())};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oImportInvoice,
            ControllerName: "PurchaseInvoice",
            ActionName: "GetsImportInvoice",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ImportInvoiceID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ImportInvoiceNo", title: "ImportInvoiceNo", width: 150, align: "left" }; tblColums.push(oColumn);                    
                    oColumn = { field: "BLNo", title: "BL No", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorName", title: "Party Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "InvoiceDateInString", title: "Invoice Date", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "AmountSt", title: "Invoice Amount", width: 100, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winImportInvoicePicker',
                        winclass: 'clsImportInvoicePicker',
                        winwidth: 800,
                        winheight: 460,
                        tableid: 'tblImportInvoicePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ImportInvoiceNo',
                        windowTittle: 'Import Invoice List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    function PickPurchaseInvoice()
    {
        var nBUID = parseInt(sessionStorage.getItem("BUID")); debugger;
        var oPurchaseInvoice = { BUID: parseInt(nBUID), BillNo: $.trim($('#txtLandingInvoiceNo').val())};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oPurchaseInvoice,
            ControllerName: "PurchaseInvoice",
            ActionName: "GetsPurchaseInvoice",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PurchaseInvoiceID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "PurchaseInvoiceNo", title: "Invoice No", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BillNo", title: "BillNo", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorName", title: "Party Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "DateofInvoiceSt", title: "Invoice Date", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "AmountSt", title: "Invoice Amount", width: 100, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPurchaseInvoicePicker',
                        winclass: 'clsPurchaseInvoicePicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblPurchaseInvoicePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'BillNo',
                        windowTittle: 'Purchase Invoice List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    //End Invoice

    $("#txtProductName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var nReferenceType = parseInt($("#cboReferenceType").val());
            if(nReferenceType<=0)
            {
                alert("Please Select Reference Type!");$("#cboReferenceType").focus();return;
            }
            if(parseInt(nReferenceType)===3)
            {
                var oImportInvoice =  $('#txtLandingInvoiceNo').data('ImportInvoice');
                if(oImportInvoice==null || parseInt(oImportInvoice.ImportInvoiceID)<=0)
                {
                    alert("Please Select Invoice.");$("#txtProductName").focus();return;
                }
            }
            PickImportInvoiceDetail();

        }else  if (code == 8) //backspace=8
        {
            $("#txtProductName").removeClass("fontColorOfPickItem");
            $('#txtProductName').data('ImportInvoiceDetail', []);
            $('#txtProductName').data('PurchaseInvoiceDetail', null);
        }
    });

    function PickImportInvoiceDetail()
    {
        var nImportInvoiceID=0;
        var oImportInvoice = $('#txtLandingInvoiceNo').data('ImportInvoice');
        if(oImportInvoice!=null){ nImportInvoiceID = parseInt(oImportInvoice.ImportInvoiceID); }
        var oImportInvoiceDetail = { ImportInvoiceID: parseInt(nImportInvoiceID), ProductName: $.trim($('#txtProductName').val())};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oImportInvoiceDetail,
            ControllerName: "PurchaseInvoice",
            ActionName: "GetsImportInvoiceDetails",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ImportInvoiceID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Code", width:120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Prdouct Name", width:150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "AmountSt", title: "Invoice Amount", width: 100, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winIIDetailPicker',
                        winclass: 'clsItIDetailPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblIIDetailPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'ProductCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }



    //CostHead Pick
    $("#txtCostHead").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oClientOperationSetting = $('#txtCostHead').data('ClientOperationSetting');
            if(parseInt(oClientOperationSetting.ClientOperationSettingID)<=0)
            {
                alert("Sorry, There is No Client Operation Setup for Landing Cost Type.");
                return;
            }
            if($('#txtCostHead').val()==null || $('#txtCostHead').val()=="")
            {
                alert("Press enter with CostHead Name!");
                $('#txtCostHead').focus();
                return;
            }
            if(parseInt($('#cboLandingCostType').val())==0)
            {
                PickCostHead(); //CharOtAccouts
            }else{
                PickSubLedger();//AcCost Center
            }
        }
    });

    $('#txtCostHead').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtCostHead").removeClass("fontColorOfPickItem");
            $('#txtCostHead').data('CostHead', null);
        }
    });

    function PickCostHead()
    {
        var nBUID = parseInt(sessionStorage.getItem("BUID"));
        var oChartsOfAccount = {AccountHeadName:$.trim($('#txtCostHead').val())};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oChartsOfAccount,
            ControllerName: "PurchaseInvoice",
            ActionName: "GetsCostHeads",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AccountHeadID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "AccountCode", title: "Code", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "AccountHeadName", title: "Head Name", width: 450, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winCostHeadPicker',
                        winclass: 'clsCostHeadPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblCostHeadPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'AccountHeadName',
                        windowTittle: 'Cost Head List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }

    function PickSubLedger()
    {
        var nBUID = parseInt(sessionStorage.getItem("BUID"));
        var oACCostCenter = {Name:$.trim($('#txtCostHead').val()), BUID:nBUID};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oACCostCenter,
            ControllerName: "PurchaseInvoice",
            ActionName: "GetsACCostCenters",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ACCostCenterID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 450, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winACCostCenterPicker',
                        winclass: 'clsACCostCenterPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblCostHeadPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Cost Center List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }

    //End ImportLC

    //Start PaymentTerm
    $("#txtPaymentTerm").keydown(function (e){
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            PickPaymentTerms();
        }
    });

    $("#btnPickPaymentTerm").click(function () {
        PickPaymentTerms();
    });

    $('#txtPaymentTerm').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $('#txtPaymentTerm').removeClass('fontColorOfPickItem');
            $('#divPurchaseInvoice').data('PurchaseInvoice').PaymentTermID=0;
        }
    });

    $("#btnCPTerm").click(function () {
        $('#txtPaymentTerm').removeClass('fontColorOfPickItem');
        $('#txtPaymentTerm').val('');
        $('#divPurchaseInvoice').data('PurchaseInvoice').PaymentTermID=0;
    });

    function PickPaymentTerms()
    {
        var oPaymentTerm = { TermText: $.trim($('#txtPaymentTerm').val()), BUID:sessionStorage.getItem('BUID')};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oPaymentTerm,
            ControllerName: "PurchaseInvoice",
            ActionName: "GetPaymentTermsForInvoice",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PaymentTermID> 0) {

                    var tblColums = []; var oColumn = { field: "FullTerm", title: "Name", width: 520, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPaymentTerms',
                        winclass: 'clsPaymentTerm',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblPaymentTerms',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameDaysInString',
                        windowTittle: 'Payment Term List'

                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });
    }
    //End PaymentTerm

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    function SetPickerValueAssign(oPickerobj)
    {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid == 'winContractor')//Contractor region
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $('#txtSupplierName').val(oreturnObj.Name);
                $('#txtSupplierName').addClass('fontColorOfPickItem');
                $('#divPurchaseInvoice').data('PurchaseInvoice').ContractorID = parseInt(oreturnObj.ContractorID);
                LoadContactPerson(parseInt(oreturnObj.ContractorID));
            }
        }
        else if (oPickerobj.winid =='winImportLCPicker')
        {
            debugger;
            if (oreturnObj != null && parseInt(oreturnObj.ImportLCID)> 0) {
                $('#txtLCNo').val(oreturnObj.ImportLCNo);
                $('#txtLCNo').addClass('fontColorOfPickItem');
                $('#txtLCNo').data('ImportLC', oreturnObj);
                $('#txtLandingInvoiceNo').focus();
            }
        }
        else if (oPickerobj.winid =='winImportInvoicePicker')
        {
            if (oreturnObj != null && parseInt(oreturnObj.ImportInvoiceID)> 0) {
                $('#txtLandingInvoiceNo').val(oreturnObj.ImportInvoiceNo);
                $('#txtLandingInvoiceNo').addClass('fontColorOfPickItem');
                $('#txtLandingInvoiceNo').data('ImportInvoice', oreturnObj);

                $('#txtLCNo').val(oreturnObj.ImportLCNo);
                $('#txtLCNo').addClass('fontColorOfPickItem');
                $('#txtLCNo').data('ImportLC', oreturnObj);

                $('#txtLandingInvoiceNo').data('PurchaseInvoice', null);
                $('#txtProductName').focus();
            }
        }else if (oPickerobj.winid =='winIIDetailPicker')
        {
            if (oreturnobjs != null && parseInt(oreturnobjs.length)> 0){
                if(oreturnobjs.length == 1){
                    document.getElementById("txtProductName").value = oreturnobjs[0].ProductName;
                }
                else if(oreturnobjs.length > 1){
                    document.getElementById("txtProductName").value = "Select " + oreturnobjs.length + " Products.";
                }
                //var ids = "";
                //for (var i = 0; i < oreturnObj.length; i++) {

                //    ids += oreturnObj[i].ContractorID + ",";
                //}
                //if(ids.length > 0){
                //    ids = ids.substring(0, ids.length-1);
                //}

                $('#txtProductName').addClass('fontColorOfPickItem');
                $('#txtProductName').data('ImportInvoiceDetail', oreturnobjs);
                $('#txtProductName').data('PurchaseInvoiceDetail', null);
                $('#txtCostHead').focus();

                //if (oreturnObj != null && parseInt(oreturnObj.ImportInvoiceDetailID)> 0) {
                //    $('#txtProductName').val(oreturnObj.ProductName);
                //    $('#txtProductName').addClass('fontColorOfPickItem');
                //    $('#txtProductName').data('ImportInvoiceDetail', oreturnObj);
                //    $('#txtProductName').data('PurchaseInvoiceDetail', null);
                //    $('#txtCostHead').focus();
                //}
            }
            
        }
        else if (oPickerobj.winid =='winPurchaseInvoicePicker')
        {
            if (oreturnObj != null && parseInt(oreturnObj.PurchaseInvoiceID)> 0) {
                $('#txtLandingInvoiceNo').val(oreturnObj.BillNo);
                $('#txtLandingInvoiceNo').addClass('fontColorOfPickItem');
                $('#txtLandingInvoiceNo').data('ImportInvoice', null);
                $('#txtLandingInvoiceNo').data('PurchaseInvoice', oreturnObj);
                $('#txtCostHead').focus();
            }
        } 
        else if (oPickerobj.winid =='winCostHeadPicker')
        {
            if (oreturnObj != null && parseInt(oreturnObj.AccountHeadID)> 0) {
                $('#txtCostHead').val(oreturnObj.AccountHeadCodeName);
                $('#txtCostHead').addClass('fontColorOfPickItem');
                $('#txtCostHead').data('CostHead', oreturnObj);
                $('#txtRemarks').focus();
            }
        } else if (oPickerobj.winid =='winACCostCenterPicker')
        {
            if (oreturnObj != null && parseInt(oreturnObj.ACCostCenterID)> 0)
            {
                $('#txtCostHead').val(oreturnObj.NameCode);
                $('#txtCostHead').addClass('fontColorOfPickItem');
                $('#txtCostHead').data('CostHead', oreturnObj);
                $('#txtRemarks').focus();
            }
        }
        else if (oPickerobj.winid =='winPaymentTerms')
        {
            if (oreturnObj != null && parseInt(oreturnObj.PaymentTermID)> 0) {
                $('#txtPaymentTerm').val(oreturnObj.FullTerm);
                $('#txtPaymentTerm').addClass('fontColorOfPickItem');
                $('#divPurchaseInvoice').data('PurchaseInvoice').PaymentTermID=parseInt(oreturnObj.PaymentTermID);
                $('#txtBILLNo').focus();
            }
        }
    }

    function LoadContactPerson(nContractorID) {
        var listItems = "";
        $("#cboSCPerson").empty();
        if (parseInt(nContractorID) > 0) {
            var oContractor = {
                ContractorID: nContractorID
            };
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress") + "/Contractor/GetContactPersonnels",
                data: JSON.stringify(oContractor),
                contentType: "application/json; charset=utf-8",
                success: function (data) {

                    var oContractorPersonals = jQuery.parseJSON(data);
                    if (oContractorPersonals.length > 0) {
                        for (var i = 0; i < oContractorPersonals.length; i++) {
                            listItems += "<option value='" + oContractorPersonals[i].ContactPersonnelID + "'>" + oContractorPersonals[i].Name + "</option>";
                        }
                        $("#cboSCPerson").html(listItems);
                        var nContactPersonnelID = parseInt($('#divPurchaseInvoice').data('PurchaseInvoice').ContactPersonnelID);
                        $("#cboSCPerson").val(nContactPersonnelID);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    }

    //function InvoiceTypeChange() {
    //    debugger;

    //}

    function PaymentMethodChange() {
        debugger;
        var val = $('#cboPaymentMethod').val();
        if(val != 1){
            //$('#cboEmployee').show();
            document.getElementById("cboBankAC").disabled = false;
        }
        else{
            //$('#cboEmployee').hide();
            document.getElementById("cboBankAC").disabled = true;
            $('#cboBankAC').val('');
        }
    }
</script>