@{
    ViewBag.Title = "FA Schedule Rule";
}
@model ESimSol.BusinessObjects.FARule

<div class="menuMainCollectionTable">
    <fieldset>
        <legend>FA Info</legend>
        <table style="width: 100%;">
            <tr>
                <td style="width:13%;text-align:right;"><label>Product Code :</label></td>
                <td style="width:18%;text-align:left;">@Html.TextBoxFor(model => model.ProductCode, new { style = "width:100%;", id = "txtProductCode",disabled="disabled" }) </td>

                <td style="width:13%;text-align:right;"><label>Product Name :</label></td>
                <td style="width:18%;text-align:left;">@Html.TextBoxFor(model => model.ProductName, new { style = "width:100%;", id = "txtProductName", disabled="disabled" }) </td>

                <td style="width:13%;text-align:right;"><label>FA Code :</label></td>
                <td style="width:25%;">
                    <table cellpadding="0" cellspacing="0" style="width:100%;">
                        <tr>
                            <td style="width:50%;">@Html.TextBoxFor(model => model.FACodeFull, new { style = "width:100%;", id = "txtFACodeFull", required = "required" })</td>
                            <td style="width:20%;"><input type="button" id="btnCodingPolicy" style="width:100%" value="Coding Policy" onclick="CodingPolicy()" /> </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr>
                <td style="width:13%;text-align:right;"><label>Product Category :</label></td>
                <td style="width:18%;text-align:left;">@Html.TextBoxFor(model => model.ProductCategoryName, new { style = "width:100%;", id = "txtProductCategoryName", disabled = "disabled" }) </td>

                <td style="width:13%;text-align:right;"><label>FA Method:</label></td>
                <td style="width:18%;text-align:left;"><select id="cboFAMethodInt" style="width:100%;"></select> </td>

                <td style="width:13%;text-align:right;"><label>Dept. Rate :</label></td>
                <td style="width:25%;text-align:left;">
                    <table cellpadding="0" cellspacing="0" width="100%">
                        <tr>
                            <td style="width:18%;">@Html.TextBoxFor(model => model.DefaultDepRate, new { style = "width:100%;", id = "txtDefaultDepRate", required = "required", Class = "number" })</td>
                            <td style="width:20%;"><input type="text" style="width:100%;"  value=" / Year" disabled /></td>
                            <td style="width:50%;"><input type="text" style="width:100%" id="txtpercentt" value=" %of Cost Price" disabled /> </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr>
        <td style="width:13%;text-align:right;"><label>Use Full Life:</label></td>
        <td style="width:18%;text-align:left;">
            <table border="0" cellpadding="0" cellspacing="0">
                <tr>
                    <td style="width:75%">@Html.TextBoxFor(model => model.UseFullLife, new { style = "width:100%;", id = "txtUseFullLife", Class="number" }) </td>
                    <td style="width:25%"><input type="text" value="Year" disabled /></td>
                </tr>
            </table>
        </td>

        <td style="width:13%;text-align:right;"><label>Cost Price :</label></td>
        <td style="width:18%;text-align:left;">
            <table border="0" cellpadding="0" cellspacing="0">
                <tr>
                    <td style="width:50%">@Html.TextBoxFor(model => model.DefaultCostPrice, new { style = "width:100%;", id = "txtDefaultCostPrice", Class = "number" }) </td>
                    <td style="width:20%"><input type="text" value="% of" style="font-weight:bold; width:100%;" disabled /></td>
                    <td style="width:30%;"><select id="cboCostPriceEffectOn" style="width:100%; height:22px"></select></td>
                </tr>
            </table>
        </td>

        <td style="width:13%;text-align:right;"><label>Salavage Value:</label></td>
        <td style="width:25%;text-align:left;">
            <table cellpadding="0" cellspacing="0">
                <tr>
                    <td style="width:25%">@Html.TextBoxFor(model => model.DefaultSalvage, new { style = "width:100%;", id = "txtDefaultSalvage", required = "required", Class = "number" })</td>
                    <td style="width:20%;"><input type="text" value="% of" style="font-weight:bold; width:100%; margin-left:-2px" disabled /></td>
                    <td style="width:35%;"><select id="cboCostPriceEffectOn_temp" style="width:100%; height:22px" disabled></select></td>
                </tr>
            </table>
        </td>
    </tr>
   <tr>
        <td style="width:13%;text-align:right;"><label>Currency:</label></td>
        <td style="width:18%;text-align:left;"><select id="cboCurrency" style="width:100%;"></select>  </td>

        <td style="width:13%;text-align:right;"><label>DEP Apply On:</label></td>
        <td style="width:18%;text-align:left;"><select id="cboDEPCalculateOn" style="width:100%;"></select></td>

        <td style="width:13%;text-align:right;"><label>DEP Effect From:</label></td>
        <td style="width:25%;text-align:left;">
            <select id="cboDepEffectFormOn" style="width:100%;"></select>
        </td>
    </tr>
   <tr>
        <td style="width:13%;text-align:right;"><label>Register Apply On:</label></td>
        <td style="width:18%;text-align:left;"><select id="cboRegisterApplyOn" style="width:100%;"></select>  </td>

        <td style="width:13%;text-align:right;"><label>Remarks:</label></td>
        <td style="width:56%;text-align:left;" colspan="3">@Html.TextBoxFor(model => model.Remarks, new { style = "width:100%;", id = "txtRemarks" }) </td>
    </tr>
    <tr>
        <td style="width:13%;text-align:right;"><label></label></td>
        <td style="width:31%;text-align:left;" colspan="2"><input type="checkbox" id="chkIsApplyForProductBase" />Apply Selected Categories All Products</td>
        <td style="width:56%;text-align:left;" colspan="3"></td>
    </tr>
        </table>

    </fieldset>
    <div style="width:100%;height:332px;">&nbsp;</div>
    <fieldset >
        <legend>Action</legend>
        <div class="row col-md-12 text-right">
            @*<a id="btnRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save(Revise)</a>
                <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true">Approve</a>*@
            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
        </div>
    </fieldset>
</div>

<script type="text/javascript">
    var _sBaseAddress  = "";
    var _oFARule = null;
    var txtProduct="";
    var WorkingUnitIDs="";
    $(document).ready(function () {

        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oFARule =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oDEPCalculateOns =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DEPCalculateOns));
        var oFAMethods =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FAMethods));
        var oFADeptEffectFroms =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FADeptEffectFroms));
        var oFARegisterOns =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FARegisterOns));
        var oFAEffectOns =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FAEffectOns));
        var oMeasurementUnits =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.MeasurementUnits));
        var oCurrencys =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        debugger;
        var viewType = sessionStorage.getItem("Operation");
        if (viewType == 'View')
        {
            //$scope.disabled= true;
            //$scope.hide=true;
            $('#btnRevise,#btnApprove,#btnSave').hide();
        }
        else  if (viewType == 'Approve')
        {
            //$scope.disabled= true;
            //$scope.hide=true;
            $('#btnApprove').show();
            $('#btnRevise,#btnSave').hide();
        }
        else
        {
            //$scope.disabled= false;
            //$scope.hide=false;
            $('#btnRevise,#btnApprove').hide();
            $('#btnSave').show();
        }

        //$scope.MeasurementUnits=oMeasurementUnits;
        $("#cboCurrency").icsLoadCombo({List: oCurrencys, OptionValue: "CurrencyID",DisplayText: "CurrencyName", InitialValue:"--Select One--"});
        $("#cboCostPriceEffectOn").icsLoadCombo({List: oFAEffectOns, OptionValue: "id",DisplayText: "Value", InitialValue:"--Select One--"});
        $("#cboCostPriceEffectOn_temp").icsLoadCombo({List: oFAEffectOns, OptionValue: "id",DisplayText: "Value", InitialValue:"--Select One--"});
        
        
        $("#cboDEPCalculateOn").icsLoadCombo({List: oDEPCalculateOns, OptionValue: "id",DisplayText: "Value", InitialValue:"--Select Type--"});
        $("#cboFAMethodInt").icsLoadCombo({List: oFAMethods, OptionValue: "id",DisplayText: "Value", InitialValue:"--Select One--"});
        //$scope.FAMethods=oFAMethods;
        $("#cboDepEffectFormOn").icsLoadCombo({List: oFADeptEffectFroms, OptionValue: "id",DisplayText: "Value", InitialValue:"--Select One--"});
        $("#cboRegisterApplyOn").icsLoadCombo({List: oFARegisterOns, OptionValue: "id",DisplayText: "Value", InitialValue:"--Select One--"});
      //  $("#cboDEPCalculateOn").icsLoadCombo({List: oFAEffectOns, OptionValue: "id",DisplayText: "Value", InitialValue:"--Select One--"});
        SETComboBoxValue();
        if (_oFARule.IsApplyForProductBase==true){ document.getElementById("chkIsApplyForProductBase").checked = true;}

    });

    function SETComboBoxValue()
    {
        $("#cboCurrency").val(_oFARule.CurrencyID);
        $("#cboCostPriceEffectOn,#cboCostPriceEffectOn_temp").val(_oFARule.CostPriceEffectOn);
        $("#cboDEPCalculateOn").val(_oFARule.DEPCalculateOn);
        $("#cboFAMethodInt").val(_oFARule.FAMethodInt);
        $("#cboDepEffectFormOn").val(_oFARule.DepEffectFormOn);
        $("#cboRegisterApplyOn").val(_oFARule.RegisterApplyOn);
        $("#cboDEPCalculateOn").val(_oFARule.DEPCalculateOn);
    }

    $("#cboCostPriceEffectOn").change(function(){
        $("#cboCostPriceEffectOn_temp").val($("#cboCostPriceEffectOn").val());
    });

        function RemoveProduct  ()
        {
            debugger;
            txtProduct="";
            WorkingUnitIDs="";
    };
    
        function PickProduct()
        {
            debugger;

            var oProduct = {
                ProductName:(txtProductName==undefined?'':txtProductName)
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProduct,
                ControllerName: "FARule",
                ActionName: "GetsProductByType",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                
                    if (response.objs[0].ProductID > 0) {
                        var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width: 150, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Name", width: 450, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winProductPicker',
                            winclass: 'clsProductPicker',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblProductPicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'ProductName',
                            windowTittle: 'Product List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiple return
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }
                }
            });
          
        };

        function IntializePickerbutton(oPickerobj) {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                //for Single Select
                SetPickerValueAssign(oPickerobj);
            });
            $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
                if (e.which == 13)//enter=13
                {
                    SetPickerValueAssign(oPickerobj);

                }
            });
        }

        function SetPickerValueAssign(oPickerobj)
        {
            debugger;
            var oreturnObj = null, oreturnobjs = [];
            if (oPickerobj.multiplereturn) {
                oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
            } else {
                oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
            }
            $("#" + oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
           if (oPickerobj.winid == 'winProductPicker')
            {
                if (oreturnObj != null && parseInt(oreturnObj.ProductID) > 0)
                {
                    $('#txtProductCode').val(oreturnObj.ProductCode);
                    $('#txtProductName').val(oreturnObj.ProductName);
                    _oFARule.ProductID=oreturnObj.ProductID;
                }
            }
           
        }

        $('#txtProductName').keydown(function (e) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtProductName = $.trim($('#txtProductName').val());
                if(txtProductName=="" || txtProductName==null)
                {
                    alert("Type Product Name and Press Enter");
                    return;
                }
                PickProduct(txtProductName);
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $('#txtProductCode').val('');
                $('#txtProductName').val('');
                _oFARule.ProductID=0;
            }
        });


    function Validation()
    {
        debugger;
        if(isNaN(parseInt($('#cboFAMethodInt').val())) || parseInt($('#cboFAMethodInt').val())<=0 )
        {
            alert("Please Select Dept. Method & try again!"); return false;
        }
        if(isNaN(parseFloat($('#txtDefaultDepRate').val())) || parseFloat($('#txtDefaultDepRate').val())<=0 )
        {
            alert("Dept. Rate should be greater than zero!"); return false;
        }
        if(isNaN(parseFloat($('#cboDEPCalculateOn').val())) || parseFloat($('#cboDEPCalculateOn').val())<=0 )
        {
            alert("Please Select 'Dept. Apply on' & try again!"); return false;
        }
        
        if(parseInt($('#cboFAMethodInt').val())==1)//only for Straight line Method
        {
            if(isNaN(parseFloat($('#txtUseFullLife').val())) || parseFloat($('#txtUseFullLife').val())<=0 )
            {
                alert("Use Full Life Cost should be greater than zero!"); return false;
            }
        }
        if(isNaN(parseFloat($('#cboCurrency').val())) || parseFloat($('#cboCurrency').val())<=0 )
        {
            //angular.element('#Currency').focus();
            alert("Please Select a Currency  & try again!"); return false;
        }

        if(isNaN(parseFloat($('#txtDefaultCostPrice').val())) || parseFloat($('#txtDefaultCostPrice').val())<=0 )
        {
            alert("Cost Price should be greater than zero!"); return false;
        }
        if(isNaN(parseFloat($('#cboCostPriceEffectOn').val())) || parseFloat($('#cboCostPriceEffectOn').val())<=0 )
        {
            alert("Please Select Cost Price Effect On & try again!"); return false;
        }

        return true;
    }

    $('#btnSave').click(function()
    {
        if(!Validation())return;
        $.icsProgressBar(true);
        var oFARule = RefreshObject();

        $.ajax
({
    type: "POST",
    dataType: "json",
    url : _sBaseAddress+  "/FARule/Save",
    data:  JSON.stringify(oFARule),
    contentType: "application/json; charset=utf-8",
    success: function (data) {
        debugger;
        $.icsProgressBar(false);
        var oFARule=jQuery.parseJSON(data);
        if (oFARule.ErrorMessage=="" || oFARule.ErrorMessage==null) {
            alert("Data Saved sucessfully");
            var oFARules = sessionStorage.getItem("FARules");
            var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
            if (oFARules != null) {
                oFARules = jQuery.parseJSON(oFARules);
            }
            else {
                oFARules = [];
            }
            if (nIndex != -1) {
                oFARules[nIndex] = oFARule;
            }
            else {
                sessionStorage.setItem("SelectedRowIndex", oFARules.length);
                oFARules.push(oFARule);
            }
            sessionStorage.setItem("FARules", JSON.stringify(oFARules));
            window.location.href = sessionStorage.getItem("BackLink_FARule");
        }
        else {
            alert(oFARule.ErrorMessage);
        }
    },
    error: function (xhr, status, error)
    {
        alert(error);
    }
});

    });
    
    function RefreshObject()
    {
        var oFARule = {
                FARuleID : _oFARule.FARuleID,
                ProductID :_oFARule.ProductID,
                FAMethod :parseInt($('#cboFAMethodInt').val()),
                DefaultDepRate :parseFloat($('#txtDefaultDepRate').val()),
                UseFullLife :$('#txtUseFullLife').val(),
                DefaultSalvage :parseFloat($('#txtDefaultSalvage').val()),
                FACodeFull :$('#txtFACodeFull').val(),
                CurrencyID : parseInt($('#cboCurrency').val()),
                FAMethodInt: parseInt($('#cboFAMethodInt').val()),
                DEPCalculateOn : parseInt($('#cboDEPCalculateOn').val()),
                DEPCalculateOnInt : parseInt($('#cboDEPCalculateOn').val()),
                DefaultCostPrice:parseFloat($('#txtDefaultCostPrice').val()),
                CostPriceEffectOn:parseInt($('#cboCostPriceEffectOn').val()),
                DepEffectFormOn :parseInt($('#cboDepEffectFormOn').val()),
                RegisterApplyOn:parseInt($('#cboRegisterApplyOn').val()), 
                Remarks:$('#txtRemarks').val(),
                IsApplyForProductBase :document.getElementById("chkIsApplyForProductBase").checked ==true?true:false
        };

        return oFARule;
    }
    $('#btnClose').click(function()
    {
        window.location.href =sessionStorage.getItem('BackLink_FARule');
    });

    function CodingPolicy ()
    {
        sessionStorage.setItem("BackLink", window.location.href);
        var tsv=((new Date()).getTime())/1000;
        window.location.href = _sBaseAddress+ "/FACode/ViewFACode?id="+_oFARule.ProductID+"&buid="+0+"&ts="+tsv;
    };

</script>


