<html>
@{
    ViewBag.Title = "Re-Cycle Process";
}
<body>
    @model ESimSol.BusinessObjects.RecycleProcess
   
    <div class="menuMainCollectionTable" ng-app="RecycleProcessApp" ng-controller="RecycleProcessController as CSCC" id="divRecycleProcess">
        <div style="font-family:Tahoma;text-align:center;height:90%;" class="regionCI">
            <ul class="nav nav-tabs" style="background:#d6dbdf; color:white;">
                <li ng-class="{active:CSCC.IsSet(1)}">
                    <a href="" ng-click="CSCC.SetTab(1)" style="color:black;">Recycle-Store</a>
                </li>
                <li ng-hide="tab2" ng-class="{active:CSCC.IsSet(2)}">
                    <a href="" ng-click="CSCC.SetTab(2)" style="color:black;">Demage Store</a>
                </li>
            </ul>
            <div ng-show="CSCC.IsSet(1)">
                <fieldset>
                  
                    <legend style="text-align:start">Basic Info :</legend>
                 
                    <div class="row col-md-12">
                        <div class="col-md-2 text-right">
                            <label class="control-label">Ref No:</label>
                        </div>

                        <div class="col-md-2 text-left">
                            <input ng-model="RecycleProcess.RefNo" class="form-control" disabled />
                        </div>
                        <div class="col-md-2 text-right">
                            <label class="control-label">RecycleType</label>
                        </div>
                        <div class="col-md-2 text-left">
                            <select ng-model="RecycleProcess.RecycleProcessType" class="form-control" ng-change="showSelectValue()" ng-options="oItem.id as oItem.Value for oItem in RecycleType"></select>
                        </div>
                      
                    </div>
                    <div class="row col-md-12">
                        <div class="col-md-2 text-right"><label class="control-label">Process Date:</label></div>
                        <div class="col-md-2 text-left">
                            <div class="input-group date date-container">
                                <input type="text" class="form-control" ng-model="RecycleProcess.ProcessDateInString"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                            </div>
                        </div>
                        <div class="col-md-2 text-right"><label class="control-label">Note:</label></div>
                        <div class="col-md-2 text-left">
                            <input ng-model="RecycleProcess.Note" class="form-control" />
                        </div>
                        <div class="col-md-4"></div>
                    </div>

                </fieldset>

                <div class="ui-grid-top-panel" style="text-align:left;">
                    <label>Store:</label><select ng-model="RecycleProcess.WorkingUnitID" id="cboWU" style="width:100px; height:24px;" ng-options="oItem.WorkingUnitID as oItem.WorkingUnitName for oItem in WorkingUnits"></select>
                    <label>Product:</label><input ng-model="txtProductName" placeholder="Type Product Name & Press Enter" ng-keydown="SearchKeyProductName($event)" style="width:150px; height:24px;" required />
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="PickProduct()"><span class="glyphicon glyphicon-ok" aria-hidden="true"> Pick</span></button>
                    <label>M.Unit:</label><select ng-model="UnitID" style="width:100px; height:24px;" ng-options="oItem.MeasurementUnitID as oItem.Symbol for oItem in MeasurementUnits"></select>
                    <label>Qty:</label><input type="number" ng-model="txtQty"  style="width:100px; height:24px;" />
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="AddDetail()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RemoveDetail()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Remove</span></button>
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RefreshDetail()"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                </div>
                <div style="width: 100%; height:350px;" ui-grid="gridOptionsRPDetail" ui-grid-selection ui-grid-cellnav ui-grid-edit></div>

            </div>
            <div ng-show="CSCC.IsSet(2)">

                <div class="ui-grid-top-panel" style="text-align:left;">
                    <label>Store:</label><select ng-model="DamgeWorkingUnitID" style="width:100px; height:24px;" ng-options="oItem.WorkingUnitID as oItem.WorkingUnitName for oItem in WorkingUnitsDamage"></select>
                    <label>Product:</label><input ng-model="txtProductNameDamage" placeholder="Type Product Name & Press Enter" ng-keydown="SearchKeyProductNameDamage($event)" style="width:150px; height:24px;" required />
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="PickProductDamage()"><span class="glyphicon glyphicon-ok" aria-hidden="true"> Pick</span></button>
                    <label>Lot:</label><input ng-model="txtProductDamageLot" placeholder="Type Lot No & Press Enter" ng-keydown="SearchKeyLotName($event)" style="width:150px; height:24px;" required />
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="PickProductDamageLot()"><span class="glyphicon glyphicon-ok" aria-hidden="true"> Pick</span></button>
                    <label>Qty:</label><input type="number" ng-model="txtQtyDamage" style="width:100px; height:24px;" />
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="AddDetailDamage()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RemoveDetailDamage()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Remove</span></button>
                    <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RefreshDetail()"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                </div>
                <div ng-hide="tabtable" style="width: 100%; height:400px;" ui-grid="gridOptionsDMGDetail" ui-grid-selection ui-grid-cellnav ui-grid-edit></div>

            </div>

            <fieldset>

                <legend style="text-align:start">Action</legend>
                <div class="row col-md-12 text-right">
                    <button type="button" id="btnApprove" class="btn btn-sm" aria-label="Left Align" ng-show="btnApprove" ng-click="Approve()"> <span class="glyphicon glyphicon-ok" aria-hidden="true"> Approve</span> </button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-hide="btnSave" ng-click="Save()"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Save</span> </button>
                    <button type="button" id="btnclose" class="btn btn-sm" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
                </div>
            </fieldset>
        </div>
    </div>
</body>
</html>
<style type="text/css">
    .regionCI .form-horizontal .control-label {
        padding-top: 1px;
    }

    .regionCI .form-control {
        height: 26px;
        padding: 0px 6px;
        font-size: 12px;
    }

    .regionCI .form-controlsm {
        height: 20px;
        padding: 0px 2px;
        text-align:right;
        width:100%;
        font-size: 12px;
    }
    .regionCI .col-md-12 {
        width: 100%;
        padding-right: 5px;
        padding-left: 5px;
        margin-bottom: 3px;
    }

    .regionCI .col-md-2 {
        width: 16.66%;
        padding-right: 5px;
        padding-left: 5px;
    }
   
     .regionCI .col-md-10 {
        width: 83.34%;
        padding-right: 5px;
        padding-left: 5px;
    }
 
    .regionCI .btn-sm {
        padding: 3px 10px;
    }

    .regionCI .input-group-addon {
        padding: 4px 8px;
    }
       .region-tab div.tab {
                    overflow: hidden;
                    border: none;
                    background-color: #FFFFFF;
                    height: 30px;
                }
                /* Style the buttons inside the tab */
                div.tab button {
                    background-color: inherit;
                    float: left;
                    border: none;
                    outline: none;
                    cursor: pointer;
                    padding-top: 10px;
                    padding-right: 10px;
                    padding-left: 10px;
                    transition: 0.3s;
                }

                .region-tab div.tab label {
                    background-color: inherit;
                    float: right;
                    border: none;
                    outline: none;
                    cursor: pointer;
                    padding: 6px 10px;
                    /*transition: 0.3s;*/
                    font-weight: bold;
                }
                /* Change background color of buttons on hover */
                div.tab button:hover {
                    border-bottom: 2px solid blue;
                }
                /* Create an active/current tablink class */
                div.tab button.active {
                    border-bottom: 2px solid blue;
                    background-color: #E0ECFF;
                }
</style>
<script type="text/javascript">
    //debugger;
    var oRecycleProcess =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oWorkingUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.WorkingUnits));
    var oWorkingUnitsDamage = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.WorkingUnitsDamage));
    var oRecycleType= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.RecycleType));
    var RecycleProcessApp = angular.module('RecycleProcessApp', ['ngAnimate', 'ui.bootstrap','ui.grid', 'ui.grid.selection','ui.grid.edit', 'ms.service']);
    RecycleProcessApp.controller('RecycleProcessController', function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession,icsMethod,msGridControl) {
      //  debugger;
        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });
       // $('#txtQty').icsNumberBox(null, null, 2);
        oRecycleProcess.BUID = sessionStorage.getItem('BUID');
        oRecycleProcess.ProductNatureInInt = sessionStorage.getItem('ProductNature');
        $scope.RecycleProcessDetails=oRecycleProcess.RecycleProcessDetails;
        $scope.RecycleProcess=oRecycleProcess;
        $scope.DamageDetails = oRecycleProcess.DamageDetails;
        $scope.WorkingUnits = oWorkingUnits;
        $scope.WorkingUnitsDamage = oWorkingUnitsDamage;
        $scope.RecycleType = oRecycleType;
        //if(RecycleProcess.RecycleTypeID == 2){
        //    $scope.tab2 = false;
        //}

        var oDetailColumns = [];
        var oColumn ={ field: 'WorkingUName', name: 'Store', width: '40%',align:'left',cellClass: 'text-left', enableSorting: false ,enableCellEdit:false};oDetailColumns.push(oColumn);
        oColumn ={ field: 'ProductCode', name: 'Code', width: '15%', cellClass: 'text-left',enableSorting: false ,enableCellEdit:false};oDetailColumns.push(oColumn);
        oColumn ={ field: 'ProductName', name: 'Product', width: '40%',align:'left',cellClass: 'text-left', enableSorting: false ,enableCellEdit:false};oDetailColumns.push(oColumn);
        oColumn ={ field: 'Symbol', name: 'Unit', width: '10%',align:'left', enableSorting: false ,enableCellEdit:false};oDetailColumns.push(oColumn);
        oColumn ={ field: 'Qty', name: 'Qty',cellClass: 'text-right',enableCellEdit:true, width: '20%',align:'left',cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum,aggregationHideLabel: true,footerCellClass: 'text-right',footerCellFilter: 'number:0' };oDetailColumns.push(oColumn);

        $scope.gridOptionsRPDetail = {
            showColumnFooter: true,
            multiSelect: false,
            enableRowSelection: true,
            enableSelectAll: false,
            columnDefs:oDetailColumns,
            data:$scope.RecycleProcessDetails,
            onRegisterApi: function (gridApi) {
                $scope.gridDetailApi = gridApi;
                gridApi.edit.on.afterCellEdit($scope,
                  function (rowEntity, colDef, newValue, oldValue)
                  {
                      debugger;
                      rowEntity.Qty= parseFloat(rowEntity.Qty);
                      return rowEntity;
                  });
            }
        };

        
        //if($scope.WorkingUnitsDamage.LotID>0){
        //    $scope.tab2 =false;
        //}
     
        $scope.showSelectValue = function() {
            debugger;
            if($scope.RecycleProcess.RecycleProcessType==1 ){
                $scope.tab2 = true;
            }
           else{
                $scope.tab2 = false;
           
            }

        
           
        }
        var oDetailColumnsDamage = [];
        var oColumn ={ field: 'ProductCode', name: 'F.G Code', width: '13%', cellClass: 'text-left',enableSorting: false ,enableCellEdit:false};oDetailColumnsDamage.push(oColumn);
        oColumn ={ field: 'ProductName', name: 'F.G Name', width: '20%',align:'left',cellClass: 'text-left', enableSorting: false ,enableCellEdit:false};oDetailColumnsDamage.push(oColumn);
        oColumn ={ field: 'WorkingUnitName', name: 'Store', width: '20%',align:'left', enableSorting: false ,enableCellEdit:false};oDetailColumnsDamage.push(oColumn);
        oColumn ={ field: 'LotNo', name: 'Lot',cellClass: 'text-right',enableCellEdit:false, width: '20%',align:'left' };oDetailColumnsDamage.push(oColumn);
        oColumn ={ field: 'Symbol', name: 'Unit', width: '8%',align:'left', enableSorting: false ,enableCellEdit:false};oDetailColumnsDamage.push(oColumn);
        oColumn ={ field: 'Qty', name: 'Qty',cellClass: 'text-right',enableCellEdit:true, width: '10%',align:'left',cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum,aggregationHideLabel: true,footerCellClass: 'text-right',footerCellFilter: 'number:0' };oDetailColumnsDamage.push(oColumn);
        ////Commercial invoice LC Detail
        $scope.gridOptionsDMGDetail = {
            showColumnFooter: true,
            multiSelect: false,
            enableRowSelection: true,
            enableSelectAll: false,
            columnDefs:oDetailColumnsDamage,
            data:$scope.DamageDetails,
            onRegisterApi: function (gridApi) {
                $scope.gridDetailApi2 = gridApi;
                gridApi.edit.on.afterCellEdit($scope,
                  function (rowEntity, colDef, newValue, oldValue)
                  {
                      debugger;
                      rowEntity.Qty= parseFloat(rowEntity.Qty);
                      return rowEntity;
                  });
            }
        };

      //  $scope.tab2 = true;

        $scope.RefreshDetail = function ()
        {
            $scope.gridOptionsRPDetail.data =  $scope.gridOptionsRPDetail.data;
        };


        $scope.PickProduct=   function ()
        {
            var oProduct = {
                BUID: $scope.RecycleProcess.BUID,
                ProductName: $.trim($scope.txtProductName)
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/RecycleProcess/GetProducts',$.param(oProduct), config).then(
                        function (response)
                        {
                            var oColumns = [];
                            var oColumn = { field: 'ProductCode', name: 'Code',width: '30%'  };oColumns.push(oColumn);
                            oColumn = { field: 'ProductName', name: 'Product Name',width: '40%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'MUnitName', name: 'Unit Name',width: '30%', enableSorting: false  };oColumns.push(oColumn);
                            var results=jQuery.parseJSON(response.data);
                            var modalObj={
                                size:'md',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Product List',
                                searchingbyfieldName:'ProductName',
                                columns:oColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                debugger;
                                $scope.txtProductName=result.ProductName;
                                $scope.ProductCode = result.ProductCode;
                                $scope.ProductName = result.ProductName;
                                $scope.ProductID=result.ProductID;
                                $scope.LoadUnits(result.UnitTypeInInt);

                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );

        };

        $scope.PickProductDamage=   function ()
        {
            if($scope.DamgeWorkingUnitID==null){alert("Please Select The Store First");return;}
            var oProduct = {
                BUID: $scope.RecycleProcess.BUID,
                ModuleNameInInt:111,//Recycle process:111
                ProductUsagesInInt:2,//finish good
                ProductName: $.trim($scope.txtProductNameDamage)
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/Product/GetProductsByBUModuleWithProductUse',$.param(oProduct), config).then(
                        function (response)
                        {
                            var oColumns = [];
                            var oColumn = { field: 'ProductCode', name: 'Code',width: '30%'  };oColumns.push(oColumn);
                            oColumn = { field: 'ProductName', name: 'Product Name',width: '40%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'MUnitName', name: 'Unit Name',width: '30%', enableSorting: false  };oColumns.push(oColumn);
                            var results=jQuery.parseJSON(response.data);
                            var modalObj={
                                size:'md',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Product List',
                                searchingbyfieldName:'ProductName',
                                columns:oColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                debugger;
                                $scope.txtProductNameDamage=result.ProductName;
                                $scope.ProductCode = result.ProductCode;
                                $scope.DamageProductId=result.ProductCode;
                                $scope.ProductName = result.ProductName;
                                $scope.ProductID=result.ProductID;
                                $scope.LoadUnits(result.UnitTypeInInt);

                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );

        };

        $scope.SearchKeyProductName = function (e) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtProductName = $.trim($scope.txtProductName);
                if(txtProductName=="" || txtProductName==null)
                {
                    alert("Type Sheet No and Press Enter");
                    return;
                }
                $scope.PickProduct();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtProductName='';
                $scope.ProductID=0;
            }
        };

        $scope.SearchKeyProductNameDamage = function (e) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtProductNameDamage = $.trim($scope.txtProductNameDamage);
                if(txtProductNameDamage=="" || txtProductNameDamage==null)
                {
                    alert("Type Sheet No and Press Enter");
                    return;
                }
                $scope.PickProductDamage();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtProductNameDamage='';
                $scope.ProductID=0;
            }
        };
        $scope.SearchKeyLotNameDamage = function (e) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtProductDamageLot = $.trim($scope.txtProductDamageLot);
                if(txtProductDamageLot=="" || txtProductDamageLot==null)
                {
                    alert("Type Sheet No and Press Enter");
                    return;
                }
                $scope.PickProductDamageLot();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtProductDamageLot='';
                $scope.ProductID=0;
            }
        };
        $scope.PickProductDamageLot=   function ()
        {
            if($scope.DamgeWorkingUnitID==null){alert("Please Select The Store First");return;}
        
            if($scope.txtProductNameDamage==null){alert("Please Select The Product First");return;}
            var oLot = {
          
                ProductID:$scope.DamageProductId,
                WorkingUnitID:$scope.DamgeWorkingUnitID,
                LotNo: $.trim($scope.txtProductDamageLot)
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/Lot/GetsLot',$.param(oLot), config).then(
                        function (response)
                        {
                            var oColumns = [];
                            var oColumn = { field: 'LotNo', name: 'Lot No',width: '30%'  };oColumns.push(oColumn);
                            oColumn = { field: 'Balance', name: 'Balance',width: '40%', enableSorting: false  };oColumns.push(oColumn);
                            var results=jQuery.parseJSON(response.data);
                            
                            var modalObj={
                                size:'md',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Lot List',
                                searchingbyfieldName:'LotNo',
                                columns:oColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                debugger;
                                if(parseInt(result.LotID)>0)
                                {
                                    //$scope.LotID=result.LotID;
                                    $scope.SelectedLot=result;
                                    $scope.txtProductDamageLot = result.LotWithBalance;
                                }
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );

        };
        $scope.LoadUnits = function(nUnitTypeInt)
        {
            var oMeasurementUnit={
                UnitTypeInInt : nUnitTypeInt
            };


            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/MeasurementUnit/GetbyUnitType',$.param(oMeasurementUnit), config).then(
                        function (response)
                        {
                            var results=jQuery.parseJSON(response.data);
                            $scope.MeasurementUnits = results;
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);$scope.MeasurementUnits=[];}
                    );


        };

        $scope.RemoveDetail = function ()
        {
            debugger;
            var oMLCDetail = $scope.gridDetailApi.selection.getSelectedRows()[0];
            if(oMLCDetail==null)
            {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex=$scope.gridOptionsRPDetail.data.indexOf(oMLCDetail);
            if (!confirm("Confirm to Delete?")) return ;
            $scope.gridOptionsRPDetail.data.splice(SelectedRowIndex,1);
            //$scope.SetTotal();
        };
        $scope.RemoveDetailDamage = function ()
        {
            debugger;
            var oMLCDetail = $scope.gridDetailApi2.selection.getSelectedRows()[0];
            if(oMLCDetail==null)
            {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex=$scope.gridOptionsDMGDetail.data.indexOf(oMLCDetail);
            if (!confirm("Confirm to Delete?")) return ;
            $scope.gridOptionsDMGDetail.data.splice(SelectedRowIndex,1);
            //$scope.SetTotal();
        };
        $scope.AddDetail =  function()
        {
            //if($scope.ProductionSheetID<=0){alert("Please Pick Production Sheet.");return;}
            //if($scope.ProductID<=0){alert("Please Pick Product.");return;}
            //if($scope.UnitID<=0){alert("Please Select M. Unit.");return;}
            if($scope.txtProductName==null){alert("Please Select Production Name");return;}
            if($scope.UnitID==null){alert("Please Select M. unit");return;}
            if($scope.txtQty==null){alert("Please Select Quantity");return;}
            if($scope.RecycleProcess.WorkingUnitID==0){
                alert("Please Select Store");return;
            }
            debugger;
            var oRCProcessDetail = {
                RecycleProcessDetailID :0,
                RecycleProcessID:$scope.RecycleProcess.RecycleProcessID,
                ProductID :$scope.ProductID,
                UnitID :$scope.UnitID,
                Qty :$scope.txtQty,
                RecycleProcessType:1,
                ProductCode :$scope.ProductCode,
                ProductName :$scope.ProductName,
                ProcessProductType:1,
                WorkingUnitID:$scope.RecycleProcess.WorkingUnitID,
                WorkingUName:$("#cboWU option:selected").text(),//$scope.RecycleProcess.WorkingUnitName,
                Symbol :  $scope.MeasurementUnits.filter(function(obj){return obj.MeasurementUnitID== parseInt($scope.UnitID);})[0].Symbol

            };

            var oRecycleProcessDetails = $scope.gridOptionsRPDetail.data;
            if(!icsMethod.ICS_IsExist(oRecycleProcessDetails,'ProductID', oRCProcessDetail.ProductID))
            {
                $scope.gridOptionsRPDetail.data.push(oRCProcessDetail);
            }
            
            $scope.txtProductName='';
            $scope.ProductCode = '';
            $scope.ProductName = '';
            $scope.ProductID=0;
            $scope.MeasurementUnits = [];
        };
        $scope.AddDetailDamage =  function()
        {
            if($scope.DamgeWorkingUnitID==null){alert("Please Select The Store First");return;}
        
            if($scope.txtProductNameDamage==null){alert("Please Select The Product First");return;}
            if($scope. txtProductDamageLot==null){alert("Please Select The Lot First");return;}
           
            if($scope.  txtQtyDamage==null){alert("Please Input The Quantity");return;}
           
            //if($scope.ProductID<=0){alert("Please Pick Product.");return;}
            //if($scope.UnitID<=0){alert("Please Select M. Unit.");return;}
            if($scope.txtQtyDamage>$scope.SelectedLot.Balance){alert("Please input less value than the total Balance");return;}
            debugger;
            var oRCProcessDetail = {
                RecycleProcessDetailID :0,
                RecycleProcessID:$scope.RecycleProcess.RecycleProcessID,
                ProductID :$scope.ProductID,
                UnitID :$scope.SelectedLot.MUnitID,
                Qty :$scope.txtQtyDamage,
                ProductCode :$scope.ProductCode,
                ProductName :$scope.ProductName,
                LotID:$scope.SelectedLot.LotID,
                LotNo:$scope.SelectedLot.LotNo,
                RecycleProcessType:2,
                WorkingUnitName:$scope.SelectedLot.OperationUnitName,
                //Symbol:$scope.SelectedLot.Symbol,
                ProcessProductType:2,
                Symbol :  $scope.SelectedLot.MUName

            };

            var oRecycleProcessDetails = $scope.gridOptionsDMGDetail.data;
            if(!icsMethod.ICS_IsExist(oRecycleProcessDetails,'ProductID', oRCProcessDetail.ProductID))
            {
                $scope.gridOptionsDMGDetail.data.push(oRCProcessDetail);
            }
            $scope.txtProductNameDamage='';
            $scope.txtProductDamageLot='';
            $scope.txtQtyDamage='';
            $scope.txtProductName='';
            $scope.ProductCode = '';
            $scope.ProductName = '';
            $scope.ProductID=0;
            $scope.MeasurementUnits = [];
        };

        $scope.Save = function ()
        {
         
            debugger;
            if(!$scope.ValidateInput()) return;
            var oRP= $scope.RecycleProcess;
            oRP.ProcessDate = new Date(oRP.ProcessDateInString);
            //var oDetails = $scope.gridOptionsRPDetail.data;
            //if($scope.RecycleProcess.RecycleProcessType==2){
            //for(var i = 0;i<$scope.gridOptionsDMGDetail.data.length;i++)
            //{
            //    oDetails.push($scope.gridOptionsDMGDetail.data[i]);
            //}
            //}

            //var oDets = [];
            //if($scope.RecycleProcess.RecycleProcessType==2){
            //    for(var i = 0;i<oRP.DamageDetails.length;i++)
            //    {
            //        oRP.RecycleProcessDetails.push(oRP.DamageDetails[i]);
            //    }
            //}
            //oDets.push(oRP.RecycleProcessDetails);

            debugger;
            //oRP.RecycleProcessDetails = oDetails;
            //return;
            $http.post(sessionStorage.getItem('BaseAddress')+'/RecycleProcess/Save',oRP).then(
                        function (response)
                        {
                            var oRecycleProcess= jQuery.parseJSON(response.data);
                            if (oRecycleProcess.ErrorMessage=="" || oRecycleProcess.ErrorMessage==null)
                            {
                                alert("Data Save Successfully!!");
                                var oRecycleProcesss = sessionStorage.getItem("RecycleProcesList");
                                var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                                if (oRecycleProcesss != null) {
                                    oRecycleProcesss = jQuery.parseJSON(oRecycleProcesss);
                                }
                                else {
                                    oRecycleProcesss = [];
                                }
                                if (nIndex != -1) {
                                    oRecycleProcesss[nIndex] = oRecycleProcess;
                                }
                                else {
                                    sessionStorage.setItem("SelectedRowIndex", oRecycleProcesss.length);
                                    oRecycleProcesss.push(oRecycleProcess);
                                }
                                sessionStorage.setItem("RecycleProcesList", JSON.stringify(oRecycleProcesss));
                                window.location.href = sessionStorage.getItem("BackLink");
                            }
                            else
                            {
                                alert(oRecycleProcess.ErrorMessage);
                            }

                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);$scope.MeasurementUnits=[];}
                    );

        };

        $scope.Approve = function ()
        {
            if(!$scope.ValidateInput()) return;
            var oRecycleProcess= $scope.RecycleProcess;

            $http.post(sessionStorage.getItem('BaseAddress')+'/RecycleProcess/Approve',oRecycleProcess).then(
                        function (response)
                        {
                            var oRecycleProcess= jQuery.parseJSON(response.data);
                            if (oRecycleProcess.ErrorMessage=="" || oRecycleProcess.ErrorMessage==null)
                            {
                                alert("Data Approved Successfully!!");
                                var oRecycleProcesss = sessionStorage.getItem("RecycleProcesList");
                                var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                                if (oRecycleProcesss != null) {
                                    oRecycleProcesss = jQuery.parseJSON(oRecycleProcesss);
                                }
                                else {
                                    oRecycleProcesss = [];
                                }
                                if (nIndex != -1) {
                                    oRecycleProcesss[nIndex] = oRecycleProcess;
                                }
                                else {
                                    sessionStorage.setItem("SelectedRowIndex", oRecycleProcesss.length);
                                    oRecycleProcesss.push(oRecycleProcess);
                                }
                                sessionStorage.setItem("RecycleProcesList", JSON.stringify(oRecycleProcesss));
                                window.location.href = sessionStorage.getItem("BackLink");
                            }
                            else
                            {
                                alert(oRecycleProcess.ErrorMessage);
                            }

                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);$scope.MeasurementUnits=[];}
                    );
        };

        $scope.ValidateInput =  function ()
        {
            debugger;
            if($scope.RecycleProcess.WorkingUnitID==0)
            {
                alert('Please Select Store');
                return false;
            }

            if($scope.gridOptionsRPDetail.data.length <=0)
            {
                alert("Please Add Re-Cycle Process Details");  
                return false;
            }

            if($scope.RecycleProcess.RecycleProcessType==2)
            {
                if($scope.gridOptionsDMGDetail.data.length<=0)
                {
                    alert("Please Add Re-Cycle Process Details");  
                    return false;
                }
            }

            

            var oRPIDetails = $scope.gridOptionsRPDetail.data;
            for(var i = 0;i<oRPIDetails.length;i++)
            {
                if(parseFloat(oRPIDetails[i].Qty)<=0)
                {
                    alert(" Qty Should be greater than 0 For Sheet No: '"+oRPIDetails[i].SheetNo+" AND Product No: "+oRPIDetails[i].ProductName);
                    return false;
                }
            }
            return true;
        };

        if(sessionStorage.getItem("RecycleProcessHeader")=="View Recycle Process")
        {
            $("#divRecycleProcess :input").prop('disabled', true);
            $('#btnclose').prop('disabled', false);
        }else if(sessionStorage.getItem("RecycleProcessHeader")=="Approve Recycle Process")
        {
            $scope.btnSave = true;
            $scope.btnApprove = true;
            $("#divRecycleProcess :input").prop('disabled', true);
            $('#btnApprove,#btnclose').prop('disabled', false);
        }

        $scope.Close=function ()
        {
            window.location.href = sessionStorage.getItem("BackLink");
        };
        if($scope.RecycleProcess.RecycleProcessType==1 ){
            $scope.tab2 = true;
            //IsSet(2)
        }

        this.tab = 1;
        this.SetTab = function (tabId)
        {
            this.tab = tabId;
        }
        this.IsSet = function (tabid)
        {
            return this.tab === tabid;
        }


    });



</script>