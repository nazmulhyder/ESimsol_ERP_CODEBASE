@model IEnumerable<ESimSol.BusinessObjects.PunchLog>
    @{
        ViewBag.Title = "View_PunchLogs";
    }
    <div style="margin-left:0px; height:500px" class="menuMainCollectionTable">
        <table id="tblPunchLog" title="Punch  List" class="easyui-datagrid" style="width:100%;height:500px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbar">
            <thead>
                <tr>
                    <th data-options="field:'Selected',checkbox:true"></th>
                    <th field="EmployeeCode" width="120" align="left">Employee Code</th>
                    <th field="EmployeeName" width="150" align="left">Employee Name</th>
                    <th field="LocationName" width="80" align="left">Location</th>
                    <th field="BUName" width="80" align="left">BU</th>
                    <th field="DepartmentName" width="150" align="left">Department</th>
                    <th field="DesignationName" width="150" align="left">Designation</th>
                    <th field="PunchTimeInString" width="90" align="left">Punch Time</th>
                    <th field="PunchDateInString" width="90" align="left">Punch Date</th>
                </tr>
            </thead>
        </table>

        ​<table>
            <tr>
                <td>
                    @*Load <input id="txtLoadRecords" type="text" style="width:70px"/>  &nbsp; Records*@
                    <input id="chkRange_Collection" type="checkbox" />Range
                    <label id="lblRange1_Collection">
                        <input id="txtFrom_Collection" type="text" style="width:40px" />&nbsp; To &nbsp;
                    </label>
                    <label id="lblRange2_Collection">
                        <input id="txtTo_Collection" type="text" style="width:40px" />
                    </label>
                    &nbsp; &nbsp;
                    <label id="lblcount_Collection"></label>
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next_Collection()">Next</a>
                </td>
            </tr>
        </table>

        <div id="toolbar" style="height:auto;">
            <input id="dtDateFrom" type="text" style="width: 95px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
            &nbsp; To &nbsp;<input id="dtDateTo" type="text" style="width: 95px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />

            <input id="txtBusinessUnit_Collection" type="text" style="width:12%;" placeholder="Pick Business Unit" />
            <a id="btnBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
            <a id="btnResetBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

            <input id="txtLocation_Collection" style="width:12%;" placeholder="Pick Location" type="text" />
            <a id="btnLocationPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
            <a id="btnResetLocationPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

            <input id="txtDepartment_Collection" style="width:12%;" type="text" placeholder="Pick Department" />
            <a id="btnDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
            <a id="btnResetDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

            <input id="txtDesignation_Collection" type="text" style="width:12%;" placeholder="Pick Designation" />
            <a id="btnDesignationPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
            <a id="btnResetDesignationPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
            
            <br />

            <input id="txtEmployee_Collection" style="width:14%;" type="text" placeholder="Type Code & Enter" />
            <a id="btnEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
            <a id="btnCEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

            <a id="btnSearchByDepartmentAndDateRange" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-search" onclick="SearchByDepartmentAndDateRangeWithPasignation()"></a>

            <a id="btnPunch" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-ok" onclick="Punch()">Punch</a>
            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="Delete()">Delete</a>

            <select id="cboPunchType">
                <option value="0">--Select Type--</option>
                <option value="1">Daily Punch</option>
                <option value="2">Individual Punch</option>
            </select>
            <a id="btnExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">Punch Card</a>
        </div>

        <div id="winFormat12_24" class="easyui-window" title="Time Format" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <table class="tbl">
                <tr>
                    <td style="text-align:center">
                        <div class="divLabel">
                            <input id="rdbtnFormat12" type="radio" name="FormatS" />
                        </div>
                        <div class="divInput">
                            12 Hr(s)
                        </div>
                    </td>
                    <td style="text-align:center">
                        <div class="divLabel">
                            <input id="rdbtnFormat24" type="radio" name="FormatS" />
                        </div>
                        <div class="divInput">
                            24 Hr(s)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="2" class="actionfieldsetstyle">
                        <a id="btnOkFormatSelection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" style="margin-left:-20px;">Ok</a>
                        <a id="btnCloseFormatSelection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Cancel</a>
                    </td>
                </tr>
            </table>
        </div>

        <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="locationtree" data-options="checkbox:true" singleselect="false"></ul>
                </div>

                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:400px; text-align:right"></td>

                            <td style="width:50px">
                                <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

        <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="width: 100%; font-family: Tahoma;">
                <div style="width: 47%; float: left;">
                    <table class="tbl-AdvSearch">
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Employee Name :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Code :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Present Address :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Permanent Address :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Authentication No :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                                <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Attendance Scheme :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                                <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                BU :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboBU" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Location :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Dept./Section :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Designation :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Block :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtBlock" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnBlock" class="pick-btn" type="button" value="P" />
                                <input id="btnResetBlock" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Employee Type :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeType" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Category:
                            </td>
                            <td class="td-AdvSearch-Level">
                                <div>
                                    <select id="cboCategory" style="width:160px; float:left;"></select>
                                    &nbsp; Gender :
                                    <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                        <option value="0">None</option>
                                        <option value="1">Male</option>
                                        <option value="2">Female</option>
                                    </select>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Current Shift :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboShift_EmpSearch" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Card Status :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Working Status :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Date Of Birth :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboDateType" style="width: 75px" class="cboReset">
                                    <option value='0'>None</option>
                                    <option value='1'>Equal</option>
                                    <option value='2'>Between</option>
                                </select>
                                <span></span>
                                <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                                <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                                <span id="regionDateTo">
                                    <span>To</span>
                                    <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                    <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                                </span>

                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Joining Date :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                                <input id="dtJoiningDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                                <input id="dtJoiningDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkActive" class="chkReset" /> Active
                                <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                                <input type="checkbox" id="chkUser" class="chkReset" /> User
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                                <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                            </td>
                        </tr>
                    </table>
                </div>
                <div style="width: 52%; float: right;">
                    <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 480px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                        <thead>
                            <tr>
                                <th data-options="field:'Selected',checkbox:true"></th>
                                <th field="Code" width="200"> Code</th>
                                <th field="Name" width="150">Employee Name</th>
                                <th field="DepartmentName" width="100">Department</th>
                                <th field="DesignationName" width="100">Designation</th>
                            </tr>
                        </thead>
                    </table>
                    <table style="width: 485px; font-size: 12px; font-weight: bold;">
                        <tr>
                            <td style="text-align: left">
                                <input id="chkRange" type="checkbox" />Range
                                <label id="lblRange1">
                                    <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                                </label>
                                <label id="lblRange2">
                                    <input id="txtTo" type="text" style="width:40px" />
                                </label>
                                <label id="lblcount"></label>
                            </td>
                            <td style="text-align: right">
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                                <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                                <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align: left"></td>
                            <td style="text-align: right"></td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>

        <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
                </div>
                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:400px; text-align:right"></td>

                            <td style="width:50px">
                                <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

        @Html.Raw(File.ReadAllText(Server.MapPath("~/Views/Department/DepartmentPicker.html")))
        @Html.Raw(File.ReadAllText(Server.MapPath("~/Views/PunchLog/ManualPunch.html")))

    </div>

    <style>
        #winFormat12_24 {
        width: 350px;
    }
        .tbl-AdvSearch {
            width: 100%;
            font-size: 11px;
            font-weight: bold;
            text-align: left;
            margin-left: 3px;
        }

        .td-AdvSearch-Level {
            text-align: right;
        }

        .td-AdvSearch-Input {
            text-align: left;
        }

        .txtfield-search {
            width: 312px;
            text-align: left;
            font-size: 11px;
        }

        .txtfield-picker {
            width: 265px;
            text-align: left;
            font-size: 11px;
        }

        .selection-search {
            width: 310px;
            text-align: left;
            font-size: 11px;
        }

        .pick-btn {
            width: 20px;
            text-align: center;
            font-size: 11px;
        }
    </style>

    <script type="text/javascript">
        var _oPunchLogs = [];
        var _sBaseAddress="";
        var _oEmployees=[];
        var _nLoadRecords = 0;
        var _nRowLength = 0;
        var _bNext = false;
        var _nLastPunchLogID = 0;
        var _oEmployee = null;
        var _sEmployeeIDs ="";
        var _Code = "";

        var _sBusinessUnitIds = "";
        var _sLocationID = "";
        var _sDepartmentIds = "";
        var _sDepartmentNames = "" ;
        var _sDesignationIds = "";
        var _sDesignationNames = "";
        var _sBlockNames="";
        var _sBMMIDs="";

        var _oEmployeeTypes=[];
        var _oShifts=[];
        var _oEmployeeCSs=[];
        var _oEmployeeWSs=[];
        var _oBusinessUnits=[];

        $(document).ready(function ()
        {
            _oPunchLogs =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
            _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
            _oMonths= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Months));
            _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
            _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
            _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
            _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
            _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
            var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));

            $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
            $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

            $('#txtFrom_Collection').numberbox({min:0, precision:0 });
            $('#txtTo_Collection').numberbox({min:0, precision:0 });
            $('#txtFrom_Collection').numberbox('setValue',1);
            $('#txtTo_Collection').numberbox('setValue',50);
            document.getElementById("lblRange1_Collection").style.display = 'none';

            LoadCateGory(oEmployeeCategorys);
            InitializeAdvSearch();
        });

        $('#chkRange_Collection').click(function()
        {
            if(document.getElementById("chkRange_Collection").checked == true)
            {
                $("#lblRange1_Collection").show();
            }
            else
            {
                $("#lblRange1_Collection").hide();
            }
        });

        function LoadCateGory(oEmployeeCategorys)
        {
            $("#cboCategory").icsLoadCombo({
                List: oEmployeeCategorys,
                OptionValue: "Value",
                DisplayText: "Text"
            });
        }
        
        function RefreshList(oPunchLogs)
        {
            //debugger;
            data = oPunchLogs ;
            data = { "total": "" + data.length + "", "rows": data };
            $('#tblPunchLog').datagrid('loadData', data);
        }

        function SearchByDepartmentAndDateRangeWithPasignation()
        {
            if(!_bNext)
            {
                _nRowLength = 0;
                _nLastPunchLogID = 0;
            }

            var dtDateFrom= $('#dtDateFrom').datebox('getValue');
            var dtDateTo= $('#dtDateTo').datebox('getValue');

            _nLoadRecords = document.getElementById("txtTo_Collection").value;
            if(document.getElementById("chkRange_Collection").checked == true)
            {
                var RangeFrom = 0;
                var RangeTo = 0;
                RangeFrom = parseFloat(document.getElementById("txtFrom_Collection").value);
                RangeTo = parseFloat(document.getElementById("txtTo_Collection").value);

                if(RangeFrom > RangeTo)
                {
                    alert("Invalid Range !");
                    return;
                }
                _nRowLength = 0;
                _nLoadRecords = 0;

                _nRowLength = RangeFrom-1;
                _nLoadRecords = RangeTo - RangeFrom +1;

            }
            
            var tsv = ((new Date()).getTime()) / 1000;
           
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/PunchLog/SearchWithPagination",
                data: JSON.stringify({dtDateFrom:dtDateFrom,dtDateTo:dtDateTo,sEmployeeIds:_sEmployeeIDs,sBusinessUnitIds:_sBusinessUnitIds,sLocationIds:_sLocationID,  sDepartmentIds: _sDepartmentIds,sDesignationIDs:_sDesignationIds,nLoadRecords : _nLoadRecords, nRowLength : _nRowLength, ts: tsv}),
                contentType: "application/json; charset=utf-8",
                success: function(data)
                {
                    var oPunchLogs =[];
                    oPunchLogs = jQuery.parseJSON(data);
                    if(oPunchLogs.length>0 && oPunchLogs[0].ErrorMessage=="")
                    {
                        if(!_bNext)
                        {
                            _oPunchLogs=[];
                            RefreshList(_oPunchLogs);
                        }

                        for (var j = 0; j < oPunchLogs.length; j++)
                        {
                            $('#tblPunchLog').datagrid('appendRow',oPunchLogs[j]);
                        }
                    }
                    else
                    {
                        if(_bNext == false)
                        {
                            alert("Data not found !!");
                            _oPunchLogs=[];
                            RefreshList(_oPunchLogs);
                        }
                        else
                        {
                            alert("No more data found !");
                        }
                    }
                    var oPunchLogs=$('#tblPunchLog').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count ="+ oPunchLogs.length;
                    _bNext = false;
                },
                error: function(xhr, status, error)
                {
                    alert(error);
                }
            });
        }

        function Next_Collection()
        {
            var oPunchLogs =[];
            oPunchLogs=$('#tblPunchLog').datagrid('getRows');
            _nRowLength = oPunchLogs.length;
            _bNext = true;

            if (oPunchLogs.length<=0)
            {
                alert('Please Select Criteria and click on "Search" to find information.!!');
                return;
            }
            var oPunchLog = oPunchLogs[oPunchLogs.length-1];

            if (_nLastPunchLogID==oPunchLog.PunchLogID)
            {
                alert('No more data found by this date range');
                return;
            }
            _nLastPunchLogID=oPunchLog.PunchLogID;
            SearchByDepartmentAndDateRangeWithPasignation();
        }

        $('#btnExcel').click(function (e)
        {
            if($("#cboPunchType").val() == 0){
                alert("Please select punch type");
                return false;
            }
            
            if($("#cboPunchType").val() == '2'){
                if(_sEmployeeIDs == null || _sEmployeeIDs == ""){
                    alert("Please Enter employee code");
                    return false;
                }
            }

            $("#winFormat12_24").icsWindow('open');
            $("#rdbtnFormat24").prop("checked", true);
            /*
            debugger;
            var url='/PunchLog/Print_PunchXL?date='+dtDateFrom+'&BUIDS='+_sBusinessUnitIds+'&LIDS='+_sLocationID+'&Type='+type+'&Code='+Code+'&DateTo='+dtDateTo;
            window.open(_sBaseAddress + url, "_blank");
            */
        });

        $('#btnOkFormatSelection').click(function (e) {
            debugger;
            var vFormat = "";
            $("#winFormat12_24").icsWindow('close');

            if ($("#rdbtnFormat24").is(':checked')) {
                vFormat = "format24";
            
                var type = $("#cboPunchType").val();
                var dtDateFrom= $('#dtDateFrom').datebox('getValue');
                var dtDateTo= $('#dtDateTo').datebox('getValue');
            
                var sEmpCode=document.getElementById("txtEmployee_Collection").value;
                var url='/PunchLog/Print_PunchXL?date='+dtDateFrom+'&BUIDS='+_sBusinessUnitIds+'&LIDS='+_sLocationID+'&Dept='+_sDepartmentIds+'&Desg='+_sDesignationIds+'&Type='+type+'&id='+_sEmployeeIDs+'&DateTo='+dtDateTo+'&format='+vFormat;
                window.open(_sBaseAddress + url, "_blank");

            }
            else {
                
                vFormat = "format12";
                var type = $("#cboPunchType").val();
                var dtDateFrom= $('#dtDateFrom').datebox('getValue');
                var dtDateTo= $('#dtDateTo').datebox('getValue');
            
                var sEmpCode=document.getElementById("txtEmployee_Collection").value;
                var url='/PunchLog/Print_PunchXL?date='+dtDateFrom+'&BUIDS='+_sBusinessUnitIds+'&LIDS='+_sLocationID+'&Dept='+_sDepartmentIds+'&Desg='+_sDesignationIds+'&Type='+type+'&id='+_sEmployeeIDs+'&DateTo='+dtDateTo+'&format='+vFormat;
                window.open(_sBaseAddress + url, "_blank");
            }

        });

        $('#btnCloseFormatSelection').click(function (e) {
            $('#winFormat12_24').icsWindow('close');
        });

        //function Delete() {
        //    var oPunchLog = $('#tblPunchLog').datagrid('getSelected');
        //    if (oPunchLog == null || oPunchLog.PunchLogID <= 0) {
        //        alert("Invalid Field!!! please select a valid Field!");
        //        return false;
        //    }
        //    if (!confirm("Confirm to Delete?")) return;
        //    var SelectedRowIndex = $('#tblPunchLog').datagrid('getRowIndex', oPunchLog);

        //    $.ajax({
        //        type: "POST",
        //        dataType: "json",
        //        url: _sBaseAddress + "/PunchLog/PunchLog_Delete",
        //        traditional: true,
        //        data: JSON.stringify(oPunchLog),
        //        contentType: "application/json; charset=utf-8",

        //        success: function(data) {
        //            sMSg = jQuery.parseJSON(data);
        //            if (sMSg=="Deleted") {
        //                alert("Deleted sucessfully");
        //                $('#tblPunchLog').datagrid('deleteRow',SelectedRowIndex);
        //            } else {
        //                alert(sMSg);
        //            }
        //        },
        //        error: function(xhr, status, error) {
        //            alert(error);
        //        }
        //    });
        //}

        function Delete() {
            debugger;
            var oPunchLogs = $('#tblPunchLog').datagrid('getChecked');
            var IDs = "";
            var nIndexes = [];
            var dates = "";

            if(oPunchLogs.length>0)
            {
                for (var i = 0; i < oPunchLogs.length; i++) {
                
                    var SelectedRowIndex = $('#tblPunchLog').datagrid('getRowIndex', oPunchLogs[i]);
                    nIndexes.push(SelectedRowIndex);
                    IDs += oPunchLogs[i].PunchLogID + ",";
                    dates += oPunchLogs[i].PunchDateInString + ",";
                }
                IDs = IDs.substring(0, IDs.length - 1);
                dates = dates.substring(0, dates.length - 1);
            }
        
            var oPunchLog = {ErrorMessage:IDs, sParam:dates};



            if (!confirm("Confirm to Delete?")) return;
            //var SelectedRowIndex = $('#tblPunchLog').datagrid('getRowIndex', oPunchLog);

            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/PunchLog/PunchLog_Delete",
                traditional: true,
                data: JSON.stringify(oPunchLog),
                contentType: "application/json; charset=utf-8",

                success: function(data) {
                    debugger;
                    sMSg = jQuery.parseJSON(data);
                    if (sMSg==true) {
                        alert("Deleted sucessfully");
                        if(nIndexes.length > 0)
                        {
                            //for (var i = 0; i < nIndexes.length; i++) {
                            //    var ind = nIndexes[i]
                            //    $('#tblPunchLog').datagrid('deleteRow',ind);
                            //}
                            SearchByDepartmentAndDateRangeWithPasignation();
                        }
                    } else {
                        alert("Deletion not possible.");
                    }
                },
                error: function(xhr, status, error) {
                    alert(error);
                }
            });
        }
        /*---------------- emp Search Start click----------------*/

        function InitializeAdvSearch(){
            $('#dtJoiningDateFrom').datebox('setValue', icsdateformat(new Date()));
            $('#dtJoiningDateTo').datebox('setValue', icsdateformat(new Date()));
            $('#txtFrom').numberbox({min:0, precision:0 });
            $('#txtTo').numberbox({min:0, precision:0 });
            $('#txtFrom').numberbox('setValue',1);
            $('#txtTo').numberbox('setValue',50);
            document.getElementById("lblRange1").style.display = 'none';

            $("#cboEmployeeType").icsLoadCombo({
                List: _oEmployeeTypes,
                OptionValue: "EmployeeTypeID",
                DisplayText: "Name"
            });
            $("#cboShift_EmpSearch").icsLoadCombo({
                List: _oShifts,
                OptionValue: "ShiftID",
                DisplayText: "ShiftWithDuration"
            });
            $("#cboEmployeeCardStatus").icsLoadCombo({
                List: _oEmployeeCSs,
                OptionValue: "Value",
                DisplayText: "Text"
            });
            $("#cboEmployeeWorkigStatus").icsLoadCombo({
                List: _oEmployeeWSs,
                OptionValue: "Value",
                DisplayText: "Text"
            });
            $("#cboBU").icsLoadCombo({
                List: _oBusinessUnits,
                OptionValue: "BusinessUnitID",
                DisplayText: "Name"
            });
            $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
            $('#txtFrom').numberbox('setValue',1);
            $('#txtTo').numberbox('setValue',50);
            $("#lblRange1").hide();

            var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                        {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                        {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

            $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
                List: oMonths,
                OptionValue: "MonthID",
                DisplayText: "Name",
                InitialValue:''
            });

            LoadDaysInMonth();
        }

        function LoadDaysInMonth(){
            $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
            var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

            var oDays=[];
            for(var i=1;i<=nDaysInMonth;i++){
                oDays.push({DayID:i,Day:i});
            }
            $("#cboDayFrom,#cboDayTo").icsLoadCombo({
                List: oDays,
                OptionValue: "DayID",
                DisplayText: "Day",
                InitialValue:''
            });
        }

        $("#cboDateType").change(function(e){
            if($("#cboDateType").val()==1){
                $("#regionDateTo").hide();
            }
            else{
                $("#regionDateTo").show();
            }
        });

        $("#cboMonthFrom").change(function(e){
            var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
            var oDays=[];
            for(var i=1;i<=nDaysInMonth;i++){
                oDays.push({DayID:i,Day:i});
            }
            $("#cboDayFrom").icsLoadCombo({
                List: oDays,
                OptionValue: "DayID",
                DisplayText: "Day",
                InitialValue:''
            });
        });

        $("#cboMonthTo").change(function(e){
            var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
            var oDays=[];
            for(var i=1;i<=nDaysInMonth;i++){
                oDays.push({DayID:i,Day:i});
            }
            $("#cboDayTo").icsLoadCombo({
                List: oDays,
                OptionValue: "DayID",
                DisplayText: "Day",
                InitialValue:''
            });
        });

        function EmployeePickerReset(){
            _nLastEmployeeID = 0;
            _sEmployeeIDs = "";
            _bNext = false;
            _nLoadRecords = 0;
            _nRowLength = 0;
            _sAttendanceSchemeID="";
            _sLocationID = "";
            _sDepartmentIds = "";
            _sDesignationIds = "";
            $(".txtReset").val("");
            $(".cboReset").val(0);
            $(".chkReset").prop("checked",false);

            $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
            LoadDaysInMonth();

            DynamicRefreshList([], "tblEmployeesForPicker");
            $("#lblcount").html("");
            $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
            $('#txtFrom').numberbox('setValue',1);
            $('#txtTo').numberbox('setValue',50);
            $("#lblRange1").hide();
        }

        var btnEmpPickID = "";
        $("#btnEmployee,#btnEmployee_MPunch").click(function () {
            btnEmpPickID = $(this).attr("id");
            EmployeePickerReset();
            $("#winEmployeePicker").icsWindow("open", " Employee Picker");
        });

        $('#chkRange').click(function()
        {
            if(document.getElementById("chkRange").checked == true)
            {
                $("#lblRange1").show();
            }
            else
            {
                $("#lblRange1").hide();
            }
        });

        $('#btnEmpPickerSearch').click(function () {
            _bNext = false;
            AdvSearch();
            _sEmployeeIDs = "";
        });

        function Next() {
            var oEmployees = [];
            oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
            if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
            _nRowLength = oEmployees.length;
            _bNext = true;
            AdvSearch();
        }

        function AdvSearch(){
            debugger
            if (!_bNext) {
                _nRowLength = 0;
                _nLastEmployeeID = 0;
            }
            _nLoadRecords = document.getElementById("txtTo").value;
            if ($("#chkRange").is(':checked')) {
                if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
                var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
                var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
                if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
                _nRowLength = nRangeFrom - 1;
                _nLoadRecords = nRangeTo - nRangeFrom + 1;
            }
            debugger
            var sName = $.trim($("#txtEmployeeName").val());
            var sCode = $.trim($("#txtEmpCodeForSearch").val());
            var sEnrollNo = $.trim($("#txtEnrollNo").val());
            var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
            var nEmployeeTypeID=$("#cboEmployeeType").val();
            var nShiftID=$("#cboShift_EmpSearch").val();
            var nCardStatus=$("#cboEmployeeCardStatus").val();
            var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
            var nDateType=$("#cboDateType").val();
            var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
            var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
            var sGender= $("#cboGender option:selected").text();

            var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
            var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
            var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

            var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
            var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

            var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
            var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

            var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
            var dtDateFrom = $('#dtJoiningDateFrom').datebox('getValue');
            var dtDateTo = $('#dtJoiningDateTo').datebox('getValue');

            if(bIsJoiningDate)
            {
                if(new Date(dtDateFrom)>new Date(dtDateTo))
                {
                    alert("Invalid Joining Date Range!");
                    return;
                }
            }

            var nBusinessUnitID = $("#cboBU").val();
            var nCategory=$('#cboCategory').val();
            var sPresentAddress=$('#txtPresentAddress').val();
            var sPermanentAddress=$('#txtPermanentAddress').val();

            if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
               nEmployeeTypeID==0 && sGender=="None" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
               bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 
               && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBMMIDs=="")
            {
                alert("Please enter your selection criteria."); return false;
            }

            var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                         sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                         bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                         sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                        +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBMMIDs;

            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/Employee/EmployeeSearch",
                traditional: true,
                data: JSON.stringify({ sParam: sParam }),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oEmps = jQuery.parseJSON(data);
                    if (oEmps != null) {
                        if (oEmps.length > 0) {
                            if(!_bNext){
                                DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                            }
                            else{
                                var bAppend=false;
                                var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                                if(oTEmps.length>0){
                                    for (var i = 0; i < oEmps.length; i++) {
                                        var IsAppend=true;
                                        for (var j = 0; j < oTEmps.length; j++) {

                                            if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                                IsAppend=false;
                                                break;
                                            }
                                        }
                                        if(IsAppend){
                                            bAppend=true;
                                            $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                        }
                                    }
                                }
                                else{
                                    for (var j = 0; j < oEmps.length; j++) {
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                    }
                                }
                                if(!bAppend){
                                    alert("No more data found!");
                                }
                            }

                        }
                        else {
                            alert("No more data found!");
                        }
                        var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                        document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                        _bNext = false;
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }

        $("#btnEmployeePickerOk").click(function () {
            var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
            if (oEmployees.length<=0) { alert("please select atleast one item");return; }
            var sEmpIDs="";
            var sEmpNames="";
            for(var i=0;i<oEmployees.length;i++)
            {
                sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
                sEmpNames=sEmpNames+oEmployees[i].Name+",";
            }
            _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
            sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
            if(btnEmpPickID=="btnEmployee")
            {
                $("#txtEmployee_Collection").val(sEmpNames);
            }
            else
            {
                $("#txtEmployee_MPunch").val(sEmpNames);
                DynamicRefreshList(oEmployees, "tblEmployee_MPunch");
            }
            $("#winEmployeePicker").icsWindow('close');
        });

        $("#btnEmployeePickerClose").click(function () {
            $("#winEmployeePicker").icsWindow('close');
        });

        /*-------------Attendance Schema Picker----------------*/
        $("#btnAttScheme").click(function(e){
            var oAttendanceScheme={AttendanceSchemeID:0};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oAttendanceScheme,
                ControllerName: "AttendanceScheme",
                ActionName: "GetsAttendanceSchemeCurrentSession",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].AttendanceSchemeID > 0) {
                        debugger;
                        var tblColums = [];
                        var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winAttendanceScheme',
                            winclass:'clsAttendanceScheme',
                            winwidth: 420,
                            winheight: 460,
                            tableid: 'tblAttendanceSchemePicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Attendance Scheme List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        });

        function IntializeAttendancePickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {

                var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if (oPickerobj.winid == 'winAttendanceScheme')
                {
                    if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                        $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                        _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                    }
                    else{
                        alert("Please select a schema.");
                    }
                }
            });
        }

        $("#btnResetAttScheme").click(function(e){
            $('#txtAttendanceScheme').val("");
            _sAttendanceSchemeID="";
        });

        /*-------------Start Business Unit Picker----------------*/
        $("#btnBusinessUnitPicker_Collection").click(function(e){
            BusinessUnitPicker();
        });

        $("#txtBusinessUnit_Collection").keypress(function(e){
            if (e.which == 13)//enter=13
            {
                BusinessUnitPicker();
            }
        });

        function BusinessUnitPicker()
        {
            var oBusinessUnit={
                BusinessUnitID:0
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBusinessUnit,
                ControllerName: "BusinessUnit",
                ActionName: "GetsBusinessUnitWithPermission",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].BusinessUnitID > 0) {
                        var tblColums = [];
                        var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                        var bmultiplereturn=true;

                        var oPickerParam = {
                            winid: 'winBusinessUnit',
                            winclass:'clsBusinessUnit',
                            winwidth: 320,
                            winheight: 400,
                            tableid: 'tblBusinessUnit',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: bmultiplereturn,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Business Unit List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeBusinessUnitPickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                var oBusinessUnits=[];
                oBusinessUnits = $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winBusinessUnit')
                {
                    if(oBusinessUnits!=null && oBusinessUnits.length>0)
                    {
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                        var sBusinessUnitName = "";
                        for(var i=0; i<oBusinessUnits.length; i++)
                        {
                            sBusinessUnitName+=oBusinessUnits[i].Name+",";
                            _sBusinessUnitIds+=oBusinessUnits[i].BusinessUnitID+",";
                        }

                        sBusinessUnitName=sBusinessUnitName.substring(0,sBusinessUnitName.length-1);
                        _sBusinessUnitIds=_sBusinessUnitIds.substring(0,_sBusinessUnitIds.length-1);
                        $("#txtBusinessUnit_Collection").val(sBusinessUnitName);
                    }
                    else
                    {
                        alert("Please select a Business Unit.");
                    }
                }
            });
        }

        $("#btnResetBusinessUnitPicker_Collection").click(function(e){
            $('#txtBusinessUnit_Collection').val("");
            _sBusinessUnitIds="";
        });
        /*-------------End Business Unit Picker----------------*/

        /*-------------Location Picker----------------*/
        var btnLocation="";
        $("#btnLocationPicker,#btnLocationPicker_Collection").click(function(e){
            debugger;
            btnLocation = $(this).attr("id");
            var sBusinessUnitIDs ="";
            var nBusinessUnitID=0;
            if(btnLocation=="btnLocationPicker")
            {
                nBusinessUnitID = $("#cboBU").val();
                sBusinessUnitIDs = String(nBusinessUnitID);
            }
            else{sBusinessUnitIDs=_sBusinessUnitIds;}
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {
                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        });

        $("#btnLocationPickerOk").click(function(e){
            if(btnLocation=="btnLocationPicker")
            {
                var oLocation = $('#locationtree').tree('getSelected');
                if(oLocation!=null && oLocation.id>0){
                    $("#winLocationPicker").icsWindow('close');
                    _sLocationID=oLocation.id;
                    $('#txtLocation').val(oLocation.text);
                }
                else{
                    alert("Please select a location.");
                }
            }
            else
            {
                var oLocations = $('#locationtree').tree('getChecked');
                if(oLocations!=null && oLocations.length>0)
                {
                    var LocationName="";
                    for(var i=0; i<oLocations.length; i++)
                    {
                        if(oLocations[i].id !=1)
                        {
                            LocationName+=oLocations[i].text+",";
                            _sLocationID+=oLocations[i].id+",";
                        }
                    }

                    LocationName=LocationName.substring(0,LocationName.length-1);
                    _sLocationID=_sLocationID.substring(0,_sLocationID.length-1);
                    $("#winLocationPicker").icsWindow('close');
                    $('#txtLocation_Collection').val(LocationName);
                }
                else
                {
                    alert("Please select a location.");
                }
            }
        });

        $('#txtLocation_Collection').keypress(function (e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                //$("#winLocationPicker").icsWindow('open');
                //var oLocation={LocationID:0};
                btnLocation = $(this).attr("id");
                var sBusinessUnitIDs ="";
                var nBusinessUnitID=0;
                if(btnLocation=="btnLocationPicker")
                {
                    nBusinessUnitID = $("#cboBU").val();
                    sBusinessUnitIDs = String(nBusinessUnitID);
                }
                else{sBusinessUnitIDs=_sBusinessUnitIds;}
                $("#winLocationPicker").icsWindow('open');
                var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};

                var obj = {
                    BaseAddress: _sBaseAddress,
                    Object: oLocation,
                    ControllerName: "Location",
                    ActionName: "GetsLocationMenuTree",
                    IsWinClose: false
                };
                $.icsDataGet(obj, function (response) {

                    if (response.status && response.obj!=null) {
                        if (response.obj.TLocation.id > 0) {
                            $('#locationtree').tree({ data: [response.obj.TLocation] });
                        }
                    }
                });
            }
        });

        $("#btnLocationPickerClose").click(function(e){
            $("#winLocationPicker").icsWindow('close');
        });

        $("#btnResetLocationPicker,#btnResetLocationPicker_Collection").click(function(e){
            $('#txtLocation').val("");
            $('#txtLocation_Collection').val("");
            _sLocationID="";
        });

        $("#btnLocationPickerClose").click(function(e){
            $("#winLocationPicker").icsWindow('close');
        });

        /*-------------Department Picker----------------*/

        $("#btnDepartmentPicker").click(function(e){
            $("#winDepartmentPicker").icsWindow('open');
            var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oDepartment,
                ControllerName: "Department",
                ActionName: "GetsDepartments",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {
                if (response.status && response.obj!=null) {
                    if (response.obj.id > 0) {
                        $('#departmenttree').tree({ data: [response.obj] });
                    }
                }
            });
        });

        $("#btnDepartmentPickerOk").click(function(e){
            var oDepartment = $('#departmenttree').tree('getSelected');
            if(oDepartment!=null && oDepartment.id>0){
                $("#winDepartmentPicker").icsWindow('close');
                $('#txtDepartment').val(oDepartment.text);
                _sDepartmentIds= oDepartment.id;
            }
            else{
                alert("Please select a department.");
            }
        });

        $("#btnDepartmentPickerClose").click(function(e){
            $("#winDepartmentPicker").icsWindow('close');
        });

        $("#btnDepartmentPickerClose_Collection").click(function(e){
            $("#winDepartmentPicker_Collection").icsWindow('close');
        });

        $("#btnResetDepartmentPicker,#btnResetDepartmentPicker_Collection").click(function(e){
            $('#txtDepartment,#txtDepartment_Collection').val("");
            _sDepartmentIds="";
            _sDepartmentNames="";
        });

        /*-------------Designation Picker----------------*/
        var btnDesignation="";
        $("#btnDesignationPicker,#btnDesignationPicker_Collection").click(function(e){
            btnDesignation = $(this).attr("id");
            DesignationPicker();
        });

        $("#txtDesignation_Collection").keypress(function(e){
            if (e.which == 13)//enter=13
            {
                btnDesignation ="btnDesignationPicker_Collection";
                DesignationPicker();
            }
        });

        function DesignationPicker()
        {
            var oDesignation={
                DesignationID:0,
                Params: _sBusinessUnitIds+'~'+_sLocationID+'~'+ _sDepartmentIds
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oDesignation,
                ControllerName: "Designation",
                ActionName: "Gets",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].DesignationID > 0) {
                        var tblColums = [];
                        var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                        var bmultiplereturn=false;
                        if(btnDesignation=="btnDesignationPicker_Collection"){bmultiplereturn=true;}

                        var oPickerParam = {
                            winid: 'winDesignation',
                            winclass:'clsDesignation',
                            winwidth: 320,
                            winheight: 460,
                            tableid: 'tblDesignation',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: bmultiplereturn,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Designation List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeDesignationPickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                var oDesignations=[];
                if(btnDesignation=="btnDesignationPicker_Collection")
                {
                    oDesignations = $('#'+oPickerobj.tableid).datagrid('getChecked');
                }
                else
                {
                    var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
                    oDesignations.push(oDesignation);
                }
                debugger
                if (oPickerobj.winid == 'winDesignation')
                {
                    if(oDesignations!=null && oDesignations.length>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();

                        for(var i=0; i<oDesignations.length; i++)
                        {
                            _sDesignationNames+=oDesignations[i].Name+",";
                            _sDesignationIds+=oDesignations[i].DesignationID+",";
                        }

                        _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                        _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
                        if(btnDesignation=="btnDesignationPicker_Collection")
                        {
                           
                            $("#txtDesignation_Collection").val(_sDesignationNames);
                        }
                        else
                        {
                            $("#txtDesignation").val(_sDesignationNames);
                        }
                    }
                    else{
                        alert("Please select a designation.");
                    }
                }
            });
        }

        $("#btnResetDesignationPicker,#btnResetDesignationPicker_Collection").click(function(e){
            $('#txtDesignation').val("");
            $('#txtDesignation_Collection').val("");
            _sDesignationIds="";
            _sDesignationNames = "";
        });

        /*------------- Start Block Picker----------------*/
   
        $("#btnBlock,#btnBlock_Collection").click(function(e){
            BlockPicker($(this).attr("id"));
        });
 
        function BlockPicker(btnBlock)
        {
            var oBlockMachineMapping={
                ProductionProcessInt:0,
                DepartmentID:0,
                BlockName:""
            }
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBlockMachineMapping,
                ControllerName: "BlockMachineMapping",
                ActionName: "BlockMachineMapping_Search",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
        
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].BMMID > 0) {
                        var tblColums = [];
                        var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
                        var bmultiplereturn=true;
                        if(btnBlock=="btnBlock"){bmultiplereturn=false;}
                        var oPickerParam = {
                            winid: 'winBlock',
                            winclass:'clsBlock',
                            winwidth: 320,
                            winheight: 460,
                            tableid: 'tblShift',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: bmultiplereturn,
                            searchingbyfieldName:'BlockName',
                            windowTittle: 'Block List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeBlockPickerbutton(oPickerParam,btnBlock);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }
   
        function IntializeBlockPickerbutton(oPickerobj,btnBlock)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                var oBlocks=[];
                if(btnBlock=="btnBlock"){
                    var oBlock= $('#'+oPickerobj.tableid).datagrid('getSelected');
                    oBlocks.push(oBlock);
                }
                else
                {
                    oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
                }
                if (oPickerobj.winid == 'winBlock')
                {
                    if(oBlocks!=null && oBlocks.length>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();

                        for(var i=0; i<oBlocks.length; i++)
                        {
                            _sBlockNames += oBlocks[i].BlockName+",";
                            _sBMMIDs += oBlocks[i].BMMID+",";
                    
                        }
                        _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                        _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
                        if(btnBlock=="btnBlock"){$("#txtBlock").val(_sBlockNames);}else{$("#txtBlock_Collection").val(_sBlockNames);}
                    }
                    else
                    {
                        alert("Please select a Block.");
                    }
                }
            });
        }

        $("#btnResetBlock,#btnResetBlock_Collection").click(function(e){
            $('#txtBlock').val("");
            $('#txtBlock_Collection').val("");
            _sBlockNames="";
            _sBMMIDs = "";
        });

        $("#txtBlock,#txtBlock_Collection").keypress(function(e){
            if (e.which == 13)
            {
                BlockPicker();
            }
        });
        /*------------- End Block Picker----------------*/

        /*---------------- emp Search End click ----------------*/

        /*---------------- emp Search Start keyprees----------------*/
        $('#txtEmployee_Collection,#txtEmployee_MPunch').keypress(function (e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                var sCodeName = $.trim($("#"+$(this).attr("id")).val());
                if(sCodeName==''){alert("Please enter name or code to search.");$("#"+$(this).attr("id")).focus(); return;}
                SearchEmployeeByText(sCodeName, $(this).attr("id"));
            }
        });

        function SearchEmployeeByText(sEmpNameCode, id){
            var oEmployee = { Params: sEmpNameCode +'~'+ 0};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oEmployee,
                ControllerName: "Employee",
                ActionName: "GetsByEmpCode",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].EmployeeID > 0) {

                        var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winEmployeePickerTextSearch',
                            winclass:'clsEmployeePickerTextSearch',
                            winwidth: 455,
                            winheight: 460,
                            tableid: 'tblEmployeePickerTextSearch',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Employee list'
                        };

                        $.icsPicker(oPickerParam);
                        IntializeEmployeePickerTextSearch(oPickerParam, id);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeEmployeePickerTextSearch(oPickerobj, id)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                if (oPickerobj.winid == 'winEmployeePickerTextSearch')
                {
                    debugger;
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        debugger;
                        _sEmployeeIDs=oreturnObj.EmployeeID;
                        if(btnEmpPickID=="btnEmployee" || id=='txtEmployee_Collection')
                        {
                            $("#txtEmployee_Collection").val(oreturnObj.Code);
                        }
                        else
                        {
                            $("#txtEmployee_MPunch").val(oreturnObj.Code);
                        }
                    }
                }
            });

            $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
                if (e.which == 13)//enter=13
                {
                    var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                    if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}
                    debugger
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                    {
                        if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                        {
                            _sEmployeeIDs=oreturnObj.EmployeeID;
                            //if(btnEmpPickID=="btnEmployee")
                            //{
                            //    $("#txtEmployee_Collection").val(oreturnObj.Name);
                            //}
                            //else
                            //{
                            //    $("#txtEmployee_MPunch").val(oreturnObj.Name);
                            //}

                            if(btnEmpPickID=="btnEmployee" || id=='txtEmployee_Collection')
                            {
                                $("#txtEmployee_Collection").val(oreturnObj.Code);
                            }
                            else
                            {
                                $("#txtEmployee_MPunch").val(oreturnObj.Code);
                            }

                        }
                    }
                }
            });
        }

        $('#btnCEmployee,#btnCEmployee_MPunch').click(function (e)
        {
            debugger;
            if(btnEmpPickID=="btnEmployee")
            {
                document.getElementById("txtEmployee_Collection").value = "" ;
            }
            else
            {
                document.getElementById("txtEmployee_MPunch").value = "" ;
                document.getElementById("txtEmployee_Collection").value = "" ;
            }
            _sEmployeeIDs = "";
        });

        /*---------------- emp Search Start keyprees----------------*/

        /*-------------Department Picker start Collection----------------*/
        $("#btnDepartmentPicker_Collection").click(function(e){
            DepartmentPicker();
        });

        $("#txtDepartment_Collection").keypress(function(e){
            if (e.which == 13)//enter=13
            {
                DepartmentPicker();
            }
        });

        function DepartmentPicker()
        {
            $("#winDepartmentPicker_Collection").icsWindow('open');
            var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oDepartment,
                ControllerName: "Department",
                ActionName: "GetsDepartments",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {
                if (response.status && response.obj!=null) {
                    if (response.obj.id > 0) {
                        $('#departmenttree_Collection').tree({ data: [response.obj] });
                    }
                }
            });
        }

        $("#btnDepartmentPickerOk_Collection").click(function(e){
            var oDepartments = $('#departmenttree_Collection').tree('getChecked');
            if(oDepartments!=null && oDepartments.length>0){
                $("#winDepartmentPicker_Collection").icsWindow('close');
                for(var i=0; i<oDepartments.length; i++)
                {
                    _sDepartmentNames+=oDepartments[i].text+",";
                    _sDepartmentIds+=oDepartments[i].id+",";
                }

                _sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
                _sDepartmentIds=_sDepartmentIds.substring(0,_sDepartmentIds.length-1);
                $("#txtDepartment_Collection").val(_sDepartmentNames);
            }
            else{
                alert("Please select a department.");
            }
        });

        /*------------manual punch start --------------*/

        function Punch()
        {
            _sEmployeeIDs==""
            
            $('#dtDate').datebox('setValue', icsdateformat(new Date()));
            $('#timeSpinner').timespinner('setValue', '00:00');

            $("#winManualPunch").icsWindow('open');
            DynamicRefreshList([], "tblEmployee_MPunch");
            $("#txtEmployee_MPunch").val('');
        }
        function Close_ManualPunch()
        {
            $("#winManualPunch").icsWindow('close');
        }
        function Save_ManualPunch()
        {
            if (_sEmployeeIDs=="") {alert("Please enter employee!");return;};
            //var dtPunchTime= $('#txtStartFrom').datetimebox('getValue');
            var PunchDate = $('#dtDate').datebox('getValue')
            var PunchTime = $('#timeSpinner').timespinner('getValue');
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/PunchLog/PunchLog_IU",
                traditional: true,
                //data: JSON.stringify({sEmployeeIds:_sEmployeeIDs,dtPunchTime:dtPunchTime}),
                data: JSON.stringify({sEmployeeIds:_sEmployeeIDs,PunchDate:PunchDate, PunchTime:PunchTime}),
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    debugger;
                    var oPL = jQuery.parseJSON(data);
                    if (oPL.ErrorMessage=="") {
                        alert("Punched sucessfully!");
                        //window.close();
                    } else {
                        alert(oPL.ErrorMessage);
                    }
                },
                error: function(xhr, status, error) {
                    alert(error);
                }
            });

        }
        /*------------manual punch end--------------*/

    </script>
