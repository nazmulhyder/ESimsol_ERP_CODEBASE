@{
    ViewBag.Title = "Employee Information";
}
<!DOCTYPE html>
<html>
@model ESimSol.BusinessObjects.Employee
<head>
    <title> Employee Information</title>
    <style>
        .lblStar {
            color: red;
            font-weight: bold;
        }

        #region_BasicInformation {
            max-height: 410px;
            overflow-y: scroll;
        }

       #region_Official{
            max-height: 410px;
            overflow-y: scroll;
        }

        #region_Signature{
            height: 100%;
            top: 19%;
            width: 100%;
        }
       
        #region_SalaryStructure {
            /*position: fixed;*/
            height: 67%;
            top: 19%;
            /*width: 73.7%;
            overflow-y: scroll;*/
        }

        #action_salarystructure {
            /*position: fixed;*/
            top: 85%;
            width: 73.7%;
        }

       .tr-All{
            width: 100%;
        }
       .td-Caption-left{
           width:15%;
           text-align: right;
       }
       .td-Caption-right{
           width:5%;
           text-align: right;
       }
       .td-Input{
           width:20%;
       }
       .div-parent{
           float:left;
           width:100%;
       }
      .div-child-3{
           float:left;
           width:28%;
           margin-left:3px;
           margin-right:3px;
           margin-bottom:2px;
           margin-top:2px;
       }
      .div-child-4{
           float:left;
           width:40%;
           margin-left:3px;
           margin-right:3px;
           margin-bottom:2px;
           margin-top:2px;
       }
       .div-child-5{
           float:left;
           width:49%;
           margin-left:3px;
           margin-right:3px;
           margin-bottom:2px;
           margin-top:2px;
       }
     .div-child-6{
           float:left;
           width:56%;
           margin-left:3px;
           margin-right:3px;
           margin-bottom:2px;
           margin-top:2px;
       }
        .div-child-7{
           float:left;
           width:68%;
           margin-left:3px;
           margin-right:3px;
           margin-bottom:2px;
           margin-top:2px;
       }
       .align-right{
            text-align:right; 
        }
    </style>
</head>

<body>
    @{var MenuID = HttpContext.Current.Session[SessionInfo.MenuID];}
        <div class="menuMainCollectionTable">
            <div id="divEmployee" class="easyui-panel" title="Add Employee" style="font-family:Tahoma; height:100%; width:100%;">
                <div class="easyui-tabs" style="width:100%">
                    <div title="Basic">
                        <div style="max-height:497px">
                            <fieldset id="region_BasicInformation">
                                <table id="region_tblBasicInformation" border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; align-content:center; width:98%;">
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            Code :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtCode" type="text" style="width: 92%" /><label class="lblStar">*</label>
                                        </td>
                                        <td rowspan="6" colspan="2" style="width:45%">
                                            <div style="border: 1px solid #000; width:96%;">
                                                <table>
                                                    @using (Html.BeginForm("EmpImageIU", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                                    {
                                                        <tr style="width:100%;">
                                                            <td style="text-align: center;">
                                                                <label style="font-size:11px; ">(Max. 40 KB Image)</label>
                                                            </td>
                                                        </tr>
                                                        <tr style="width:100%;">
                                                            <td style="text-align: center;width:100%;">
                                                                <table style="border: 1px solid gray; height: 100px; width:40%; margin-left: 20%;">
                                                                    <tr>
                                                                        <td>
                                                                            <img id="imgPhotoIcon" src="@Url.Action("GetPhoto", "Employee", new { nid = Model.EmployeeID })" alt="Photo" style="width:80px; height:90px" />
                                                                        </td>
                                                                    </tr>
                                                                </table>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <input id="filePhoto" type="file" name="file1" onchange="readPhotoURL(this);" style="margin-left: 60px" />
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <input type="submit" value="Upload" id="subEmpSave" style="margin-left: 60px" />
                                                                <input type="button" value="Clear" id="btnPhotoClear" style="margin-left: 40px" />

                                                            </td>
                                                        </tr>

                                                        @Html.HiddenFor(model => model.EmployeeID, new { id = "txtEmployeeID" })
                                                    }

                                                </table>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            Name:
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtNameInEngilish" type="text" style="width: 92%" autocomplete="on" /><label class="lblStar">*</label>
                                        </td>

                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left" style="width: 160px; text-align: right">
                                            Contact No :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtContactNmuber" type="text" style="width: 92%;" autocomplete="on" /><label class="lblStar">*</label>
                                        </td>

                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left" style="width: 160px; text-align: right">
                                            Emergency Phone No :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtOtherPhoneNo" type="text" style="width: 92%;" autocomplete="on" />
                                        </td>

                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            Email :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtEmail" type="email" style="width:92%;" autocomplete="on" />
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            Gender :
                                        </td>
                                        <td class="td-Input">
                                            <select id="cboGender" style="width: 92%;">
                                                <option value="Male">Male</option>
                                                <option value="Female">Female</option>
                                                <option value="Otrhers">Otrhers</option>
                                            </select><label class="lblStar">*</label>
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            Father/Husband :
                                        </td>
                                        <td class="td-Input">
                                            <select id="cboFather" style="width:40%;">
                                                <option value="1">Father</option>
                                                <option value="2">Husband</option>
                                            </select>
                                            <input id="txtFather" type="text" style="width:51%" autocomplete="on" /><label class="lblStar">*</label>
                                        </td>
                                        <td class="td-Caption-right">
                                            Spouse Name:
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtSpouseName" type="text" style="width:94%"/>
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            Mother Name:
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtMotrherName" type="text" style="width: 92%" /><label class="lblStar">*</label>
                                        </td>
                                        <td class="td-Caption-right">
                                            Nationality:
                                        </td>
                                        <td class="td-Input">
                                            <select id="cboNationality" style="width: 94%"></select>
                                        </td>
                                    </tr>

                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            National ID :  
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtNationalID" type="text" style="width: 92%" />
                                        </td>
                                        <td class="td-Caption-right">
                                            Ident. Mark :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtIdentMark" type="text" style="width: 94%" />
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            Height :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtHeight" type="text" style="width: 35%; margin-right:10px" />
                                            Weight :
                                            <input id="txtWeight" type="text" style="width: 35%" />
                                        </td>
                                        <td class="td-Caption-right">
                                            Blood Group :
                                        </td>
                                        <td class="td-Input">
                                            <select id="cboBloodGroup" style="width:94%;">
                                                <option value="N/A">N/A</option>
                                                <option value="A+">A+</option>
                                                <option value="A-">A-</option>
                                                <option value="B+">B+</option>
                                                <option value="B-">B-</option>
                                                <option value="O+">O+</option>
                                                <option value="O-">O-</option>
                                                <option value="AB+">AB+</option>
                                                <option value="AB-">AB-</option>
                                            </select>
                                        </td>
                                    </tr>


                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            Pre. Dist. :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtDistrict" type="text" style="width: 35%; margin-right:10px" />
                                            Pre. PS :
                                            <input id="txtThana" type="text" style="width: 35%" onmousedown="ThanaDown()" />
                                        </td>
                                        <td class="td-Caption-right">
                                            Pre. PO :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtPostOffice" type="text" style="width: 38%;" />
                                            Pre. Village : 
                                            <input id="txtVillage" type="text" style="width:105px" />
                                        </td>
                                    </tr>


                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            Present Address:
                                        </td>
                                        <td colspan="3">
                                            <textarea id="txtPresentAddress" style="width: 97%;" rows="1"></textarea>
                                        </td>
                                    </tr>


                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            Perm. Dist. :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtPermDistrict" type="text" style="width: 35%" />
                                            Perm. PS :
                                            <input id="txtPermThana" type="text" style="width: 28%" />
                                        </td>
                                        <td class="td-Caption-right">
                                            Perm. PO :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtPermPostOffice" type="text" style="width: 38%" />
                                            Perm. Village :
                                            <input id="txtPermVillage" type="text" style="width: 94px" />
                                        </td>
                                    </tr>


                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            Permanent Address:
                                        </td>
                                        <td colspan="3">
                                            <textarea id="txtPermanentAddress" style="width: 97%" rows="1"></textarea>
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            Date Of Birth :
                                        </td>
                                        <td class="td-Input">
                                            <input id="dtDateOfBirth" type="text" style="width:120px;" class="easyui-datebox"
                                                   data-options="formatter:icsdateformat,parser:icsdateparser" /><label class="lblStar">*</label>
                                        </td>
                                        <td class="td-Caption-right">
                                            Birth Reg. ID :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtBirthID" type="text" style="width:94%" />
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            Religion :
                                        </td>
                                        <td class="td-Input">
                                            <select id="cboReligion" style="width:94%">
                                                <option value="0">N/A</option>
                                                <option value="1">Islam</option>
                                                <option value="2">Hindu</option>
                                                <option value="3">Christian</option>
                                                <option value="4">Buddist</option>
                                            </select>
                                        </td>
                                        <td class="td-Caption-right">
                                            Marital Status :
                                        </td>
                                        <td class="td-Input">
                                            <select id="cboMaritalStatus" style="width:94%">
                                                <option value="1">Married</option>
                                                <option value="2">UnMarried</option>
                                            </select>
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            Note:
                                        </td>
                                        <td colspan="3">
                                            <textarea id="txtNote" style="width: 97%" rows="1"></textarea>
                                        </td>
                                    </tr>
                                </table>
                            </fieldset>

                            <fieldset>
                                <legend style="font-weight: bold">Action : </legend>
                                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:95%">
                                    <tr>
                                        <td style="width: 35%">
                                            <a id="btnOthers" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Other Informations</a>
                                        </td>
                                        <td style="width: 35%;">
                                            <label class="lblStar">*</label> = Mandatory
                                        </td>
                                        <td style="width:30%; text-align:right;">
                                            <a id="btnEmpSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save"
                                               plain="true">Save</a>
                                            <a id="btnCloseEmp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                        </td>
                                    </tr>
                                </table>
                            </fieldset>
                        </div>
                    </div>
                    <div title="Basic (বাংলা)" id="divBanglaInformation" style="overflow: auto;padding: 0px;">
                        <div style="max-height:497px">
                            <fieldset id="region_BasicInformation">
                                <table id="region_tblBasicInformation" border="0" cellspacing="2" cellpadding="2" style="margin-top:20px; font-size: 11px; font-weight: bold; align-content:center; width:98%;">
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            কোড :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtCodeBangla" type="text" style="width: 100%; font-family:SutonnyMJ;font-size: 16px;" />
                                        </td>
                                        <td class="td-Caption-left">
                                            নাম:
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtNameInBangla" type="text" style="width: 100%; font-family:SutonnyMJ;font-size: 16px;" />
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            পিতা/ স্বামী  :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtFatherNameBangla" type="text" style="width:100%; font-family:SutonnyMJ;font-size: 16px;" />
                                        </td>
                                        <td class="td-Caption-right">
                                            মাতা :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtMotherNameBangla" type="text" style="width: 100%; font-family:SutonnyMJ;font-size: 16px;" />
                                        </td>
                                    </tr>
                                    <tr class="tr-All">

                                        <td class="td-Caption-left">
                                            জাতীয়তা :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtNationalityBangla" type="text" style="width: 100%; font-family:SutonnyMJ;font-size: 16px;" />
                                        </td>
                                        <td class="td-Caption-right">
                                            জাতীয় পরিচয়পত্র :
                                        </td>
                                        <td class="td-Input">
                                            <input id="txtNationalIDBangla" type="text" style="width: 100%; font-family:SutonnyMJ;font-size: 16px;" />
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            রক্তের গ্রুপ :
                                        </td>
                                        <td class="td-Input">
                                            <select id="cboBloodGroupBangla" style="width:100%;font-family:SutonnyMJ;font-size: 16px;">
                                                <option value="" style="font-family:SutonnyMJ;font-size: 16px;">-evQyb-</option>
                                                <option value="G c‡RwUf">G c‡RwUf </option>
                                                <option value="G †b‡MwUf">G †b‡MwUf</option>
                                                <option value="we c‡RwUf">we c‡RwUf</option>
                                                <option value="we †b‡MwUf">we †b‡MwUf</option>
                                                <option value="I c‡RwUf">I c‡RwUf</option>
                                                <option value="I †b‡MwUf">I †b‡MwUf</option>
                                                <option value="Gwe c‡RwUf">Gwe c‡RwUf</option>
                                                <option value="Gwe †b‡MwUf">Gwe †b‡MwUf</option>
                                            </select>
                                        </td>
                                        <td class="td-Caption-left">
                                            উচ্চতা :
                                        </td>
                                        <td class="td-Caption-left">
                                            <input id="txtHeightBangla" type="text" style="width: 100px; float:left; font-family:SutonnyMJ;font-size: 16px;" />
                                            ওজন : <input id="txtWeightBangla" type="text" style="width: 100px; font-family:SutonnyMJ;font-size: 16px; " />
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            জেলা :
                                        </td>
                                        <td class="td-Caption-right">
                                            <input id="txtDistrictBangla" type="text" style="width: 38%; float:left; font-family:SutonnyMJ;font-size: 16px;" />
                                            থানা :
                                            <input id="txtThanaBangla" type="text" style="width: 40%; font-family:SutonnyMJ;font-size: 16px;" onmousedown="ThanaDown()" />
                                        </td>
                                        <td class="td-Caption-right">
                                            পোস্ট-অফিস :
                                        </td>
                                        <td class="td-Caption-right">
                                            <input id="txtPostOfficeBangla" type="text" style="width: 100px; float:left; font-family:SutonnyMJ;font-size: 16px;" />
                                            গ্রাম :
                                            <input id="txtVillageBangla" type="text" style="width: 100px; font-family:SutonnyMJ;font-size: 16px;" />
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            বর্তমান ঠিকানা :
                                        </td>
                                        <td colspan="3">
                                            <textarea id="txtPresentAddressBangla" style="width: 100%;height:50px; font-family:SutonnyMJ;font-size: 16px;" rows="1"></textarea>
                                        </td>
                                    </tr>


                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            স্থায়ী জেলা :
                                        </td>
                                        <td class="td-Caption-right">
                                            <input id="txtPermDistrictBangla" type="text" style="width: 38%; float:left; font-family:SutonnyMJ;font-size: 16px;" />
                                            স্থায়ী থানা  :
                                            <input id="txtPermThanaBangla" type="text" style="width: 35%; font-family:SutonnyMJ;font-size: 16px;" />
                                        </td>
                                        <td class="td-Caption-right">
                                            স্থায়ী পোস্ট-অফিস :
                                        </td>
                                        <td class="td-Caption-right">
                                            <input id="txtPermPostOfficeBangla" type="text" style="width: 100px; float:left; font-family:SutonnyMJ;font-size: 16px;" />
                                            স্থায়ী গ্রাম  :
                                            <input id="txtPermVillageBangla" type="text" style="width: 100px; font-family:SutonnyMJ;font-size: 16px;" />
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            স্থায়ী ঠিকানা :
                                        </td>
                                        <td colspan="3">
                                            <textarea id="txtPermanentAddressBangla" style="width: 100%; height:50px; font-family:SutonnyMJ;font-size: 16px;" rows="1"></textarea>
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            ধর্ম :
                                        </td>
                                        <td class="td-Input">
                                            <select id="cboReligionBangla" style="width:100%;font-family:SutonnyMJ;;font-size: 16px;">
                                                <option value="0" style="font-family:SutonnyMJ;font-size: 16px;">-evQyb-</option>
                                                <option value="Bmjvg" style="font-family:SutonnyMJ;font-size: 16px;">Bmjvg </option>
                                                <option value="wn›`y" style="font-family:SutonnyMJ;font-size: 16px;">wn›`y </option>
                                                <option value="wL«÷vb" style="font-family:SutonnyMJ;font-size: 16px;">wL«÷vb </option>
                                                <option value="‡eŠ× " style="font-family:SutonnyMJ;font-size: 16px;">‡eŠ×  </option>
                                            </select>
                                        </td>
                                        <td class="td-Caption-right">
                                            বিবাহিক সম্পর্ক :
                                        </td>
                                        <td class="td-Input">
                                            <select id="cboMaritalStatusBangla" style="width:100%;font-family:SutonnyMJ;font-size: 16px;">
                                                <option value="0" style="font-family:SutonnyMJ;font-size: 16px;">-evQyb-</option>
                                                <option value="weevwnZ" style="font-family:SutonnyMJ;font-size: 16px;">weevwnZ </option>
                                                <option value="AweevwnZ" style="font-family:SutonnyMJ;font-size: 16px;">AweevwnZ </option>
                                            </select>
                                        </td>
                                    </tr>
                                    <tr class="tr-All">
                                        <td class="td-Caption-left">
                                            নমিনী :
                                        </td>
                                        <td class="td-Input">
                                            <input type="text" id="txtNomineeBangla" style="width:100%;font-family:SutonnyMJ;font-size: 16px;" />
                                        </td>
                                        <td class="td-Caption-right">
                                            অথেন্টিকেশন নাম্বার :
                                        </td>
                                        <td class="td-Input">
                                            <input type="text" id="txtAuthenticationBangla" style="width:100%;font-family:SutonnyMJ;font-size: 16px;" />
                                        </td>
                                    </tr>
                                </table>
                            </fieldset>

                            <fieldset>
                                <legend style="font-weight: bold">Action : </legend>
                                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:95%">
                                    <tr>
                                        <td style="width: 35%"></td>
                                        <td style="width: 35%;"></td>
                                        <td style="width:30%; text-align:right;">
                                            <a id="btnEmpSaveBangla" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save"
                                               plain="true">Save</a>
                                            <a id="btnCloseEmp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                        </td>
                                    </tr>
                                </table>
                            </fieldset>
                        </div>
                    </div>

                        <div title="Official">
                            <div style="max-height:497px">
                                <fieldset id="region_Official">
                                    <div class="div-parent">
                                        <div class="div-child-5" style="margin-top:5px">
                                            <div class="div-child-7">
                                                <div class="div-parent">
                                                    <div class="div-child-3 align-right">
                                                        <label> Att. Scheme:</label>
                                                    </div>
                                                    <div class="div-child-7">
                                                        <input id="txtAttScheme" type="text" style="width:76%;" placeholder="Search Schema" />
                                                        <a id="btnAttScheme" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="false"></a>
                                                        <label class="lblStar">*</label>
                                                    </div>
                                                </div>
                                                <div class="div-parent">
                                                    <div class="div-child-3 align-right">
                                                        <label>Shift:</label>
                                                    </div>
                                                    <div class="div-child-7">
                                                        <select id="cboCurrentShift" style="width:94%;"></select>
                                                        <label class="lblStar">*</label>
                                                    </div>
                                                </div>
                                                <div class="div-parent">
                                                    <div class="div-child-3 align-right">
                                                        <label>Department:</label>
                                                    </div>
                                                    <div class="div-child-7">
                                                        <input id="txtDepartmentRequirementPolicy" type="text" style="width:76%;" placeholder="Search Department" />
                                                        <a id="btnDRP" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="false"></a>
                                                        <label class="lblStar">*</label>
                                                    </div>
                                                </div>
                                                <div class="div-parent">
                                                    <div class="div-child-3 align-right">
                                                        <label> Business Unit:</label>
                                                    </div>
                                                    <div class="div-child-7">
                                                        <input id="txtBusinessUnit" type="text" style="width:94%;" />
                                                    </div>
                                                </div>
                                                <div class="div-parent">
                                                    <div class="div-child-3 align-right">
                                                        <label>Designation:</label>
                                                    </div>
                                                    <div class="div-child-7">
                                                        <select id="cboDesignation" style="width: 94%;"></select><label class="lblStar">*</label>
                                                    </div>
                                                </div>
                                                <div class="div-parent">
                                                    <div class="div-child-3 align-right">
                                                        <label>Emp. Type:</label>
                                                    </div>
                                                    <div class="div-child-7">
                                                        <select id="cboEmployeeType" style="width: 93.5%"></select> <label class="lblStar">*</label>
                                                    </div>
                                                </div>
                                                <div class="div-parent">
                                                    <div class="div-child-3 align-right">
                                                        <label>Category:</label>
                                                    </div>
                                                    <div class="div-child-7">
                                                        <select id="cboCategory" style="width: 94%;"></select>
                                                    </div>
                                                </div>
                                                <div class="div-parent">
                                                    <div class="div-child-3 align-right">
                                                        <label id="lblJoining">Joining:</label>
                                                    </div>
                                                    <div class="div-child-7">
                                                        <input id="dtDateOfJoin" type="text" style="width:94%" class="easyui-datebox"
                                                               data-options="formatter:icsdateformat ,parser:icsdateparser" />
                                                    </div>
                                                </div>
                                                <div class="div-parent">
                                                    <div class="div-child-3 align-right">
                                                        <label id="lblConfirmation">Conf.:</label>
                                                    </div>
                                                    <div class="div-child-7">
                                                        <input id="dtConfirmation" type="text" style="width: 94%" class="easyui-datebox"
                                                               data-options="formatter:icsdateformat,parser:icsdateparser" />
                                                    </div>
                                                </div>
                                                <div class="div-parent">
                                                    <div class="div-child-7" id="loginCheck">
                                                        <input id="chkMakeUser" type="checkbox" /> <label>User as LoginID-Code,Pass-123</label>
                                                    </div>
                                                    <div class="div-child-3 align-right" style="float:right;">
                                                        <a id="btnSaveEmpOfficial" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="div-child-3">
                                                <div class="div-parent">
                                                    <label style="font-size:11px; ">(Max. 40 KB Image)</label>
                                                    <div style="text-align:center; vertical-align:middle; height:102px; width:100%; border:1px solid">
                                                        <img id="imgEmpSignature" src="@Url.Action("GetSignature", "Employee", new { nid = Model.EmployeeID })" style="max-width:70%; height:100px; font-weight:bold;" alt="Signature" />
                                                    </div>
                                                </div>
                                                <div class="div-parent">
                                                    <div style=" float:left; font-size:11px; width:130px; height:auto;"><input id="imgSignature" type="file" style="font-size:11px;" onchange="SetEmpSignature(this)" /></div>
                                                    <input id="btnSaveSignature" type="button" value="Upload" style="width:60px;" />
                                                    <input id="btnRemoveSignature" type="button" value="Remove" style="width:60px;" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="div-child-5">
                                            <table id="tblEmployeeReportingPerson" title="Reporting Person" class="easyui-datagrid" style="width:100%;height:248px;" data-options="singleSelect: true,fitColumns:false, rownumbers:true,pagination:false,  autoRowHeight:false, toolbar: '#toolbarReportingPerson' ">
                                                <thead>
                                                    <tr>
                                                        <th field="ReportingPersonName" style="width:40%;">Person Name</th>
                                                        <th field="StartDateInStr" width="20%" align="left">From</th>
                                                        <th field="EndDateInStr" width="20%" align="left">To</th>
                                                        <th field="ActiveStatus" width="18%" align="left">Status</th>
                                                    </tr>
                                                </thead>
                                            </table>
                                            <div id="toolbarReportingPerson" style="text-align:left;">
                                                <input id="txtReportingPerson" placeholder="Type name or code & press enter to search" type="text" style="width:210px;" />
                                                <input id="dtReportingStartDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:110px;" />
                                                <a id="btnAddReportingPerson" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="false"></a>
                                                <a id="btnDeleteReportingPerson" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="false"></a>
                                                <a id="btnInActiveReportingPerson" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Inactive</a>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="div-parent">
                                        <div class="div-child-5">
                                            <table id="tblEmployeAuthentication" title="Authentication" class="easyui-datagrid" style="width:100%;height:190px;" data-options="singleSelect: true,fitColumns:false, rownumbers:true,pagination:false,  autoRowHeight:false, toolbar: '#EmployeAuthenticationtoolbar' ">
                                                <thead>
                                                    <tr>
                                                        <th field="CardNo" width="230" align="left">Card/EnrollNo</th>
                                                        <th field="Activity" width="220" align="left">Activity</th>
                                                    </tr>
                                                </thead>
                                            </table>
                                            <div id="EmployeAuthenticationtoolbar" style="text-align:left; height:auto;">
                                                <table>
                                                    <tr>
                                                        <td colspan="3">
                                                            <input id="txtCardNo" type="text" style="width: 215px;" placeholder="Card No/EnrollNo" />
                                                            <a id="btnAuthenticationSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="false"></a>
                                                            <a id="btnDeleteAuthentication" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="false"></a>
                                                            <a id="btnActiveAuthentication" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Activity</a>
                                                            <a id="btnAddBAC" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AutoEmployeeAuthentication()">Auto Number</a>
                                                        </td>
                                                    </tr>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="div-child-5">
                                            <table id="tblBank" title="Bank" class="easyui-datagrid" style="width:100%;height:190px;" data-options="singleSelect: true,fitColumns:false, rownumbers:true,pagination:false,  autoRowHeight:false, toolbar: '#EmployeeBanktoolbar' ">
                                                <thead>
                                                    <tr>
                                                        <th field="BankBranchName" width="250" align="left">Bank</th>
                                                        <th field="AccountNo" width="200" align="left">Account</th>
                                                    </tr>
                                                </thead>
                                            </table>
                                            <div id="EmployeeBanktoolbar" style="text-align:left;">
                                                <table style="width:100%">
                                                    <tr style="width:100%">
                                                        <td style="width:100%">
                                                            <select style="width:30%" id="cboBank"></select>
                                                            <input id="txtACName" style="width:25%" placeholder="AC Name" />
                                                            <input id="txtACNo" style="width:25%" placeholder="AC No" />
                                                            <a onclick="BankSave()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="false"></a>
                                                            <a onclick="DeleteBank()" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="false"></a>
                                                        </td>
                                                    </tr>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>

                                <fieldset>
                                    <legend style="font-weight: bold">Action : </legend>
                                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:95%">
                                        <tr>
                                            <td style="width: 35%"></td>
                                            <td style="width: 35%;"></td>
                                            <td style="width:30%; text-align:right;">
                                                <a id="btnCloseEmpOfficial" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                            </td>
                                        </tr>
                                    </table>
                                </fieldset>
                            </div>
                        </div>

                        <div title="Leave Ledger" style="padding:0px;width:80%;">
                            <div class="div-regionLeaveSchema" style="">
                                <fieldset class="LeaveLedgerFieldset" style="height:200px;">
                                    <legend>Leave Head Schema:</legend>
                                    <table class="tbl">
                                        <tr>
                                            <td class="tdLeaveHead">
                                                <div class="divLabel">
                                                    <label>Leave Head :</label>
                                                </div>
                                                <div class="divInputLeaveHead">
                                                    <select id="cboLeaveHead"></select>
                                                </div>
                                            </td>
                                            <td class="tdLeaveHead">
                                                <div class="divLabel">
                                                    <label>Max. Allowed Days :</label>
                                                </div>
                                                <div class="divInputLeaveHead">
                                                    <input id="txtTotalLeave" class="number-fieldBal" type="text" />
                                                </div>
                                            </td>

                                        </tr>
                                        <tr>
                                            <td class="tdLeaveHead">
                                                <div class="divLabel">
                                                    <label>Activation After :</label>
                                                </div>
                                                <div class="divInputLeaveHead">
                                                    <input id="txtDeferredDay" class="number-field" type="text" />

                                                </div>
                                            </td>
                                            <td class="tdLeaveHead">
                                                <div class="divLabel">
                                                    <label>Days Of :</label>
                                                </div>
                                                <div class="divInputLeaveHead">
                                                    <select id="cboActivationState" class="RecruitmentEvent"></select>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="tdLeaveHead" colspan="2">
                                                <div class="divChkLevel-LH">
                                                    <input id="chkEarnLeave" type="checkbox" />
                                                    <span> Acquire Leave By The Presence of At Least  </span>
                                                </div>
                                                <div class="divInput-Conditional-LH">
                                                    <input id="txtPresenceDay" class="number-field" type="text" />
                                                    <span>Days</span>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="tdLeaveHead" colspan="2">
                                                <div class="divChkLevel-LH">
                                                    <input id="chkCarryForward" type="checkbox" />
                                                    <span> Leave Carry Forward To The Next Cycle For Maximum </span>
                                                </div>
                                                <div class="divInput-Conditional-LH">
                                                    <input id="txtMaxYearToCarry" class="number-field" type="text" />
                                                    <span>Years</span>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="tdLeaveHead" colspan="2">
                                                <div class="divChkLevel-LH">
                                                    <input id="chkIsComp" type="checkbox" />
                                                    <span> Applicable for compliance </span><label style="float:right;">Balance: </label>
                                                </div>
                                                <div class="divInput-Conditional-LH">
                                                    <input id="txtTotalLeaveBalance" class="number-fieldBal" type="text" style="width:70px;" />
                                                </div>
                                            </td>

                                        </tr>


                                        <tr>
                                            <td class="tdLeaveHead" colspan="2">
                                                <div class="divChkLevel-LH">
                                                </div>
                                            </td>
                                            <td colspan="2">
                                                <div class="div-regionLeave">
                                                    <a id="btnSaveLeaveLedger" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                                                </div>

                                            </td>
                                        </tr>
                                    </table>
                                </fieldset>

                            </div>


                            <table id="tblLeaveLedger" title="Leave Ledger" class="easyui-datagrid" style="width:97%; height:235px; font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="true" toolbar="#toolbarEmployeeLeaveLedger">
                                <thead>
                                    <tr>
                                        <th field="LeaveName" width="100"> Leave Head</th>
                                        <th field="TotalLeave" width="100">Total Leave</th>
                                        <th field="Enjoyed" width="100">Enjoyed</th>
                                        @*<th field="LeaveBalanceInStr" width="100">Balance</th>*@
                                        <th field="Balance" width="100">Balance</th>
                                        <th field="ActivationStatus" width="100">Activation After</th>
                                        <th field="EarnLeaveStatus" width="100">Leave Earn</th>
                                        <th field="CarryForwardStatus" width="100">Carry Forward</th>
                                        <th field="TransferLeaveInStr" width="100">Leave Transfer</th>
                                        <th field="IsCompSt" width="100">Is Comp</th>
                                    </tr>
                                </thead>
                            </table>


                            <div id="toolbarEmployeeLeaveLedger" style="text-align:left;">
                                <a id="btnEditLeaveLedger" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
                                <a id="btnDeleteLeaveLedger" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                                @*<a id="btnTransferHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">Transfer History</a>*@
                                @*<a id="btnELProcess" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Process</a>*@
                            </div>

                            <fieldset style="width:96%">
                                <legend style="font-weight: bold">Action : </legend>
                                <div style="text-align:right;">
                                    <a id="btnCloseLeaveLedger" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </div>
                            </fieldset>
                        </div>

                        <div id="divSalaryStructure" title="Salary Structure" style="overflow: auto;padding: 0px;">
                            <div style="max-height:497px">
                                <div class="div-parent">
                                    <div class="div-child-4">
                                        <div class="div-parent">
                                            <div class="div-child-3"></div>
                                            <div class="div-child-7">
                                                <input id="txtEmployeeName_Copy" type="text" style="width:94%;" placeholder="Type code & enter for copy" />
                                            </div>
                                        </div>
                                        <div class="div-parent">
                                            <div class="div-child-3 align-right">
                                                <label>S.S Grade :</label>
                                            </div>
                                            <div class="div-child-7">
                                                <input type="text" style="width:83%" id="txtSalarySchemeGrade" placeholder="Pick Salary Scheme Grade" />
                                                <a id="btnPickSSGrade" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="false"></a>
                                            </div>
                                        </div>
                                        <div class="div-parent">
                                            <div class="div-child-3 align-right">
                                                <label>S. Scheme :</label>
                                            </div>
                                            <div class="div-child-7">
                                                <input type="text" style="width:94%" id="txtSalaryScheme" placeholder="Type salary scheme then enter" />
                                            </div>
                                        </div>
                                        <div class="div-parent">
                                            <div class="div-child-3 align-right">
                                                <label>P. Cycle :</label>
                                            </div>
                                            <div class="div-child-7">
                                                <input type="text" style="width: 40%" disabled="disabled" id="txtPaymentCycle" />
                                                Start Day : <select id="cboStatDay" style="width:30%; height:25px;"> </select>
                                            </div>
                                        </div>
                                        <div class="div-parent">
                                            <div class="div-child-3 align-right">
                                                <label>Employee :</label>
                                            </div>
                                            <div class="div-child-7">
                                                <input type="text" disabled="disabled" style="width: 94.5%" id="txtEmployee" />
                                            </div>
                                        </div>
                                        <div class="div-parent">
                                            <div class="div-child-3 align-right">
                                                <label>Emp. Type :</label>
                                            </div>
                                            <div class="div-child-7">
                                                <input type="text" disabled="disabled" style="width: 94.5%;" id="txtTypesOfEmployee" />
                                            </div>
                                        </div>
                                        <div class="div-parent">
                                            <div class="div-child-3 align-right">
                                                <label>Note :</label>
                                            </div>
                                            <div class="div-child-7">
                                                <input type="text" style="width: 94.5%" id="txtDescription" />
                                            </div>
                                        </div>


                                    </div>
                                    <div class="div-child-6">
                                        <table id="tblSalaryStructureDetailBasic" class="easyui-datagrid" style="width:100%; height: 178px; font-size: 11px;" fitcolumns="false" pagination="false" toolbar="#toolbarBasic" singleselect="true" autorowheight="false" data-options="singleSelect: false, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false">
                                            <thead>
                                                <tr>
                                                    <th field="SalaryHeadName" width="30%" align="left">Salary Head</th>
                                                    <th data-options="field:'Calculation',width:'25%',align:'right',editor:{type:'numberbox',options:{precision:0}}" align="center">Equation</th>
                                                    <th field="Amount" width="20%" align="right" formatter="formatPrice">Amount</th>
                                                    <th field="CompAmount" width="20%" align="right" formatter="formatPrice">Comp. Amount</th>
                                                </tr>
                                            </thead>
                                        </table>
                                        <div class="div-parent align-right">
                                            <div class="div-child-4"><label>Total :</label></div>
                                            <div class="div-child-3"><label id="lblBasicTotal"></label></div>
                                            <div class="div-child-3"><label id="lblBasicTotal_Comp"></label></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="div-parent">
                                    <table id="tblSalaryStructureDetailAllowance" title="Allowance" class="easyui-datagrid" style="width:97%; height:205px; font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="true" toolbar="#toolbarAllowance">
                                        <thead>
                                            <tr>
                                                <th field="SalaryHeadName" width="12%" align="left">Allowance</th>
                                                <th field="AllowanceType" width="10%" align="left">Type</th>
                                                <th field="Calculation" width="10%" align="left" style="text-align: right">Value</th>
                                                <th field="PeriodInString" width="12%" align="left">Period</th>
                                                <th field="ConditionInString" width="10%" align="left">Condition</th>
                                                <th field="ActivationAfterInString" width="12%" align="left">Act. After</th>
                                                <th field="Amount" width="10%" align="right" formatter="formatPrice"> Amount</th>
                                                <th field="CompAmount" width="10%" align="right" formatter="formatPrice">Comp. Amount</th>
                                                <th field="UserNameCode" width="12%" align="right">User</th>
                                                <th field="AddDateInString" width="8%" align="right">Date</th>
                                            </tr>
                                        </thead>
                                    </table>
                                    <div id="toolbarAllowance" style="height:25px;">
                                        <select id="cboAllowanceSalaryHead"></select>
                                        Amount<input id="txtAllowanceSalaryHeadAmount" type="text" style="width:100px;" />
                                        Comp. Amount<input id="txtAllowanceSalaryHeadAmount_Comp" type="text" style="width:100px;" />
                                        <a id="btnAddAllowance" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                        <a id="btnRemoveAllowance" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                                        Total Addition:&nbsp; <label id="lblAdditionAllowanceTotal"></label> &nbsp;&nbsp;&nbsp;&nbsp; Total Deduction:&nbsp; <label id="lblDeductionAllowanceTotal"></label>
                                    </div>
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:5%"></td>
                                            <td style="width:30%">
                                                <label style="font-weight:normal; font-size:10px"><input type="checkbox" id="chkAllowBankAdvice" />Allow Bank Advice</label>
                                                <label style="font-weight: normal; font-size: 10px"><input id="chkProductionBase" type="checkbox" />Production Base</label>
                                            </td>
                                            <td style="width:30%">
                                                <label style="font-weight:normal; font-size:10px"><input type="checkbox" id="chkAllowOverTime" />Allow Over Time</label>
                                                <div id="tdforchkAllowOverTime">
                                                    <label id="lblAllowOverTime"></label>
                                                </div>
                                            </td>
                                            <td style="width:30%">
                                                <label style="font-weight:normal; font-size:10px"><input id=" chkattendancedependent" type="checkbox" />Attendance Dependent</label>
                                                <div id="tdAttendanceDependent" style="width: 450px">
                                                    One Day Basic Salary Deduction For
                                                    <label id="txtLateCount" style="width: 25px"></label>
                                                    Days Late ||
                                                    <label id="txtEarlyLeavingCount" style="width: 25px"></label>
                                                    Days EarlyLeaving
                                                </div>
                                            </td>
                                            <td style="width:5%"></td>
                                        </tr>
                                    </table>

                                </div>                               
                                <div class="div-parent">
                                    <fieldset>
                                        <legend style="font-weight: bold">Action : </legend>
                                        <div style="text-align:right">
                                            <a id="btnSaveESS" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                                            <a id="btnCloseESS" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                        </div>
                                    </fieldset>
                                </div>

                            </div>
                        </div>

                        <div title="ECM" style="padding:0px;width:70%;">
                            <fieldset>
                                <legend>Material Distribution</legend>
                                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:80%; margin-left:10%">
                                    <tr style="width:100%">
                                        <td style="width:100%">
                                            Employee Information:
                                            <br />
                                            <input type="text" id="txtECMEmpInformation" style="width:100%" disabled />
                                        </td>
                                    </tr>
                                    <tr style="width:100%">
                                        <td style="width:100%">
                                            Commission Material:
                                            <br />
                                            <select id="cboCommissionMaterial" style="width:100.7%"></select>
                                        </td>
                                    </tr>
                                    <tr style="width:100%" id="trSearchWhatValue">
                                        <td style="width:100%">
                                            <label id="lblSearchWhatValue"></label> :
                                            <br />
                                            <textarea id="txtSearchWhatValue" style="width:100%" rows="2"></textarea>
                                        </td>
                                    </tr>
                                    <tr style="width:100%">
                                        <td style="width:100%">
                                            Note:
                                            <br />
                                            <input type="text" id="txtNote" style="width:75%" />
                                            Effect Date:
                                            <input id="dtECMEffectedDate" type="text" style="width: 120px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                        </td>
                                    </tr>
                                    <tr style="width:100%">
                                        <td style="text-align:left;width:100%">
                                            <a id="btnSaveECM" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                            <a id="btnDeleteECM" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                                            <a id="btnActiveECM" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">InActive</a>
                                            <a id="btnApproveECM" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Approve</a>
                                            <input id="chkECMActiveList" type="checkbox" checked />Active
                                            <input id="chkECMInActiveList" type="checkbox" />InActive
                                        </td>
                                    </tr>
                                </table>
                                <div style="font-family: Tahoma; width:80%; height:40%;margin-left:10%">
                                    <table id="tblEmployeeCommissionMaterials" class="easyui-datagrid" style="width: 100%; height: 150px"
                                           fitcolumns="false" rownumbers="true" pagination="false" singleselect="true"
                                           autorowheight="false">
                                        <thead>
                                            <tr>
                                                <th field="MaterialName" width="110">
                                                    Material
                                                </th>
                                                <th field="SearchWhatValue" width="150">
                                                    Material Description
                                                </th>
                                                <th field="Note" width="125">
                                                    Note
                                                </th>
                                                <th field="EffectDateInString" width="80">
                                                    Effect Date
                                                </th>
                                                <th field="ActivityInString" width="60">
                                                    Activity
                                                </th>
                                                <th field="ApproveByName" width="160">
                                                    Approve By
                                                </th>
                                                <th field="ApproveByDateInString" width="80">
                                                    Approve Date
                                                </th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </fieldset>

                            <fieldset>
                                <legend style="font-weight: bold">Action : </legend>
                                <div style="text-align:right">
                                    <a id="btnCloseECM" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </div>
                            </fieldset>
                        </div>

                        <div title="Nominee" style="padding:0px;width:74%;">
                            <table id="tblEmployeNominee" title="Nominee" class="easyui-datagrid" style="width:100%;height:440px;" data-options="singleSelect: true,fitColumns:false, rownumbers:true,pagination:false,  autoRowHeight:false, toolbar: '#EmployeNomineetoolbar' ">
                                <thead>
                                    <tr>
                                        <th field="Name" width="200" align="left">Name</th>
                                        <th field="Address" width="250" align="left">Address</th>
                                        <th field="ContactNo" width="120" align="left">Contact No</th>
                                        <th field="Email" width="120" align="left">Email</th>
                                        <th field="Relation" width="120" align="left">Relation</th>
                                        <th field="Percentage" width="90" align="left">Percentage</th>
                                    </tr>
                                </thead>
                            </table>
                            <div id="EmployeNomineetoolbar" style="text-align:left;">
                                <table>
                                    <tr>
                                        <td style="width:40px;font-size:12px;"><a id="btnNewNominee" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">New</a></td>
                                        <td style="width:40px;font-size:12px;"><a id="btnEditNominee" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a></td>
                                        <td style="width:40px;font-size:12px;"><a id="btnDeleteNominee" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a></td>
                                    </tr>
                                </table>
                            </div>
                            <fieldset>
                                <legend style="font-weight: bold">Action : </legend>
                                <div style="text-align:right">
                                    <a id="btnCloseNominee" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </div>
                            </fieldset>
                        </div>

                        <div title="Employee Group" style="padding:0px;width:100%; height: 100%;">
                            <div style="margin-top: 5%; float:left; width: 50%;height:400px">

                                <fieldset style="float:left; width: 90%;" id="savedGroup">
                                    <legend style="font-weight: bold">Selected Group : </legend>

                                    <div style="margin-left: 2%; float:left;" id="toolbarG">
                                        <select id="cboEmployeeGroup" style="height:25px; width: 200px; float:left;"></select>&nbsp;&nbsp;
                                        <a style="width: 100px;" id="btnAddGroup" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="false">Add Group</a>
                                        <a id="btnDeleteGroup" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="false"></a>
                                    </div>

                                    <div style="text-align:right">

                                        <table id="tblEmployeeGroup" title="" class="easyui-datagrid" style="width: 100%; height: 300px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarG">
                                            <thead>
                                                <tr>
                                                    @*<th data-options="field:'Selected',checkbox:true"> </th>*@
                                                    <th field="Name" width="200"> Name </th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </fieldset>
                            </div>

                            <div style="margin-top: 5%; float:left; width: 50%;height:400px">

                                <fieldset style="float:left; width: 90%;" id="savedBlock">
                                    <legend style="font-weight: bold">Selected Block : </legend>

                                    <div id="toolbarB" style="margin-left: 2%; float:left;">
                                        <select id="cboEmployeeBlock" style="height:25px; width: 200px;"></select>&nbsp;&nbsp;
                                        <a id="btnAddBlock" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="false">Add Block</a>
                                        <a id="btnDeleteBlock" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="false"></a>
                                    </div>

                                    <div style="text-align:right">
                                        <table id="tblEmployeeBlock" title="" class="easyui-datagrid" style="width: 100%; height: 300px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarB">
                                            <thead>
                                                <tr>
                                                    @*<th data-options="field:'Selected',checkbox:true"> </th>*@
                                                    <th field="Name" width="200"> Name </th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </fieldset>
                            </div>

                            <fieldset>
                                <legend style="font-weight: bold">Action : </legend>
                                <div style="text-align:right">
                                    <a id="btnCloseGroup" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </div>
                            </fieldset>
                        </div>
                    </div>
            </div>
        </div>

        <div id="winAttendanceScheme" class="easyui-window winstyle" title="Attendance Scheme List" style="width:370px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div id="focusAttendanceScheme" tabindex="-1">
                <table id="tblAttendanceScheme" class="easyui-datagrid" style="width: 355px; height: 330px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbar">
                    <thead>
                        <tr>
                            <th field="Name" width="200">
                                Name
                            </th>
                            <th field="DayOff" width="150">
                                DayOff
                            </th>
                        </tr>
                    </thead>
                </table>
                <table>
                    <tr>
                        <td style="width: 230px; text-align: left"></td>
                        <td style="width: 50px; text-align: center">
                            <a id="AttSchemePickoK" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width: 50px; text-align: center">
                            <a id="AttSchemePickClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </div>

        </div>

        <div id="winDRP" class="easyui-window winstyle" title="Department Requirement Policy List" style="width:550px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div id="focusDRP" tabindex="-1">
                <table id="tblDepartmentRequirementPolicy" class="easyui-datagrid" style="width: 505px; height: 330px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbar">
                    <thead>
                        <tr>
                            <th field="DepartmentName" width="155"> Department</th>
                            <th field="LocationName" width="170">Location</th>
                            <th field="BUName" width="170">Business Unit</th>
                        </tr>
                    </thead>
                </table>
                <table>
                    <tr>
                        <td style="width: 210px; text-align: left"></td>
                        <td style="width: 50px; text-align: center">
                            <a id="DRPPickoK" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width: 50px; text-align: center">
                            <a id="DRPPickClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </div>

        </div>

        <div id="winLeaveTransferHistory" class="easyui-window winstyle" title="Leave Transfer History" style="width:370px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div id="focusLeaveTransferHistory" tabindex="-1">
                <table id="tblLeaveTransferHistory" class="easyui-datagrid" style="width: 355px; height: 330px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbar">
                    <thead>
                        <tr>
                            <th field="TransferLeaveName" width="120">
                                LeaveName
                            </th>
                            <th field="TransferStatus" width="75">
                                Transfer Type
                            </th>
                            <th field="TransferDays" width="80"align="right">
                                Transfer Days
                            </th>
                        </tr>
                    </thead>
                </table>
                <div style="width:100%; padding-top:5px; text-align: right">
                    <a id="btnCloseLeaveTransferHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </div>
            </div>

        </div>

        <div id="toolbarBasic" style="height:55px;">
            <div style="background: linear-gradient(0deg, #e0ecff, #e0ecff);">
                <label>Basic</label> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                <input id="chkBank" type="checkbox"/> Bank
                <input id="chkCash" type="checkbox" /> Cash
            </div>
            Gross:<input type="text" style="width: 70px;" id="txtGrossSalary" class="number"/>
            Comp. Gross:<input type="text" style="width: 70px;" id="txtGrossSalary_Comp" class="number" />(BDT)
            <a id="btnCalculateHeadWiseSalaryAmount" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Set</a>
            <a id="btnResetStructure" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="ResetStructure()">Reset</a>
            <span><label id="lblCash">Cash :</label><input type="text" style="width: 80px;" id="txtCash" />(BDT)</span>
        </div>

        <div id="winSalarySchemaGrade" class="easyui-window winstyle" title="Salary Scheme Grade List" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            @*<div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="trSalarySchemaGrade" data-options="checkbox:true" singleselect="true" selectoncheck="false" checkonselect="false"></ul>
                </div>*@
            <table id="tblSalarySchemeGrade" class="easyui-treegrid" style="width:335px; height:300px;"
                   data-options="idField:'SSGradeID',treeField:'NameWithAmount', rownumbers:'true', toolbar:'#toolbar'">
                <thead>
                    <tr>
                        <th data-options="field:'NameWithAmount',width:300">Name</th>
                    </tr>
                </thead>
            </table>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnSalarySchemaGradePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnSalarySchemaGradePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div> 
        
        <div id="winEmployeeNominee" class="easyui-window winstyle" title="Nominee" style="width:480px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <fieldset>
            <legend style="font-weight:bold"></legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:200px; text-align:right">
                        Name :
                    </td>
                    <td style="width:300px">
                        <input id="txtNomineeName" type="text" style="width: 300px;" />
                    </td>
                </tr>
                <tr>
                    <td style="width:200px; text-align:right">
                        Address :
                    </td>
                    <td style="width:300px">
                        <input id="txtNomineeAddress" type="text" style="width: 300px;" />
                    </td>
                </tr>
                <tr>
                    <td style="width:200px; text-align:right">
                        Contact No :
                    </td>
                    <td style="width:300px">
                        <input id="txtNomineeContactNo" type="text" style="width: 300px;" />
                    </td>
                </tr>
                <tr>
                    <td style="width:200px; text-align:right">
                        Email :
                    </td>
                    <td style="width:300px">
                        <input id="txtNomineeEmail" type="email" style="width: 300px;" />
                    </td>
                </tr>
                <tr>
                    <td style="width:200px; text-align:right">
                        Relation :
                    </td>
                    <td style="width:300px">
                        <input id="txtRelation" type="text" style="width: 300px;" />
                    </td>
                </tr>
                <tr>
                    <td style="width:200px; text-align:right">
                        Percentage :
                    </td>
                    <td style="width:300px">
                        <input id="txtPercentage" type="text" class="number" style="width: 300px;" />
                    </td>
                </tr>

            </table>
        </fieldset>

        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:400px; text-align:right"></td>

                    <td style="width:50px">
                        <a id="btnNomineeSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnCloseNomineeAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>

        <div id="winELProcess" class="easyui-window winstyle" title="EL Process" style="width:300px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <fieldset>
            Date : 
            <input id="dtLastProcessDate" type="text" style="width: 220px" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
        </fieldset>    
        <fieldset>
            <div style="width:100%; padding-top:5px; text-align: right">
                <a id="btnCloseELeaveProcess" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                <a id="btnELeaveProcess" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Process</a>
            </div>
        </fieldset>    
    </div>

    <div id="winMenuPermission" class="easyui-window" title="User" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:35%;height:auto;padding:1px">
        <div style="margin-left:0px; height:auto; width:100%; text-align:center;">
            <div class="easyui-panel" title="" style="width: 100%; height: 400px; overflow: auto">
                <ul id="ttMenu" data-options="checkbox:true"></ul>
            </div>
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                    <tr>
                        <td style="width: 400px; text-align: right"></td>
                        <td style="width: 50px">
                            <a id="btnMenuPermissionOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width: 50px">
                            <a id="btnMenuPermissionClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

</body>
</html>

<style type="text/css">
    /*.autocomplete-suggestions { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box;font-family: SutonnyMJ; border: 1px solid #999; background: #FFF; cursor: default; overflow: auto; -webkit-box-shadow: 1px 4px 3px rgba(50, 50, 50, 0.64); -moz-box-shadow: 1px 4px 3px rgba(50, 50, 50, 0.64); box-shadow: 1px 4px 3px rgba(50, 50, 50, 0.64); }*/
    /*.autocomplete-suggestionsEng { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box;border: 1px solid #999; background: #FFF; cursor: default; overflow: auto; -webkit-box-shadow: 1px 4px 3px rgba(50, 50, 50, 0.64); -moz-box-shadow: 1px 4px 3px rgba(50, 50, 50, 0.64); box-shadow: 1px 4px 3px rgba(50, 50, 50, 0.64); }*/
    .avro {
        font-family: Kalpurush;
    }

    .bijoy {
        font-family: SutonnyMJ;
    }
    .div-regionLeaveSchema{
        float:left;
        width:54%;
        height:40%;
        font-size:11px;
    }

    .div-regionTransferLeave{
        float:left;
        width:45%;
        height:40%;
        font-size:11px;
    }

    .LeaveLedgerFieldset{
        height:190px;
        width:93.5%;
    }
    .tdLeaveHead {
        width: 50%;
        font-size: 11px;
    }

    .tdLeaveHead .divLabel {
        float: left;
        width: 45%;
        text-align: right;
        margin-right: 1%;
        font-size: 11px;
    }

    .divInputLeaveHead input {
        float: left;
        width: 51%;
        font-size: 11px;
    }
    .divInputLeaveHead select {
        float: left;
        width: 54%;
        font-size: 11px;
    }
    .divInputLeaveHead span {
        float: left;
        width: 8%;
        font-size: 11px;
    }
    .divInputLeaveHead .number-field {
        float: left;
        width:99%;
        font-size: 11px;
    }

    .tdLeaveHead .divChkLevel-LH {
        float: left;
        width: 72%;
        text-align: left;
        margin-right: 1%;
        font-size: 11px;
    }
    .tdLeaveHead .divInput-Conditional-LH {
        float: left;
        width: 26%;
        font-size: 11px;
    } 
    .divInput-Conditional-LH .number-field{
        float: left;
        width: 60px;
        text-align: left;
        margin-right: 1%;
        font-size: 11px;
    }
    .divInput-Conditional-LH span{
        float: left;
        text-align: left;
        margin-left: 3px;
        margin-right: 3px;
    }

    .divInputTransfer .number-field {
        float: left;
        width: 108px;
        font-size: 11px;
    }
     .div-regionLeave{
        float: right;
        text-align: right;
        margin-right: 3px;
    }

    .div-regionNote{
        float: left;
        text-align: left;
        width:100%;
        font-size:11px;
     }
    .div-regionNote .div-left{
        float: left;
        text-align: right;
        width:23%;
     }
    .div-regionNote .div-right{
        float: left;
        text-align: left;
        width:75%;
     }
    .div-right input{
        float: left;
        text-align: left;
        width:100%;
        font-size:11px;
     }

     .div-regionTransfer{
        float: right;
        text-align: right;
        margin-top:30px;
        margin-right: 3px;
     }

     #toolbarReportingPerson #txtReportingPerson{
        float: left;
        text-align: left;
        width:24%;
        font-size:11px;
        margin-top:3px;
        margin-right:8px;
     }

</style>

<script type="text/javascript">

    var _sBaseAddress="";
    var _oEmployee = { EmployeeID:0};
    var _oSalaryStructureDetails =[];
    var _nAttSchemeID=0;
    var _nDRPID=0;
    var _nEmployeeOfficialID=0;
    var _nMenuid=0;
    var _sEmployeeHeader="";
    //GV for ESS
    var _nSalarySchemeID = 0;
    var _sOverTimeLabel="";
    var _nLateCount=0;
    var _nEarlyLeavingCount=0;
    // END GV for ESS
    var _nBasicTotalAmount = 0;
    var _nBasicTotalAmount_Comp = 0;
    var _nAllowanceTotalAmount_Addition = 0;
    var _nAllowanceTotalAmount_Deduction = 0;
    var _nEmployeeAuthenticationID=0;
    var _nEmployeeNomineeID=0;

    var _oEmployeeLeaveLedgers=[];
    var _oEmployeeLeaveLedger=null;
    var _oLeaveHeads=[];
    var _oRecruitmentEvents=[];
    var _oEmployeeReportingPersons=[];
    var _nReportingPersonID=0;

    var _oEmployeeTypes=[];
    var _oEmployeeGroups=[];
    var _oEmpGroups=[];
    var _oEmpBlocks=[];
    var _oEmployeeBlocks = [];
    var _oEmployeeNominees=[];
    var _oCommissionMaterials=[];
    var _oEmployeeCommissionMaterials=[];
    var _oLeaveLedgerAuthorization = [];

    var _oSSGrade=null;
    var _nSSGradeID=0;
    //var _nETINID=0;
    //var _oEmployeeTIN=null;
    var _oBankBranchs=[];

    var _oUser= null;
    var _oEmployeeCategorys=[];
    var _oEmployeeConfirmations=[];
    var _bIsSalary = false;
    var _COS = null;
    var _COSBE = null;

    var _sDistrict = "";
    var _sThana = "";
    var _sPostOffice = "";
    var _sVillage = "";


    $(document).ready(function()
    {
        debugger;
        _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oEmployee = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(MenuID));
        _oEmployeeTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.EmployeeTypes));
        _oEmployeeGroups = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.EmployeeGroups));
        _oEmployeeBlocks = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.EmployeeBlocks));
        _oEmpGroups = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.EmpGroups));
        _oEmpBlocks = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.EmpBlocks));
        _oEmployeeLeaveLedgers = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeLeaveLedgers));
        _oLeaveHeads = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.LeaveHeads));
        _oRecruitmentEvents= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.RecruitmentEvents));
        _oEmployeeReportingPersons= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeReportingPersons));
        _oEmployeeNominees= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeNominees));
        _oCommissionMaterials= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.CommissionMaterials));
        _oEmployeeCommissionMaterials= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCommissionMaterials));
        _oBankBranchs=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.BankBranchs));
        _oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        _oEmployeeConfirmations = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.EmployeeConfirmations));
        var oAURolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        var oEmployeeViewPermission =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.ParamObj]));
        console.log(oAURolesMapping);
        console.log(oEmployeeViewPermission);
        debugger;
        if(!PermissionChecker('BanglaView','Employee', oEmployeeViewPermission))
        {
            debugger;
            //$('#divBanglaInformation').
            $(".easyui-tabs").tabs("close", "Basic (বাংলা)");
        }
        _oLeaveLedgerAuthorization = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LeaveLedgerAuthorization));

        _COS =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.COS));
        _COSBE =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.COSBE));

        $("#txtBusinessUnit").attr('disabled', 'disabled');

        $('#divEmployee').data('PresentDistrict', '');

        $("#txtTotalLeave").numberbox({disabled:true});

        var el;
        el = document.getElementById('txtVillage');
        var val = parseInt(el.innerText);
        var class_name;

        if(parseInt(_COS.Value) == 19) {
            class_name = 'bijoy';
        }
        else {
            class_name = 'avro';
        }
        el.className += ' ' + class_name;

        el = document.getElementById('txtPostOffice');
        var val = parseInt(el.innerText);
        var class_name;

        if(parseInt(_COS.Value) == 19) {
            class_name = 'bijoy';
        }
        else {
            class_name = 'avro';
        }
        el.className += ' ' + class_name;

        el = document.getElementById('txtThana');
        var val = parseInt(el.innerText);
        var class_name;

        if(parseInt(_COS.Value) == 19) {
            class_name = 'bijoy';
        }
        else {
            class_name = 'avro';
        }
        el.className += ' ' + class_name;

        el = document.getElementById('txtDistrict');
        var val = parseInt(el.innerText);
        var class_name;

        if(parseInt(_COS.Value) == 19) {
            class_name = 'bijoy';
        }
        else {
            class_name = 'avro';
        }
        el.className += ' ' + class_name;


        //Permanent
        el = document.getElementById('txtPermVillage');
        var val = parseInt(el.innerText);
        var class_name;

        if(parseInt(_COS.Value) == 19) {
            class_name = 'bijoy';
        }
        else {
            class_name = 'avro';
        }
        el.className += ' ' + class_name;

        el = document.getElementById('txtPermPostOffice');
        var val = parseInt(el.innerText);
        var class_name;

        if(parseInt(_COS.Value) == 19) {
            class_name = 'bijoy';
        }
        else {
            class_name = 'avro';
        }
        el.className += ' ' + class_name;

        el = document.getElementById('txtPermThana');
        var val = parseInt(el.innerText);
        var class_name;

        if(parseInt(_COS.Value) == 19) {
            class_name = 'bijoy';
        }
        else {
            class_name = 'avro';
        }
        el.className += ' ' + class_name;

        el = document.getElementById('txtPermDistrict');
        var val = parseInt(el.innerText);
        var class_name;

        if(parseInt(_COS.Value) == 19) {
            class_name = 'bijoy';
        }
        else {
            class_name = 'avro';
        }
        el.className += ' ' + class_name;


        //el = document.getElementById('txtPresentAddress');
        //var val = parseInt(el.innerText);
        //var class_name;

        //if(parseInt(_COS.Value) == 19) {
        //    class_name = 'bijoy';
        //}
        //else {
        //    class_name = 'avro';
        //}
        //el.className += ' ' + class_name;


        //el = document.getElementById('txtPermanentAddress');
        //var val = parseInt(el.innerText);
        //var class_name;

        //if(parseInt(_COS.Value) == 19) {
        //    class_name = 'bijoy';
        //}
        //else {
        //    class_name = 'avro';
        //}
        //el.className += ' ' + class_name;


        RefreshAutoComplete();

        if(!PermissionChecker('Edit','LeaveLedger',_oLeaveLedgerAuthorization))
        {
            $('#btnEditLeaveLedger').hide();
            $('#btnDeleteLeaveLedger').hide();
        }

        $('#chkCash').prop('checked', false);
        $('#chkBank').prop('checked', true);
        document.getElementById('lblCash').innerHTML = 'Bank :';

        _sEmployeeHeader=sessionStorage.getItem("EmployeeHeader");
        $('#divEmployee').panel({ title:_sEmployeeHeader});
        $('#dtDateOfJoin').datebox('setValue', _oEmployee.DateOfJoinInString);
        $('#dtConfirmation').datebox('setValue', _oEmployee.EmployeeOfficial.DateOfConfirmationInString);
        $('#dtLastProcessDate').datebox('setValue',icsdateformat(new Date()));

        DynamicRefreshList(_oEmpGroups,'tblEmployeeGroup');
        DynamicRefreshList(_oEmpBlocks,'tblEmployeeBlock');
        //$('#savedGroup').hide();

        if(_sEmployeeHeader=="Edit Employee" && _oEmployee.EmployeeOfficial.EmployeeOfficialID > 0) {


            $('#loginCheck').hide();
            //    document.getElementById('txtAttScheme').disabled = true;
            //    $('#btnAttScheme').hide();
            //    document.getElementById('txtDepartmentRequirementPolicy').disabled = true;
            //    //document.getElementById('btnDRP').disabled = true;
            //    //$("#btnDRP").prop('disabled', true);
            //    $('#btnDRP').hide();
            //    //$("#divEmployee :input").prop('disabled', true);

            //    document.getElementById('cboDesignation').disabled = true;
            //    document.getElementById('cboCategory').disabled = true;
            //    //document.getElementById('dtDateOfJoin').disabled = true;
            //    $("#dtDateOfJoin").datebox({'disabled': true});
            //    //document.getElementById('dtConfirmation').disabled = true;
            //    $("#dtConfirmation").datebox({'disabled': true});
            //    document.getElementById('chkMakeUser').disabled = true;

            //    debugger;
            //    var oEmployee={
            //        EmployeeID:_oEmployee.EmployeeID
            //    }
            //    var obj =
            //    {
            //        BaseAddress: _sBaseAddress,
            //        Object: oEmployee,
            //        ControllerName: "Employee",
            //        ActionName: "GetEmployeeSalary",
            //        IsWinClose: false
            //    };

            //    $.icsDataGets(obj, function (response) {

            //        debugger;
            //        if (response.status && response.objs != null) {
            //            if (response.objs.length>0 && response.objs[0].EmployeeID > 0) {
            //                debugger;
            //                _bIsSalary = true;
            //                //$("#btnSaveESS").hide();
            //            }
            //        }
            //    });
        }

        $("#cboEmployeeType").icsLoadCombo({
            List:_oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name",
            InitialValue:"--Select Employee Type--"
        });
        $("#cboEmployeeGroup").icsLoadCombo({
            List:_oEmployeeGroups,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name",
            InitialValue:"--Select Employee Type--"
        });
        $("#cboEmployeeBlock").icsLoadCombo({
            List:_oEmployeeBlocks,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name",
            InitialValue:"--Select Employee Type--"
        });

        if(_oEmployee.SignatureInBase64String!=""){document.getElementById("imgEmpSignature").src =  _oEmployee.SignatureInBase64String;}
        else {document.getElementById("imgEmpSignature").src=null;}

        if(_oEmployee.ErrorMessage!="" && _oEmployee.ErrorMessage!="Image Saved Successfully.")
        {
            alert(_oEmployee.ErrorMessage);
            _oEmployee.ErrorMessage=="";
        }

        var oDate=new Date();
        oDate.setFullYear(oDate.getFullYear()-18);
        $('#dtDateOfBirth').datebox('setValue', icsdateformat(oDate));

        //_oSalaryStructure = _oEmployee.EmployeeSalaryStructure;
        if(_oEmployee.EmployeeID>0 || _sEmployeeHeader=="Edit Employee" || _oEmployee.ErrorMessage=="Image Saved Successfully.")
        {
            if(_oEmployee.ErrorMessage=="Image Saved Successfully.")
            {
                alert(_oEmployee.ErrorMessage);
            }


            $("#cboEmployeeType").val(_oEmployee.EmployeeTypeID);
            $('#dtDateOfBirth').datebox('setValue', _oEmployee.DateOfBirthInString);
            $('#tdAttendanceDependent').hide();
            GetRosterPlanDetail(_oEmployee.AttendanceScheme.RosterPlanID);
            GetDesignation(_oEmployee.DRP.LocationID,_oEmployee.DRP.DepartmentID);
            RefreshControl();
            _nEmployeeOfficialID=_oEmployee.EmployeeOfficial.EmployeeOfficialID;
            if(_nEmployeeOfficialID>0){$("#cboCategory").prop("disabled", true);}

            if(_oEmployee.EmployeeSalaryStructure.ESSID>0)
            {
                if(_oEmployee.EmployeeSalaryStructure.IsCashFixed) {
                    $('#chkBank').prop('checked', false);
                    $('#chkCash').prop('checked', true);
                    $('#txtCash').val(_oEmployee.EmployeeSalaryStructure.CashAmount);
                    document.getElementById('lblCash').innerHTML = 'Cash :';
                } else {
                    $('#chkBank').prop('checked', true);
                    $('#chkCash').prop('checked', false);
                    $('#txtCash').val(_oEmployee.EmployeeSalaryStructure.CashAmount);
                    document.getElementById('lblCash').innerHTML = 'Bank :';
                }


                _nSSGradeID=_oEmployee.EmployeeSalaryStructure.SSGradeID;
                _nSalarySchemeID = _oEmployee.EmployeeSalaryStructure.SalarySchemeID;
                $("#txtSalarySchemeGrade").val(_oEmployee.EmployeeSalaryStructure.SSGradeName);
                SalarySchemeGradeControl((_nSSGradeID>0)?true:false);

                LoadSalaryStructureDetail(_oEmployee.EmployeeSalaryStructure.EmployeeSalaryStructureDetails);
                LoadSalaryHeadGrid(_oEmployee.EmployeeID,"SalaryStructure");
                SetControl(_oEmployee.EmployeeSalaryStructure);

                $("#txtSalaryScheme").val(_oEmployee.EmployeeSalaryStructure.SalarySchemeName);
                $("#txtPaymentCycle").val(_oEmployee.EmployeeSalaryStructure.PaymentCycleInString);
                LoadStartDay(_oEmployee.EmployeeSalaryStructure.PaymentCycleInString, _oEmployee.EmployeeSalaryStructure.StartDay);
            }

            $('#txtEmployee').val(_oEmployee.Name);
            $('#txtTypesOfEmployee').val(_oEmployee.EmployeeTypeName);
            $("#txtECMEmpInformation").val(_oEmployee.Name+","+_oEmployee.DesignationName+","+_oEmployee.DepartmentName+","+_oEmployee.LocationName);
            $("#txtTINEmployee").val(_oEmployee.Name+"["+_oEmployee.Code+"]");
        }

        $('#txtLoadRecords').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox({min:0, precision:0 });
        $('#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
        SetDateTime();
        var oDate=new Date();
        SetStartTime(oDate);
        SetEndTime(oDate);
        var nDateType = $("#cboDateType").val();

        if (nDateType == 0)
        {
            $("#regionDateTo").hide();
            $("#regionDateFrom").hide();
        }
        //$('#txtGrossSalary').numberbox();
        $('#txtCash').numberbox();
        $('#txtAllowanceSalaryHeadAmount').numberbox();
        $('#txtAllowanceSalaryHeadAmount_Comp').numberbox();

        //$('#txtGrossSalary_Comp').numberbox();



        if(_oEmployee.EmployeeAuthentications!= null)
        {
            DynamicRefreshList(_oEmployee.EmployeeAuthentications,'tblEmployeAuthentication');
        }
        if(_oEmployeeNominees!= null)
        {
            LoadEmployeeNomineeGrid();
        }
        if(_oEmployee.SalaryHeads.length>0)
        {
            $("#cboAllowanceSalaryHead").icsLoadCombo({
                List: _oEmployee.SalaryHeads,
                OptionValue: "SalaryHeadID",
                DisplayText: "DeriveSalaryHeadName",
                InitialValue:"--Select SalaryHead--"
            });
        }

        //$('form,input,select,textarea').attr("autocomplete", "on");
        $('#txtNameInEngilish').attr('autocomplete','on');
        Nationality();

        InitializeLeaveLedger();
        InitializeReportingPerson();

        if(_oCommissionMaterials.length>0)
        {
            $("#cboCommissionMaterial").icsLoadCombo({
                List: _oCommissionMaterials,
                OptionValue: "CMID",
                DisplayText: "Name",
                InitialValue:"--Select Commission Material--"
            });
        }
        if(_oEmployeeCommissionMaterials.length>0)
        {
            SortECM();
            LoadEmployeeCommissionMaterialGrid(oECMActive);
        }

        $('#trSearchWhatValue').hide();
        $('#dtECMEffectedDate').datebox('setValue',icsdateformat(new Date()));

        if(!PermissionChecker('View','EmployeeSalaryStructure', oAURolesMapping)){$(".easyui-tabs").tabs("close", "Salary Structure");}
        

        $('#tblLeaveLedger').datagrid({onSelect: function(rowIndex, rowData){ RowSelect(rowIndex, rowData);}});
        //$('#btnELProcess').hide();

        $("#cboBank").icsLoadCombo({
            List:_oBankBranchs,
            OptionValue: "BankBranchID",
            DisplayText: "BankBranchName",
            InitialValue:"--Select Bank--"
        });
        $("#txtACName").val(_oEmployee.Name);
        DynamicRefreshList(_oEmployee.EmployeeBankAccounts,'tblBank');

        var oUsers=[];
        oUsers=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Users));

        if(oUsers.length>0)
        {
            _oUser=oUsers[0];
            if(_oUser.UserID>0)
            {
                //$("#btnSaveUser").hide();
                //$("#txtLogInID").val(_oUser.LogInID);
                //$("#btnMenuPermission").show();
                $('#chkMakeUser').prop('checked', true);
            }
            else
            {
                //$("#btnMenuPermission").hide();
                //$("#txtPassword").val(123);
                //$("#txtConfirmPassword").val(123);
                //$("#txtLogInID").val(_oEmployee.Code);
                $('#chkMakeUser').prop('checked', false);
            }
        }
        else
        {
            //$("#btnMenuPermission").hide();
            //$("#txtPassword").val(123);
            //$("#txtConfirmPassword").val(123);
            //$("#txtLogInID").val(_oEmployee.Code);
            $('#chkMakeUser').prop('checked', false);
        }

        $("#cboCategory").icsLoadCombo({
            List: _oEmployeeCategorys,
            OptionValue: "Value",
            DisplayText: "Text"
        });

        if(_oEmployeeConfirmations.length>0)
        {
            $("#cboCategory").val(_oEmployeeConfirmations[0].EmployeeCategoryInt);
        }
    });



    $('#btnAddGroup').click(function(e){
        if(_oEmployee.EmployeeID ==0)
        {
            alert("Please Save Employee Basic!!");
            return;
        }
        if ($('#cboEmployeeGroup').val() <= 0) { alert("Please select a group."); return;}
        if ($('#cboEmployeeGroup').val() > 0)
        {
            var oEmpGroup = {
                EGID: 0,
                EmployeeID: _oEmployee.EmployeeID,
                EmployeeTypeID: $('#cboEmployeeGroup').val(),
                IsBlock:false
            };

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oEmpGroup,
                ControllerName: "Employee",
                ActionName: "SaveEmployeeGroup",
                TableId: "",
                IsWinClose: true
            };

            $.icsSave(obj, function (response) {
                if (response.status && response.obj.EGID > 0) {
                    var oGroup = response.obj;
                    debugger;
                    //$('#savedGroup').show();
                    var oTempList = $('#tblEmployeeGroup').datagrid('getRows');
                    oTempList.push(oGroup);
                    DynamicRefreshList(oTempList,'tblEmployeeGroup');
                }
                //else {
                //    alert(response.obj.ErrorMessage);
                //}
            });

        }
    });


    $('#txtGrossSalary').keyup(function (e)
    {
        debugger;
        var nGrossSalary=$("#txtGrossSalary").val();
        $("#txtGrossSalary_Comp").val(nGrossSalary);
    });

    $('#btnAddBlock').click(function(e){

        if(_oEmployee.EmployeeID ==0)
        {
            alert("Please Save Employee Basic!!");
            return;
        }
        if ($('#cboEmployeeBlock').val() <= 0) { alert("Please select a Block."); return;}
        if ($('#cboEmployeeBlock').val() > 0)
        {
            var oEmpBlock = {
                EGID: 0,
                EmployeeID: _oEmployee.EmployeeID,
                EmployeeTypeID: $('#cboEmployeeBlock').val(),
                IsBlock:true
            };

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oEmpBlock,
                ControllerName: "Employee",
                ActionName: "SaveEmployeeGroup",
                TableId: "",
                IsWinClose: true
            };

            $.icsSave(obj, function (response) {
                if (response.status && response.obj.EGID > 0) {
                    var oGroup = response.obj;
                    debugger;
                    //$('#savedGroup').show();
                    var oTempList = $('#tblEmployeeBlock').datagrid('getRows');
                    oTempList.push(oGroup);
                    DynamicRefreshList(oTempList,'tblEmployeeBlock');
                }
                //else {
                //    alert(response.obj.ErrorMessage);
                //}
            });

        }
    });

    $('#btnDeleteBlock').click(function(e){

        var oTempList = $('#tblEmployeeBlock').datagrid('getSelected');

        if(oTempList==null)
        {
            alert('Please, Selecte An Item First !!');
        }
        var SelectedRowIndex = $('#tblEmployeeBlock').datagrid('getRowIndex', oTempList);

        if (oTempList.EGID > 0)
        {
            var oEmpBlock = {
                EGID: oTempList.EGID
            };

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oEmpBlock,
                ControllerName: "Employee",
                ActionName: "DeleteEmployeeGroup",
                TableId: "",
                IsWinClose: true
            };

            $.icsDelete(obj, function (response) {
                var oGroup = response.obj;
                $('#tblEmployeeBlock').datagrid('deleteRow', SelectedRowIndex);
            });

        }
    });


    $('#btnDeleteGroup').click(function(e){

        var oTempList = $('#tblEmployeeGroup').datagrid('getSelected');

        if(oTempList==null)
        {
            alert('Please, Selecte An Item First !!');
        }
        var SelectedRowIndex = $('#tblEmployeeGroup').datagrid('getRowIndex', oTempList);

        if (oTempList.EGID > 0)
        {
            var oEmpGroup = {
                EGID: oTempList.EGID
            };

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oEmpGroup,
                ControllerName: "Employee",
                ActionName: "DeleteEmployeeGroup",
                TableId: "",
                IsWinClose: true
            };

            $.icsDelete(obj, function (response) {
                var oGroup = response.obj;
                $('#tblEmployeeGroup').datagrid('deleteRow', SelectedRowIndex);
            });

        }
    });
    //cboEmployeeType
    $("#cboDesignation").change(function() {
        debugger;
        if($('#cboDesignation').val() > 0) {
            var oDesignation = { DesignationID: $('#cboDesignation').val() }

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oDesignation,
                ControllerName: "Designation",
                ActionName: "getDesignation",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj.DesignationID > 0) {
                    debugger
                    var _oDesignation = response.obj;

                    if (_oDesignation.EmployeeTypeID > 0) {
                        $("#cboEmployeeType").val(_oDesignation.EmployeeTypeID);
                    }
                    else {
                        $("#cboEmployeeType").icsLoadCombo({
                            List: _oEmployeeTypes,
                            OptionValue: "EmployeeTypeID",
                            DisplayText: "Name",
                            InitialValue: "--Select Employee Type--"
                        });
                    }
                }
            });
        }

    });

    function RowSelect(rowIndex, rowData)
    {
        if(rowData.IsLeaveOnPresence==1)
        {
            $('#btnELProcess').show();
        }
        else{$('#btnELProcess').hide();}
    }

    /* ------------------Leave Ledger------------------ */
    function InitializeLeaveLedger(){
        $('.number-field').numberbox({ min:0, precision:0});
        $('.number-fieldBal').numberbox({ min:0, precision:2});
        if(_oEmployee.EmployeeID>0){
            DynamicRefreshList(_oEmployeeLeaveLedgers,'tblLeaveLedger');
            $("#cboLeaveHead").icsLoadCombo({
                List: _oLeaveHeads,
                OptionValue: "LeaveHeadID",
                DisplayText: "Name"
            });
            $("#cboActivationState").icsLoadCombo({
                List: _oRecruitmentEvents,
                OptionValue: "Value",
                DisplayText: "Text"
            });
            SetLeaveTransfer();
            $("#txtPresenceDay,#txtMaxYearToCarry").numberbox({disabled:true});
            $("#btnSaveLeaveLedger,#btnTransferLeaveLedger,#toolbarEmployeeLeaveLedger").show();
        }
        else{
            $("#btnSaveLeaveLedger,#btnTransferLeaveLedger,#toolbarEmployeeLeaveLedger").hide();
        }

    }

    function SetLeaveTransfer(){
        $("#cboLeaveHeadTransferFrom,#cboLeaveHeadTransferTo").icsLoadCombo({
            List: _oEmployeeLeaveLedgers,
            OptionValue: "EmpLeaveLedgerID",
            DisplayText: "LeaveName"
        });
    }

    $('#chkEarnLeave').click(function(e){
        if($("#chkEarnLeave").is(':checked')){
            $("#txtPresenceDay").numberbox({disabled:false});
            $("#txtTotalLeave").numberbox({disabled:true});
            //$("#txtTotalLeave").numberbox('setValue',0);
        }
        else{
            $("#txtPresenceDay").numberbox({disabled:true});
            $("#txtPresenceDay").numberbox('setValue',"");
            //$("#txtTotalLeave").numberbox({disabled:false});
            $("#txtTotalLeave").numberbox({disabled:false});
            $("#txtTotalLeave").numberbox('setValue',"");
        }
    });

    $('#chkCarryForward').click(function(e){
        if($("#chkCarryForward").is(':checked')){
            $("#txtMaxYearToCarry").numberbox({disabled:false});
        }
        else{
            $("#txtMaxYearToCarry").numberbox({disabled:true});
            $("#txtMaxYearToCarry").numberbox('setValue',"");
        }
    });

    function GetLeaveLedger(){
        if(_oEmployee.EmployeeID>0){
            var oEmployeeLeaveLedger={
                EmployeeID:_oEmployee.EmployeeID
            }
            var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oEmployeeLeaveLedger,
                ControllerName: "EmployeeLeaveLedger",
                ActionName: "Gets",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs != null) {
                    if (response.objs.length>0 && response.objs[0].EmpLeaveLedgerID > 0) {
                        _oEmployeeLeaveLedgers=response.objs;
                        InitializeLeaveLedger();
                    }
                }
            });
        }
    }

    function ResetLeaveLedgerSchema(bIsLeaveHead){
        _oEmployeeLeaveLedger=null;
        $("#txtTotalLeave,#txtDeferredDay,#txtPresenceDay,#txtMaxYearToCarry,#txtTotalLeaveBalance").numberbox('setValue',"");
        if(!bIsLeaveHead){$('#cboLeaveHead').val(0);}
        $('#cboActivationState').val(0);
        $("#chkEarnLeave,#chkCarryForward").prop('checked',false);
        $("#txtPresenceDay,#txtMaxYearToCarry").numberbox({disabled:true});
    }

    $("#cboLeaveHead").change(function(e) {
        ResetLeaveLedgerSchema(true);
        var nLeaveHeadID = $("#cboLeaveHead").val();
        if(nLeaveHeadID>0){
            for(var i=0;i<_oLeaveHeads.length;i++)
            {
                if (nLeaveHeadID == _oLeaveHeads[i].LeaveHeadID) {
                    $("#txtTotalLeave").numberbox('setValue',_oLeaveHeads[i].TotalDay);
                    break;
                }
            }
        }

    });

    function RefreshObjectEmpLeaveLedger() {
        debugger;
        var nTotalLeave = 0;
        if(_oEmployeeLeaveLedger !=null) {
            var nPrevBal = $("#txtTotalLeaveBalance").numberbox('getValue');
            nTotalLeave = parseFloat(_oEmployeeLeaveLedger.Enjoyed) + parseFloat(nPrevBal) ;
        }

        var oEmpLeaveLedger = {
            EmpLeaveLedgerID:(_oEmployeeLeaveLedger!=null)?_oEmployeeLeaveLedger.EmpLeaveLedgerID:0,
            EmployeeID:_oEmployee.EmployeeID,
            ASLID: (_oEmployeeLeaveLedger!=null)?_oEmployeeLeaveLedger.ASLID:0,
            LeaveID: $("#cboLeaveHead").val(),
            LeaveName: $("#cboLeaveHead option:selected").text(),
            //TotalDay: $("#txtTotalLeave").numberbox('getValue'),
            TotalDay: nTotalLeave,
            DeferredDay: $("#txtDeferredDay").numberbox('getValue'),
            IsLeaveOnPresence: ($("#chkEarnLeave").is(':checked'))? true:false,
            PresencePerLeave: ($("#chkEarnLeave").is(':checked'))? ($("#txtPresenceDay").numberbox('getValue')):0,
            IsCarryForward: ($("#chkCarryForward").is(':checked'))? true:false,
            YearsToCarry: ($("#chkCarryForward").is(':checked'))? ($("#txtMaxYearToCarry").numberbox('getValue')):0,
            MaxCarryDays: ($("#chkCarryForward").is(':checked'))? 360*($("#txtMaxYearToCarry").numberbox('getValue')):0,
            ActivationAfter:$("#cboActivationState").val(),
            ActivationAfterInString: $("#cboActivationState option:selected").text(),
            EarnLeaveStatus: ($("#chkEarnLeave").is(':checked'))? "By "+($("#txtPresenceDay").numberbox('getValue')) + " days of presence":"",
            CarryForwardStatus: ($("#chkCarryForward").is(':checked'))? "Max. "+($("#txtMaxYearToCarry").numberbox('getValue')) + " years":"",
            ActivationStatus: ($("#cboActivationState").val()>0)? ($("#txtDeferredDay").numberbox('getValue')+" days of "+$("#cboActivationState option:selected").text()):"",
            IsComp:($("#chkIsComp").is(':checked'))? true:false
        };
        return oEmpLeaveLedger;
    }

    $('#btnSaveLeaveLedger').click(function(e) {

        if(_oEmployee.EmployeeID<=0){
            alert("No valid employee found"); return false;
        }
        else if($("#cboLeaveHead").val()<=0){
            alert("Please select a leave head."); return false;
        }
            //&& parseInt($("#txtTotalLeave").numberbox('getValue'))<=0
            //else if( !($("#chkEarnLeave").is(':checked')) ){
            //    alert("Enter total leave day."); return false;
            //}
        else if($("#chkEarnLeave").is(':checked') && ( $("#txtPresenceDay").numberbox('getValue').toString().length==0 || parseInt($("#txtPresenceDay").numberbox('getValue'))<=0)){
            alert("Enter presence day. Because earn on presence is active."); return false;
        }
        else if($("#chkCarryForward").is(':checked') && ( $("#txtMaxYearToCarry").numberbox('getValue').toString().length==0 || parseInt($("#txtMaxYearToCarry").numberbox('getValue'))<=0)){
            alert("Enter max carry forward year. Because carry forward is active."); return false;
        }

        var oEmployeeLeaveLedger = RefreshObjectEmpLeaveLedger();
        var oLeaveLedgers=$('#tblLeaveLedger').datagrid('getRows');
        if(oLeaveLedgers.length>0){
            for(var i=0;i<oLeaveLedgers.length;i++){
                if(oLeaveLedgers[i].LeaveID==$("#cboLeaveHead").val() && oEmployeeLeaveLedger.EmpLeaveLedgerID<=0){
                    alert("Already exists in the list. Please try with another."); return false;
                }
            }
        }

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeLeaveLedger,
            ObjectId: oEmployeeLeaveLedger.EmpLeaveLedgerID,
            ControllerName: "EmployeeLeaveLedger",
            ActionName: "Save",
            TableId: "tblLeaveLedger",
            IsWinClose: false,
            Message: (oEmployeeLeaveLedger.EmpLeaveLedgerID>0)?"Update Successfully." : "Save Successfully."
        };
        $.icsSave(obj, function (response) {

            if (response.status && response.obj != null) {
                if (response.obj.EmpLeaveLedgerID > 0) {
                    ResetLeaveLedgerSchema(false);
                    ResetLeaveTransfer();
                    _oEmployeeLeaveLedgers=$('#tblLeaveLedger').datagrid('getRows');
                    SetLeaveTransfer();
                }
            }
        });
    });

    $('#btnDeleteLeaveLedger').click(function(e){
        var oEmployeeLeaveLedger = $('#tblLeaveLedger').datagrid('getSelected');
        if (oEmployeeLeaveLedger == null) { alert("Please select an item from leave ledger."); return false;}
        if (oEmployeeLeaveLedger.EmpLeaveLedgerID>0)
        {
            if (!confirm("Confirm to Delete?")) return;
            var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oEmployeeLeaveLedger,
                ControllerName: "EmployeeLeaveLedger",
                ActionName: "Delete",
                TableId: "tblLeaveLedger",
                IsWinClose: false
            };
            $.icsDelete(obj, function (response) {

                if (response.status && response.Message == 'deleted') {
                    ResetLeaveLedgerSchema(false);
                    ResetLeaveTransfer();
                    _oEmployeeLeaveLedgers=$('#tblLeaveLedger').datagrid('getRows');
                    SetLeaveTransfer();
                }
            });

        }
    });

    $('#btnEditLeaveLedger').click(function(e){

        _oEmployeeLeaveLedger = $('#tblLeaveLedger').datagrid('getSelected');
        if(_oEmployeeLeaveLedger == null) { alert("Please select an item from leave ledger."); return false;}

        if(_oEmployeeLeaveLedger.PresencePerLeave){
            //$("#txtTotalLeave").numberbox({disabled:true});
            $("#txtPresenceDay").numberbox({disabled:false});
        }
        else{
            //$("#txtTotalLeave").numberbox({disabled:false});
            $("#txtTotalLeave").numberbox({disabled:true});
            $("#txtPresenceDay").numberbox({disabled:true});
        }
        if(_oEmployeeLeaveLedger.IsCarryForward){
            $("#txtMaxYearToCarry").numberbox({disabled:false});
        }
        else{
            $("#txtMaxYearToCarry").numberbox({disabled:true});
        }

        $("#cboLeaveHead").val(_oEmployeeLeaveLedger.LeaveID);
        $("#txtTotalLeave").numberbox('setValue',_oEmployeeLeaveLedger.RemainingLeave);
        $("#txtTotalLeaveBalance").numberbox('setValue',_oEmployeeLeaveLedger.Balance);
        $("#txtDeferredDay").numberbox('setValue',_oEmployeeLeaveLedger.DeferredDay);
        $("#cboActivationState").val(_oEmployeeLeaveLedger.ActivationAfterInInt);
        $("#chkEarnLeave").prop('checked', _oEmployeeLeaveLedger.IsLeaveOnPresence);
        $("#txtPresenceDay").numberbox('setValue',_oEmployeeLeaveLedger.PresencePerLeave);
        $("#chkCarryForward").prop('checked', _oEmployeeLeaveLedger.IsCarryForward);
        $("#txtMaxYearToCarry").numberbox('setValue',_oEmployeeLeaveLedger.YearsToCarry);
        $("#txtPresenceDay").numberbox({disabled:!_oEmployeeLeaveLedger.IsLeaveOnPresence});
        $("#txtMaxYearToCarry").numberbox({disabled:!_oEmployeeLeaveLedger.IsCarryForward});
        $("#chkIsComp").prop('checked', _oEmployeeLeaveLedger.IsComp);

    });

    /* ------------------Leave Transfer------------------ */

    function ResetLeaveTransfer(){
        $("#cboLeaveHeadTransferFrom,#cboLeaveHeadTransferTo").val(0);
        $('#txtDaysInHand').val("");
        $("#txtTransferDays").numberbox('setValue',"");
        $('#txtNoteLeaveLedger').val("");
    }

    $("#cboLeaveHeadTransferFrom").change(function(e) {
        $("#txtTransferDays").numberbox('setValue',"");
        $('#txtDaysInHand,#txtNoteLeaveLedger').val("");
        if($("#cboLeaveHeadTransferTo").val()>0 && $("#cboLeaveHeadTransferFrom").val()>0 && $("#cboLeaveHeadTransferTo").val() == $("#cboLeaveHeadTransferFrom").val()){
            $("#cboLeaveHeadTransferFrom").val(0);
        }
        else{
            for(var i=0;i<_oEmployeeLeaveLedgers.length;i++){
                if(_oEmployeeLeaveLedgers[i].EmpLeaveLedgerID==$("#cboLeaveHeadTransferFrom").val()){
                    $('#txtDaysInHand').val(_oEmployeeLeaveLedgers[i].LeaveBalanceInStr);
                }
            }
        }
    });

    $("#cboLeaveHeadTransferTo").change(function(e) {
        if($("#cboLeaveHeadTransferTo").val()>0 && $("#cboLeaveHeadTransferFrom").val()>0 && $("#cboLeaveHeadTransferTo").val() == $("#cboLeaveHeadTransferFrom").val()){
            $("#cboLeaveHeadTransferTo").val(0);
        }
    });

    $('#btnTransferLeaveLedger').click(function(e) {

        if(_oEmployee.EmployeeID<=0){
            alert("No valid employee found"); return false;
        }
        else if($("#cboLeaveHeadTransferFrom").val()<=0){
            alert("Please select transfer from."); return false;
        }
        else if($("#cboLeaveHeadTransferTo").val()<=0){
            alert("Please select transfer to."); return false;
        }
        else if($("#txtTransferDays").numberbox('getValue').toString().length<=0 || parseInt($("#txtTransferDays").numberbox('getValue'))<=0){
            alert("Please enter transfer leave days");
            return false;
        }


        var oEmployeeLeaveLedgers=$('#tblLeaveLedger').datagrid('getRows');
        if(oEmployeeLeaveLedgers.length>0){
            for(var i=0;i<oEmployeeLeaveLedgers.length;i++){
                if(oEmployeeLeaveLedgers[i].EmpLeaveLedgerID==$("#cboLeaveHeadTransferFrom").val()){
                    if(Math.floor(oEmployeeLeaveLedgers[i].LeaveBalance)<=0){
                        alert((parseFloat(oEmployeeLeaveLedgers[i].LeaveBalance)>0)? "Only full leaves are transferable." : "There is no leave reamining to transfer.");
                        return false;
                    }
                    else if(Math.floor(oEmployeeLeaveLedgers[i].LeaveBalance)< parseInt($("#txtTransferDays").numberbox('getValue'))){
                        alert("Transfer leave days must be less or equal to "+ oEmployeeLeaveLedgers[i].RemainingLeave +" days.");
                        return false;
                    }
                }
            }
        }

        var oEmployeeLeaveLedger = {
            EmpLeaveLedgerID:0,
            Params:$("#cboLeaveHeadTransferFrom").val()+'~'+$("#cboLeaveHeadTransferTo").val()+'~'+parseInt($("#txtTransferDays").numberbox('getValue'))+'~'+$.trim($('#txtNoteLeaveLedger').val())
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeLeaveLedger,
            ObjectId: oEmployeeLeaveLedger.EmpLeaveLedgerID,
            ControllerName: "EmployeeLeaveLedger",
            ActionName: "TransferLeave",
            TableId: "",
            IsWinClose: false,
            Message: ""
        };
        $.icsSave(obj, function (response) {

            if (response.status && response.obj != null) {
                if (response.obj.EmployeeLeaveLedgers.length > 0 && response.obj.EmployeeLeaveLedgers[0].EmpLeaveLedgerID>0) {
                    DynamicRefreshList(response.obj.EmployeeLeaveLedgers,'tblLeaveLedger');
                    alert("Transfer Successfully.");
                    ResetLeaveTransfer();
                }
                else{
                    alert((response.obj.EmployeeLeaveLedgers.length>0)?response.obj.EmployeeLeaveLedgers[0].ErrorMessage:"Unable to transfer leave.");
                }
            }
        });
    });

    $('#btnTransferHistory').click(function(e) {

        var oEmployeeLeaveLedger=$('#tblLeaveLedger').datagrid('getSelected');

        if(oEmployeeLeaveLedger==null || oEmployeeLeaveLedger.EmpLeaveLedgerID<=0){
            alert("Please select an item from list."); return false;
        }

        if(oEmployeeLeaveLedger.Addition<=0 && oEmployeeLeaveLedger.Deduction<=0){
            alert("No transfer record found."); return false;
        }

        var oEmployeeLeaveTransfer = {
            Params:oEmployeeLeaveLedger.EmpLeaveLedgerID,
        };
        var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oEmployeeLeaveTransfer,
                ControllerName: "EmployeeLeaveLedger",
                ActionName: "LeaveTransferGets",
                IsWinClose: false
            };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs != null) {
                if (response.objs.length>0 && response.objs[0].LeaveTransferID > 0) {
                    DynamicRefreshList(response.objs,"tblLeaveTransferHistory");
                    $('#winLeaveTransferHistory').icsWindow('open');
                }
                else{
                    alert(response.objs[0].ErrorMessage);
                }
            }
        });
    });
    $('#btnCloseLeaveTransferHistory').click(function(e){
        DynamicRefreshList([],"tblLeaveTransferHistory");
        $('#winLeaveTransferHistory').icsWindow('close');
    });
    /* ------------------Reporting Person------------------ */

    function InitializeReportingPerson(){
        ResetReportingPerson();
        DynamicRefreshList(_oEmployeeReportingPersons,'tblEmployeeReportingPerson');
    }

    function ResetReportingPerson(){
        $('#txtReportingPerson').val('');
        $('#dtReportingStartDate').datebox("setValue", icsdateformat(new Date()));
        _nReportingPersonID=0;
    }

    $('#txtReportingPerson').keypress(function(e){

        var keyCode = e.keyCode || e.which;
        if (keyCode == 13){
            if($.trim($('#txtReportingPerson').val())==""){
                alert("Please enter name to search"); return false;
            }
            var oEmployee= {
                EmployeeID: _oEmployee.EmployeeID,
                Name: $.trim($('#txtReportingPerson').val()),
                Code: $.trim($('#txtReportingPerson').val())
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oEmployee,
                ControllerName: "Employee",
                ActionName: "GetsReportingPerson",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].EmployeeID > 0) {

                        var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 60, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 110, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DepartmentName", title: "Department", width: 120, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DesignationName", title: "Designation", width: 120, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winEmployee',
                            winclass:'clsEmployeePickerTextSearch',
                            winwidth: 470,
                            winheight: 460,
                            tableid: 'tblEmployeePicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Employee List'
                        };

                        $.icsPicker(oPickerParam);
                        IntializeEmployeePickerTextSearchPickerbutton(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else{
                    alert("No Reporting Person Found.");
                }
            });
        }

    });

    function IntializeEmployeePickerTextSearchPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oEmployee = $('#'+oPickerobj.tableid).datagrid('getSelected');
            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployee')
            {
                if(oEmployee.EmployeeID>0){
                    $('#txtReportingPerson').val(oEmployee.Name);
                    _nReportingPersonID=oEmployee.EmployeeID;
                }
            }
        });
        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oEmployee = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oEmployee == null || oEmployee.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oEmployee != null && oEmployee.EmployeeID > 0)
                    {
                        $('#txtReportingPerson').val(oEmployee.Name);
                        _nReportingPersonID=oEmployee.EmployeeID;
                    }
                }
            }
        });
    }

    $('#btnAddReportingPerson').click(function(e) {

        if (_nReportingPersonID<=0) {
            alert("Please enter reporting person.");
            $("#txtReportingPerson").addClass("errorFieldBorder");
            $("#txtReportingPerson").focus();
            return false;
        } else {
            $("#txtReportingPerson").removeClass("errorFieldBorder");
        }

        var oEmployeeReportingPerson={
            ERPID:0,
            RPID:_nReportingPersonID,
            EmployeeID:_oEmployee.EmployeeID,
            StartDate:$('#dtReportingStartDate').datebox("getValue")
        };

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeReportingPerson,
            ObjectId: oEmployeeReportingPerson.ERPID,
            ControllerName: "Employee",
            ActionName: "SaveReportingPerson",
            TableId: "tblEmployeeReportingPerson",
            IsWinClose: false,
            Message: (oEmployeeReportingPerson.ERPID>0)?"Update Successfully." : "Save Successfully."
        };
        $.icsSave(obj, function (response) {

            if (response.status && response.obj != null) {
                if (response.obj.ERPID > 0) {
                    _oEmployeeReportingPersons=$('#tblEmployeeReportingPerson').datagrid('getRows');
                    if(_oEmployeeReportingPersons.length>1){
                        for(var i=0;i<_oEmployeeReportingPersons.length;i++){
                            if(_oEmployeeReportingPersons[i].ERPID!=response.obj.ERPID){
                                _oEmployeeReportingPersons[i].ActiveStatus="Inactive";
                            }
                        }
                    }
                    DynamicRefreshList(_oEmployeeReportingPersons,'tblEmployeeReportingPerson');

                    ResetReportingPerson();
                }
            }
        });
    });

    $('#btnDeleteReportingPerson').click(function(e) {

        var oEmployeeReportingPerson= $('#tblEmployeeReportingPerson').datagrid("getSelected");

        if(oEmployeeReportingPerson==null || oEmployeeReportingPerson.ERPID<=0){
            alert("Please select a reporting person from list."); return false;
        }

        if(!oEmployeeReportingPerson.IsActive){
            alert("Unable to delete. Already Inactivated"); return false;
        }

        if(new Date(oEmployeeReportingPerson.StartDateInStr)<= new Date(icsdateformat(new Date()))){
            alert("Unable to delete, For delation start date must be later than current date.\nYou can inactive it."); return false;
        }

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeReportingPerson,
            ControllerName: "Employee",
            ActionName: "DeleteReportingPerson",
            TableId: "tblEmployeeReportingPerson",
            IsWinClose: false
        };
        $.icsDelete(obj);
    });

    $('#btnInActiveReportingPerson').click(function(e) {

        var oEmployeeReportingPerson= $('#tblEmployeeReportingPerson').datagrid("getSelected");

        if(oEmployeeReportingPerson==null || oEmployeeReportingPerson.ERPID<=0){
            alert("Please select a reporting person from list."); return false;
        }

        if(!oEmployeeReportingPerson.IsActive){
            alert("Already Inactivated"); return false;
        }

        if(new Date(oEmployeeReportingPerson.StartDateInStr)>= new Date(icsdateformat(new Date()))){
            alert("Unable to inactive, For inactivation start date must be previous than current date.\nYou can delete it."); return false;
        }

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeReportingPerson,
            ObjectId: oEmployeeReportingPerson.ERPID,
            ControllerName: "Employee",
            ActionName: "SaveReportingPerson",
            TableId: "tblEmployeeReportingPerson",
            IsWinClose: false,
            Message: "Inactive Successfully."
        };
        $.icsSave(obj);
    });

    /*------------------- Signature-----------------------*/

    $('#btnSaveSignature').click(function (e) {

        if(_oEmployee==null || _oEmployee.EmployeeID<=0){alert("No valid employee found."); return false;}
        var  oFormdata = new FormData();
        var fileInput = document.getElementById("imgSignature");
        if(fileInput.files[0]!=null){
            if(fileInput.files[0].size/1024>40){ alert("Max 40k size image allowed."); return  false;}
            oFormdata.append(fileInput.files[0].name, fileInput.files[0]);
        }
        else{ alert("Please browse signature image."); return false; }
        var nts=((new Date()).getTime())/1000;
        var xhr = new XMLHttpRequest();
        xhr.open('POST',_sBaseAddress+'/Employee/SaveEmpSignature?nts='+ nts);
        xhr.setRequestHeader('EmployeeID', _oEmployee.EmployeeID);
        xhr.send(oFormdata);

        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {  //the response is ready

                var oEmployee= MakeObject(xhr.responseText);

                if(oEmployee.EmployeeID>0)
                {
                    alert(oEmployee.ErrorMessage);
                    _oEmployee.SignatureInBase64String=oEmployee.SignatureInBase64String;
                }
                else
                {
                    $("#imgSignature")[0].value=null;
                    alert(oEmployee.ErrorMessage);
                }
            }
        }
    });

    function MakeObject(sResponseValue)
    {
        sResponseValue=sResponseValue.split('\\"')[1]
        var nEmployeeDocID=sResponseValue.split('~')[0];
        var oEmployee=
            {
                ErrorMessage: sResponseValue.split('~')[0],
                EmployeeID : sResponseValue.split('~')[1],
                SignatureInBase64String : sResponseValue.split('~')[2]
            };
        return oEmployee;
    }

    $('#btnRemoveSignature').click(function(e)
    {


        if(_oEmployee.SignatureInBase64String!="" && _oEmployee.EmployeeID>0){
            var oEmployee={
                EmployeeID:_oEmployee.EmployeeID
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oEmployee,
                ObjectId: oEmployee.EmployeeID,
                ControllerName: "Employee",
                ActionName: "RemoveEmpSignature",
                TableId: "",
                IsWinClose: false,
                Message: ""
            };
            $.icsSave(obj, function (response) {

                if (response.status && response.obj != null) {
                    if (response.obj.EmployeeID > 0 ) {
                        _oEmployee.SignatureInBase64String="";
                        alert("Remove successfully.");
                        $('#imgEmpSignature').attr('src', null).width(100).height(100);
                        $("#imgSignature")[0].value=null;
                    }
                }
            });
        }
        else{
            $('#imgEmpSignature').attr('src', null).width(100).height(100);
            $("#imgSignature")[0].value=null;
        }

    });

    function SetEmpSignature(input) {

        if(_oEmployee==null || _oEmployee.EmployeeID<=0){
            alert("Please save employee information first.");
            $('#imgEmpSignature').attr('src', null).width(100).height(100);
            $("#imgSignature")[0].value=null;
            return  false;
        }
        if (input.files && input.files[0]) {
            if(input.files[0].size/1024>40)
            {
                alert("Max 40k size image allowed.");
                $("#imgSignature")[0].value=null;
                return  false;
            }
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#imgEmpSignature')
                .attr('src', e.target.result)
                .width(170)
                .height(100);
                // $('#txtIsRemovedProfilePic').val(false);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }

    /* ----------------------------------------------------- */
    function RefreshControl()
    {
        debugger;
        $('#cboGender').val(_oEmployee.Gender);
        $("#txtCode").val(_oEmployee.Code);
        $("#txtNameInEngilish").val(_oEmployee.Name);
        $("#txtNameInBangla").val(_oEmployee.NameInBangla);
        $("#txtContactNmuber").val(_oEmployee.NameInBangla);
        $("#txtContactNmuber").val(_oEmployee.ContactNo);
        $("#txtOtherPhoneNo").val(_oEmployee.OtherPhoneNo);
        $("#txtEmail").val(_oEmployee.Email);
        $("#txtFather").val(_oEmployee.FatherName);
        $("#txtSpouseName").val(_oEmployee.SpouseName);
        $("#txtMotrherName").val(_oEmployee.MotherName);
        $("#cboBloodGroup").val(_oEmployee.BloodGroup);
        $("#txtPermanentAddress").val(_oEmployee.ParmanentAddress);

        $("#txtIdentMark").val(_oEmployee.IdentificationMart);
        $("#txtHeight").val(_oEmployee.Height);
        $("#txtWeight").val(_oEmployee.Weight);

        $("#txtPresentAddress").val(_oEmployee.PresentAddress);

        $('#dtDateOfBirth').datebox('setValue', _oEmployee.DateOfBirthInString);
        $("#txtBirthID").val(_oEmployee.BirthID);
        $("#cboNationality").val(_oEmployee.Nationalism);
        $("#txtNationalID").val(_oEmployee.NationalID);

        if (_oEmployee.Religious == "Islam") {
            $('#cboReligion').val(1);
        }
        else if (_oEmployee.Religious == "Hindu") {
            $('#cboReligion').val(2);

        }
        else if (_oEmployee.Religious == "Christian") {
            $('#cboReligion').val(3);

        }
        else if (_oEmployee.Religious == "Buddist") {
            $('#cboReligion').val(4);
        }

        if(_oEmployee.MaritalStatus=="Married")
        {
            $('#cboMaritalStatus').val(1);
        }

        else  if(_oEmployee.MaritalStatus=="UnMarried")
        {
            $('#cboMaritalStatus').val(2);
        }

        $("#txtNote").val(_oEmployee.Note);
        debugger;
        _nAttSchemeID=_oEmployee.EmployeeOfficial.AttendanceSchemeID;
        _nDRPID=_oEmployee.EmployeeOfficial.DRPID;
        $("#txtAttScheme").val(_oEmployee.EmployeeOfficial.AttendanceSchemeName);
        $("#txtDepartmentRequirementPolicy").val(_oEmployee.EmployeeOfficial.DRPName);
        $('#txtBusinessUnit').val(_oEmployee.BUName);


        $('#dtDateOfJoin').datebox('setValue',_oEmployee.EmployeeOfficial.DateOfJoinInString);
        $('#dtConfirmation').datebox('setValue',_oEmployee.EmployeeOfficial.DateOfConfirmationInString);

        if (_oEmployee.IsFather == false) {
            $('#cboFather').val(2);
        }
        else {
            $('#cboFather').val(1);
        }



        $("#txtVillage").val(_oEmployee.Village);
        $("#txtPostOffice").val(_oEmployee.PostOffice);
        $("#txtThana").val(_oEmployee.Thana);
        $("#txtDistrict").val(_oEmployee.District);
        debugger;
        $("#txtPermVillage").val(_oEmployee.PermVillage);
        $("#txtPermPostOffice").val(_oEmployee.PermPostOffice);
        $("#txtPermThana").val(_oEmployee.PermThana);
        $("#txtPermDistrict").val(_oEmployee.PermDistrict);

        $("#txtCodeBangla").val(_oEmployee.CodeBangla);
        $("#txtNameInBangla").val(_oEmployee.NameInBangla);
        $("#txtFatherNameBangla").val(_oEmployee.FatherNameBangla);
        $("#txtMotherNameBangla").val(_oEmployee.MotherNameBangla);
        $("#txtNationalityBangla").val(_oEmployee.NationalityBangla);
        $("#txtNationalIDBangla").val(_oEmployee.NationalIDBangla);
        $("#cboBloodGroupBangla").val(_oEmployee.BloodGroupBangla);
        $("#txtHeightBangla").val(_oEmployee.HeightBangla);
        $("#txtWeightBangla").val(_oEmployee.WeightBangla);
        $("#txtDistrictBangla").val(_oEmployee.DistrictBangla);
        $("#txtThanaBangla").val(_oEmployee.ThanaBangla);
        $("#txtPostOfficeBangla").val(_oEmployee.PostOfficeBangla);
        $("#txtVillageBangla").val(_oEmployee.VillageBangla);
        $("#txtPresentAddressBangla").val(_oEmployee.PresentAddressBangla);
        $("#txtPermThanaBangla").val(_oEmployee.PermDistrict);
        $("#txtPermDistrictBangla").val(_oEmployee.PermDistrictBangla);
        $("#txtPermThanaBangla").val(_oEmployee.PermThanaBangla);
        $("#txtPermPostOfficeBangla").val(_oEmployee.PermPostOfficeBangla);
        $("#txtPermVillageBangla").val(_oEmployee.PermVillageBangla);
        $("#txtPermanentAddressBangla").val(_oEmployee.PermanentAddressBangla);
        $("#cboReligionBangla").val(_oEmployee.ReligionBangla);
        $("#cboMaritalStatusBangla").val(_oEmployee.MaritalStatusBangla);
        $("#txtNomineeBangla").val(_oEmployee.NomineeBangla);
        $("#txtAuthenticationBangla").val(_oEmployee.AuthenticationBangla);
    }

    function GetRosterPlanDetail(RosterPlanID)
    {
        //if (RosterPlanID<=0 || RosterPlanID==null)
        //{
        //    alert('Invalid Roster plan');
        //    return;
        //}

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/RosterPlan/GetRosterPlanDetail",
            traditional: true,
            data:  JSON.stringify({nID:RosterPlanID}),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oRosterPlanDetails = jQuery.parseJSON(data);
                if (oRosterPlanDetails.length > 0) {
                    RefreshShift_RosterPlanDetail(oRosterPlanDetails);
                    if(_sEmployeeHeader=="Edit Employee" || _nEmployeeOfficialID>0)
                    {
                        $('#cboCurrentShift').val(_oEmployee.EmployeeOfficial.CurrentShiftID);
                    }
                }
                else {
                    alert(oRosterPlanDetails[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function RefreshShift_RosterPlanDetail(oRosterPlanDetails)
    {
        var listSelectedShifts="";
        listSelectedShifts="<option value='"+0+"'>" +"--Select--" + "</option>";
        if(oRosterPlanDetails.length>0)
        {
            for (var j = 0; j <  oRosterPlanDetails.length; j++)
            {
                listSelectedShifts += "<option value='" + oRosterPlanDetails[j].ShiftID+"'>" + oRosterPlanDetails[j].Shift+"</option>";
            }
        }
        $("#cboCurrentShift").html(listSelectedShifts);
    }

    function GetDesignation(nLocationID,nDepartmentID)
    {
        IsCode =false;
        var oOrganograms=[];
        if (nLocationID<=0 || nLocationID==null)
        {
            RefreshDesignation(oOrganograms)
            return;
        }
        if (nDepartmentID<=0 || nDepartmentID==null)
        {
            RefreshDesignation(oOrganograms)
            return;
        }
        var tsv = ((new Date()).getTime()) / 1000;
        $.ajax({
            type: "GET",
            dataType: "json",
            url: _sBaseAddress+ "/DepartmentRequirementPolicy/Gets",
            data: { nLocationID: nLocationID,nDepartmentID:nDepartmentID,ts:tsv },
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oOrganograms = jQuery.parseJSON(data);
                if (oOrganograms.length > 0) {
                    RefreshDesignation(oOrganograms);
                    if(_sEmployeeHeader=="Edit Employee" || _nEmployeeOfficialID>0)
                    {
                        $('#cboDesignation').val(_oEmployee.EmployeeOfficial.DesignationID);
                    }
                }
                else {
                    alert(oOrganograms[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function RefreshDesignation(oOrganograms)
    {
        var listSelectedDesignations="";
        listSelectedDesignations="<option value='"+0+"'>" +"--Select--" + "</option>";
        if(oOrganograms.length>0)
        {
            for (var j = 0; j < oOrganograms.length; j++)
            {
                listSelectedDesignations += "<option value='" + oOrganograms[j].DesignationID+"'>" + oOrganograms[j].DesignationName+"</option>";
            }
        }
        $("#cboDesignation").html(listSelectedDesignations);
    }

    //$( "#cboDesignation" ).change(function() {
    //    if(!IsCode)
    //        GetEmpCode(_nDRPID,$("#cboDesignation").val(),'2 Aug 2015',1);

    //});

    var IsCode =false;
    function GetEmpCode(nDRPID,nDesignationId,dtDateOfJoin,nCompanyId)
    {

        var oEmp={DRPID:nDRPID,DesignationID:nDesignationId,DateOfJoin:dtDateOfJoin,CompanyID:nCompanyId};
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/GetGeneratedEmpCode",
            traditional: true,
            data: JSON.stringify(oEmp),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                oEmp = jQuery.parseJSON(data);
                if (oEmp.ErrorMessage == "")
                {
                    if(oEmp.Code !="" && nDesignationId==0)
                    {
                        IsCode =true;
                    }
                    $("#txtCode").val(oEmp.Code);
                }
                else
                {
                    alert(oEmp.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function ValidateInput() {

        if ($.trim($("#txtCode").val()) == "") {
            alert("Please Enter Code !");
            $("#txtCode").focus();
            return false;
        }

        if ($("#txtNameInEngilish").val() == "") {
            alert("Please Enter Name In English !");
            $("#txtNameInEngilish").focus();
            return false;
        }

        if ($("#txtContactNmuber").val() == "") {
            alert("Please Enter Contact Number !");
            $("#txtContactNmuber").focus();
            return false;
        }

        if ($("#txtFather").val() == "") {
            alert("Please Enter Father/Husband Name !");
            $("#txtFather").focus();
            return false;
        }
        if ($("#txtMotrherName").val() == "") {
            alert("Please Enter Motrher Name !");
            $("#txtMotrherName").focus();
            return false;
        }

        //date of birth validation
        var CurDate = new Date();
        var UDate = new Date($('#dtDateOfBirth').datebox('getValue'));

        var CurYear = CurDate.getFullYear();
        var CurMonth = CurDate.getMonth();
        var UYear = UDate.getFullYear();
        var UMonth = CurDate.getMonth();
        var nTotalYear = CurYear - UYear;
        var nLeafYear = 0;

        for (var i = UYear; i <= CurYear; i++) {
            if (i % 4 == 0) {
                nLeafYear++;
            }
        }
        if (UYear % 4 == 0 & UMonth > 2) {
            nLeafYear = nLeafYear - 1;
        }
        if (CurYear % 4 == 0 & UMonth < 2) {
            nLeafYear = nLeafYear - 1;
        }

        var MilliSecondsPerDay = 1000 * 60 * 60 * 24;
        var MilliSBetween = CurDate.getTime() - UDate.getTime();
        var nDays = Math.floor(MilliSBetween / MilliSecondsPerDay);
        var nFinalYear = (nDays - nLeafYear) / 365;

        if (nFinalYear < 18) {
            alert("Invalid birth date! Age must be at least 18 years!");
            $("#dtDateOfBirth").focus();
            return false;
        }
        return true;
    }

    function RefreshObject() {

        var Father = 0;
        if ($('#cboFather').val()== 1) {
            Father = 1;
        }

        //var EmpOfficial =
        //{
        //    EmployeeOfficialID: _nEmployeeOfficialID,
        //    AttendanceSchemeID: _nAttSchemeID,
        //    DRPID: _nDRPID,
        //    DesignationID: $('#cboDesignation').val(),
        //    CurrentShiftID: $('#cboCurrentShift').val(),
        //    DateOfJoin: $('#dtDateOfJoin').datebox('getValue'),
        //    DateOfConfirmation: $('#dtConfirmation').datebox('getValue'),
        //    EmployeeTypeID:$("#cboEmployeeType").val()
        //};

        var Gender = document.getElementById("cboGender");
        var MarSt = document.getElementById("cboMaritalStatus");
        var Religion = document.getElementById("cboReligion");

        var oEmployee =
        {
            EmployeeID: _oEmployee.EmployeeID,
            Code: $("#txtCode").val(),
            Gender: Gender.options[Gender.selectedIndex].text,
            Name: $("#txtNameInEngilish").val(),
            ContactNo: $("#txtContactNmuber").val(),
            OtherPhoneNo: $("#txtOtherPhoneNo").val(),
            Email: $("#txtEmail").val(),
            IsFather: Father,
            FatherName: $("#txtFather").val(),
            SpouseName:$("#txtSpouseName").val(),
            MotherName: $("#txtMotrherName").val(),
            BloodGroup: $("#cboBloodGroup").val(),
            ParmanentAddress: $("#txtPermanentAddress").val(),
            PresentAddress: $("#txtPresentAddress").val(),

            IdentificationMart:$("#txtIdentMark").val(),
            Height:$("#txtHeight").val(),
            Weight:$("#txtWeight").val(),

            //Village: document.getElementById("txtVill").value,
            //PostOffice: document.getElementById("txtPostOffice").value,
            //Thana: document.getElementById("txtThana").value,
            //District: document.getElementById("txtDistrict").value,
            //PostCode: document.getElementById("txtPostCode").value,

            DateOfBirth: $('#dtDateOfBirth').datebox('getValue'),
            BirthID: $("#txtBirthID").val(),
            Nationalism: $("#cboNationality").val(),
            NationalID: $("#txtNationalID").val(),
            Religious: Religion.options[Religion.selectedIndex].text,
            MaritalStatus: MarSt.options[MarSt.selectedIndex].text,
            //ChildrenInfo: document.getElementById("txtChildren").value,
            Note: $("#txtNote").val(),



            Village: document.getElementById("txtVillage").value,
            PostOffice: document.getElementById("txtPostOffice").value,
            Thana: document.getElementById("txtThana").value,
            District: document.getElementById("txtDistrict").value,


            PermVillage: document.getElementById("txtPermVillage").value,
            PermPostOffice: document.getElementById("txtPermPostOffice").value,
            PermThana: document.getElementById("txtPermThana").value,
            PermDistrict: document.getElementById("txtPermDistrict").value,

            //EmployeeOfficial: EmpOfficial
            // bangla
            CodeBangla : $("#txtCodeBangla").val(),
            NameInBangla : $("#txtNameInBangla").val(),
            FatherNameBangla : $("#txtFatherNameBangla").val(),
            MotherNameBangla : $("#txtMotherNameBangla").val(),
            NationalityBangla : $("#txtNationalityBangla").val(),
            NationalIDBangla : $("#txtNationalIDBangla").val(),
            BloodGroupBangla : $("#cboBloodGroupBangla").val(),
            HeightBangla : $("#txtHeightBangla").val(),
            WeightBangla : $("#txtWeightBangla").val(),
            DistrictBangla : $("#txtDistrictBangla").val(),
            ThanaBangla : $("#txtThanaBangla").val(),
            PostOfficeBangla : $("#txtPostOfficeBangla").val(),
            VillageBangla : $("#txtVillageBangla").val(),
            PresentAddressBangla : $("#txtPresentAddressBangla").val(),
            PermDistrictBangla : $("#txtPermDistrictBangla").val(),
            PermThanaBangla : $("#txtPermThanaBangla").val(),
            PermPostOfficeBangla : $("#txtPermPostOfficeBangla").val(),
            PermVillageBangla : $("#txtPermVillageBangla").val(),
            PermanentAddressBangla : $("#txtPermanentAddressBangla").val(),
            ReligionBangla : $("#cboReligionBangla").val(),
            MaritalStatusBangla : $("#cboMaritalStatusBangla").val(),
            NomineeBangla : $("#txtNomineeBangla").val(),
            AuthenticationBangla : $("#txtAuthenticationBangla").val()
        };

        return oEmployee;
    }

    $('#btnEmpSave').click(function (e)
    {
        debugger;
        if (!ValidateInput()) return;
        var oEmployee = RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeBasicInformation_IU",
            traditional: true,
            data: JSON.stringify(oEmployee),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                _oEmployee = jQuery.parseJSON(data);
                $("#txtACName").val(_oEmployee.Name);
                Saved();
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });
    $('#btnEmpSaveBangla').click(function (e)
    {
        $('#btnEmpSave').click();
    });

    /*official start*/
    function ValidateInput_Official() {
        if(_oEmployee.EmployeeID ==0)
        {
            alert("Please Save Employee Basic!!");
            return false;
        }

        if ($('#cboEmployeeType').val()<=0) {
            alert("Please select an employee type");
            $("#cboEmployeeType").addClass("errorFieldBorder");
            $("#cboEmployeeType").focus();
            return false;
        } else {
            $("#cboEmployeeType").removeClass("errorFieldBorder");
        }

        if (_nAttSchemeID == 0) {
            alert("Please Enter Att. Scheme !");
            $("#btnAttScheme").focus();
            return false;
        }

        if (_nDRPID == 0) {
            alert("Please Enter DRP !");
            $("#btnDRP").focus();
            return false;
        }

        if (document.getElementById("cboDesignation").selectedIndex == 0) {
            alert("Please Select Designation !");
            $("#cboDesignation").focus();
            return false;
        }

        if (document.getElementById("cboCurrentShift").selectedIndex == 0) {
            alert("Please Select Current Shift !");
            $("#cboCurrentShift").focus();
            return false;
        }
        //if (new Date($('#dtDateOfJoin').datebox('getValue')) > new Date($('#dtConfirmation').datebox('getValue'))) {
        //    alert("Invalid confirmation date !");
        //    $("#dtDateOfBirth").focus();
        //    return false;
        //}

        if ($('#cboCategory').val() == 0 && _nEmployeeOfficialID<=0)
        {
            alert("Please select Category !");
            $("#cboCategory").focus();
            return false;
        }
        return true;
    }

    function RefreshObject_Official()
    {
        var oEmployeeConfirmation =
        {
            ECID:0,
            EmployeeCategoryInt:$('#cboCategory').val(),
            EmployeeID:_oEmployee.EmployeeID,
            EmployeeCode:_oEmployee.Code,
            StartDate:$('#dtDateOfJoin').datebox('getValue'),
            EndDate:$('#dtConfirmation').datebox('getValue'),
            Note:"",
            MotherEmployeeID : 0
        };

        var oEmpOfficial =
        {
            EmployeeID:_oEmployee.EmployeeID,
            EmployeeOfficialID: _nEmployeeOfficialID,
            AttendanceSchemeID: _nAttSchemeID,
            DRPID: _nDRPID,
            DesignationID: $('#cboDesignation').val(),

            CurrentShiftID: $('#cboCurrentShift').val(),
            DateOfJoin: $('#dtDateOfJoin').datebox('getValue'),
            DateOfConfirmation: $('#dtConfirmation').datebox('getValue'),
            EmployeeTypeID:$("#cboEmployeeType").val(),
            IsUser:$('#chkMakeUser').is(":checked"),
            EmployeeConfirmation:oEmployeeConfirmation
        };

        return oEmpOfficial;
    }
    $('#btnSaveEmpOfficial').click(function (e)
    {
        if (!ValidateInput_Official()) return;
        var oEmployee = RefreshObject_Official();

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EMPOfficialInfoIU",
            traditional: true,
            data: JSON.stringify(oEmployee),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                _oEmployee = jQuery.parseJSON(data);
                //var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                //if(nIndex==-1)
                //{
                //    alert(1);
                //    var oEmployees=jQuery.parseJSON(sessionStorage.getItem("Employees"));
                //    sessionStorage.setItem("SelectedRowIndex", oEmployees.length);
                //}
                Saved();
                GetLeaveLedger();
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $("#chkBank").click(function (e)
    {
        $('#chkCash').prop('checked', false);
        $('#chkBank').prop('checked', true);
        document.getElementById('lblCash').innerHTML = 'Bank :';
    });
    $("#chkCash").click(function (e)
    {
        $('#chkBank').prop('checked', false);
        $('#chkCash').prop('checked', true);
        document.getElementById('lblCash').innerHTML = 'Cash :';
    });

    function Saved()
    {
        if (_oEmployee.ErrorMessage == "" && _oEmployee.EmployeeID>0)
        {
            alert("Data Saved sucessfully");

            $("#txtEmployee").val("");
            $("#txtTypesOfEmployee").val("");
            $("#txtECMEmpInformation").val("");
            $("#txtTINEmployee").val("");
            $("#txtLogInID").val("");

            $("#txtEmployee").val(_oEmployee.Name);
            $("#txtTypesOfEmployee").val(_oEmployee.EmployeeTypeName);
            $("#txtECMEmpInformation").val(_oEmployee.Name+","+_oEmployee.DesignationName+","+_oEmployee.DepartmentName+","+_oEmployee.LocationName);
            $("#txtTINEmployee").val(_oEmployee.Name+"["+_oEmployee.Code+"]");
            $("#txtLogInID").val(_oEmployee.Code);
            var oEmployees =sessionStorage.getItem("Employees");
            var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
            if(oEmployees!=null)
            {
                oEmployees = jQuery.parseJSON(oEmployees);
            }
            else
            {
                oEmployees=[];
            }
            if(nIndex!=-1)
            {
                oEmployees[nIndex]=_oEmployee;
            }
            else
            {
                sessionStorage.setItem("SelectedRowIndex", oEmployees.length);
                oEmployees.push(_oEmployee);
            }
            sessionStorage.setItem("Employees", JSON.stringify(oEmployees));
        }
        else
        {
            alert(_oEmployee.ErrorMessage);
        }
    }

    /*official end*/

    var bCopyFromOther = false;
    function SetControl(oSalaryStructure)
    {
        _sOverTimeLabel=""; _nLateCount=0;  _nEarlyLeavingCount=0;

        $("#chkAllowBankAdvice,#chkProductionBase,#chkAllowOverTime,#chkAttendanceDependent").prop("disabled",true);
        $("#chkAllowBankAdvice,#chkProductionBase,#chkAllowOverTime,#chkAttendanceDependent").prop("checked",false);

        $("#lblAllowOverTime").hide();

        $('#tdAttendanceDependent').hide();
        $("#txtLateCount").prop("disabled",true);
        $("#txtEarlyLeavingCount").prop("disabled",true);
        $("#txtLateCount").html(0);
        $("#txtEarlyLeavingCount").html(0);

        //$("#txtEmployee").val(oSalaryStructure.EmployeeName);
        //$("#txtTypesOfEmployee").val(oSalaryStructure.EmployeeTypeName);

        if(bCopyFromOther)
        {
            $("#txtSalaryScheme").val(oSalaryStructure.SalarySchemeName);
            $("#txtPaymentCycle").val(oSalaryStructure.PaymentCycleInString);
            LoadStartDay(oSalaryStructure.PaymentCycleInString, oSalaryStructure.StartDay);
        }

        $("#txtDescription").val(oSalaryStructure.Description);
        $("#txtGrossSalary").val(oSalaryStructure.GrossAmount);
        $("#txtGrossSalary_Comp").val(oSalaryStructure.CompGrossAmount);
        $("#txtCash").val(oSalaryStructure.CashAmount);

        if(oSalaryStructure.IsAllowBankAccount){
            $("#chkAllowBankAdvice").prop("disabled",false);
            $("#chkAllowBankAdvice").prop("checked",oSalaryStructure.IsAllowBankAccount);
        }


        if(oSalaryStructure.IsProductionBase){
            $("#chkProductionBase").prop("disabled",false);
            $("#chkProductionBase").prop("checked",oSalaryStructure.IsProductionBase);
        }
        if(oSalaryStructure.IsAllowOverTime==true)
        {
            $("#chkAllowOverTime").prop("disabled",false);
            _sOverTimeLabel="[Over Time Value : Over Time Hour*("+oSalaryStructure.OverTimeONInString+"/"+oSalaryStructure.DividedBy+")*"+oSalaryStructure.MultiplicationBy+"]";
            $("#chkAllowOverTime").prop("checked",oSalaryStructure.IsAllowOverTime);
            $("#lblAllowOverTime").show();
            $("#lblAllowOverTime").text(_sOverTimeLabel);
        }
        if(oSalaryStructure.IsAttendanceDependent==true)
        {
            $("#chkAttendanceDependent").prop("disabled",false);
            _nLateCount=oSalaryStructure.LateCount; _nEarlyLeavingCount=oSalaryStructure.EarlyLeavingCount;
            $("#chkAttendanceDependent").prop("checked",oSalaryStructure.IsAttendanceDependent);
            $("#tdAttendanceDependent").show();
            $("#txtLateCount").prop("disabled",true);
            $("#txtEarlyLeavingCount").prop("disabled",true);
            $("#txtLateCount").html(_nLateCount);
            $("#txtEarlyLeavingCount").html(_nEarlyLeavingCount);
        }
    }

    function LoadStartDay(sPaymentCycle, nStartDay)
    {
        $('#cboStatDay').empty();
        var listItems= "<option value='0'>0</option>";
        if(sPaymentCycle=="Monthly")
        {
            var n=30;
            for(i=1; i<=n;i++)
            {
                listItems += "<option value='" + i.toString() +"'>" + i.toString() +"</option>";
            }
        }
        $("#cboStatDay").html(listItems);
        $("#cboStatDay").val(nStartDay);
    }

    function RefreshListForSalaryHeadOfBasicType(BasicSalarySchemeDetails)
    {
        debugger;
        _nBasicTotalAmount = 0;
        _nBasicTotalAmount_Comp = 0;
        data = BasicSalarySchemeDetails;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblSalaryStructureDetailBasic').datagrid('loadData', data);

        for(var i=0;i<BasicSalarySchemeDetails.length;i++)
        {
            _nBasicTotalAmount = _nBasicTotalAmount+ parseFloat(BasicSalarySchemeDetails[i].Amount);
            _nBasicTotalAmount_Comp=_nBasicTotalAmount_Comp+ parseFloat(BasicSalarySchemeDetails[i].CompAmount);
        }

        $("#lblBasicTotal").html(formatPrice(Math.round(_nBasicTotalAmount)));
        $("#lblBasicTotal_Comp").html(formatPrice(Math.round(_nBasicTotalAmount_Comp)));

        console.log(_nBasicTotalAmount + " " + _nBasicTotalAmount_Comp);
        console.log(formatPrice(_nBasicTotalAmount) + " " + formatPrice(_nBasicTotalAmount_Comp));
    }

    function RefreshListForSalaryHeadOfAllowanceType(AllowanceSalarySchemeDetails)
    {
        debugger;
        _nAllowanceTotalAmount_Addition = 0;
        _nAllowanceTotalAmount_Deduction = 0;
        data = AllowanceSalarySchemeDetails;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblSalaryStructureDetailAllowance').datagrid('loadData', data);

        for(var i=0;i<AllowanceSalarySchemeDetails.length;i++)
        {
            if(AllowanceSalarySchemeDetails[i].SalaryHeadType ==2)
            {
                _nAllowanceTotalAmount_Addition = parseFloat(_nAllowanceTotalAmount_Addition) + parseFloat(AllowanceSalarySchemeDetails[i].Amount);
            }
            else if(AllowanceSalarySchemeDetails[i].SalaryHeadType ==3)
            {
                _nAllowanceTotalAmount_Deduction = parseFloat(_nAllowanceTotalAmount_Deduction) + parseFloat(AllowanceSalarySchemeDetails[i].Amount);
            }
        }
        $("#lblAdditionAllowanceTotal").html(formatPrice(_nAllowanceTotalAmount_Addition));
        $("#lblDeductionAllowanceTotal").html(formatPrice(_nAllowanceTotalAmount_Deduction));
    }


    function ESSValidateInput()
    {
        if($("#txtEmployee").val()=="" || _oEmployee.EmployeeID ==0)
        {
            alert("Please Save Employee Basic!!");
            return false;
        }
        if($("#txtSalaryScheme").val()=="")
        {
            alert("Please Enter A Scheme!!");
            return false;
        }
        if($("#txtPaymentCycle").val()=="Monthly")
        {
            var nStartDay=parseInt($("#cboStatDay option:selected").val());
            if(nStartDay<=0)
            {
                alert("Please Select Monthly Start Date!!");
                return false;
            }
        }

        var nGsalary=$("#txtGrossSalary").val();

        if(nGsalary=="" || nGsalary<=0)
        {
            alert("Please Enter Gross Salary!!");
            return false;
        }

        var nBasicTotal= parseFloat(icsRemoveComma($("#lblBasicTotal").html(),2));
        if(parseFloat(nGsalary)!=nBasicTotal)
        {
            alert("Gross salary must be equal to basic salary head total!!");
            return false;
        }

        var nCompGsalary=$("#txtGrossSalary_Comp").val();
        if(nCompGsalary=="" || nCompGsalary<=0)
        {
            alert("Please Enter comp Gross Salary!!");
            return false;
        }

        var nCompBasicTotal= parseFloat(icsRemoveComma($("#lblBasicTotal_Comp").html(),2));
        if(parseFloat(nCompGsalary)!=nCompBasicTotal)
        {
            alert("comp Gross salary must be equal to comp basic salary head total!!");
            return false;
        }

        var oBasicTypeDetails = $('#tblSalaryStructureDetailBasic').datagrid('getRows');
        if(oBasicTypeDetails.length<= 0)
        {
            alert("Please Set The Salary Structure!!");
            return false;
        }

        //if(_nTotal!=nGsalary)
        //{
        //    alert("Total Amount must be equal to Gross Salary ! ");
        //    return false;
        //}

        return true;
    }

    function ESSRefreshObject()
    {
        debugger;
        var oSalaryStructureDetail=[];
        var oBasicTypeDetails = $('#tblSalaryStructureDetailBasic').datagrid('getRows');
        var oAllowanceTypeDetails = $('#tblSalaryStructureDetailAllowance').datagrid('getRows');

        for(var i=0;i<oBasicTypeDetails.length;i++)
        {
            if(_oEmployee.EmployeeSalaryStructure !=null )//this portion may be minimized !!
            {
                for(var j=0;j<_oEmployee.EmployeeSalaryStructure.EmployeeSalaryStructureDetails.length;j++)
                {
                    if(oBasicTypeDetails[i].SalaryHeadID == _oEmployee.EmployeeSalaryStructure.EmployeeSalaryStructureDetails[j].SalaryHeadID)
                    {
                        oBasicTypeDetails[i].ESSSID = _oEmployee.EmployeeSalaryStructure.EmployeeSalaryStructureDetails[j].ESSSID;
                    }
                }
            }
            oSalaryStructureDetail.push(oBasicTypeDetails[i]);
        }

        for(var i=0;i<oAllowanceTypeDetails.length;i++)
        {
            //if(oAllowanceTypeDetails[i].ESSSID > 0)
            oSalaryStructureDetail.push(oAllowanceTypeDetails[i]);
        }

        var nActualGrossAmount=0;
        var nGrossAmount=0;
        var nCompGrossAmount=0;
        nGrossAmount=$("#txtGrossSalary").val();
        nCompGrossAmount=$("#txtGrossSalary_Comp").val();
        var nESSID = 0;
        if(_oEmployee.EmployeeSalaryStructure != null)
        {
            nESSID= _oEmployee.EmployeeSalaryStructure.ESSID;
        }

        var IsCashFixed = false;
        if ($("#chkBank").is(':checked')) {
            IsCashFixed = false;
        }
        if ($("#chkCash").is(':checked')) {
            IsCashFixed = true;
        }

        var oSalaryStructure =
        {
            ESSID : nESSID,
            EmployeeID:_oEmployee.EmployeeID,
            SSGradeID: _nSSGradeID,
            SalarySchemeID:_nSalarySchemeID,
            Description:$("#txtDescription").val(),
            GrossAmount:nGrossAmount,
            CompGrossAmount:nCompGrossAmount,
            IsIncludeFixedItem:false,
            ActualGrossAmount:nGrossAmount,
            CurrencyID:1,//may be changed !
            IsAllowBankAccount :$('#chkAllowBankAdvice').is(':checked'),
            IsAllowOverTime :$('#chkAllowOverTime').is(':checked'),
            IsAttendanceDependent :$('#chkAttendanceDependent').is(':checked'),
            StartDay : parseInt($("#cboStatDay option:selected").val()),
            IsCashFixed : IsCashFixed,
            CashAmount:$("#txtCash").val(),
            EmployeeSalaryStructureDetails:oSalaryStructureDetail
        };

        return oSalaryStructure;
    }

    $('#btnSaveESS').click(function (e)
    {
        if (!ESSValidateInput()) return;
        var oEmployeeSalaryStructure = ESSRefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EmployeeSalaryStructure/EmployeeSalaryStructure_IU",
            traditional: true,
            data: JSON.stringify(oEmployeeSalaryStructure),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {

                oEmployeeSalaryStructure = jQuery.parseJSON(data);
                if (oEmployeeSalaryStructure.ErrorMessage == "")
                {
                    alert("Data Saved sucessfully");
                    // window.returnValue = oEmployeeSalaryStructure;
                    $("#txtDescription").prop("disabled",true);
                    $("#txtGrossSalary").prop("disabled",true);
                    $("#txtGrossSalary_Comp").prop("disabled",true);

                    $("#btnSetStructure").hide();
                    $("#btnResetStructure").hide();
                    //$("#btnSaveESS").hide();
                    $("#btnScheme").prop("disabled",true);

                }
                else
                {
                    alert(oEmployeeSalaryStructure.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $('#chkAllowOverTime').click(function (e)
    {

        if($('#chkAllowOverTime').is(':checked')==true)
        {

            $("#lblAllowOverTime").show();
            $("#lblAllowOverTime").html(_sOverTimeLabel);
        }
        else
        {
            $("#lblAllowOverTime").hide();
            $("#lblAllowOverTime").html("");
        }
    });

    $('#chkAttendanceDependent').click(function (e)
    {
        if($('#chkAttendanceDependent').is(':checked')==true)
        {
            $('#tdAttendanceDependent').show();
            $("#txtLateCount").prop("disabled",true);
            $("#txtEarlyLeavingCount").prop("disabled",true);
            $("#txtLateCount").html(_nLateCount);
            $("#txtEarlyLeavingCount").html(_nEarlyLeavingCount);
        }
        else
        {
            $('#tdAttendanceDependent').hide();
            $("#txtLateCount").prop("disabled",true);
            $("#txtEarlyLeavingCount").prop("disabled",true);
            $("#txtLateCount").html(0);
            $("#txtEarlyLeavingCount").html(0);
        }
    });

    $('#txtEmployeeName_Copy').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        var sEmpCode=document.getElementById("txtEmployeeName_Copy").value;
        var nDepartmentID=0;
        if (code == 13)//Enter key-13
        {
            if(sEmpCode=="")
            {
                alert("Please Enter Code !");
                return;
            }
            var oEmployee = { Params: sEmpCode+ '~' +nDepartmentID};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oEmployee,
                ControllerName: "Employee",
                ActionName: "GetsByEmpCode",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].EmployeeID > 0) {

                        var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 120, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DepartmentName", title: "Department", width: 140, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DesignationName", title: "Designation", width: 140, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winEmpPicker',
                            winclass:'clsEmpPicker',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblEmps',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Employee List'
                        };

                        $.icsPicker(oPickerParam);
                        IntializeEmpPickerbutton(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }
    });

    function IntializeEmpPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmpPicker')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    bCopyFromOther = true;
                    var txtEmployeeName = document.getElementById("txtEmployeeName_Copy");
                    txtEmployeeName.value = oreturnObj.Name;
                    txtEmployeeName.style.color = "blue";
                    txtEmployeeName.style.fontWeight = "bold";
                    //_oEmployee.EmployeeID = oreturnObj.EmployeeID;
                    LoadSalaryHeadGrid(oreturnObj.EmployeeID,"SalaryStructure");

                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmpPicker')
                {

                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        bCopyFromOther = true;
                        var txtEmployeeName = document.getElementById("txtEmployeeName_Copy");
                        txtEmployeeName.value = oreturnObj.Name;
                        txtEmployeeName.style.color = "blue";
                        txtEmployeeName.style.fontWeight = "bold";
                        //_oEmployee.EmployeeID = oreturnObj.EmployeeID;
                        LoadSalaryHeadGrid(oreturnObj.EmployeeID,"SalaryStructure");
                    }
                }
            }
        });
    }

    $('#txtSalaryScheme').keypress(function (e)
    {
        if(_oEmployee.EmployeeID <=0)
        {
            alert("There is no employee is saved to set salary structure! Please save emloyee information !");
            return;
        }
        var code = (e.keyCode ? e.keyCode : e.which);
        var sSSName = document.getElementById("txtSalaryScheme").value;
        if (code == 13)//Enter key-13
        {

            var oSalaryScheme = { Name: sSSName};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oSalaryScheme,
                ControllerName: "SalaryScheme",
                ActionName: "GetsBySalarySchemeName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].SalarySchemeID > 0) {

                        var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "NatureOfEmployeeInString", title: "Nature Of Employee", width: 140, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "PaymentCycleInString", title: "Payment Cycle", width: 140, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winSalarySchemePicker',
                            winclass:'clsSalarySchemePicker',
                            winwidth: 485,
                            winheight: 460,
                            tableid: 'tblSalarySchemes',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Salary Scheme List'
                        };

                        $.icsPicker(oPickerParam);
                        IntializeSalarySchemePickerbutton(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });

        }
    });

    function IntializeSalarySchemePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winSalarySchemePicker')
            {
                if (oreturnObj != null && oreturnObj.SalarySchemeID > 0)
                {
                    //$("#txtGrossSalary").numberbox('setValue',"");
                    //$("#txtGrossSalary_Comp").numberbox('setValue',"");
                    $("#txtGrossSalary").val(0);
                    $("#txtGrossSalary_Comp").val(0);
                    bCopyFromOther = false;
                    _oEmployee.EmployeeSalaryStructure= null;
                    var txtSalarySchemeName = document.getElementById("txtSalaryScheme");
                    $("#txtPaymentCycle").val(oreturnObj.PaymentCycleInString);
                    txtSalarySchemeName.value = oreturnObj.Name;
                    txtSalarySchemeName.style.color = "blue";
                    txtSalarySchemeName.style.fontWeight = "bold";
                    _nSalarySchemeID = oreturnObj.SalarySchemeID;
                    LoadSalaryHeadGrid(oreturnObj.SalarySchemeID,"SalaryScheme");
                    LoadStartDay(oreturnObj.PaymentCycleInString, oreturnObj.StartDay);
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsSalarySchemePicker')
                {
                    if (oreturnObj != null && oreturnObj.SalarySchemeID > 0)
                    {
                        //$("#txtGrossSalary").numberbox('setValue',"");
                        //$("#txtGrossSalary_Comp").numberbox('setValue',"");
                        $("#txtGrossSalary").val(0);
                        $("#txtGrossSalary_Comp").val(0);
                        bCopyFromOther = false;
                        var txtSalarySchemeName = document.getElementById("txtSalaryScheme");
                        txtSalarySchemeName.value = oreturnObj.Name;
                        txtSalarySchemeName.style.color = "blue";
                        txtSalarySchemeName.style.fontWeight = "bold";
                        $("#txtPaymentCycle").val(oreturnObj.PaymentCycleInString);
                        _nSalarySchemeID = oreturnObj.SalarySchemeID;
                        LoadSalaryHeadGrid(oreturnObj.SalarySchemeID,"SalaryScheme");
                        LoadStartDay(oreturnObj.PaymentCycleInString, oreturnObj.StartDay);
                    }
                }
            }
        });
    }

    function LoadSalaryHeadGrid(nId,sType)
    {
        debugger;
        var oESStructure = {ErrorMessage:nId+"~"+sType};
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oESStructure,
            ControllerName: "EmployeeSalaryStructure",
            ActionName: "GetSalaryStructure_Copy",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            debugger;
            if (response.status && response.obj != null) {
                debugger;
                var osalaryStructure = {ESSID:0,EmployeeSalaryStructureDetails:[]}

                for(var i=0;i<response.obj.EmployeeSalaryStructureDetails.length;i++)
                {
                    osalaryStructure.EmployeeSalaryStructureDetails.push(response.obj.EmployeeSalaryStructureDetails[i]);
                    //osalaryStructure.EmployeeSalaryStructureDetails[i].ESSSID=0;
                }
                _oSalaryStructureDetails = response.obj.EmployeeSalaryStructureDetails;
                osalaryStructure.EmployeeID=0;
                if(response.obj.SalarySchemeID>0)
                {
                    _nSalarySchemeID = response.obj.SalarySchemeID;
                }
                SetControl(response.obj);
                LoadSalaryStructureDetail(_oSalaryStructureDetails);
                if(_oSSGrade!=null && _oSSGrade.SSGradeID>0){
                    //$("#txtGrossSalary").numberbox('setValue', parseFloat(_oSSGrade.MaxAmount));
                    $("#txtGrossSalary").val(_oSSGrade.MaxAmount);
                    CalculateHeadWiseSalaryAmount(_oSalaryStructureDetails);
                    LoadSalaryStructureDetail(_oSalaryStructureDetails);
                }
                //CalculateHeadWiseSalaryAmount(osalaryStructure.EmployeeSalaryStructureDetails);
            }
            else { alert(response.obj.ErrorMessage); }
        });
    }

    function LoadSalaryStructureDetail(oSalaryStructureDetails)
    {
        debugger;
        var oBasicSalarySchemeDetails = [];
        var oAllowanceSalarySchemeDetails = [];


        for(var i=0;i<oSalaryStructureDetails.length;i++)
        {
            if(oSalaryStructureDetails[i].SalaryHeadType==1 )
            {
                oBasicSalarySchemeDetails.push(oSalaryStructureDetails[i]);
            }
            else if(oSalaryStructureDetails[i].SalaryHeadType!=1 )
            {
                oAllowanceSalarySchemeDetails.push(oSalaryStructureDetails[i]);
            }

        }

        RefreshListForSalaryHeadOfBasicType(oBasicSalarySchemeDetails);
        RefreshListForSalaryHeadOfAllowanceType(oAllowanceSalarySchemeDetails);


    }

    function ResetStructure()
    {

        if(_oSalaryStructureDetails!=null)
        {
            for(var i = 0 ; i <_oSalaryStructureDetails.length ; i++)
            {
                _oSalaryStructureDetails[i].Amount = 0;
                _oSalaryStructureDetails[i].CompAmount = 0;
            }
        }
        else
        {
            _oSalaryStructureDetails=[];
        }

        //$("#txtGrossSalary").numberbox('setValue',"");
        //$("#txtGrossSalary_Comp").numberbox('setValue',"");
        $("#txtGrossSalary").val(0);
        $("#txtGrossSalary_Comp").val(0);
        $("#txtCash").numberbox('setValue',"");

        LoadSalaryStructureDetail(_oSalaryStructureDetails);
    }

    //==================ESS END

    /**************Employee Authentication*************/

    //$("#btnNewAuthentication").click(function () {
    //    if (_oEmployee.EmployeeID<=0)
    //    {
    //        alert('Please Add Employee first.!!');
    //        return;
    //    }
    //    $("#txtCardNo").val("");
    //    _nEmployeeAuthenticationID = 0;
    //    $("#winEmployeeAuthentication").icsWindow("open", "Add Authentication for "+_oEmployee.Name+"["+_oEmployee.Code+"]");
    //});

    $("#btnEditAuthentication").click(function () {

        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oEmployeeAuthentication= $('#tblEmployeAuthentication').datagrid('getSelected');
        if(oEmployeeAuthentication==null || oEmployeeAuthentication.EmployeeAuthenticationID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        $("#winEmployeeAuthentication").icsWindow("open", "Edit Authentication for "+_oEmployee.Name+"["+_oEmployee.Code+"]");
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeAuthentication,
            ControllerName: "Employee",
            ActionName: "GetEmployeeAuthentication",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.EmployeeAuthenticationID > 0) {
                    $("#txtCardNo").val(response.obj.CardNo);
                    _nEmployeeAuthenticationID = response.obj.EmployeeAuthenticationID;
                }
                else {
                    alert(response.obj.ErrorMessage);
                }
            }
            else { alert("No information found."); }
        });
    });

    //$("#btnCloseAuthenticationAdd").click(function () {
    //    $("#winEmployeeAuthentication").icsWindow("close");
    //});

    function ValidateInput_Authentication()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return true;
        }

        if($("#txtCardNo").val()==null || $("#txtCardNo").val()=="")
        {
            alert("Please enter Card No!");
            $('#txtCardNo').focus();
            return false;
        }
        return true;
    }

    function RefreshObject_Authentication()
    {
        var oEmployeeAuthentication= {
            EmployeeAuthenticationID : _nEmployeeAuthenticationID,
            EmployeeID : _oEmployee.EmployeeID,
            CardNo :$("#txtCardNo").val()
        };
        return oEmployeeAuthentication;
    }

    $("#btnAuthenticationSave").click(function () {
        _nEmployeeAuthenticationID = 0;
        if(!ValidateInput_Authentication()) return;
        var oEmployeeAuthentication=RefreshObject_Authentication();

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeAuthentication,
            ObjectId: oEmployeeAuthentication.EmployeeAuthenticationID,
            ControllerName: "Employee",
            ActionName: "EmployeeAuthenticationIU",
            TableId: "tblEmployeAuthentication",
            IsWinClose: true
        };
        $.icsSave(obj);
        $("#txtCardNo").val("");
    });

    $("#btnDeleteAuthentication").click(function () {

        var oEmployeeAuthentication= $('#tblEmployeAuthentication').datagrid('getSelected');
        if(oEmployeeAuthentication==null || oEmployeeAuthentication.EmployeeAuthenticationID<=0)
        {
            alert("Please select at least one item!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return ;

        var SelectedRowIndex=$('#tblEmployeAuthentication').datagrid('getRowIndex',oEmployeeAuthentication);

        if (oEmployeeAuthentication.EmployeeAuthenticationID > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/Employee/EmployeeAuthenticationDelete",
                traditional: true,
                data:  JSON.stringify(oEmployeeAuthentication),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    oEmployeeAuthentication = jQuery.parseJSON(data);
                    if (oEmployeeAuthentication.ErrorMessage == null)
                    {
                        alert("Delete sucessfully");
                        $('#tblEmployeAuthentication').datagrid('deleteRow',SelectedRowIndex);
                    }
                    else
                    {
                        alert(oEmployeeAuthentication.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    });

    $("#btnActiveAuthentication").click(function () {

        var oEmployeeAuthentication= $('#tblEmployeAuthentication').datagrid('getSelected');
        if(oEmployeeAuthentication==null || oEmployeeAuthentication.EmployeeAuthenticationID<=0)
        {
            alert("Please select at least one item!");
            return false;
        }

        oEmployeeAuthentication.IsActive=(!oEmployeeAuthentication.IsActive);
        var SelectedRowIndex=$('#tblEmployeAuthentication').datagrid('getRowIndex',oEmployeeAuthentication);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/Employee/EmployeeAuthenticationIU",
            traditional: true,
            data:  JSON.stringify(oEmployeeAuthentication),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                oEmployeeAuthentication = jQuery.parseJSON(data);
                if (oEmployeeAuthentication.ErrorMessage=="") {
                    $('#tblEmployeAuthentication').datagrid('updateRow',{index: SelectedRowIndex,	row: oEmployeeAuthentication});
                }
                else {
                    alert(oEmployeeAuthentication.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    function AutoEmployeeAuthentication()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }

        var oEmployeeAuthentication={
            EmployeeAuthenticationID : 0,
            EmployeeID : _oEmployee.EmployeeID,
            CardNo :''
            //Password: $("#txtPassword").val(),
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/Employee/EmployeeAuthenticationIU",
            traditional: true,
            data:  JSON.stringify(oEmployeeAuthentication),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oEmployeeAuthentication = jQuery.parseJSON(data);
                if (oEmployeeAuthentication.EmployeeAuthenticationID>0) {
                    alert("Data Saved sucessfully");
                    $('#tblEmployeAuthentication').datagrid('appendRow',oEmployeeAuthentication);
                    $('#tblEmployeAuthentication').datagrid('selectRow', nIndex);
                }
                else {
                    alert(oEmployeeAuthentication.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    // region Picker
    $("#AttSchemePickClose").click(function () {
        $("#winAttendanceScheme").icsWindow('close');
    });

    $("#DRPPickClose").click(function () {
        $("#winDRP").icsWindow('close');
    });

    $('#txtAttScheme').keypress(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        var sASName = "";
        var sASName = $("#txtAttScheme").val();

        if (code == 13)//Enter key-13
        {
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/AttendanceScheme/AttSchemePick",
                traditional: true,
                data: JSON.stringify({ sASName: sASName }),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oAttendanceSchemes = jQuery.parseJSON(data);
                    if (oAttendanceSchemes.length > 0 && oAttendanceSchemes[0].ErrorMessage == "") {

                        $("#winAttendanceScheme").icsWindow("open", " Attendance Scheme");
                        DynamicRefreshList(oAttendanceSchemes, "tblAttendanceScheme");
                        //data = oAttendanceSchemes;
                        //data = { "total": "" + data.length + "", "rows": data };
                        //$('#tblAttendanceScheme').datagrid('loadData', data);
                        $('#tblAttendanceScheme').datagrid('selectRow', 0);
                        $('#focusAttendanceScheme').focus();
                    }
                    else {
                        alert('Data Not Found!')
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        }
    });

    $("#btnAttScheme").click(function () {
        var sASName = "";
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceScheme/AttSchemePick",
            traditional: true,
            data: JSON.stringify({ sASName: sASName }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oAttendanceSchemes = jQuery.parseJSON(data);
                if (oAttendanceSchemes.length > 0 && oAttendanceSchemes[0].ErrorMessage == "") {

                    $("#winAttendanceScheme").icsWindow("open", " Attendance Scheme");
                    DynamicRefreshList(oAttendanceSchemes, "tblAttendanceScheme");
                    $('#tblAttendanceScheme').datagrid('selectRow', 0);
                    $('#focusAttendanceScheme').focus();
                }
                else {
                    alert('Data Not Found!')
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#winAttendanceScheme").on("keydown", function (e) {

        var oAttendanceScheme = $('#tblAttendanceScheme').datagrid('getSelected');
        var nIndex = $('#tblAttendanceScheme').datagrid('getRowIndex', oAttendanceScheme);
        if (e.which == 38)//up arrow=38
        {
            if (nIndex <= 0) {
                $('#tblAttendanceScheme').datagrid('selectRow', 0);
            }
            else {
                $('#tblAttendanceScheme').datagrid('selectRow', nIndex - 1);
            }
            $('#txtAttScheme').blur();
        }
        if (e.which == 40)//down arrow=40
        {
            var oCurrentList = $('#tblAttendanceScheme').datagrid('getRows');
            if (nIndex >= oCurrentList.length - 1) {
                $('#tblAttendanceScheme').datagrid('selectRow', oCurrentList.length - 1);
            }
            else {
                $('#tblAttendanceScheme').datagrid('selectRow', nIndex + 1);
            }
            $('#txtAttScheme').blur();
        }
        if (e.which == 13)//enter=13
        {

            var oSelectedAttendanceScheme = $('#tblAttendanceScheme').datagrid('getSelected');
            if (oSelectedAttendanceScheme == null) {
                alert("Please select an Contarctor!");
                return;
            }
            $('#txtAttScheme').val(oSelectedAttendanceScheme.Name);
            _nAttSchemeID = oSelectedAttendanceScheme.AttendanceSchemeID;
            GetRosterPlanDetail(oSelectedAttendanceScheme.RosterPlanID);
            $("#tblAttendanceScheme").icsWindow('close');
        }
        if (e.which == 27)//escape=27
        {

            $("#tblAttendanceScheme").icsWindow('close');
            _nAttSchemeID = 0;
        }
    });

    $("#AttSchemePickoK").click(function () {
        var oSelectedAttendanceScheme = $('#tblAttendanceScheme').datagrid('getSelected');
        if (oSelectedAttendanceScheme == null) {
            alert("Please select an Contarctor!");
            return;
        }
        $('#txtAttScheme').val(oSelectedAttendanceScheme.Name);
        _nAttSchemeID = oSelectedAttendanceScheme.AttendanceSchemeID;
        GetRosterPlanDetail(oSelectedAttendanceScheme.RosterPlanID);
        $("#tblAttendanceScheme").icsWindow('close');
    });

    $('#txtDepartmentRequirementPolicy').keypress(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        var sDRPName = "";
        sDRPName = $("#txtDepartmentRequirementPolicy").val();

        if (code == 13)//Enter key-13
        {
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/DepartmentRequirementPolicy/DRPPick",
                traditional: true,
                data: JSON.stringify({ sDRPName: sDRPName }),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oDRPs = jQuery.parseJSON(data);
                    if (oDRPs.length > 0 && oDRPs[0].ErrorMessage == "") {

                        $("#winDRP").icsWindow("open", " DRP List");
                        DynamicRefreshList(oDRPs, "tblDepartmentRequirementPolicy");
                        //data = oDRPs;
                        //data = { "total": "" + data.length + "", "rows": data };
                        //$('#tblDepartmentRequirementPolicy').datagrid('loadData', data);
                        $('#tblDepartmentRequirementPolicy').datagrid('selectRow', 0);
                        $('#focusDRP').focus();
                    }
                    else {
                        alert('Data Not Found!')
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        }
    });

    $("#btnDRP").click(function () {
        var sDRPName = "";
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/DepartmentRequirementPolicy/DRPPick",
            traditional: true,
            data: JSON.stringify({ sDRPName: sDRPName }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oDRPs = jQuery.parseJSON(data);
                if (oDRPs.length > 0 && oDRPs[0].ErrorMessage == "") {

                    $("#winDRP").icsWindow("open", " DRP List");
                    DynamicRefreshList(oDRPs, "tblDepartmentRequirementPolicy");
                    $('#tblDepartmentRequirementPolicy').datagrid('selectRow', 0);
                    $('#focusDRP').focus();
                }
                else {
                    alert('Data Not Found!')
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#winDRP").on("keydown", function (e) {

        var oDepartmentRequirementPolicy = $('#tblDepartmentRequirementPolicy').datagrid('getSelected');
        var nIndex = $('#tblDepartmentRequirementPolicy').datagrid('getRowIndex', oDepartmentRequirementPolicy);
        if (e.which == 38)//up arrow=38
        {
            if (nIndex <= 0) {
                $('#tblDepartmentRequirementPolicy').datagrid('selectRow', 0);
            }
            else {
                $('#tblDepartmentRequirementPolicy').datagrid('selectRow', nIndex - 1);
            }
            $('#txtDepartmentRequirementPolicy').blur();
        }
        if (e.which == 40)//down arrow=40
        {
            var oCurrentList = $('#tblDepartmentRequirementPolicy').datagrid('getRows');
            if (nIndex >= oCurrentList.length - 1) {
                $('#tblDepartmentRequirementPolicy').datagrid('selectRow', oCurrentList.length - 1);
            }
            else {
                $('#tblDepartmentRequirementPolicy').datagrid('selectRow', nIndex + 1);
            }
            $('#txtDepartmentRequirementPolicy').blur();
        }
        if (e.which == 13)//enter=13
        {
            //;
            var oSelectedDepartmentRequirementPolicy = $('#tblDepartmentRequirementPolicy').datagrid('getSelected');
            if (oSelectedDepartmentRequirementPolicy == null) {
                alert("Please select an Contarctor!");
                return;
            }
            $('#txtDepartmentRequirementPolicy').val(oSelectedDepartmentRequirementPolicy.DepartmentName);
            //$('#txtBusinessUnit').val(oSelectedDepartmentRequirementPolicy.);

            _nDRPID = oSelectedDepartmentRequirementPolicy.DepartmentRequirementPolicyID;
            GetDesignation(oSelectedDepartmentRequirementPolicy.LocationID, oSelectedDepartmentRequirementPolicy.DepartmentID);
            //GetEmpCode(_nDRPID,0,'2 Aug 2015',1);
            $("#tblDepartmentRequirementPolicy").icsWindow('close');
        }
        if (e.which == 27)//escape=27
        {
            //;
            $("#tblDepartmentRequirementPolicy").icsWindow('close');
            _nDRPID = 0;
        }
    });

    $("#DRPPickoK").click(function () {
        debugger;
        var oSelectedDepartmentRequirementPolicy = $('#tblDepartmentRequirementPolicy').datagrid('getSelected');
        if (oSelectedDepartmentRequirementPolicy == null) {
            alert("Please select an Contarctor!");
            return;
        }
        $('#txtDepartmentRequirementPolicy').val(oSelectedDepartmentRequirementPolicy.DepartmentName);
        $('#txtBusinessUnit').val(oSelectedDepartmentRequirementPolicy.BUName);

        _nDRPID = oSelectedDepartmentRequirementPolicy.DepartmentRequirementPolicyID;
        GetDesignation(oSelectedDepartmentRequirementPolicy.LocationID, oSelectedDepartmentRequirementPolicy.DepartmentID);
        //GetEmpCode(_nDRPID,0,'2 Aug 2015',1);
        $("#tblDepartmentRequirementPolicy").icsWindow('close');
    });

    //start Date Picker

    function SetDateTime()
    {
        var oDate=new Date();
        /*---------------------------------------- Start Set Month-------------------------------------------*/
        var sMonth="";
        var oMonths=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
        sMonth +="<option value='0'>"+'Month'+"</option>";
        for(var i=0; i<oMonths.length; i++)
        {
            sMonth += "<option value='" +(parseInt(i)+1)+"'>" + oMonths[i] +"</option>";
        }
        $('#cboMonth').html(sMonth);
        $('#cboEndMonth').html(sMonth);
        /*---------------------------------------- End Set Month-------------------------------------------*/


        /*---------------------------------------- Start Set Date-------------------------------------------*/
        var sDay ="<option value='0'>"+'Day'+"</option>";
        $('#cboDay').html(sDay);
        $('#cboEndDay').html(sDay);
        /*---------------------------------------- End Set Date-------------------------------------------*/
    }

    $('#cboMonth').change(function(e)
    {
        var nMonth=$('#cboMonth').val();
        if(nMonth>0)
        {
            $('#cboDay').html(SetDateEvent(nMonth));
        }

    });

    $('#cboEndMonth').change(function(e)
    {
        var nMonth=$('#cboEndMonth').val();
        if(nMonth>0)
        {
            $('#cboEndDay').html(SetDateEvent(nMonth));
        }

    });

    function SetDateEvent(nMonth)
    {

        var oDate=new Date();
        var sDay="";
        if( parseInt(nMonth)>0)
        {
            //var nDay= new Date(parseInt(nYear), parseInt(nMonth), 0).getDate();
            var nDay=0;
            if(nMonth==1 || nMonth == 3 || nMonth == 5 || nMonth == 7 || nMonth == 8 || nMonth == 10 || nMonth == 12)
            {
                nDay = 31;
            }
            else if(nMonth==4 || nMonth == 6 || nMonth == 9 || nMonth == 11)
            {
                nDay = 30;
            }
            else if(nMonth == 2)
            {
                nDay = 29;
            }
            sDay +="<option value='0'>"+'Day'+"</option>";
            for(var i=1; i<=parseInt(nDay); i++)
            {
                if(i<10)
                {
                    sDay += "<option value='" +i+"'>" + '0'+i +"</option>";
                }
                else
                {
                    sDay += "<option value='" +i+"'>" + i +"</option>";
                }
            }
        }
        return sDay;
    }

    function SetStartTime(oDate)
    {

        //var nyear=oDate.getFullYear();
        var nmonth=oDate.getMonth()+1;
        var nday=oDate.getDate();
        //$('#cboYear').val(nyear);
        $('#cboMonth').val(nmonth);
        $('#cboDay').html(SetDateEvent(nmonth));
        $('#cboDay').val(nday);
    }

    function SetEndTime(oDate)
    {

        //var nyear=oDate.getFullYear();
        var nmonth=oDate.getMonth()+1;
        var nday=oDate.getDate();
        //$('#cboEndYear').val(nyear);
        $('#cboEndMonth').val(nmonth);
        $('#cboEndDay').html(SetDateEvent(nmonth));
        $('#cboEndDay').val(nday);

    }

    function GenerateStartTimeInString()
    {
        var sDate=  $('#cboMonth').val() +'-'+ $('#cboDay').val();
        return sDate;
    }

    function GenerateEndTimeInString()
    {
        var sDate=  $('#cboEndMonth').val() +'-'+ $('#cboEndDay').val() ;
        return sDate;
    }

    function ValidationOfStartTime()
    {
        if($('#cboMonth').val()==0)
        {
            alert("Please select a month.");
            document.getElementById('cboMonth').focus();
            return false;
        }
        if($('#cboDay').val()==0)
        {
            alert("Please select a day.");
            document.getElementById('cboDay').focus();
            return false;
        }
        return true;
    }

    function ValidationOfEndTime()
    {

        if($('#cboEndMonth').val()==0)
        {
            alert("Please select a month.");
            document.getElementById('cboEndMonth').focus();
            return false;
        }
        if($('#cboEndDay').val()==0)
        {
            alert("Please select a day.");
            document.getElementById('cboEndDay').focus();
            return false;
        }
        return true;
    }

    $('#cboDateType').change(function ()
    {

        var nDateType = $("#cboDateType").val();
        if (nDateType == 0) {
            $("#regionDateTo").hide();
            $("#regionDateFrom").hide();
        }
        if (nDateType == 1 )
        {
            $("#regionDateTo").hide();
            $("#regionDateFrom").show();

        }
        if (nDateType == 2 )
        {
            $("#regionDateTo").show();
            $("#regionDateFrom").show();
        }
    });

    //end date picker

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            document.getElementById("lblRange1").style.display = '';
        }
        else
        {
            document.getElementById("lblRange1").style.display = 'none';
        }
    });

    // endregion Picker

    // start get amount
    $('#btnCalculateHeadWiseSalaryAmount').click(function()
    {
        debugger;
        var sGrossAmount= $("#txtGrossSalary").val();
        var sCompGrossAmount= $("#txtGrossSalary_Comp").val();

        if(sGrossAmount<=0 || sCompGrossAmount<=0)
        {
            alert("please enter both gross and comp. gross !");
            return;
        }

        if(_nSSGradeID>0 ||(_oSSGrade!=null && _oSSGrade.SSGradeID>0)){

            if(_oSSGrade!=null && _oSSGrade.SSGradeID>0){

                if(!SalarySchemeGradeAmountValidation(_oSSGrade)) return false;

                CalculateHeadWiseSalaryAmount(_oSalaryStructureDetails);
                LoadSalaryStructureDetail(_oSalaryStructureDetails);
            }
            else{
                var oSSGrade = { SSGradeID: _nSSGradeID};
                var obj = {
                    BaseAddress: _sBaseAddress,
                    Object: oSSGrade,
                    ControllerName: "SalarySchemeGrade",
                    ActionName: "Get",
                    IsWinClose: false
                };
                $.icsDataGet(obj, function (response) {

                    if (response.status && response.obj!=null) {
                        if (response.obj.SSGradeID > 0) {
                            _oSSGrade=response.obj;
                            if(!SalarySchemeGradeAmountValidation(response.obj)) return false;
                            CalculateHeadWiseSalaryAmount(_oSalaryStructureDetails);
                            LoadSalaryStructureDetail(_oSalaryStructureDetails);

                        }else{
                            alert("Salary scheme grade mismatch.");  return false;
                        }
                    }
                });
            }

        }
        else{
            CalculateHeadWiseSalaryAmount(_oSalaryStructureDetails);
            LoadSalaryStructureDetail(_oSalaryStructureDetails);
        }

    });

    function CalculateHeadWiseSalaryAmount(oSalaryStructureDetails)
    {
        debugger;
        var oTempSalaryStructureDetails=[];
        for(var i=0; i<oSalaryStructureDetails.length; i++)
        {
            if(oSalaryStructureDetails[i].SalarySchemeDetailCalculations!=null){
                var nAmount = GetAmount(oSalaryStructureDetails[i].SalarySchemeDetailCalculations);
                var nCompAmount = GetAmount_Comp(oSalaryStructureDetails[i].SalarySchemeDetailCalculations);
                if(parseFloat(nAmount) < 0 || parseFloat(nCompAmount) < 0) {
                    alert("Minus(-) value not allowed");
                    if(oSalaryStructureDetails!=null)
                    {
                        for(var i = 0 ; i <oSalaryStructureDetails.length ; i++)
                        {
                            oSalaryStructureDetails[i].Amount = 0;
                            oSalaryStructureDetails[i].CompAmount = 0;
                        }
                    }
                    else
                    {
                        oSalaryStructureDetails=[];
                    }

                    //$("#txtGrossSalary").numberbox('setValue',"");
                    //$("#txtGrossSalary_Comp").numberbox('setValue',"");
                    $("#txtGrossSalary").val(0);
                    $("#txtGrossSalary_Comp").val(0);
                    $("#txtCash").numberbox('setValue',"");

                    LoadSalaryStructureDetail(oSalaryStructureDetails);
                    return;
                }
                if(parseFloat(nAmount)>0)
                {
                    SetSalaryHeadAmount(parseInt(oSalaryStructureDetails[i].SalaryHeadID), nAmount,nCompAmount);
                }
                else
                {
                    oTempSalaryStructureDetails.push(oSalaryStructureDetails[i]);
                }
            }

        }
        if(oTempSalaryStructureDetails.length>0)
        {
            CalculateHeadWiseSalaryAmount(oTempSalaryStructureDetails);
        }
    }

    function GetAmount(oSchemeDetailCalculations)
    {
        var sEquation="";
        var sGrossAmount= $("#txtGrossSalary").val();

        for(var i=0; i<oSchemeDetailCalculations.length;i++)
        {
            if(parseInt(oSchemeDetailCalculations[i].ValueOperatorInt)==2)//Operator=2
            {
                if(parseInt(oSchemeDetailCalculations[i].OperatorInt)!=7)
                {
                    sEquation=sEquation+oSchemeDetailCalculations[i].OperatorInString;
                }
                else
                {
                    if((i+1)>=oSchemeDetailCalculations.length)
                    {
                        //Must be a head exists
                        alert('Invalid equation!\nPlease check your equation!')
                        return;
                    }
                    if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==1)//Gross = 1
                    {
                        sEquation=sEquation+" ("+sGrossAmount +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==2)//SalaryItem = 2
                    {
                        var nSalaryHeadAmount = GetSalaryHeadAmount(oSchemeDetailCalculations[i+1].SalaryHeadID);
                        if(parseFloat(nSalaryHeadAmount)<=0){ return 0.00; }
                        sEquation=sEquation+" ("+parseFloat(nSalaryHeadAmount).toFixed(2) +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==3)//Fixed = 3
                    {
                        sEquation=sEquation+" ("+oSchemeDetailCalculations[i+1].FixedValue +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    i=i+1;
                }
            }
            else
            {
                if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==1)//Gross = 1
                {
                    sEquation=sEquation+" "+sGrossAmount;
                }
                else if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==2)//SalaryItem = 2
                {
                    var nSalaryHeadAmount = GetSalaryHeadAmount(oSchemeDetailCalculations[i].SalaryHeadID);
                    if(parseFloat(nSalaryHeadAmount)<=0){ return 0.00; }
                    sEquation=sEquation+" "+parseFloat(nSalaryHeadAmount).toFixed(2)+" ";
                }
                else if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==3)//Fixed = 3
                {
                    sEquation=sEquation+" "+oSchemeDetailCalculations[i].FixedValue;
                }
            }
        }
        return parseFloat(eval(sEquation));
    }

    function GetAmount_Comp(oSchemeDetailCalculations)
    {
        var sEquation="";
        var sGrossAmount= $("#txtGrossSalary_Comp").val();

        for(var i=0; i<oSchemeDetailCalculations.length;i++)
        {
            if(parseInt(oSchemeDetailCalculations[i].ValueOperatorInt)==2)//Operator=2
            {
                if(parseInt(oSchemeDetailCalculations[i].OperatorInt)!=7)
                {
                    sEquation=sEquation+oSchemeDetailCalculations[i].OperatorInString;
                }
                else
                {
                    if((i+1)>=oSchemeDetailCalculations.length)
                    {
                        //Must be a head exists
                        alert('Invalid equation!\nPlease check your equation!')
                        return;
                    }
                    if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==1)//Gross = 1
                    {
                        sEquation=sEquation+" ("+sGrossAmount +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==2)//SalaryItem = 2
                    {
                        var nSalaryHeadAmount = GetSalaryHeadAmountComp(oSchemeDetailCalculations[i+1].SalaryHeadID);
                        if(parseFloat(nSalaryHeadAmount)<=0){ return 0.00; }
                        sEquation=sEquation+" ("+parseFloat(nSalaryHeadAmount).toFixed(2) +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==3)//Fixed = 3
                    {
                        sEquation=sEquation+" ("+oSchemeDetailCalculations[i+1].FixedValue +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    i=i+1;
                }
            }
            else
            {
                if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==1)//Gross = 1
                {
                    sEquation=sEquation+" "+sGrossAmount;
                }
                else if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==2)//SalaryItem = 2
                {
                    var nSalaryHeadAmount = GetSalaryHeadAmountComp(oSchemeDetailCalculations[i].SalaryHeadID);
                    if(parseFloat(nSalaryHeadAmount)<=0){ return 0.00; }
                    sEquation=sEquation+" "+parseFloat(nSalaryHeadAmount).toFixed(2)+" ";
                }
                else if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==3)//Fixed = 3
                {
                    sEquation=sEquation+" "+oSchemeDetailCalculations[i].FixedValue;
                }
            }
        }
        return parseFloat(eval(sEquation));
    }

    function GetSalaryHeadAmount(nSalaryHeadID){
        for(var i=0; i<_oSalaryStructureDetails.length; i++)
        {
            if(parseInt(_oSalaryStructureDetails[i].SalaryHeadID)===parseInt(nSalaryHeadID))
            {
                return  parseFloat(_oSalaryStructureDetails[i].Amount);
            }
        }
        return parseFloat(0.00);
    }

    function GetSalaryHeadAmountComp(nSalaryHeadID){
        for(var i=0; i<_oSalaryStructureDetails.length; i++)
        {
            if(parseInt(_oSalaryStructureDetails[i].SalaryHeadID)===parseInt(nSalaryHeadID))
            {
                return  parseFloat(_oSalaryStructureDetails[i].CompAmount);
            }
        }
        return parseFloat(0.00);
    }

    function SetSalaryHeadAmount(nSalaryHeadID, nAmount, nCompAmount){
        for(var i=0; i<_oSalaryStructureDetails.length; i++)
        {
            if(parseInt(_oSalaryStructureDetails[i].SalaryHeadID)===parseInt(nSalaryHeadID))
            {
                _oSalaryStructureDetails[i].Amount = parseFloat(nAmount);
                if(_oSalaryStructureDetails[i].SalaryType == 1 || _oSalaryStructureDetails[i].SalaryType == 3)
                {_oSalaryStructureDetails[i].CompAmount = parseFloat(nCompAmount);}

                break;
            }
        }
    }

    //Image start

    $('#btnPhotoClear').click(function (e)
    {
        var oldInput = document.getElementById("filePhoto");
        var newInput = document.createElement("input");

        newInput.type = "file";
        newInput.id = oldInput.id;
        newInput.name = oldInput.name;
        newInput.className = oldInput.className;
        newInput.style.cssText = oldInput.style.cssText;
        newInput.onchange = oldInput.onchange;
        oldInput.parentNode.replaceChild(newInput, oldInput);
        document.getElementById('imgPhotoIcon').src = '#';

        if (_oEmployee.EmployeeID > 0) {
            var oEmp = {EmployeeID:_oEmployee.EmployeeID};
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress +"/Employee/DeleteImage",
                traditional: true,
                data: JSON.stringify(oEmp),
                contentType: "application/json; charset=utf-8",



                //type: "POST",
                //dataType: "json",
                //url: _sBaseAddress + "/Employee/DeleteImage",
                //traditional: true,
                //data: JSON.stringify({oEmp:_oEmployee}),
                //contentType: "application/json; charset=utf-8",
                success: function (data) {

                    var sFeedBack = jQuery.parseJSON(data);
                },
                error: function (xhr, status, error) {
                    alert(error);
                }

            });
        }
    });

    function readPhotoURL(input)
    {

        if(!ImageValidation(input)) return;

        if (input.files && input.files[0])
        {
            var reader = new FileReader();
            reader.onload = function (e)
            {
                $('#imgPhotoIcon')
                .attr('src', e.target.result)
                .width(150)
                .height(150);
            };
            reader.readAsDataURL(input.files[0]);
        }

    }

    function ImageValidation(input)
    {

        var imgbytes = input.files[0].size;
        var imgkbytes = Math.round(parseInt(imgbytes)/1024);

        if(imgkbytes>40)
        {

            alert("Image size should not be more than 40 kb.");
            $('#imgPhotoIcon').attr('src', null).width(170).height(100);
            $("#filePhoto")[0].value=null;
            return false;

        }
        else if(_oEmployee==null || _oEmployee.EmployeeID<=0){
            alert("Please save employee information first.");
            $('#imgPhotoIcon').attr('src', null).width(170).height(100);
            $("#filePhoto")[0].value=null;
            return  false;
        }

        return true;

    }
    $('#subEmpSave').click(function (e)
    {
        if(_oEmployee==null || _oEmployee.EmployeeID<=0){
            alert("Please save employee information first."); return false;
        }
        $("#txtEmployeeID").val(_oEmployee.EmployeeID);
    });

    //Image end
    $('#btnAddAllowance').click(function (e)
    {
        debugger;

        var SalaryHeadId=  $("#cboAllowanceSalaryHead").val();
        var SalaryName=  $("#cboAllowanceSalaryHead option:selected").text();
        var nAmount =  $("#txtAllowanceSalaryHeadAmount").val();
        var nCompAmount =  $("#txtAllowanceSalaryHeadAmount_Comp").val();
        if(nAmount== null || nAmount<=0){alert("Please enter amount!");return;}
        if(nCompAmount== null || nCompAmount<=0){alert("Please comp enter amount!");return;}

        var oSalaryHeads= (_oEmployee!=null && _oEmployee.SalaryHeads.length>0)?_oEmployee.SalaryHeads:[];
        var sSalaryHeadTypeInStr="";
        var nSalaryHeadType=0;

        if(oSalaryHeads.length>0){

            for(var i=0;i<oSalaryHeads.length;i++){
                if(oSalaryHeads[i].SalaryHeadID==$("#cboAllowanceSalaryHead").val()){
                    sSalaryHeadTypeInStr=oSalaryHeads[i].SalaryHeadTypeInString;
                    nSalaryHeadType=oSalaryHeads[i].SalaryHeadType;
                    break;
                }
            }
        }
        var oAllowances=$('#tblSalaryStructureDetailAllowance').datagrid('getRows');

        if(oAllowances.length>0){
            for(var i=0;i<oAllowances.length;i++){
                if(oAllowances[i].SalaryHeadID==$("#cboAllowanceSalaryHead").val()){
                    alert("This allowance is already given. Please try for another.");
                    return;
                }
            }
        }

        var oSSDetailAllowance = {
            SalaryHeadID : SalaryHeadId,
            SalaryHeadName :SalaryName,
            AllowanceType:sSalaryHeadTypeInStr,
            SalaryHeadType:nSalaryHeadType,
            Amount :nAmount,
            CompAmount :nCompAmount,
            Calculation : nAmount
        }

        if(_oEmployee.EmployeeSalaryStructure == null) {
            alert("No Salary structure found. Set salary structure first.");
            return;
        }

        
        $("#cboAllowanceSalaryHead").val(0);

        $('#txtAllowanceSalaryHeadAmount').numberbox('setValue', 0);
        $('#txtAllowanceSalaryHeadAmount_Comp').numberbox('setValue', 0);

        var oAllowanceList =[];
        oAllowanceList.push(oSSDetailAllowance);
        var oSSDetails = $('#tblSalaryStructureDetailAllowance').datagrid('getRows');
        var nIndex = oSSDetails.length;
        
        RefreshListForSalaryHeadOfAllowanceType($('#tblSalaryStructureDetailAllowance').datagrid('getRows'));

        var oSSD= {
            ESSSID:0,
            ESSID:_oEmployee.EmployeeSalaryStructure.ESSID,
            SalaryHeadID:SalaryHeadId,
            Amount:nAmount,
            CompAmount:nCompAmount
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EmployeeSalaryStructure/EmployeeSalaryStructureDetail_IU",
            traditional: true,
            data: JSON.stringify(oSSD),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                debugger;
                var oESSD = jQuery.parseJSON(data);
                if (oESSD.ESSSID > 0) {
                    alert("Saved sucessfully");
                    $('#tblSalaryStructureDetailAllowance').datagrid('appendRow', oESSD);
                    $('#tblSalaryStructureDetailAllowance').datagrid('selectRow', nIndex);
                    _oSalaryStructureDetails.push(oSSDetailAllowance);
                    var oAllowances = $('#tblSalaryStructureDetailAllowance').datagrid('getRows');
                    RefreshListForSalaryHeadOfAllowanceType(oAllowances);

                }
                else 
                {
                    alert(oESSD.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $('#btnRemoveAllowance').click(function (e)
    {        
        var oSSDetailAllowance = $('#tblSalaryStructureDetailAllowance').datagrid('getSelected');
        if (oSSDetailAllowance == null || oSSDetailAllowance.SalaryHeadId <= 0)
        {
            alert("Please select an item from the list!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblSalaryStructureDetailAllowance').datagrid('getRowIndex', oSSDetailAllowance);

        if(oSSDetailAllowance.ESSSID>0)
        {
            var oSSD = {
                ESSSID:oSSDetailAllowance.ESSSID
            };


            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+  "/EmployeeSalaryStructure/EmployeeSalaryStructureDetail_Delete",
                data: JSON.stringify(oSSD),
                contentType: "application/json; charset=utf-8",
                success: function (data) {                    
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $('#tblSalaryStructureDetailAllowance').datagrid('deleteRow', SelectedRowIndex);
                        var oAllowances = $('#tblSalaryStructureDetailAllowance').datagrid('getRows');
                        RefreshListForSalaryHeadOfAllowanceType(oAllowances);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    });

    function Nationality()
    {
        var s= "<option value=afghan>Afghan</option>"+
                "<option value=albanian>Albanian</option>"+
                "<option value=algerian>Algerian</option>"+
                "<option value=american>American</option>"+
                "<option value=andorran>Andorran</option>"+
                "<option value=angolan>Angolan</option>"+
                "<option value=antiguans>Antiguans</option>"+
                "<option value=argentinean>Argentinean</option>"+
                "<option value=armenian>Armenian</option>"+
                "<option value=australian>Australian</option>"+
                "<option value=austrian>Austrian</option>"+
                "<option value=azerbaijani>Azerbaijani</option>"+
                "<option value=bahamian>Bahamian</option>"+
                "<option value=bahraini>Bahraini</option>"+
                "<option value=bangladeshi>Bangladeshi</option>"+
                "<option value=barbadian>Barbadian</option>"+
                "<option value=barbudans>Barbudans</option>"+
                "<option value=batswana>Batswana</option>"+
                "<option value=belarusian>Belarusian</option>"+
                "<option value=belgian>Belgian</option>"+
                "<option value=belizean>Belizean</option>"+
                "<option value=beninese>Beninese</option>"+
                "<option value=bhutanese>Bhutanese</option>"+
                "<option value=bolivian>Bolivian</option>"+
                "<option value=bosnian>Bosnian</option>"+
                "<option value=brazilian>Brazilian</option>"+
                "<option value=british>British</option>"+
                "<option value=bruneian>Bruneian</option>"+
                "<option value=bulgarian>Bulgarian</option>"+
                "<option value=burkinabe>Burkinabe</option>"+
                "<option value=burmese>Burmese</option>"+
                "<option value=burundian>Burundian</option>"+
                "<option value=cambodian>Cambodian</option>"+
                "<option value=cameroonian>Cameroonian</option>"+
                "<option value=canadian>Canadian</option>"+
                "<option value=cape verdean>Cape Verdean</option>"+
                "<option value=central african>Central African</option>"+
                "<option value=chadian>Chadian</option>"+
                "<option value=chilean>Chilean</option>"+
                "<option value=chinese>Chinese</option>"+
                "<option value=colombian>Colombian</option>"+
                "<option value=comoran>Comoran</option>"+
                "<option value=congolese>Congolese</option>"+
                "<option value=costa rican>Costa Rican</option>"+
                "<option value=croatian>Croatian</option>"+
                "<option value=cuban>Cuban</option>"+
                "<option value=cypriot>Cypriot</option>"+
                "<option value=czech>Czech</option>"+
                "<option value=danish>Danish</option>"+
                "<option value=djibouti>Djibouti</option>"+
                "<option value=dominican>Dominican</option>"+
                "<option value=dutch>Dutch</option>"+
                "<option value=east timorese>East Timorese</option>"+
                "<option value=ecuadorean>Ecuadorean</option>"+
                "<option value=egyptian>Egyptian</option>"+
                "<option value=emirian>Emirian</option>"+
                "<option value=equatorial guinean>Equatorial Guinean</option>"+
                "<option value=eritrean>Eritrean</option>"+
                "<option value=estonian>Estonian</option>"+
                "<option value=ethiopian>Ethiopian</option>"+
                "<option value=fijian>Fijian</option>"+
                "<option value=filipino>Filipino</option>"+
                "<option value=finnish>Finnish</option>"+
                "<option value=french>French</option>"+
                "<option value=gabonese>Gabonese</option>"+
                "<option value=gambian>Gambian</option>"+
                "<option value=georgian>Georgian</option>"+
                "<option value=german>German</option>"+
                "<option value=ghanaian>Ghanaian</option>"+
                "<option value=greek>Greek</option>"+
                "<option value=grenadian>Grenadian</option>"+
                "<option value=guatemalan>Guatemalan</option>"+
                "<option value=guinea-bissauan>Guinea-Bissauan</option>"+
                "<option value=guinean>Guinean</option>"+
                "<option value=guyanese>Guyanese</option>"+
                "<option value=haitian>Haitian</option>"+
                "<option value=herzegovinian>Herzegovinian</option>"+
                "<option value=honduran>Honduran</option>"+
                "<option value=hungarian>Hungarian</option>"+
                "<option value=icelander>Icelander</option>"+
                "<option value=indian>Indian</option>"+
                "<option value=indonesian>Indonesian</option>"+
                "<option value=iranian>Iranian</option>"+
                "<option value=iraqi>Iraqi</option>"+
                "<option value=irish>Irish</option>"+
                "<option value=israeli>Israeli</option>"+
                "<option value=italian>Italian</option>"+
                "<option value=ivorian>Ivorian</option>"+
                "<option value=jamaican>Jamaican</option>"+
                "<option value=japanese>Japanese</option>"+
                "<option value=jordanian>Jordanian</option>"+
                "<option value=kazakhstani>Kazakhstani</option>"+
                "<option value=kenyan>Kenyan</option>"+
                "<option value=kittian and nevisian>Kittian and Nevisian</option>"+
                "<option value=kuwaiti>Kuwaiti</option>"+
                "<option value=kyrgyz>Kyrgyz</option>"+
                "<option value=laotian>Laotian</option>"+
                "<option value=latvian>Latvian</option>"+
                "<option value=lebanese>Lebanese</option>"+
                "<option value=liberian>Liberian</option>"+
                "<option value=libyan>Libyan</option>"+
                "<option value=liechtensteiner>Liechtensteiner</option>"+
                "<option value=lithuanian>Lithuanian</option>"+
                "<option value=luxembourger>Luxembourger</option>"+
                "<option value=macedonian>Macedonian</option>"+
                "<option value=malagasy>Malagasy</option>"+
                "<option value=malawian>Malawian</option>"+
                "<option value=malaysian>Malaysian</option>"+
                "<option value=maldivan>Maldivan</option>"+
                "<option value=malian>Malian</option>"+
                "<option value=maltese>Maltese</option>"+
                "<option value=marshallese>Marshallese</option>"+
                "<option value=mauritanian>Mauritanian</option>"+
                "<option value=mauritian>Mauritian</option>"+
                "<option value=mexican>Mexican</option>"+
                "<option value=micronesian>Micronesian</option>"+
                "<option value=moldovan>Moldovan</option>"+
                "<option value=monacan>Monacan</option>"+
                "<option value=mongolian>Mongolian</option>"+
                "<option value=moroccan>Moroccan</option>"+
                "<option value=mosotho>Mosotho</option>"+
                "<option value=motswana>Motswana</option>"+
                "<option value=mozambican>Mozambican</option>"+
                "<option value=namibian>Namibian</option>"+
                "<option value=nauruan>Nauruan</option>"+
                "<option value=nepalese>Nepalese</option>"+
                "<option value=new zealander>New Zealander</option>"+
                "<option value=ni-vanuatu>Ni-Vanuatu</option>"+
                "<option value=nicaraguan>Nicaraguan</option>"+
                "<option value=nigerien>Nigerien</option>"+
                "<option value=north korean>North Korean</option>"+
                "<option value=northern irish>Northern Irish</option>"+
                "<option value=norwegian>Norwegian</option>"+
                "<option value=omani>Omani</option>"+
                "<option value=pakistani>Pakistani</option>"+
                "<option value=palauan>Palauan</option>"+
                "<option value=panamanian>Panamanian</option>"+
                "<option value=papua new guinean>Papua New Guinean</option>"+
                "<option value=paraguayan>Paraguayan</option>"+
                "<option value=peruvian>Peruvian</option>"+
                "<option value=polish>Polish</option>"+
                "<option value=portuguese>Portuguese</option>"+
                "<option value=qatari>Qatari</option>"+
                "<option value=romanian>Romanian</option>"+
                "<option value=russian>Russian</option>"+
                "<option value=rwandan>Rwandan</option>"+
                "<option value=saint lucian>Saint Lucian</option>"+
                "<option value=salvadoran>Salvadoran</option>"+
                "<option value=samoan>Samoan</option>"+
                "<option value=san marinese>San Marinese</option>"+
                "<option value=sao tomean>Sao Tomean</option>"+
                "<option value=saudi>Saudi</option>"+
                "<option value=scottish>Scottish</option>"+
                "<option value=senegalese>Senegalese</option>"+
                "<option value=serbian>Serbian</option>"+
                "<option value=seychellois>Seychellois</option>"+
                "<option value=sierra leonean>Sierra Leonean</option>"+
                "<option value=singaporean>Singaporean</option>"+
                "<option value=slovakian>Slovakian</option>"+
                "<option value=slovenian>Slovenian</option>"+
                "<option value=solomon islander>Solomon Islander</option>"+
                "<option value=somali>Somali</option>"+
                "<option value=south african>South African</option>"+
                "<option value=south korean>South Korean</option>"+
                "<option value=spanish>Spanish</option>"+
                "<option value=sri lankan>Sri Lankan</option>"+
                "<option value=sudanese>Sudanese</option>"+
                "<option value=surinamer>Surinamer</option>"+
                "<option value=swazi>Swazi</option>"+
                "<option value=swedish>Swedish</option>"+
                "<option value=swiss>Swiss</option>"+
                "<option value=syrian>Syrian</option>"+
                "<option value=taiwanese>Taiwanese</option>"+
                "<option value=tajik>Tajik</option>"+
                "<option value=tanzanian>Tanzanian</option>"+
                "<option value=thai>Thai</option>"+
                "<option value=togolese>Togolese</option>"+
                "<option value=tongan>Tongan</option>"+
                "<option value=trinidadian or tobagonian>Trinidadian or Tobagonian</option>"+
                "<option value=tunisian>Tunisian</option>"+
                "<option value=turkish>Turkish</option>"+
                "<option value=tuvaluan>Tuvaluan</option>"+
                "<option value=ugandan>Ugandan</option>"+
                "<option value=ukrainian>Ukrainian</option>"+
                "<option value=uruguayan>Uruguayan</option>"+
                "<option value=uzbekistani>Uzbekistani</option>"+
                "<option value=venezuelan>Venezuelan</option>"+
                "<option value=vietnamese>Vietnamese</option>"+
                "<option value=welsh>Welsh</option>"+
                "<option value=yemenite>Yemenite</option>"+
                "<option value=zambian>Zambian</option>"+
                "<option value=zimbabwean>Zimbabwean</option>";

        $("#cboNationality").html(s);
        $("#cboNationality").val('bangladeshi');
    }

    $("#btnPickSSGrade").click(function () {
        SalarySchemaGradePicker();
    });

    $("#txtSalarySchemeGrade").keypress(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);

        if (code == 13)//Enter key-13
        {
            SalarySchemaGradePicker();
        }
        if (code == 08)//Backspace
        {
            _oSSGrade=null;
            _nSSGradeID=0;
            $("#txtSalarySchemeGrade").val("");
            //$("#txtGrossSalary").numberbox('setValue',"");
            //$("#txtGrossSalary_Comp").numberbox('setValue',"");
            $("#txtGrossSalary").val(0);
            $("#txtGrossSalary_Comp").val(0);
            SalarySchemeGradeControl(false);
        }
    });

    function SalarySchemaGradePicker()
    {
        $("#winSalarySchemaGrade").icsWindow('open');
        var oSSGrade = {SSGradeID:0}
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/SalarySchemeGrade/GetApproveTree",
            traditional: true,
            data: JSON.stringify({oSSGrade:oSSGrade}),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                var oSSGrade =[];
                oSSGrade = jQuery.parseJSON(data);
                if (oSSGrade.children.length>0) {
                    LoadSalarySchemaGrade(oSSGrade);
                }
                else{
                    LoadSalarySchemaGrade(oSSGrade);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function LoadSalarySchemaGrade(oSSGrade)
    {
        data= [oSSGrade];
        data={"total":""+data.length+"","rows":data};
        $('#tblSalarySchemeGrade').treegrid('loadData',data);
    }

    $("#btnSalarySchemaGradePickerOk").click(function () {
        var oSSGrade = $('#tblSalarySchemeGrade').datagrid('getSelected');
        if(oSSGrade==null || oSSGrade.SSGradeID<=0) { alert("Please select an item from list."); return false; }
        if(oSSGrade.SSGradeID>0 && oSSGrade.children!=null && oSSGrade.children.length>0){
            alert("Please select a child item."); return false;
        }
        if(oSSGrade.SSGradeID>0 && !oSSGrade.IsLastLayer){
            alert("Please select last layer only."); return false;
        }

        _oSSGrade=oSSGrade;
        _nSSGradeID=oSSGrade.SSGradeID;
        SalarySchemeGradeControl(true);
        GetSalaryScheme(oSSGrade);
        $("#txtSalarySchemeGrade").val(oSSGrade.NameWithAmount);
        $("#winwinSalarySchemaGrade").icsWindow('close');
    });

    function GetSalaryScheme(oSSGrade){

        var oSalaryScheme = { SalarySchemeID: oSSGrade.SalarySchemeID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oSalaryScheme,
            ControllerName: "SalaryScheme",
            ActionName: "Get",
            IsWinClose: false
        };
        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.SalarySchemeID > 0) {
                    //$("#txtGrossSalary").numberbox('setValue',"");
                    //$("#txtGrossSalary_Comp").numberbox('setValue',"");
                    $("#txtGrossSalary").val(0);
                    $("#txtGrossSalary_Comp").val(0);
                    bCopyFromOther = false;
                    _oEmployee.EmployeeSalaryStructure= null;
                    var sSchemeName = document.getElementById("txtSalaryScheme");
                    sSchemeName.value = response.obj.Name;
                    sSchemeName.style.color = "blue";
                    sSchemeName.style.fontWeight = "bold";

                    _nSalarySchemeID = response.obj.SalarySchemeID;
                    $("#txtPaymentCycle").val(response.obj.PaymentCycleInString);
                    LoadSalaryHeadGrid(response.obj.SalarySchemeID,"SalaryScheme");
                    LoadStartDay(response.obj.PaymentCycleInString, response.obj.StartDay);

                }
                else { alert(response.obj.ErrorMessage); }
            }
        });
    }

    $("#btnSalarySchemaGradePickerClose").click(function () {
        $("#winSalarySchemaGrade").icsWindow('close');
    });

    function SalarySchemeGradeControl(bValue){

        $('#txtEmployeeName_Copy,#txtSalaryScheme').prop('disabled',bValue);
        if(!bValue){
            DynamicRefreshList([],'tblSalaryStructureDetailBasic');
            DynamicRefreshList([],'tblSalaryStructureDetailAllowance');
            $('#lblBasicTotal,#lblBasicTotal_Comp,#lblAdditionAllowanceTotal,#lblDeductionAllowanceTotal,#lblAllowOverTime').text('0.00');
            $('#tdforchkAllowOverTime,#tdAttendanceDependent').hide();
            $('#txtLateCount,#txtEarlyLeavingCount').text('');
            $('#chkAllowBankAdvice,#chkProductionBase,#chkAllowOverTime,#chkAttendanceDependent').prop('disabled',false);
        }
    }

    function SalarySchemeGradeAmountValidation(oSSGrade){
        //var nAmount= $('#txtGrossSalary').numberbox('getValue');
        var nAmount= $('#txtGrossSalary').val();
        if(nAmount.toString().length>0){
            nAmount = parseFloat(nAmount);
            if(parseFloat(nAmount)<parseFloat(oSSGrade.MinAmount) || parseFloat(nAmount)>parseFloat(oSSGrade.MaxAmount)){
                alert("You can't cross the limit of "+ formatPrice(oSSGrade.MinAmount) + ' - ' + formatPrice(oSSGrade.MaxAmount) );
                return false;
            }
            else{
                return true;
            }
        }
        else{
            alert("No amount found. Amount must be  "+ formatPrice(oSSGrade.MinAmount) + ' - ' + formatPrice(oSSGrade.MaxAmount) );
            return false;
        }
    }

    /**************Employee Nominee Start*************/
    $("#btnNewNominee").click(function () {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        RefreshNominee();
        $("#winEmployeeNominee").icsWindow("open", "Add Nominee for "+_oEmployee.Name+"["+_oEmployee.Code+"]");
    });

    function RefreshNominee()
    {
        $("#txtNomineeName").val("");
        $("#txtNomineeAddress").val("");
        $("#txtNomineeEmail").val("");
        $("#txtNomineeContactNo").val("");
        $("#txtRelation").val("");
        $("#txtPercentage").val("");
        _nEmployeeNomineeID = 0;
    }

    $("#btnEditNominee").click(function () {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oEmployeeNominee= $('#tblEmployeNominee').datagrid('getSelected');
        if(oEmployeeNominee==null || oEmployeeNominee.ENID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        RefreshNominee();
        $("#winEmployeeNominee").icsWindow("open", "Edit Nominee for "+_oEmployee.Name+"["+_oEmployee.Code+"]");
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeNominee,
            ControllerName: "Employee",
            ActionName: "GetEmployeeNominee",
            IsWinClose: false
        };
        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.ENID > 0) {
                    $("#txtNomineeName").val(response.obj.Name);
                    $("#txtNomineeAddress").val(response.obj.Address);
                    $("#txtNomineeContactNo").val(response.obj.ContactNo);
                    $("#txtNomineeEmail").val(response.obj.Email);
                    $("#txtRelation").val(response.obj.Relation);
                    $("#txtPercentage").val(response.obj.Percentage);
                    _nEmployeeNomineeID = response.obj.ENID;
                }
                else {
                    alert(response.obj.ErrorMessage);
                }
            }
            else { alert("No information found."); }
        });
    });

    $("#btnCloseNomineeAdd").click(function () {
        $("#winEmployeeNominee").icsWindow("close");
    });

    function ValidateInput_Nominee()
    {
        if($("#txtNomineeName").val()==null || $("#txtNomineeName").val()=="")
        {
            alert("Please enter Name!");
            $('#txtNomineeName').focus();
            return false;
        }
        //if($("#txtNomineeAddress").val()==null || $("#txtNomineeAddress").val()=="")
        //{
        //    alert("Please enter Address!");
        //    $('#txtNomineeAddress').focus();
        //    return false;
        //}
        //if($("#txtNomineeContactNo").val()==null || $("#txtNomineeContactNo").val()=="")
        //{
        //    alert("Please enter Contact No!");
        //    $('#txtNomineeContactNo').focus();
        //    return false;
        //}
        //if($("#txtNomineeEmail").val()==null || $("#txtNomineeEmail").val()=="")
        //{
        //    alert("Please enter Email!");
        //    $('#txtNomineeEmail').focus();
        //    return false;
        //}
        return true;
    }

    function RefreshObject_Nominee()
    {
        var oEmployeeNominee= {
            ENID : _nEmployeeNomineeID,
            EmployeeID : _oEmployee.EmployeeID,
            Name :$("#txtNomineeName").val(),
            Address :$("#txtNomineeAddress").val(),
            ContactNo :$("#txtNomineeContactNo").val(),
            Email :$("#txtNomineeEmail").val(),
            Relation :$("#txtRelation").val(),
            Percentage :$("#txtPercentage").val(),
        };
        return oEmployeeNominee;
    }

    $("#btnNomineeSave").click(function () {

        if(!ValidateInput_Nominee()) return;
        var oEmployeeNominee=RefreshObject_Nominee();

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeNominee,
            ObjectId: oEmployeeNominee.ENID,
            ControllerName: "Employee",
            ActionName: "EmployeeNomineeIU",
            TableId: "tblEmployeNominee",
            IsWinClose: true
        };
        $.icsSave(obj);

    });

    $("#btnDeleteNominee").click(function () {
        var oEmployeeNominee= $('#tblEmployeNominee').datagrid('getSelected');
        if(oEmployeeNominee==null || oEmployeeNominee.ENID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblEmployeNominee').datagrid('getRowIndex',oEmployeeNominee);
        if (oEmployeeNominee.ENID > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/Employee/EmployeeNomineeDelete",
                traditional: true,
                data:  JSON.stringify(oEmployeeNominee),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    oEmployeeNominee = jQuery.parseJSON(data);
                    if (oEmployeeNominee.ErrorMessage == null)
                    {
                        alert("Delete sucessfully");
                        $('#tblEmployeNominee').datagrid('deleteRow',SelectedRowIndex);
                    }
                    else
                    {
                        alert(oEmployeeNominee.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    });

    function LoadEmployeeNomineeGrid()
    {
        data={"total":""+_oEmployeeNominees.length+"","rows":_oEmployeeNominees};
        $('#tblEmployeNominee').datagrid('loadData',data);
    }
    /**************Employee Nominee End*************/

    /**************Employee Commission Material Start*************/
    function ValidateInput_ECM()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return false;
        }
        var nCMID=$("#cboCommissionMaterial").val();
        if (nCMID<=0)
        {
            alert('Please seelct a Commission Material.!!');
            return false;
        }
        return true;
    }

    function RefreshObject_ECM()
    {
        var oECM= {
            ECMID : 0,
            CMID:$("#cboCommissionMaterial").val(),
            EmployeeID : _oEmployee.EmployeeID,
            SearchWhatValue :$("#txtSearchWhatValue").val(),
            Note :$("#txtNote").val(),
            EffectDate: $('#dtECMEffectedDate').datebox('getValue'),
            IsActive:true
        };
        return oECM;
    }

    $("#btnSaveECM").click(function () {
        if(!ValidateInput_ECM()) return;
        var oECM=RefreshObject_ECM();

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oECM,
            ObjectId: oECM.ECMID,
            ControllerName: "Employee",
            ActionName: "ECMIU",
            TableId: "tblEmployeeCommissionMaterials",
            IsWinClose: true
        };
        //$.icsSave(obj);
        $.icsSave(obj, function (response) {
            if (response.status && response.obj.ECMID>0) {
                oECMActive.push(response.obj);
            }
        });
    });

    $("#btnDeleteECM").click(function () {
        var oECM= $('#tblEmployeeCommissionMaterials').datagrid('getSelected');
        if(oECM==null || oECM.ECMID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblEmployeeCommissionMaterials').datagrid('getRowIndex',oECM);
        if (oECM.ECMID > 0)
        {
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oECM,
                ControllerName: "Employee",
                ActionName: "ECM_Delete",
                TableId: "tblEmployeeCommissionMaterials",
                IsWinClose: false
            };
            $.icsDelete(obj)
        }
    });

    $("#btnActiveECM").click(function () {
        var oEmployeeCommissionMaterial = $('#tblEmployeeCommissionMaterials').datagrid('getSelected');
        if (oEmployeeCommissionMaterial == null || oEmployeeCommissionMaterial.ECMID <= 0) {
            alert("Invalid Field!!! please select a valid Field!");
            return ;
        }
        if (oEmployeeCommissionMaterial.IsActive == false) {
            alert("Already Inactive!");
            return ;
        }
        if (!confirm("Confirm to Inactive?")) return ;
        var SelectedRowIndex = $('#tblEmployeeCommissionMaterials').datagrid('getRowIndex', oEmployeeCommissionMaterial);
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/ECM_Activity",
            traditional: true,
            data: JSON.stringify(oEmployeeCommissionMaterial),
            contentType: "application/json; charset=utf-8",

            success: function(data) {
                var oEmployeeCommissionMaterial = jQuery.parseJSON(data);
                if (oEmployeeCommissionMaterial.ECMID > 0) {
                    alert("Inactivated sucessfully");
                    $('#tblEmployeeCommissionMaterials').datagrid('updateRow', { index: SelectedRowIndex, row: oEmployeeCommissionMaterial });
                } else {
                    alert(oECM.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $("#btnApproveECM").click(function () {
        var oECM = $('#tblEmployeeCommissionMaterials').datagrid('getSelected');
        if (oECM == null || oECM.ECMID <= 0) {
            alert("Invalid Field!!! please select a valid Field!");
            return ;
        }
        if (oECM.ApproveBy > 0) {
            alert("Already approved!");
            return ;
        }
        if (oECM.IsActive == false) {
            alert("Inactive item can not be approved!");
            return ;
        }
        var SelectedRowIndex = $('#tblEmployeeCommissionMaterials').datagrid('getRowIndex', oECM);
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/ECM_Approve",
            traditional: true,
            data: JSON.stringify(oECM),
            contentType: "application/json; charset=utf-8",

            success: function(data) {
                var oECM = jQuery.parseJSON(data);
                if (oECM.ECMID > 0) {
                    alert("Approved sucessfully");
                    $('#tblEmployeeCommissionMaterials').datagrid('updateRow', { index: SelectedRowIndex, row: oECM });
                } else {
                    alert(oECM.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });

    function LoadEmployeeCommissionMaterialGrid(oECMs)
    {
        data={"total":""+oECMs.length+"","rows":oECMs};
        $('#tblEmployeeCommissionMaterials').datagrid('loadData',data);
    }
    $("#cboCommissionMaterial").change(function () {
        var nCMID=$("#cboCommissionMaterial").val();
        var bFlag=false;
        for(var i=0;i<_oCommissionMaterials.length;i++)
        {
            if(nCMID==_oCommissionMaterials[i].CMID)
            {
                $("#lblSearchWhatValue").text("");
                $("#lblSearchWhatValue").text(_oCommissionMaterials[i].SearchWhat);
                bFlag=true;
                $('#trSearchWhatValue').show();
                break;
            }
        }
        if(!bFlag)
        {
            $('#trSearchWhatValue').hide();
        }
    });
    var oECMActive=[];
    var oECMInActive=[];
    function SortECM()
    {
        for(var i=0;i<_oEmployeeCommissionMaterials.length;i++)
        {
            if(_oEmployeeCommissionMaterials[i].IsActive)
            {
                oECMActive.push(_oEmployeeCommissionMaterials[i]);
            }
            else
            {
                oECMInActive.push(_oEmployeeCommissionMaterials[i]);
            }
        }
    }
    $("#chkECMActiveList").click(function (){
        if($('#chkECMActiveList').is(':checked'))
        {
            LoadEmployeeCommissionMaterialGrid(oECMActive);
            $('#chkECMInActiveList').attr('checked', false);
        }
        else
        {
            LoadEmployeeCommissionMaterialGrid(_oEmployeeCommissionMaterials);
        }
    });
    $("#chkECMInActiveList").click(function (){
        if($('#chkECMInActiveList').is(':checked'))
        {
            LoadEmployeeCommissionMaterialGrid(oECMInActive);
            $('#chkECMActiveList').attr('checked', false);
        }
        else
        {
            LoadEmployeeCommissionMaterialGrid(_oEmployeeCommissionMaterials);
        }
    });
    /**************Employee Commission Material End*************/

    $("#btnCloseEmp,#btnCloseEmpOfficial, #btnCloseESS, #btnCloseLeaveLedger,#btnCloseNominee,#btnCloseECM,#btnCloseGroup").click(function () {
        window.location.href = _sBaseAddress+ "/Employee/View_EmployeeInformations?menuid="+_nMenuid;
    });

    /**************Employee TIN Start*************/
    $('#btnELProcess').click(function(e){
        var oEmployeeLeaveLedger = $('#tblLeaveLedger').datagrid('getSelected');
        if (oEmployeeLeaveLedger == null && oEmployeeLeaveLedger.EmpLeaveLedgerID<=0) { alert("Please select an item from leave ledger."); return false;}
        else
        {
            $("#winELProcess").icsWindow('open');
        }
    });

    $('#btnELeaveProcess').click(function(e){
        var oEmployeeLeaveLedger = $('#tblLeaveLedger').datagrid('getSelected');
        if (oEmployeeLeaveLedger == null) { alert("Please select an item from leave ledger."); return false;}
        if(oEmployeeLeaveLedger.EmpLeaveLedgerID>0)
        {
            var LastProcessDate=$('#dtLastProcessDate').datebox('getValue');
            if (!confirm("Confirm to process up to " + LastProcessDate)) return;

            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/EarnLeave/ELProcess",
                traditional: true,
                data: JSON.stringify({nEmpLeaveLedgerID:oEmployeeLeaveLedger.EmpLeaveLedgerID,LastProcessDate:LastProcessDate}),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oOBJ = jQuery.parseJSON(data);
                    if (oOBJ != null &&  oOBJ.ErrorMessage == "")
                    {
                        alert("Process successfully");
                        $("#winELProcess").icsWindow('close');
                    }
                    else
                    {
                        alert(oOBJ.ErrorMessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    });

    $('#btnCloseELeaveProcess').click(function(e){
        $("#winELProcess").icsWindow('close');
    });

    /*------- bank start-------------*/
    function BankValidateInput()
    {
        if($("#cboBank").val()==0)
        {
            alert("Please select a bank!");
            $("#cboBank").focus();
            return false;
        }

        if($("#txtACName").val()==null || $("#txtACName").val()=="")
        {
            alert("Please enter Account Name!");
            $('#txtACName').focus();
            return false;
        }

        if($("#txtACNo").val()==null || $("#txtACNo").val()=="")
        {
            alert("Please enter AC No!");
            $('#txtACNo').focus();
            return false;
        }
        return true;
    }

    function BankRefreshObject()
    {
        var oEmployeeBankAccount= {
            EmployeeBankACID : 0,
            EmployeeID : _oEmployee.EmployeeID,
            BankBranchID : $("#cboBank").val(),
            AccountNo: $("#txtACNo").val(),
            AccountName: $("#txtACName").val(),
            ErrorMessage:"8",
            Description: ""
        };
        return oEmployeeBankAccount;
    }

    function BankSave()
    {
        if(!BankValidateInput()) return;
        var oEmployeeBankAccount=BankRefreshObject();

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/Employee/EmployeeBankAccountIU",
            traditional: true,
            data:  JSON.stringify(oEmployeeBankAccount),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oEmployeeBankAccount = jQuery.parseJSON(data);
                if (oEmployeeBankAccount.EmployeeBankACID>0) {
                    alert("Data Saved sucessfully");
                    var oBanks = $('#tblBank').datagrid('getRows');
                    var nIndex=oBanks.length;
                    $('#tblBank').datagrid('appendRow',oEmployeeBankAccount);
                    $('#tblBank').datagrid('selectRow', nIndex);
                    $("#cboBank").val(0);
                    $("#txtACNo").val("");
                    $("#txtACName").val("");
                }
                else
                {
                    alert(oEmployeeBankAccount.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function DeleteBank()
    {
        var oEmployeeBankAccount= $('#tblBank').datagrid('getSelected');
        if (!confirm("Confirm to Delete?")) return ;

        if(oEmployeeBankAccount==null || oEmployeeBankAccount.EmployeeBankACID<=0)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        var SelectedRowIndex=$('#tblBank').datagrid('getRowIndex',oEmployeeBankAccount);

        if (oEmployeeBankAccount.EmployeeBankACID > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/Employee/EmployeeBankAccountDelete",
                traditional: true,
                data:  JSON.stringify(oEmployeeBankAccount),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    oEmployeeBankAccount = jQuery.parseJSON(data);
                    if (oEmployeeBankAccount.ErrorMessage == null)
                    {
                        alert("Delete sucessfully");
                        $('#tblBank').datagrid('deleteRow',SelectedRowIndex);
                    }
                    else
                    {
                        alert(oEmployeeBankAccount.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    }
    /*------- bank end --------------*/

    /*---------------- User start -------------------*/

    //function ValidateInput_User()
    //{
    //    if (_oEmployee == null || parseInt(_oEmployee.EmployeeID) <= 0)
    //    {
    //        alert('Please Add Employee first.!!');
    //        return false;
    //    }
    //    if ($("#txtLogInID").val() == "")
    //    {
    //        alert('Please Enter Login ID.!!');
    //        $("#txtLogInID").focus();
    //        return false;
    //    }
    //    var np = $("#txtPassword").val();
    //    var ncp = $("#txtConfirmPassword").val();

    //    if (np == "")
    //    {
    //        alert("Please Enter Password!");
    //        $("#txtPassword").focus();
    //        return false;
    //    }

    //    if (np != ncp)
    //    {
    //        alert("Password does not match!!!");
    //        $("#txtPassword").focus();
    //        return false;
    //    }
    //    return true;
    //}

    //function RefreshObject_User() {
    //    var oUser = {
    //        UserID: _oUser!=null?_oUser.UserID:0,
    //        LogInID: $("#txtLogInID").val(),
    //        UserName: _oEmployee.Name,
    //        OwnerID: 0,
    //        LoggedOn: false,
    //        LoggedOnMachine: '',
    //        CanLogin: true,
    //        EmployeeID: _oEmployee.EmployeeID,
    //        LocationID: _oEmployee.LocationID,
    //        EmailAddress: _oEmployee.Email,
    //        Password: $("#txtPassword").val(),
    //        ConfirmPassword: $("#txtPassword").val()
    //    };
    //    return oUser;
    //}

    //$("#btnSaveUser").click(function () {
    //    if (!ValidateInput_User()) return;
    //    var oUser=RefreshObject_User();
    //    var obj =
    //    {
    //        BaseAddress: _sBaseAddress,
    //        Object: oUser,
    //        ObjectId: oUser.UserID,
    //        ControllerName: "User",
    //        ActionName: "Save",
    //        TableId: "",
    //        IsWinClose: true
    //    };
    //    //$.icsSave(obj);

    //    $.icsSave(obj, function (response) {
    //        if (response.status && response.obj != null) {
    //            if (response.obj.UserID > 0) {
    //                _oUser=response.obj;
    //                $("#btnSaveUser").hide();
    //                $("#btnMenuPermission").show();
    //            }
    //        }
    //    });
    //});

    //$("#btnMenuPermission").click(function () {
    //    if (_oUser == null || _oUser.UserID <= 0) { alert("Please add user !"); return; }
    //    $("#winMenuPermission").icsWindow("open", "User Wise Menu Permission");
    //    var obj = {
    //        BaseAddress: _sBaseAddress,
    //        Object: _oUser,
    //        ControllerName: "Menu",
    //        ActionName: "GetsMenuForUsermission",
    //        IsWinClose: false
    //    };

    //    $.icsDataGets(obj, function (response) {
    //        if (response.status && response.objs.id > 0) {
    //            var oTMenu = response.objs;
    //            $('#ttMenu').tree({
    //                data: [oTMenu]
    //            });

    //            //var node = $('#ttMenu').tree('find', 1);
    //            //$('#ttMenu').tree('check', node.target);

    //            var oAllNodes = $('#ttMenu').tree('getChecked', 'unchecked');
    //            if(oAllNodes!=null)
    //            {
    //                for(var n=0;n<oAllNodes.length;n++)
    //                {
    //                    if (oAllNodes[n].IsPermissionAssign==true)
    //                    {
    //                        if ($('#ttMenu').tree('isLeaf', oAllNodes[n].target))
    //                        {
    //                            $('#ttMenu').tree('check', oAllNodes[n].target);
    //                        }
    //                    }
    //                }
    //            }

    //        }
    //        else {
    //            alert("Sorry, No data found, Try again.");
    //        }
    //    });
    //});

    //$("#btnMenuPermissionOk").click(function () {
    //    if (_oUser == null) {
    //        alert("Invalid User please try again!");
    //        return;
    //    }

    //    if (_oUser.UserID <= 0) {
    //        alert("Invalid User please try again!");
    //        return;
    //    }

    //    var _oSelectedMenus = [];
    //    _oSelectedMenus = $('#ttMenu').tree('getChecked');
    //    if (_oSelectedMenus == null) {
    //        alert("Please select at least one item!");
    //        return;
    //    }
    //    var sMenuKeys = "";
    //    for (var i = 0; i < _oSelectedMenus.length; i++) {
    //        sMenuKeys = sMenuKeys + _oSelectedMenus[i].id + ',';
    //    }

    //    //get indeterminate items
    //    _oSelectedMenus = [];
    //    _oSelectedMenus = $('#ttMenu').tree('getChecked', 'indeterminate');
    //    for (var i = 0; i < _oSelectedMenus.length; i++) {
    //        sMenuKeys = sMenuKeys + _oSelectedMenus[i].id + ',';
    //    }

    //    var oUser = {
    //        UserID: _oUser.UserID,
    //        Keys: sMenuKeys
    //    }

    //    $.ajax({
    //        type: "POST",
    //        dataType: "json",
    //        url: _sBaseAddress + "/User/ConfirmMenuPermission",
    //        traditional: true,
    //        data: JSON.stringify(oUser),
    //        contentType: "application/json; charset=utf-8",
    //        success: function (data) {
    //            var sFeedBackMessage = jQuery.parseJSON(data);
    //            if (sFeedBackMessage == 'Data save successfully') {
    //                alert(sFeedBackMessage);
    //                $('#winMenuPermission').window('close');
    //            }
    //            else {
    //                alert(sFeedBackMessage);
    //            }
    //        },
    //        error: function (xhr, status, error) {
    //            alert(error);
    //        }
    //    });
    //});

    //$("#btnMenuPermissionClose").click(function () {
    //    $('#winMenuPermission').window('close');
    //});
    /*---------------- User end ---------------------*/

    $("#btnOthers").click(function ()
    {
      
        if(_oEmployee.EmployeeID <=0)
        {
            alert("There is no employee is saved !");
            return;
        }
        window.location.href = _sBaseAddress+ "/Employee/View_EmployeeInformation_Others?sid="+_oEmployee.EncryptEmpID+"&sMsg=N/A";
    });

    $("#cboCategory").change(function(e) {
        if($("#cboCategory").val()==3 || $("#cboCategory").val()==4)
        {
            $("#lblJoining").html("Start:")
            $("#lblConfirmation").html("End:")
        }
        else
        {
            $("#lblJoining").html("Joining:");
            $("#lblConfirmation").html("Conf.:");
        }
    });
    //$("#txtThana").click(function ()
    //{
    //    debugger;
    //    _sDistrict = $('#txtDistrict').val();
    //});
    //$("#btnPostOffice").click(function ()
    //{
    //    debugger;
    //    _sThana = $('#txtThana').val();
    //});
    //$("#btnVillage").click(function ()
    //{
    //    debugger;
    //    _sPostOffice = $('#btnPostOffice').val();
    //});
    function RefreshAutoComplete()
    {
        $('#txtDistrict').autocomplete({
            serviceUrl: _sBaseAddress+"/AddressConfig/GetsAddressAutoSearchDist?Value=1",
            paramName: "SearchText",
            delimiter: ",",
            minChars : 2,
            transformResult: function(response) {
                return {
                    suggestions: $.map($.parseJSON(response), function(item) {
                        return {

                            value: (_COSBE.Value == 26)?item.NameInBangla: item.NameInEnglish,
                            data: item.AddressConfigID
                        };
                    })
                };
            },
            onSelect: function (suggestion) {
                debugger;
                $('#divEmployee').data('PresentDistrict', suggestion.data);
            },
            //onSearchStart: function (query) {
            //    $('#divEmployee').data('PresentDistrict', '');
            //    //$("#divEmployee").removeClass("fontColorOfPickItem");
            //}
        });
        $('#txtThana').autocomplete({

            serviceUrl: _sBaseAddress+"/AddressConfig/GetsAddressAutoSearchThana?Value=2",
            paramName: "SearchText",
            delimiter: ",",
            minChars : 2,
            transformResult: function(response) {
                return {
                    suggestions: $.map($.parseJSON(response), function(item) {
                        debugger;
                        return {
                            value: (_COSBE.Value == 26)?item.NameInBangla: item.NameInEnglish,
                            data: item.AddressConfigID
                        };
                    })
                };
            },
            onSelect: function (suggestion) {
                debugger;
                $('#divEmployee').data('PresentThana', suggestion.data);
                //$("#divEmployee").addClass("fontColorOfPickItem");
            },
            onSearchStart: function (query) {
                var oAC = { ParentAddressID : $('#divEmployee').data('PresentDistrict') };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url : _sBaseAddress+  "/AddressConfig/SetAutocompleteSessionDataDist",
                    traditional: true,
                    data:  JSON.stringify(oAC),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {},
                    error: function (xhr, status, error) { alert(error); }
                });
            }
        });
        $('#txtPostOffice').autocomplete({
            serviceUrl: _sBaseAddress+"/AddressConfig/GetsAddressAutoSearchPostOffice?Value=3",
            paramName: "SearchText",
            delimiter: ",",
            minChars : 2,
            transformResult: function(response) {
                return {
                    suggestions: $.map($.parseJSON(response), function(item) {
                        return {
                            value: (_COSBE.Value == 26)?item.NameInBangla: item.NameInEnglish,
                            data: item.AddressConfigID
                        };
                    })
                };
            },
            onSelect: function (suggestion) {
                $('#divEmployee').data('PresentPostOffice', suggestion.data);
            },
            onSearchStart: function (query) {
                var oAC = { ParentAddressID : $('#divEmployee').data('PresentThana') };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url : _sBaseAddress+  "/AddressConfig/SetAutocompleteSessionDataThana",
                    traditional: true,
                    data:  JSON.stringify(oAC),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {},
                    error: function (xhr, status, error) { alert(error); }
                });
            }
        });
        $('#txtVillage').autocomplete({
            serviceUrl: _sBaseAddress+"/AddressConfig/GetsAddressAutoSearchVill?Value=4",
            paramName: "SearchText",
            delimiter: ",",
            minChars : 2,
            transformResult: function(response) {
                return {
                    suggestions: $.map($.parseJSON(response), function(item) {
                        return {
                            value: (_COSBE.Value == 26)?item.NameInBangla: item.NameInEnglish,
                            data: item.AddressConfigID
                        };
                    })
                };
            },
            onSelect: function (suggestion) {
                $('#divEmployee').data('PresentVillage', suggestion.data);
            },
            onSearchStart: function (query) {
                var oAC = { ParentAddressID : $('#divEmployee').data('PresentPostOffice') };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url : _sBaseAddress+  "/AddressConfig/SetAutocompleteSessionDataPO",
                    traditional: true,
                    data:  JSON.stringify(oAC),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {},
                    error: function (xhr, status, error) { alert(error); }
                });
            }
        });

        //Permanent

        $('#txtPermDistrict').autocomplete({
            serviceUrl: _sBaseAddress+"/AddressConfig/GetsAddressAutoSearchDist?Value=1",
            paramName: "SearchText",
            delimiter: ",",
            minChars : 2,
            transformResult: function(response) {
                return {
                    suggestions: $.map($.parseJSON(response), function(item) {
                        return {

                            value: (_COSBE.Value == 26)?item.NameInBangla: item.NameInEnglish,
                            data: item.AddressConfigID
                        };
                    })
                };
            },
            onSelect: function (suggestion) {
                debugger;
                $('#divEmployee').data('PermDistrict', suggestion.data);
            },
            //onSearchStart: function (query) {
            //    $('#divEmployee').data('PresentDistrict', '');
            //    //$("#divEmployee").removeClass("fontColorOfPickItem");
            //}
        });
        $('#txtPermThana').autocomplete({

            serviceUrl: _sBaseAddress+"/AddressConfig/GetsAddressAutoSearchThana?Value=2",
            paramName: "SearchText",
            delimiter: ",",
            minChars : 2,
            transformResult: function(response) {
                return {
                    suggestions: $.map($.parseJSON(response), function(item) {
                        debugger;
                        return {
                            value: (_COSBE.Value == 26)?item.NameInBangla: item.NameInEnglish,
                            data: item.AddressConfigID
                        };
                    })
                };
            },
            onSelect: function (suggestion) {
                debugger;
                $('#divEmployee').data('PermThana', suggestion.data);
                //$("#divEmployee").addClass("fontColorOfPickItem");
            },
            onSearchStart: function (query) {
                var oAC = { ParentAddressID : $('#divEmployee').data('PermDistrict') };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url : _sBaseAddress+  "/AddressConfig/SetAutocompleteSessionDataDist",
                    traditional: true,
                    data:  JSON.stringify(oAC),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {},
                    error: function (xhr, status, error) { alert(error); }
                });
            }
        });
        $('#txtPermPostOffice').autocomplete({
            serviceUrl: _sBaseAddress+"/AddressConfig/GetsAddressAutoSearchPostOffice?Value=3",
            paramName: "SearchText",
            delimiter: ",",
            minChars : 2,
            transformResult: function(response) {
                return {
                    suggestions: $.map($.parseJSON(response), function(item) {
                        return {
                            value: (_COSBE.Value == 26)?item.NameInBangla: item.NameInEnglish,
                            data: item.AddressConfigID
                        };
                    })
                };
            },
            onSelect: function (suggestion) {
                $('#divEmployee').data('PermPostOffice', suggestion.data);
            },
            onSearchStart: function (query) {
                var oAC = { ParentAddressID : $('#divEmployee').data('PermThana') };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url : _sBaseAddress+  "/AddressConfig/SetAutocompleteSessionDataThana",
                    traditional: true,
                    data:  JSON.stringify(oAC),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {},
                    error: function (xhr, status, error) { alert(error); }
                });
            }
        });
        $('#txtPermVillage').autocomplete({
            serviceUrl: _sBaseAddress+"/AddressConfig/GetsAddressAutoSearchVill?Value=4",
            paramName: "SearchText",
            delimiter: ",",
            minChars : 2,
            transformResult: function(response) {
                return {
                    suggestions: $.map($.parseJSON(response), function(item) {
                        return {
                            value: (_COSBE.Value == 26)?item.NameInBangla: item.NameInEnglish,
                            data: item.AddressConfigID
                        };
                    })
                };
            },
            onSelect: function (suggestion) {
                $('#divEmployee').data('PermVillage', suggestion.data);
            },
            onSearchStart: function (query) {
                var oAC = { ParentAddressID : $('#divEmployee').data('PresentPermPostOffice') };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url : _sBaseAddress+  "/AddressConfig/SetAutocompleteSessionDataPO",
                    traditional: true,
                    data:  JSON.stringify(oAC),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {},
                    error: function (xhr, status, error) { alert(error); }
                });
            }
        });


        if(_COSBE.Value==26) {
            $('.autocomplete-suggestions').css({"font-family": "SutonnyMJ"});
        }
    }



    //$('#txtVillage').keyup(function(e){
    //    $('#txtPresentAddress').val($(this).val());
    //});
    //$('#txtPostOffice').keyup(function(e){
    //    $('#txtPresentAddress').val($('#txtVillage').val() + ', ' + $(this).val());
    //});
    //$('#txtThana').keyup(function(e){
    //    $('#txtPresentAddress').val($('#txtVillage').val() + ', ' + $('#txtPostOffice').val() + ', ' + $(this).val());
    //});
    //$('#txtDistrict').keyup(function(e){
    //    $('#txtPresentAddress').val(($('#txtVillage').val() + ', ' + $('#txtPostOffice').val() + ', ' + $('#txtThana').val() + ', ' + $(this).val()));
    //});

    ////Permanent Address


    //$('#txtPermVillage').keyup(function(e){
    //    $('#txtPermanentAddress').val($(this).val());
    //});
    //$('#txtPermPostOffice').keyup(function(e){
    //    $('#txtPermanentAddress').val($('#txtPermVillage').val() + ', ' + $(this).val());
    //});
    //$('#txtPermThana').keyup(function(e){
    //    $('#txtPermanentAddress').val($('#txtPermVillage').val() + ', ' + $('#txtPermPostOffice').val() + ', ' + $(this).val());
    //});
    //$('#txtPermDistrict').keyup(function(e){
    //    $('#txtPermanentAddress').val(($('#txtPermVillage').val() + ', ' + $('#txtPermPostOffice').val() + ', ' + $('#txtPermThana').val() + ', ' + $(this).val()));
    //});


</script>
