<html>
<head>
    <title></title>
</head>
<body>
    @model ESimSol.BusinessObjects.PFmember
        <div class="menuMainCollectionTable">
            <fieldset>
                <table border="0" style=" width:100%;">
                    <tr>
                        <td class="td-left"><label>Employee Name: </label></td>
                        <td class="td-middle">
                            <input id="txtEmployee" type="text" class="cls-txt-picker resetfield" placeholder="Search Employee" />
                            <a id="btnEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                            <a id="btnCEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
                        </td>
                        <td class="td-right">
                            PF Member Date : 
                            <input id="dtPFMemberDate" type="text" style="width: 45%;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-left"><label>PF Scheme Name: </label></td>
                        <td class="td-right" colspan="2">
                            <label id="lblPFSchemeName" class="cls-txt"></label>
                        </td>
                    </tr>

                    <tr>
                        <td class="td-left"><label>Description: </label></td>
                        <td  colspan="2">
                            <input id="txtDescription" type="text" class="cls-txt resetfield" placeholder="Description of the scheme" />
                        </td>
                    </tr>
                </table>
                <table>
                    <tr>
                        <td>
                            <fieldset>
                                <legend>Emplyees </legend>
                                @*<table id="tblPFMemberEmp" class="easyui-datagrid" style="width:475px;height:340px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" data-options="onClickRow: onClickRowForPFMemberDate">
                                    <thead>
                                        <tr>
                                            <th field="EmployeeName" width="250px" align="left">Employee</th>
                                            <th data-options="field:'PFMembershipDateInStr',width:190px,align:'center', editor:{ type:'datebox',options:{formatter:icsdateformat,parser:icsdateparser}}">Member Date</th>
                                        </tr>
                                    </thead>
                                </table>*@
                                <table id="tblPFMemberEmp" class="easyui-datagrid" style="width:475px;height:340px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" data-options="onClickRow: onClickRowForPFMemberDate">
                                    <thead>
                                        <tr>
                                            <th field="EmployeeName" width="250px">Employee</th>
                                            <th data-options="field:'PFMembershipDateInStr',width:180,align:'center', editor:{type:'datebox',options:{formatter:icsdateformat,parser:icsdateparser}}">Member Date</th>
                                        </tr>
                                    </thead>
                                </table>
                            </fieldset>
                        </td>
                        <td>
                            <fieldset>
                                <legend>PF Scheme</legend>
                                <table id="tblPFMemberContribution" title="Employee Contribution" class="easyui-datagrid" style="width:475px;height:170px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                                    <thead>
                                        <tr>
                                            <th field="ContributionRange" width="140px" align="left">Range</th>
                                            <th field="EmployeeContribution" width="220px" align="left">Contribution</th>
                                            <th field="ActivityStatus" width="65px;" align="left">Status</th>
                                        </tr>
                                    </thead>
                                </table>
                                <table id="tblPFmemberBenefit" title="Benefits" class="easyui-datagrid" style="width:475px;height:170px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                                    <thead>
                                        <tr>
                                            <th field="Maturity" width="30%" align="left">Maturity</th>
                                            <th field="Benefit" width="50%" align="left">Benefit From Employer</th>
                                            <th field="ActivityStatus" width="15%" align="left">Status</th>
                                        </tr>
                                    </thead>
                                </table>
                            </fieldset>
                        </td>
                    </tr>
                </table>
            </fieldset>

            <fieldset>
                <legend>Action</legend>
                <div style="width:100%; text-align:right;">
                    <a id="btnReset" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Reset</a>
                    <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    <a id="btnCancel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Cancel</a>
                </div>
            </fieldset>
      
            <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                <div style="font-family:Tahoma">
                    <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                        <ul id="locationtree" data-options="checkbox:true" singleselect="false"></ul>
                    </div>

                    <fieldset>
                        <legend style="font-weight:bold"> Action : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                            <tr>
                                <td style="width:400px; text-align:right"></td>

                                <td style="width:50px">
                                    <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                                </td>
                                <td style="width:50px">
                                    <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </div>
            </div>

            <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                <div style="width: 100%; font-family: Tahoma;">
                    <div style="width: 47%; float: left;">
                        <table class="tbl-AdvSearch">
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Employee Name :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Code :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Present Address :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Permanent Address :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Authentication No :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                                    <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Attendance Scheme :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                                    <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                                    <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    BU :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboBU" class="selection-search cboReset"></select>
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Location :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                                    <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                                    <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Dept./Section :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                                    <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                                    <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Designation :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                                    <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                                    <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Block :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtBlock" class="txtfield-picker txtReset" type="text" disabled />
                                    <input id="btnBlock" class="pick-btn" type="button" value="P" />
                                    <input id="btnResetBlock" class="pick-btn" type="button" value="R" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Employee Type :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboEmployeeType" class="selection-search cboReset"></select>
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Category:
                                </td>
                                <td class="td-AdvSearch-Level">
                                    <div>
                                        <select id="cboCategory" style="width:160px; float:left;"></select>
                                        &nbsp; Gender :
                                        <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                            <option value="0">None</option>
                                            <option value="1">Male</option>
                                            <option value="2">Female</option>
                                        </select>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Current Shift :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboShift_EmpSearch" class="selection-search cboReset"></select>
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Card Status :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Working Status :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Date Of Birth :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboDateType" style="width: 75px" class="cboReset">
                                        <option value='0'>None</option>
                                        <option value='1'>Equal</option>
                                        <option value='2'>Between</option>
                                    </select>
                                    <span></span>
                                    <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                                    <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                                    <span id="regionDateTo">
                                        <span>To</span>
                                        <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                        <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                                    </span>

                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Joining Date :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                                    <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                                    <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkActive" class="chkReset" /> Active
                                    <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                                    <input type="checkbox" id="chkUser" class="chkReset" /> User
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                                    <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div style="width: 52%; float: right;">
                        <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                            <thead>
                                <tr>
                                    <th data-options="field:'Selected',checkbox:true"></th>
                                    <th field="Code" width="200"> Code</th>
                                    <th field="Name" width="150">Employee Name</th>
                                    <th field="DepartmentName" width="100">Department</th>
                                    <th field="DesignationName" width="100">Designation</th>
                                </tr>
                            </thead>
                        </table>
                        <table style="width: 485px; font-size: 12px; font-weight: bold;">
                            <tr>
                                <td style="text-align: left">
                                    <input id="chkRange" type="checkbox" />Range
                                    <label id="lblRange1">
                                        <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                                    </label>
                                    <label id="lblRange2">
                                        <input id="txtTo" type="text" style="width:40px" />
                                    </label>
                                    <label id="lblcount"></label>
                                </td>
                                <td style="text-align: right">
                                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                                    <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                                    <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </td>
                            </tr>
                            <tr>
                                <td style="text-align: left"></td>
                                <td style="text-align: right"></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>

            <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                <div style="font-family:Tahoma">
                    <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                        <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
                    </div>

                    <fieldset>
                        <legend style="font-weight:bold"> Action : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                            <tr>
                                <td style="width:400px; text-align:right"></td>

                                <td style="width:50px">
                                    <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                                </td>
                                <td style="width:50px">
                                    <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </div>
            </div>
        </div>
</body>
</html>
<style type="text/css">

    .td-left {
        width: 10%;
        text-align: right;
    }
       
   .td-middle{
        width: 45%;
        text-align: left;
    }

    .td-right {
        width: 25%;
        text-align: left;
    }

    .cls-txt-picker {
        width: 85%;
        font-weight:bold;
    }

     .cls-txt {
        width: 91.5%;
        font-weight:bold;
    }


    /*.td-right .cls-cbo {
        width: 99%;
    }

    .td-right {
        width: 92.5%;
        font-weight:bold;
    }

    .td-right .cls-txt {
        width: 98%;
        font-weight:bold;
    }*/

    /*.td-right .cls-cbo {
        width: 99%;
    }

    .td-right .region-employee-conribution {
        width: 99%;
        float: left;
    }

    .region-employee-conribution .region-value {
        width: 50%;
        float: left;
    }

    .region-employee-conribution .region-CalculationOn {
        width: 50%;
        float: left;
        text-align: right;
    }

    .region-value input {
        width: 42%;
    }

    .region-CalculationOn select {
        width: 85%;
    }*/

    /* Employee Search */
    /*.tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 305px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 259px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }*/

    .tbl-AdvSearch {
            width: 100%;
            font-size: 11px;
            font-weight: bold;
            text-align: left;
            margin-left: 3px;
        }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>
<script type="text/javascript">
    var _sBaseAddress="";
    var _oPFM=null;
    var _oPFScheme=null;
    var _nEmployeeID=0;

    var _sAttendanceSchemeID ="";
    var _sBusinessUnitIds = "";
    var _sLocationID = "";
    var _sDepartmentIds = "";
    var _sDepartmentNames = "";
    var _sDesignationIds = "";
    var _sDesignationNames = "";
    var _sEmployeeIDs="";
    var _sBlockNames="";
    var _sBMMIDs="";

    var _nLastEmployeeID = 0;
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _oBusinessUnits=[];

    var _sPFSchemaIDs='';
    //var _nIndex=-1;
    //var _nAmount=0;
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oPFMember =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        
        _oPFScheme =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.PFScheme));
        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        LoadCateGory(oEmployeeCategorys);
        InitializeEmployeeAdvSearch();
        Initialization(oPFMember,((sessionStorage.length>0)?sessionStorage.getItem('Operation'):'New'));
        //$('#tblPFMemberContribution').datagrid({onClickRow: function(rowIndex, rowData){ GetSelectedRow(rowIndex,rowData);}});
        $('#dtPFMemberDate').datebox('setValue',icsdateformat(new Date()));
        $('#tblPFMemberContribution').datagrid('selectRow',0);
    });

    function LoadCateGory(oEmployeeCategorys)
    {
        $("#cboCategory").icsLoadCombo({
            List: oEmployeeCategorys,
            OptionValue: "Value",
            DisplayText: "Text"
        });
    }

    $(document).keydown(function (e) { if (e.keyCode == 27) { $('#div').icsWindow('close'); } });

    //function GetSelectedRow(rowIndex,rowData)
    //{
    //    $('#tblPFMemberContribution').datagrid('unselectAll');
    //    if(_nIndex>-1){
    //        $('#tblPFMemberContribution').datagrid('selectRow',_nIndex);
    //    }
    //}


    /*-------------------------------------------------------------------------------*/
    function Initialization(oPFMember,sOperation){
        ResetControl();
        if(oPFMember.PFMID>0){
            RefreshControl(oPFMember);
        }
        if(sOperation=="Edit"){
            $('#txtEmployee').prop('disabled',true);
            //$('#txtEmployeeName').css({'width':'98%'});
            $('#btnEmployeePicker,#btnResetEmployeePicker').hide();
        }
        else if(sOperation=="View"){
            $('input,select').prop('disabled',true);
            //$('#txtEmployeeName').css({'width':'98%'});
            $('#btnEmployeePicker,#btnResetEmployeePicker').hide();
            $('#btnSave').hide();
        }
    }

    function ResetControl(){
        _oPFM=null;
        _nEmployeeID=0;
        $('input,select').prop('disabled',false);
        $('.resetfield').val('');
        //$('#txtEmployeeName').css({'width':'92.5%'});
        $('#btnEmployeePicker,#btnResetEmployeePicker').show();
        $('#lblPFSchemeName').text('');
        $('#btnSave').show();
        DynamicRefreshList([],'tblPFmemberBenefit');

        debugger;
        if(_oPFScheme.PFSchemeID>0){
            $('#lblPFSchemeName').text(_oPFScheme.Name);
            
            DynamicRefreshList(_oPFScheme.PFMCs,'tblPFMemberContribution');
            DynamicRefreshList(_oPFScheme.PFBs,'tblPFmemberBenefit');
        }
        //_nIndex=-1;
        //GetSelectedRow(_nIndex,null);
    }

    function RefreshControl(oPFmember){
        _oPFM=oPFmember;
        _nEmployeeID=oPFmember.EmployeeID;
        $('#txtEmployee').val(oPFmember.EmployeeName);
        $('#lblPFSchemeName').text(oPFmember.PFSchemeName);
        $('#txtDescription').val(oPFmember.Description);
        DynamicRefreshList(oPFmember.PFBs,'tblPFmemberBenefit');
        //GetEmployeeContribution((oPFmember.GrossAmount>0)?true:false, oPFmember.GrossAmount);
    }

    function RefreshObject(){
        var oPFMemberEmps=$('#tblPFMemberEmp').datagrid('getRows');
        for(var i=0;i<oPFMemberEmps.length;i++){
            oPFMemberEmps[i].PFMembershipDate=oPFMemberEmps[i].PFMembershipDateInStr;
        }

        var oPFM = {
            PFMID:(_oPFM!=null)? _oPFM.PFMID: 0,
            PFSchemeID: (_oPFM!=null)? _oPFM.PFSchemeID: _oPFScheme.PFSchemeID,
            EmployeeID : _nEmployeeID,
            Description : $.trim($('#txtDescription').val()),
            PFBalance :(_oPFM!=null)? _oPFM.PFBalance: 0,
            RequestTo :(_oPFM!=null)? _oPFM.RequestTo: 0,
            IsActive : (_oPFM!=null)? _oPFM.IsActive: false,
            PFmembers:oPFMemberEmps
        };
        return oPFM;
    }
    
    function Validation(){
        var oPFMemberEmps = $('#tblPFMemberEmp').datagrid('getRows');
        if (oPFMemberEmps.length<=0) {
            alert("No valid employee found.");
            $("#txtEmployee").addClass("errorFieldBorder");
            $("#txtEmployee").focus();
            return false;
        } else {
            $("#txtEmployee").removeClass("errorFieldBorder");
        }

        if (_oPFM==null && _oPFScheme.PFSchemeID<=0) {
            alert("No scheme found.");
            return false;
        }

        if(_oPFScheme.PFMCs.length>0 && $('#tblPFMemberContribution').datagrid('getSelected')==null){
            alert("Employee contribution not found."); return false;
        }

        return true;
    }

    $('#btnSave').click(function(e){
        endEditingPFMemberDate();
        if (!Validation()) return;
        var oPFmember = RefreshObject();
        //var obj = {
        //    BaseAddress: _sBaseAddress,
        //    Object: oPFmember,
        //    ObjectId: oPFmember.PFMID,
        //    ControllerName: "PFScheme",
        //    ActionName: "SavePFM",
        //    TableId: "",
        //    IsWinClose: false,
        //    Message: (oPFmember.PFMID>0)?"Update Successfully." : "Save Successfully."
        //};
        //$.icsSave(obj, function (response) {
        //    debugger;
        //    if (response.status && response.obj != null) {
        //        if (response.obj!=null && response.obj.PFMID>0) {
        //            window.location.href = sessionStorage.getItem("BackLink");
        //            ResetControl();
        //        }
        //    }
        //});

        $.ajax
         ({
             type: "POST",
             dataType: "json",
             url: _sBaseAddress + "/PFScheme/SavePFM",
             traditional: true,
             data: JSON.stringify({oPFM:oPFmember}),
             contentType: "application/json; charset=utf-8",
             success: function (data) {
                 var oPFMembers = [];
                 oPFMembers = jQuery.parseJSON(data);
                 if (oPFMembers[0].ErrorMessage == "" && oPFMembers.length > 0) {
                     alert("Saved Successfully !");
                     sessionStorage.setItem("AddPFmemberLists", JSON.stringify(oPFMembers));
                     window.location.href = sessionStorage.getItem("BackLink");
                 }
                 else {
                     alert(oPFMembers[0].ErrorMessage);
                 }
             },
             error: function (xhr, status, error) {
                 alert(error);
             }
         });


    });

    $('#btnCancel').click(function(e){
        ResetControl();
        window.location.href = sessionStorage.getItem("BackLink");
    });

    $('#btnReset').click(function(e){
        ResetControl();
        DynamicRefreshList([],'tblPFMemberEmp');
        $('#dtPFMemberDate').datebox('setValue',icsdateformat(new Date()));
    });

    //function GetSalaryStructure(nEmployeeID)
    //{
    //    _nAmount=0;
    //    var oEmployeeSalaryStructure={ EmployeeID:nEmployeeID };
    //    var obj = {
    //        BaseAddress: _sBaseAddress,
    //        Object: oEmployeeSalaryStructure,
    //        ControllerName: "EmployeeSalaryStructure",
    //        ActionName: "GetEmployeeSalaryStructure",
    //        IsWinClose: false
    //    };
    //    $.icsDataGet(obj, function (response) {

    //        if (response.status && response.obj!=null) {
    //            if (response.obj.ESSID > 0){
    //                _nAmount=response.obj.GrossAmount;
    //                GetEmployeeContribution(true,response.obj.GrossAmount);
    //            }
    //            else{
    //                GetEmployeeContribution(false,0);
    //                alert("Salary structure yet not assigned.");
    //            }
                
    //        }
    //    });
    //}

    //function GetEmployeeContribution(IsApplicable,nAmount){
    //    _nIndex=-1;
    //    if(IsApplicable){
    //        for(var i=0;i<_oPFScheme.PFMCs.length;i++){
    //            if(_oPFScheme.PFMCs[i].MinAmount<=nAmount && _oPFScheme.PFMCs[i].MaxAmount>=nAmount){
    //                _nIndex=i;
    //            }
    //        }
    //    }
    //    if(_nIndex==-1){
    //        alert("Employee salary range doesn't bound in this range. Employee Current salary "+ formatPrice(_nAmount));
    //    }
    //    GetSelectedRow(-1,null);
    //}


    /*----------------- Employee Search By Code Or Text----------*/

    $('#txtEmployee').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee").val());
            if(sCodeName==''){alert("Please enter name or code to search."); return;}
            SearchEmployeeByText(sCodeName);
        }
        else if(code == 8){
            $('#txtEmployee').val("");
            _nEmployeeID=0;
            //_nIndex=-1;
            //_nAmount=0;
            //GetSelectedRow(_nIndex,null);
        }
    });


    function SearchEmployeeByText(sEmpNameCode){

        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "PFScheme",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    $('#txtEmployee').val(oreturnObj.Name);
                    _nEmployeeID=oreturnObj.EmployeeID;
                    //GetSalaryStructure(_nEmployeeID);
                    var oList=[];
                    oList.push(oreturnObj);
                    LoadPFMember(oList);
                }
            }

        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        $('#txtEmployee').val(oreturnObj.Name);
                        _nEmployeeID=oreturnObj.EmployeeID;
                        //GetSalaryStructure(_nEmployeeID);
                        var oList=[];
                        oList.push(oreturnObj);
                        LoadPFMember(oList);
                    }
                }
            }
        });
    }

   
    /*---------------- emp Search Start click----------------*/

    function InitializeEmployeeAdvSearch(){
        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                    {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                    {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
    }

    $("#btnEmployee").click(function () {
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            $("#lblRange1").show();
        }
        else
        {
            $("#lblRange1").hide();
        }
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }
        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }

        var nBusinessUnitID = $("#cboBU").val();
        var nCategory=$('#cboCategory').val();
        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();

        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
           nEmployeeTypeID==0 && sGender=="None" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
           bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 
           && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBMMIDs=="")
        {
            alert("Please enter your selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                     sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                     bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                     sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                      +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBMMIDs;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/PFScheme/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnEmployeePickerOk").click(function () {
        debugger;

        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length<=0) { alert("please select atleast one item");return; }
        LoadPFMember(oEmployees);
        //var sEmpIDs="";
        //var sEmpNames="";
        //for(var i=0;i<oEmployees.length;i++)
        //{
        //    sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
        //    sEmpNames=sEmpNames+oEmployees[i].Name+",";
        //}
        //_sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
        //sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
        //$('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
        //$("#txtEmployee").val(sEmpNames);
        $("#winEmployeePicker").icsWindow('close');
    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });

    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    /*-------------Location Picker----------------*/
  
    $("#btnLocationPicker").click(function(e){
        var sBusinessUnitIDs ="";
        var nBusinessUnitID=0;
        nBusinessUnitID = $("#cboBU").val();
        sBusinessUnitIDs = String(nBusinessUnitID);
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){

        var oLocation = $('#locationtree').tree('getSelected');
        if(oLocation!=null && oLocation.id>0){
            $("#winLocationPicker").icsWindow('close');
            _sLocationID=oLocation.id;
            $('#txtLocation').val(oLocation.text);
        }
        else{
            alert("Please select a location.");
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker").click(function(e){
        $('#txtLocation').val("");
        _sLocationID="";
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){
        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){
        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentIds= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
    });

    $("#btnResetDepartmentPicker").click(function(e){
        $('#txtDepartment').val("");
        _sDepartmentIds="";
        _sDepartmentNames="";
    });

    /*-------------Designation Picker----------------*/
    $("#btnDesignationPicker").click(function(e){
        DesignationPicker();
    });

    function DesignationPicker()
    {
        var oDesignation={
            DesignationID:0,
            Params: _sBusinessUnitIds+'~'+_sLocationID+'~'+ _sDepartmentIds
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;
      
                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oDesignations=[];

            var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
            oDesignations.push(oDesignation);

            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignations!=null && oDesignations.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames+=oDesignations[i].Name+",";
                        _sDesignationIds+=oDesignations[i].DesignationID+",";
                    }

                    _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                    _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
                    $("#txtDesignation").val(_sDesignationNames);
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker").click(function(e){
        $('#txtDesignation').val("");
        _sDesignationIds="";
        _sDesignationNames = "";
    });

    /*---------------- emp Search End click ----------------*/

    function LoadPFMember(oEmployees)
    {
        var PFMemberDate=$('#dtPFMemberDate').datebox('getValue');
        var oPFMembers=[];
        for(var i=0;i<oEmployees.length;i++)
        {
            var oPFMember=
            {
                EmployeeID:oEmployees[i].EmployeeID,
                EmployeeName:oEmployees[i].Name,
                PFMembershipDate:new Date(PFMemberDate),
                PFMembershipDateInStr:icsdateformat(new Date(PFMemberDate))
            }
            oPFMembers.push(oPFMember);
        }
        DynamicRefreshList(oPFMembers, "tblPFMemberEmp");
    }

    var editIndexPFMemberDate = undefined;  
    function endEditingPFMemberDate(){  
        if (editIndexPFMemberDate == undefined){return true;}  
        if ($('#tblPFMemberEmp').datagrid('validateRow', editIndexPFMemberDate))
        { 
            $('#tblPFMemberEmp').datagrid('endEdit', editIndexPFMemberDate); 
            editIndexPFMemberDate = undefined;  
            return true;  
        } else {  
            return false;  
        }  
    }  

    function onClickRowForPFMemberDate(index){  
        if (editIndexPFMemberDate != index){  
            if (endEditingPFMemberDate()){
                $('#tblPFMemberEmp').datagrid('selectRow', index).datagrid('beginEdit', index);  
                editIndexPFMemberDate = index;  
            } else {  
                $('#tblPFMemberEmp').datagrid('selectRow', editIndexPFMemberDate); 
            }  
        }  
    }
</script>