<html>
<head>  
 
</head>
<body>

    @model ESimSol.BusinessObjects.MarketingAccount
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div id="divMarketingAccount" class="menuMainCollectionTable" title="Add MarketingAccount" style="font-family:Tahoma; height:100%; width:98.5%">
        <div style="width:100%; height:85%; text-align:center">
            <fieldset style="height:95%">
                <legend style="font-weight:bold;text-align:left;"> MarketingAccount Informations : </legend>
                <table style="width: 100%;">
                    <tr>
                        <td style="width:70%;">
                            <table border="0" cellspacing="2" cellpadding="2" style="width:99%; font-size:11px; font-weight:bold">
                                <tr>
                                    <td style="width:17%; text-align:right">
                                        Code
                                    </td>
                                    <td style="width:33%">
                                        @Html.TextBoxFor(model => model.MarketingAccountID, new { style = "width:100%;", id = "txtCode", disabled = "disabled" })
                                    </td>

                                    <td style="width:18%; text-align:right">
                                        Group Head Apply?
                                    </td>
                                    <td style="width:33%;text-align:left">
                                        <table border="0" cellpadding="0" cellspacing="0" style="width:100%;text-align:left">
                                            <tr>
                                                <td style="width:10%"><input type="checkbox" id="chkIsGroupHeadYes" onclick="if(this.checked){IsGroupHeadYes()}else{IsGroupHeadNo()}" />Yes </td>
                                                <td style="width:15%;text-align:left"><input type="checkbox" id="chkIsGroupHeadNo" onclick="if(this.checked){IsGroupHeadNo()}else{IsGroupHeadYes()}" />No</td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                                

                                <tr>
                                    <td style="width:17%; text-align:right">
                                        Name
                                    </td>
                                    <td  style="width:33% ; text-align:left">
                                        @Html.TextBoxFor(model => model.Name, new { style = "width:100%;", id = "txtName" })
                                    </td>
                                    <td style="width:18%; text-align:right">
                                        Short Name
                                    </td>
                                    <td style="width:33%;text-align:left">
                                        @Html.TextBoxFor(model => model.ShortName, new { style = "width: 100%;", id = "txtShortName" })
                                    </td>
                                </tr>


                              
                                <tr>
                                    <td style="width:17%; text-align:right">
                                        Group Name
                                    </td>
                                    <td colspan="3" style="width:85% ; text-align:left">
                                        <input id="txtGroupName" class="reset-text" style="width:88%" placeholder="Type & Press Enter" />
                                        <a id="btnPickGroupName" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                                        <a id="btnClrGroupName" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                                        @*<a id="btnAddNewGroup" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-add" plain="true">Add New Group</a>*@
                                    </td>

                                </tr>
                                <tr>
                                    <td style="width:17%; text-align:right">
                                        Phone
                                    </td>
                                    <td style="width:33% ; text-align:left">
                                        @Html.TextBoxFor(model => model.Phone, new { style = "width:100%;", id = "txtPhone" })
                                    </td>
                                    <td style="width:17%; text-align:right">
                                        Phone2
                                    </td>
                                    <td style="width:33% ; text-align:left">
                                        @Html.TextBoxFor(model => model.Phone2, new { style = "width: 100%;", id = "txtPhone2" })
                                    </td>
                                </tr>


                                <tr>
                                    <td style="width:17%; text-align:right">
                                        Email
                                    </td>
                                    <td colspan="3" style="width:83% ; text-align:left">
                                        @Html.TextBoxFor(model => model.Email, new { style = "width:100%;", id = "txtEmail" })
                                    </td>
                                </tr>
                                <tr>
                                    <td style="width:17%; text-align:right">
                                        Note
                                    </td>
                                    <td colspan="3" style="width:85% ; text-align:left">
                                        @Html.TextBoxFor(model => model.Note, new { style = "width: 100%;", id = "txtNote" })
                                    </td>
                                </tr>

                            </table>
                        </td>
                        <td style="width:30%; vertical-align:top;">
                            <table style="width:100%; ">
                                <tr>
                                    <td style="width: 100%;">
                                        <table id="tblBU" title="" class="easyui-datagrid" style="width:100%; height:154px;  font-size: 12px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                                            <thead>
                                                <tr>
                                                    <th data-options="field:'Selected',checkbox:true">
                                                    </th>
                                                    <th field="BUTypeSt" width="30%">Unit Type</th>
                                                    <th field="Name" width="70%">Unit Name</th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </td>

                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
                <fieldset style="margin-top:20px">
                    <legend style="text-align:left"> User Binding : </legend>
                    <div class="row" style="padding-top:5px">
                        <div style="text-align:right" class="col-md-2">
                            <label>Is User Bind: </label>
                        </div>
                        <div style="text-align:left;" class="col-md-7">
                            <input type="checkbox" id="chkIsUserBindYes" onclick="if(this.checked){IsUserBindYes()}else{IsUserBindNo()}" />Yes 
                            <input type="checkbox" id="chkIsUserBindNo" onclick="if(this.checked){IsUserBindNo()}else{IsUserBindYes()}" />No
                        </div>
                    </div>
                    <div class="row">
                        <div style="text-align:right" class="col-md-2">
                          <label>User Name: </label>  
                        </div>
                        <div style="text-align:left;" class="col-md-7">
                            <input id="txtUserName" class="reset-text" style="width:70%" placeholder="Type & Press Enter" />
                            <a id="btnPickUser" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnClrUser" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </div>
                    </div>
                    <div class="row">
                        <div style="text-align:right" class="col-md-2">
                            <label>Employee: </label>
                        </div>
                        <div style="text-align:left;" class="col-md-7">
                            <input id="txtEmployeeName" class="reset-text" style="width:70%" placeholder="Type & Press Enter" />
                            <a id="btnPickEmployee" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnClrEmployee" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </div>
                    </div>
                </fieldset>
            </fieldset>
        </div>

        <div style="width:100%; height:10%">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:80%; text-align:right"></td>
                        <td style="width: 10%">
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        </td>
                        <td style="width: 10%">
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
</body>
</html>


<script type="text/javascript">
    var _oMarketingAccount=null;
    var _sBaseAddress="",_sBackTo="";
    var _nMenuid=0;
    var _oBusinessUnits = [];
    var _oMarketingAccount_BUs = [];
    var _oMarketingHead=null;
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.MenuID]));
        _oMarketingAccount =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oMarketingAccount_BUs =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.MarketingAccount_BUs));
        _oBusinessUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        debugger;
        _sBackTo=sessionStorage.getItem("MarketingAccountBackTo");
        _sMarketingAccountHeader=sessionStorage.getItem("MarketingAccountHeader");
        _oMarketingHead=JSON.parse(sessionStorage.getItem("MarketingHead"));
        $('#divMarketingAccount').panel({ title:_sMarketingAccountHeader});
        RefreshBUs(_oBusinessUnits);
        SetBUs();
        if(_sMarketingAccountHeader=="View MarketingAccount")
        {
            $('#btnSave,.ics-pick').hide();
            $('input,select').not('#txtCode').prop('disabled',true);
        }

        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
        RefreshControl();
    });

    function RefreshControl()
    {
        $("#txtUserName").val(_oMarketingAccount.UserName);
        $("#txtGroupName").val(_oMarketingHead.Name);
        $("#txtEmployeeName").val(_oMarketingAccount.EmployeeCode);
        _oMarketingAccount.GroupID=_oMarketingHead.MarketingAccountID;

        if (_oMarketingAccount.IsGroupHead == true)
        {
            $('#chkIsGroupHeadYes').prop('checked', true);
            $('#chkIsGroupHeadNo').prop('checked', false);
        }
        else
        {
            $('#chkIsGroupHeadYes').prop('checked', false);
            $('#chkIsGroupHeadNo').prop('checked', true);
        }
        if (_oMarketingAccount.UserID > 0)
        {
            $('#chkIsUserBindYes').prop('checked', true);
            $('#chkIsUserBindNo').prop('checked', false);
        }
        else
        {
            $('#chkIsUserBindYes').prop('checked', false);
            $('#chkIsUserBindNo').prop('checked', true);
        }
    }

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }
    function RefreshBUs(oBusinessUnits)
    {
        data=oBusinessUnits;
        data={"total":""+data.length+"","rows":data};
        $('#tblBU').datagrid('loadData',data);
    }

    function SetBUs()
    {
        debugger;
        var oMarketingAccount_BUs = $('#tblBU').datagrid('getRows');
        if(_oMarketingAccount_BUs.length>0)
        {
            for(var i =0;i<_oMarketingAccount_BUs.length;i++)
            {
                for(var j =0;j<oMarketingAccount_BUs.length;j++)
                {
                    if(parseInt(_oMarketingAccount_BUs[i].BUID) == parseInt(oMarketingAccount_BUs[j].BusinessUnitID))
                    {
                        $('#tblBU').datagrid('checkRow', j);
                        break;
                    }
                }
            }
        }
    }
    function ValidateInput()
    {
        if(document.getElementById("txtName").value==null || document.getElementById("txtName").value=="")
        {
            alert("Please enter MarketingAccount name!");
            $('#txtName').focus();
            $("#txtName").addClass("errorFieldBorder");
            return false;
        }
        //if(_oMarketingAccount.UserID<=0)
        //{
        //    alert("Please Pick User!");
        //    $('#txtUserName').focus();
        //    $("#txtUserName").addClass("errorFieldBorder");
        //    return false;
        //}
        if($("#chkIsUserBindYes").is(":checked")==true && _oMarketingAccount.UserID<=0)
        {
            alert("Please, Pick A User And Try Again!!");
            $("#txtUserName").focus();
            $("#txtUserName").addClass("errorFieldBorder");
            return;
        }
        return true;
    }


    function RefreshObject()
    {
        var oMarketingAccount= {
            MarketingAccountID : _oMarketingAccount.MarketingAccountID,
            EmployeeID :_oMarketingAccount.EmployeeID,
            GroupID: _oMarketingAccount.GroupID,
            UserID:_oMarketingAccount.UserID,
            Name :$("#txtName").val(),
            Phone: $("#txtPhone").val(),
            Phone2: $("#txtPhone2").val(),
            Email: $("#txtEmail").val(),
            ShortName : $("#txtShortName").val(),
            Note :  $("#txtNote").val(),
            IsGroupHead: $("#chkIsGroupHeadYes").is(":checked"),
            Activity:true,
            IsGroup:false,
            BusinessUnits: $('#tblBU').datagrid('getChecked')

        };
        return oMarketingAccount;
    }

    $("#btnSave").click(function(){
        if(!ValidateInput()) return;
        var oMarketingAccount=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/MarketingAccount/Save",
            traditional: true,
            data:  JSON.stringify(oMarketingAccount),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oMarketingAccount = jQuery.parseJSON(data);
                if (oMarketingAccount.MarketingAccountID>0 && (oMarketingAccount.ErrorMessage=="" || oMarketingAccount.ErrorMessage==null)) {
                    alert("Data Saved sucessfully");
                    var oMarketingAccounts =sessionStorage.getItem("MarketingAccounts");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oMarketingAccounts!=null)
                    {
                        oMarketingAccounts = jQuery.parseJSON(oMarketingAccounts);
                    }
                    else
                    {
                        oMarketingAccounts=[];
                    }
                    if(nIndex!=-1)
                    {
                        oMarketingAccounts[nIndex]=oMarketingAccount;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oMarketingAccounts.length);
                        oMarketingAccounts.push(oMarketingAccount);
                    }
                    debugger;
                    nIndex=(nIndex==-1?oMarketingAccounts.length-1 : nIndex);
                    if(oMarketingAccount.GroupID!=_oMarketingHead.MarketingAccountID)
                        oMarketingAccounts.splice(nIndex,1);

                    sessionStorage.setItem("MarketingAccounts", JSON.stringify(oMarketingAccounts));
                    window.location.href = _sBackTo;
                }
                else {
                    alert(oMarketingAccount.ErrorMessage);
                    return;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#btnClose").click(function(){
        window.location.href = _sBackTo;
    });

    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            window.location.href = _sBackTo;
        }
    });

    //Pic User
    $("#btnClrUser").click(function () {
        $("#txtUserName").val("");
        _oMarketingAccount.UserID=0;
    });
    $("#btnPickUser").click(function () {

        var oUser = {
            UserName:  $.trim($("#txtUserName").val())
        };
        GetUsers(oUser)
    });
    $("#txtUserName").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var sUserName=$.trim($("#txtUserName").val());
            if(sUserName=="" || sUserName==null)
            {
                alert("Please, Type name or part of Name");
                $("#txtUserName").focus();
                $("#txtUserName").addClass("errorFieldBorder");
                return;
            }
            var oUser = {
                UserName:  $.trim($("#txtUserName").val())
            };
            GetUsers(oUser)
        }
        else if(nkeyCode==8){
            $("#txtUserName").val("");
            _oMarketingAccount.UserID=0;
           
        }
    });
    function GetUsers(oUser){
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oUser,
            ControllerName: "User",
            ActionName: "GetUesrsByName",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].UserID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "UserName", title: "Name", width: 190, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "LogInID", title: "LogInID", width: 140, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winUserPicker',
                        winclass:'clsUserPicker',
                        winwidth: 460,
                        winheight: 460,
                        tableid: 'tblUserPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'UserName',
                        windowTittle: 'User List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No User found.");
            }
        });
    }

    // Pick Object
    $("#btnClrEmployee").click(function () {
        $("#txtEmployeeName").val("");
        _oMarketingAccount.EmployeeID=0;
    });
    $("#btnPickEmployee").click(function () {

        var oEmployee = {
            Params:  $.trim($("#txtEmployeeName").val())+'~'+ 0
        };
       
        GetEmployees(oEmployee);
    });
    $("#txtEmployeeName").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var sEmployeeName=$.trim($("#txtEmployeeName").val());
            if(sEmployeeName=="" || sEmployeeName==null)
            {
                alert("Please, Type name or part of Name");
                $("#txtEmployeeName").focus();
                $("#txtEmployeeName").addClass("errorFieldBorder");
                return;
            }
            var oEmployee = {
                Params:  $.trim($("#txtEmployeeName").val())+'~'+ 0
            };
            GetEmployees(oEmployee);
        }
        else if(nkeyCode==8){
            $("#txtEmployeeName").val("");
            _oMarketingAccount.EmployeeID=0;
           
        }
    });
    function GetEmployees(oEmployee){
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "EmployeeID", title: "Code", width: 50, align: "center" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 190, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Phone", title: "Phone", width: 140, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winEmployeePicker',
                        winclass:'clsEmployeePicker',
                        winwidth: 460,
                        winheight: 460,
                        tableid: 'tblEmployeePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No Employee found.");
            }
        });
    }


    $("#btnClrGroupName").click(function () {
        $("#txtEmployeeName").val("");
        _oMarketingAccount.GroupID=0;
    });

    $("#btnPickGroupName").click(function () {

        var oMarketingAccount_BU = {
            Name: "",
            BUID:0
        };
        GetGroupNames(oMarketingAccount_BU);
       
    });

    $("#txtGroupName").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var sName=$.trim($("#txtGroupName").val());
            if(sName=="" || sName==null)
            {
                alert("Please, Type name or part of Name");
                $("#txtGroupName").focus();
                $("#txtGroupName").addClass("errorFieldBorder");
                return;
            }
            var oMarketingAccount_BU = {
                Name:  $.trim($("#txtGroupName").val()),
                BUID:0
            };
            GetGroupNames(oMarketingAccount_BU);
        }
        else if(nkeyCode==8){
            $("#txtGroupName").val("");
            _oMarketingAccount.GroupID=0;
           
        }
    });
    function GetGroupNames(oMarketingAccount_BU){
        
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oMarketingAccount_BU,
            ControllerName: "MarketingAccount",
            ActionName: "GetsGroup",
            IsWinClose: false
        };
       
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].MarketingAccountID > 0) {
                    debugger;
                    var tblColums = [];
                    oColumn = { field: "Name", title: "Name", width: 190, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroupPicker',
                        winclass:'clsGroupPicker',
                        winwidth: 460,
                        winheight: 460,
                        tableid: 'tblGroupPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No Employee found.");
            }
        });
    }

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winEmployeePicker')
        {
            if (oreturnObj != null && oreturnObj.EmployeeID > 0)
            {
                $('#txtEmployeeName').val(oreturnObj.Name);
                //$('#txtName').val(oreturnObj.Name);
                //$('#txtPhone').val(oreturnObj.ContactNo);
                //$('#txtEmail').val(oreturnObj.Email);
                _oMarketingAccount.EmployeeID= oreturnObj.EmployeeID;
            }
            else{
                alert("Data not found");
            }
        }
        if (oPickerobj.winid == 'winUserPicker')
        {
            if (oreturnObj != null && oreturnObj.UserID > 0)
            {
              //  $('#txtEmployeeName').val(oreturnObj.Code);
                //$('#txtName').val(oreturnObj.UserName);
                //$('#txtEmail').val(oreturnObj.EmailAddress);
                $('#txtUserName').val(oreturnObj.UserName);
                _oMarketingAccount.UserID= oreturnObj.UserID;
            }
            else{
                alert("Data not found");
            }
        }
        if (oPickerobj.winid == 'winGroupPicker')
        {
            if (oreturnObj != null )//&& oreturnObj.MarketingAccountID > 0)
            {
                $('#txtGroupName').val(oreturnObj.Name);
                _oMarketingAccount.GroupID= oreturnObj.MarketingAccountID;
            }
            else{
                alert("Data not found");
            }
        }
        
    }
    /// end Pick
    //// Addd Group
    $("#btnAddNewGroup").click(function(){
        $("#winAddGroup").icsWindow('open', "Add Group");
        $("#winAddGroup input").not("input[type='button']").val("");
    });
   
    function RefreshObjectGroup()
    {
        var oMarketingAccount= {
            MarketingAccountID : 0,
            EmployeeID :0,
            GroupID: 0,
            Name :$("#txtName_Group").val(),
            Phone: "",
            Phone2: "",
            Email: "",
            ShortName : "",
            Note : "",
            UserID:0,
            Activity:true,
            IsGroup:true,
            IsGroupHead:false,
            BusinessUnits: $('#tblBU').datagrid('getChecked')

        };
        return oMarketingAccount;
    }

    $("#btnSaveGroup").click(function(){
        var sEmployeeName=$.trim($("#txtName_Group").val());
        if(sEmployeeName=="" || sEmployeeName==null)
        {
            alert("Please, Type name");
            $("#txtName_Group").focus();
            $("#txtName_Group").addClass("errorFieldBorder");
            return;
        }
        var oMarketingAccount=RefreshObjectGroup();

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/MarketingAccount/Save",
            traditional: true,
            data:  JSON.stringify(oMarketingAccount),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oMarketingAccount = jQuery.parseJSON(data);
                if (oMarketingAccount.MarketingAccountID>0 && (oMarketingAccount.ErrorMessage=="" || oMarketingAccount.ErrorMessage==null)) {
                    alert("Data Saved sucessfully");
                   
                    document.getElementById("txtName").value="";
                    $("#winAddGroup").icsWindow('close');
                }
                else {
                    alert(oMarketingAccount.ErrorMessage);
                    return;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#btnCloseGroup").click(function(){
        $("#winAddGroup").icsWindow('close');
    });
   
    function IsGroupHeadYes() {
        document.getElementById("chkIsGroupHeadYes").checked = true;
        document.getElementById("chkIsGroupHeadNo").checked = false;
    }

    function IsGroupHeadNo() {
        document.getElementById("chkIsGroupHeadYes").checked = false;
        document.getElementById("chkIsGroupHeadNo").checked = true;
    }

    function IsUserBindYes() {
        document.getElementById("chkIsUserBindYes").checked = true;
        document.getElementById("chkIsUserBindNo").checked = false;
    }

    function IsUserBindNo() 
    {
        _oMarketingAccount.UserID=0
        $("#txtUserName").val("");
        document.getElementById("chkIsUserBindYes").checked = false;
        document.getElementById("chkIsUserBindNo").checked = true;
    }
    // end Grop
</script>