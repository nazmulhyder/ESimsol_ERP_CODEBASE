@{
    ViewBag.Title = "Self Service";
}
<!DOCTYPE html>
<html>
<head>
    <title> Employee Self Service </title>
    <style>

        .tr-All{
            width: 100%;
        }
       .td-Caption-left{
           width:15%;
           text-align: right;
       }
       .td-Caption-right{
           width:5%;
           text-align: right;
       }
       .td-Input{
           width:20%;
       }
       .div-parent{
           float:left;
           width:100%;
       }
      .div-child-3{
           float:left;
           width:28%;
           margin-left:3px;
           margin-right:3px;
           margin-bottom:2px;
           margin-top:2px;
       }
      .div-child-4{
           float:left;
           width:40%;
           margin-left:3px;
           margin-right:3px;
           margin-bottom:2px;
           margin-top:2px;
       }
       .div-child-5{
           float:left;
           width:49%;
           margin-left:3px;
           margin-right:3px;
           margin-bottom:2px;
           margin-top:2px;
       }
     .div-child-6{
           float:left;
           width:56%;
           margin-left:3px;
           margin-right:3px;
           margin-bottom:2px;
           margin-top:2px;
       }
        .div-child-7{
           float:left;
           width:68%;
           margin-left:3px;
           margin-right:3px;
           margin-bottom:2px;
           margin-top:2px;
       }
       .align-right{
            text-align:right; 
        }

    </style>
</head>
<body>
    @model ESimSol.BusinessObjects.Employee

    <div class="menuMainCollectionTable">
        <div id="WinPopUp"  class="ics-window" >
            <a class="ics-window-close"><img src="~/Content/Images/close_pop.png" /></a>
            <div id="popupContent">
                <div class="popupInfo">
                    <div id="popupregionTitle">
                        <label id="popuplblTitle" class="resetlbl"></label>
                    </div>
                    <div id="regionDescription">
                        <label id="popuplblDescription" class="resetlbl"></label>
                    </div>
                </div>
                <div class="popupNotify">
                    <label id="popuplblNotify" class="resetlbl notice-posted-info"></label>
                </div>
            </div>
        </div>

        @*<div id="winLeaveApplication" class="easyui-window" title="Leave Application" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <table class="tbl">
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Application Type:</label>
                        </div>
                        <div class="divInput-rd">
                            <span><input type="radio" id="rdbtnLeaveOfApplication" class="rd-styler" name="ApplicationType" /> <label>Leave of Application</label> </span>
                            <span><input type="radio" id="rdbtnLeaveOfAbsence" class="rd-styler" name="ApplicationType" /> <label>Leave of Absence</label></span>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Start From:</label>
                        </div>
                        <div class="divInput">
                            <input id="dtStartDate" class="easyui-datebox" data-options="required:true,showSeconds:false" value="datetime()" />
                            to
                            <input id="dtEndDate" class="easyui-datebox" data-options="required:true,showSeconds:false" value="datetime()" />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Leave:</label>
                        </div>
                        <div class="divInput">
                            <select id="cboLeaveLedger"></select>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Leave Type:</label>
                        </div>
                        <div class="divInput">
                            <select id="cboLeaveType"></select>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Expense Location:</label>
                        </div>
                        <div class="divInput">
                            <input id="txtExpenseLocation" class="resetfield" type="text" placeholder="Leave expense location." />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Reason:</label>
                        </div>
                        <div class="divInput">
                            <input id="txtReason" class="resetfield" type="text" placeholder="Reason for leave." />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Type:</label>
                        </div>
                        <div class="divInput-rd">
                            <span><input type="radio" id="rdbtnPaid" class="rd-styler" name="paid-unpaid" /> <label>Paid</label> </span>
                            <span><input type="radio" id="rdbtnUnPaid" class="rd-styler" name="paid-unpaid" /> <label>Un-Paid</label></span>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp tdRecommendation">
                        <div class="divLabel clsReportingPerson">
                            <label>Recommend Person:</label>
                        </div>
                        <div class="divInput clsRecommendPerson">
                            <select id="cboRecommendPerson"></select>
                            <span style="float:left; margin-left:5px;margin-right:5px; ">Or</span>
                            <input id="txtRecommendPerson" class="resetfield" type="text" placeholder="Request To Recommend Person." />
                        </div>
                    </td>
                </tr>
            </table>

            <fieldset class="actionfieldsetstyle">
                <legend>Actions : </legend>
                <table class="tbl">
                    <tr>
                        <td class="tdApp lblAlign">
                            <label id="lblApplicationStatus" class="resetlbl"></label>
                        </td>
                        <td class="tdApp">
                            <a id="btnSaveLeaveApplication" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            <a id="btnCloseLeaveApplication" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>*@

        <div id="winLeaveApplication" class="easyui-window" title="Leave Application" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <table class="tbl">
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Employee Name:</label>
                        </div>
                        <div class="divInput">
                            <input id="txtEmployee" class="txtfield-picker resetfield" placeholder="Type and press enter or pick employee" type="text" />
                            <input id="btnEmployeePicker" class="pick-btn-LeaveApp" type="button" value="P" />
                            <input id="btnResetEmployeePicker" class="pick-btn-LeaveApp" type="button" value="R" />
                        </div>
                    </td>
                </tr>
                @*<tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Application Type:</label>
                        </div>
                        <div class="divInput-rd">
                            <span><input type="radio" id="rdbtnLeaveOfApplication" class="rd-styler" name="ApplicationType" /> <label>Leave of Application</label> </span>
                            <span><input type="radio" id="rdbtnLeaveOfAbsence" class="rd-styler" name="ApplicationType" /> <label>Leave of Absence</label></span>
                        </div>
                    </td>
                </tr>*@
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Start From:</label>
                        </div>
                        <div class="divInput">
                            <input id="dtStartDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            @*<input id="dtStartDate" class="easyui-datebox" data-options="required:true,showSeconds:false" value="datetime()" />*@
                            <span id="spEndDate">
                                to
                                <input id="dtEndDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                @*<input id="dtEndDate" class="easyui-datebox" data-options="required:true,showSeconds:false" value="datetime()" />*@
                            </span>
                            <input style="width:105px;float: none;" type="button" value="Show Attendance" onclick="GetAttendance()" />
                        </div>
                    </td>
                </tr>
                
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Leave:</label>
                        </div>
                        <div class="divInput">
                            @*<div style="float:left; width:69%;">
                                <div style="float:left; width:73%; text-align:left;" >
                                    <select id="cboLeaveLedger" style="width:100%" ></select>
                                </div>
                                <div style="float:left; width:25%; padding-left:2%; text-align:right;">
                                    <input type="text" style="width:95%;" class="number" />
                                </div>
                            </div>*@

                            <select id="cboLeaveLedger"></select>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Leave Type:</label>
                        </div>
                        <div class="divInput">
                            @*<select id="cboLeaveType"></select>*@
                            <div style="float:left; width:69%;">
                                <div style="float:left; width:60%; text-align:left;">
                                    <select id="cboLeaveType" style="width:100%"></select>
                                </div>
                                <div style="float:left; width:38%; padding-left:2%; text-align:right;">
                                    <input id="txtDurationInHour" type="text" style="width:75%;" class="number" disabled placeholder="Duration In Hour" />
                                    (hr)
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Expense Location:</label>
                        </div>
                        <div class="divInput">
                            <input id="txtExpenseLocation" class="resetfield" type="text" value="N/A" placeholder="Leave expense location." />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Reason:</label>
                        </div>
                        <div class="divInput">
                            <input id="txtReason" class="resetfield" type="text" placeholder="Reason for leave." value="N/A" />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Responsible Person:</label>
                        </div>
                        <div class="divInput">
                            <input id="txtResponsiblePerson" class="resetfield" placeholder="Type and press enter or pick employee" type="text" />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp tdRecommendPerson">
                        <div class="divLabel clsRecommendPerson">
                            <label>Recommend Person:</label>
                        </div>
                        <div class="divInput clsRecommendPerson">
                            <select id="cboRecommendPerson" style="width:32%"></select>
                            <span style="float:left; margin-left:5px;margin-right:5px; ">Or</span>
                            <input id="txtRecommendPerson" style="width:32%" class="resetfield" type="text" placeholder="Request To Recommend Person." />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Type:</label>
                        </div>
                        <div class="divInput-rd">
                            <span><input type="radio" id="rdbtnPaid" class="rd-styler" name="paid-unpaid" disabled="disabled" /> <label>Paid</label> </span>
                            <span><input type="radio" id="rdbtnUnPaid" class="rd-styler" name="paid-unpaid" disabled="disabled" /> <label>Un-Paid</label></span>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp tdRecommendation">
                        <div class="divLabel">
                            <label>Recommendation Note:</label>
                        </div>
                        <div class="divInput">
                            <input id="txtRecommendationNote" class="resetfield" type="text" placeholder="Recommendation Note." />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp tdRecommendation">
                        <div class="divLabel clsReportingPerson">
                            <label>Request To Approval:</label>
                        </div>
                        <div class="divInput clsReportingPerson">
                            <select id="cboRequestToApproval"></select>
                            <span style="float:left; margin-left:5px;margin-right:5px; ">Or</span>
                            <input id="txtRequestToApproval" class="resetfield" type="text" placeholder="Request To Approval Person." />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp tdApproval">
                        <div class="divLabel">
                            <label>Approval Note:</label>
                        </div>
                        <div class="divInput">
                            <input id="txtApprovalNote" class="resetfield" type="text" placeholder="Approval Note." />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp tdCancel">
                        <div class="divLabel">
                            <label>Cancel Note:</label>
                        </div>
                        <div class="divInput">
                            <input id="txtCancelNote" class="resetfield" type="text" placeholder="Cancel Note." />
                        </div>
                    </td>
                </tr>
            </table>

            <fieldset class="actionfieldsetstyle">
                <legend>Actions : </legend>
                <table class="tbl">
                    <tr>
                        <td class="tdApp lblAlign">
                            <label id="lblApplicationStatus" class="resetlbl"></label>
                        </td>
                        <td class="tdApp">
                            <a id="btnCancelLeaveApplication" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Cancel</a>
                            <a id="btnApproveLeaveApplication" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Approve</a>
                            <a id="btnRecommendLeaveApplication" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Recommend</a>

                            <a id="btnSaveLeaveApplication" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            <a id="btnCloseLeaveApplication" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

        <div id="winEmployeeLoan" class="easyui-window" title="Loan Application" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">

            <table class="tbl">
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Salary Info:</label>
                        </div>
                        <div class="divInput">
                            <textarea id="txtSalaryInfo" class="resetfield unresize" disabled></textarea>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Last Loan Info:</label>
                        </div>
                        <div class="divInput">
                            <input id="txtLastLoanInfo" class="resetfield unresize" type="text" placeholder="Information of the last loan." disabled />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Purpose:</label>
                        </div>
                        <div class="divInput">
                            <input id="txtLoanPurpose" class="resetfield" type="text" placeholder="Purpose of the loan." />
                            <sup class="field-required">*</sup>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Loan Amount:</label>
                        </div>
                        <div class="divInput">
                            <input id="txtLoanAmount" type="text" />
                            <sup class="field-required">*</sup>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Special Note:</label>
                        </div>
                        <div class="divInput">
                            <textarea id="txtSpecialNote" class="resetfield unresize"></textarea>
                        </div>
                    </td>
                </tr>
            </table>

            <fieldset class="actionfieldsetstyle">
                <legend>Actions : </legend>
                <table class="tbl">
                    <tr>
                        <td class="tdApp lblAlign">
                            <label id="lblLoanAppStatus" class="resetlbl"></label>
                        </td>
                        <td class="tdApp">
                            <a id="btnSaveEmployeeLoan" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            <a id="btnCloseEmployeeLoan" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

        <div id="winLoanPaymentInstruction" class="easyui-window" title="Payment Instruction" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">

            <table class="tbl">
                <tr>
                    <td class="tdDual">
                        <div class="divLabel">
                            <label>Approved Amount:</label>
                        </div>
                        <div class="divLabel-Value">
                            <label id="lblLoanApproveAmount" class="resetlbl"></label>
                        </div>
                    </td>
                    <td class="tdDual">
                        <div class="divLabel">
                            <label>Outstanding Amount:</label>
                        </div>
                        <div class="divLabel-Value">
                            <label id="lblLoanOutstandingAmount" class="resetlbl"></label>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdDual">
                        <div class="divLabel">
                            <label>Life Cycle:</label>
                        </div>
                        <div class="divLabel-Value">
                            <label id="lblLoanLifeCycle" class="resetlbl"></label>
                        </div>
                    </td>
                    <td class="tdDual">
                        <div class="divLabel">
                            <label>Interest Rate:</label>
                        </div>
                        <div class="divLabel-Value">
                            <label id="lblLoanInterestRate" class="resetlbl"></label>
                        </div>
                    </td>
                </tr>

                <tr>
                    <td colspan="2">
                        <table id="tblLoanPaymentInstruction" class="easyui-datagrid" style=" width:100%; height:180px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                            <thead>
                                <tr>
                                    <th field="ExpectedRealizeDateInString" width="100" align="left"> Date </th>
                                    <th width="15%" align="right" data-options="field:'Amount',formatter:formatPrice">Amount</th>
                                    <th field="PeriodInString" width="140" align="left">Status</th>
                                    <th field="ConditionInString" width="120" align="left">Realized Date</th>
                                    <th field="ActivationAfterInString" width="100" align="left">Note</th>
                                </tr>
                            </thead>
                        </table>
                    </td>
                </tr>
            </table>

            <fieldset class="actionfieldsetstyle">
                <legend>Actions : </legend>
                <table class="tbl">
                    <tr>
                        <td class="tdApp lblAlign">
                            <label id="lblLoanPaymentInstruction" class="resetlbl"></label>
                        </td>
                        <td class="tdApp">
                            <a id="btnCloseLoanPaymentInstruction" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

        <div id="tab-seftservice" class="easyui-tabs" style="width:100%;height:560px">
                <div title="Dashboard" data-options="iconCls:'icon-ok'" style="padding:10px;">
                    <div style="width:35%; float:left; ">
                        <fieldset>
                            <legend>Self Information</legend>
                            <div style="margin:0px 0px 5px 0px; text-align:right; width:100%">
                                <div style="width:42%;border: .5px dotted groove; margin-left:5px ; height:130px; float:left;">
                                    <img id="imgPhotoIcon" src="@Url.Action("GetPhoto", "Employee", new { nid = Model.EmployeeID })" alt="Photo" style="width:100%; height:130px" />
                                </div>
                                <div style="width:52%; text-align:left; margin-left:10px;float:left;">
                                    <label class="lbl-Self-Info lbl-Name-Styler">@Model.Name</label>
                                    <br />
                                    <label class="lbl-Self-Info">@Model.DesignationName , @Model.DepartmentName</label>
                                    <br />
                                    <label class="lbl-Self-Info">Joining Date : @Model.DateOfJoinInString</label>
                                    <br />
                                    <label class="lbl-Self-Info">Shift : @Model.CurrentShift</label>
                                    <br />
                                    <label class="lbl-Self-Info">Day Off : @Model.AttendanceScheme.DayOff</label>
                                </div>
                            </div>
                        </fieldset>
                    </div>

                    <div style="width:65%; float:left;">
                        <fieldset>
                            <legend>Company Announcement</legend>
                            <div id="div-region-notice">
                            </div>
                        </fieldset>
                    </div>

                    <div style="width:100%; float:left;">

                        <div style="width:65%; float:left;">
                            <fieldset>
                                <legend>Leave Ledger</legend>
                                @*<div id="div-region-leave-ledger" class="emp-history">
                                    <div id="div-Column" class="section" style="float: left; width: 100%; height: 100%;  overflow-x: visible; overflow-y: hidden">
                                        <div id="div-Columnchart" style="float: left; width: 100%; height: 100%;">
                                        </div>
                                    </div>
                                </div>*@

                                <table id="tblLeaveLedger" title="Leave Ledger" class="easyui-datagrid" style="width:100%; height:300px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#LeaveLedgertoolbar">
                                    <thead>
                                        <tr>
                                            <th field="LeaveShortName" width="100px;" align="left">Leave Head</th>
                                            <th field="TotalLeave" width="55px;" align="right">Total</th>
                                            <th field="Enjoyed" width="60px;" align="right">Enjoyed</th>
                                            <th field="Balance" width="60px;" align="right">Balance</th>
                                        </tr>
                                    </thead>
                                </table>
                            </fieldset>
                        </div>

                        @*<div style="width:30%; float:left;">
                            <fieldset>
                                <legend>Performance Graph</legend>
                                <div id="div-region-performance-graph" class="emp-history">
                                </div>
                            </fieldset>
                        </div>*@
                        <div style="width:35%;float:left;">
                            <fieldset>
                                <legend>Trainings</legend>
                                <div id="div-region-training" class="emp-history">
                                </div>
                            </fieldset>
                        </div>
                    </div>
                </div>

                <div title="Leave Application" data-options="iconCls:'icon-ok'" style="overflow: auto;padding: 0px; height:500px;">
                    <table id="tblLeaveApplication" class="easyui-datagrid" style=" width:100%; height:100%" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
                        <thead>
                            <tr>
                                <th field="EmployeeNameCode" width="110" align="left">Employee</th>
                                <th field="LeaveHeadName" width="75" align="left">Leave</th>
                                <th field="LeaveTypeInString" width="67" align="left">Leave Type</th>
                                <th field="StartDateTimeInString" width="100" align="left">Start</th>
                                <th field="EndDateTimeInString" width="100" align="left">End</th>
                                @*<th field="LeaveStatusInString" width="100" align="left">Status</th>*@
                                <th field="StatusOfLeave" width="100" align="left">Status</th>
                                @*<th field="Recommend" width="120" align="center">Recommend</th>*@
                                @*<th field="ApproveByName" width="120" align="center">Approved By</th>
                                <th field="HRApproveBYName" width="120" align="center">HR Approved By</th>*@
                            </tr>
                        </thead>
                    </table>
                    <div id="toolbar">
                        <input id="dtDateFrom" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        <span>to</span>
                        <input id="dtDateTo" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        <a id="btnSearchLeaveApp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true"></a>

                        <a id="btnNewLeaveApp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">New</a>
                        <a id="btnEditLeaveApp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
                        <a id="btnDeleteLeaveApp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                        <a id="btnViewLeaveApp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
                    </div>
                </div>

                @*<div title="Loan Application" data-options="iconCls:'icon-ok'" style="padding:0px; height:500px;">
                    <table id="tblEmployeeLoan" class="easyui-datagrid" style=" width:100%; height:100%" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarLoan">
                        <thead>
                            <tr>
                                <th field="Code" width="100" align="left">Code </th>
                                <th width="15%" align="right" data-options="field:'Amount',formatter:formatPrice">Amount</th>
                                <th width="15%" align="right" data-options="field:'Outstanding',formatter:formatPrice">Outstanding</th>
                                <th field="RequestDateInString" width="100" align="right">Request Date</th>
                                <th field="EffectToDateInString" width="100" align="right">Approve Date</th>
                                <th field="ApproveDateInSing" width="100" align="right">Inst. Balance</th>
                                <th field="StatusInString" width="100" align="left">Status</th>
                            </tr>
                        </thead>
                    </table>
                    <div id="toolbarLoan">
                        <input id="txtLoanCode" type="text" maxlength="4" class="resetfield" placeholder="Loan Code" />
                        <input id="txtCurrentYear" type="text" maxlength="2" class="resetfield" />
                        <select id="cboLoanStatus"></select>
                        <a id="btnSearchLoanApp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true"></a>
                        <a id="btnNewLoanApp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">New</a>
                        <a id="btnEditLoanApp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
                        <a id="btnDeleteLoanApp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                        <a id="btnViewLoanApp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
                        <a id="btnViewPaymentIns" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">Payment Instruction</a>
                    </div>
                </div>*@

                <div title="Reports" data-options="iconCls:'icon-ok'" style="padding:10px;">
                    <fieldset>
                        <legend>Attendance Report</legend>
                        <input id="dtDateFromAttendance" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        <span>to</span>
                        <input id="dtDateToAttendance" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />


                        <select id="cboPrintType" style="width:120px;">
                            <option value="0">-- Select --</option>
                            <option value="1">Time-Card-F2</option>
                        </select>
                        <a id="btnPrintTimeCard" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>


                    </fieldset>
                    <fieldset>
                        <legend>Pay Slip Report</legend>
                        <!--
                        <input id="dateCheck" type="checkbox" /> 
                        <input id="dtDateFromPaySlip" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        <span>to</span>
                        <input id="dtDateToPaySlip" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            -->
                        @*<a id="btnPrintPaySlipInBangla" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">In Bangla</a>
                        <a id="btnPrintPaySlipInEnglish" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">In English</a>*@
                        
                        <span id="regionDateFrom" style="padding-left: 8px;">
                            <span>
                                <select id="cboYear"></select> 
                            </span>
                            <span>
                                <select id="cboMonth"></select>
                            </span>
                        </span>

                        <select id="CboPrintItems" style="width:15%;">
                            <option value="0">--Print Items--</option>
                            <option value="1">Pay Slip(Bang)</option>
                            <option value="2">Pay Slip(Eng)</option>
                            @*<option value="3">Salary Sheet(F1)</option>
                            <option value="4">Salary Sheet(F2)</option>
                            <option value="5">Salary Sheet(F3)</option>
                            <option value="6">Salary Sheet(F4)</option>
                            <option value="7">Bank Sheet</option>
                            <option value="8">Cash Sheet</option>
                            <option value="9">Salary Certificate</option>
                            <option value="10">OT Sheet</option>*@
                            <option value="11">Pay Slip(XL)</option>
                            @*<option value="12">Salary Summary(XL)</option>*@
                        </select>  
                        <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="Print()"></a>
                        <a id="btnPrintXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true" onclick="PrintXL()"></a>
                    </fieldset>

                    <fieldset>
                        <legend>Tax Report</legend>

                        <select id="cboAssesmentYear" style="width:120px;"></select>
                        <select id="cboStatus">
                            <option value="1">Active</option>
                            <option value="2">Inactive</option>
                            <option value="3">All</option>
                        </select>

                        <a id="btnPrintTaxAss" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>


                    </fieldset>

                </div>

            <div title="Settlement Clearance" data-options="iconCls:'icon-ok'" style="overflow: auto;padding: 0px; height:500px;">
                <table id="tblEmployeeSettlementClearanceHistory" class="easyui-datagrid" title="Clearance History" style="width:100%;height:500px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#EmployeeSettlementClearanceHistoryToolbar">
                    <thead style="width:100%">
                        <tr style="width:100%">
                            <th field="EmployeeCode" width="100" align="left">Code</th>
                            <th field="EmployeeName" width="100" align="left">Name</th>
                            <th field="SettlementTypeInString" width="100" align="left">Sett. Type</th>
                            <th field="SubmissionDateInString" width="100" align="left">Submission Date</th>
                            <th field="LastWorkingDateInString" width="100" align="left">Last Working Day</th>
                            <th field="Reason" width="200" align="left">Reason</th>
                            <th field="CurrentStatusInString" width="100" align="left">Status</th>
                            <th field="Note" width="200" align="left">Note</th>
                        </tr>
                    </thead>
                </table>
                <div id="EmployeeSettlementClearanceHistoryToolbar" style="height:auto;">
                    <select id="cboClearanceStatus" style="width:15%;"></select>
                    <input id="txtNote" type="text" style="width:60%" placeholder="Note" />
                    <a id="btnSendHistory" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-forword" onclick="EmployeeSettlementClearanceSave()"></a>
                </div>
            </div>






            
            @*Salary Structure Tab*@
            <div title="Salary Structure" data-options="iconCls:'icon-ok'" style="overflow: auto;padding: 0px; height:500px;">
                
                <div style="max-height:497px">
                    <div class="div-parent">
                        <div class="div-child-4">
                            <div class="div-parent">
                                <div class="div-child-3 align-right">
                                    <label>S. Scheme :</label>
                                </div>
                                <div class="div-child-7">
                                    <label class="" id="lScheme"></label>
                                </div>
                            </div>
                            <div class="div-parent">
                                <div class="div-child-3 align-right">
                                    <label>P. Cycle :</label>
                                </div>
                                <div class="div-child-7">
                                    <input type="text" style="width: 40%" disabled="disabled" id="txtPaymentCycle" />
                                    
                                </div>
                            </div>
                            <div class="div-parent">
                                <div class="div-child-3 align-right">
                                    <label>Start Day :</label>
                                </div>
                                <div class="div-child-7">
                                    
                                    <label class="" id="lStartDay"></label>
                                </div>
                            </div>

                        </div>
                        <div class="div-child-6">
                            <table id="tblSalaryStructureDetailBasic" title="Basic" class="easyui-datagrid" style="width:100%; height: 178px; font-size: 11px;" fitcolumns="true" pagination="false" toolbar="#toolbarBasic" singleselect="true" autorowheight="false" data-options="singleSelect: false, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false">
                                <thead>
                                    <tr>
                                        <th field="SalaryHeadName" width="100" align="left">Salary Head</th>
                                        <th data-options="field:'Calculation',width:'100',align:'right',editor:{type:'numberbox',options:{precision:0}}" align="center">Equation</th>
                                        <th field="Amount" width="100" align="right" formatter="formatPrice">Total Amount</th>
                                    </tr>
                                </thead>
                            </table>
                            <div class="div-parent align-right">
                                <div class="div-child-7"><label>Total :</label></div>
                                <div class="div-child-3"><label id="lblBasicTotal"></label></div>
                            </div>
                        </div>
                    </div>
                    <div class="div-parent">
                        <table id="tblSalaryStructureDetailAllowance" title="Allowance" class="easyui-datagrid" style="width:97%; height:290px; font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="true" toolbar="#toolbarAllowance">
                            <thead>
                                <tr>
                                    <th field="SalaryHeadName" width="100" align="left">Allowance</th>
                                    <th field="AllowanceType" width="100" align="left">Type</th>
                                    <th field="Calculation" width="100" align="left" style="text-align: right">Value</th>
                                    <th field="PeriodInString" width="100 align=" left">Period</th>
                                    <th field="ConditionInString" width="100" align="left">Condition</th>
                                    <th field="ActivationAfterInString" width="100" align="left">Act. After</th>
                                    <th field="Amount" width="100" align="right" formatter="formatPrice">Total Amount</th>
                                </tr>
                            </thead>
                        </table>


                    </div>
                    <div class="div-parent">
                        <table style="font-size: 11px;">
                            <tr>
                                <td style="text-align:right; font-weight:bold;width: 450px;">
                                    Total Addition:&nbsp;
                                    <label id="lblAdditionAllowanceTotal"></label>

                                    &nbsp;&nbsp;&nbsp;&nbsp;
                                    Total Deduction:&nbsp;
                                    <label id="lblDeductionAllowanceTotal"></label>
                                </td>
                            </tr>
                        </table>
                    </div>

                </div>

            </div>


            @*Policy*@
            <div title="Policy" data-options="iconCls:'icon-ok'" style="overflow: auto;padding: 0px; height:500px;">
                <table id="tblPolicy" class="easyui-datagrid" title="Policy" style="width:100%;height:430px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#PolicyToolbar">
                    <thead style="width:100%">
                        <tr style="width:100%">
                            <th field="Description" width="300" align="left">Description</th>
                            <th field="FileName" width="200" align="left">File Name</th>

                        </tr>
                    </thead>
                </table>
                <div id="PolicyToolbar" style="height:auto;">
                    @*<a id="btnDownloadPolicy" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-ok" >Download</a>*@
                    @using (Html.BeginForm("DownloadAttachment", "CompanyDocument", FormMethod.Post, new { enctype = "multipart/form-data", target = "_blank", @class = "B" }))
                    {
                        <input type="text" name="CDID" id="txtCompanyDocumentAttchmentID" hidden="hidden" />
                        <input type="submit" value="Download" id="btnDownloadPolicy" style="font-weight: bold;" />
                    }
                </div>
                <div style="height:70px;width:100%;" id="divAccept">
                    <input type="checkbox" id="chkAccept" />I have read and agree to the Policy.
                    <button id="btnAccept">Accept</button>
                </div>
            </div>

            @*Employee Request on Attendance*@
            <div title="Request" data-options="iconCls:'icon-ok'" style="overflow: auto;padding: 0px; height:500px;">
                <table id="tblRequest" class="easyui-datagrid" title="Employee Request On Attendance" style="width:100%;height:500px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#RequestToolbar">
                    <thead style="width:100%">
                        <tr style="width:100%">
                            <th field="AttendanceDateInString" width="150" align="left">Date</th>
                            <th field="IsOSDInString" width="150" align="left">OSD</th>
                            <th field="Remark" width="150" align="left">Remark</th>
                            <th field="ApproveByName" width="150" align="left">Approve By</th>
                            <th field="ApproveDateInString" width="150" align="left">Approve Date</th>
                            <th field="status" width="150" align="left">Status</th>

                        </tr>
                    </thead>
                </table>
                <div id="RequestToolbar" style="height:auto;">
                    <input id="dtDateFromRequest" style="width: 150px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    <span>to</span>
                    <input id="dtDateToRequest" style="width: 150px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    <a id="btnSearchRequest" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="SearchRequest()"></a>
                    <br />
                    Attendance Date: <input id="dtDateRequest" style="width: 150px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    <input type="checkbox" id="chkIsOSDRequst"/> OSD
                    <input type="text" id="txtRemarkRequest" style="width: 200px;" placeholder="Enter your remark" />

                    <label>Recommend Person:</label>
                    <select id="cboRecommendPersonReq" style="width:10%"></select> Or
                    <input id="txtRecommendPersonReq" style="width:10%" class="resetfield" type="text" placeholder="Request To Recommend Person." />

                    <a id="btnSaveRequest" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                    <a id="btnDeleteRequest" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Delete</a>
                </div>
            </div>

            <div title="Document" data-options="iconCls:'icon-ok'" style="overflow: auto;padding: 0px; height:500px;">
                <table id="tblEmployeeDocuments" class="easyui-datagrid" title="Policy" style="width:100%;height:500px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarEmployeeDocument">
                    <thead style="width:100%">
                        <tr style="width:100%">
                            <th field="FileName" width="45%">File Name</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbarEmployeeDocument" style="height:auto;">
                    @*<a id="btnDownloadPolicy" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-ok" >Download</a>*@
                    @using (Html.BeginForm("DownloadAttachment", "Employee", FormMethod.Post, new { enctype = "multipart/form-data", target = "_blank", @class = "B" }))
                    {
                        <input type="text" name="EDID" id="txtEmployeeDocumentAttchmentID" hidden="hidden" />
                        <input type="submit" value="Download" id="btnDownloadDoc" style="font-weight: bold;" />
                    }
                </div>
            </div>

        </div>


        


        <div id="winShowAttendance" class="easyui-window winstyle" title="Attendance" style="width:25%;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <table id="tblShowAttendance" title="Attendance List" class="easyui-datagrid" style="width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                <thead>
                    <tr>
                        <th field="AttendanceDateInString" width="120px;" align="left">Date</th>
                        <th field="AttStatusInST" width="160px;;" align="left">Description</th>
                    </tr>
                </thead>
            </table>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;width:100%;">
                    <tr>
                        <td style="width:60%; text-align:right"></td>
                        <td style="width:40%;text-align:right;">
                            <a id="btnShowAttendanceClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <div id="LeaveLedgertoolbar">
            <select id="cboSession" style="width:25%;"></select>
            <a id="btnReloadLeaveLedger" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a>
        </div>
        </div>
</body>
</html>

<style type="text/css">
    .B{
            float:left;
        }
    .unresize{
        resize:none;
    }

    .lbl-Self-Info{
        font-size:11px;
        text-align:left;
    }

    .lbl-Name-Styler{
        font-size:14px;
        text-align:left;
        font-weight:200;
    }

    #div-region-notice{

        height:130px;
        scrollbar-3dlight-color:azure;
        overflow-x:hidden;
        overflow-y:scroll
    }

    .div-region-notice-warpper{
        width:100%;
        background-color:#f1f1f1;
        
    }

    .linkStyler {
        cursor: pointer;
        text-decoration:none;
        color:#0AAEEC;
    }

    .notice-title{
        font-size:13px;
        text-align:left;
        font-weight:200;
        color:#0094ff;
    }
    .notice-short-info{
        margin-top:3px;
        font-size:11px;
        text-align:left;
        color:#000000;
    }
    .notice-posted-info{
        margin-top:3px;
        margin-bottom:5px;
        font-size:10px;
        text-align:left;
        color:#808080; 

    }

    .emp-history{
        height:300px;
        font-size:11px;
    }


    /*---------------------------*/
       .field-required{
           margin-top:0px;
           color:red;
           font-size:11px;
       }

        #winLeaveApplication,#winEmployeeLoan,#winLoanPaymentInstruction {
            width: 600px;
            font-size: 11px;
        }
        .tdApp{
            padding-bottom:5px;
        }
        .tdApp .divLabel{
            float: left;
            width: 25%;
            text-align: right;
            margin-right: 1%;
            font-size: 11px;
        }
         .divInput input{
            float: left;
            width: 68%;
            font-size: 11px;
        }
          .divInput select{
            float: left;
            width: 69%;
            font-size: 11px;
        }

        .divInput-rd input{
            float: left;
            width: 5%;
            font-size: 11px;
        }
        .divInput-rd label{
            float:left;
            padding-right:5%;
            font-size: 11px;
            margin-top: 0px;
        }

         .lblAlign{
             padding-left:5px;
             text-align:left;
         }

        #dtStartDate, #dtEndDate {
            width: 190px;
        }
       
        .clsRecommendPerson select,.clsRecommendPerson input{
            float: left;
            width: 32%;
            font-size: 11px;
        }


        #dtDateFrom, #dtDateTo{
            width: 110px;
        }

       .divInput #txtSalaryInfo{
            float: left;
            width: 68%;
            font-size: 11px;
            height:60px;
         }
        #txtLoanAmount{
            width: 400px;
        }
       .divInput textarea{
            float: left;
            width: 68%;
            font-size: 11px;
            height:120px;
         }
       #txtLoanCode, #cboLoanStatus{
           width:13%;
           font-size:11px;
       }
       #txtCurrentYear{
            width: 30px;
        }


       /*-------------------*/

        .tdDual{
            padding-bottom:5px;
        }
        .tdDual .divLabel{
            float: left;
            width: 48%;
            text-align: right;
            margin-right: 1%;
            font-size: 11px;
        }
         .tdDual .divLabel-Value label{
            float: left;
            width: 50%;
            font-size: 11px;
        }

     /*-----------------------*/

     #dtDateFromAttendance, #dtDateToAttendance{
         width:105px;
     }


     /*------Pop Up-----*/

        #WinPopUp{
            min-height:35%;
            min-width:40%;
        }
        #popupContent{
            width:90%;
            height:100%;
            margin:2%
        }

       .popupInfo{
            height:85%;
        }
        
        #popupregionTitle{
            width:100%;
            height:auto;
            font-size:16px;
            color:#0AAEEC;
            text-align:justify;
            padding-bottom:5px;
        }
        #popuplblTitle{
            font-size:16px;
        }
        #popupregionDescription{
            width:100%;
            height:auto;
            font-size:12px;
            text-align:justify;
            overflow-x:hidden;
            overflow-y:scroll
        }
       
        .popupNotify{
            height:15%;
            text-align:right;
        }

        /* leave Application */
        #winLeaveApplication {
            width: 600px;
            font-size: 11px;
        }
        .tdApp{
            padding-bottom:5px;
        }
        .tdApp .divLabel{
            float: left;
            width: 25%;
            text-align: right;
            margin-right: 1%;
            font-size: 11px;
        }
        .divInput input{
            float: left;
            width: 68%;
            font-size: 11px;
        }
        .divInput select{
            float: left;
            width: 69%;
            font-size: 11px;
        }

        .divInput .txtfield-picker{
            margin-top:1px;
            width: 61%;
            text-align:left;
            font-size:11px;
        }
        .divInput .pick-btn-LeaveApp{
            width: 20px;
            text-align:center;
            font-size:11px;
        }
        .divInput-rd input{
            float: left;
            width: 5%;
            font-size: 11px;
        }
        .divInput-rd label{
            float:left;
            padding-right:5%;
            font-size: 11px;
            margin-top: 0px;
        }

        .lblAlign{
             padding-left:5px;
             text-align:left;
         }

        #dtStartDate, #dtEndDate {
            width: 135px;
        }

        .clsReportingPerson select,.clsReportingPerson input{
            float: left;
            width: 32%;
            font-size: 11px;
        }

</style>

<script type="text/javascript">

    var _sBaseAddress="";
    var _oEmployee = {EmployeeID:0};
    var _oLeaveLedgers=[];
    var _oEmployeeLeaveLedgers=[];
    var _oLeaveTypes=[];
    var _oLeaveApplication=null;

    var _oEmpSalaryStructure=null;
    var _oEmpSalaryStructureDetails=[];
    var _oLastEmployeeLoan=null;
    var _oEmployeeLoan=null;

    var _oERPs=[];
    var _nRecommendEmpID=0;
    var _nResponsibleEmpID=0;
    var _nRecommendEmpIDReq=0;
    var _nResponsibleEmpIDReq=0;
    var _nApprovalEmpID=0;

    var _oLeaveApplications=[];
    var _oACSs=[];

    var _oEmployeeRequest = { EROAID:0};
    var _ITaxAssessmentYear=[];
    var _oITaxLedgers=[];

    var bDNF = false;

    $(document).ready(function()
    {

        _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oEmployee = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oERPs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ERPs));
        var oNotices = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Notices));
        var oEmployeeSalaryStructures = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ESS));
        var oEmployeeSalaryStructureDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ESSD));
        var oSSchemeDetail = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.SSchemeDetail));
        var oCycleS = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.CycleS));
        var oSSDCalculation = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.SSDCalculation));


        _ITaxAssessmentYear = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ITaxAssessmentYear));
        _oITaxLedgers = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.TaxAssYear));

        var oDocs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.EmployeeDocuments));
        var oPolicys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompanyDocuments));
        var oEmployeeRequest = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.EROA));


        var oTrainings = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.TrainingDevelopments));
        _oEmployeeLeaveLedgers = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeLeaveLedgers));
        _oLeaveLedgers = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.LeaveLedgers));
        _oLeaveTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.LeaveTypes));
        _oLeaveApplications=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.LeaveApplications));
        DynamicRefreshList(_oLeaveApplications, "tblLeaveApplication");

        var oLoanStatuss= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.LoanStatus));
        _oEmpSalaryStructure = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeSalaryStructure));
        _oEmpSalaryStructureDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeSalaryStructureDetails));
        _oLastEmployeeLoan= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.LastEmployeeLoan));
        _oACSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.oACSs));
        console.log(_oEmployee);
        LoadNotice(oNotices);
        LoadEmployeeTrainings(oTrainings);
        LoadAssesmentYear();
        //BulidLeaveGraph(_oEmployeeLeaveLedgers,_oLeaveLedgers);
        debugger;
        if(oPolicys.length>0) {
            $('#divAccept').show();
        } else {
            $('#divAccept').hide();
        }

        $('#tblPolicy').datagrid('loadData', oPolicys);
        $('#tblEmployeeDocuments').datagrid('loadData', oDocs);
        
        $("#btnAccept").prop("disabled",true);
        

        $("#chkIsOSDRequst").prop("checked",true);
        $('#tblRequest').datagrid('loadData', oEmployeeRequest);

        $('#dtDateFrom, #dtDateTo, #dtDateFromRequest, #dtDateToRequest, #dtDateRequest').datebox("setValue", icsdateformat(new Date()));

        var  oLeaveTypeList=[];
        for(var i=0; i<_oLeaveTypes.length;i++)
        {
            if(_oLeaveTypes[i].Value!=0)
            {
                oLeaveTypeList.push(_oLeaveTypes[i]);
            }
        }

        $("#cboLeaveType").icsLoadCombo({
            List: oLeaveTypeList,
            OptionValue: "Value",
            DisplayText: "Text",
            //InitialValue: ""
        });

        $("#cboLeaveLedger").icsLoadCombo({
            List: _oEmployeeLeaveLedgers,
            OptionValue: "EmpLeaveLedgerID",
            DisplayText: "LeaveNameWithBalance",
            //InitialValue: ""
        });

        $("#cboLoanStatus").icsLoadCombo({
            List: oLoanStatuss,
            OptionValue: "Value",
            DisplayText: "Text",
            //InitialValue: ""
        });
        
        //$("#cboRecommendPerson").icsLoadCombo({
        //    List: _oERPs,
        //    OptionValue: "RPID",
        //    DisplayText: "ReportingPersonName",
        //    InitialValue: "----Select Recommend Person----"
        //});
        debugger;
        if(_oERPs.length > 0) {

            //var oTempList = [];
            //for(var i = 0; i < _oERPs.length; i++) {
            //    var obj = _oERPs[i];
            //    oTempList.push(obj);
            //}

            $("#cboRecommendPerson").icsLoadCombo({
                List: _oERPs,
                OptionValue: "RPID",
                DisplayText: "ReportingPersonName"
            });
            
            var firstText = "";
            for(var i = 0; i < _oERPs.length; i++) {
                if(_oERPs[i].RPID > 0) {
                    firstText = _oERPs[i].RPID;
                    break;
                }
            }

            $("#cboRecommendPerson").val(firstText);
        }
        else {
            $("#cboRecommendPerson").icsLoadCombo({
                List: _oERPs,
                OptionValue: "RPID",
                DisplayText: "ReportingPersonName",
                InitialValue: "----Select Recommend Person----"
            });
        }





        $("#cboRecommendPersonReq").icsLoadCombo({
            List: _oERPs,
            OptionValue: "RPID",
            DisplayText: "ReportingPersonName",
            InitialValue: "----Select Recommend Person----"
        });
        $('#txtLoanAmount').numberbox({min:0,precision:2});
        $('#txtCurrentYear').numberbox({ min: 0, precision: 0 });

        $("#WinPopUp").hide();
        $("#btnPrintXL").hide();
        var oClearanceStatus= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ClearanceStatus));
        ClearanceStatus(oClearanceStatus);

        var oSelfServiceClearances = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.SelfServiceClearances));
        DynamicRefreshList(oSelfServiceClearances, "tblEmployeeSettlementClearanceHistory");
        LeaveLedger(0);
        LoadSession();

        SetDateTime();
        var oDate=new Date();
        SetStartTime(oDate);
        //$('#dtDateFromPaySlip, #dtDateToPaySlip').datebox({disabled:true});

        $("#cboYear").val(0);
        $("#cboMonth").val(0);


        //alert(oSScheme[0].SalarySchemeName);
        //$("#lScheme").text(oCycleS[0].SalarySchemeName);
        //$("#txtPaymentCycle").val(oCycleS[0].PaymentCycleInString);
        //$("#lStartDay").text(oCycleS[0].StartDay);
        //DynamicRefreshList(oSSchemeDetail, "tblSalaryStructureDetailBasic");

        var oBasicSalarySchemeDetails = [];
        var oAllowanceSalarySchemeDetails = [];

        for(var i=0;i<oEmployeeSalaryStructureDetails.length;i++)
        {
            if(oEmployeeSalaryStructureDetails[i].SalaryHeadType==1 )
            {
                oBasicSalarySchemeDetails.push(oEmployeeSalaryStructureDetails[i]);
            }
            else if(oEmployeeSalaryStructureDetails[i].SalaryHeadType!=1)
            {
                oAllowanceSalarySchemeDetails.push(oEmployeeSalaryStructureDetails[i]);
            }
        }

        _nBasicTotalAmount = 0;

        //oSSchemeDetail.Calculation

        data = oBasicSalarySchemeDetails;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblSalaryStructureDetailBasic').datagrid('loadData', data);

        for(var i=0;i<oBasicSalarySchemeDetails.length;i++)
        {
            _nBasicTotalAmount = _nBasicTotalAmount+ parseFloat(oBasicSalarySchemeDetails[i].Amount);

        }

        $("#lblBasicTotal").html(formatPrice(_nBasicTotalAmount));

        _nAllowanceTotalAmount_Addition = 0;
        _nAllowanceTotalAmount_Deduction = 0;
        data = oAllowanceSalarySchemeDetails;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblSalaryStructureDetailAllowance').datagrid('loadData', data);

        for(var i=0;i<oAllowanceSalarySchemeDetails.length;i++)
        {
            if(oAllowanceSalarySchemeDetails[i].SalaryHeadType ==2)
            {
                _nAllowanceTotalAmount_Addition = parseFloat(_nAllowanceTotalAmount_Addition) + parseFloat(oAllowanceSalarySchemeDetails[i].Amount);
            }
            else if(oAllowanceSalarySchemeDetails[i].SalaryHeadType ==3)
            {
                _nAllowanceTotalAmount_Deduction = parseFloat(_nAllowanceTotalAmount_Deduction) + parseFloat(oAllowanceSalarySchemeDetails[i].Amount);
            }
        }

        $("#lblAdditionAllowanceTotal").html(formatPrice(_nAllowanceTotalAmount_Addition));
        $("#lblDeductionAllowanceTotal").html(formatPrice(_nAllowanceTotalAmount_Deduction));



        //data = oSSchemeDetail;
        //data = { "total": "" + data.length + "", "rows": data };
        //$('#tblSalaryStructureDetailAllowance').datagrid('loadData', data);

    });

    $('#chkAccept').click(function() {
        if ($(this).is(':checked')==true) {
            $("#btnAccept").prop("disabled",false);
        }else {
            $("#btnAccept").prop("disabled",true);
        }
    });

    function RefreshObject() {

        var obj = {
            EDAID:0,
            EmployeeID:_oEmployee.EmployeeID
        };
        return obj;
    }

    $("#btnAccept").click(function () {
        debugger; 
        var oEmpAcc = RefreshObject();
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmpAcc,
            ControllerName: "Dashboard",
            ActionName: "SaveAcceptance",
            TableId: "",
            IsWinClose: false
        };

        $.icsSave(obj, function (response) {
            if (response.status && response.obj.EDAID > 0) {
                debugger
                var tempObj = response.obj;
            }
        });

        
    });

    function LoadAssesmentYear()
    {
        console.log(_oITaxLedgers);
        var listItems="";
        listItems += "<option value=0>" +"Select Assesment Year" +"</option>";
        for (i = 0; i < _oITaxLedgers.length; i++)
        {
            listItems += "<option value='" + _oITaxLedgers[i].ITaxAssessmentYearID+"'>" + _oITaxLedgers[i].AssessmentYear+"</option>";
        }
        $("#cboAssesmentYear").html(listItems);
    }


    $("#btnPrintTaxAss").click(function() {
        debugger;
        var nAssesmentYearID = $("#cboAssesmentYear").val();
        var nType = $('#cboStatus').val();

        window.open(_sBaseAddress+ "/Dashboard/PDFTaxAssessment?nEmployeeID="+_oEmployee.EmployeeID +"&AssesmentYearID="+nAssesmentYearID + "&Status=" +nType, "_blank");
    });


    $("#btnDownloadDoc").click(function() {
        debugger;
        var oEmployeeDocumentAttachment = $("#tblEmployeeDocuments").datagrid("getSelected");
        if (oEmployeeDocumentAttachment == null || parseInt(oEmployeeDocumentAttachment.EDID) <= 0) {
            alert("Please select an item from list!");
            return false;
        }
        $('#txtEmployeeDocumentAttchmentID').val(oEmployeeDocumentAttachment.EDID);
    });



    $('#btnDeleteRequest').click(function (e)
    {
        debugger;
        var oEmployeeReq= $('#tblRequest').datagrid('getSelected');
        if (!confirm("Confirm to Delete?")) return ;

        if(oEmployeeReq==null || oEmployeeReq.EROAID<=0)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        var SelectedRowIndex=$('#tblRequest').datagrid('getRowIndex',oEmployeeReq);

        var tsv = ((new Date()).getTime()) / 1000;
        if (oEmployeeReq.EROAID > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/Dashboard/DeleteRequest",
                traditional: true,
                data: JSON.stringify({nEROAID:oEmployeeReq.EROAID,nts:tsv}),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var msg = jQuery.parseJSON(data);
                    if (msg == "Deleted")
                    {
                        alert("Deleted sucessfully");
                        $('#tblRequest').datagrid('deleteRow',SelectedRowIndex);

                    }
                    else
                    {
                        alert(msg);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    });


    $('#btnSaveRequest').click(function (e)
    {
        if($("#txtRemarkRequest").val() == "" || $("#txtRemarkRequest").val() == null) {
            alert("Please Enter remark");
            return;
        }
        debugger;

        var oReq = {
            EROAID : _oEmployeeRequest.EROAID,
            EmployeeID : _oEmployee.EmployeeID,
            AttendanceDate : $('#dtDateRequest').datebox('getValue'),
            IsOSD : $("#chkIsOSDRequst").is(":checked"),
            Remark : $("#txtRemarkRequest").val(),
            RecommendPersonID:_nRecommendEmpIDReq
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Dashboard/SaveRequest",
            traditional: true,
            data: JSON.stringify(oReq),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                var EmployeeRequest = jQuery.parseJSON(data);
                if(EmployeeRequest.EROAID > 0)
                {
                    alert("Your request Saved successfully");

                    $('#tblRequest').datagrid('appendRow', EmployeeRequest);
                    $('#dtDateRequest').datebox("setValue", icsdateformat(new Date()));
                    $("#txtRemarkRequest").val("");
                    $('#chkIsOSDRequst').attr('checked', false);
                }
                else {
                    alert(EmployeeRequest.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });
    function SearchRequest()
    {
        var sDateFrom = $('#dtDateFromRequest').datebox('getValue');
        var sDateTo = $('#dtDateToRequest').datebox('getValue');


        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress+ "/Dashboard/SearchRequest",
            data: JSON.stringify({sDateFrom:sDateFrom,sDateTo:sDateTo}),
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {
                debugger;
                var oReqs = jQuery.parseJSON(data);
                if(oReqs.length>0 && oReqs[0].ErrorMessage=="")
                {
                    $('#tblRequest').datagrid('loadData', oReqs);
                }
                else
                {
                    alert(oReqs[0].ErrorMessage);
                    $('#tblRequest').datagrid('loadData', []);
                }


            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }


    $("#btnDownloadPolicy").click(function() {

        var oCompanyDocumentAttachment = $("#tblPolicy").datagrid("getSelected");
        if (oCompanyDocumentAttachment == null || parseInt(oCompanyDocumentAttachment.CDID) <= 0) {
            alert("Please select an item from list!");
            return false;
        }
        //alert(oCompanyDocumentAttachment.CDID);
        $('#txtCompanyDocumentAttchmentID').val(oCompanyDocumentAttachment.CDID);
    });
    function LoadSession()
    {
        var listItems="";
        listItems += "<option value=0>" +"-Session-" +"</option>";
        for (i = 0; i < _oACSs.length; i++)
        {
            listItems += "<option value='" + _oACSs[i].ACSID+"'>" +  _oACSs[i].Session+"</option>";
        }
        $("#cboSession").html(listItems);
    }

    function ClearanceStatus(oClearanceStatus)
    {
        if(oClearanceStatus != null)
        {
            var oList=[];
            for(var i=0; i<oClearanceStatus.length;i++)
            {
                if(oClearanceStatus[i].Value!=0 && oClearanceStatus[i].Value!=1)
                {
                    oList.push(oClearanceStatus[i]);
                }
            }
            if(oList.length >0)
            {
                $("#cboClearanceStatus").icsLoadCombo({
                    List: oList,
                    OptionValue: "Value",
                    DisplayText: "Text",
                    InitialValue:""
                });
            }
        }
    }

    $(document).keydown(function (e) { if (e.keyCode == 27) { $('#div').icsWindow('close'); } });

    $('#tab-seftservice').tabs({
        onSelect:function(title){
            //if(title=="Dashboard"){}
            //if(title=="Leave Application"){ GetsLeaveApp(false);}
            //else
            if(title=="Loan Application"){
                $('#txtLoanCode').val("");
                $('#txtCurrentYear').numberbox("setValue", parseInt(((new Date()).getFullYear().toString()).substring(2, 4)));
                $('#cboLoanStatus').val(0);
                GetsLoanApp();
            }

            else if(title=="Reports"){
                $('#dtDateFromAttendance, #dtDateToAttendance').datebox("setValue", icsdateformat(new Date()));
            }


        }
    });

    /*------------ Region Dash Board----------------------*/

    function LoadNotice(oNotices){

        var sNotice='';
        for(var i=0;i<oNotices.length;i++){
            sNotice = sNotice +'<div class="div-region-notice-warpper">';
            sNotice = sNotice + '<div class="notice-title"> <a href="#" class="linkStyler" onclick="NoticeView('+oNotices[i].NoticeID+')"> '+ oNotices[i].Title +'</a></div>';
            sNotice = sNotice + '<div class="notice-short-info">'+ oNotices[i].DescriptionSummary+'</div>';
            sNotice = sNotice + '<div class="notice-posted-info">Posted By: '+ oNotices[i].PostedBy +" on date "+ oNotices[i].IssueDateInStr +'</div>';
            sNotice = sNotice + '</div>';
        }

        $( "#div-region-notice" ).append(sNotice);

    }

    function LoadEmployeeTrainings(oTrainings){

        var sTraining='';
        for(var i=0;i<oTrainings.length;i++){
            sTraining = sTraining +'<div class="div-region-notice-warpper">';
            sTraining = sTraining + '<div class="notice-title"> <a href="#" class="linkStyler" onclick="TrainingView('+oTrainings[i].TDID+')"> '+ oTrainings[i].CourseName  +'</a></div>';
            sTraining = sTraining + '<div class="notice-short-info"> Duration: '+ oTrainings[i].StartDateInString +' to '+ oTrainings[i].EndDateInString +'</div>';
            sTraining = sTraining + '<div class="notice-posted-info">Status: '+ oTrainings[i].TrainingStatusInString +",  Posted On: "+ oTrainings[i].StartDateInString +'</div>';
            sTraining = sTraining + '</div>';
        }

        $( "#div-region-training" ).append(sTraining);
    }

    function BulidLeaveGraph(oLeaveHeads,oLeaveLedgers){
        if(oLeaveHeads.length<=0 && oLeaveLedgers.length<=0){ return false;}
        var oLeaveBars= GenerateLeaveBar(oLeaveHeads,oLeaveLedgers);


        var oGraphData=[];
        var oGraphTicks=[];

        var oDataPonint=[];
        var oTickPonint=[];

        var oAllowedLeaves=[];
        var oTakenLeaves=[];

        for(var i=0; i<oLeaveBars.length; i++)
        {
            oDataPonint=[];
            oDataPonint.push(i);
            oDataPonint.push(oLeaveBars[i].LeaveAllowed);
            oAllowedLeaves.push(oDataPonint);

            oDataPonint=[];
            oDataPonint.push(i);
            oDataPonint.push(oLeaveBars[i].LeaveTaken);
            oTakenLeaves.push(oDataPonint);

            oDataPonint=[];
            oDataPonint.push(i);
            oDataPonint.push(oLeaveBars[i].LeaveApplied);
            oTakenLeaves.push(oDataPonint);

            oTickPonint=[];
            oTickPonint.push(i);
            oTickPonint.push('<center>'+oLeaveBars[i].LeaveName+'</center>');
            oGraphTicks.push(oTickPonint);
        }


        var oGraphOptions = {
            series: {
                bars: {
                    show: true,
                    barWidth: 0.2,
                    order: 1,
                    align: "center",
                    horizontal: false,
                    number:function(v, bar) {return  v ;}
                }
            },

            points:{show:true},
            valueLabels: { show: true },
            xaxis: {
                axisLabel: 'Leave',
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 10,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 10,
                //tickLength: 5,
                //tickSize: 10,
                ticks: oGraphTicks
            },

            yaxis: {
                axisLabel: "Type",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 3,
                tickFormatter: function (v, axis) {
                    return v;
                }
            },


            legend: {
                noColumns: 0,
                labelBoxBorderColor: "#000000",
                position: "nw"
            },

            grid: {
                hoverable: true,
                borderWidth: 0,
                backgroundColor: { colors: ["#ffffff", "#EDF5FF","#B1FFFF"]
                }
            }
        };
        //

        oGraphDataSet = [
                        { label: '', data: oAllowedLeaves, color: "#5925E9" },
                        { label: '', data: oTakenLeaves, color: "Green" },
                        { label: '', data: oTakenLeaves, color: "#C241D6" },
        ];
        var oColumnChartPolt=$.plot($("#div-Columnchart"), oGraphDataSet, oGraphOptions);
        $.plot($("#div-Columnchart"), oGraphDataSet, oGraphOptions);
        $("#div-Columnchart").UseTooltip();
        //if(oLeaveBars.length>0){SetPoint(oColumnChartPolt);}

    }

    function GenerateLeaveBar(oLeaveHeads,oLeaveLedgers){

        var nDays=0;
        var nAppliedDays=0;
        var oLeaveBar=null;
        var oLeaveBars=[];

        for(var i=0;i<oLeaveHeads.length;i++){
            oLeaveBar=null; nDays=0;
            for(var j=0;j<oLeaveLedgers.length;j++){
                if(oLeaveHeads[i].LeaveName==oLeaveLedgers[j].LeaveName){
                    nDays= parseInt(oLeaveLedgers[j].ApprovedFull)*3 + parseInt(oLeaveLedgers[j].ApprovedHalf)*2+ parseInt(oLeaveLedgers[j].ApprovedShort);
                    if(nDays>0){
                        nDays= parseFloat(parseInt(nDays)/3).toFixed(2);
                    }

                    nAppliedDays=parseInt(oLeaveLedgers[j].AppliedFull)*3 + parseInt(oLeaveLedgers[j].AppliedHalf)*2+ parseInt(oLeaveLedgers[j].AppliedShort);
                    if(nAppliedDays>0){
                        nAppliedDays= parseFloat(parseInt(nAppliedDays)/3).toFixed(2);
                    }
                    break;
                }
            }
            oLeaveBar={
                LeaveName: oLeaveHeads[i].LeaveName,
                LeaveAllowed: parseInt(oLeaveHeads[i].TotalDay),
                LeaveTaken: parseFloat(nDays),
                LeaveApplied: parseFloat(nAppliedDays)
            };
            oLeaveBars.push(oLeaveBar);
        }
        return oLeaveBars;
    }

    var previousPoint = null, previousLabel = null;

    $.fn.UseTooltip = function () {
        $(this).bind("plothover", function (event, pos, item) {
            if (item) {
                if ((previousLabel != item.series.label) || (previousPoint != item.dataIndex)) {
                    previousPoint = item.dataIndex;
                    previousLabel = item.series.label;
                    $("#tooltip").remove();
                    var x = item.datapoint[0];
                    var y = item.datapoint[1];
                    var sColor = item.series.color;

                    ShowTooltip(item.pageX,
                        item.pageY,
                        sColor,
                        "<strong>"+ GetLeaveInfo(item.dataIndex,sColor)  + "</strong>"); // item.series.label
                }
            } else {
                $("#tooltip").remove();
                previousPoint = null;
            }
        });
    };

    function ShowTooltip(x, y, color, contents) {
        $('<div id="tooltip">' + contents + '</div>').css({
            position: 'absolute',
            display: 'none',
            top: y - 20,
            left: x - 20,
            border: '1px solid ' + color,
            padding: '3px',
            'font-size': '8px',
            'border-radius': '5px',
            'background-color': '#fff',
            'font-family': 'Verdana, Arial, Helvetica, Tahoma, sans-serif',
            opacity: 0.9
        }).appendTo("body").fadeIn(200);
    }

    function GetLeaveInfo(nIndex,sColor){

        var sLeaveInfo='';
        if(sColor=='Green'){
            if(_oLeaveLedgers.length>0){
                for(var i=0;i<_oLeaveLedgers.length;i++){
                    if(_oLeaveLedgers[i].LeaveName ==_oEmployeeLeaveLedgers[parseInt(nIndex)].LeaveName){

                        sLeaveInfo = (parseInt(_oLeaveLedgers[i].ApprovedFull)>0) ? parseInt(_oLeaveLedgers[i].ApprovedFull) +' Full '  :'';
                        sLeaveInfo = sLeaveInfo + ((parseInt(_oLeaveLedgers[i].ApprovedHalf)>0) ?  parseInt(_oLeaveLedgers[i].ApprovedHalf) +' Half '  :'');
                        sLeaveInfo = sLeaveInfo + ((parseInt(_oLeaveLedgers[i].ApprovedShort)>0) ?  parseInt(_oLeaveLedgers[i].ApprovedShort) +' Short'  :'');
                        break;
                    }
                }
                if(sLeaveInfo==''){ sLeaveInfo="No Leave Taken."; }
            }
            else{
                sLeaveInfo="No Leave Taken.";
            }
        }
        else if(sColor=="#C241D6"){
            if(_oLeaveLedgers.length>0){
                for(var i=0;i<_oLeaveLedgers.length;i++){
                    if(_oLeaveLedgers[i].LeaveName ==_oEmployeeLeaveLedgers[parseInt(nIndex)].LeaveName){

                        sLeaveInfo = "Applied: " + ((parseInt(_oLeaveLedgers[i].AppliedFull)>0) ? parseInt(_oLeaveLedgers[i].AppliedFull) +' Full '  :'');
                        sLeaveInfo = sLeaveInfo + ((parseInt(_oLeaveLedgers[i].AppliedHalf)>0) ?  parseInt(_oLeaveLedgers[i].AppliedHalf) +' Half '  :'');
                        sLeaveInfo = sLeaveInfo + ((parseInt(_oLeaveLedgers[i].AppliedShort)>0) ?  parseInt(_oLeaveLedgers[i].AppliedShort) +' Short'  :'');
                        break;
                    }
                }
                if(sLeaveInfo==''){ sLeaveInfo="Yet Not Applied."; }
            }
            else{
                sLeaveInfo="Yet Not Applied.";
            }
        }
        else{
            sLeaveInfo= 'Max '+ _oEmployeeLeaveLedgers[parseInt(nIndex)].TotalDay +' days Allowed.';
        }
        return sLeaveInfo;
    }

    /*------------ Region Leave Application ----------------------*/

    $('#tblLeaveApplication').datagrid({ onSelect: function (rowIndex, rowData) { OperationPerformsLeaveApplication(rowIndex, rowData); } });

    $("#btnSearchLeaveApp").click(function () {
        GetsLeaveApp(true);
    });

    //$("#btnNewLeaveApp").click(function () {
    //    ResetControllLeaveApp();
    //    LayoutControllLeaveApp("btnNewLeaveApp");
    //    $("#winLeaveApplication").icsWindow('open');
    //});

    $("#btnNewLeaveApp").click(function () {

        ResetControllLeaveApp();
        LayoutControllLeaveApp("btnNewLeaveApp");
        GetEmployeeLeaveLedge();
        $("#txtExpenseLocation").val('N/A');
        $("#txtReason").val('N/A');
        $("#txtEmployee").focus();

        $("#winLeaveApplication").icsWindow('open');
    });

    $('#btnEditLeaveApp').click(function (e) {

        var oLeaveApplication = $("#tblLeaveApplication").datagrid("getSelected");
        if (oLeaveApplication == null || oLeaveApplication.LeaveApplicationID <= 0) { alert("Please select an item from list!"); return; }
        if (oLeaveApplication.ApproveBy) { alert('Unable to edit. Already approved.'); return; }

        ResetControllLeaveApp();
        LayoutControllLeaveApp("btnEditLeaveApp");
        GetLeaveAppInfo(oLeaveApplication,'Edit Leave Info');
        //$("#winLeaveApplication").icsWindow('open');
    });

    $('#btnViewLeaveApp').click(function (e) {

        var oLeaveApplication = $("#tblLeaveApplication").datagrid("getSelected");
        if (oLeaveApplication == null || oLeaveApplication.LeaveApplicationID <= 0) { alert("Please select an item from list!"); return; }

        ResetControllLeaveApp();
        LayoutControllLeaveApp("btnViewLeaveApp");
        GetLeaveAppInfo(oLeaveApplication,'Leave Info');

    });

    $("#btnDeleteLeaveApp").click(function () {

        var oLeaveApplication = $("#tblLeaveApplication").datagrid("getSelected");
        if (oLeaveApplication == null || oLeaveApplication.LeaveApplicationID <= 0) { alert("Please select an item from list!"); return; }
        if (oLeaveApplication.ApproveBy) { alert('Unable to delete. Already approved.'); return; }
        if (!confirm("Confirm to Delete?")) return;

        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oLeaveApplication,
            ControllerName: "LeaveApplication",
            ActionName: "DeleteLeaveApplication",
            TableId: "tblLeaveApplication",
            IsWinClose: false
        };
        $.icsDelete(obj);
    });

    $("#btnSaveLeaveApplication").click(function () {
        if (!ValidationLeaveApp()) return;
        var oLeaveApplication = RefreshObjectLeaveApp();
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLeaveApplication,
            ObjectId: oLeaveApplication.LeaveApplicationID,
            ControllerName: "LeaveApplication",
            ActionName: (oLeaveApplication.LeaveApplicationID>0) ? "LeaveApplication_Update": "LeaveApplication_Insert",
            TableId: "tblLeaveApplication",
            IsWinClose: false,
            Message: (oLeaveApplication.LeaveApplicationID>0)?"Update Successfully." : "Save Successfully."
        };
        $.icsSave(obj, function (response) {

            if (response.status && response.obj != null) {
                if (response.obj.LeaveApplicationID > 0) {
                    $('#winLeaveApplication').icsWindow('close');
                }
            }
        });
    });

    $("#btnCloseLeaveApplication").click(function (e) {
        $('#winLeaveApplication').icsWindow('close');
    });

    function OperationPerformsLeaveApplication(rowIndex, rowData) {
        if (rowData != null && rowData.LeaveApplicationID > 0) {

            if (rowData.ApproveBy>0 || rowData.RecommendedBy>0) {
                $('#btnEditLeaveApp').hide();
                $("#btnDeleteLeaveApp").hide();
                $("#btnSaveLeaveApplication").hide();
            }
            else {
                $('#btnEditLeaveApp').show();
                $("#btnDeleteLeaveApp").show();
                $("#btnSaveLeaveApplication").show();
            }

        }
    }

    //function LayoutControllLeaveApp(buttonId) {

    //    $('.clsRecommendPerson select,.clsRecommendPerson span').hide();
    //    $('#txtRecommendPerson').css({"width":"68%"});

    //    if (buttonId === "btnViewLeaveApp") {
    //        $("#winLeaveApplication input").prop("disabled", true);
    //        $("#winLeaveApplication select").prop("disabled", true);
    //        $("#btnSaveLeaveApplication").hide();
    //    }
    //    else {
    //        $("#winLeaveApplication input").prop("disabled", false);
    //        $("#winLeaveApplication select").prop("disabled", false);
    //        $("#btnSaveLeaveApplication").show();
    //        if(_oERPs.length>0){
    //            $('.clsRecommendPerson select,.clsRecommendPerson span').show();
    //            $('.clsRecommendPerson select,.clsRecommendPerson input').css({"width":"32%"})
    //        }
    //    }
    //    $(".disabled input").prop("disabled", true);
    //}

    function LayoutControllLeaveApp(buttonId) {

        if (buttonId === "btnViewLeaveApp" || buttonId === "btnRecommendation" || buttonId === "btnApprove" || buttonId === "btnCancel" )
        {
            $("#winLeaveApplication input").prop("disabled", true);
            $("#winLeaveApplication select").prop("disabled", true);
            $("#btnSaveLeaveApplication, #btnRecommendLeaveApplication, #btnApproveLeaveApplication, #btnCancelLeaveApplication").hide();
            $(".tdRecommendation,.tdApproval,.tdCancel").hide();
            $('.clsReportingPerson select,.clsReportingPerson span').hide();
            $('#txtRequestToApproval').css({"width":"68%"});
            if(buttonId === "btnViewLeaveApp"){
                var oLeaveApplication = $("#tblLeaveApplication").datagrid("getSelected");
                if(oLeaveApplication.RecommendedBy>0){ $(".tdRecommendation").show(); }
                if (oLeaveApplication.ApproveBy>0) { $(".tdApproval").show(); }
                if(oLeaveApplication.CancelledBy>0) { $(".tdCancel").show(); }
            }

            else if(buttonId === "btnRecommendation"){
                $(".tdRecommendation,.clsReportingPerson").show();

                $("#txtRecommendationNote,#cboRequestToApproval,#txtRequestToApproval").prop("disabled",false);
                if(_oERPs.length>0){
                    $('.clsReportingPerson select,.clsReportingPerson span').show();
                    $('#txtRequestToApproval').css({"width":"32%"});
                }
                $("#btnRecommendLeaveApplication").show();
            }
            else if(buttonId === "btnApprove"){
                $(".tdRecommendation,.tdApproval").show();
                $("#txtApprovalNote").prop("disabled",false);
                $("#btnApproveLeaveApplication").show();
            }
            else if(buttonId === "btnCancel"){
                $(".tdRecommendation,.tdApproval,.tdCancel").show();
                $("#txtCancelNote").prop("disabled",false);
                $("#btnCancelLeaveApplication").show();
            }
        }
        else {
            $("#winLeaveApplication input").prop("disabled", false);
            $("#txtEmployee,#btnEmployeePicker,#btnResetEmployeePicker").prop("disabled",(buttonId === "btnNew")?false:true);
            $("#winLeaveApplication select").prop("disabled", false);
            $("#btnSaveLeaveApplication").show();
            $(".tdRecommendation,.tdApproval,.tdCancel").hide();
            $("#btnRecommendLeaveApplication, #btnApproveLeaveApplication, #btnCancelLeaveApplication").hide();
            $("#rdbtnPaid").prop("disabled", true);
            $("#rdbtnUnPaid").prop("disabled", true);
            $("#txtDurationInHour").prop("disabled", true);

        }
        $(".disabled input").prop("disabled", true);
    }


    //function ResetControllLeaveApp() {
    //
    //    var oDate=new Date();
    //    var sDate=(oDate.getMonth()+1)+'/'+oDate.getDate()+'/'+oDate.getFullYear()+' '+oDate.getHours()+':'+oDate.getMinutes();
    //    _oLeaveApplication = null;
    //    $(".resetfield").val("");
    //    $(".resetlbl").html("");

    //    $("#rdbtnLeaveOfApplication,#rdbtnLeaveOfAbsence").prop("checked", false);
    //    $("#rdbtnLeaveOfApplication").prop("checked", true);
    //    $("#cboLeaveLedger,#cboLeaveType").val(0);
    //    $('#dtStartDate, #dtEndDate').datebox("setValue", sDate);
    //    $("#rdbtnPaid,#rdbtnUnPaid").prop("checked", false);
    //    $("#rdbtnPaid").prop("checked", true);
    //    $('#cboRecommendPerson').val(0);
    //    $("#txtRecommendPerson").val("");
    //    _nRecommendEmpID=0;
    //}

    function ResetControllLeaveApp() {


        var oDate=new Date();
        var sDate=(oDate.getMonth()+1)+'/'+oDate.getDate()+'/'+oDate.getFullYear()+' '+oDate.getHours()+':'+oDate.getMinutes();
        _oLeaveApplication = null;
        //_oEmployee={EmployeeID:0};
        $(".resetfield").val("");
        $(".resetlbl").html("");
        $("#txtDurationInHour").val("");
        $("#txtExpenseLocation").val('N/A');
        $("#txtReason").val('N/A');

        //$("#rdbtnLeaveOfApplication,#rdbtnLeaveOfAbsence").prop("checked", false);
        //$("#rdbtnLeaveOfApplication").prop("checked", true);
        $("#cboLeaveLedger").empty();
        $("#cboLeaveType").val(1);
        $('#dtStartDate, #dtEndDate').datebox("setValue", sDate);
        $("#rdbtnPaid,#rdbtnUnPaid").prop("checked", false);
        $("#rdbtnPaid").prop("checked", true);
        $("#txtEmployee").val(_oEmployee.Name+"["+_oEmployee.Code+"]");
    }

    function RefreshControlLeaveApp(oLeaveApplication) {
        _oLeaveApplication = oLeaveApplication;
        //if(_oLeaveApplication.ApplicationNatureInt == 1){ $("#rdbtnLeaveOfApplication").prop("checked", true); }
        //else if(_oLeaveApplication.ApplicationNatureInt == 2){ $("#rdbtnLeaveOfAbsence").prop("checked", true);  }
        $('#dtStartDate').datebox("setValue", _oLeaveApplication.StartDateTimeInString);
        $('#dtEndDate').datebox("setValue", _oLeaveApplication.EndDateTimeInString);
        $('#cboLeaveLedger').val(_oLeaveApplication.EmpLeaveLedgerID);
        $('#cboLeaveType').val(_oLeaveApplication.LeaveTypeInt);
        $("#txtExpenseLocation").val(_oLeaveApplication.Location);
        $("#txtReason").val(_oLeaveApplication.Reason);

        if(_oLeaveApplication.IsUnPaid){ $("#rdbtnUnPaid").prop("checked", true);}
        else{ $("#rdbtnPaid").prop("checked", true);}


        if(_oERPs.length>0 && _oERPs[0].RPID==_oLeaveApplication.RequestForRecommendation){
            $('.clsRecommendPerson input,.clsRecommendPerson span').hide();
            $('.clsRecommendPerson select').show();
            $('#cboRecommendPerson').css({"width":"69%"});
            $('#cboRecommendPerson').val(_oLeaveApplication.RequestForRecommendation);
        }
        else{
            _nRecommendEmpID=_oLeaveApplication.RequestForRecommendation;
            $('#txtRecommendPerson').val(_oLeaveApplication.RequestedForRecommendation);
        }

        _nResponsibleEmpID=_oLeaveApplication.ResponsiblePersonID;
        $('#txtResponsiblePerson').val(_oLeaveApplication.ResponsiblePersonName);

        $("#lblApplicationStatus").html("<b></b>");
        if(_oLeaveApplication.CancelledBy){ $("#txtCancelNote").val(_oLeaveApplication.CancelledNote);}

    }

    //function RefreshObjectLeaveApp() {
    //
    //    var nRecommendEmpID=0;
    //    if( _nRecommendEmpID>0){
    //        nRecommendEmpID=_nRecommendEmpID;
    //    }
    //    else{
    //        nRecommendEmpID=$('#cboRecommendPerson').val();
    //    }

    //    var oLeaveApplication = {
    //        LeaveApplicationID: (_oLeaveApplication != null) ? _oLeaveApplication.LeaveApplicationID : 0,
    //        EmployeeID: (_oLeaveApplication != null) ? _oLeaveApplication.EmployeeID : _oEmployee.EmployeeID,
    //        EmpLeaveLedgerID: $('#cboLeaveLedger').val(),
    //        ApplicationNatureInt: (($("#rdbtnLeaveOfApplication").is(":checked"))? 1 : 2),
    //        LeaveTypeInt: $('#cboLeaveType').val(),
    //        StartDateTime: $('#dtStartDate').datebox('getValue'),
    //        EndDateTime: $('#dtEndDate').datebox('getValue'),
    //        Location: $("#txtExpenseLocation").val(),
    //        Reason: $("#txtReason").val(),
    //        RequestForRecommendation: nRecommendEmpID, //(_oLeaveApplication != null && _oLeaveApplication.LeaveApplicationID>0) ? _oLeaveApplication.RequestForRecommendation : nRecommendEmpID,
    //        RecommendedBy: (_oLeaveApplication != null) ? _oLeaveApplication.RecommendedBy : 0,
    //        RecommendedByDate: (_oLeaveApplication != null) ? _oLeaveApplication.RecommendedByDate : icsdateformat(new Date()),
    //        ApproveBy: (_oLeaveApplication != null) ? _oLeaveApplication.ApproveBy : 0,
    //        ApproveByDate: (_oLeaveApplication != null) ? _oLeaveApplication.ApproveByDate : icsdateformat(new Date()),
    //        IsUnPaid: (($("#rdbtnUnPaid").is(":checked"))? true : false),
    //        RecommendationNote: (_oLeaveApplication != null) ? _oLeaveApplication.RecommendationNote : "",
    //        ApprovalNote: (_oLeaveApplication != null) ? _oLeaveApplication.ApprovalNote : "",
    //        LeaveStatusInt: (_oLeaveApplication != null) ? _oLeaveApplication.LeaveStatusInt : 1,
    //        RequestForAproval:(_oLeaveApplication != null) ? _oLeaveApplication.RequestForAproval : 0
    //    };
    //    return oLeaveApplication;
    //}

    function RefreshObjectLeaveApp() {

        var nRecommendEmpID=0;
        if( _nRecommendEmpID>0){
            nRecommendEmpID=_nRecommendEmpID;
        }
        else{
            nRecommendEmpID=$('#cboRecommendPerson').val();
        }

        var nRequestForAproval=0;
        if((_oLeaveApplication != null && _oLeaveApplication.LeaveApplicationID>0 ) && _nApprovalEmpID>0){
            nRequestForAproval=_nApprovalEmpID;
        }
        else{
            nRequestForAproval=$('#cboRequestToApproval').val();
        }
        var nLeaveType=$('#cboLeaveType').val();
        var nDurationInHour=0;
        var sStartDateTime= $('#dtStartDate').datebox('getValue');
        var sEndDateTime= $('#dtEndDate').datebox('getValue');

        if(nLeaveType==2 || nLeaveType==3)
        {
            nDurationInHour=$("#txtDurationInHour").val();
            nDurationInHour=nDurationInHour*60;
            sEndDateTime=sStartDateTime;
        }

        var oLeaveApplication = {
            LeaveApplicationID: (_oLeaveApplication != null) ? _oLeaveApplication.LeaveApplicationID : 0,
            EmployeeID: (_oLeaveApplication != null) ? _oLeaveApplication.EmployeeID : _oEmployee.EmployeeID,
            EmpLeaveLedgerID: $('#cboLeaveLedger').val(),
            ApplicationNatureInt: 1/*(($("#rdbtnLeaveOfApplication").is(":checked"))? 1 : 2)*/,
            LeaveTypeInt: nLeaveType,
            StartDateTime: sStartDateTime,
            EndDateTime: sEndDateTime,
            Location: $("#txtExpenseLocation").val(),
            Reason: $("#txtReason").val(),
            RequestForRecommendation: nRecommendEmpID,//(_oLeaveApplication != null && _oLeaveApplication.LeaveApplicationID>0) ? _oLeaveApplication.RequestForRecommendation : ((_oERPs.length>0)?_oERPs[0].RPID:0),
            RecommendedBy: (_oLeaveApplication != null) ? _oLeaveApplication.RecommendedBy : 0,
            RecommendedByDate: (_oLeaveApplication != null) ? _oLeaveApplication.RecommendedByDate : icsdateformat(new Date()),
            ApproveBy: (_oLeaveApplication != null) ? _oLeaveApplication.ApproveBy : 0,
            ApproveByDate: (_oLeaveApplication != null) ? _oLeaveApplication.ApproveByDate : icsdateformat(new Date()),
            IsUnPaid: (($("#rdbtnUnPaid").is(":checked"))? true : false),
            RecommendationNote: (_oLeaveApplication != null && _oLeaveApplication.RecommendedBy>0) ? _oLeaveApplication.RecommendationNote : $.trim($("#txtRecommendationNote").val()),
            ApprovalNote: (_oLeaveApplication != null && _oLeaveApplication.ApproveBy>0) ? _oLeaveApplication.ApprovalNote :  $.trim($("#txtApprovalNote").val()),
            LeaveStatusInt: (_oLeaveApplication != null) ? _oLeaveApplication.LeaveStatusInt : 1,
            CancelledBy : (_oLeaveApplication != null && _oLeaveApplication.CancelledBy>0) ? _oLeaveApplication.CancelledBy : 0,
            CancelledNote : (_oLeaveApplication != null && _oLeaveApplication.CancelledBy>0) ? _oLeaveApplication.CancelledNote :  $.trim($("#txtCancelNote").val()),
            RequestForAproval: nRequestForAproval,
            ResponsiblePersonID:_nResponsibleEmpID,
            LeaveDuration:nDurationInHour

        };
        return oLeaveApplication;
    }

    //function ValidationLeaveApp(){

    //    var sCurrentDate=icsdateformat(new Date());
    //    var sStartDate=icsdateformat(new Date($('#dtStartDate').datebox('getValue')));
    //    var sEndDate= icsdateformat(new Date($('#dtEndDate').datebox('getValue')));
    //

    //    if (!$("#rdbtnLeaveOfApplication").is(":checked") && !$("#rdbtnLeaveOfAbsence").is(":checked")) {
    //        alert("Please select application type.");
    //        return false;
    //    }

    //    if($("#rdbtnLeaveOfApplication").is(":checked")){
    //        //Leave Application
    //        if(new Date($('#dtEndDate').datebox('getValue')) < new Date($('#dtStartDate').datebox('getValue'))) { alert("End Date must be later than Start Date in case of Leave Application."); return false; }
    //    }

    //    if($("#rdbtnLeaveOfAbsence").is(":checked")){
    //        //LeaveOfAbsence
    //        if(new Date(sStartDate) == new Date(sCurrentDate))  { alert("Current Date Not Allowed For Start Date!"); return false; }
    //        else if(new Date(sEndDate) == new Date(sCurrentDate)) { alert("Current Date Not Allowed for End Date in past in case of Leave of Absence.!"); return false; }
    //        else if(new Date(sStartDate) > new Date(sCurrentDate)) { alert("Start Date have to be in past in case of Leave of Absence."); return false; }
    //        else if(new Date(sEndDate) > new Date(sCurrentDate)) { alert("End Date have to be in past in case of Leave of Absence."); return false; }
    //        else if(new Date($('#dtEndDate').datebox('getValue')) < new Date($('#dtStartDate').datebox('getValue'))) { alert("End Date must be later than Start Date in case of Leave of Absence."); return false; }
    //    }

    //    if ($("#cboLeaveLedger").val() == 0) {
    //        alert("Please select a leave.");
    //        $("#cboLeaveLedger").addClass("errorFieldBorder");
    //        $("#cboLeaveLedger").focus();
    //        return false;
    //    } else {
    //        $("#cboLeaveLedger").removeClass("errorFieldBorder");
    //    }


    //    if ($("#cboLeaveType").val() == 0) {
    //        alert("Please select a leave type.");
    //        $("#cboLeaveType").addClass("errorFieldBorder");
    //        $("#cboLeaveType").focus();
    //        return false;
    //    } else {
    //        $("#cboLeaveType").removeClass("errorFieldBorder");
    //    }


    //    if(_oEmployeeLeaveLedgers.length>0){

    //        var nDays=((new Date(sEndDate)).getTime() - (new Date(sStartDate)).getTime())/(1000*3600*24);

    //        var nHour= ((new Date($('#dtEndDate').datebox('getValue'))).getTime() - (new Date($('#dtStartDate').datebox('getValue'))).getTime())/(1000*3600);

    //        for(var i=0; i<_oEmployeeLeaveLedgers.length;i++){
    //            if(_oEmployeeLeaveLedgers[i].EmpLeaveLedgerID==$("#cboLeaveLedger").val()){
    //                var nFullLeave= parseInt(_oEmployeeLeaveLedgers[i].LeaveBalance);
    //                var nHalfLeave= (_oEmployeeLeaveLedgers[i].HalfLeaveInStr!="")? parseInt(_oEmployeeLeaveLedgers[i].HalfLeaveInStr.substring(2,3)):0;
    //                var nShortLeave= (_oEmployeeLeaveLedgers[i].ShortLeaveInStr!="")? parseInt(_oEmployeeLeaveLedgers[i].ShortLeaveInStr.substring(2,3)):0;

    //                if($("#cboLeaveType").val()==1){

    //                    if(nFullLeave<=0){
    //                        if(nHalfLeave>0){
    //                            alert("No full leave remaining. You can take a half leave.");
    //                        }
    //                        else if(nHalfLeave<=0 && nShortLeave>0){
    //                            alert("No full & half leave remaining. You can take a short leave.");
    //                        }
    //                        else{
    //                            alert("No leave remaining.");
    //                        }
    //                        return false;
    //                    }
    //                    else if(nDays>nFullLeave){
    //                        var sText= (nFullLeave>1) ? "leaves" : "leave";
    //                        alert("You can enjoy max "+ nFullLeave +" "+sText);
    //                        return false;
    //                    }
    //                    //else if(nHour<8){
    //                    //    alert("For a full leave min 8 hours required."); return false;
    //                    //}
    //                }
    //                else if($("#cboLeaveType").val()==2){
    //                    if(nFullLeave<=0 && nHalfLeave<=0){
    //                        if(nShortLeave>0){
    //                            alert("No full & half leave remaining. You can take a half leave.");
    //                        }
    //                        else{
    //                            alert("No leave remaining");
    //                        }
    //                        return false;
    //                    }
    //                    else if(nHour<=3){
    //                        alert("For a half leave min 3 hours plus required."); return false;
    //                    }
    //                    else if(nHour>=8){
    //                        alert("Leave duration does'not exceed 8 hours for a half leave."); return false;
    //                    }
    //                }
    //                else if($("#cboLeaveType").val()==3){
    //                    if(nFullLeave<=0 && nHalfLeave<=0 && nShortLeave<=0){
    //                        alert("No leave remaining");
    //                        return false;
    //                    }
    //                    else if(nHour>3){
    //                        alert("Leave duration does'not exceed 3 hours for a short leave."); return false;
    //                    }
    //                    else if(nHour<=0){
    //                        alert("No time duration found for a short leave."); return false;
    //                    }

    //                }

    //            }
    //        }

    //    }


    //    if ($("#cboLeaveType").val() == 2 || $("#cboLeaveType").val() == 3) {
    //        if((sStartDate != sEndDate) || (new Date($('#dtEndDate').datebox('getValue')) < new Date($('#dtStartDate').datebox('getValue')))) { alert("Start Date and End Date have to be same for Half or Short Leave."); return false; }
    //    }

    //    if ($.trim($("#txtExpenseLocation").val()).length == 0) {
    //        alert("Please enter leave expense location.");
    //        $("#txtExpenseLocation").addClass("errorFieldBorder");
    //        $("#txtExpenseLocation").focus();
    //        return false;
    //    } else {
    //        $("#txtExpenseLocation").removeClass("errorFieldBorder");
    //    }

    //    if ($.trim($("#txtReason").val()).length == 0) {
    //        alert("Please enter leave reason.");
    //        $("#txtReason").addClass("errorFieldBorder");
    //        $("#txtReason").focus();
    //        return false;
    //    } else {
    //        $("#txtReason").removeClass("errorFieldBorder");
    //    }

    //    return true;
    //}

    function ValidationLeaveApp(){

        var sCurrentDate=icsdateformat(new Date());
        var sStartDate=icsdateformat(new Date($('#dtStartDate').datebox('getValue')));
        var sEndDate= icsdateformat(new Date($('#dtEndDate').datebox('getValue')));


        if(_oLeaveApplication == null && ( _oEmployee==null || _oEmployee.EmployeeID<=0)){
            alert("Please enter employee.");
            $("#txtEmployee").addClass("errorFieldBorder");
            $("#txtEmployee").focus();
            return false;
        }
        else {
            $("#txtEmployee").removeClass("errorFieldBorder");
        }

        //if (!$("#rdbtnLeaveOfApplication").is(":checked") && !$("#rdbtnLeaveOfAbsence").is(":checked")) {
        //    alert("Please select application type.");
        //    return false;
        //}

        //if($("#rdbtnLeaveOfApplication").is(":checked")){
        //    if(new Date($('#dtEndDate').datebox('getValue')) < new Date($('#dtStartDate').datebox('getValue'))) { alert("End Date must be later than Start Date in case of Leave Application."); return false; }
        //}

        //if($("#rdbtnLeaveOfAbsence").is(":checked")){
        //    if(new Date(sStartDate) == new Date(sCurrentDate))  { alert("Current Date Not Allowed For Start Date!"); return false; }
        //    else if(new Date(sEndDate) == new Date(sCurrentDate)) { alert("Current Date Not Allowed for End Date in past in case of Leave of Absence.!"); return false; }
        //    //else if(new Date(sStartDate) > new Date(sCurrentDate)) { alert("Start Date have to be in past in case of Leave of Absence."); return false; }
        //    //else if(new Date(sEndDate) > new Date(sCurrentDate)) { alert("End Date have to be in past in case of Leave of Absence."); return false; }
        //    else if(new Date($('#dtEndDate').datebox('getValue')) < new Date($('#dtStartDate').datebox('getValue'))) { alert("End Date must be later than Start Date in case of Leave of Absence."); return false; }
        //}

        if ($("#cboLeaveLedger").val() == 0) {
            alert("Please select a leave.");
            $("#cboLeaveLedger").addClass("errorFieldBorder");
            $("#cboLeaveLedger").focus();
            return false;
        } else {
            $("#cboLeaveLedger").removeClass("errorFieldBorder");
        }

        if ($("#cboLeaveType").val() == 0) {
            alert("Please select a leave type.");
            $("#cboLeaveType").addClass("errorFieldBorder");
            $("#cboLeaveType").focus();
            return false;
        } else {
            if ($("#cboLeaveType").val() == 2 || $("#cboLeaveType").val() == 3)
            {
                var nDurationInHour=$("#txtDurationInHour").val();
                if(nDurationInHour<=0)
                {
                    alert("Please enter leave duration in hour.");
                    $("#txtDurationInHour").addClass("errorFieldBorder");
                    $("#txtDurationInHour").focus();
                    return false;
                }
            }
            $("#cboLeaveType").removeClass("errorFieldBorder");
        }


        //if(_oEmployeeLeaveLedgers.length>0){

        //    var nDays=((new Date(sEndDate)).getTime() - (new Date(sStartDate)).getTime())/(1000*3600*24);

        //    var nHour= ((new Date($('#dtEndDate').datebox('getValue'))).getTime() - (new Date($('#dtStartDate').datebox('getValue'))).getTime())/(1000*3600);

        //    for(var i=0; i<_oEmployeeLeaveLedgers.length;i++){
        //        if(_oEmployeeLeaveLedgers[i].EmpLeaveLedgerID==$("#cboLeaveLedger").val()){
        //            var nFullLeave= parseInt(_oEmployeeLeaveLedgers[i].LeaveBalance);
        //            var nHalfLeave= (_oEmployeeLeaveLedgers[i].HalfLeaveInStr!="")? parseInt(_oEmployeeLeaveLedgers[i].HalfLeaveInStr.substring(2,3)):0;
        //            var nShortLeave= (_oEmployeeLeaveLedgers[i].ShortLeaveInStr!="")? parseInt(_oEmployeeLeaveLedgers[i].ShortLeaveInStr.substring(2,3)):0;

        //            if($("#cboLeaveType").val()==1){

        //                if(nFullLeave<=0){
        //                    if(nHalfLeave>0){
        //                        alert("No full leave remaining. You can take a half leave.");
        //                    }
        //                    else if(nHalfLeave<=0 && nShortLeave>0){
        //                        alert("No full & half leave remaining. You can take a short leave.");
        //                    }
        //                    else{
        //                        alert("No leave remaining.");
        //                    }
        //                    return false;
        //                }
        //                else if(nDays>nFullLeave){
        //                    var sText= (nFullLeave>1) ? "leaves" : "leave";
        //                    alert("You can enjoy max "+ nFullLeave +" "+sText);
        //                    return false;
        //                }
        //                //else if(nHour<8){
        //                //    alert("For a full leave min 8 hours required."); return false;
        //                //}
        //            }
        //            else if($("#cboLeaveType").val()==2){
        //                if(nFullLeave<=0 && nHalfLeave<=0){
        //                    if(nShortLeave>0){
        //                        alert("No full & half leave remaining. You can take a half leave.");
        //                    }
        //                    else{
        //                        alert("No leave remaining");
        //                    }
        //                    return false;
        //                }
        //                else if(nHour<=3){
        //                    alert("For a half leave min 3 hours plus required."); return false;
        //                }
        //                else if(nHour>=8){
        //                    alert("Leave duration does'not exceed 8 hours for a half leave."); return false;
        //                }
        //            }
        //            else if($("#cboLeaveType").val()==3){
        //                if(nFullLeave<=0 && nHalfLeave<=0 && nShortLeave<=0){
        //                    alert("No leave remaining");
        //                    return false;
        //                }
        //                else if(nHour>3){
        //                    alert("Leave duration does'not exceed 3 hours for a short leave."); return false;
        //                }
        //                else if(nHour<=0){
        //                    alert("No time duration found for a short leave."); return false;
        //                }
        //            }

        //        }
        //    }

        //}


        //if ($("#cboLeaveType").val() == 2 || $("#cboLeaveType").val() == 3) {
        //    if((sStartDate != sEndDate) || (new Date($('#dtEndDate').datebox('getValue')) < new Date($('#dtStartDate').datebox('getValue')))) { alert("Start Date and End Date have to be same for Half or Short Leave."); return false; }
        //}

        if ($.trim($("#txtExpenseLocation").val()).length == 0) {
            alert("Please enter leave expense location.");
            $("#txtExpenseLocation").addClass("errorFieldBorder");
            $("#txtExpenseLocation").focus();
            return false;
        } else {
            $("#txtExpenseLocation").removeClass("errorFieldBorder");
        }

        if ($.trim($("#txtReason").val()).length == 0) {
            alert("Please enter leave reason.");
            $("#txtReason").addClass("errorFieldBorder");
            $("#txtReason").focus();
            return false;
        } else {
            $("#txtReason").removeClass("errorFieldBorder");
        }

        return true;
    }

    //function GetLeaveAppInfo(oLeaveApplication,sTitle){
    //    var obj =
    //    {
    //        BaseAddress: _sBaseAddress,
    //        Object: oLeaveApplication,
    //        ControllerName: "LeaveApplication",
    //        ActionName: "GetLeaveApp",
    //        IsWinClose: false
    //    };

    //    $.icsDataGet(obj, function (response) {

    //        if (response.status && response.obj != null) {
    //            if (response.obj.LeaveApplicationID > 0) {
    //                RefreshControlLeaveApp(oLeaveApplication);
    //                $("#winLeaveApplication").icsWindow('open', sTitle);
    //            }
    //            else { response.obj.ErrorMessage; }
    //        }
    //    });
    //}

    function GetLeaveAppInfo(oLeaveApplication,sTitle){
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oLeaveApplication,
            ControllerName: "LeaveApplication",
            ActionName: "GetLeaveApp",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj != null) {
                if (response.obj.LeaveApplicationID > 0) {

                    EmployeeLeaveLedger(response.obj.EmployeeLeaveLedgers);
                    RefreshControlLeaveApp(response.obj);
                    $("#winLeaveApplication").icsWindow('open', sTitle);
                }
                else { response.obj.ErrorMessage; }
            }
        });
    }

    function GetsLeaveApp(IsDateSearch){


        var oLeaveApplication={
            Params:IsDateSearch+'~'+ $('#dtDateFrom').datebox("getValue")+'~'+$('#dtDateTo').datebox("getValue")+'~'+_oEmployee.EmployeeID
        }

        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oLeaveApplication,
            ControllerName: "LeaveApplication",
            ActionName: "GetsLeaveApp",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length>0) {
                if (response.objs[0].LeaveApplicationID > 0) {
                    DynamicRefreshList(response.objs, "tblLeaveApplication");
                }
                else {
                    if(IsDateSearch){ response.objs[0].ErrorMessage; }
                    DynamicRefreshList([], "tblLeaveApplication");
                }
            }
            else{
                if(IsDateSearch){ alert("No leave application found");}
                DynamicRefreshList([], "tblLeaveApplication");
            }
        });
    }

    $('#cboRecommendPerson').change(function(e){
        $("#txtRecommendPerson").val("");
        _nRecommendEmpID=0;
    });

    $('#txtRecommendPerson').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtRecommendPerson").val());
            if(sCodeName==''){alert("Please enter name or code to search."); return;}
            SearchEmployeeByText(sCodeName, true, false);

        }
        else if(code == 8){
            $("#txtRecommendPerson").val("");
            _nRecommendEmpID=0;
            $('#cboRecommendPerson').prop('disabled',false);
        }
    });
    $('#cboRecommendPersonReq').change(function(e){
        $("#txtRecommendPersonReq").val("");
        _nRecommendEmpIDReq=0;
    });

    $('#txtRecommendPersonReq').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtRecommendPersonReq").val());
            if(sCodeName==''){alert("Please enter name or code to search."); return;}
            SearchEmployeeByTextReq(sCodeName, true, false);

        }
        else if(code == 8){
            $("#txtRecommendPersonReq").val("");
            _nRecommendEmpIDReq=0;
            $('#cboRecommendPersonReq').prop('disabled',false);
        }
    });

    $('#txtResponsiblePerson').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtResponsiblePerson").val());
            if(sCodeName==''){alert("Please enter name or code to search."); return;}
            SearchEmployeeByText(sCodeName, false, true);

        }
        else if(code == 8){
            $("#txtResponsiblePerson").val("");
            _nResponsibleEmpID=0;
            $('#txtResponsiblePerson').prop('disabled',false);
        }
    });

    function SearchEmployeeByText(sEmpNameCode, IsRecommend, IsResponsible){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam, IsRecommend, IsResponsible);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj, IsRecommend, IsResponsible)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if(IsRecommend)
                {
                    _nRecommendEmpID=oreturnObj.EmployeeID;
                    $('#txtRecommendPerson').val(oreturnObj.NameCode);
                    $('#cboRecommendPerson').val(0);
                    $('#cboRecommendPerson').prop('disabled',true);
                }
                else if(IsResponsible)
                {
                    _nResponsibleEmpID=oreturnObj.EmployeeID;
                    $('#txtResponsiblePerson').val(oreturnObj.NameCode);
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        if(IsRecommend)
                        {
                            _nRecommendEmpID=oreturnObj.EmployeeID;
                            $('#txtRecommendPerson').val(oreturnObj.NameCode);
                            $('#cboRecommendPerson').val(0);
                            $('#cboRecommendPerson').prop('disabled',true);
                        }
                        else if(IsResponsible)
                        {
                            _nResponsibleEmpID=oreturnObj.EmployeeID;
                            $('#txtResponsiblePerson').val(oreturnObj.NameCode);
                        }
                    }
                }
            }
        });
    }



    function SearchEmployeeByTextReq(sEmpNameCode, IsRecommend, IsResponsible){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearchReq',
                        winclass:'clsEmployeePickerTextSearchReq',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearchReq(oPickerParam, IsRecommend, IsResponsible);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearchReq(oPickerobj, IsRecommend, IsResponsible)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearchReq')
            {
                if(IsRecommend)
                {
                    _nRecommendEmpIDReq=oreturnObj.EmployeeID;
                    $('#txtRecommendPersonReq').val(oreturnObj.NameCode);
                    $('#cboRecommendPersonReq').val(0);
                    $('#cboRecommendPersonReq').prop('disabled',true);
                }
                else if(IsResponsible)
                {
                    _nResponsibleEmpIDReq=oreturnObj.EmployeeID;
                    $('#txtResponsiblePersonReq').val(oreturnObj.NameCode);
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearchReq')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        if(IsRecommend)
                        {
                            _nRecommendEmpIDReq=oreturnObj.EmployeeID;
                            $('#txtRecommendPersonReq').val(oreturnObj.NameCode);
                            $('#cboRecommendPersonReq').val(0);
                            $('#cboRecommendPersonReq').prop('disabled',true);
                        }
                        else if(IsResponsible)
                        {
                            _nResponsibleEmpIDReq=oreturnObj.EmployeeID;
                            $('#txtResponsiblePersonReq').val(oreturnObj.NameCode);
                        }
                    }
                }
            }
        });
    }

    /*------------ Region Loan Application ----------------------*/

    $('#tblEmployeeLoan').datagrid({ onSelect: function (rowIndex, rowData) { OperationPerformsLoanApplication(rowIndex, rowData); } });

    $("#txtLoanCode").keydown(function (e) {

        $('#txtLoanCode').removeClass("errorFieldBorder");
        if (e.keyCode == 13) // Enter Press
        {
            if (!$.trim($("#txtLoanCode").val()).length) {

                alert("Please enter order no.");
                $('#txtLoanCode').focus();
                $('#txtLoanCode').val("");
                $('#txtLoanCode').addClass("errorFieldBorder");
                return;
            }
            else { $('#txtLoanCode').removeClass("errorFieldBorder"); }
            GetsLoanApp();
        }
        else if (e.keyCode === 08) {
            $('#txtLoanCode').val("");
        }
    });

    $("#btnSearchLoanApp").click(function () {
        GetsLoanApp();
    });

    $("#btnNewLoanApp").click(function () {
        ResetControllLoanApp();
        LayoutControllLoanApp("btnNewLoanApp");
        InitializeLoaninfo();
        $("#winEmployeeLoan").icsWindow('open');
    });

    $('#btnEditLoanApp').click(function (e) {

        var oEmployeeLoan = $("#tblEmployeeLoan").datagrid("getSelected");
        if (oEmployeeLoan == null || oEmployeeLoan.EmployeeLoanID <= 0) { alert("Please select an item from list!"); return; }

        if (oEmployeeLoan.StatusInt>=2) { alert('Unable to edit. Already accepted.'); return; }

        ResetControllLoanApp();
        LayoutControllLoanApp("btnEditLoanApp");
        InitializeLoaninfo();
        GetLoanAppInfo(oEmployeeLoan,'Edit Loan Info');
    });

    $('#btnViewLoanApp').click(function (e) {

        var oEmployeeLoan = $("#tblEmployeeLoan").datagrid("getSelected");
        if (oEmployeeLoan == null || oEmployeeLoan.EmployeeLoanID <= 0) { alert("Please select an item from list!"); return; }

        ResetControllLoanApp();
        LayoutControllLoanApp("btnViewLoanApp");
        InitializeLoaninfo();
        GetLoanAppInfo(oEmployeeLoan,'Leave Info');

    });

    $("#btnDeleteLoanApp").click(function () {

        var oEmployeeLoan = $("#tblEmployeeLoan").datagrid("getSelected");
        if (oEmployeeLoan == null || oEmployeeLoan.EmployeeLoanID <= 0) { alert("Please select an item from list!"); return; }
        if (oEmployeeLoan.StatusInt>=2) { alert('Unable to delete. Already accepted.'); return; }
        if (!confirm("Confirm to Delete?")) return;

        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeLoan,
            ControllerName: "EmployeeLoan",
            ActionName: "DeleteEmployeeLoan",
            TableId: "tblEmployeeLoan",
            IsWinClose: false
        };
        $.icsDelete(obj);
    });

    $("#btnSaveEmployeeLoan").click(function () {
        if (!ValidationLoanApp()) return;
        var oEmployeeLoan = RefreshObjectLoanApp();
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeLoan,
            ObjectId: oEmployeeLoan.EmployeeLoanID,
            ControllerName: "EmployeeLoan",
            ActionName: "EmployeeLoan_IU",
            TableId: "tblEmployeeLoan",
            IsWinClose: true,
            Message: (oEmployeeLoan.EmployeeLoanID>0)?"Update Successfully." : "Save Successfully."
        };
        $.icsSave(obj);
    });

    $("#btnCloseEmployeeLoan").click(function (e) {
        $('#winEmployeeLoan').icsWindow('close');
    });

    function OperationPerformsLoanApplication(rowIndex, rowData) {
        if (rowData != null && rowData.EmployeeLoanID > 0) {
            if (rowData.StatusInt>=2) {
                $('#btnEditLoanApp').hide();
                $("#btnDeleteLoanApp").hide();
                $("#btnSaveEmployeeLoan").hide();
            }
            else {
                $('#btnEditLoanApp').show();
                $("#btnDeleteLoanApp").show();
                $("#btnSaveEmployeeLoan").show();
            }

        }
    }

    function InitializeLoaninfo(){
        if(_oEmpSalaryStructure.ESSID >0){ $('#txtSalaryInfo').val(_oEmpSalaryStructure.SalarySchemeName +"\nGross: "+ formatPrice(_oEmpSalaryStructure.GrossAmount) +"\nBasic: "+ formatPrice(_oEmpSalaryStructureDetails[0].Amount)+"(BDT)");}
        if(_oLastEmployeeLoan.EmployeeLoanID >0){$('#txtLastLoanInfo').val(_oLastEmployeeLoan.LastLoanInString);}
        else{$('#txtLastLoanInfo').val("No Loan avialbale.");}
    }

    function LayoutControllLoanApp(buttonId) {
        if (buttonId === "btnViewLoanApp") {
            $("#winEmployeeLoan input").not('#txtLastLoanInfo').prop("disabled", true);
            $("#winEmployeeLoan select").prop("disabled", true);
            //$("#winEmployeeLoan textarea").prop("disabled", true);
            $("#btnSaveEmployeeLoan").hide();
        }
        else {
            $("#winEmployeeLoan input").not('#txtLastLoanInfo').prop("disabled", false);
            $("#winEmployeeLoan select").prop("disabled", false);
            //$("#winEmployeeLoan textarea").prop("disabled", false);
            $("#btnSaveEmployeeLoan").show();
        }
        $(".disabled input").prop("disabled", true);
    }

    function ResetControllLoanApp() {
        _oEmployeeLoan = null;
        $(".resetfield").val("");
        $(".resetlbl").html("");
        $('#txtLoanAmount').numberbox('setValue','');
    }

    function RefreshControlLoanApp(oEmployeeLoan) {
        _oEmployeeLoan = oEmployeeLoan;

        $("#txtLoanPurpose").val(_oEmployeeLoan.Purpose);
        $('#txtLoanAmount').numberbox('setValue',_oEmployeeLoan.Amount);
        $("#txtSpecialNote").val(_oEmployeeLoan.RequestNote);
        $("#lblLoanAppStatus").html("<b>Loan Code: </b>"+ _oEmployeeLoan.Code+ "<b>     Loan Status: </b>" + _oEmployeeLoan.StatusInString);

    }

    function RefreshObjectLoanApp() {
        var oEmployeeLoanHistory ={
            EmployeeLoanID : 0,
            StatusInt : 1,
            PreviousStatusInt : 0
        }

        var oEmployeeLoan = {
            EmployeeLoanID: (_oEmployeeLoan != null) ? _oEmployeeLoan.EmployeeLoanID : 0,
            EmployeeID: _oEmployee.EmployeeID,
            Purpose: $('#txtLoanPurpose').val(),
            Amount: $('#txtLoanAmount').numberbox('getValue'),
            RequestNote: $('#txtSpecialNote').val(),
            StatusInt : 1,
            EmployeeLoanHistory : oEmployeeLoanHistory
        };

        return oEmployeeLoan;
    }

    function ValidationLoanApp(){

        if (_oEmpSalaryStructure.ESSID<=0) {
            alert("This employee has no salary structure.");
            $("#txtSalaryInfo").addClass("errorFieldBorder");
            $("#txtSalaryInfo").focus();
            return false;
        } else {
            $("#txtSalaryInfo").removeClass("errorFieldBorder");
        }

        if ($.trim($("#txtLoanPurpose").val()).length == 0) {
            alert("Please enter purpose of the loan.");
            $("#txtLoanPurpose").addClass("errorFieldBorder");
            $("#txtLoanPurpose").focus();
            return false;
        } else {
            $("#txtLoanPurpose").removeClass("errorFieldBorder");
        }

        if( $.trim($('#txtLoanAmount').numberbox('getValue')).length==0 || parseFloat($('#txtLoanAmount').numberbox('getValue'))<=0)
        {
            alert("Please enter loan amount");
            return false;
        }

        return true;
    }

    function GetLoanAppInfo(oEmployeeLoan,sTitle){
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeLoan,
            ControllerName: "EmployeeLoan",
            ActionName: "GetEmployeeLoan",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj != null) {
                if (response.obj.EmployeeLoanID > 0) {
                    RefreshControlLoanApp(oEmployeeLoan);
                    $("#winEmployeeLoan").icsWindow('open', sTitle);
                }
                else { response.obj.ErrorMessage; }
            }
        });
    }

    function GetsLoanApp(){

        var sLoanCode = $.trim($("#txtLoanCode").val());
        if (sLoanCode!="" && sLoanCode.length < 4) {
            var sVal = "1";
            for (var i = sLoanCode.length; i < 3; i++) {
                sVal += "0";
            }
            sLoanCode = sVal + sLoanCode;
            sLoanCode = sLoanCode + "/" + $('#txtCurrentYear').numberbox("getValue");
        }

        var oEmployeeLoan={
            Params: sLoanCode +'~'+ $('#cboLoanStatus').val()+'~'+_oEmployee.EmployeeID
        }

        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeLoan,
            ControllerName: "EmployeeLoan",
            ActionName: "GetsEmployeeLoan",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length>0) {
                if (response.objs[0].EmployeeLoanID > 0) {
                    DynamicRefreshList(response.objs, "tblEmployeeLoan");
                }
                else {
                    response.objs[0].ErrorMessage;
                    DynamicRefreshList([], "tblEmployeeLoan");
                }
            }
            else{
                alert("No leave application found");
                DynamicRefreshList([], "tblEmployeeLoan");
            }
        });
    }

    /*------------ Payment Instruction ----------------------*/

    $("#btnViewPaymentIns").click(function () {

        var oEmployeeLoan = $("#tblEmployeeLoan").datagrid("getSelected");
        if (oEmployeeLoan == null || oEmployeeLoan.EmployeeLoanID <= 0) { alert("Please select an item from list!"); return; }

        ResetControllPaymentInstruction();



        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeLoan,
            ControllerName: "EmployeeLoan",
            ActionName: "GetLoanPaymentInstruction",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj != null) {

                if (response.obj.EmployeeLoanID > 0) {
                    RefreshControlPaymentInstruction(response.obj);
                    $("#winLoanPaymentInstruction").icsWindow('open');
                }
                else { response.obj.ErrorMessage; }
            }
        });


    });

    $("#btnCloseLoanPaymentInstruction").click(function (e) {
        $('#winLoanPaymentInstruction').icsWindow('close');
    });

    function ResetControllPaymentInstruction(){
        $(".resetfield").val("");
        $(".resetlbl").html("");
        DynamicRefreshList([], "tblLoanPaymentInstruction");
    }

    function RefreshControlPaymentInstruction(oEmployeeLoan){

        $("#lblLoanApproveAmount").html(formatPrice(oEmployeeLoan.ApproveAmount));
        $("#lblLoanOutstandingAmount").html(formatPrice(oEmployeeLoan.Outstanding));
        $("#lblLoanLifeCycle").html(formatPrice(oEmployeeLoan.LifeCycleInMonth) +' month');
        $("#lblLoanInterestRate").html(formatPrice(oEmployeeLoan.InterestRate)+"%");

        DynamicRefreshList(oEmployeeLoan.EmployeeLoanInstallmentPolicys, "tblLoanPaymentInstruction");
    }

    /*------------ Report ----------------------*/

    $("#btnPrintAttendanceAcc").click(function () {
        var nts = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/AttendanceDaily/PrintDateWiseAttendance?sEmployeeIDs="+ _oEmployee.EmployeeID +"&nLocationID=0&sDepartmentIds=&sDesignationIds=&sSalarySchemeIDs=&DateFrom="+$('#dtDateFromAttendance').datebox("getValue")+"&DateTo="+$('#dtDateToAttendance').datebox("getValue")+"&ts="+nts, "_blank");

    });

    $("#btnPrintAttendance").click(function () {
        var nts = ((new Date()).getTime()) / 1000;
        window.open(_sBaseAddress+ "/AttendanceDaily/PrintDateWiseAttendance_Comp?sEmployeeIDs="+_oEmployee.EmployeeID+"&nLocationID=0&sDepartmentIds=&sDesignationIds=&sSalarySchemeIDs=&DateFrom="+$('#dtDateFromAttendance').datebox("getValue")+"&DateTo="+$('#dtDateToAttendance').datebox("getValue")+"&ts="+nts, "_blank");
    });

    //$("#btnPrintPaySlipInBangla").click(function () {
    //    var nts = ((new Date()).getTime()) / 1000;
    //    var sDate=$('#dtDateFromPaySlip').datebox("getValue")+","+$('#dtDateToPaySlip').datebox("getValue");
    //    window.open(_sBaseAddress + "/EmployeeSalary/rptPaySlipInBangla?nEmpID="+_oEmployee.EmployeeID+"&sDate="+sDate+"&nts="+nts, "_blank");

    //});

    //$("#btnPrintPaySlipInEnglish").click(function () {
    //    var nts = ((new Date()).getTime()) / 1000;
    //    var sDate=$('#dtDateFromPaySlip').datebox("getValue")+","+$('#dtDateToPaySlip').datebox("getValue");
    //    window.open(_sBaseAddress + "/EmployeeSalary/PrintPaySlipEnglsih?nEmpID="+_oEmployee.EmployeeID+"&sDate="+sDate+"&nts="+nts, "_blank");

    //});

    function Print()
    {
        var nPrintItemNo= $('#CboPrintItems').val();
        if(nPrintItemNo==0)
        {
            alert("Please select at least one print item !");
            return;
        }
        if(nPrintItemNo==1)
        {
            PrintPaySlipV1();
        }
        else if(nPrintItemNo==2)
        {
            PaySlip_DetailFormat();
        }
        else if(nPrintItemNo==3 || nPrintItemNo==6)
        {
            SalarySheet_Corporate();
        }
        else if(nPrintItemNo==4 || nPrintItemNo==5)
        {
            SalarySheet_DetailFormat();
        }
        else if(nPrintItemNo==7)
        {
            BankSheet();
        }
        else if(nPrintItemNo==8)
        {
            CashSheet();
        }
        else if(nPrintItemNo==9)
        {
            PrintSalaryCertificate();
        }
        else if(nPrintItemNo==10)
        {
            PrintExcelOTStatement();
        }
        else if(nPrintItemNo==11)
        {
            PrintPaySlip();
        }
    }
    function PrintXL()
    {
        var nPrintItemNo= $('#CboPrintItems').val();
        if(nPrintItemNo==0)
        {
            alert("Please select at least one print item !");
            return;
        }
        else if(nPrintItemNo==11)
        {
            PrintPaySlip();
        }
    }

    function ReturnConnectionStringForController()
    {
        var sString="";
        var sEmpID= _oEmployee.EmployeeID;
        //var IsDate = $('#dateCheck').is(":checked");
        //var dtDateFrom= $('#dtDateFromPaySlip').datebox('getValue');
        //var dtDateTo= $('#dtDateToPaySlip').datebox('getValue');
        var IsDate = false;
        var dtDateFrom= "";
        var dtDateTo= "";
        var sDate=dtDateFrom+","+dtDateTo;

        var nLocationID=0;
        var sDepartmentIds="";
        var sDesignationIDs="";
        var sSalarySchemeIDs="";
        var nMonthID=$('#cboMonth').val();
        var nYear=$('#cboYear').val();
        var tsv = ((new Date()).getTime()) / 1000;

        if(nMonthID==0)
        {
            alert("Please select a month.");
            return sString;
        }
        if(nYear==0)
        {
            alert("Please select a year.");
            return sString;
        }
        //function GenerateStartTimeInString()
        //{
        //    var sDate=  $('#cboMonth').val() +'/'+ $('#cboDay').val() +'/'+ $('#cboYear').val();
        //    return sDate;
        //}

        sString="?sEmpIDs="+sEmpID+"&sDate="+sDate+"&nLocationID="+nLocationID+"&sDepartmentIDs="+sDepartmentIds+"&sDesignationIDs="+sDesignationIDs +"&sSalarySchemeIDs="+sSalarySchemeIDs+"&nMonthID="+nMonthID+"&bNewJoin="+false+"&nYear="+nYear+"&IsDate="+IsDate+"&ts="+tsv, "_blank";

        return sString;
    }

    function PrintPaySlipV1()
    {
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            var oParameter = new Object();
            var url = _sBaseAddress+ "/EmployeeSalary/View_PrintMultiplePaySlip_Self"+S
            var oEmployees = window.showModalDialog(url, oParameter, 'dialogHeight:1050px;dialogWidth:1350px;dialogLeft:20;dialogRight:0;center:yes;resizable:yes;status:no;scroll:no');
        }
    }

    function PaySlip_DetailFormat()
    {
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            var oParameter = new Object();
            var url = _sBaseAddress+ "/EmployeeSalary/PrintMultiplePaySlip_DetailFormat_Self"+S
            window.open(url, "_blank");
        }
    }

    function PrintPaySlip()
    {
        var S=ReturnConnectionStringForController();
        if(S=="" || S == null)
        {
            return;
        }
        else
        {
            S=S+"&PC="+parseInt(0);
            window.open(_sBaseAddress+ "/EmployeeSalary/ViewEmployeePaySlip_Self"+S);
        }
    }

    /*------------------- Info View-------------------*/

    function NoticeView(nNoticeID){
        window.open(_sBaseAddress+ '/Notice/PrintNotice?id=' + nNoticeID, "_blank");
        //$(".resetlbl").html("");
        //var oNotice={
        //    NoticeID:nNoticeID
        //}
        //var obj =
        //    {
        //        BaseAddress: _sBaseAddress,
        //        Object: oNotice,
        //        ControllerName: "Notice",
        //        ActionName: "Get",
        //        IsWinClose: false
        //    };

        //$.icsDataGet(obj, function (response) {

        //    if (response.status && response.obj != null) {
        //
        //        if (response.obj.NoticeID > 0) {

        //            $("#popuplblTitle").html(response.obj.Title);
        //            $("#popuplblDescription").html(response.obj.Description);
        //            $("#popuplblNotify").html('Posted By: '+ response.obj.PostedBy +" on date "+ response.obj.IssueDateInStr);


        //            $("#WinPopUp").icsWindow("close");

        //            $("#WinPopUp").show();
        //            $("#WinPopUp").icsWindow("open");
        //        }
        //        else { response.obj.ErrorMessage; }
        //    }
        //});
    }

    function TrainingView(nTDID){
        $(".resetlbl").html("");
        var oTrainingDevelopment={
            TDID:nTDID
        }
        var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oTrainingDevelopment,
                ControllerName: "TrainingDevelopment",
                ActionName: "Get",
                IsWinClose: false
            };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj != null) {
                if (response.obj.TDID > 0) {

                    $("#popuplblTitle").html(response.obj.CourseName);
                    var sInfo="Specification: "+response.obj.Specification+"<br>";
                    sInfo += "Institute: "+response.obj.Institute+"<br>";
                    sInfo += "Vendor: "+response.obj.Vendor+"<br>";
                    sInfo += "Country: "+response.obj.Country+"<br>";
                    sInfo += "State: "+response.obj.State+"<br>";
                    sInfo += "Address: "+response.obj.Address+"<br>";
                    sInfo += 'Duration: '+ response.obj.Duration +" ( "+ response.obj.StartDateInString +' to '+ response.obj.EndDateInString+" )";

                    $("#popuplblDescription").html(sInfo);

                    $("#WinPopUp").icsWindow("close");
                    $("#WinPopUp").icsWindow("open");
                }
                else { response.obj.ErrorMessage; }
            }
        });
    }

    $(".ics-window-close").click(function(){
        $("#WinPopUp").hide();
        $("#WinPopUp").icsWindow("close");
    });

    //function GetAttendance()
    //{
    //
    //    if(_oEmployee.EmployeeID<=0)
    //    {
    //        alert('Please enter an employee!');
    //        return;
    //    }
    //    var dtStartDate = $('#dtStartDate').datebox("getValue");
    //    var nEmployeeID=_oEmployee.EmployeeID;
    //    var tsv = ((new Date()).getTime()) / 1000;

    //    $.ajax({
    //        type: "POST",
    //        dataType: "json",
    //        url: _sBaseAddress + "/AttendanceDaily/Get",
    //        traditional: true,
    //        data: JSON.stringify({ nEmpID: nEmployeeID ,sDate: dtStartDate, ts : tsv}),
    //        contentType: "application/json; charset=utf-8",
    //        success: function (data) {
    //            var oAttendanceDaily = jQuery.parseJSON(data);
    //            if(oAttendanceDaily.AttendanceID>0 && oAttendanceDaily.ErrorMessage=="")
    //            {
    //                var S="";
    //                if(oAttendanceDaily.IsHoliday)
    //                {
    //                    S="Holiday";
    //                }
    //                else if(oAttendanceDaily.IsLeave)
    //                {
    //                    if(oAttendanceDaily.LeaveHeadID>0)
    //                    {
    //                        for(var i=0;i<_oEmployeeLeaveLedgers.length;i++)
    //                        {
    //                            if(_oEmployeeLeaveLedgers[i].LeaveHeadID==oAttendanceDaily.LeaveHeadID)
    //                            {
    //                                S="Leave-"+_oEmployeeLeaveLedgers[i].LeaveName;
    //                                break;
    //                            }
    //                        }
    //                    }
    //                    else
    //                    {
    //                        S="Leave";
    //                    }
    //                }
    //                else if(oAttendanceDaily.IsDayOff)
    //                {
    //                    S="DayOff";
    //                }
    //                else if(oAttendanceDaily.InTimeInString=="-" && oAttendanceDaily.OutTimeInString=="-" && !oAttendanceDaily.IsHoliday && !oAttendanceDaily.IsLeave && !oAttendanceDaily.IsDayOff)
    //                {
    //                    S="Absent";
    //                }
    //                else
    //                {
    //                    S="Intime-"+oAttendanceDaily.InTimeInString+",Outtime-"+oAttendanceDaily.OutTimeInString;

    //                }
    //                $("#lblApplicationStatus").html(S);
    //            }
    //            else if(oAttendanceDaily.ErrorMessage=="")
    //            {
    //                $("#lblApplicationStatus").html("Attedance not found!");
    //            }
    //            else
    //            {
    //                alert(oAttendanceDaily.ErrorMessage);
    //            }
    //        },
    //        error: function (xhr, status, error) {
    //            alert(error);
    //        }
    //    });
    //}

    $("#cboLeaveLedger").click(function () {

        var nEmpLeaveLedgerID= $("#cboLeaveLedger").val();
        for(var i=0;i<_oEmployeeLeaveLedgers.length;i++)
        {
            if(_oEmployeeLeaveLedgers[i].EmpLeaveLedgerID==nEmpLeaveLedgerID)
            {

                if(_oEmployeeLeaveLedgers[i].IsLWP)
                {
                    $("#rdbtnPaid").prop('checked', false);
                    $("#rdbtnUnPaid").prop('checked', true);
                }
                else
                {
                    $("#rdbtnPaid").prop('checked', true);
                    $("#rdbtnUnPaid").prop('checked', false);
                }
                break;
            }
            else
            {
                $("#rdbtnPaid").prop('checked', false);
                $("#rdbtnUnPaid").prop('checked', false);
            }
        }
    });

    $("#cboLeaveType").click(function () {
        var nLeaveType= $("#cboLeaveType").val();

        if(nLeaveType==1 || nLeaveType==0)
        {
            $("#txtDurationInHour").prop("disabled", true);
            //$("#spEndDate").show();
        }
        else
        {
            $("#txtDurationInHour").prop("disabled", false);
            //$("#spEndDate").hide();
        }
    });

    function GetEmployeeLeaveLedge(){

        if(_oEmployee.EmployeeID>0){
            var oEmployeeLeaveLedger={
                EmployeeID:_oEmployee.EmployeeID
            }
            var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oEmployeeLeaveLedger,
                ControllerName: "EmployeeLeaveLedger",
                ActionName: "Gets",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {
                //$('#txtEmployee').val(oEmployee.Name);
                if (response.status && response.objs != null)
                {
                    if (response.objs.length>0 && response.objs[0].EmpLeaveLedgerID > 0) {
                        EmployeeLeaveLedger(response.objs);
                    }
                    else{
                        $("#cboLeaveLedger").empty();
                    }
                }
            });
        }
    }

    function EmployeeLeaveLedger(oEmployeeLeaveLedgers){
        //if(!_IsLeaveAppEmp){
        _oEmployeeLeaveLedgers=oEmployeeLeaveLedgers;
        $("#cboLeaveLedger").icsLoadCombo({
            List: _oEmployeeLeaveLedgers,
            OptionValue: "EmpLeaveLedgerID",
            DisplayText: "LeaveNameWithBalance"
        });
        //}
        //else{
        //    $("#cboLeaveLAPicker").icsLoadCombo({
        //        List: oEmployeeLeaveLedgers,
        //        OptionValue: "EmpLeaveLedgerID",
        //        DisplayText: "LeaveName"
        //    });
        //}

    }

    function GetAttendance()
    {
        DynamicRefreshList([],'tblShowAttendance');

        if(_oEmployee.EmployeeID<=0)
        {
            alert('Please enter an employee!');
            return;
        }
        var dtStartDate = $('#dtStartDate').datebox("getValue");
        var dtEndDate = $('#dtEndDate').datebox("getValue");

        var diff= (new Date(dtEndDate)-new Date(dtStartDate))/1000/60/60/24+1;
        if(diff<=0)
        {
            alert("Invalid Date!");
            return;
        }
        if(diff>10)
        {
            dtStartDate=dtEndDate;
        }
        var nEmployeeID=_oEmployee.EmployeeID;
        sParams=nEmployeeID+"~"+dtStartDate+"~"+dtEndDate;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceDaily/EmployeeWiseAttendanceSearch",
            traditional: true,
            data: JSON.stringify({ sTemp : sParams}),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oAttendanceDailys = jQuery.parseJSON(data);
                var oNewList=[];
                if(oAttendanceDailys.length>0 && oAttendanceDailys[0].ErrorMessage=="")
                {
                    $("#winShowAttendance").icsWindow("open");
                    var oNewList=[];
                    if(diff>10)
                    {
                        diff=1;
                    }
                    var oDate= new Date(dtStartDate);
                    for(var i=0; i<diff; i++)
                    {
                        oDate.getDay();
                        var sDate= icsdateformat(oDate);
                        var bExist=false;
                        for(var j=0; j<oAttendanceDailys.length; j++)
                        {
                            if(sDate==oAttendanceDailys[j].AttendanceDateInString)
                            {
                                oNewList.push(oAttendanceDailys[j]);
                                bExist=true;
                                break;
                            }
                        }
                        if(!bExist)
                        {
                            var oObj= new Object();
                            oObj= new Object();
                            oObj.AttendanceDateInString=sDate;
                            oObj.AttStatusInST="--";
                            oNewList.push(oObj);
                        }
                        oDate.setDate(oDate.getDate()+1)
                    }
                    DynamicRefreshList(oNewList,'tblShowAttendance');
                }
                else if(oAttendanceDailys[0].ErrorMessage=="Data Not Found !")
                {
                    $("#winShowAttendance").icsWindow("open");
                    var oObj= new Object();
                    var oItems=[];
                    oObj= new Object();
                    oObj.AttendanceDateInString=dtEndDate;
                    oObj.AttStatusInST="--";
                    oNewList.push(oObj);
                    DynamicRefreshList(oNewList,'tblShowAttendance');
                }
                else
                {
                    alert(oAttendanceDailys[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnShowAttendanceClose").click(function(){
        $("#winShowAttendance").icsWindow("close");
    });

    function EmployeeSettlementClearanceSave()
    {
        var oEmployeeSettlement = $('#tblEmployeeSettlementClearanceHistory').datagrid('getSelected');
        if (oEmployeeSettlement == null || oEmployeeSettlement.ESCID <= 0) {
            alert("Please Select a Settlement!");
            return;
        }

        var CurrentStatus=$('#cboClearanceStatus').val();
        var oEmployeeSettlementClearanceHistory =
        {
            ESCHID : 0,
            ESCID :oEmployeeSettlement.ESCID,
            PreviousStatus :0,
            CurrentStatus :CurrentStatus,
            Note : $('#txtNote').val()
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EmployeeSettlement/EmployeeSettlementClearanceHistory_IUD",
            traditional: true,
            data: JSON.stringify({oEmployeeSettlementClearanceHistory:oEmployeeSettlementClearanceHistory}),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                var oEmployeeSettlementClearanceH = jQuery.parseJSON(data);
                if(oEmployeeSettlementClearanceH.ErrorMessage=="") {
                    alert("Saved Successfully!");
                    GetsSettlementHistory();
                }
                else
                {
                    alert(oEmployeeSettlementClearanceH.ErrorMessage);
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    }

    function GetsSettlementHistory()
    {
        var oEmployeeSettlement = $('#tblEmployeeSettlementClearanceHistory').datagrid('getSelected');
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeSettlement,
            ControllerName: "Dashboard",
            ActionName: "GetsSettlementHistory",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs != null)
            {
                if (response.objs.length>0 && response.objs[0].ESCID > 0)
                {
                    DynamicRefreshList(response.objs, "tblEmployeeSettlementClearanceHistory");
                }
            }
        });
    }

    function LeaveLedger(nACSID)
    {
        if(_oEmployee.EmployeeID>0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/LeaveApplication/GetsLeaveLedger",
                traditional: true,
                data: JSON.stringify({ nEmployeeID: _oEmployee.EmployeeID,nACSID:nACSID}),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oLeaveLedgers = jQuery.parseJSON(data);
                    if (oLeaveLedgers.length>0 &&  oLeaveLedgers[0].ErrorMessage == "")
                    {
                        DynamicRefreshList(oLeaveLedgers,'tblLeaveLedger');
                    }
                    else
                    {
                        if(bDNF){ alert(oLeaveLedgers[0].ErrorMessage);}
                        DynamicRefreshList([],'tblLeaveLedger');
                    }
                    bDNF = true;
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    }

    $("#btnReloadLeaveLedger").click(function(){
        nACSID=$('#cboSession').val();
        LeaveLedger(nACSID);
    });

    //Sagor date picker start

    function SetDateTime()
    {
        var oDate=new Date();
        oDate.setFullYear(2014);
        /*---------------------------------------- Start Set Year-------------------------------------------*/
        var sYear="";
        sYear +="<option value='0'>"+'Year'+"</option>";
        for(var i=0; i<=10; i++)
        {
            sYear += "<option value='" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"'>" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"</option>";
        }
        $('#cboYear').html(sYear);
        /*---------------------------------------- End Set Year-------------------------------------------*/

        /*---------------------------------------- Start Set Month-------------------------------------------*/
        var sMonth="";
        var oMonths=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
        sMonth +="<option value='0'>"+'Month'+"</option>";
        for(var i=0; i<oMonths.length; i++)
        {
            sMonth += "<option value='" +(parseInt(i)+1)+"'>" + oMonths[i] +"</option>";
        }
        $('#cboMonth').html(sMonth);
        /*---------------------------------------- End Set Month-------------------------------------------*/

        /*---------------------------------------- Start Set Date-------------------------------------------*/
        var sDay ="<option value='0'>"+'Day'+"</option>";
        $('#cboDay').html(sDay);
        /*---------------------------------------- End Set Date-------------------------------------------*/
    }

    function SetDateEvent(nYear, nMonth)
    {

        var oDate=new Date();
        var sDay="";
        if( parseInt(nMonth)>0)
        {
            var nDay= new Date(parseInt(nYear), parseInt(nMonth), 0).getDate();
            sDay +="<option value='0'>"+'Day'+"</option>";
            for(var i=1; i<=parseInt(nDay); i++)
            {
                if(i<10)
                {
                    sDay += "<option value='" +i+"'>" + '0'+i +"</option>";
                }
                else
                {
                    sDay += "<option value='" +i+"'>" + i +"</option>";
                }

            }
        }
        return sDay;
    }

    function SetStartTime(oDate)
    {
        var nyear=oDate.getFullYear();
        var nmonth=oDate.getMonth()+1;
        var nday=oDate.getDate();
        $('#cboYear').val(nyear);
        $('#cboMonth').val(nmonth);
    }

    function ValidationOfStartTime()
    {
        if($('#cboYear').val()==0)
        {
            alert("Please select a year.");
            document.getElementById('cboYear').focus();
            return false;
        }
        if($('#cboMonth').val()==0)
        {
            alert("Please select a month.");
            document.getElementById('cboMonth').focus();
            return false;
        }
        return true;
    }

    $("#cboPrintType").change(function(){

    });

    $('#btnPrintTimeCard').click(function (e)
    {

        var dtStartDate=$('#dtDateFromAttendance').datebox('getValue');
        var dtEndDate=$('#dtDateToAttendance').datebox('getValue');

        var nPType=$("#cboPrintType").val();
        if(nPType==0)
        {
            alert("Please select one type!");
            return;
        }
        if(nPType == 1) {
            window.open(_sBaseAddress + '/Dashboard/PrintTimeCard_F2?dtForm='+dtStartDate+"&dtTo="+dtEndDate);
        }
    });

    $("#CboPrintItems").change(function(){
        if($("#CboPrintItems").val()==11)
        {
            $("#btnPrint").hide();
            $("#btnPrintXL").show();
        }
        else
        {
            $("#btnPrint").show();
            $("#btnPrintXL").hide();
        }
    });
</script>
