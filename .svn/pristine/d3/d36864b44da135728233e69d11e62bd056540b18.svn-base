@{
    ViewBag.Title = "Quotation CataLog";
}
<html>
<body>
     @model ESimSol.BusinessObjects.PurchaseQuotation
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable" id="divPurchaseQuotation" class="easyui-panel" title="Quotation CataLog" style="font-family:Tahoma; height:88%; width:100%">
        <div style="width:100%; height:20%; text-align:center">
            <fieldset>
                <table class="tbl" style="width:100%;">
                    <tr>
                        <td style=" width:10%;text-align:right;">
                            Quotation No:
                        </td>
                        <td style="width:23%;"><input style="width:97%" type="text" id="txtPurchaseQuotationNo" disabled="disabled" /></td>

                        <td style="width:10%; text-align:right;">
                            Supplier Ref:
                        </td>
                        <td style="width:20%; text-align:left;">
                            <input style="width:100%" type="text" id="txtSupplierReference" />
                        </td>
                        <td style="width:10%;text-align:right;">
                            Collect Date:
                        </td>
                        <td style="width:27%;">
                            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                <tr>
                                    <td style="width:35%;">
                                        <input id="txtRateCollectDate" type="text" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:105%;" />
                                    </td>
                                    <td style="width:30%;">
                                        Valid up to:
                                    </td>
                                    <td style="width:35%;">
                                        <input id="txtExpiredDate" type="text" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:105%;" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right;">
                            Supplier:
                        </td>
                        <td style="width:23%; text-align:left">
                            <input type="text" style="width:82%; text-align:left" id="txtSupplierName" placeholder="Type Vendor Name & Press Enter" /><input type="button" style="width:34px;" id="btnPickSupplier" value="Pick" />
                        </td>

                        <td style="width:10%;text-align:right;">
                            C.Person:
                        </td>
                        <td id="tdCollectBy" style="width:20%;">
                            <select id="cboSCPerson" style="width:70%;"></select><a id="btnReload" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a><input type="button" id="btnNewContactPerson" value="N" />
                        </td>
                        <td style="width:10%;text-align:right;">
                            Address:
                        </td>
                        <td style="width:27%;">
                            <input style="width:100%" type="text" id="txtSupplierAddress" disabled="disabled" />
                        </td>
                    </tr>

                    <tr>
                        <td style="width:10%;text-align:right;" class="tdLabel">
                            Collect By:
                        </td>
                        <td style="width:23%;">
                            <input type="text" style="width:82%; text-align:left" id="txtCollectByName" placeholder="Type Collect By Name & Press Enter" /><input type="button" style="width:34px;" id="btnPickCollectBy" value="Pick" />
                        </td>

                        <td style="width:10%;text-align:right;">
                            PaymentTerm:
                        </td>
                        <td style="width:20%;">
                            <select id="cboPaymentTerm" style="width:99%;">
                            <option value="None">--Select One--</option>
                                <option value="Cash">Cash</option>
                                <option value="Credit">Credit</option>
                                <option value="Credit/Cash">Credit/Cash</option>
                                <option value="Advance Cheque/Cash">Advance Cheque/Cash</option>
                            </select>
                            @*<input style="width:99%;" type="text" id="txtPaymentTerm" />*@
                        </td>
                        <td style="width:10%;text-align:right;">
                            Currency:
                        </td>
                        <td style="width:27%;text-align:left">
                            <select id="cboCurrency" style="width:100%" class="ChangeCurrency"></select>
                        </td>

                    </tr>

                </table>
            </fieldset>
        </div>
        <div id="tabPQDetailAndTermsAndCondition" class="easyui-tabs" style="width:100%;height:80%;">
                <div title="Purchase Quotation Detail" style="padding:2px; font-size:12px; font-style:normal;width:100%;">
                    <table id="tblPurchaseQuotationDetail" class="easyui-datagrid" style="width:100%;height:240px"
                           data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbarPurchaseQuotationDetail',onClickRow:onClickRow ">
                        <thead>
                            <tr>
                                <th field="ProductCode" width="10%" align="left"> Code</th>
                                <th field="ProductName" width="20%" align="left">Item Name</th>
                                <th field="UnitName" width="8%" align="left">M. Unit</th>
                                <th data-options="field:'ActualPrice',align:'right',editor:{type:'numberbox',options:{precision:4}}" width="10%" formatter="formatPrice4digit">Actual Unit Price</th>
                                <th data-options="field:'Discount',         align:'right',editor:{type:'numberbox',options:{precision:4}}" width="10%" formatter="formatPrice4digit">Discount(%)</th>
                                <th data-options="field:'Discount_Amount',  align:'right',editor:{type:'numberbox',options:{precision:4}}" width="11%" formatter="formatPrice4digit">Discount(Price)</th>
                                <th field="UnitPrice" width="10%" align="right" formatter="formatPrice4digit">Unit Price</th>
                                <th field="Quantity" width="10%" align="right">Qty</th>
                                <th data-options="field:'ItemWiseTotalDiscount',align:'right',editor:{type:'numberbox',options:{precision:4}}" width="10%" formatter="formatPrice4digit">Discount On Amount</th>
                                <th field="Amountst" width="10%" align="right">Amount</th>
                                <th data-options="field:'ItemDescription',align:'left',editor:{type:'text',options:{precision:2}}" width="10%" align="left">Note</th>
                            </tr>
                        </thead>
                    </table>
                    <div id="toolbarPurchaseQuotationDetail">
                        Requisition:<input type="text" id="txtPRNo" placeholder="Type Req No Or Product Name & Press Enter" style="width:200px;" /><a id="btnPRPick" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>
                        Product:<input type="text" id="txtProductName" placeholder="Type Product & Press Enter" style="width:170px;" />
                        <a id="btnProductPick" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>
                        <a id="btnDeletePurchaseQuotationDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                        <a id="btnRefreshPurchaseQuotationDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh </a>
                        <a id="btnAddSpecification" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Specification </a>
                    </div>
                    <div style="height:80px">
                        <table border="0" cellpadding="0" cellspacing="0" width="100%">
                            <tr>
                                <td style="width:85%;  text-align:right;font-weight:bold;">Total:</td>
                                <td style="width:15%; text-align:right; font-weight:bold;">
                                    <label id="lblTotalAmount">0.00</label>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:85%;  text-align:right;font-weight:bold;">Discount:</td>
                                <td style="width:15%; text-align:right; font-weight:bold;">
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td style="width:35%"><input type="text" id="txtDiscountinAmountPercentage" style="width:100%; text-align:right;float: right;" /></td>
                                            <td style="width:10%">(%)</td>
                                            <td style="width:55%"><input type="text" id="txtDiscountinAmount" style="width:100%; text-align:right;float: right;" /></td>
                                        </tr>
                                    </table>
                                    
                                </td>
                            </tr>
                            <tr>
                                <td style="width:85%;  text-align:right;font-weight:bold;">Sub Total:</td>
                                <td style="width:15%; text-align:right; font-weight:bold;">
                                    <label id="lblSubtotal">0.00</label>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div title="Terms And Condition" style="padding:2px; font-size:12px; font-style:normal;width:100%;">
                    <table id="tblPQTermsAndCondition" class="easyui-datagrid" style="width:100%;height:330px"
                           data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbarPQTermsAndCondition',onClickRow:onClickRowTAC ">
                        <thead>
                            <tr>
                                <th width="30%" align="left" data-options="field:'TermsAndCondition',editor:{type:'text',options:{precision:0}}">Terms And Condition</th>
                            </tr>
                        </thead>
                    </table>
                   
                    <div id="toolbarPQTermsAndCondition">
                        <input type="text" id="txtTermsAndCondition" placeholder="Enter Terms and Condition" style="width:200px;" />
                        <a id="btnAddTermsAndCondition" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                        <a id="btnRemoveTermsAndCondition" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>

                    </div>
                </div>
            </div>
        
    </div>
    <div style="width:100%; height:10%">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="1" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:85%; text-align:right"></td>
                        <td style="width: 15%">
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

    <div id="winPQSpecification" style=" width:auto;"class="easyui-window"  data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="height: 250px; width:100%;">
            <table id="tblPQSpec" class="easyui-datagrid" style="height:250px;width:100%" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" data-options="onClickRow: onClickRowPQSpec, toolbar:'#toolbarPickSpec' ">
                <thead>
                    <tr>
                        <th data-options="field:'Selected',checkbox:true"></th>
                        <th field="SpecName" width='40%' align="left">Specification Head</th>
                        <th data-options="field:'PQDescription', align:'left',editor:{type:'text'}" width='50%'>Description</th>

                    </tr>
                </thead>
            </table>
            <div id="toolbarPickSpec">
                <a id="btnSpecPick" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick Specification</a>

            </div>
       </div>
      
        <fieldset style="font-family:Tahoma">
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px;width:100%; font-weight:bold;font-size:12">
                    <tr>

                        <td style="width:85%; text-align:right"></td>
                        <td style="width: 15%">
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="SavePQSpec()">Save</a>
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="ClosePQSpec()">Close</a>
                        </td>
                    </tr>

                </table>
            </fieldset>
       
        
    </div>
</body>
</html>
<script type="text/javascript">
    var _oPurchaseQuotation=null;
    var _sBaseAddress="";
    var _sPurchaseQuotationHeader="";
    var _nMenuid=0;
    var _oCurrencys=[];
    var _oCompany=null;
    var _nDiscount=0;
    var _nDiscount_Amount=0;
    var _nItemWiseTotalDiscount =0;
    $(document).ready(function () {
     
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.MenuID]));
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oPurchaseQuotation =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        _oCompany= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));
        _sPurchaseQuotationHeader=sessionStorage.getItem("PurchaseQuotationHeader");
        $('#divPurchaseQuotation').panel({ title:_sPurchaseQuotationHeader});
       debugger
        CurrencyLoad();
        if(_oPurchaseQuotation.SupplierID>0)
        {
            LoadContractPersonals(_oPurchaseQuotation.SupplierID);
        }
        
        RefreshControl();
        RefreshSummary();
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();

   
        $('#btnAddSpecification').hide();
        $('#txtDiscountinAmountPercentage, #txtDiscountinAmount').icsCurrencyBox();
        $('#txtDiscountinAmountPercentage, #txtDiscountinAmount').val(0.00);
        if(_oPurchaseQuotation !=null){
         
            var totalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblTotalAmount').innerHTML));
            $('#txtDiscountinAmountPercentage').val(_oPurchaseQuotation.DiscountInPercent);
            $('#txtDiscountinAmount').val(_oPurchaseQuotation.DiscountInAmount);
            document.getElementById('lblSubtotal').innerHTML =formatPrice(totalAmount-_oPurchaseQuotation.DiscountInAmount);

           
        }
    });
    $('#txtDiscountinAmountPercentage').change(function(){
        var txtDiscountinAmountPercentage = $('#txtDiscountinAmountPercentage').val();
        var totalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblTotalAmount').innerHTML));
        if(txtDiscountinAmountPercentage>100 || totalAmount<=0){
            $('#txtDiscountinAmountPercentage').val(0.00);
        }
        else{
           
            var DiscountinAmount = (totalAmount *txtDiscountinAmountPercentage)/100;
            $('#txtDiscountinAmount').val(formatPrice(DiscountinAmount,0));
            document.getElementById('lblSubtotal').innerHTML =formatPrice(totalAmount-DiscountinAmount);

        }
      
    });
    $('#txtDiscountinAmount').change(function(){
        var txtDiscountinAmount = icsRemoveComma($('#txtDiscountinAmount').val());
        var totalAmount =  parseFloat(icsRemoveComma(document.getElementById('lblTotalAmount').innerHTML));
        if(txtDiscountinAmount>totalAmount || totalAmount<=0){
            $('#txtDiscountinAmount').val(0.00);
        }
        else{
            var DiscountinAmountPercentage =parseFloat((txtDiscountinAmount *100)/totalAmount,2);
            $('#txtDiscountinAmountPercentage').val(DiscountinAmountPercentage);
            document.getElementById('lblSubtotal').innerHTML =formatPrice(totalAmount-txtDiscountinAmount);

        }
      
    });
    function updateProgress()
    {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) 
    {
        $("#progressbarParent").hide();
    }


    var editIndex = undefined;
    var editIndexTAC = undefined;
    function CurrencyLoad()
    {
        $("#cboCurrency").icsLoadCombo({
            List: _oCurrencys,
            OptionValue: "CurrencyID",
            DisplayText: "CurrencyName"
        });
    }

    function ValidateInputPurchaseQuotation()
    {      
        debugger;
        if (_oPurchaseQuotation.SupplierID <= 0)
        {
            alert("Please Pick Supplier"); $('#txtSupplierName').focus();
            $('#txtSupplierName').css("border", "1px solid #c00");
            return false;
        } else { $('#txtSupplierName').css("border", ""); }

        var dIssueDate =new Date($('#txtRateCollectDate').datebox('getValue'));
        var dExpiredDate =  new Date($('#txtExpiredDate').datebox('getValue'));
        


        if(dExpiredDate<=dIssueDate)
        {
            alert("Valid Up to should be Greater Than Issue Date.");
            $('#txtExpiredDate').focus();
            $('#txtExpiredDate').css("border", "1px solid #c00");
            return false;
        }else { $('#txtExpiredDate').css("border", ""); }

        
        //$( "#myselect option:selected" ).text()
        if ($('#cboPaymentTerm').val()== "None") 
        {
            alert("Please Select Payment Term."); $('#cboPaymentTerm').focus();
            $('#cboPaymentTerm').css("border", "1px solid #c00");
            return false;
        } else { $('#cboPaymentTerm').css("border", ""); }


        //if ($('#txtPaymentTerm').val() <= 0) {
        //    alert("Please entry Payment Term."); $('#txtPaymentTerm').focus();
        //    $('#txtPaymentTerm').css("border", "1px solid #c00");
        //    return false;
        //} else { $('#txtPaymentTerm').css("border", ""); }

        if ($('#cboCurrency').val() <= 0) {
            alert("Please select Currency."); $('#cboCurrency').focus();
            $('#cboCurrency').css("border", "1px solid #c00");
            return false;
        } else { $('#cboCurrency').css("border", ""); }
        var oPQDetails = $('#tblPurchaseQuotationDetail').datagrid('getRows');
        if(oPQDetails.length<=0)
        {
            alert("Pelase Add at least one Detail.");
            return false;
        }

        
        //terms and condition
        var termsAndCondition = $('#tblPQTermsAndCondition').datagrid('getRows');
        if(termsAndCondition.length <= 0)
        {
            alert("Enter at least one terms and condition.");
            $('#tabPQDetailAndTermsAndCondition').tabs('select',1);
            return false;
        }

        for(var i = 0;i<oPQDetails.length;i++)
        {
            if(parseFloat(oPQDetails[i].ActualPrice)<=0)
            {
                alert("Actual Price Should be greater than 0 for Product [ "+oPQDetails[i].ProductName+"]");
                return false;
            }
        }
        for(var i = 0;i<oPQDetails.length;i++)
        {
            if(oPQDetails[i].Quantity<=0)
            {
                alert("Quantity Should be greater than 0 for Product [ "+oPQDetails[i].ProductName+"]");
                return false;
            }
        }
        
        return true;
    }

    function RefreshObject()
    {

        var oPurchaseQuotation = {
            PurchaseQuotationID:  _oPurchaseQuotation.PurchaseQuotationID,
            PurchaseQuotationNo: $("#txtPurchaseQuotationNo").val(),
            QuotationStatusInInt:0,
            SupplierReference: $("#txtSupplierReference").val(),
            RateCollectDate: $('#txtRateCollectDate').datebox('getValue'),
            ExpiredDate: $('#txtExpiredDate').datebox('getValue'),
            SupplierID :_oPurchaseQuotation.SupplierID,
            SCPerson: $("#cboSCPerson").val(),
            CollectBy:_oPurchaseQuotation.CollectBy,
            CurrencyID: $("#cboCurrency").val(),
            PaymentTerm: $("#cboPaymentTerm").val(),
            BUID:sessionStorage.getItem("BUID"),
            PurchaseQuotationDetails: $('#tblPurchaseQuotationDetail').datagrid('getRows'),
            PQTermsAndConditions : $('#tblPQTermsAndCondition').datagrid('getRows'),
            DiscountInPercent:parseFloat(icsRemoveComma($('#txtDiscountinAmountPercentage').val())),
            DiscountInAmount:parseFloat(icsRemoveComma($('#txtDiscountinAmount').val()))
        };
        return oPurchaseQuotation;
    }

    $("#btnRemoveTermsAndCondition").click(function () {
        var oPATAC = $('#tblPQTermsAndCondition').datagrid('getSelected');
        if (oPATAC == null) {
            alert("Invalid Selection!!! please select a valid Item!");
            return false;
        }
        if (!confirm("Confirm to Remove?")) return;
        var SelectedRowIndex = $('#tblPQTermsAndCondition').datagrid('getRowIndex', oPATAC);
        $('#tblPQTermsAndCondition').datagrid('deleteRow',SelectedRowIndex);
        RefreshSummary();
        alert("Removed sucessfully");
        editIndex = undefined;
        editIndexTAC = undefined;
    }); 
    $("#btnAddTermsAndCondition").click(function(){
        AddTermsAndCondition();
    });
    $("#txtTermsAndCondition").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            AddTermsAndCondition();
        }
    });
    function AddTermsAndCondition()
    {
        var termsAndCondtion = $("#txtTermsAndCondition").val();
        if(termsAndCondtion == "") {
            alert("Please enter terms and condition.");
            return;
        }

        var oPQTermsAndCondition = $('#tblPQTermsAndCondition').datagrid('getRows'); 

        var newObject ={
            PQTermsAndConditionID : 0,
            TermsAndCondition:termsAndCondtion,
            PurchaseQuotationID:  _oPurchaseQuotation.PurchaseQuotationID
        };

        oPQTermsAndCondition.push(newObject);
        data=oPQTermsAndCondition;
        data={"total":""+data.length+"","rows":data};
        $('#tblPQTermsAndCondition').datagrid('loadData',data);  
        
        $("#txtTermsAndCondition").val("");
        $("#txtTermsAndCondition").focus();
    }
    $("#btnSave").click(function(){
        debugger;
        endEditing();
        endEditingTAC();
        if (!ValidateInputPurchaseQuotation()) return;
        var oPurchaseQuotation=RefreshObject();

        $.icsSave({
            BaseAddress: _sBaseAddress,
            Object: oPurchaseQuotation,
            ObjectId: oPurchaseQuotation.PurchaseQuotationID,
            ControllerName: "PurchaseQuotation",
            ActionName: "SaveRevise",
            TableId: "",
            IsWinClose: false,
            Message: "Data Saved Successfully."

        },function (response){
            if(response.status && response.obj!=null){
                if(response.obj.PurchaseQuotationID>0){
                    debugger;
                    var oPurchaseQuotation =response.obj;
                    var oPurchaseQuotations =sessionStorage.getItem("PurchaseQuotations");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                  
                    if(_oPurchaseQuotation.PurchaseQuotationID <=0){
                        
               

                        if(confirm("Are you want to entry specification ?!")){

                            _oPurchaseQuotation.PurchaseQuotationID = oPurchaseQuotation.PurchaseQuotationID;
                            $("#txtPurchaseQuotationNo").val(oPurchaseQuotation.PurchaseQuotationNo);
                            $('#tblPurchaseQuotationDetail').datagrid('loadData',oPurchaseQuotation.PurchaseQuotationDetails);  
                            $('#tabPQDetailAndTermsAndCondition').tabs('select',0);
                        }
                        else{
                           
                            if(oPurchaseQuotations!=null)
                            {
                                oPurchaseQuotations = jQuery.parseJSON(oPurchaseQuotations);
                              
                       
                            }
                            else
                            {
                                oPurchaseQuotations=[];
                            }
                            if(nIndex!=-1)
                            {
                                oPurchaseQuotations[nIndex]=oPurchaseQuotation;
                            }
                            else
                            {
                                sessionStorage.setItem("SelectedRowIndex", oPurchaseQuotations.length);
                                oPurchaseQuotations.push(oPurchaseQuotation);
                            }
                            sessionStorage.setItem("PurchaseQuotations", JSON.stringify(oPurchaseQuotations));
                            window.location.href = sessionStorage.getItem("BackLink");
                        }
                       
                    }
                    else{
                        
                        if(oPurchaseQuotations!=null)
                        {
                            oPurchaseQuotations = jQuery.parseJSON(oPurchaseQuotations);
                              
                       
                        }
                        else
                        {
                            oPurchaseQuotations=[];
                        }
                        if(nIndex!=-1)
                        {
                            oPurchaseQuotations[nIndex]=oPurchaseQuotation;
                        }
                        else
                        {
                            sessionStorage.setItem("SelectedRowIndex", oPurchaseQuotations.length);
                            oPurchaseQuotations.push(oPurchaseQuotation);
                        }
                        sessionStorage.setItem("PurchaseQuotations", JSON.stringify(oPurchaseQuotations));
                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                    
                }
            }
        });

    });


    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#tblPurchaseQuotationDetail').datagrid('validateRow', editIndex)) {
        
            $('#tblPurchaseQuotationDetail').datagrid('endEdit', editIndex);
            $('#tblPurchaseQuotationDetail').datagrid('selectRow', editIndex);
            var oPurchaseQuotationDetail = $('#tblPurchaseQuotationDetail').datagrid('getSelected');
            if(oPurchaseQuotationDetail.ProductID>0 ) //&& oPurchaseQuotationDetail.ActualPrice>0
            {
                debugger;
                if (parseFloat(oPurchaseQuotationDetail.ItemWiseTotalDiscount).toFixed(2) != _nItemWiseTotalDiscount)
                {
                    if((parseFloat(oPurchaseQuotationDetail.ItemWiseTotalDiscount).toFixed(2))>0)
                    {
                        oPurchaseQuotationDetail.Discount_Amount=parseFloat(oPurchaseQuotationDetail.ItemWiseTotalDiscount) / (parseFloat(oPurchaseQuotationDetail.Quantity));
                        oPurchaseQuotationDetail.UnitPrice=parseFloat(oPurchaseQuotationDetail.ActualPrice)-(parseFloat(oPurchaseQuotationDetail.Discount_Amount));
                    }
                    else {
                        
                        oPurchaseQuotationDetail.ItemWiseTotalDiscount=0;
                    }
                }

                if (parseFloat(oPurchaseQuotationDetail.Discount).toFixed(2) != _nDiscount)
                {
                    //if((parseFloat(oPurchaseQuotationDetail.Discount).toFixed(2))>0)
                    //{
                        oPurchaseQuotationDetail.UnitPrice=parseFloat(oPurchaseQuotationDetail.ActualPrice)-(parseFloat(oPurchaseQuotationDetail.ActualPrice)*parseFloat(oPurchaseQuotationDetail.Discount)/100)

                    //}
                    if(parseFloat(oPurchaseQuotationDetail.ActualPrice).toFixed(2)>0)
                    {
                        oPurchaseQuotationDetail.Discount_Amount=parseFloat(oPurchaseQuotationDetail.ActualPrice)-parseFloat(oPurchaseQuotationDetail.UnitPrice);
                        oPurchaseQuotationDetail.ItemWiseTotalDiscount= parseFloat(oPurchaseQuotationDetail.Discount_Amount) * parseFloat(oPurchaseQuotationDetail.Quantity);
                    }
                    else
                    {
                        oPurchaseQuotationDetail.Discount_Amount=0;
                        oPurchaseQuotationDetail.UnitPrice=0;
                        oPurchaseQuotationDetail.ItemWiseTotalDiscount=0;
                    }
                }
                if (parseFloat(oPurchaseQuotationDetail.Discount_Amount).toFixed(2) != _nDiscount_Amount)
                {
                    //if((parseFloat(oPurchaseQuotationDetail.Discount_Amount).toFixed(2))>0)
                    //{
                        oPurchaseQuotationDetail.UnitPrice=parseFloat(oPurchaseQuotationDetail.ActualPrice)-(parseFloat(oPurchaseQuotationDetail.Discount_Amount));

                        if(oPurchaseQuotationDetail.ActualPrice>0)
                        {
                            oPurchaseQuotationDetail.Discount=parseFloat(oPurchaseQuotationDetail.Discount_Amount*100/oPurchaseQuotationDetail.ActualPrice);
                            oPurchaseQuotationDetail.ItemWiseTotalDiscount=parseFloat(oPurchaseQuotationDetail.Discount_Amount)*parseFloat(oPurchaseQuotationDetail.Quantity);
                        }
                        else
                        {
                            oPurchaseQuotationDetail.Discount=0;
                            oPurchaseQuotationDetail.UnitPrice=0;
                            oPurchaseQuotationDetail.ItemWiseTotalDiscount=0;
                        }
                    //}
                }

                if (parseFloat(oPurchaseQuotationDetail.Discount_Amount).toFixed(2) <=0 || parseFloat(oPurchaseQuotationDetail.Discount).toFixed(2) <=0)
                {
                    oPurchaseQuotationDetail.Discount=0;
                    oPurchaseQuotationDetail.Discount_Amount=0;
                    oPurchaseQuotationDetail.UnitPrice=parseFloat(oPurchaseQuotationDetail.ActualPrice-oPurchaseQuotationDetail.Discount_Amount);
                }
                oPurchaseQuotationDetail.Amountst=parseFloat(oPurchaseQuotationDetail.Quantity*oPurchaseQuotationDetail.UnitPrice).toFixed(4);

                $('#tblPurchaseQuotationDetail').datagrid('updateRow', { index: editIndex, row: oPurchaseQuotationDetail });
                RefreshSummary();
            }
            _nDiscount = 0;
            _nDiscount_Amount = 0;
            _nItemWiseTotalDiscount = 0;
            

            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRow(index) 
    {

        if (editIndex != index) {
            if (endEditing()) {
                debugger;
                $('#tblPurchaseQuotationDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oPQDetail = $('#tblPurchaseQuotationDetail').datagrid('getSelected');
                _nDiscount = parseFloat(oPQDetail.Discount).toFixed(2);
                _nDiscount_Amount = parseFloat(oPQDetail.Discount_Amount).toFixed(2);
                _nItemWiseTotalDiscount = parseFloat(oPQDetail.ItemWiseTotalDiscount).toFixed(2);
                console.log(oPQDetail.PurchaseQuotationDetailID)
                if((oPQDetail.PurchaseQuotationDetailID<=0 || oPQDetail.PurchaseQuotationDetailID==undefined)){
                        $('#btnAddSpecification').hide();
                    }
                else{
                    if(_oPurchaseQuotation.ApprovedBy==0)
                        $('#btnAddSpecification').show();
                }
                editIndex = index;
            }
            else {
                $('#tblPurchaseQuotationDetail').datagrid('selectRow', editIndex);
            }
        }
    }


    
    function endEditingTAC() {
        if (editIndexTAC == undefined) { return true }
        if ($('#tblPQTermsAndCondition').datagrid('validateRow', editIndexTAC)) {
            $('#tblPQTermsAndCondition').datagrid('endEdit', editIndexTAC);
            $('#tblPQTermsAndCondition').datagrid('selectRow', editIndexTAC);
            var oPQTAC = $('#tblPQTermsAndCondition').datagrid('getSelected');

            debugger;
            if (oPQTAC == null)
            {
                return;
            }


            if (oPQTAC.TermsAndCondition==0)
            {
                oPQTAC.TermsAndCondition="";
            }
            $('#tblPQTermsAndCondition').datagrid('updateRow', { index: editIndexTAC, row: oPQTAC });

            RefreshSummary();
            editIndexTAC = undefined;
            return true;
        }
        else {
            return false;
        }
    }
    function onClickRowTAC(index) 
    {
        if (editIndexTAC != index) {
            if (endEditingTAC()) {
                $('#tblPQTermsAndCondition').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oPQTAC = $('#tblPQTermsAndCondition').datagrid('getSelected');
                _TermsAndCondition=oPQTAC.TermsAndCondition;
                editIndexTAC = index;
            }
            else {
                $('#tblPQTermsAndCondition').datagrid('selectRow', editIndexTAC);
            }
        }
    }

    //Product Part
    $("#txtProductName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            GetProducts($.trim($('#txtProductName').val()));
        }
    });
    //Load for button click
    $("#btnProductPick").click(function () {
        debugger;
        var oProduct = {BUID:sessionStorage.getItem("BUID")};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "PurchaseQuotation",
            ActionName: "GetProducts",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                debugger;
                if (response.objs[0].ProductID> 0) {
                    var tblColums = [], searcingField = "", windowTittle = "";
                    var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Item Name", width: 400, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ProductCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }
        });
    });

    $('#txtProductName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtProductName = document.getElementById("txtProductName");
            //txtProductName.value = '';
            txtProductName.style.color = "black";
            txtProductName.style.fontWeight = "normal";
            _oPurchaseQuotationDetail.ProductID = 0;
            _oPurchaseQuotationDetail.ProductCode = "";
            _oPurchaseQuotationDetail.ProductName = "";
            var oMUnits = [];
            $("#cboUnitName").icsLoadCombo({
                List: oMUnits,
                OptionValue: "MeasurementUnitID",
                DisplayText: "UnitName"
            });
        }
    });

    function GetProducts(sProductName)
    {
        var oProduct = { ProductName:sProductName,BUID:sessionStorage.getItem("BUID")};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "PurchaseQuotation",
            ActionName: "GetProducts",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID> 0) {
                    var tblColums = [], searcingField = "", windowTittle = "";
                    var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Item Name", width: 400, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ProductCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }
        });
    }

    function IntializePickerbutton(oPickerobj)
    {
 
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            SetPickerValue(oPickerobj);
        });
        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValue(oPickerobj);
            }
        });
    }

    function SetPickerValue(oPickerobj)
    {
        var oreturnobj = "", oreturnobjs = [] ;
        if(oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        }else
        {
            oreturnobj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        
        $("#"+oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winclass == 'clsSupplier')
        {
            if (oreturnobj != null && oreturnobj.ContractorID > 0) {
                var txtSupplierName = document.getElementById("txtSupplierName");
                txtSupplierName.value = oreturnobj.Name;
                txtSupplierName.style.color = "blue";
                txtSupplierName.style.fontWeight = "bold";
                $('#txtSupplierAddress').val(oreturnobj.Address);
                _oPurchaseQuotation.SupplierID = oreturnobj.ContractorID;
                $('#txtSupplierName').focus();
            }
            LoadContractPersonals(_oPurchaseQuotation.SupplierID);
        }
        else if (oPickerobj.winclass == 'clsCollectBy')
        {
            if (oreturnobj != null && oreturnobj.MarketingAccountID > 0) {
                var txtCollectByName = document.getElementById("txtCollectByName");
                txtCollectByName.value = oreturnobj.Name;
                txtCollectByName.style.color = "blue";
                txtCollectByName.style.fontWeight = "bold";
                _oPurchaseQuotation.CollectBy = oreturnobj.MarketingAccountID;
                $('#txtCollectByName').focus();
            }
        } 
        else if (oPickerobj.winclass == 'clsProductPicker') 
        {
            if (oreturnobj != null && oreturnobj.ProductID > 0) {
                var txtProductName = document.getElementById("txtProductName");
                txtProductName.value = oreturnobj.ProductName;
                txtProductName.style.color = "blue";
                txtProductName.style.fontWeight = "bold";
                AddDetail( oreturnobj);
            }
            $('#txtProductName').focus();
        }
        else  if (oPickerobj.winid == 'winPurchaseRequsitionDetails')
        {
            debugger;
            if (oreturnobjs != null && oreturnobjs.length> 0)
            {
               
                var PRDetailsIDs = ICS_PropertyConcatation(oreturnobjs,'PRDetailID');
                var obj = {
                    Remarks:PRDetailsIDs
                }
              
                $.ajax
                  ({
                      type: "POST",
                      dataType: "json",
                      url : _sBaseAddress+"/PurchaseQuotation/GetPRDetailsForQuotation",
                      data:  JSON.stringify(obj),
                      contentType: "application/json; charset=utf-8",
                      success: function (data) {
                          if (data.length>0)
                          {
                              debugger;
                              var result  = jQuery.parseJSON(data);
                              for (i = 0; i < result.length; i++)
                              {
                                  if (!IsExist(result[i].ProductID ,result[i].IsSpecExist)) 
                                  { 
                                      var oPQD = {
                                          ProductID : result[i].ProductID,
                                          Quantity : result[i].Qty,
                                          ProductName : result[i].ProductName,
                                          ProductSpec : result[i].ProductSpec,
                                          ProductCode : result[i].ProductCode,
                                          MUnitID : result[i].MUnitID,
                                          ActualPrice : 0,
                                          Discount : 0,
                                          ItemWiseTotalDiscount:0,
                                          ItemDescription:"",
                                          UnitSymbol : result[i].UnitSymbol,
                                          UnitName : result[i].UnitName,
                                          PRDetailID:result[i].PRDetailID
                                      };
                                      $('#tblPurchaseQuotationDetail').datagrid('appendRow', oPQD);
                                  }
                                  else{
                                      
                                      UpdateExistingProductQty(result[i].ProductID,result[i].Qty);
                                     }  
                              }
                          }
                          

                      },
                      
                  });






            }
        }
            /*--Set Specification? ----*/
        else if (oPickerobj.winclass == 'clsSpecHeadPicker')
        {
            if (oreturnobjs != null && oreturnobjs.length> 0)
            {
                var getSelection = $('#tblPurchaseQuotationDetail').datagrid('getSelected');
                var indexSeq=$('#tblPQSpec').datagrid("getRows").length  ;
                var ProductSpecHeads =[];
                for (i = 0; i < oreturnobjs.length; i++)
                {
                    ++indexSeq;
                    ProductSpecHeads.push({ProductSpecHeadID : 0 , ProductID:getSelection.ProductID,SpecHeadID:oreturnobjs[i].SpecHeadID ,Sequence:indexSeq});
                }
                var oSpecHead={
                    ProductSpecHeads:ProductSpecHeads
                }
                
                $.ajax
                  ({
                      type: "POST",
                      dataType: "json",
                      url : _sBaseAddress+  "/ProductSpecHead/Save",
                      data:  JSON.stringify(oSpecHead),
                      contentType: "application/json; charset=utf-8",
                      success: function (data) {
                          if (data.length>0)
                          {
                              var obj = {
                                  PQDetailID: getSelection.PurchaseQuotationDetailID ,
                                  ProductID : getSelection.ProductID

                              }
             
                              $.ajax
                                ({
                                    type: "POST",
                                    dataType: "json",
                                    url : _sBaseAddress+  "/PurchaseQuotation/ProductSpecHeadByProduct",
                                    data:  JSON.stringify(obj),
                                    contentType: "application/json; charset=utf-8",
                                    success: function (data) {
                                      
                                        $('#tblPQSpec').datagrid('loadData',data);  
                                        if (data.length>0)
                                        {
                                            for(var i=0; i< data.length ;i++){
                                                if(data[i].PQSpecID > 0)
                                                    $('#tblPQSpec').datagrid("checkRow", i);
                                            }
                           
                                        }
                         

                                    },
                                    error: function (xhr, status, error)
                                    {
                                        alert(error);
                                    }
                                });
                          }
                          

                      },
                      error: function (xhr, status, error)
                      {
                          alert(error);
                      }
                  });
                
            } 
        }
    }
        function AddDetail(oProduct)
        {
            debugger;

            var oPQDetail={
                PurchaseQuotationDetailID:0,
                PurchaseQuotationID:0,
                ProductID:oProduct.ProductID,
                ProductCode:oProduct.ProductCode,
                ProductName:oProduct.ProductName,
                ActualPrice : 0,
                Quantity : 1,
                Discount : 0,
                ItemWiseTotalDiscount:0,
                MUnitID : oProduct.MeasurementUnitID,
                UnitName : oProduct.MUnitName,
                ItemDescription:""
            };
            if (IsExist(oPQDetail.ProductID)) { alert("Already Exists"); return; }   

            $('#tblPurchaseQuotationDetail').datagrid('appendRow', oPQDetail);
        }

        function UpdateExistingProductQty(nProductID, nQty)
        {
            var oDetails = $('#tblPurchaseQuotationDetail').datagrid('getRows');
            for(var i =0;i<oDetails.length;i++)
            {
                if(parseInt(oDetails[i].ProductID)== parseInt(nProductID ))
                {
                    $('#tblPurchaseQuotationDetail').datagrid('selectRow',i);
                    var oPurchaseQuotationDetail = $('#tblPurchaseQuotationDetail').datagrid('getSelected');
                    oPurchaseQuotationDetail.Quantity = parseInt(oPurchaseQuotationDetail.Quantity)+parseInt(nQty);
                    $('#tblPurchaseQuotationDetail').datagrid('updateRow', { index:i, row: oPurchaseQuotationDetail });
                    return;
                }
            }
        }
    
   
        $("#btnRefreshPurchaseQuotationDetail").click(function () {
            endEditing();
        });
        //Delete Detail
        $("#btnDeletePurchaseQuotationDetail").click(function () {
            var oPQDetail = $('#tblPurchaseQuotationDetail').datagrid('getSelected');
            if (oPQDetail == null)
            {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex = $('#tblPurchaseQuotationDetail').datagrid('getRowIndex', oPQDetail);
            if (!confirm("Confirm to Delete?")) return;
            $('#tblPurchaseQuotationDetail').datagrid('deleteRow', SelectedRowIndex);
            editIndex = undefined;
            endEditing();
        });


        function ValidateInputPurchaseQuotationDetail()
        {
            if (parseInt(_oPurchaseQuotationDetail.ProductID) <= 0)
            {
                alert("Please select Product"); $('#txtProductName').focus();
                $('#txtProductName').css("border", "1px solid #c00"); return false;
            }
            if ($('#cboUnitName').val() <= 0)
            {
                alert("Please select Unit Name."); $('#cboUnitName').focus();
                $('#cboUnitName').css("border", "1px solid #c00");
                return false;
            }
            if (parseFloat($('#txtUnitPrice').numberbox('getValue')) <= 0)
            {
                alert("Unit Price should be Greater than Zero");
                $('#txtUnitPrice').focus();
                $('#txtUnitPrice').css("border", "1px solid #c00"); return false;
            }
            if (parseFloat($('#txtQty').numberbox('getValue')) <= 0)
            {
                alert("Quantity should be Greater than Zero");
                $('#txtQty').focus();
                $('#txtQty').css("border", "1px solid #c00"); return false;
            }
            return true;
        }

        function IsExist(nProductID ,IsSpecExist)
        {
            var flag =false;
            var oPQDetails = $('#tblPurchaseQuotationDetail').datagrid('getRows');
            for (var i = 0; i < oPQDetails.length; i++) {
                if (parseInt(oPQDetails[i].ProductID) == parseInt(nProductID))
                {
                    flag= true;
                }
            }
            if(IsSpecExist)
                flag=false;

            return flag;
        }

    
        $("#btnClose").click(function(){
            window.location.href = sessionStorage.getItem("BackLink");
        });

        $(document).keydown(function(e) {
            if(e.which == 27)//escape=27
            {
                window.location.href = _sBaseAddress+ "/PurchaseQuotation/ViewPurchaseQuotations?menuid="+_nMenuid;
            }
        });

        function RefreshNewObjectPQD()
        {
            var oPQD = {
                PurchaseQuotationDetailID: 0,
                PurchaseQuotationID:_oPurchaseQuotation.PurchaseQuotationID,
                ProductID: 0,
                ProductCode : "",
                ProductName : "",
                UnitPrice : 0,
                ActualPrice : 0,
                Discount:0,
                ItemWiseTotalDiscount:0,
                Quantity: 0,
                MUnitID : 0,
                UnitName :"",
                UnitSymbol : "",
                ApprovedBy : 0,
                ApprovedDate: new Date(),
                ItemDescription : "",
                ApprovedByName : ""
            };

            return oPQD;
        }


        function LoadUnit(nUnitType) {
            var oMeasurementUnit = { UnitTypeInInt: nUnitType };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oMeasurementUnit,
                ControllerName: "MeasurementUnit",
                ActionName: "GetbyUnitType",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
       
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].MeasurementUnitID > 0) { var oMUnits = response.objs; }
                    $("#cboUnitName").icsLoadCombo({
                        List: oMUnits,
                        OptionValue: "MeasurementUnitID",
                        DisplayText: "UnitName"
                    });
                }
            });
        }
  

        //Supplier Part
        $("#txtSupplierName").keydown(function (e) {
       
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) // Enter Press
            {
                var oContractor = {
                    Params: '1' + '~' + $.trim($('#txtSupplierName').val()+'~'+sessionStorage.getItem("BUID"))
                };
                var obj = {
                    BaseAddress: _sBaseAddress,
                    Object: oContractor,
                    ControllerName: "Contractor",
                    ActionName: "ContractorSearchByNameType",
                    IsWinClose: false
                };
                $("#progressbar").progressbar({ value: 0 });
                $("#progressbarParent").show();
                var intervalID = setInterval(updateProgress, 250);
                $.icsDataGets(obj, function (response) {
                    clearInterval(intervalID);
                    $("#progressbarParent").hide();
                    if (response.status && response.objs.length > 0) {
                        if (response.objs[0].ContractorID > 0) {
                  
                            var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 250, align: "left" };tblColums.push(oColumn);
                            oColumn = { field: "Address", title: "Address", width: 280, align: "left" };tblColums.push(oColumn);
                            var oPickerParam = {
                                winid: 'winSupplier',
                                winclass:'clsSupplier',
                                winwidth: 600,
                                winheight: 460,
                                tableid: 'tblSuppliers',
                                tablecolumns: tblColums,
                                datalist: response.objs,
                                multiplereturn: false,
                                searchingbyfieldName:'Name',
                                windowTittle: 'Supplier List'
                            };
                            $.icsPicker(oPickerParam);
                            IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                        }
                        else { alert(response.objs[0].ErrorMessage); }
                    }
                });
            }
        });

        ////Load for button click
        $("#btnPickSupplier").click(function () {
            var oContractor = {
                Params: '1'+'~'+ '~' +sessionStorage.getItem("BUID")
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {
                        var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 250, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Address", title: "Address", width: 280, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winSupplier',
                            winclass: 'clsSupplier',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblSuppliers',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Supplier List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });

        });

        $('#txtSupplierName').keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 8) //backspace=8
            {
                var txtSupplierName = document.getElementById("txtSupplierName");
                //txtSupplierName.value = '';
                txtSupplierName.style.color = "black";
                txtSupplierName.style.fontWeight = "normal";
                _oPurchaseQuotation.SupplierID = 0;
                _oSCPersons = [];
                $("#cboSCPerson").icsLoadCombo({
                    List: _oSCPersons,
                    OptionValue: "ContactPersonnelID",
                    DisplayText: "Name"
                });
            }
        });
        function LoadContractPersonals(nContractorID) {
            var oContractor = { ContractorID: nContractorID };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "GetContactPersonnels",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
         
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContactPersonnelID > 0) { _oSCPersons = response.objs; }
                    $("#cboSCPerson").icsLoadCombo({
                        List: _oSCPersons,
                        OptionValue: "ContactPersonnelID",
                        DisplayText: "Name"
                    });
                    $("#cboSCPerson").val(_oPurchaseQuotation.SCPerson);
                }
            });
        }

        //CollectBy Part
        $("#txtCollectByName").keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) // Enter Press
            {
                var oMarketingAccount_BU = {Name:$('#txtCollectByName').val(),BUID:sessionStorage.getItem("BUID") };//for Market Person
                var obj = {
                    BaseAddress: _sBaseAddress,
                    Object: oMarketingAccount_BU,
                    ControllerName: "MarketingAccount",
                    ActionName: "MarketingAccountSearchByName",
                    IsWinClose: false
                };
                $("#progressbar").progressbar({ value: 0 });
                $("#progressbarParent").show();
                var intervalID = setInterval(updateProgress, 250);
                $.icsDataGets(obj, function (response) {
                    clearInterval(intervalID);
                    $("#progressbarParent").hide();
                    if (response.status && response.objs.length > 0) {
                        if (response.objs[0].MarketingAccountID > 0)
                        {
                            var tblColums = []; var oColumn = { field: "Name", title: "Account Name", width: 320, align: "left" }; tblColums.push(oColumn);
                            var oPickerParam = {
                                winid: 'winCollectByPicker',
                                winclass: 'clsCollectBy',
                                winwidth: 500,
                                winheight: 460,
                                tableid: 'tblCollectBysPicker',
                                tablecolumns: tblColums,
                                datalist: response.objs,
                                multiplereturn: false,
                                searchingbyfieldName: 'MarketingAccountName',
                                windowTittle: 'Collect By List'
                            };
                            $.icsPicker(oPickerParam);
                            IntializePickerbutton(oPickerParam);
                        }
                        else
                        {
                            alert(response.objs[0].ErrorMessage);
                        }

                    }
                });
            }
        });

        $("#btnPickCollectBy").click(function () {
            var oMarketingAccount_BU = {BUID:sessionStorage.getItem("BUID") };//for Market Person
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oMarketingAccount_BU,
                ControllerName: "MarketingAccount",
                ActionName: "MarketingAccountSearchByName",
                IsWinClose: false
            };
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].MarketingAccountID > 0) {
                        var tblColums = [];
                        var oColumn = { field: "Name", title: "Account Name", width: 320, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winCollectByPicker',
                            winclass: 'clsCollectBy',
                            winwidth: 500,
                            winheight: 460,
                            tableid: 'tblCollectBysPicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'MarketingAccountName',
                            windowTittle: 'Collect By List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                }
            });

        });

        $('#txtCollectByName').keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 8) //backspace=8
            {
                var txtCollectByName = document.getElementById("txtCollectByName");
                //txtCollectByName.value = '';
                txtCollectByName.style.color = "black";
                txtCollectByName.style.fontWeight = "normal";
                _oPurchaseQuotation.CollectBy = 0;
            }
        });
    
        $("#txtPRNo").keydown(function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) // Enter Press
            {
                GetRequistions($('#txtPRNo').val());
            }
        });
        $("#btnPRPick").click(function () {
            GetRequistions("");
        });
        $('#txtPRNo').keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 8) //backspace=8
            {
                //debugger;
                var txttPurchaseRequsitionName = document.getElementById("txtPRDetail");
                txttPurchaseRequsitionName.style.color = "black";
                txttPurchaseRequsitionName.style.fontWeight = "normal";

            }
        });

        function GetRequistions(sPRNoOrProductName)
        {
            var oPurchaseRequsition = {PRNo:sPRNoOrProductName,BUID:sessionStorage.getItem("BUID") };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oPurchaseRequsition,
                ControllerName: "PurchaseRequisition",
                ActionName: "GetPurchaseRequsition",
                IsWinClose: false
            };
            var $This=$(this);
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {
                debugger;
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].PRDetailID> 0) {
                        var tblColums = []; var oColumn = { field: "PRNo", title: "Req No", width: 80, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Product", width: 150, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "RequirementDateInString", title: "Required Date", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "PrepareByName", title: "Requsition By", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "UnitSymbol", title: "Unit", width: 50, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Qty", title: "Quantity", width: 100, align: "right" }; tblColums.push(oColumn);
                   
                        var oPickerParam = {
                            winid: 'winPurchaseRequsitionDetails',
                            winclass: 'clsPurchaseRequsition',
                            winwidth: 650,
                            winheight: 460,
                            tableid: 'tblPurchaseRequsitions',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'PRNo',
                            windowTittle: 'Purchase Requsition List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Sorry, There is No Requisiton within Last One Month.");
                    return;
                }
            });
        }

        function RefreshControl()
        {
            debugger;
            if(_oPurchaseQuotation.CurrencyID<=0)
            {
                $("#cboCurrency").val(_oCompany.BaseCurrencyID);
            }
            else{
                $("#cboCurrency").val(_oPurchaseQuotation.CurrencyID);
            }
            $("#txtPurchaseQuotationNo").val(_oPurchaseQuotation.PurchaseQuotationNo);
         
            $("#txtSupplierReference").val(_oPurchaseQuotation.SupplierReference);
            var txtSupplierName = document.getElementById("txtSupplierName");
            txtSupplierName.value = _oPurchaseQuotation.SupplierName;
            txtSupplierName.style.color = "blue";
            txtSupplierName.style.fontWeight = "bold";
            $('#txtSupplierAddress').val(_oPurchaseQuotation.SupplierAddress);
            var txtCollectByName = document.getElementById("txtCollectByName");
            txtCollectByName.value = _oPurchaseQuotation.CollectByName;
            txtCollectByName.style.color = "blue";
            txtCollectByName.style.fontWeight = "bold";
            $("#cboPaymentTerm").val(_oPurchaseQuotation.PaymentTerm);
          
            
            if(_oPurchaseQuotation.PurchaseQuotationDetails!=null)
            {
                DynamicRefreshList(_oPurchaseQuotation.PurchaseQuotationDetails, "tblPurchaseQuotationDetail");
            }
            else
            {
                DynamicRefreshList([], "tblPurchaseQuotationDetail");
            }
            if(_oPurchaseQuotation.PQTermsAndConditions!=null)
            {
                DynamicRefreshList(_oPurchaseQuotation.PQTermsAndConditions, "tblPQTermsAndCondition");
            }
            else
            {
                DynamicRefreshList([], "tblPQTermsAndCondition");
            }
            $('#txtRateCollectDate').datebox('setValue', _oPurchaseQuotation.RateCollectDateInString);
            $('#txtExpiredDate').datebox('setValue', _oPurchaseQuotation.ExpiredDateInString);
        }

        function RefreshSummary()
        {
            var sCurrency="";
            for(var i = 0; i<_oCurrencys.length;i++)
            {
                if(parseInt(_oCurrencys[i].CurrencyID) == parseInt($("#cboCurrency").val()))
                {
                    sCurrency=_oCurrencys[i].Symbol;
                    break;
                }
                else
                {
                    sCurrency=_oCompany.CurrencySymbol;
                }
         
            }
            var oPQDetails = $('#tblPurchaseQuotationDetail').datagrid('getRows');
            var nTotalAmount = 0;
       
            for(var i = 0; i<oPQDetails.length;i++)
            {
                nTotalAmount+=parseFloat(oPQDetails[i].UnitPrice*oPQDetails[i].Quantity);
            }
            document.getElementById('lblTotalAmount').innerHTML = sCurrency+" "+formatPrice(nTotalAmount,0);
        
        }
        $('.ChangeCurrency').change(function(){
            debugger;
            if(parseInt($("#cboCurrency").val())>0)
            {
                debugger;
                RefreshSummary();
            }
        });

        //Contact person
        $('#btnNewContactPerson').click(function(e){
            debugger;
            if(parseInt(_oPurchaseQuotation.SupplierID)<=0)
            {
                alert("Please Pick Supplier.");
                return;
            }
            sessionStorage.setItem("ContractorBackTo", "");
            sessionStorage.setItem("SelectedRowIndex", 0);
            sessionStorage.setItem("ContractorHeader", "Add ContactPersonnel");
            window.open(_sBaseAddress+  "/Contractor/ViewContactPersonnel?id="+_oPurchaseQuotation.SupplierID,"_blank");
       
        });
        $('#btnReload').click(function(e){
            LoadContractPersonals(_oPurchaseQuotation.SupplierID);
        });
    
        $("#btnAddSpecification").click(function () {
            var oPurchaseQuotationDetail = $('#tblPurchaseQuotationDetail').datagrid('getSelected');
         
            if(oPurchaseQuotationDetail==null || oPurchaseQuotationDetail.ProductID<=0)
            {
                alert("Please select a Item !");
                return false;
            }
            if(oPurchaseQuotationDetail.PurchaseQuotationDetailID <=0){
                alert("Please Save PurchaseQuotationDetail !");
                return false;

            }
            else
            {
                var obj = {
                    PQDetailID: oPurchaseQuotationDetail.PurchaseQuotationDetailID ,
                    ProductID : oPurchaseQuotationDetail.ProductID

                }
             
                $.ajax
                  ({
                      type: "POST",
                      dataType: "json",
                      url : _sBaseAddress+  "/PurchaseQuotation/ProductSpecHeadByProduct",
                      data:  JSON.stringify(obj),
                      contentType: "application/json; charset=utf-8",
                      success: function (data) {
                          $("#winPQSpecification").icsWindow('open',"Procurement Specification For Product Name :" +oPurchaseQuotationDetail.ProductName);
                          $('#tblPQSpec').datagrid('loadData',data);  
                          if (data.length>0)
                          {
                              for(var i=0; i< data.length ;i++){
                                  if(data[i].PQSpecID > 0)
                                      $('#tblPQSpec').datagrid("checkRow", i);
                              }
                           
                          }
                         

                      },
                      error: function (xhr, status, error)
                      {
                          alert(error);
                      }
                  });


            }
           
        });
        
        function ClosePQSpec()
        {
            $('#winPQSpecification').icsWindow('close');
        }
        function SavePQSpec()
        {
            endEditingPQSpec();
            var oPQSpecs=$('#tblPQSpec').datagrid('getChecked');
            var oPurchaseQuotationDetail = $('#tblPurchaseQuotationDetail').datagrid('getSelected');
         
            if(oPurchaseQuotationDetail==null || oPurchaseQuotationDetail.ProductID<=0)
            {
                alert("Please select a Item !");
                return false;
            }
           
            for(var i=0; i<oPQSpecs.length; i++)
            {
                    if(oPQSpecs[i].PQDescription == ""){
                        alert("Description Can not empty");
                        return;
                    }
                }
                var obj={
                    PQDetailID:oPurchaseQuotationDetail.PurchaseQuotationDetailID,
                    PQSpecs:oPQSpecs
                }
                debugger;
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url : _sBaseAddress+"/PurchaseQuotation/IUDPQSpec",
                    traditional: true,
                    data:  JSON.stringify(obj),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        var result= jQuery.parseJSON(data);
                        if(result.ErrorMessage ==""){
                            alert("Data Save Successfully ");
                            ClosePQSpec();
                        }
                        else{
                            alert(result.ErrorMessage);
                        }
                      
                    },
                    error: function (xhr, status, error)
                    {
                        alert(error);
                    }
                });

            }
            

        var editIndexPQSpec = undefined;
        function endEditingPQSpec(){
            if (editIndexPQSpec == undefined){return true}
            if ($('#tblPQSpec').datagrid('validateRow', editIndexPQSpec)){

                $('#tblPQSpec').datagrid('endEdit', editIndexPQSpec);
                editIndexPQSpec = undefined;
                return true;
            }
            else
            {
                return false;
            }
        }
        function onClickRowPQSpec(index){

            if (editIndexPQSpec != index)
            {
                if (endEditingPQSpec())
                {
                    $('#tblPQSpec').datagrid('selectRow', index).datagrid('beginEdit', index);
                    editIndexPQSpec = index;
                }
                else
                {
                    $('#tblPQSpec').datagrid('selectRow', editIndexPQSpec);
                }
            }
        }

        $("#btnSpecPick").click(function () {
            debugger;
            var getSelection = $('#tblPurchaseQuotationDetail').datagrid('getSelected');
            var getSpecHeads ="";
            var gridData =$('#tblPQSpec').datagrid("getRows");
            if(gridData.length>0){
                for(var i=0; i<gridData.length; i++){
                    getSpecHeads += gridData[i].SpecHeadID +" , ";
                }
            }
         
            var oSpecHead ={
                Params:getSpecHeads
            }
          
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oSpecHead,
                ControllerName: "ProductSpecHead",
                ActionName: "SpecHeadSearchByProduct",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    debugger;
                    if (response.objs[0].SpecHeadID> 0) {
                        var tblColums = [], searcingField = "", windowTittle = "";
                        var oColumn = { field: 'SpecName', name: 'Head Name', width: '50%', enableSorting: false }; tblColums.push(oColumn);
                     
                        var oPickerParam = {
                            winid: 'winSpecHeadPicker',
                            winclass: 'clsSpecHeadPicker',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblSpecHeadPicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            //searchingbyfieldName: 'SpecName',
                            windowTittle: 'Specification Head List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiple return

                        
                    }
                }
            });
        });
   
      
</script>