@{
    ViewBag.Title = "Plan Analysis";
}
@model ESimSol.BusinessObjects.PlanAnalysis

<body onfocus="parent_disable();" onclick="parent_disable();">
    <div class="easyui-panel" title="Plan Analysis" data-options="tools:'#SearchingCrieteriaInfo'" style="padding:5px;width:100%;height:562px;">
        <fieldset>
            <legend>Production Order Info :</legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:12px; width:100%;">
                <tr>
                    <td style=" width:100px;text-align:right;font-weight:bold;">Order No:</td>
                    <td style=" width:120px;text-align:left;"><label id="lblOrderNo"></label></td>
                    <td style=" width:100px;text-align:right;font-weight:bold;">Buyer:</td>
                    <td style=" width:120px;text-align:left;"><label id="lblBuyerName"></label></td>
                    <td style=" width:100px;text-align:right;font-weight:bold;">Style No:</td>
                    <td style=" width:170px;text-align:left;"><label id="lblStyleNo"></label></td>
                    <td style="width:200px; text-align:center; vertical-align:bottom;" rowspan="4">
                        <table border="1" cellpadding="0" cellspacing="0" style="width:105px; height:115px;">
                            <tr>
                                <td><img id="imgCoverImage" src="@Url.Action("GetCoverImage", "GUProductionOrder", new { id = Model.TechnicalSheetID })" alt="Photo" style="width:100px; height:110px" /></td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td style=" width:100px;text-align:right;font-weight:bold;">Recap No:</td>
                    <td style=" width:120px;text-align:left;"><label id="lblRecapNo"></label></td>
                    <td style=" width:100px;text-align:right;font-weight:bold;">Shipment Date:</td>
                    <td style=" width:120px;text-align:left;"><label id="lblShipmentDate"></label></td>
                    <td style=" width:100px;text-align:right;font-weight:bold;">Qty:</td>
                    <td style=" width:170px;text-align:left;"><label id="lblQty"></label></td>
                </tr>
                <tr>
                    <td style=" width:100px;text-align:right;font-weight:bold;">Merchandiser:</td>
                    <td style=" width:120px;text-align:left;"><label id="lblMerchandiserName"></label></td>
                    <td style=" width:100px;text-align:right;font-weight:bold;">Style Desc:</td>
                    <td style=" width:120px;text-align:left;"><label id="lblStyleDescription"></label></td>
                    <td style=" width:100px;text-align:right;font-weight:bold;">Garments:</td>
                    <td style=" width:170px;text-align:left;"><label id="lblGarmentsName"></label></td>
                </tr>
                <tr>
                    <td style=" width:100px;text-align:right;font-weight:bold;">Factory:</td>
                    <td style="text-align:left;" colspan="5"><label id="lblFactory"></label></td>
                </tr>
            </table>
        </fieldset>
        <div class="easyui-tabs" style="width:100%;height:370px;">
            <div id="divRiskMangement" title="Risk Management" style="width:100%;height:360px">
                <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px; width:100%;">
                    <tr>
                        <td style="width:30%; text-align:right">
                            <div class="easyui-panel" title="Production Summary" style="width:100%;height:330px;">
                                <table border="0" cellpadding="2" cellspacing="2" style="width:100%; height:150px;">
                                    <tr>
                                        <td style="width:65%; font-weight:bold; text-align:right;">Actual Short In(%):</td>
                                        <td style="width:35%;text-align:left;color:red;">&nbsp;<label id="lblGapValue">0.00</label></td>
                                    </tr>
                                    <tr>
                                        <td style="width:65%; font-weight:bold; text-align:right;">Estimated Short Qty:</td>
                                        <td style="width:35%;text-align:left;color:red;">&nbsp;<label id="lblShortQty">0.00</label> &nbsp;Pcs</td>
                                    </tr>
                                    <tr>
                                        <td style="width:65%;  font-weight:bold;  text-align:right;">Approximate Finish Date:</td>
                                        <td style="width:35%;text-align:left;color:green;">&nbsp;<label id="lblFinishDate">&nbsp;&nbsp;</label></td>
                                    </tr>
                                    <tr>
                                        <td style="width:65%; font-size:11px;font-weight:bold; text-align:right;">Required Qty(Day) to Meet Plan:</td>
                                        <td style="width:35%;text-align:left;color:green;">&nbsp;<label id="lblApproxQty">0.00</label>&nbsp;Pcs</td>
                                    </tr>
                                </table>
                                <fieldset style="height:120px; width:93%;">
                                    <legend style="font-weight:bold;color:gray">RePlan</legend>
                                    <table border="0" cellpadding="4" cellspacing="4" style="font-size:12px; width:100%;">
                                        <tr>
                                            <td style="width:44%; text-align:right;"><input id="chkboxCalculteValue" type="checkbox" onclick="IsCalculateValueCheck()" />Calculate Qty</td>
                                            <td style="width:56%; text-align:center;"><input id="chkboxCalculteDate" type="checkbox" onclick="IsCalculateDateCheck()" />Calculate Date</td>
                                        </tr>
                                        <tr>
                                            <td id="tdSelectDate" style="width:100%; text-align:left;" colspan="2">Select Date:<input id="txtDate" type="text" style="width:45%;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp;&nbsp;<input type="button" id="btnRefresh" style="width:22%" onclick="RefreshRePlan(true)" value="Refresh" /> </td>
                                        </tr>
                                        <tr>
                                            <td id="tdSelectQty" style="width:100%; text-align:left;" colspan="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Qty:<input type="number" id="txtQty" style="width:120px;" />&nbsp;&nbsp;<input type="button" id="btnRefresh" style="width:22%" onclick="RefreshRePlan(false)" value="Refresh" /> </td>
                                        </tr>
                                        <tr>
                                            <td id="tdResult" style="width:100%; text-align:center;color:green; font-weight:bold; " colspan="2"><label id="lblResult"></label></td>
                                        </tr>
                                    </table>
                                </fieldset>
                            </div>
                        </td>
                        <td style="width:0.5%;">&nbsp;&nbsp;&nbsp;</td>
                        <td style="width:69.5%; text-align:left">
                            <div class="easyui-panel" title="Graph Representation " style="width:100%;height:330px;">
                                <div id="RiskGraph" style="text-align:center;height:300px; width:100%;margin:0 auto"></div>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            <div id="divPlanAnalysis" title="Plan Vs Execution Ratio" style="width:970px;height:365px">
                <table id="tblplananalysis" title="" class="easyui-datagrid" style="width:970px;height:360px" fitcolumns="true" fit="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar"></table>
            </div>
            <div id="toolbar">
                <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" style="width:80px; height:20px; font-size:11px;" plain="true" onclick="Print()">Print</a>
            </div>
        </div>
    </div>

    <div id="SearchingCrieteriaInfo" style="height:10px; margin-top:0px;">
        <table border="0" cellpadding="0" cellspacing="0" style="font-size:10px;">
            <tr>
                <td>
                    <a id="btnAdvanceSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" style="width:80px; height:20px; font-size:11px;" plain="true" onclick="AdvanceSearch()">Search</a>
                    <select id="cboStep" style="width:150px"> </select>
                    <a id="btnReload" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" style="width:80px;height:20px; font-size:11px;" onclick="Refresh()">Refresh</a>
                </td>
            </tr>
        </table>
    </div>
    @*-----------DIV ADVCANCE SEARCH----------------*@
    <div id="winAdvanceSearch" class="easyui-window" title="Request For Approval" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">

        <div style="font-family:Tahoma" class="menuMainCollectionTable">
            @*<table border="0" style="background-color:#CFB53B;width:720px">
                    <tr>

                        <td style="width:720px; text-align:center; text-decoration:underline; font-size:15px; color: White; font-weight:bold"><label id="lblHeaderName">Production Order Advance Search</label></td>
                    </tr>
                </table>*@
            <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px">
                <tr style="height:370px">
                    <td style="width:500px">
                        <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px">
                            <tr style="height:260px">
                                <td style="width:400px; vertical-align:top;height:320px">
                                    <fieldset>
                                        <legend style="font-weight:bold; font-size:12px"> Searching Criteria : </legend>
                                        <table border="0" cellpadding="0" cellspacing="0" style=" width:340px; font-size:12px">
                                            <tr>
                                                <td style="width:130px; text-align:left; font-weight:bold">
                                                    Style No:
                                                </td>
                                            </tr>
                                            <tr>

                                                <td style="width:200px;text-align:left">
                                                    @Html.TextBox("txtStyleNoAS", "", new { style = "width: 325px", id = "txtStyleNoAS" })
                                                </td>
                                            </tr>

                                            <tr>
                                                <td style="width:130px; text-align:left; font-weight:bold">
                                                    Production Order No:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:200px;text-align:left">
                                                    @Html.TextBox("txtPONo", "", new { style = "width: 325px", id = "txtPONo" })
                                                </td>
                                            </tr>

                                            <tr>
                                                <td style="width:130px;text-align:left; font-weight:bold">
                                                    Buyer(s):
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:200px;text-align:left">

                                                    @Html.TextBox("txtBuyerName", "", new { style = "width: 255px", id = "txtBuyerName", placeholder = "Type Buyer & Press Enter" })<input type="button" style="width:70px; font-size:12px" onclick="BuyerPiker()" , value="Pick" />
                                                </td>
                                            </tr>

                                            <tr>
                                                <td style="width:130px;text-align:left; font-weight:bold">
                                                    Production Factory :
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:200px;text-align:left">

                                                    @Html.TextBox("txtFactoryName", "", new { style = "width: 255px", id = "txtFactoryName", placeholder = "Type Factory & Press Enter" })<input type="button" style="width:70px; font-size:12px" onclick="FactoryPiker()" , value="Pick" />

                                                </td>
                                            </tr>

                                            <tr>
                                                <td style="width:130px;text-align:left; font-weight:bold">
                                                    Merchandiser:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:200px;text-align:left; font-size:12px">
                                                    <select id="cboMerchandiser" style="width:325px;font-size:12px" />
                                                </td>
                                            </tr>

                                            <tr>
                                                <td style="width:130px;text-align:left; font-weight:bold">
                                                    Order Status :
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:200px;text-align:left; font-size:12px">
                                                    <table id="tblStatusLoad" title="" class="easyui-datagrid" style="width:325px;height:155px;font-size:12px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" , autorowheight="false">
                                                        <thead>
                                                            <tr>
                                                                <th data-options="field:'Selected',checkbox:true"></th>
                                                                <th field="Value" width="200">Status</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </td>
                                            </tr>


                                            <tr>
                                                <td style="width:130px;text-align:left; font-weight:bold">
                                                    Order Date:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:200px;text-align:left; font-size:12px">
                                                    <table border="0" style="font-size:12px">
                                                        <tr>
                                                            <td style="width:71px;font-size:12px;text-align:left">@Html.DropDownList("cboOrderDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboOrderDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeA" })</td>
                                                            <td style="width:60px;font-size:12px"><input id="txtOpenOrderDate" type="text" style="width: 98px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                                            <td style="width:9px; font-size:12px" id="enddateT">To</td>
                                                            <td style="width:60px;font-size:12px" id="enddate"><input id="txtOrderCreateEndDate" type="text" style="width: 97px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>

                                            <tr>
                                                <td style="width:130px;text-align:left; font-weight:bold">
                                                    Shipment Date:
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style="width:200px;text-align:left; font-size:12px">
                                                    <table border="0" style="font-size:12px">
                                                        <tr>
                                                            <td style="width:71px;font-size:12px;text-align:left">@Html.DropDownList("cboShipmentDate", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumCompareOperator))), new { id = "cboShipmentDate", style = "width: 100px;font-size:12px;text-align:left", @class = "_select_changeB" })</td>
                                                            <td style="width:60px;font-size:12px"><input id="txtOpenShipmentDate" type="text" style="width: 98px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                                            <td style="width:9px; font-size:12px" id="enddateST">To</td>
                                                            <td style="width:60px;font-size:12px" id="enddateS"><input id="txtShipmentCreateEndDate" type="text" style="width: 97px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>

                                            <tr style="height:50px; vertical-align:bottom">
                                                <td style=" text-align:left; width:325px;">
                                                    <table border="0" cellpadding="0" cellspacing="0">
                                                        <tr>
                                                            <td style=" text-align:left;"><input type="button" value="Reset" id="btnReset" style="width:70px; text-align:left;" /></td>
                                                            <td style=" text-align:right; width:255px;"><input type="button" value="Search" id="btnAdvRefresh" style="width:70px; text-align:right;" /></td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                        </table>
                                    </fieldset>
                                </td>
                                <td style="width:323px; height:370px;vertical-align:top; padding: 7px">
                                    <table id="tblGUProductionOrder" title="Production Order List" class="easyui-datagrid" style="width:350px;height:470px;font-size:12px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" , autorowheight="false">
                                        <thead>
                                            <tr>                                                
                                                <th field="GUProductionOrderNo" width="90">P.O No</th>
                                                <th field="OrderRecapNo" width="100">Recap No</th>
                                                <th field="StyleNo" width="120">Style No</th>
                                                <th field="BuyerName" width="100">Buyer</th>
                                                <th field="ProductionFactoryName" width="110">Yarn Factory</th>
                                                <th field="OrderDateInString" width="80">Order Date</th>

                                            </tr>
                                        </thead>
                                    </table>
                                </td>

                            </tr>
                        </table>
                    </td>
                </tr>
                <tr style="height:50px">
                    <td style="width:650px; text-align:right">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </div>

    </div>
</body>
<script type="text/javascript">
var _oPlanAnalysis=null;
var _nGUProductionOrderID=0;
var _sBaseAddress="";
var _oAuthorizationRolesMapping = [];
var _objectList=[];
var _dMaxExecutionDate = null;
var _RiskPlot = null;
var _dSelectedDate = null;
var _nTypeQty  = 0;
var _CalculateOutput = null;
var _oGUProductionOrders=[];
var _sBaseAddress="";   
var _EmployeeList=[];
var _bMultipleItemReturn=true;
var _nFactoryID =0;
var _nBuyerID =0;
var _oLoadLabDipStatus=[];
$(document).ready(function () {
    //debugger;
    _oPlanAnalysis =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model)); 
    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));  
    $('#cboStep').empty();
    var liststeps= "<option value='"+0+"'>" +"--Select Step--" + "</option>";
    $("#cboStep").html(liststeps);
    $('#txtDate').datebox('setValue',icsdateformat(new Date()));
    document.getElementById('tdSelectDate').style.display='none';
    document.getElementById('tdSelectQty').style.display='none';
    //$('#txtQty').numberbox({min:0,precision:2});

    //ReadyFunc For WinAdvanceSearch
    SetDate();
    _EmployeeList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Employees));
    _oLoadLabDipStatus=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.StatusList));
    RefreshStatusList(_oLoadLabDipStatus);
    $('#cboMerchandiser').empty();
    var listItems= "<option value='"+0+"'>" +"--Select Merchandiser--" + "</option>";
    for (var i = 0; i < _EmployeeList.length; i++)
    {
        listItems+= "<option value='" + _EmployeeList[i].EmployeeID + "'>" + _EmployeeList[i].Name + "</option>";
    }
    $("#cboMerchandiser").html(listItems);
    
});


    function AdvanceSearch()
    {
        $("#winAdvanceSearch").icsWindow('open', "Advance Search");
        //var oParameter = new Object();
        //oParameter.Name = "Production Order Advance Search";
        //oParameter.MultipleItemReturn=true;
        //var url = _sBaseAddress+"/GUProductionOrder/AdvanceSearch"
        //var oGUProductionOrders = window.showModalDialog(url, oParameter, 'dialogHeight:565px;dialogWidth:745px;dialogLeft:250;dialogTop:50;center:yes;resizable:yes;status:no;scroll:no');
        //if(oGUProductionOrders.length>0)
        //{
        //  RefreshList(oGUProductionOrders);
        //}
    }

    //------------------FUNCTION FOR winAdvanceSearch

    function SetDate()
    {
        $('#txtOpenOrderDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtOrderCreateEndDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtOpenShipmentDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtShipmentCreateEndDate').datebox('setValue', icsdateformat(new Date()));
    }

    function RefreshStatusList(oTempLoadCostSheetStatus)
    {
        debugger;
        data=oTempLoadCostSheetStatus;
        data={"total":""+data.length+"","rows":data};
        $('#tblStatusLoad').datagrid('loadData',data);
    }

    $('._select_changeA').change(function () {
        //debugger;
        var x = $("#cboOrderDate").val();
        if (x == "EqualTo" || x == "NotEqualTo" || x == "GreaterThen" || x == "SmallerThen") {
            document.getElementById("enddate").style.display = 'none';
            document.getElementById("enddateT").style.display = 'none';
        }
        else {
            document.getElementById("enddate").style.display = '';
            document.getElementById("enddateT").style.display = '';
        }
    });

    $('._select_changeB').change(function () {
        //debugger;
        var x = $("#cboShipmentDate").val();
        if (x == "EqualTo" || x == "NotEqualTo" || x == "GreaterThen" || x == "SmallerThen") {
            document.getElementById("enddateS").style.display = 'none';
            document.getElementById("enddateST").style.display = 'none';
        }
        else {
            document.getElementById("enddateS").style.display = '';
            document.getElementById("enddateST").style.display = '';
        }
    });

    function sMakeQuery(sStauses)
    {
        var sSatusRes="";
        for(var i =0;i<sStauses.length;i++)
        {
            var status=sStauses[i].id;
            sSatusRes=sSatusRes+status+',';
        }

        return sSatusRes.substring(0, sSatusRes.length - 1);
    }


    $('#btnAdvRefresh').click(function () {
        debugger;
        var cboOrderDate = document.getElementById("cboOrderDate");
        var nOrderCreateDate=cboOrderDate.options[cboOrderDate.selectedIndex].index;

        var cboShipmentDate = document.getElementById("cboShipmentDate");
        var nShipmentDate=cboShipmentDate.options[cboShipmentDate.selectedIndex].index;


        var cboMerchandiser=document.getElementById("cboMerchandiser");
        var nMerchandiser=cboMerchandiser.options[cboMerchandiser.selectedIndex].value;
        var sStyleNo= document.getElementById("txtStyleNoAS").value;

        var sPONo= document.getElementById("txtPONo").value;

        //var cboStatus=document.getElementById("cboStatus");
        //var ncboStatus=cboStatus.options[cboStatus.selectedIndex].index;

        var sSupplierName =document.getElementById("txtFactoryName").value;

        var sSOCDs=$('#txtOpenOrderDate').datebox('getValue');
        var sSOCDe=$('#txtOrderCreateEndDate').datebox('getValue');

        var sSipmemntStartD=$('#txtOpenShipmentDate').datebox('getValue');
        var sSipmemntEndD=$('#txtShipmentCreateEndDate').datebox('getValue');

        var ncboStatus =  $('#tblStatusLoad').datagrid('getChecked');
        var chkResult = CheckEmpty();
        if(chkResult!=true)
        {
            alert("Please Select at lease one Criteria !!");
            return;
        }
        var sMakStatsQry ="";
        if(ncboStatus.length>0)
        {
            sMakStatsQry = sMakeQuery(ncboStatus);
        }
        var sTempString = nOrderCreateDate+'~'+sSOCDs+'~'+sSOCDe+'~'+nShipmentDate+'~'+sSipmemntStartD+'~'+sSipmemntEndD+'~'+sStyleNo+'~' +sPONo+'~'+_nBuyerID+'~'+_nFactoryID+'~'+nMerchandiser+'~'+sMakStatsQry+'~'+sessionStorage.getItem('BUID');
        var tsv =((new Date()).getTime())/1000;
        $.ajax({
            type: "GET",
            dataType: "json",
            url: '@Url.Action("Gets", "GUProductionOrder")',
            data: { sTemp: sTempString, ts : tsv },
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                ////debugger;
                var  oGUProductionOrders = jQuery.parseJSON(data);
                if (oGUProductionOrders != null) {
                    if(oGUProductionOrders.length>0)
                    {
                        RefreshListAS(oGUProductionOrders);
                        //$('#tblGUProductionOrder').datagrid({selectOnCheck:false, checkOnSelect:false})
                        //if(_bMultipleItemReturn==false)
                        //{
                        //    $('#tblGUProductionOrder').datagrid('hideColumn','Selected');
                        //    $('#tblGUProductionOrder').datagrid({ onDblClickRow: function (rowIndex, rowData) { RowDoubleClickEvent(rowIndex, rowData); } });
                        //}
                    }
                    else
                    {
                        alert("Data not found!!");
                        RefreshListAS(oGUProductionOrders);
                    }
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });


    function RefreshListAS(oGUProductionOrders)
    {
        data =oGUProductionOrders;
        data={"total":""+data.length+"","rows":data};
        $('#tblGUProductionOrder').datagrid('loadData',data);
    }
    $('#btnReset').click(function () {
        //debugger;
        _nBuyerID =0;
        _nFactoryID =0;
        document.getElementById("txtBuyerName").value= '';
        document.getElementById("txtStyleNoAS").value='';
        document.getElementById("txtPONo").value='';
        document.getElementById("txtFactoryName").value='';
        var txtBuyerName=document.getElementById("txtBuyerName");
        txtBuyerName.style.color="black";
        txtBuyerName.style.fontWeight="normal";

        var txtFactoryName=document.getElementById("txtFactoryName");
        txtFactoryName.style.color="black";
        txtFactoryName.style.fontWeight="normal";

        document.getElementById("enddate").style.display = '';
        document.getElementById("enddateT").style.display = '';
        document.getElementById("enddateS").style.display = '';
        document.getElementById("enddateST").style.display = '';

        $('#cboMerchandiser').val(0);
        RefreshStatusList(_oLoadLabDipStatus);
        $('#cboOrderDate').val('None');
        $('#cboShipmentDate').val('None');
        SetDate();
        var oGUProductionOrders=[];
        RefreshListAS(oGUProductionOrders);

    });
    function CheckEmpty()
    {

        var cboOrderDate = document.getElementById("cboOrderDate");
        var nOrderCreateDate=cboOrderDate.options[cboOrderDate.selectedIndex].index;


        var cboShipmentDate = document.getElementById("cboShipmentDate");
        var nShipmentDate=cboShipmentDate.options[cboShipmentDate.selectedIndex].index;

        var cboMerchandiser=document.getElementById("cboMerchandiser");
        var ncboMerchandiser=cboMerchandiser.options[cboMerchandiser.selectedIndex].value;

        var sStyleNo= document.getElementById("txtStyleNoAS").value;
        var sPONo= document.getElementById("txtPONo").value;

        var ncboStatus =  $('#tblStatusLoad').datagrid('getChecked');

        var sBuyerName=document.getElementById("txtBuyerName").value;


        if(nOrderCreateDate==0 && nShipmentDate==0)
        {
            if(ncboMerchandiser==0 &&  ncboStatus.length<0 && sBuyerName=="" && _nFactoryID==0 && sStyleNo=="" && sPONo =="")
            {
                return false;
            }
            return true;
        }

        return true;
    }

    //---------------- DYNAMIC--------PICKER----------------

    function SetBuyer(oSelectedBuyer) //GetBuyer
    {
        var _oSelectedContractor = oSelectedBuyer;
        if(_oSelectedContractor!=null)
        {
            if(_oSelectedContractor.ContractorID>0)
            {
                var txtBuyerName=document.getElementById("txtBuyerName");
                txtBuyerName.value= _oSelectedContractor.Name;
                txtBuyerName.style.color="blue";
                txtBuyerName.style.fontWeight="bold";
                _nBuyerID=  _oSelectedContractor.ContractorID;

            }
        }
        $('#txtBuyerName').focus();
    }

    function FactoryPiker(oTxtName){
        debugger;
        var BUID=sessionStorage.getItem('BUID');
        var oTempName=""
        if (typeof oTxtName != 'undefined')
            oTempName=oTxtName;
        var oContractor = {
            Params: '3'+'~'+oTempName+'~'+BUID
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };

        var tblColums = [];
        var oColumn = { field: "Name", title: "Name", width: 180, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Address", title: "Address", width: 160, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Email", title: "Email", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);

        DynamicPiker('FactoryPiker',obj,tblColums,false,'Name','ContractorID'); //pickerName,obj,table,multiReturn,SearchingField
    }

    function SetFactory(oSelectedContractor)
    {
        if(oSelectedContractor!=null)
        {
            if(oSelectedContractor.ContractorID>0)
            {
                var txtFactoryName=document.getElementById("txtFactoryName");
                txtFactoryName.value= oSelectedContractor.Name;
                txtFactoryName.style.color="blue";
                txtFactoryName.style.fontWeight="bold";
                _nFactoryID=  oSelectedContractor.ContractorID;
            }
        }
        else
        {
            document.getElementById("txtSupplierID").value= '';
        }
        $('#txtFactoryName').focus();
    }

    function BuyerPiker(oTxtName)
    {
        debugger;
        var BUID=sessionStorage.getItem('BUID');
        var oTempName=""
        if (typeof oTxtName != 'undefined')
            oTempName=oTxtName;
        var oContractor = {
            Params: '2'+'~'+oTempName+'~'+BUID
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };

        var tblColums = [];
        var oColumn = { field: "Name", title: "Name", width: 180, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Address", title: "Address", width: 160, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Email", title: "Email", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);

        DynamicPiker('BuyerPiker',obj,tblColums,false,'Name','ContractorID'); //pickerName(unique),obj,table,multiReturn,SearchingField
    }

    function DynamicPiker(pickerName,obj,pTblColums,pMultiReturn,pSearchField,pID)
    {
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0][pID] > 0) {
                    debugger;
                    var tblColums = pTblColums;
                    var oPickerParam = {
                        winid: 'win'+pickerName,
                        winclass: 'cls'+pickerName,
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tbl'+pickerName,
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: pMultiReturn,
                        searchingbyfieldName: pSearchField,
                        windowTittle: pickerName+' List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("Data Not Found.");
                return;
            }
        });
    }

    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    function SetPickerValueAssign(oPickerobj)
    {
        $('#txtLocalYarnSupplierName').focus();
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        var oSelectedContractor=oreturnObj;
        if(oSelectedContractor!=null)
        {
            if (oPickerobj.winid == 'winBuyerPiker')
            {
                SetBuyer(oSelectedContractor);
            }
            else if(oPickerobj.winid == 'winFactoryPiker')
            {
                SetFactory(oSelectedContractor);
            }
        }
    }

    // Search Buyer Start
    $('#txtBuyerName').keydown(function (e) {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            var txtBuyerName = document.getElementById('txtBuyerName').value;
            if(txtBuyerName!="")
            {
                BuyerPiker(txtBuyerName);
            }
        }
    });

    $('#txtBuyerName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            var txtBuyerName=document.getElementById("txtBuyerName");
            txtBuyerName.style.color="black";
            txtBuyerName.style.fontWeight="normal";
            _nBuyerID = 0;

        }
    });
    // Search Buyer End

    // Search Factory Start
    $('#txtFactoryName').keydown(function (e) {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            var txtFactoryName = document.getElementById('txtFactoryName').value;
            if(txtFactoryName!="")
            {
                FactoryPiker(txtFactoryName);
            }
        }
    });

    $('#txtFactoryName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            var txtFactoryName=document.getElementById("txtFactoryName");
            txtFactoryName.style.color="black";
            txtFactoryName.style.fontWeight="normal";
            _nFactoryID = 0;
        }
    });
    // Search Buyer End
    function Close()
    {
        $("#winAdvanceSearch").icsWindow('close');
    }

    function OkButtonClick()
    {


        ////debugger;
        //var oGUProductionOrders=[];
        //var oGUProductionOrders = $('#tblGUProductionOrder').datagrid('getChecked');
        //if(oGUProductionOrders.length<=0)
        //{
        //    alert("please select atleast one item");
        //    return;
        //}
     
        //if(oGUProductionOrders.length>0)
        //{
        //    RefreshList(oGUProductionOrders);
        //}

        var oGUProductionOrder = $('#tblGUProductionOrder').datagrid('getSelected');
        if(oGUProductionOrder==null || oGUProductionOrder.GUProductionOrderID<=0)
        {
            alert("Please select a item from list!");
            return;
        }

        SetGUProductionOrderInfo(oGUProductionOrder);
        LoadProductionStep(oGUProductionOrder.GUProductionOrderID);
        $("#winAdvanceSearch").icsWindow('close');
    }
    //--------------------- Func FOR ADVANCE SEARCH ENDS ---------------------




    //function Search()
    //{
    //    var oParameter = new Object();
    //    oParameter.Name = "Production Order Advance Search";
    //    oParameter.MultipleItemReturn=false;
    //    oParameter.BUID =sessionStorage.getItem('BUID');
    //    var url = _sBaseAddress+"/GUProductionOrder/AdvanceSearch"
    //    sessionStorage.setItem('Parameter',JSON.stringify(oParameter));
    //    popupWindow =window.open(url,oParameter,"directories=no, status=no, menubar=no, scrollbars=yes, resizable=no,width=735px, height=600px,top=50,left=300");
    //}
    function parent_disable() {
        if(popupWindow && !popupWindow.closed)
            popupWindow.focus();
    }
    function WinReturnPORSearch(oGUProductionOrder)
    {
        if(oGUProductionOrder!=null)
        {
            SetGUProductionOrderInfo(oGUProductionOrder);
            LoadProductionStep(oGUProductionOrder.GUProductionOrderID);
        }
    }

    function SetGUProductionOrderInfo(oGUProductionOrder)
    {
        _nGUProductionOrderID = oGUProductionOrder.GUProductionOrderID;
        document.getElementById('lblOrderNo').innerHTML=oGUProductionOrder.GUProductionOrderNo;
        document.getElementById('lblBuyerName').innerHTML=oGUProductionOrder.BuyerName;
        document.getElementById('lblStyleNo').innerHTML = oGUProductionOrder.StyleNo;
        document.getElementById('lblRecapNo').innerHTML  = oGUProductionOrder.OrderRecapNo;
        document.getElementById('lblShipmentDate').innerHTML  = oGUProductionOrder.ShipmentDateInString;
        document.getElementById('lblQty').innerHTML  = formatPrice(oGUProductionOrder.TotalQty,0)+""+oGUProductionOrder.UnitName;
        document.getElementById('lblFactory').innerHTML  = oGUProductionOrder.ProductionFactoryName;
        document.getElementById('lblMerchandiserName').innerHTML  = oGUProductionOrder.MerchandiserName;
        document.getElementById('lblGarmentsName').innerHTML  = oGUProductionOrder.GarmentsProductName;
        
        document.getElementById('lblStyleDescription').innerHTML  = oGUProductionOrder.StyleDescription;
        RefreshStyleImage(oGUProductionOrder.TechnicalSheetID);
    }

    function LoadProductionStep(nGUProductionOrderID)
    {
        $('#cboStep').empty();
        var liststeps= "<option value='"+0+"'>" +"--Select Step--" + "</option>";
        $.ajax
      ({
          type: "GET",
          dataType: "json",            
          url : _sBaseAddress+  "/PlanAnalysis/GetProductionStep",
          data: {id:nGUProductionOrderID},
          contentType: "application/json; charset=utf-8",
          success: function (data) {
              //debugger;
              var oProductionSteps= jQuery.parseJSON(data);
              if (oProductionSteps.length>0) 
              {
                  for (var i = 0; i<oProductionSteps.length; i++)
                  {
                      liststeps+= "<option value='" +oProductionSteps[i].ProductionStepID+ "'>" + oProductionSteps[i].StepName+ "</option>";
                  }
              }
              $("#cboStep").html(liststeps);
          },
          error: function (xhr, status, error) 
          {
              alert(error);
          }
                      
      });
    }

    function Print()
    {
        var scboStep=document.getElementById("cboStep");
        var nStepID= scboStep.options[scboStep.selectedIndex].value;
        var sStepName= scboStep.options[scboStep.selectedIndex].text;
        if(parseInt(_nGUProductionOrderID)<=0)
        {
            alert("Please Select Production Order");
            return ;
        }
        window.open(_sBaseAddress + '/PlanAnalysis/PrintPlanExecutionRatio?id='+_nGUProductionOrderID+"&StepID="+nStepID+"&StepName="+sStepName); 
    }

    
    function Refresh()
    {
        debugger;
        var scboStep=document.getElementById("cboStep");
        var nStepID= scboStep.options[scboStep.selectedIndex].value;
        if(parseInt(_nGUProductionOrderID)<=0)
        {
            alert("Please Select Production Order");
            return ;
        }
        if(parseInt(nStepID)<=0)
        {
            alert("Please Select Step");
            return ;
        }
        if(_nGUProductionOrderID>0)
        {
            $.ajax
          ({
              type: "GET",
              dataType: "json",            
              url : _sBaseAddress+  "/PlanAnalysis/GetPlanAnalysis",
              data: {id:_nGUProductionOrderID,StepID:nStepID},
              contentType: "application/json; charset=utf-8",
              success: function (data) {
                  debugger;
                  _oPlanAnalysises= jQuery.parseJSON(data);
                  if (_oPlanAnalysises.length>0) 
                  {
                      RefreshSummary(_oPlanAnalysises);
                      LoadgraphChart(_oPlanAnalysises,false,false);
                      SetPoint(false);
                      MakeAnalysisTable(_oPlanAnalysises);
                  }
              },
              error: function (xhr, status, error) 
              {
                  alert(error);
              }
                      
          });
        }
        
    }

    function MakeAnalysisTable(oPlanAnalysises)
    {
        //debugger;
        var tblColums=[];
        var oColumn=null;
        oColumn= { field :"AnalysisFieldName", title:"Analysis Field", width:"100"}; 
        tblColums.push(oColumn);    
        var count=0;
        for(var i=0; i<oPlanAnalysises.length;i++)
        {  count++;
            oColumn= {
                field:"Value"+count,
                title: oPlanAnalysises[i].PlanDateInShortString,
                width: "60",
                align: "right",
                styler: function(value,row,index){ return cellStyler(value);},
                formatter: function(value,row,index){ return  value.split('~')[0];}

            }; 
            tblColums.push(oColumn);
        }   
        $('#tblplananalysis').datagrid({columns:[tblColums]});
        var oEmptyList = [];
        RefreshList(oEmptyList);
        RefreshData(oPlanAnalysises);
    }

    function RefreshData(oPlanAnalysises)
    {
        debugger;
        
        var scboStep=document.getElementById("cboStep");
        var sSelectedStepName= scboStep.options[scboStep.selectedIndex].text;
        if(oPlanAnalysises.length>0)
        {
            var objPlanQty = {
                AnalysisFieldName:"Plan Qty"
            };

            var objTotalPlanQty = {
                AnalysisFieldName:"Total Plan Qty",
            };
            var objStepQty = {
                AnalysisFieldName:'Actual '+sSelectedStepName+' Qty'
                
            };
            var objTotalStepQty = {
                AnalysisFieldName:'Total '+sSelectedStepName+' Qty'
            };

            var objRatio = {
                AnalysisFieldName:'Progress Ratio'
            };
            var propertyName = null;            
            var propertyValue = null;            
            var count = 0;
            for(var i=0;i<oPlanAnalysises.length;i++)
            {
                count++;
                //Descriptiion of ~false~2 ; when result is  false then display color; result number(e.g 0,1,2)  is Object Number
                //Set Plan value
                propertyName ="Value"+count;                
                propertyValue = oPlanAnalysises[i].PlanQty+'~true~0';                
                objPlanQty[propertyName] = propertyValue;

                //Set Total Plan value
                propertyValue = oPlanAnalysises[i].TotalPlanQty+'~true~1';
                objTotalPlanQty[propertyName] = propertyValue;

                //Set Step value
                if(parseInt(oPlanAnalysises[i].PlanQty)> parseInt(oPlanAnalysises[i].ExecutionStepQty))
                {    var IsPlanDateLarge= false;             
                    if(new Date(icsdateformat(new Date()))>= new Date(oPlanAnalysises[i].PlanDateInString))
                    {
                        IsPlanDateLarge = true;
                    }
                    propertyValue = oPlanAnalysises[i].ExecutionStepQty+'~false~2~'+IsPlanDateLarge;
                }
                else
                {
                    propertyValue = oPlanAnalysises[i].ExecutionStepQty+'~true~2';
                }
                objStepQty[propertyName] = propertyValue;                
                //Set Total Step value
                if(parseInt(oPlanAnalysises[i].TotalPlanQty)> parseInt(oPlanAnalysises[i].TotalExecutionStepQty))
                {
                    var IsPlanDateLarge= false;             
                    if(new Date(icsdateformat(new Date()))>= new Date(oPlanAnalysises[i].PlanDateInString))
                    {
                        IsPlanDateLarge = true;
                    }
                    propertyValue = oPlanAnalysises[i].TotalExecutionStepQty+'~false~3~'+IsPlanDateLarge;
                }
                else
                {
                    propertyValue = oPlanAnalysises[i].TotalExecutionStepQty+'~true~3';
                }                
                objTotalStepQty[propertyName] = propertyValue;
    
                //Progress Reatio Object
                if(parseFloat((parseFloat(oPlanAnalysises[i].TotalExecutionStepQty) * 100) / parseFloat(oPlanAnalysises[i].TotalPlanQty))<parseFloat(100))
                {
                    var IsPlanDateLarge= false;             
                    if(new Date(icsdateformat(new Date()))>= new Date(oPlanAnalysises[i].PlanDateInString))
                    {
                        IsPlanDateLarge = true;
                    }
                    propertyValue = formatPrice(parseFloat((parseFloat(oPlanAnalysises[i].TotalExecutionStepQty) * 100) / parseFloat(oPlanAnalysises[i].TotalPlanQty)))+'%~false~4~'+IsPlanDateLarge;
                }else
                {
                    propertyValue = formatPrice(parseFloat((parseFloat(oPlanAnalysises[i].TotalExecutionStepQty) * 100) / parseFloat(oPlanAnalysises[i].TotalPlanQty)))+'%~true~4';
                }
                objRatio[propertyName] = propertyValue;                
            }
            $('#tblplananalysis').datagrid('appendRow',objPlanQty);
            $('#tblplananalysis').datagrid('appendRow',objTotalPlanQty);
            $('#tblplananalysis').datagrid('appendRow',objStepQty);
            $('#tblplananalysis').datagrid('appendRow',objTotalStepQty);
            $('#tblplananalysis').datagrid('appendRow',objRatio);
        }
        
    }

    function cellStyler(value)
    {
        // debugger;
        if (value.split('~')[1]=='false')
        {
            if(value.split('~')[3]=='true')//Color will be Up to Current Date;   if current Date  is greater than  Plan date;  than row will be color , other wis not Color;
            {
                if(value.split('~')[2]=='2')
                {
                    return 'background-color:#ffee00;color:black;';      
                }else
                {
                    return 'background-color:red;color:black;';      
                }
            }
            
        }
     
    }

    function RefreshRePlan(IsDateWise)
    {
        debugger;
        _dSelectedDate = $('#txtDate').datebox('getValue');
        _nTypeQty =  $("#txtQty").val();
        if(_oPlanAnalysises.length<=0)
        {
            alert("Please select step and press top Refresh Button ");
            return;
        }
        if(_oPlanAnalysises[_oPlanAnalysises.length-1].TotalPlanQty<=_oPlanAnalysises[_oPlanAnalysises.length-1].TotalExecutionStepQty)
        {
            alert("Execution Already Finish");
            return;
        }
        if(IsDateWise == true)
        {
            if(new Date(icsdateformat(new Date()))>= new Date(_dSelectedDate))
                {
                    alert("Please selected date Should be Greater than "+icsdateformat(new Date()));
                    return;
                }
         
            
            _RiskPlot = null;
            _nTypeQty  = 0;
            LoadgraphChart(_oPlanAnalysises,true,true);
            SetPoint(true);
        }else
        {
          
            if(_nTypeQty=="" || _nTypeQty ==null|| _nTypeQty<=0)
            {
                alert("Qty Should be greater than 0");
                return;
            }
            _RiskPlot = null;
            LoadgraphChart(_oPlanAnalysises,true,false);
            SetPoint(true);
        }
        document.getElementById('tdResult').style.display='';
        document.getElementById('tdResult').innerHTML= _CalculateOutput;
    }

    function LoadgraphChart(oPlanAnalysis,bIsRePlan,bIsDateWise)
    {
        //debugger;
        var nRequirdQty=0;
        var dLastPlanDate = null;
        var nLastTempID=0;
        var nLastTotalExecutionQty = 0;
        var oGraphPlanQty = [];
        var oGraphExecutionQty = [];
        var oCalculatevalue =[];
        var oCalculateDate = [];
        var oGraphTicks=[];
        var oDataPoint=[]; var x=0; var y=0;
        var oTickPoint=[]; var xx=0; var yy="";

            oDataPoint.push(0);
            oDataPoint.push(0)
            oGraphPlanQty.push(oDataPoint);
            
            oDataPoint=[];
            oDataPoint.push(0);
            oDataPoint.push(0)
            oGraphExecutionQty.push(oDataPoint);

            if(bIsRePlan == true)
            {
                if(bIsDateWise==true)
                {
                    oDataPoint=[];
                    oDataPoint.push(0);
                    oDataPoint.push(0)
                    oCalculateDate.push(oDataPoint);
                }
                else
                {
                    oDataPoint=[];
                    oDataPoint.push(0);
                    oDataPoint.push(0)
                    oCalculatevalue.push(oDataPoint);
                }
            }

            oTickPoint.push(0);
            oTickPoint.push('');
            oGraphTicks.push(oTickPoint);
            
            for(var i=0; i<oPlanAnalysis.length; i++)
            {
                oDataPoint=[];
                x = oPlanAnalysis[i].TempID;
                y = oPlanAnalysis[i].TotalPlanQty;
                oDataPoint.push(x);
                oDataPoint.push(y);
                oGraphPlanQty.push(oDataPoint);
                if(new Date(icsdateformat(new Date()))>=new Date(oPlanAnalysis[i].PlanDateInString))
                {
                    oDataPoint=[];
                    x = oPlanAnalysis[i].TempID;
                    y = oPlanAnalysis[i].TotalExecutionStepQty;
                    oDataPoint.push(x);
                    oDataPoint.push(y);
                    oGraphExecutionQty.push(oDataPoint);
                    nLastTempID = oPlanAnalysis[i].TempID;
                    nLastTotalExecutionQty=oPlanAnalysis[i].TotalExecutionStepQty;
                }
                oTickPoint=[];
                xx = oPlanAnalysis[i].TempID;
                yy = oPlanAnalysis[i].PlanDateInShortString;
                oTickPoint.push(xx);
                oTickPoint.push(yy);
                oGraphTicks.push(oTickPoint);
                dLastPlanDate = oPlanAnalysis[i].PlanDateInString;
            }

            if(bIsRePlan == true)
            {
                if(bIsDateWise==true)
                {
                    oCalculateDate = oGraphExecutionQty; // set upto max execution Date
                    debugger;
                    var nDay =GetDiff(new Date(icsdateformat(new Date())), new Date(_dSelectedDate));
                    nRequirdQty = parseFloat((parseFloat(oPlanAnalysis[oPlanAnalysis.length-1].TotalPlanQty) - parseFloat(oPlanAnalysis[0].TotalQtyOfMaxExecutionDate))/(nDay));
                    _CalculateOutput = formatPrice(nRequirdQty,0)+' Pcs';
                    var  dTargetDate= new Date(icsdateformat(new Date()));

                    dTargetDate.setDate(dTargetDate.getDate() + 1);
                    while(dTargetDate<= new Date(_dSelectedDate))
                    {
                        nLastTempID++;
                        nLastTotalExecutionQty= parseFloat(nLastTotalExecutionQty)+parseFloat(formatPrice(nRequirdQty,0));
                        oDataPoint=[];
                        x = nLastTempID;
                        y = nLastTotalExecutionQty;
                        oDataPoint.push(x);
                        oDataPoint.push(y);
                        oCalculateDate.push(oDataPoint);
                        if(new Date(dLastPlanDate)<dTargetDate)  // make x axis date if Plan date is less then dTarget date; because already x axis make upto plan date;
                        {
                            var tempShortDate = (icsdateformat(dTargetDate)).split(" ",2);
                            oTickPoint=[];
                            xx = nLastTempID;
                            yy = tempShortDate[0]+' '+tempShortDate[1];
                            oTickPoint.push(xx);
                            oTickPoint.push(yy);
                            oGraphTicks.push(oTickPoint);
                        }
                        
                        dTargetDate.setDate(dTargetDate.getDate() + 1);
                    }
                   
                }else
                {
                    debugger;
                    oCalculatevalue = oGraphExecutionQty; // set upto max execution Date
                    var nRequiredDay = Math.ceil(parseFloat((parseFloat(oPlanAnalysis[oPlanAnalysis.length-1].TotalPlanQty) - parseFloat(oPlanAnalysis[0].TotalQtyOfMaxExecutionDate))/_nTypeQty));//Find Required Day
                    var  dTargetDate= new Date(icsdateformat(new Date()));//first initialize today date is target date;
                    var dToDay = new Date();
                     dToDay.setDate(dToDay.getDate() + nRequiredDay); //add required day with today date
                     _CalculateOutput = icsdateformat(dToDay); // set out put
                    
                    dTargetDate.setDate(dTargetDate.getDate() + 1); //increase Target Date
                    while(nRequiredDay>0)
                    {
                        nLastTempID++;
                        nLastTotalExecutionQty= parseFloat(nLastTotalExecutionQty)+parseFloat(_nTypeQty);
                        oDataPoint=[];
                        x = nLastTempID;
                        y = nLastTotalExecutionQty;
                        oDataPoint.push(x);
                        oDataPoint.push(y);
                        oCalculatevalue.push(oDataPoint);
                        if(new Date(dLastPlanDate)<dTargetDate) // make x axis date if Plan date is less then dTarget date; because already x axis make upto plan date;
                        {

                            var tempShortDate = (icsdateformat(dTargetDate)).split(" ",2);
                            oTickPoint=[];
                            xx = nLastTempID;
                            yy = tempShortDate[0]+' '+tempShortDate[1];
                            oTickPoint.push(xx);
                            oTickPoint.push(yy);
                            oGraphTicks.push(oTickPoint);
                        }
                        nRequiredDay--;
                        dTargetDate.setDate(dTargetDate.getDate() + 1);
                    }

                   
                }
            }


        var options = {
            series: {
                lines: {
                    show: true
                }
            },

            bars: {
                align: "center",
                barWidth: 0.5
            },
           
            points: { show: true },
            xaxis: {
                axisLabel: "Plan Date",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 10,
                ticks: oGraphTicks

            },

            yaxis: {
                axisLabel: "Plan/Execution Qty",
                position: "left",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 3,
                tickFormatter: function (v, axis) {
                    return numberformat(v);
                }
            },

            legend: {
                noColumns: 0,
                labelBoxBorderColor: "#000000",
                position: "nw"
            },

            grid: {
                hoverable: true,
                borderWidth: 2,
                backgroundColor: { colors: ["#ffffff", "#EDF5FF"]
                }
            }
        };

        function gd(year, month, day) {
            return new Date(year, month, day).getTime();
        }

        var previousPoint = null, previousLabel = null;

             if(bIsRePlan == true)
            {
                if(bIsDateWise==true)
                {
                    var oGraphDataSet = [
                            { label: "Plan", data: oGraphPlanQty  , color: "#291BF5" },
                            { label: "Actual Execution", data: oGraphExecutionQty, color: "#A4472A" },
                            { label: "Approximate Qty", data: oCalculateDate, color: "#37D6A1" }
                    ];
  
                }else
                {
                    var oGraphDataSet = [
                         { label: "Plan", data: oGraphPlanQty  , color: "#291BF5" },
                         { label: "Actual Execution", data: oGraphExecutionQty, color: "#A4472A" },
                         { label: "Approximate Qty", data: oCalculatevalue, color: "#37D6A1" }
                    ];
                }
            }else
            {
                 var oGraphDataSet = [
                            { label: "Plan", data: oGraphPlanQty  , color: "#291BF5" },
                            { label: "Actual Execution", data: oGraphExecutionQty, color: "#A4472A" }
                 ];
 
             }
        //Increase Width of Graph
             if(parseInt(parseInt(oGraphTicks.length) * parseInt(37)) > parseInt(680))
             {
                 var nWidth = parseInt(parseInt(oGraphTicks.length) * parseInt(37)) ;
                 document.getElementById("RiskGraph").style.width = nWidth+'px';
             }else{
                 document.getElementById("RiskGraph").style.width = "680px";
             }
        //Decrease Height of Graph
             document.getElementById("RiskGraph").style.height = "280px";
        
        _RiskPlot = null;
        _RiskPlot = $.plot($("#RiskGraph"), oGraphDataSet, options);
        $.plot($("#RiskGraph"), oGraphDataSet, options);
        $("#RiskGraph").UseTooltip();
    }

    function SetPoint(bIsCalculate)
    {
        debugger;
        var PlanContext = _RiskPlot.getCanvas().getContext("2d");
        var ExecutionContext = _RiskPlot.getCanvas().getContext("2d");
        var oPlans = _RiskPlot.getData()[0].data;
        var oExecutions = _RiskPlot.getData()[1].data;
        if(bIsCalculate==true)
        {
            var CalculateContext = _RiskPlot.getCanvas().getContext("2d");
            var oCalculates = _RiskPlot.getData()[2].data;
            
        }
        var xaxis = _RiskPlot.getXAxes()[0];
        var yaxis = _RiskPlot.getYAxes()[0];

        var offset = _RiskPlot.getPlotOffset();
        PlanContext.font = "12px 'Tahoma'";

        for (var i = 0; i <oPlans.length; i++)
        {
            PlanContext.fillStyle = "Blue";
            var PlanText = parseInt(oPlans[i][1]) + '';
            var PlanMetrics = PlanContext.measureText(PlanText );
            var xPos = (xaxis.p2c(oPlans[i][0])+offset.left) - PlanMetrics.width/2;
            var yPos = yaxis.p2c(oPlans[i][1]) + offset.top - 5;
            PlanContext.fillText(PlanText, xPos, yPos);
        }
        for (var i = 0; i <oExecutions.length; i++)
        {
            ExecutionContext.fillStyle = "Maroon";
            var Sampletext = parseInt(oExecutions[i][1]) + '';
            var Samplemetrics = ExecutionContext.measureText(Sampletext);
            var xPos = (xaxis.p2c(oExecutions[i][0])+offset.left) - Samplemetrics.width/2;
            var yPos = yaxis.p2c(oExecutions[i][1]) + offset.top - 5;
            ExecutionContext.fillText(Sampletext, xPos, yPos);
        }

        if(bIsCalculate==true)
        {
            for (var i = 0; i <oCalculates.length; i++)
            {
                CalculateContext.fillStyle = "Green";
                var CalculateText =parseInt(oCalculates[i][1]) + '';
                var Calculatemetrics = CalculateContext.measureText(CalculateText);
                var xPos = (xaxis.p2c(oCalculates[i][0])+offset.left) - Calculatemetrics.width/2;
                var yPos = yaxis.p2c(oCalculates[i][1]) + offset.top - 5;
                CalculateContext.fillText(CalculateText, xPos, yPos);
            }
        }

    }

    function GetDiff(dStartDate,dEndDate)
    {
        var ndifDay = 0;
        dStartDate.setDate(dStartDate.getDate() + 1);
        while(dStartDate<= dEndDate)
        {
            ndifDay = parseInt(ndifDay)+1; // find number of day between two days
            dStartDate.setDate(dStartDate.getDate() + 1);
        }
        return ndifDay;
    }

    function IsCalculateValueCheck() 
    {
        
        if(document.getElementById("chkboxCalculteValue").checked==true)
        {
            document.getElementById("chkboxCalculteDate").checked=false;
            document.getElementById('tdSelectDate').style.display='';
            document.getElementById('tdSelectQty').style.display='none';
        }else
        {
            document.getElementById('tdSelectDate').style.display='none';
            document.getElementById('tdSelectQty').style.display='none';
        }
        $('#txtQty').val('');
        _CalculateOutput = null;
        document.getElementById('tdResult').innerHTML= _CalculateOutput;
        document.getElementById('tdResult').style.display='none';
        $('#txtDate').datebox('setValue',icsdateformat(new Date()));
       
        
    }

    function IsCalculateDateCheck()
    {
        if(document.getElementById("chkboxCalculteDate").checked==true)
        {
            document.getElementById("chkboxCalculteValue").checked=false;
            document.getElementById('tdSelectDate').style.display='none';
            document.getElementById('tdSelectQty').style.display='';
        }else
        {
            document.getElementById('tdSelectDate').style.display='none';
            document.getElementById('tdSelectQty').style.display='none';
        }
        $('#txtQty').val('');
        document.getElementById('tdResult').style.display='none';
        _CalculateOutput = null;
        document.getElementById('tdResult').innerHTML= _CalculateOutput;
        document.getElementById('tdResult').style.display='none';
        $('#txtDate').datebox('setValue',icsdateformat(new Date()));
        
    }
 
    function RefreshSummary(oPlanAnalysises)
    {
        //debugger;
        if(oPlanAnalysises.length>0)
        {
            if(oPlanAnalysises[oPlanAnalysises.length-1].TotalPlanQty<=oPlanAnalysises[oPlanAnalysises.length-1].TotalExecutionStepQty)
            {
                document.getElementById('lblGapValue').innerHTML = formatPrice(0,0);   
                document.getElementById('lblShortQty').innerHTML = formatPrice(0,0);   
                document.getElementById('lblFinishDate').innerHTML = 'Complete Execution';   
                document.getElementById('lblApproxQty').innerHTML = formatPrice(0,0);
            }else
            {
                document.getElementById('lblGapValue').innerHTML = formatPrice(oPlanAnalysises[0].GapInPercent,0);   
                document.getElementById('lblShortQty').innerHTML = formatPrice(oPlanAnalysises[0].ShortQty,0);   
                document.getElementById('lblFinishDate').innerHTML = oPlanAnalysises[0].ApproximateFinishDateInString;   
                document.getElementById('lblApproxQty').innerHTML = formatPrice(oPlanAnalysises[0].RequiredPerDayTotalQty,0);
            }
            
        }
    }





    function RefreshList(oPlanAnalysiss)
    {    
        data=oPlanAnalysiss;
        data={"total":""+data.length+"","rows":data};
        $('#tblplananalysis').datagrid('loadData',data);
    }

function PrintPreview()
{
    var oPOD= $('#tblPlanAnalysiss').datagrid('getSelected'); 
    if(oPOD==null || parseInt(oPOD.PlanAnalysisID)<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    window.open(_sBaseAddress + '/PlanAnalysis/PODPreview?id='+oPOD.PlanAnalysisID);        
}



function PrintList()
{
   
   var oPlanAnalysiss= $('#tblPlanAnalysiss').datagrid('getRows'); 
    var ids ="";
    if(oPlanAnalysiss.length>0)
    {
        for(var i =0;i<oPlanAnalysiss.length;i++)
        {
            ids =ids+oPlanAnalysiss[i].PlanAnalysisID+",";
        }
       ids= ids.substring(0, parseInt(ids.length - 1));
    }
    if(ids =="" || ids==null)
    {    
        alert("Data not found ");
        return;
    }
    window.open(_sBaseAddress + '/PlanAnalysis/PODPrintList?sID='+ids);  
 
} 



function RefreshStyleImage(nTechnicalSheetID)
{
    $.ajax({
        cache:true,
        type: "POST",
        url: "@(Url.Action("GetCoverImageInBase64", "GUProductionOrder"))",
        data: "id=" + nTechnicalSheetID,
    success: function (data) {
        //debugger;        
        $('#imgCoverImage').attr('src', "data:image/jpg;base64," + data.base64imgage );
    }
});

}


    var previousPoint = null, previousLabel = null;
    $.fn.UseTooltip = function () {
        $(this).bind("plothover", function (event, pos, item) {
            if (item) {
                if ((previousLabel != item.series.label) || (previousPoint != item.dataIndex)) {
                    previousPoint = item.dataIndex;
                    previousLabel = item.series.label;
                    $("#tooltip").remove();

                    var x = item.datapoint[0];
                    var y = item.datapoint[1];
                    nValue = false;
                    var color = item.series.color;

                    showTooltip(item.pageX,
                        item.pageY,
                        color,
                        "<strong>" + item.series.label + "</strong><br>" + item.series.xaxis.ticks[x].label+ " : <strong>" + numberformat(y) + "</strong>");
                }
            } else {
                $("#tooltip").remove();
                previousPoint = null;
            }
        });
    };

    function showTooltip(x, y, color, contents) {
        $('<div id="tooltip">' + contents + '</div>').css({
            position: 'absolute',
            display: 'none',
            top: y - 40,
            left: x - 120,
            border: '2px solid ' + color,
            padding: '3px',
            'font-size': '9px',
            'border-radius': '5px',
            'background-color': '#fff',
            'font-family': 'Verdana, Arial, Helvetica, Tahoma, sans-serif',
            opacity: 0.9
        }).appendTo("body").fadeIn(200);
    }

    function numberformat(val) {
        if (val == null) {
            val = 0;
        }
        val = parseFloat(val);
        var test = val.toFixed();
        var tests = addComma(test);
        return tests;
    }

    function addComma(nStr) {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var process = /(\d+)(\d{3})/;
        while (process.test(x1)) {
            x1 = x1.replace(process, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }



</script>