@model ESimSol.BusinessObjects.TChartsOfAccount
@{
    ViewBag.Title = "Charts of Account List";
}

<div id="winChartofAccounts" class="easyui-window" title="Edit Charts of Account" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <fieldset style="margin-top:2px">
        <table border="0" cellpadding="2" cellspacing="2">
            <tr>
                <td style="width:80px; text-align:right">Code : </td>
                <td style="width:220px">
                    <input id="txtCode" type="text" style="width:98%" disabled="disabled" />
                </td>
            </tr>
            <tr>
                <td style="width:80px; text-align:right">Name : </td>
                <td style="width:220px">
                    <input id="txtName" type="text" style="width:98%" />
                </td>
            </tr>
            <tr>
                <td style="width:80px; text-align:right">Currency : </td>
                <td style="width:220px">
                    <select id="cboCurrency" style="width:98%"></select>
                </td>
            </tr>

            <tr>
                <td style="width:80px; text-align:right">Description : </td>
                <td style="width:220px">
                    <input id="txtDescription" type="text" style="width:98%" />
                </td>
            </tr>
            <tr id="trBehavior">
                <td style="width:80px; text-align:right">Behavior : </td>
                <td style="width:220px">
                    <select id="cboAccountOperationType" style="width:100%;"></select>
                </td>
            </tr>
        </table>
    </fieldset>
    <fieldset style="text-align:right">
        <legend>Actions : </legend>
        <a id="btnSaveCOA" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
        <a id="btnCloseCOA" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
    </fieldset>
</div>

<div id="winInventoryEffect" class="easyui-window" title="Inventory Effect for Charts of Account" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <fieldset style="margin-top:2px">
        <table border="0" cellpadding="2" cellspacing="2">
            <tr id="trBehavior">
                <td style="width:120px; text-align:right">Inventtory Head : </td>
                <td style="width:200px">
                    <select id="cboInventoryHead" style="width:100%;"></select>
                </td>
            </tr>
        </table>
    </fieldset>
    <fieldset style="text-align:right">
        <legend>Actions : </legend>
        <a id="btnSaveInventoryEffect" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
        <a id="btnCloseInventoryEffect" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
    </fieldset>
</div>

<div id="winCOAConfigure" class="easyui-window" title="Assign Business Unit for" style="height:auto;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="padding:0px">
        <fieldset>
            <legend>Configuration :</legend>
            <table class="tableStyle" cellpadding="2" cellspacing="2" style="width:700px;">
                <tr>
                    <td class="tableStyle" style="width:380px">
                        <table border="0" cellpadding="1" cellspacing="1">
                            <tr>
                                <td style="width: 160px; text-align: right; font-size:12px;"> <label id="lblCounterAccount">COGS/Inventory Account:</label> </td>
                                <td style="width: 220px; text-align:left;">
                                    <input type="text" id="txtCounterAccount" style="width:200px" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 160px; text-align: right; font-size:12px;"> Sub Ledgers are Applicable:</td>
                                <td style="width: 220px; text-align:left;">
                                    <table border="0" cellpadding="0" cellspacing="0" style="font-size:11px; font-weight:bold">
                                        <tr>
                                            <td style="width:45px"><label><input type="checkbox" id="chkCCApplyYes" onclick="if(this.checked){IsCostCenterApplyYes()} else {IsCostCenterApplyNo()}" />Yes</label></td>
                                            <td style="width:50px"></td>
                                            <td style="width:45px"><label><input type="checkbox" id="chkCCApplyNo" onclick="if(this.checked){IsCostCenterApplyNo()} else {IsCostCenterApplyYes()}" />No</label></td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 160px; text-align: right; font-size:12px;">Bills Ref are applicable:</td>
                                <td style="width: 220px; text-align:left;">
                                    <table border="0" cellpadding="0" cellspacing="0" style="font-size:11px; font-weight:bold">
                                        <tr>
                                            <td style="width:45px"><label><input type="checkbox" id="chBillApplyYes" onclick="if(this.checked){IsBillRefApplyYes()} else {IsBillRefApplyNo()}" />Yes</label></td>
                                            <td style="width:50px"></td>
                                            <td style="width:45px"><label><input type="checkbox" id="chBillApplyNo" onclick="if(this.checked){IsBillRefApplyNo()} else {IsBillRefApplyYes()}" />No</label></td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 160px; text-align: right; font-size:12px;">Assign Inventory reference:</td>
                                <td style="width: 220px; text-align:left;">
                                    <table border="0" cellpadding="0" cellspacing="0" style="font-size:11px; font-weight:bold">
                                        <tr>
                                            <td style="width:45px"><label><input type="checkbox" id="chkInvYes" onclick="if(this.checked){IsInventoryApplyYes()} else {IsInventoryApplyNo()}" />Yes</label></td>
                                            <td style="width:50px"></td>
                                            <td style="width:45px"><label><input type="checkbox" id="chkInvNo" onclick="if(this.checked){IsInventoryApplyNo()} else {IsInventoryApplyYes()}" />No</label></td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 160px; text-align: right; font-size:12px;">Assign Order reference:</td>
                                <td style="width: 220px; text-align:left;">
                                    <table border="0" cellpadding="0" cellspacing="0" style="font-size:11px; font-weight:bold">
                                        <tr>
                                            <td style="width:45px"><label><input type="checkbox" id="chkOrderRefAppYes" onclick="if(this.checked){IsOrderRefApplyYes()} else {IsOrderRefApplyNo()}" />Yes</label></td>
                                            <td style="width:50px"></td>
                                            <td style="width:45px"><label><input type="checkbox" id="chkOrderRefAppNo" onclick="if(this.checked){IsOrderRefApplyNo()} else {IsOrderRefApplyYes()}" />No</label></td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                        </table>
                        <div class="easyui-tabs" style="width:380px;height:300px" id="ParentDiv">
                            <div id="divSubLedger" title="Sub Ledger" style="padding:2px" class="CC">
                                <table id="tblCCs" title="Subledger Category" class="easyui-datagrid" fit="true" fitcolumns="true" rownumbers="true" singleselect="true" autorowheight="false" toolbar="#toolbarCC">
                                    <thead>
                                        <tr>
                                            <th field="Name" width="200">Subledger Caegory</th>
                                        </tr>
                                    </thead>
                                </table>
                                <div id="toolbarCC">
                                    <select id="cboCC" style="width:100px;"></select>
                                    <a id="btnCCAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                    <a id="btnCCRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                                </div>
                            </div>
                            <div id="divInventoryReference" title="Inventory reference" style="padding:10px" class="IR">
                                <table id="tblIRs" title="IR List" class="easyui-datagrid" fit="true" fitcolumns="true" rownumbers="true" singleselect="true" autorowheight="false" toolbar="#toolbarIR">
                                    <thead>
                                        <tr>
                                            <th field="ProductCategoryName" width="200">Product Category Name</th>
                                        </tr>
                                    </thead>
                                </table>
                                <div id="toolbarIR">
                                    <select id="cboIR" style="width:100px;"></select>
                                    <a id="btnIRAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                    <a id="btnIRRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td class="tableStyle" style="width:320px">
                        <table id="tblBusinessUnits" title="Business Unit" class="easyui-datagrid" style="height:412px;width:320px;" fit="false" fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                            <thead>
                                <tr>
                                    <th data-options="field:'Selected',checkbox:true"></th>
                                    <th field="Name" width="170">Name</th>
                                    <th field="ShortName" width="150">Short Name</th>
                                </tr>
                            </thead>
                        </table>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
    <fieldset style="text-align:right">
        <legend>Actions : </legend>
        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="false">Save</a>
        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="false">Close</a>
    </fieldset>
</div>

<div id="winMoveAccount" class="easyui-window" title="Move Chats Of Account" style="height:auto;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="padding:0px">
        <table border="0" cellpadding="0" cellspacing="2" style="background-color:#E6E6E6; font-size:12px; font-weight:bold">
            <tr>
                <td style="text-align:right; width:140px">Selected Head :</td>
                <td style="text-align:right; width:10px"></td>
                <td style="text-align:left; width:615px"><label id="lblMoveAccountHeadName">AccountHead Name</label></td>
            </tr>
            <tr>
                <td style="text-align:right; width:140px">Selected Head Path:</td>
                <td style="text-align:right; width:10px"></td>
                <td style="text-align:left; width:615px"><label id="lblMoveAccountsPathName">Account Path</label></td>
            </tr>
        </table>
        <table id="tblMoveAccountTreeGrid" title="Selecte New Parent Account Head" class="easyui-treegrid" style="width:762px;height:410px" data-options="idField:'id',treeField:'text', rownumbers:'true'">
            <thead>
                <tr>
                    <th data-options="field:'text',width:230">Account Head</th>
                    <th data-options="field:'code',width:100">Account Code</th>
                    <th data-options="field:'AccountTypeInString',width:100">Account Type</th>
                    <th data-options="field:'PathName',width:350">Accounts Path</th>
                </tr>
            </thead>
        </table>
    </div>
    <fieldset style="text-align:right">
        <legend>Actions : </legend>
        <a id="btnCommitMoveAccounts" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Commit</a>
        <a id="btnCloseMoveAccounts" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
    </fieldset>
</div>

<div style="margin-left: 0px; height: 100%; width:100%" id="divCOA">
    <table id="tblChartsOfAccountTreeGrid" title="Chats of Account List" class="easyui-treegrid" fit="true" fitcolumns="false"
           data-options="onClickCell : onClickCell, idField:'id',treeField:'code', rownumbers:'true', toolbar:'#toolbar'">
        <thead>
            <tr>
                <th data-options="field:'code',width:200,">Account Code</th>
                <th data-options="field:'text',width:400,">Account Head</th>
                <th data-options="field:'Amount',width:100,align:'right',editor:'numberbox'" >Amount</th>@*,editor:'numberbox'  formatter="FormatAmount"*@
                <th data-options="field:'CSymbol',width:60,">Currency</th>
                <th data-options="field:'AccountTypeInString',width:80,">Account Type</th>
                <th data-options="field:'PathName',width:800,">Accounts Path</th>
            </tr>
        </thead>
    </table>
    <div id="toolbar">
        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="Refresh()"></a>
        <input type="text" id="txtSearchByCode" placeholder="Search by Code" style="width:100px" onclick="Clearfield()" />
        <input type="text" id="txtSearchByName" placeholder="Search by name" style="width:100px" onclick="ClearNamefield()" />
        <select style="width:200px" id="cboBusinessUnit"><option value="0">--Business Unit--</option></select>
        <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
        <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
        <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
        <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
        <a id="btnImport" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-up" plain="true">Import</a>
        <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="Print()">Print</a>
        <a id="btnPrintXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="PrintInXL()">Export To XL</a>
        <a id="btnMoveAccountHead" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-back" plain="true">Move Accounts Head</a>
        <a id="btnCAOConfigure" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" onclick="CAOConfigure()" plain="true">Configure</a>
        <a id="btnInventoryEffect" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" onclick="InventoryEffect()" plain="true">Inventory Effect</a>
        
        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="CellEdit()">Edit Cell</a>
        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="CellSave()">Cell Save</a>
        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CellEditCancel()">Cancel Edit</a>
        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="CellSaveFullList()">Save Full List</a>
    </div>
</div>

<style type="text/css">
    .tableStyle {
        border: 1px solid black;
        border-collapse: collapse;
    }
</style>
<script type="text/javascript">
    var _oChartsOfAccount={AccountHeadID:0, AccountHeadName:'', Description:''};
    var _oTChartsOfAccount=null;
    var _oBUs=[];
    var editingId=undefined;
    var _oTChartsOfAccountEditList=null;
    $(document).ready(function () {
        _oTChartsOfAccount=@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oAURolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        _oBUs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUs));
        var oAOTs =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.AOTs));
        var oInventoryEffects = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.InventoryEffects));
        var oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));

        $('#cboCurrency').data('Currencys', oCurrencys);
        $('#cboAccountOperationType').data('AOTs',oAOTs);
        $('#divCOA').data('oCOA_AccountHeadConfig',null);
        $('#divCOA').data('ChartsOfAccount',null);
        $('#divCOA').data('InventoryEffects',oInventoryEffects);
        RefreshList(_oTChartsOfAccount);
        RefreshcboBusinessUnit(_oBUs);
        RefreshControlLayout(oAURolesMapping);
    });
    function CellEdit(){
        if (editingId != undefined){
            $('#tblChartsOfAccountTreeGrid').treegrid('select', editingId);
            return;
        }
        var row = $('#tblChartsOfAccountTreeGrid').treegrid('getSelected');
        if (row){
            editingId = row.id;
            $('#tblChartsOfAccountTreeGrid').treegrid('beginEdit', editingId);
        }
    }
    function CellEditCancel(){
        if (editingId != undefined){
            $('#tblChartsOfAccountTreeGrid').treegrid('cancelEdit', editingId);
            editingId = undefined;
        }
    }
    function CellSave(){
        debugger;
        if (editingId != undefined)
        {
            var t = $('#tblChartsOfAccountTreeGrid');
            t.treegrid('endEdit', editingId);
            editingId = undefined;
            var persons = 0;
            var rows = t.treegrid('getChildren');
            for(var i=0; i<rows.length; i++){
                var p = parseInt(rows[i].persons);
                if (!isNaN(p)){
                    persons += p;
                }
            }
            debugger;
            var ThisTreeGrid = t.treegrid('getChildren');
            //var frow = t.treegrid('getFooterRows')[0];
            //frow.persons = persons;
            //t.treegrid('reloadFooter');
        }
    }
    function CellSaveFullList(){
        debugger;
        var t = $('#tblChartsOfAccountTreeGrid');
        var oChartsOfAccounts = t.treegrid('getChildren');

        var oCA = {
            BudgetID : parseInt($('#tblChartsOfAccountTreeGrid').data("Budget").BudgetID),
            BudgetTypeInt : parseInt($('#cboBudetTyupe').val()),
            TChartsOfAccounts: oChartsOfAccounts
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/ChartsOfAccount/SaveEditList",
            traditional: true,
            data: JSON.stringify(oCA),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oTChartsOfAccount = jQuery.parseJSON(data);
                debugger;
                if(oTChartsOfAccount!=null)
                {
                    alert(oTChartsOfAccount.ErrorMessage);
                }
                else {
                    alert('Data not found!!');
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }
    $('#btnRefresh').click(function(e){
    var nBusinessUnitID =  parseInt($('#cboBusinessUnit').val());
    var oBusinessUnit = { BusinessUnitID : nBusinessUnitID };
    $.ajax({
        type: "POST",
        dataType: "json",
        url : sessionStorage.getItem('BaseAddress')+  "/ChartsOfAccount/RefreshChartOfAccounts",
        traditional: true,
        data: JSON.stringify(oBusinessUnit),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var oTChartsOfAccount = jQuery.parseJSON(data);
            if(oTChartsOfAccount!=null)
            {
                RefreshList(oTChartsOfAccount);
            }
            else {
                alert('Data not found!!');
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }

    });
});

    function RefreshcboBusinessUnit(oBusinessUnits)
    {
        $('#cboBusinessUnit').empty();
        if(oBusinessUnits!=null)
        {
            var sOptions='<option value="0">--Group Chats of Account--</option>';
            for(var i=0; i<oBusinessUnits.length; i++)
            {
                sOptions = sOptions + '<option value="'+oBusinessUnits[i].BusinessUnitID+'">'+oBusinessUnits[i].Name+'</option>';
            }
            $('#cboBusinessUnit').append(sOptions);
        }
    }

    /*========== KEY EVENT IN CELL (START) =========*/
    function onClickCell(field,value)
    {
        if(field === "Amount" && value.AccountTypeInInt==5){
            StartEdit(value.id);
        }
    }
    function StartEdit(index)
    {
        CellEditCancel();
        $('#tblChartsOfAccountTreeGrid').treegrid('select', index);
        CellEdit();
        debugger;
        var ed_amount= $('#tblChartsOfAccountTreeGrid').treegrid('getEditor',{index:index,field:'Amount'});
        setKeydown([ed_amount.target]);
    }
    function setKeydown(tt){
        for(var i=0; i<tt.length; i++){
            var t = tt[i];
            getInputBox(tt[i]||tt[0]).focus();
            getInputBox(t).bind('keydown',{i:i},function(e){
                if (e.keyCode == 13) {
                    var row = $('#tblChartsOfAccountTreeGrid').treegrid('getSelected');
                    AmountKeyDown(row);
                }
            });
        }
    }
    function getInputBox(target){
        return $(target).data('textbox') ? $(target).textbox('textbox') : $(target);
    }

    function AmountKeyDown(value)
    {
        var sHtmlControlID = '#txtAmount' + value.id;
        var sAmount = $(sHtmlControlID).val();

        if(sAmount!=null && parseFloat(sAmount)>0)
        {
            value.Amount =  parseFloat(sAmount);
        }
        else
        {
            value.Amount = 0;
        }
        CellSave();
        SetParentAmount(value);
        StartEdit(GetNextLedger(value));
    }

    function GetNextLedger(value)
    {
        var childs=$('#tblChartsOfAccountTreeGrid').treegrid('getChildren',value.parentid);
        for(var i=0; i<childs.length; i++)
        {
            if(childs[i].id==value.id)
            {
                if(i==childs.length-1)
                    return childs[0].id;
                else
                    return childs[i+1].id;
            }
        }
        return childs[0].id;
    }

    function SetParentAmount(value)
    {
        if(value.parentid > 0 )
        {
            var parent=$('#tblChartsOfAccountTreeGrid').treegrid('find',value.parentid);
            var childs=$('#tblChartsOfAccountTreeGrid').treegrid('getChildren',parent.id);

            var sum=0; 
            for(var i=0; i<childs.length; i++)
            {
                if(childs[i].parentid==value.parentid)
                    sum=parseFloat(childs[i].Amount)+parseFloat(sum);
            }
            parent.Amount=sum;

            $('#tblChartsOfAccountTreeGrid').treegrid('update',{
                id: parent.id,
                row: parent
            });
            SetParentAmount(parent)
        }
    }
    /* ============== KYE EVENT END =================*/


    $('#btnImport').click(function(e){
        var oChartsOfAccount= $('#tblChartsOfAccountTreeGrid').datagrid('getSelected');
        if(oChartsOfAccount==null || oChartsOfAccount.id<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(oChartsOfAccount.parentid==0)
        {
            alert("You can not add component! \n You can add Segment/Group/Sub Group/Ledger.\n Please select a currect head");
            return;
        }
        if(oChartsOfAccount.AccountTypeInString=="Ledger")
        {
            alert("Invalid Operation You can select Component/Segment/Group/Sub Group");
            return;
        }
        sessionStorage.setItem("SelectedHeadID",oChartsOfAccount.id);
        window.location.href = sessionStorage.getItem('BaseAddress')+ "/ChartsOfAccount/ImportFromExcel?id="+oChartsOfAccount.id;
    });

    $('#btnAdd').click(function(e){
        var oChartsOfAccount= $('#tblChartsOfAccountTreeGrid').datagrid('getSelected');
        if(oChartsOfAccount==null || oChartsOfAccount.id<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(oChartsOfAccount.parentid==0)
        {
            alert("You can not add component! \n You can add Segment/Group/Sub Group/Ledger.\n Please select a currect head");
            return;
        }
        if(oChartsOfAccount.AccountTypeInString=="Ledger")
        {
            alert("Invalid Operation You can select Component/Segment/Group/Sub Group");
            return;
        }
        sessionStorage.setItem("SelectedHeadID",oChartsOfAccount.id);
        window.location.href = sessionStorage.getItem('BaseAddress')+ "/ChartsOfAccount/ViewChatsOfAccount?id="+oChartsOfAccount.id;
    });

    $('#btnEdit').click(function(e){
        var oChartsOfAccount= $('#tblChartsOfAccountTreeGrid').datagrid('getSelected');
        if(oChartsOfAccount==null || parseInt(oChartsOfAccount.id)<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(parseInt(oChartsOfAccount.parentid)===0 || parseInt(oChartsOfAccount.parentid)===1)
        {
            alert("You can not edit Root/Component!");
            return;
        }
        if(parseInt(oChartsOfAccount.ParentAOTypeInInt)===0 && parseInt(oChartsOfAccount.AccountTypeInInt)!=4)
        {
            $('#trBehavior').hide();
        }
        else
        {
            $('#trBehavior').show();
        }
        var oAOTs=$('#cboAccountOperationType').data('AOTs');
        var oTempAOTs=[];
        oTempAOTs=oAOTs;
        $('#cboAccountOperationType').icsLoadCombo({ List: oTempAOTs, OptionValue: "id", DisplayText: "Value", InitialValue:"custom" });

        var oCurrencys = $('#cboCurrency').data('Currencys');
        $("#cboCurrency").icsLoadCombo({List: oCurrencys, OptionValue: "CurrencyID",DisplayText: "Symbol", InitialValue:"--Currency--"});

        $("#winChartofAccounts").icsWindow('open', "Edit Charts of Account");
        $('#txtCode').val(oChartsOfAccount.code);
        $('#txtName').val(oChartsOfAccount.text);
        $('#cboCurrency').val(oChartsOfAccount.CurrencyID);
        $('#txtDescription').val(oChartsOfAccount.Description);
        $('#cboAccountOperationType').val(oChartsOfAccount.AOTypeInInt);
        _oChartsOfAccount.AccountHeadID=oChartsOfAccount.id;
    });

    $('#btnSaveCOA').click(function(e){
        if(_oChartsOfAccount===null || parseInt(_oChartsOfAccount.AccountHeadID)<=0)
        {
            alert("Invalid Chart of Accounts!");
            return;
        }
        if($('#txtName').val()===null || $('#txtName').val()==="")
        {
            alert("Please Enter Account Head Name!");
            $('#txtName').focus();
            return;
        }
        if(parseInt($('#cboCurrency').val())<=0){
            $('#cboCurrency').focus();
            alert('Please Select Currency');
            $('#cboCurrency').focus();
            return false;
        }
        _oChartsOfAccount.AccountHeadName=$('#txtName').val();
        _oChartsOfAccount.Description=$('#txtDescription').val();
        _oChartsOfAccount.CurrencyID = parseInt($('#cboCurrency').val());
        _oChartsOfAccount.AccountOperationType=$('#cboAccountOperationType').val();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/ChartsOfAccount/Update",
            traditional: true,
            data:  JSON.stringify(_oChartsOfAccount),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oChartsOfAccount = jQuery.parseJSON(data);
                if (parseInt(oChartsOfAccount.AccountHeadID)>0) {
                    alert("Data Saved sucessfully");
                    $("#winChartofAccounts").icsWindow('close');
                    var oTChartofAccount = {
                        id : oChartsOfAccount.AccountHeadID,
                        text: oChartsOfAccount.AccountHeadName,
                        code: oChartsOfAccount.AccountCode,
                        CurrencyID : oChartsOfAccount.CurrencyID,
                        CName : oChartsOfAccount.CName,
                        CSymbol : oChartsOfAccount.CSymbol,
                        AccountTypeInString: oChartsOfAccount.AccountTypeInString,
                        PathName : oChartsOfAccount.PathName,
                        AOTypeInInt : oChartsOfAccount.AccountOperationType,
                        AOTypeSt : oChartsOfAccount.AccountOperationTypeSt,
                        ParentAOTypeInInt: oChartsOfAccount.ParentAccountOperationType
                    };

                    $('#tblChartsOfAccountTreeGrid').treegrid('update',{
                        id: parseInt(oChartsOfAccount.AccountHeadID),
                        row: oTChartofAccount
                    });
                    var oTCOAs=$('#tblChartsOfAccountTreeGrid').treegrid('getChildren',oTChartofAccount.id);
                    for(var i=0;i<oTCOAs.length;i++){
                        if(oTChartofAccount.AOTypeInInt==0){
                            oTCOAs[i].AOTypeInInt=0;
                        }
                        oTCOAs[i].ParentAOTypeInInt=oTChartofAccount.AOTypeInInt;
                        $('#tblChartsOfAccountTreeGrid').treegrid('update',{
                            id: parseInt(oTCOAs[i].id),
                            row: oTCOAs[i]
                        });
                    }
                }
                else {
                    alert(oChartsOfAccount.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $('#btnCloseCOA').click(function(e){
        $("#winChartofAccounts").icsWindow('close');
    });
    $('#btnCloseInventoryEffect').click(function(e){
        $("#winInventoryEffect").icsWindow('close');
    });


    $('#btnDelete').click(function(e){
        var oChartsOfAccount= $('#tblChartsOfAccountTreeGrid').treegrid('getSelected');
        if(oChartsOfAccount==null || parseInt(oChartsOfAccount.id)<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(parseInt(oChartsOfAccount.parentid)===0 || parseInt(oChartsOfAccount.parentid)==1)
        {
            alert("Deletion not possible ! You can delete group/sub group/ledger");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var oChartofAccount = {AccountHeadID : parseInt(oChartsOfAccount.id)};
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/ChartsOfAccount/Delete",
            data:  JSON.stringify(oChartofAccount),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //
                feedbackmessage = jQuery.parseJSON(data);
                if (feedbackmessage == "Data Delete Successfully")
                {
                    alert("Data Delete Successfully");
                    $('#tblChartsOfAccountTreeGrid').treegrid('remove',oChartsOfAccount.id);
                }
                else
                {
                    alert(feedbackmessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });

    function RefreshList(oTChartsOfAccount)
    {
        var data= [oTChartsOfAccount];
        data={"total":""+data.length+"","rows":data};
        $('#tblChartsOfAccountTreeGrid').treegrid('loadData',data);
        var SelectedHeadID =sessionStorage.getItem("SelectedHeadID");
        if(SelectedHeadID!=null)
        {
            $('#tblChartsOfAccountTreeGrid').treegrid('select',SelectedHeadID);
        }
    }

    $('#btnMoveAccountHead').click(function(e){
        var oChartsOfAccount= $('#tblChartsOfAccountTreeGrid').datagrid('getSelected');
        if(oChartsOfAccount==null || parseInt(oChartsOfAccount.id)<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(oChartsOfAccount.parentid==0)
        {
            alert("Root move not posible!");
            return;
        }
        if(oChartsOfAccount.AccountTypeInString=="Component" || oChartsOfAccount.AccountTypeInString=="Group")
        {
            alert("Please select a Sub Group/Ledger");
            return;
        }
        var oCOA = { AccountHeadID : parseInt(oChartsOfAccount.id) };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress') +  "/ChartsOfAccount/GetsMovesAccount",
            traditional: true,
            data:  JSON.stringify(oCOA),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oTempChartsOfAccount = jQuery.parseJSON(data);
                $('#winMoveAccount').data('SelectedHead', oTempChartsOfAccount);
                RefreshListMoveAccounts(oTempChartsOfAccount.TChartsOfAccount);
                $('#lblMoveAccountHeadName').text(oTempChartsOfAccount.AccountHeadNameType);
                $('#lblMoveAccountHeadName').text(oTempChartsOfAccount.PathName);
                $("#winMoveAccount").icsWindow('open', "Move Account ");
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $('#btnCommitMoveAccounts').click(function(e){
        if(!MoveAccountValidateInput()) return;
        var oTChartsOfAccount= $('#tblMoveAccountTreeGrid').datagrid('getSelected');
        if (!confirm("Confirm to Move:"+oTChartsOfAccount.PathName+"?")) return ;
        var oTempChartOfAccount = $('#winMoveAccount').data('SelectedHead');
        var oChartOfAccount = {
            AccountHeadID : parseInt(oTempChartOfAccount.AccountHeadID),
            ParentHeadID :  parseInt(oTChartsOfAccount.id)
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress') +  "/ChartsOfAccount/MoveChartOfAccount",
            traditional: true,
            data:  JSON.stringify(oChartOfAccount),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oChartOfAccount = jQuery.parseJSON(data);
                if (parseInt(oChartOfAccount.AccountHeadID)>0) {
                    alert("Moved sucessfully");
                    $("#winMoveAccount").icsWindow('close');
                    window.location.href = window.location.href;
                }
                else {
                    alert(oChartOfAccount.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $('#btnCloseMoveAccounts').click(function(e){
        $("#winMoveAccount").icsWindow('close');
    })

    function MoveAccountValidateInput()
    {
        var oTChartsOfAccount= $('#tblMoveAccountTreeGrid').datagrid('getSelected');
        if(oTChartsOfAccount==null || oTChartsOfAccount.id<=0)
        {
            alert("Please select a item from list!");
            return;
        }

        var oChartOfAccount = $('#winMoveAccount').data('SelectedHead');
        if(oChartOfAccount === null || oChartOfAccount.AccountHeadID<=0)
        {
            alert("Your Selected Move Amount Is InValid!");
            return;
        }
        if(parseInt(oChartOfAccount.AccountType)==5)
        {
            if(parseInt(oTChartsOfAccount.AccountTypeInInt)!=4)
            {
                alert("Please select a Sub Group!");
                return;
            }
        }
        if(parseInt(oChartOfAccount.AccountType)==4)
        {
            if(parseInt(oTChartsOfAccount.AccountTypeInInt)!=3)
            {
                alert("Please select a Group!");
                return;
            }
        }
        return true;
    }

    function RefreshListMoveAccounts(oTChartsOfAccount)
    {
        data= [oTChartsOfAccount];
        data={"total":""+data.length+"","rows":data};
        $('#tblMoveAccountTreeGrid').treegrid('loadData',data);
    }

    function Print()
    {
        window.open(sessionStorage.getItem('BaseAddress') + '/ChartsOfAccount/PrintCOA', "_blank");
    }

    function PrintInXL()
    {
        window.open(sessionStorage.getItem('BaseAddress')+'/ChartsOfAccount/PrintInXL', "_blank");
    }

    function GetRefresh()
    {
        var oChartsOfAccount= $('#tblChartsOfAccountTreeGrid').datagrid('getSelected');
        if(oChartsOfAccount==null || oChartsOfAccount.id<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(oChartsOfAccount.parentid==0)
        {
            alert("You can not add under component! \n Please select a currect head");
            return;
        }
        if(oChartsOfAccount.AccountTypeInString=="Component" || oChartsOfAccount.AccountTypeInString=="Ledger")
        {
            alert("Please select a Group/Sub group");
            return;
        }

        $.ajax({
            type: "GET",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/ChartsOfAccount/GetRefresh",
            traditional: true,
            data: {ParentID : oChartsOfAccount.id},
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var _oTChartsOfAccounts = jQuery.parseJSON(data);
                if(_oTChartsOfAccounts!=null)
                {
                    if(_oTChartsOfAccounts.length>0)
                    {
                        for(i=0; i<_oTChartsOfAccounts.length; i++)
                        {
                            $('#tblChartsOfAccountTreeGrid').treegrid('append',{ parent: oChartsOfAccount.id, data: [_oTChartsOfAccounts[i]] });

                        }
                        $('#tblChartsOfAccountTreeGrid').treegrid('select',oChartsOfAccount.id);
                        $('#tblChartsOfAccountTreeGrid').treegrid('expand',oChartsOfAccount.id);
                    }
                }
                else {
                    alert('Data not found!!');
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function DynamicHeadConfigure()
    {

        var oChartsOfAccount= $('#tblChartsOfAccountTreeGrid').datagrid('getSelected');
        if(oChartsOfAccount==null || oChartsOfAccount.id<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(oChartsOfAccount.parentid==0)
        {
            alert("You can not add under component! \n Please select a currect head");
            return;
        }
        if(oChartsOfAccount.AccountTypeInString=="Component" || oChartsOfAccount.AccountTypeInString=="Ledger")
        {
            alert("Please select a Group/Sub group");
            return;
        }

        var SelectedRowIndex=$('#tblChartsOfAccountTreeGrid').datagrid('getRowIndex',oChartsOfAccount);
        var oParameter = new Object();
        var url =sessionStorage.getItem('BaseAddress')+ "/DAHC/DynamicHeadConfigure?id="+oChartsOfAccount.id;
        var oChartOfAccounts = window.showModalDialog(url, oParameter, 'dialogHeight:550px;dialogWidth:900px;dialogLeft:300;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');
    }

    $('#txtSearchByCode').keypress(function (e) {
        var c = String.fromCharCode(e.which);
        var txtSearchByCode = document.getElementById('txtSearchByCode').value;
        txtSearchByCode = txtSearchByCode + c;
        var bFlag=false;
        var sAccountHeadCode="";
        var rows = $('#tblChartsOfAccountTreeGrid').treegrid('getChildren',1);
        for(i=0;i<rows.length;++i){
            sAccountHeadCode=rows[i]['code'].substring(0, txtSearchByCode.length);
            if(txtSearchByCode.toUpperCase()==sAccountHeadCode.toUpperCase())
            {
                var id=rows[i]['id'];
                $('#tblChartsOfAccountTreeGrid').treegrid('select',id);
                break;
            }
        }
    });

    $('#txtSearchByName').keypress(function (e) {
        var c = String.fromCharCode(e.which);
        var txtSearchByName = document.getElementById('txtSearchByName').value;
        txtSearchByName = txtSearchByName + c;

        var bFlag=false;
        var sAccountHeadName="";
        var rows = $('#tblChartsOfAccountTreeGrid').treegrid('getChildren',1);
        for(i=0;i<rows.length;++i){
            sAccountHeadName=rows[i]['text'].substring(0, txtSearchByName.length);
            if(txtSearchByName.toUpperCase()==sAccountHeadName.toUpperCase())
            {
                var id=rows[i]['id'];
                $('#tblChartsOfAccountTreeGrid').treegrid('select',id);
                break;
            }
        }
    });

    function Clearfield()
    {
        $("#txtSearchByCode")[0].value='';
    }

    function ClearNamefield()
    {
        $("#txtSearchByName")[0].value='';
    }

    function Refresh()
    {
        $('#tblChartsOfAccountTreeGrid').treegrid('reload');	// reload the all rows
    }

    function IsExists(nparentid, id)
    {
        var oChildNodes= $('#tblChartsOfAccountTreeGrid').treegrid('getChildren',nparentid);
        for(var j=0;j<oChildNodes.length;j++)
        {
            if(oChildNodes[j].id==id)
            {
                return true;
            }
        }
        return false;
    }

    function ReloadChildData(nparentid)
    {
        $.ajax({
            type: "GET",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/ChartsOfAccount/getchildren",
            traditional: true,
            data: {parentid:nparentid},
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oTChartsOfAccounts = jQuery.parseJSON(data);
                if(oTChartsOfAccounts!=null)
                {
                    if (oTChartsOfAccounts.length>0) {
                        for(i=0; i<oTChartsOfAccounts.length; i++)
                        {
                            $('#tblChartsOfAccountTreeGrid').treegrid('append',{ parent: nparentid, data: [oTChartsOfAccounts[i]] });
                        }
                        $('#tblChartsOfAccountTreeGrid').treegrid('select',nparentid);
                        $('#tblChartsOfAccountTreeGrid').treegrid('expand',nparentid);
                    }
                }
                else {
                    //alert('Data not found!!');
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }


    function InventoryEffect (){
        var oChartsOfAccount= $('#tblChartsOfAccountTreeGrid').datagrid('getSelected');
        if(oChartsOfAccount==null || parseInt(oChartsOfAccount.id)<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(parseInt(oChartsOfAccount.parentid)===0 || parseInt(oChartsOfAccount.parentid)===1)
        {
            alert("No Need Inventory Effect for Root/Component!");
            return;
        }
        if(parseInt(oChartsOfAccount.AccountTypeInInt)!=5)
        {
            alert("Please Select only Ledger");
            return;
        }
        var oInventoryEffects =$('#divCOA').data('InventoryEffects');
        $('#cboInventoryHead').icsLoadCombo({
            List: oInventoryEffects,
            OptionValue: "AccountHeadID",
            DisplayText: "AccountHeadName",
            InitialValue:"custom"
        });

        $("#winInventoryEffect").icsWindow('open', "Inventory Effect");
        $('#cboInventoryHead').val(oChartsOfAccount.InventoryHeadID);
        //_oChartsOfAccount.AccountHeadID=oChartsOfAccount.id;
    }

    $('#btnSaveInventoryEffect').click(function(e){
        var oTempChartsOfAccount= $('#tblChartsOfAccountTreeGrid').datagrid('getSelected');
        if(oTempChartsOfAccount==null || parseInt(oTempChartsOfAccount.id)<=0)
        {
            alert("Please select a item from list!");
            return;
        }

        if(parseInt( $('#cboInventoryHead').val())<=0)
        {
            alert("Please Select Inventory Head");
            return;
        }
        var oChartsOfAccount = {
          InventoryHeadID : $('#cboInventoryHead').val(),
          AccountHeadID :oTempChartsOfAccount.id
        };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/ChartsOfAccount/UpdateInventoryEffect",
            traditional: true,
            data:  JSON.stringify(oChartsOfAccount),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oChartsOfAccount = jQuery.parseJSON(data);
                if (parseInt(oChartsOfAccount.AccountHeadID)>0) {
                    alert("Data Saved sucessfully");
                    $("#winInventoryEffect").icsWindow('close');
                    var oTChartofAccount = {
                        id : oChartsOfAccount.AccountHeadID,
                        text: oChartsOfAccount.AccountHeadName,
                        code: oChartsOfAccount.AccountCode,
                        AccountTypeInString: oChartsOfAccount.AccountTypeInString,
                        PathName : oChartsOfAccount.PathName,
                        InventoryHeadID:oChartsOfAccount.InventoryHeadID,
                        AOTypeInInt : oChartsOfAccount.AccountOperationType,
                        AOTypeSt : oChartsOfAccount.AccountOperationTypeSt,
                        ParentAOTypeInInt: oChartsOfAccount.ParentAccountOperationType
                    };

                    $('#tblChartsOfAccountTreeGrid').treegrid('update',{
                        id: parseInt(oChartsOfAccount.AccountHeadID),
                        row: oTChartofAccount
                    });
                    var oTCOAs=$('#tblChartsOfAccountTreeGrid').treegrid('getChildren',oTChartofAccount.id);
                    for(var i=0;i<oTCOAs.length;i++){
                        if(oTChartofAccount.AOTypeInInt==0){
                            oTCOAs[i].AOTypeInInt=0;
                        }
                        oTCOAs[i].ParentAOTypeInInt=oTChartofAccount.AOTypeInInt;
                        $('#tblChartsOfAccountTreeGrid').treegrid('update',{
                            id: parseInt(oTCOAs[i].id),
                            row: oTCOAs[i]
                        });
                    }
                }
                else {
                    alert(oChartsOfAccount.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });


    //Start CAOConfigure region
    $('#btnCAOConfigure').click(function(e){
        var oChartsOfAccount= $('#tblChartsOfAccountTreeGrid').datagrid('getSelected');
        if(oChartsOfAccount==null || oChartsOfAccount.id<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(oChartsOfAccount.parentid==0)
        {
            alert("You can not add component! \n You can add group/sub group/ ledger.\n Please select a currect head");
            return;
        }
        var SelectedRowIndex=$('#tblChartsOfAccountTreeGrid').datagrid('getRowIndex',oChartsOfAccount);
        var oChartsOfAccount={AccountHeadID:parseInt(oChartsOfAccount.id)};
        $('#divCOA').data('ChartsOfAccount',oChartsOfAccount);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/ChartsOfAccount/GetCAO_Configurations",
            traditional: true,
            data:  JSON.stringify(oChartsOfAccount),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oCOA_AccountHeadConfig = jQuery.parseJSON(data);
                $('#divCOA').data('oCOA_AccountHeadConfig',oCOA_AccountHeadConfig);
                var oCostCenters = oCOA_AccountHeadConfig.ACCostCenters?oCOA_AccountHeadConfig.ACCostCenters:[];
                var oProductCategorys = oCOA_AccountHeadConfig.ProductCategorys?oCOA_AccountHeadConfig.ProductCategorys:[];
                var oBOAHs = oCOA_AccountHeadConfig.BOAHs?oCOA_AccountHeadConfig.BOAHs:[];

                RefreshControl(oCOA_AccountHeadConfig);
                LoadCboCC(oCostCenters);
                LoadCCTable(oCOA_AccountHeadConfig.AccHeadCostCenters?oCOA_AccountHeadConfig.AccHeadCostCenters:[]);
                LoadIRTable(oCOA_AccountHeadConfig.AccHeadProductCategorys?oCOA_AccountHeadConfig.AccHeadProductCategorys:[]);
                ConfigTableHideShow("ViewMode");
                LoadCboIR(oProductCategorys);

                if(oCOA_AccountHeadConfig.ComponentID !=5 && oCOA_AccountHeadConfig.ComponentID !=6){
                    $('#txtCounterAccount').prop('disabled',true);
                }else{
                    $('#txtCounterAccount').prop('disabled',false);
                    if(oCOA_AccountHeadConfig.ComponentID ===5){
                        $('#lblCounterAccount').html('COGS Account');
                    }
                    else if(oCOA_AccountHeadConfig.ComponentID ===6){
                        $('#lblCounterAccount').html('Inventory Account');
                    }
                }
                $('#txtCounterAccount').val(oCOA_AccountHeadConfig.CounterHeadName);
                $('#txtCounterAccount').icsAutoComplete({
                    BaseAddress : sessionStorage.getItem('BaseAddress'),
                    ControllerName: "ChartsOfAccount",
                    ActionName: "GetsByComponentAndCodeName",
                    Object: {ComponentID:(oCOA_AccountHeadConfig.ComponentID ===5?6: oCOA_AccountHeadConfig.ComponentID ===6?2:0),AccountType:5,AccountHeadCodeName:''},
                    PropertyName: "AccountHeadName",
                    ParamName: "AccountHeadCodeName"
                });

                $('#tblBusinessUnits').datagrid({checkOnSelect:true,selectOnCheck:true});
                DynamicRefreshList(_oBUs, 'tblBusinessUnits');
                var oBUs = $('#tblBusinessUnits').datagrid('getRows');
                for(var i =0;i<oBOAHs.length;i++)
                {
                    for(var j =0;j<oBUs.length;j++)
                    {
                        if(parseInt(oBOAHs[i].BusinessUnitID) === parseInt(oBUs[j].BusinessUnitID))
                        {
                            $('#tblBusinessUnits').datagrid('checkRow', j);
                            break;
                        }
                    }
                }
                $("#winCOAConfigure").icsWindow('open', "Configure ");
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $('#btnSave').click(function(e){
        if(!ValidateInput()) return;
        var oCOA_AccountHeadConfig=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/ChartsOfAccount/Update_COA",
            traditional: true,
            data:  JSON.stringify(oCOA_AccountHeadConfig),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oAHC= jQuery.parseJSON(data);
                if (oAHC.ErrorMessage=="" || oAHC.ErrorMessage==null)
                {
                    alert("Data Save Succesfully!!");
                    $("#winCOAConfigure").icsWindow('close');
                }
                else
                {
                    alert(oAHC.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $('#btnClose').click(function(e){
        $("#winCOAConfigure").icsWindow('close');
    });

    $("#btnCCAdd").click(function(){
        var cboCC =document.getElementById("cboCC");
        var nCCCID = parseInt(cboCC.options[cboCC.selectedIndex].value);
        if(nCCCID == null || parseInt(nCCCID)<=0)
        {
            alert("Please Select a Const Center Category!");
            return false;
        }

        var allRows = $('#tblCCs').datagrid('getRows');
        for(var i=0;i<allRows.length;i++)
        {
            if(nCCCID == parseInt(allRows[i].ReferenceObjectID))
            {
                alert("Sorry,This item already in the list.");
                return false;
            }
        }
        var getCboText = $('#cboCC option:selected').text();
        var oAccountHeadConfigure = {
            ReferenceObjectID : nCCCID,
            Name : getCboText,
            AccountHeadID :parseInt($('#divCOA').data('oCOA_AccountHeadConfig').AccountHeadID)
        }
        $('#tblCCs').datagrid('appendRow',oAccountHeadConfigure);
    });

    $("#btnCCRemove").click(function(){
        var oCostCenter = $('#tblCCs').datagrid('getSelected');
        var SelectedRowIndex=$('#tblCCs').datagrid('getRowIndex',oCostCenter);
        $('#tblCCs').datagrid('deleteRow',SelectedRowIndex);
    });

    $("#btnIRAdd").click(function(){

        var cboIR =document.getElementById("cboIR");
        var nIRID = parseInt(cboIR.options[cboIR.selectedIndex].value);
        if(nIRID == null || parseInt(nIRID)<=0)
        {
            alert("Please Select a Product");
            return false;
        }
        var allRows = $('#tblIRs').datagrid('getRows');
        for(var i=0;i<allRows.length;i++)
        {
            if(nIRID == parseInt(allRows[i].ReferenceObjectID))
            {
                alert("Sorry,This item already in the list.");
                return false;
            }
        }
        var getCboText = $('#cboIR option:selected').text();
        var oAccountHeadConfigure = {
            ReferenceObjectID : nIRID,
            ProductCategoryName : getCboText,
            AccountHeadID :parseInt($('#divCOA').data('oCOA_AccountHeadConfig').AccountHeadID)
        }
        $('#tblIRs').datagrid('appendRow',oAccountHeadConfigure);
    });

    $("#btnIRRemove").click(function(){
        var oCostCenter = $('#tblIRs').datagrid('getSelected');
        var SelectedRowIndex=$('#tblIRs').datagrid('getRowIndex',oCostCenter);
        $('#tblIRs').datagrid('deleteRow',SelectedRowIndex);
    });

    function LoadCboCC(oCostCenters)
    {
        var listItems="";
        listItems += "<option value=0>" +"--Select CC--" +"</option>";
        for (i = 0; i < oCostCenters.length; i++)
        {
            listItems += "<option value='" + oCostCenters[i].ACCostCenterID+"'>" + oCostCenters[i].Name+"</option>";
        }
        $("#cboCC").html(listItems);
    }

    function LoadCboIR(oProductCategorys)
    {
        var listItems="";
        listItems += "<option value=0>" +"--Select IR--" +"</option>";
        for (i = 0; i < oProductCategorys.length; i++)
        {
            listItems += "<option value='" + oProductCategorys[i].ProductCategoryID+"'>" + oProductCategorys[i].ProductCategoryName+"</option>";
        }
        $("#cboIR").html(listItems);
    }

    function LoadCCTable(oAccHeadCostCenters)
    {
        var data=oAccHeadCostCenters;
        data={"total":""+data.length+"","rows":data};
        $('#tblCCs').datagrid('loadData',data);
    }

    function LoadIRTable(oAccHeadProductCategorys)
    {
        var data=oAccHeadProductCategorys;
        data={"total":""+data.length+"","rows":data};
        $('#tblIRs').datagrid('loadData',data);
    }

    function RefreshControl(oCOA_AccountHeadConfig)
    {
        if(oCOA_AccountHeadConfig.IsCostCenterApply)
        {
            document.getElementById("chkCCApplyYes").checked=true;
            document.getElementById("chkCCApplyNo").checked=false;
        }
        else
        {
            document.getElementById("chkCCApplyYes").checked=false;
            document.getElementById("chkCCApplyNo").checked=true;
        }

        if(oCOA_AccountHeadConfig.IsBillRefApply)
        {
            document.getElementById("chBillApplyYes").checked=true;
            document.getElementById("chBillApplyNo").checked=false;
        }
        else
        {
            document.getElementById("chBillApplyYes").checked=false;
            document.getElementById("chBillApplyNo").checked=true;
        }

        if(oCOA_AccountHeadConfig.IsInventoryApply)
        {
            document.getElementById("chkInvYes").checked=true;
            document.getElementById("chkInvNo").checked=false;
        }
        else
        {
            document.getElementById("chkInvYes").checked=false;
            document.getElementById("chkInvNo").checked=true;
        }

        if(oCOA_AccountHeadConfig.IsOrderReferenceApply)
        {
            document.getElementById("chkOrderRefAppYes").checked=true;
            document.getElementById("chkOrderRefAppNo").checked=false;
        }
        else
        {
            document.getElementById("chkOrderRefAppYes").checked=false;
            document.getElementById("chkOrderRefAppNo").checked=true;
        }
    }

    function RefreshObject()
    {
        var bIsCostCenterApply=document.getElementById("chkCCApplyYes").checked;
        var bIsBillRefApply=document.getElementById("chBillApplyYes").checked;
        var bIsInventoryApply=document.getElementById("chkInvYes").checked;
        var bIsOrderReferenceApply=document.getElementById("chkOrderRefAppYes").checked;

        if(!bIsCostCenterApply)
        {
            LoadCCTable([]);
        }
        if(!bIsInventoryApply)
        {
            LoadIRTable([]);
        }

        var oBUs=$('#tblBusinessUnits').datagrid('getChecked');
        var oBusinessUnitWiseAccountHeads=[];
        for(var i=0; i<oBUs.length;i++)
        {
            var oBusinessUnitWiseAccountHeadTemp= {
                BusinessUnitID:oBUs[i].BusinessUnitID,
            }
            oBusinessUnitWiseAccountHeads.push(oBusinessUnitWiseAccountHeadTemp);
        }

        var oCOA_AccountHeadConfig=   {
            AccountHeadConfigID : $('#divCOA').data('oCOA_AccountHeadConfig').AccountHeadConfigID,
            AccountHeadID : parseInt($('#divCOA').data('ChartsOfAccount').AccountHeadID),
            IsCostCenterApply : bIsCostCenterApply,
            IsBillRefApply : bIsBillRefApply,
            IsInventoryApply : bIsInventoryApply,
            IsOrderReferenceApply : bIsOrderReferenceApply,
            CounterHeadID:$('#txtCounterAccount').data('obj')==null?$('#divCOA').data('oCOA_AccountHeadConfig').CounterHeadID: $('#txtCounterAccount').data('obj').AccountHeadID,
            AccHeadCostCenters : $('#tblCCs').datagrid('getRows'),
            AccHeadProductCategorys : $('#tblIRs').datagrid('getRows'),
            BOAHs : oBusinessUnitWiseAccountHeads
        };
        return oCOA_AccountHeadConfig;
    }

    function ValidateInput()
    {

        if($('#divCOA').data('oCOA_AccountHeadConfig')==null)
        {
            alert("Select at least one AccountHead!");
            return false;
        }
        if(parseInt($('#divCOA').data('ChartsOfAccount').AccountHeadID)<=0)
        {
            alert("Select at least one Account Head!");
            return false;
        }
        var bIsCostCenterApply=document.getElementById("chkCCApplyYes").checked;
        var bIsBillRefApply=document.getElementById("chBillApplyYes").checked;
        var bIsInventoryApply=document.getElementById("chkInvYes").checked;
        //var bIsVoucherReferenceApply=document.getElementById("chVoucherApplyYes").checked;
        if(bIsCostCenterApply)
        {
            var oCC =  $('#tblCCs').datagrid('getRows');
            if( parseInt(oCC.length) == 0)
            {
                alert("Please Select At least One CostCenter.");
                return
            }
        }
        if(bIsInventoryApply)
        {
            var oIR =  $('#tblIRs').datagrid('getRows');
            if( parseInt(oIR.length) == 0)
            {
                alert("Please Select At least One Inventory Reference.");
                return
            }
        }

        var oBUs=$('#tblBusinessUnits').datagrid('getChecked');
        if(oBUs==null||oBUs.length<=0){
            alert("Please select at least one item!");
        }
        return true;
    }

    function IsCostCenterApplyYes()
    {
        document.getElementById("chkCCApplyYes").checked=true;
        document.getElementById("chkCCApplyNo").checked=false;
        ConfigTableHideShow("EditMode");
    }

    function IsCostCenterApplyNo()
    {
        document.getElementById("chkCCApplyYes").checked=false;
        document.getElementById("chkCCApplyNo").checked=true;
        ConfigTableHideShow("EditMode");
    }

    function IsBillRefApplyYes()
    {
        document.getElementById("chBillApplyYes").checked=true;
        document.getElementById("chBillApplyNo").checked=false;
    }

    function IsBillRefApplyNo()
    {
        document.getElementById("chBillApplyYes").checked=false;
        document.getElementById("chBillApplyNo").checked=true;
    }

    function IsInventoryApplyYes()
    {
        document.getElementById("chkInvYes").checked=true;
        document.getElementById("chkInvNo").checked=false;
        ConfigTableHideShow("EditMode");
    }

    function IsInventoryApplyNo()
    {
        document.getElementById("chkInvYes").checked=false;
        document.getElementById("chkInvNo").checked=true;
        ConfigTableHideShow("EditMode");
    }

    function IsOrderRefApplyYes()
    {
        document.getElementById("chkOrderRefAppYes").checked=true;
        document.getElementById("chkOrderRefAppNo").checked=false;
    }

    function IsOrderRefApplyNo()
    {
        document.getElementById("chkOrderRefAppYes").checked=false;
        document.getElementById("chkOrderRefAppNo").checked=true;
    }

    function ConfigTableHideShow(mode)
    {
        var chkCCApplyYes = $("#chkCCApplyYes").prop('checked');
        var chkCCApplyNo = $("#chkCCApplyNo").prop('checked');
        var chkInvYes = $("#chkInvYes").prop('checked');
        var chkInvNo = $("#chkInvNo").prop('checked');

        if(chkCCApplyYes == true && chkCCApplyNo == false)
        {
            $('#ParentDiv').tabs('enableTab', 0);
            $('#divSubLedger :input').prop('disabled', false);
            $('#btnCCAdd,#btnCCRemove').show();

        }
        else if(chkCCApplyNo == true && chkCCApplyYes == false)
        {
            $('#divSubLedger :input').prop('disabled', true);
            $('#btnCCAdd,#btnCCRemove').hide();
            $('#ParentDiv').tabs('disableTab', 0);
            $('#ParentDiv').tabs('select', 1);
            if(mode == "EditMode")
            {
                var oAccHeadCostCenters = [];
                LoadCCTable(oAccHeadCostCenters);
            }
        }

        if(chkInvYes == true && chkInvNo == false)
        {
            $('#ParentDiv').tabs('enableTab', 1);
            $('#divInventoryReference :input').prop('disabled', false);
            $('#btnIRAdd,#btnIRRemove').show();
        }
        else if(chkInvNo == true && chkInvYes == false)
        {
            $('#divInventoryReference :input').prop('disabled', true);
            $('#btnIRAdd,#btnIRRemove').hide();
            $('#ParentDiv').tabs('disableTab', 1);
            $('#ParentDiv').tabs('select', 0);
            if(mode == "EditMode")
            {
                var oInventoryProducts = {};
                LoadIRTable(oInventoryProducts);
            }
        }
    }
    //Start CAOConfigure region

    function RefreshControlLayout(oAURolesMapping)
    {
        $("#btnAdd").hide();
        $("#btnEdit").hide();
        $("#btnView").hide();
        $("#btnDelete").hide();
        $("#btnMoveAccountHead").hide();
        $("#btnCAOConfigure").hide();

        if(PermissionChecker('Add','ChartsOfAccount',oAURolesMapping)){$("#btnAdd").show();}
        if(PermissionChecker('Edit','ChartsOfAccount',oAURolesMapping)){$("#btnEdit").show();}
        if(PermissionChecker('View','ChartsOfAccount',oAURolesMapping)){$("#btnView").show();}
        if(PermissionChecker('Delete','ChartsOfAccount', oAURolesMapping)){$("#btnDelete").show();}
        if(PermissionChecker('MoveAccountHead','ChartsOfAccount',oAURolesMapping)){$("#btnMoveAccountHead").show();}
        if(PermissionChecker('Configure','ChartsOfAccount',oAURolesMapping)){$("#btnCAOConfigure").show();}
    }
</script>