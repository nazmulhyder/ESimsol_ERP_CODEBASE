@model IEnumerable<ESimSol.BusinessObjects.InventoryTraking>
  
    @{
        ViewBag.Title = "Product Wise Inventory";
    }
                      <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
                          <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
                              <label style="font-size:18px;">Please wait</label>
                              <div id="progressbar" style="width:100%;height:37px;"></div>
                          </div>
                      </div>

                      <div class="easyui-panel menuMainCollectionTable" style="font-family:Tahoma; margin-left: 0px; height: 100%; width:100%">
                          <table id="tblPRs" style="width:100%; height:100%" title="Product Wise Inventory" class="easyui-datagrid" fit="true" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" showfooter="true" toolbar="#toolbar" data-options="rowStyler: function(index,row){
                                        if (row.ProductName=='Total'){
                                  return 'background-color:#016B18;font-weight:bold';
                                        }
                                        if (row.ProductID==0){
                                            return 'background-color:#4dffff;font-weight:bold';
                                        }
                                    }
                    ">
                              <thead>
                                  <tr>
                                      <th field="ProductCode" width="8%" align="left">Code</th>
                                      <th field="PCategoryName" width="6%" align="left">Category Name</th>
                                      <th field="ProductName" width="25%" align="left">Product Name</th>
                                      <th field="OpeningQty" width="10%" align="right" formatter="formatPrice">Opening </th>
                                      <th field="InGRN" width="10%" align="right" formatter="formatPrice">GRN In <label id="lblInQty"></label></th>
                                      <th field="InAdj" width="10%" align="right" formatter="formatPrice">Adj. In <label id="lblInQty"></label></th>
                                      <th field="InRS" width="10%" align="right" formatter="formatPrice">Pro. In <label id="lblInQty"></label></th>
                                      <th field="InTr" width="10%" align="right" formatter="formatPrice">Trans. In <label id="lblInQty"></label></th>
                                      <th field="InTrSW" width="10%" align="right" formatter="formatPrice">SW Req. In <label id="lblInQty"></label></th>
                                      <th field="InRet" width="10%" align="right" formatter="formatPrice"> Return In <label id="lblInQty"></label></th>
                                      <th field="InWIP" width="10%" align="right" formatter="formatPrice"> WIP <label id="lblInQty"></label></th>
                                      <th field="InRecycle" width="10%" align="right" formatter="formatPrice"> In Recycle  <label id="lblInQty"></label></th>
                                      <th field="InWastage" width="10%" align="right" formatter="formatPrice"> In Wastage  <label id="lblInQty"></label></th>
                                      <th field="InQty" width="10%" align="right" formatter="formatPrice">Total In <label id="lblInQty"></label></th>

                                      @*<th field="OutGRN" width="10%" align="right" formatter="formatPrice">GRN Out <label id="lblInQty"></label></th>*@
                                      <th field="OutAdj" width="10%" align="right" formatter="formatPrice">Adj. Out <label id="lblInQty"></label></th>
                                      <th field="OutRS" width="10%" align="right" formatter="formatPrice">Pro. Out <label id="lblInQty"></label></th>
                                      <th field="OutTr" width="10%" align="right" formatter="formatPrice">Trans. Out <label id="lblInQty"></label></th>
                                      <th field="OutTrSW" width="10%" align="right" formatter="formatPrice">SW Req. Out <label id="lblInQty"></label></th>
                                      <th field="OutCon" width="10%" align="right" formatter="formatPrice">Cons. Out <label id="lblInQty"></label></th>
                                      <th field="OutWIP" width="10%" align="right" formatter="formatPrice"> WIP <label id="lblInQty"></label></th>
                                      <th field="OutRecycle" width="10%" align="right" formatter="formatPrice"> Out Recycle  <label id="lblInQty"></label></th>
                                      <th field="OutWastage" width="10%" align="right" formatter="formatPrice"> Out Wastage  <label id="lblInQty"></label></th>
                                      <th field="OutDC" width="10%" align="right" formatter="formatPrice">DC Out <label id="lblInQty"></label></th>
                                      <th field="OutQty" width="8%" align="right" formatter="formatPrice">Total Out <label id="lblOutQty"></label></th>
                                      <th field="ClosingQty" width="8%" align="right" formatter="formatPrice">Closing </th>
                                      
                                  </tr>
                              </thead>
                          </table>


                          <div id="toolbar">
                              <table border="0" cellpadding="2" cellspacing="2">
                                  <tr>
                                      <td style="width:80%;  font-size:12px; text-align:left">
                                          Date  <select id="cboDateSearch" style="width:80px;font-size:12px;" class="_select_changeA" />
                                          <input id="txtStartDate" type="text" style="width: 100px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                          <input id="tpStartDate" class="easyui-timespinner" style="width:60px;" required="required" />
                                          To
                                          <input id="txtEndDate" type="text" style="width: 100px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                          <input id="tpEndDate" class="easyui-timespinner" style="width:60px;" required="required" />

                                          <input type="text" style="width: 200px;" id="txtProduct_Raw" placeholder="Type Name then press enter" />
                                          <a id="btnProduct_Raw" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                                          <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="Refresh()">Refresh All</a>
                                          <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview</a>
                                          <a id="btnPrintITAllStore" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview(Transaction)</a>
                                          @*<a id="btnPrintXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">ExportXL</a>
                                          <a id="btnPrintDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview Detail</a>
                                          <a id="btnProductSort" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Type Change</a>*@
                                          <a id="btnPrintCurrentStock" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview(Current Stock)</a>
                                      </td>
                                  </tr>

                              </table>
                          </div>
                      </div>
                      
    <script type="text/javascript">
        var _oInventoryTrakings=[];
        var _oInventoryTraking=null;
        var _sBaseAddress="";
        var _sProductIDs="";
        var _nBUID=0;
        var _nID=0;
        $(document).ready(function () {
           
            _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
            _oInventoryTrakings=@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
            _nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
            _oRouteSheetSetup =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.RouteSheetSetup));
            debugger;
            //var oPRs =sessionStorage.getItem("oPRs");
            //if(oPRs!=null)
            //{
            //    oPRs =  jQuery.parseJSON(oPRs);
            //    var oPR =sessionStorage.getItem("oPR");
            //    oPR =  jQuery.parseJSON(oPR);
            //    //$('#txtEndDate').datebox({disabled: false});
            //    //$('#txtStartDate').datebox('setValue',oPR.StartDate );
            //    //$('#txtEndDate').datebox('setValue',oPR.EndDate);
            //    //$('#cboDateSearch').val(oPR.ReportType);
            //}
            //else
            //{
            //    oPRs=_oInventoryTrakings;
            //}
            var dtEventTime =icsdateformat(new Date());
            _oRouteSheetSetup.BatchTimeTT=dtEventTime+" 00:00:00"
            $('#tpStartDate,#tpEndDate').timespinner('setValue', "00:00");
            RefreshDateSearch();
            RefreshList(_oInventoryTrakings);
            //if(_nID!=-1)
            //{
            //    $('#tblPRs').datagrid('selectRow', _nID);
            //}
            $("#progressbar").progressbar({value: 0});
            $("#progressbarParent").hide();
            $(".lblLoadingMessage").hide();

            
        });

        function RefreshDateSearch()
        {
            debugger;
            $('#txtStartDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtEndDate').datebox('setValue', icsdateformat(new Date()));

            $('#cboDateSearch').empty();
            var listDates = "<option value='"+1+"'>" + "EqualTo" + "</option>";
            listDates+= "<option value='"+5+"'>" + "Between" + "</option>";
            $("#cboDateSearch").html(listDates);
            $('#txtEndDate').datebox({disabled: true});

        }

        function updateProgress() {
            var value =$('#progressbar').progressbar('getValue');
            if (value < 96){
                value += Math.floor(Math.random() * 10);
                $('#progressbar').progressbar('setValue', value);
            }
        }
        function hideShow(miliseconds) {
            $("#progressbarParent").hide();
        }
       
        $('._select_changeA').change(function () {
            var dtEventTime = icsdateformat(new Date())+" "+ _oRouteSheetSetup.BatchTimeTT;
            var DateTypes = document.getElementById("cboDateSearch");
            var DateType=DateTypes.options[DateTypes.selectedIndex].text;
            if (DateType == "EqualTo") {
                $('#txtStartDate').datebox({disabled: false});
                $('#txtStartDate').datebox('setValue', dtEventTime);
                $('#txtEndDate').datebox({disabled: true});
                $('#txtEndDate').datebox('setValue', dtEventTime);
            }
            if (DateType == "None" )
            {
                $('#txtStartDate').datebox({disabled: true});
                $('#txtEndDate').datebox({disabled: true});
                $('#txtStartDate').datebox('setValue', icsdateformat(new Date()));
                $('#txtEndDate').datebox('setValue', icsdateformat(new Date()));
            }
            if (DateType == "Between" ||DateType == "NotBetween"  )
            {
                $('#txtStartDate').datebox({disabled: false});
                $('#txtEndDate').datebox({disabled: false});
                $('#txtStartDate').datebox('setValue', dtEventTime);
                $('#txtEndDate').datebox('setValue',dtEventTime);
            }
        });
      

        function Refresh()
        {

            debugger;
            var nDateType = $("#cboDateSearch").val();
            var date1=$('#txtStartDate').datebox('getValue');
            var date2= $('#txtEndDate').datebox('getValue');
            if(parseInt(nDateType) == 1)//Equ
            {
                date2=date1;
            }


     
            var startTime= $('#tpStartDate').timespinner('getValue');
            var sTime=startTime.split(':');
            var hStartTime= sTime[0];
            var mStartTime= sTime[1];
            if(isNaN(hStartTime))
            {
                hStartTime="00";
                mStartTime="00";
            }
            date1=date1+" "+hStartTime+":"+mStartTime;
      
            startTime= $('#tpEndDate').timespinner('getValue');
            sTime=startTime.split(':');
            hStartTime= parseFloat(sTime[0]);
            mStartTime= parseFloat(sTime[1]);
            //dRouteSheetDateToAdv = new Date(dRouteSheetDateToAdv);
            if(isNaN(hStartTime))
            {
                hStartTime="00";
                mStartTime="00";
            }
            date2=date2+" "+hStartTime+":"+mStartTime;

            _sProductIDs='';
            var sProducts= '';
            var oInventoryTraking= {
                ProductName : sProducts,
                StartDate: date1,
                EndDate:date2,
                BUID:_nBUID
            }
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/InventoryTraking/GetsForProductWise",
                traditional: true,
                data:  JSON.stringify(oInventoryTraking),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    clearInterval(intervalID);
                    $("#progressbarParent").hide();
                    var _oInventoryTrakings = data;
                    if (_oInventoryTrakings.length>0)
                    {
                        RefreshList(_oInventoryTrakings);
                      
                    }
                    else {
                        alert("Data not Found");
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
        function RefreshByProduct(oProducts)
        {
           // var Date = document.getElementById("cboDateSearch");
           
            var nDateType = $("#cboDateSearch").val();
            var date1=$('#txtStartDate').datebox('getValue');
            var date2= $('#txtEndDate').datebox('getValue');
            if(parseInt(nDateType) == 1)//Equ
            {
                date2=date1;
            }


     
            var startTime= $('#tpStartDate').timespinner('getValue');
            var sTime=startTime.split(':');
            var hStartTime= sTime[0];
            var mStartTime= sTime[1];
            if(isNaN(hStartTime))
            {
                hStartTime="00";
                mStartTime="00";
            }
            date1=date1+" "+hStartTime+":"+mStartTime;
      
            startTime= $('#tpEndDate').timespinner('getValue');
            sTime=startTime.split(':');
            hStartTime= parseFloat(sTime[0]);
            mStartTime= parseFloat(sTime[1]);
            //dRouteSheetDateToAdv = new Date(dRouteSheetDateToAdv);
            if(isNaN(hStartTime))
            {
                hStartTime="00";
                mStartTime="00";
            }
            date2=date2+" "+hStartTime+":"+mStartTime;

            var sProducts = "";
            if(oProducts.length > 0)
            {
                for (i = 0; i < oProducts.length; ++i) {
                    sProducts = sProducts +  oProducts[i].ProductID + ',';
                }
                sProducts = sProducts.substring(0, sProducts.length - 1);
            }
            _sProductIDs=sProducts;
          
                var oInventoryTraking= {
                    ProductName : sProducts,
                    StartDate: date1,
                    EndDate:date2,
                    BUID:_nBUID
                }
      
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/InventoryTraking/GetsForProductWise",
                traditional: true,
                data:  JSON.stringify(oInventoryTraking),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    clearInterval(intervalID);
                    $("#progressbarParent").hide();
                    var _oInventoryTrakings = data;
                    if (_oInventoryTrakings.length>0)
                    {
                        RefreshList(_oInventoryTrakings);
                       
                    }
                    else {
                        alert("Data not Found");
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }


        function RefreshList(oPRs)
        {
            DynamicRefreshList(oPRs, 'tblPRs');
            $.icsMakeFooterColumn('tblPRs',['ProductName','OpeningQty','InGRN','InAdj','InRS','InAdj','InTr','InTrSW','InRet','InWIP','InRecycle','InWastage','InQty','OutAdj','OutAdj','OutRS','OutTr','OutTrSW','OutCon','OutWIP','OutRecycle','OutWastage','OutDC','OutQty','ClosingQty']);
        }

      

     
        //$("#btnPrintXL").click(function () {
        //    debugger;
        //  //  var Date = document.getElementById("cboDateSearch");
        //    var nDateType =1;// Date.options[Date.selectedIndex].value;
        //    var date1=icsdateformat(new Date());// $('#txtStartDate').datebox('getValue');
        //    var date2=icsdateformat(new Date());// $('#txtEndDate').datebox('getValue');
        //    if(parseInt(nDateType) == 1)//Equ
        //    {  
        //        date2=date1;
        //    }
        //    var ncboReportType=$("#cboReportType").val();
            
        //    var  sTempString =_nBUID+"~"+_sProductIDs+'~'+ncboReportType+ '~'+ date1+'~'+date2+'~'+parseInt($("#cboSortType").val());
        //    window.open(_sBaseAddress + '/InventoryTraking/PrintPRRInXL?sTempString='+sTempString,"_blank");
        //});

  

        function formatPrice(val,row)
        {
   
            val=parseFloat(val);
            var test = val.toFixed(2);
            if (val == 0)
            {
                test=(-1*test);
            }
            var tests = addComma(test);
            if (val == 0)
            {
               // return '<span style="color:red;">('+tests+')</span>';
                return '';
            }
            else 
            {
                return tests;
            }

        }

        function addComma(nStr)
        {

            nStr += '';
            x = nStr.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
            }
            return x1 + x2;
        }

       
        function start(){
            var value = $('#p').progressbar('getValue');
            if (value < 100){
                value += Math.floor(Math.random() * 10);
                $('#p').progressbar('setValue', value);
                setTimeout(arguments.callee, 200);
            }
        };

        //Supplier Part
        $("#txtProduct_Raw").keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) // Enter Press
            {
                debugger;
                var TextBox=$(this);
                var oProduct = { BUID:sessionStorage.getItem("BUID"),ProductName:$('#txtProduct_Raw').val()};
                var obj = {
                    BaseAddress: _sBaseAddress,
                    Object: oProduct,
                    ControllerName: "Product",
                    ActionName: "SearchByProductBUWise",
                    IsWinClose: false
                };
                $("#progressbar").progressbar({ value: 0 });
                $("#progressbarParent").show();
                var intervalID = setInterval(updateProgress, 250);
                $.icsDataGets(obj, function (response) {
                    clearInterval(intervalID);
                    $("#progressbarParent").hide();
                    if (response.status && response.objs.length > 0) {
                        if (response.objs[0].ProductID > 0) {
                            var tblColums = [];var oColumn = { field: "ProductCode", title: "ProductCode", width: 80, align: "left" };tblColums.push(oColumn);
                            oColumn = { field: "ProductName", title: "Name", width: 250, align: "left" };tblColums.push(oColumn);

                            var oPickerParam = {
                                winid: 'winProducts',
                                winclass:'clsProducts',
                                winwidth: 600,
                                winheight: 460,
                                tableid: 'tblProducts',
                                tablecolumns: tblColums,
                                datalist: response.objs,
                                multiplereturn: true,
                                searchingbyfieldName:'ProductName',
                                windowTittle: 'Product List',
                                TextBox:TextBox
                            };
                            $.icsPicker(oPickerParam);
                            IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                        }
                        else { alert(response.objs[0].ErrorMessage); }
                    }
                });
            }
        });
        $("#btnProduct_Raw").click(function () {
            var oProduct = { BUID:sessionStorage.getItem("BUID"),ProductName:$('#txtProduct_Raw').val()};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProduct,
                ControllerName: "Product",
                ActionName: "SearchByProductBUWise",
                IsWinClose: false
            };
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ProductID > 0) {
                        var tblColums = [];var oColumn = { field: "ProductCode", title: "ProductCode", width: 80, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Name", width: 250, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winProducts',
                            winclass: 'clsProducts',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblProducts',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'ProductName',
                            windowTittle: 'Product List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });

        });
        $('#txtProduct_Raw').keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 8) //backspace=8
            {
                var txtProduct_Raw = document.getElementById("txtProduct_Raw");
                txtProduct_Raw.value = '';
                txtProduct_Raw.style.color = "black";
                txtProduct_Raw.style.fontWeight = "normal";
                //_oPurchaseInvoice.SupplierID = 0;

            }
        });
        function IntializePickerbutton(oPickerobj) {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                //for Single Select
                SetPickerValueAssign(oPickerobj);
            });
            $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
                if (e.which == 13)//enter=13
                {
                    SetPickerValueAssign(oPickerobj);

                }
            });
        }
        function SetPickerValueAssign(oPickerobj) {
            var oreturnObj = null, oreturnobjs = [];
            if (oPickerobj.multiplereturn) {
                oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
            } else {
                oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
            }
            $("#" + oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winProducts')
            {
                if (oreturnobjs != null && oreturnobjs.length > 0)
                {
                    debugger;
                    var txtProduct_Raw = document.getElementById("txtProduct_Raw");
                    //txtProduct_Raw.value = oreturnobjs[0].ProductCode;
                    txtProduct_Raw.style.color = "blue";
                    txtProduct_Raw.style.fontWeight = "bold";
                    RefreshByProduct(oreturnobjs);
                    $('#txtProduct_Raw').focus();
                }
            }

        }
        //Pick PR Part
        ///
        function cellStylerLot3(value,row,index)
        {
            if (row.ProductID<=0 )
            {
                return 'background-color:#FFFF00;color:#FC0D0D;';
            }
        }


        $("#btnPrint").click(function(){

            // var Date = document.getElementById("cboDateSearch");
            var nDateType = $("#cboDateSearch").val();// Date.options[Date.selectedIndex].value;
            var date1=icsdateformat(new Date());//$('#txtStartDate').datebox('getValue');
            var date2=icsdateformat(new Date());// $('#txtEndDate').datebox('getValue');
            if(parseInt(nDateType) == 1)//Equ
            {  
                date2=date1;
            }
        
          
            var  sTempString =_nBUID+"~"+_sProductIDs+'~'+nDateType+ '~'+ date1+'~'+date2;
            window.open(_sBaseAddress + '/InventoryTraking/PrintPriviewProductWise?sTempString='+sTempString, "_blank");
        });
        $("#btnPrintITAllStore").click(function () {
            debugger;
        
            var oInventoryTraking = $('#tblPRs').datagrid('getSelected');
            if (oInventoryTraking ==null || oInventoryTraking.ProductID <=0 ) { alert("Please select an item from list."); return ; }
           
            var sParams="";
            sParams=_nBUID+"~"+ oInventoryTraking.StartDatetimeSt+"~"+oInventoryTraking.EndDatetimeSt+"~"+""+"~"+oInventoryTraking.ProductID+"~"+0+"~"+2+"~";
            window.open(_sBaseAddress + '/InventoryTraking/PrintInventoryTransactionsTypeAllStore?sTempString=' + sParams, "_blank");
        });

        $("#btnPrintCurrentStock").click(function(){

            // var Date = document.getElementById("cboDateSearch");
            var nDateType = $("#cboDateSearch").val();// Date.options[Date.selectedIndex].value;
            var date1=icsdateformat(new Date());//$('#txtStartDate').datebox('getValue');
            var date2=icsdateformat(new Date());// $('#txtEndDate').datebox('getValue');
            if(parseInt(nDateType) == 1)//Equ
            {  
                date2=date1;
            }
        
          
            var  sTempString =_nBUID+"~"+_sProductIDs+'~'+nDateType+ '~'+ date1+'~'+date2;
            window.open(_sBaseAddress + '/InventoryTraking/PrintPriviewCurrentStock?sTempString='+sTempString, "_blank");
        });

     

    </script>
