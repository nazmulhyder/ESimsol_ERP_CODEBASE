<html>
<head>
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
</head>
<body>
    @model ESimSol.BusinessObjects.ProductUniqueIdentification
    <div style="font-family: Tahoma">
        <table border="0" cellspacing="2" cellpadding="2">
            <tr>
                <td style="background-color: #CFB53B; text-align: center; width: 460px; color: White">
                    <label id="lblHeaderName" style="font-size: 15px; font-weight: bold; text-decoration: Underline;
                        width: 460px">
                        Add Asset Unique Identification</label>
                </td>
            </tr>
        </table>
        <fieldset style="width: 400px; text-align: right">
            <div style="height: 540px; overflow: auto">
                <table border="0">
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Category:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.ProductCategoryName, new { style = "width: 215px;", id = "txtProductCategoryName" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Product Name
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.ProductName, new { style = "width: 215px;", id = "txtProductName" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Location:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.Name, new { style = "width: 215px;", id = "txtLocationName" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Lot:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.LotNo, new { style = "width: 215px;", id = "txtLotName" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td id="LotStatus1" style="width: 155px; font-size: 13px; text-align: left">
                        </td>
                        <td id="LotStatus" style="width: 240px; font-size: 13px; text-align: left">
                            Lot Balance:
                            <label for="PUI" style="color: Highlight; font-size: small;" id="Balance">
                            </label>
                            Identified:
                            <label for="Identified" style="color: Highlight; font-size: small;" id="Identified">
                            </label>
                            Left :
                            <label for="Left" style="color: Highlight; font-size: small;" id="Left">
                            </label>
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr id="Allrestinsert">
                        <td style="width: 155px; font-size: 13px; text-align: right; color: Blue">
                        </td>
                        <td style="width: 240px; font-size: 13px; text-align: left; color: Blue">
                            Identify all Left Products: @Html.CheckBoxFor(model => model.SelectAllLot, new { id = "chkSelectAllLot" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Manufacturer:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.Brand, new { style = "width: 215px;", id = "txtManufacturer" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Origin:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.MadeIn, new { style = "width:215px", id = "txtOrigin" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Asset Type:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.AssetTypeInString, new { style = "width:215px", id = "txtAssetTypeInString", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Warranty Type:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.DropDownListFor(model => model.CalculationType, new SelectList(Enum.GetValues(typeof(ICS.Core.Utility.EnumCalculationType))), new { id = "cboCalculationType", style = "width: 215px;", @class = "_select_changeWP" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Warranty Period:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.Warranty, new { style = "width:215px", id = "txtWarrantyPeriod" })
                            <br />
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Warranty Start Date:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBox("WarrantyStart", DateTime.Today.ToString("dd MMMM yyyy"), new { style = "width: 215px;", id = "txtWarrantyStartDate", @class = "_select_change" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Warranty End Date:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.WarrantyEnd, new { style = "width: 215px;", id = "txtWarrantyEnd", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Serial No:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.SerialNumberOnProduct, new { style = "width: 215px;", id = "txtSerialNumberOnProduct" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Tag No:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.TagNo, new { style = "width: 215px;", id = "txtTagNo" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Base Currency:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.CurrencyNameSymbol, new { style = "width: 215px;", id = "txtCurrencyNameSymbol", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Actual Asset Value:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.ActualAssetValue, new { style = "width: 215px;", id = "txtActualAssetValue", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Value After Evaluation:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.ValueAfterEvaluation, new { style = "width: 215px;", id = "txtValueAfterEvaluation", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Description:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.Note, new { style = "width: 215px", id = "txtDescription" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr style="visibility: hidden">
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            @Html.TextBoxFor(model => model.ProductID, new { style = "width: 15px;", id = "txtProductID" })
                            @Html.TextBoxFor(model => model.InstallationLocationID, new { style = "width: 15px;", id = "txtLocationID" })
                            @Html.TextBoxFor(model => model.LotID, new { style = "width: 15px;", id = "txtLotID" })
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.ProductCategoryID, new { style = "width: 15px;", id = "txtProductCategoryID" })
                            @Html.TextBoxFor(model => model.RestBalance, new { style = "width: 15px;", id = "txtBalance" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr style="visibility: hidden">
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            @Html.TextBoxFor(model => model.AssetType, new { style = "width:15px", id = "txtAssetType" })
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                        </td>
                        <td>
                        </td>
                    </tr>
                </table>
            </div>
            <table>
                <tr>
                    <td style="width: 60px; font-size: 13px; text-align: left">
                    </td>
                    <td style="width: 165px; font-size: 13px; text-align: left">
                    </td>
                    <td style="width: 165px; font-size: 13px; text-align: right">
                        <input type="button" value="Save" id="btnSave" style="width: 40px;" />
                        <input type="button" value="Cancel" id="btnCancel" style="width: 60px;" />
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript"> 
var nLotID = 0;
var balance = 0;
   
$(document).ready(function () {
    //debugger;
        initializeDatepicker(); // this function is in GlobalScript.js. used for date picker.    
        objmodel =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
         _oPUICompanys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.Companys));

         document.getElementById('txtCurrencyNameSymbol').value = _oPUICompanys[0].CurrencyNameSymbol;

         document.getElementById("LotStatus").style.display = 'none';    
         document.getElementById("LotStatus1").style.display = 'none';   
         document.getElementById("Allrestinsert").style.display = 'none';     
        $("#txtProductName")[0].value = 'Press Enter';
        $("#txtLocationName")[0].value = 'Press Enter';
        $("#txtProductCategoryName")[0].value = 'Press Enter';
        $("#txtLotName")[0].value = 'Press Enter'; 
        $("#txtDescription")[0].value = 'N/A';
        $("#txtAssetTypeInString")[0].value = '';  
        txtAssetTypeInString.style.backgroundColor = "#E0E0E0";
        txtValueAfterEvaluation.style.backgroundColor = "#E0E0E0";
        txtActualAssetValue.style.backgroundColor = "#E0E0E0";
        txtCurrencyNameSymbol.style.backgroundColor = "#E0E0E0";

$("#txtSerialNumberOnProduct").keydown(function(event) 
{//////////////debugger;
        // Allow: backspace, delete, tab, escape, and enter
        if ( event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || 
             // Allow: Ctrl+A
            (event.keyCode == 65 && event.ctrlKey === true) || 
             // Allow: home, end, left, right
            (event.keyCode >= 35 && event.keyCode <= 39)) {
                 // let it happen, don't do anything
                 return;
        }
        else 
        {
            // Ensure that it is a number and stop the keypress
            if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105 )) {
            event.preventDefault(); 
        }   
 }
 });


$("#txtWarrantyPeriod").keydown(function(event) 
{//////////////debugger;
        // Allow: backspace, delete, tab, escape, and enter
        if ( event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || 
             // Allow: Ctrl+A
            (event.keyCode == 65 && event.ctrlKey === true) || 
             // Allow: home, end, left, right
            (event.keyCode >= 35 && event.keyCode <= 39)) {
                 // let it happen, don't do anything
                 return;
        }
        else 
        {
            // Ensure that it is a number and stop the keypress
            if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105 )) {
            event.preventDefault(); 
            
        }   
 }
 });




$("#txtTagNo").keydown(function(event) 
{
////////debugger;
       
        if ( event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || 
            
        (event.keyCode == 65 && event.ctrlKey === true) || 
            
        (event.keyCode >= 35 && event.keyCode <= 39)) 
        {
             
            return;
        }
        else 
        {
        // Ensure that it is a number and stop the keypress
        if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105 )) {
        event.preventDefault();             
        //alert("Insert Only Numeric Number");
        }   
 }
 });


});

 

 $ ('._select_changeWP').change(function(){
    //////////////debugger;    
        //DateConversion(0);  
        $('#txtWarrantyPeriod').focus();
             
    }); 
 function RefreshObject()
 { 
   // ////////////debugger;
    var oProductUniqueIdentification= {
                                    PUIID: objmodel.PUIID,
                                    ProductCategoryID : $("#txtProductCategoryID").val(), 
                                    ProductID : $("#txtProductID").val(),                                    
                                    LotID : $("#txtLotID").val(),
                                    SelectAllLot: document.getElementById("chkSelectAllLot").checked,                                  
                                    Brand : $("#txtManufacturer").val(),  
                                    MadeIn : $("#txtOrigin").val(),
                                    AssetType : $("#txtAssetType").val(), 
                                    WarrantyOn : $("#cboCalculationType").val(), 
                                    Warranty : $("#txtWarrantyPeriod").val(),
                                    CalculationType : $("#cboCalculationType").val(),
                                    WarrantyStart: $("#txtWarrantyStartDate").val(),
                                    WarrantyEnd : $("#txtWarrantyEnd").val(),
                                    SerialNumberOnProduct: $("#txtSerialNumberOnProduct").val(), 
                                    TagNo : $("#txtTagNo").val(),
                                    ActualAssetValue: $("#txtActualAssetValue").val(),
                                    ValueAfterEvaluation : $("#txtValueAfterEvaluation").val(), 
                                    Note : $("#txtDescription").val(),  
                                    State :  $("#cboEnumAssetStatus").val(),
                                    InstallationLocationID : $("#txtLocationID").val()                   
                                 };
        return oProductUniqueIdentification;
 }




 function emptycontrol() // that makes all textbox blank if saved successfully
 {
    
    $("#txtProductCategoryName")[0].value = 'Press Enter';
    $("#txtProductName")[0].value = 'Press Enter';
//    document.getElementById('txtLotName').value = "";
    $("#txtLotName")[0].value = 'Press Enter';   
    $("#txtLocationName")[0].value = 'Press Enter';
    document.getElementById('txtProductCategoryID').value = 0;
    document.getElementById('txtProductID').value = 0;
    document.getElementById('txtLocationID').value = 0;
    document.getElementById('txtLotID').value = 0;
    document.getElementById('txtBalance').value = 0;  
    document.getElementById('txtOrigin').value = "";
    document.getElementById('txtAssetType').value = 0;
    document.getElementById('txtManufacturer').value = "";
    document.getElementById('Balance').value = "";    
    document.getElementById('txtAssetTypeInString').value = "";
    document.getElementById('cboCalculationType').value = 0;
    document.getElementById('txtWarrantyPeriod').value = 0;    
    document.getElementById('txtSerialNumberOnProduct').value = "";
    document.getElementById('txtTagNo').value = "";
    document.getElementById('txtActualAssetValue').value = 0;
    document.getElementById('txtValueAfterEvaluation').value = 0;
    document.getElementById('txtDescription').value = "";
    document.getElementById('chkSelectAllLot').checked = false;
    $("#txtDescription")[0].value = 'N/A'; 


 }

 $('#btnSave').click(function () 
 {
    
       //----------------------------------------
        if(!ValidateInput()) return false;   
        DateConversion();       
        var oProductUniqueIdentification=RefreshObject();
         $.ajax({
          type: "POST",
          dataType: "json",
          url: '@Url.Action("AddProductUniqueIdentification", "ProductUniqueIdentification")',
          data:  JSON.stringify(oProductUniqueIdentification),
          contentType: "application/json; charset=utf-8",
          success: function (data) {
             ////////////debugger;
              var oProductUniqueIdentifications = jQuery.parseJSON(data);
                  
              if (oProductUniqueIdentifications[0].ErrorMessage!=null)  
              {
                alert(oProductUniqueIdentifications[0].ErrorMessage);
                return;
              }

              else 
              {
                  alert("Data Saved sucessfully");                 
                  window.returnValue = oProductUniqueIdentifications;
                  emptycontrol();
                  window.close();
                  
              }
          },
          error: function (xhr, status, error) {
              alert(error);
          }

      });
      //-----------------To Calculate Date---------------------
      // ////////////debugger;
//        var dwarstart =$("#txtWarrantyStartDate").val(); 
//        var CalculationType =$("#cboCalculationType").val();
//        var nAmount =parseFloat($("#txtWarrantyPeriod")[0].value);
//        var nwarPeriod =parseInt($("#txtWarrantyPeriod")[0].value); 
//        if(CalculationType == "None")   
//        {alert("Select Warranty Type"); $('#cboCalculationType').focus(); return false}
//        if(CalculationType == "Month")
//        {   var month = new Date(dwarstart);       
//            var newmonth = new Date(month);
//            newmonth.setMonth(newmonth.getMonth() + nwarPeriod); // minus the date
//            var nm = new Date(newmonth);
//            var dWarrantyEnd= dateFormat(nm, "dd mmm yyyy");
//            $("#txtWarrantyEnd")[0].value = dWarrantyEnd; 
//        }
//        //////////////debugger;
//        if(CalculationType == "Year")
//        { if(nwarPeriod>100 || nwarPeriod<0)
//            {alert("You Need Administrative Permission"); return false}
//            var year = new Date(dwarstart);              
//            var newyear = new Date(year);
//            newyear.setYear(newyear.getFullYear() + nwarPeriod); // minus the date
//            var ny = new Date(newyear);
//            var dWarrantyEnd= dateFormat(ny, "dd mmm yyyy");
//            $("#txtWarrantyEnd")[0].value = dWarrantyEnd; 
//        }
          
});

function isNumber(n) // This function works to allow only numeric positive values
{    
  return !isNaN(parseFloat(n)) && isFinite(n);
} 

function ValidateInput() 
{
   // ////////////debugger;
        var nProductCategory = $("#txtProductCategoryID").val();         
        if(nProductCategory==1)  
        {
            alert("You Can Not Select Node, Select Other Node");
            $('#txtProductCategoryName').focus(); 
            return false;
        }

        if(nProductCategory<=0)  
        {
            alert("Press Enter To Category and Select A Node From Tree, except Root Node"); 
            $('#txtProductCategoryName').focus(); 
            return false;
        }        
        var nProductID = $("#txtProductID").val(); 
        if(nProductID<=0)  
        {
            alert("Provide Product Name"); 
            $('#txtProductName').focus(); 
            return false;
        }  
           
        var nLocationID = $("#txtLocationID").val(); 
        if(nLocationID<=0)  
        {
            alert("Select Location");
             $('#txtLocationName').focus(); 
             return false;
        } 
        
        var nLotID = $("#txtLotID").val(); 
        if(nLotID<=0)  
        {
            alert("Select Lot");
            $('#txtLotName').focus(); 
            return false;
        }

        var sManuf = $("#txtManufacturer").val(); 
        if(sManuf=="")  
        {
            alert("Provide Manufacturer"); 
            $('#txtManufacturer').focus(); 
            return false;
        } 
        var sOrigin = $("#txtOrigin").val();    
        if(sOrigin=="")  
        {
            alert("Provide Origin");
            $('#txtOrigin').focus();
            return false;
        }          
        var CalculationType = $("#cboCalculationType").val();  
        if(CalculationType =="None")
        {
            alert("Select Calculation Type"); 
            $('#cboCalculationType').focus(); 
            return false
        }
        var nWarrantyPeriod = $("#txtWarrantyPeriod").val();        
        if(nWarrantyPeriod<=0)  
        {
            alert("Provide Warrenty Period");
            $('#txtWarrantyPeriod').focus(); 
            return false;
        } 
        var WarPeriod =parseInt($("#txtWarrantyPeriod")[0].value); 
        if(WarPeriod <=0)
        {
            alert("Enter Warranty Period"); 
            $('#txtWarrantyPeriod').focus(); 
            return false
        }
        var nSerialNo = $("#txtSerialNumberOnProduct").val(); 
        if(nSerialNo<=0)  
        {
            alert("Provide Serial"); 
            $('#txtSerialNumberOnProduct').focus();
            return false;
        }   
        var nTagNo = $("#txtTagNo").val(); 
        if(nTagNo<=0||nTagNo=="")  
        {
            alert("Provide Tag"); 
            $('#txtTagNo').focus(); 
            return false;
        }         
          
           
        var ndActualAssetValue =$("#txtActualAssetValue").val();  
        if (ndActualAssetValue < 1) 
        {
            alert("Actual Asset Value Can't be Zero or Negetive");
            $('#txtActualAssetValue').focus(); 
            return false;
        }         
  
        var ndvalueafterevaluation = $("#txtValueAfterEvaluation").val();
        if(ndvalueafterevaluation<=0)
        {
            alert("Value After Evaluation Can't be Zero or Negetive");
            $('#txtValueAfterEvaluation').focus();
            return false;
        }  
        var sdescription = $("#txtDescription").val();
        if(sdescription=="")
        {
            alert("Please Provide Description"); 
            $('#txtDescription').focus(); 
            return false;
        }
        var assettypeinstring = $("#txtAssetTypeInString").val();
        var edatetype = document.getElementById("cboCalculationType");
        var EnumCalculationType = edatetype.options[edatetype.selectedIndex].innerHTML;
        if(assettypeinstring=="FixedAsset" && EnumCalculationType =="Month")
        {
            var nWarrantyPeriodMonth = $("#txtWarrantyPeriod").val();
            if(nWarrantyPeriodMonth<12)
            {
                alert("For Fixed Asset Warranty Must be more then 12 month"); 
                return false; 
            }           
            
        }       

      return true; 
}


function DateConversion()
{
   ////debugger;
    var dwarstart =$("#txtWarrantyStartDate").val(); 
    var CalculationType =$("#cboCalculationType").val();    
    var nAmount =parseFloat($("#txtWarrantyPeriod")[0].value);   
    var nwarPeriod =parseInt($("#txtWarrantyPeriod")[0].value);
    if(CalculationType == "None")   
    {
        alert("Select Warranty Type"); 
        $('#cboCalculationType').focus(); 
        return false
    }    
    
    if(CalculationType == "Month")
    { 
        var month = new Date(dwarstart);       
        var newmonth = new Date(month);
        newmonth.setMonth(newmonth.getMonth() + nwarPeriod); // minus the date
        var nm = new Date(newmonth);
        var dWarrantyEnd= dateFormat(nm, "dd mmm yyyy");
        $("#txtWarrantyEnd")[0].value = dWarrantyEnd; 
    }    
    if(CalculationType == "Year")
    { if(nwarPeriod>100 || nwarPeriod<0)
        {alert("You Need Administrative Permission"); return false}
        var year = new Date(dwarstart);              
        var newyear = new Date(year);
        newyear.setYear(newyear.getFullYear() + nwarPeriod); // minus the date
        var ny = new Date(newyear);
        var dWarrantyEnd= dateFormat(ny, "dd mmm yyyy");
        $("#txtWarrantyEnd")[0].value = dWarrantyEnd; 
    }
    return true;
}






// $('#txtWarrantyPeriod').keypress(function (e) {
//    //////debugger;
//    var c = String.fromCharCode(e.which);   
//    var WarrantyPeriod = document.getElementById('txtWarrantyPeriod').value;   
//    nwarrantyperiod = WarrantyPeriod + c;
//    var FWarrantyPeriod = parseInt(nwarrantyperiod);
//    var CalculationType =$("#cboCalculationType").val();
//    if(CalculationType=="Month")
//    {
//        var nwPeriod =parseInt(FWarrantyPeriod);
//        if(nwPeriod>12)
//        {
//            alert("Can't Insert More then 12");
//            return false;
//        }
//    }
//    
//    DateConversion(nwarrantyperiod);       
//})

 

 $('._select_change').change(function () {
    //////////////debugger;

    var dwarstart =$("#txtWarrantyStartDate").val(); 
    var CalculationType =$("#cboCalculationType").val();
    var nAmount =parseFloat($("#txtWarrantyPeriod")[0].value);
    var nwarPeriod =parseInt($("#txtWarrantyPeriod")[0].value); 
    $('#txtSerialNumberOnProduct').focus();
    if(CalculationType == "None")   
    {alert("Select Warranty Type"); $('#cboCalculationType').focus(); return false}
    if(CalculationType == "Month")
    { 
        var month = new Date(dwarstart);       
        var newmonth = new Date(month);
        newmonth.setMonth(newmonth.getMonth() + nwarPeriod); // minus the date
        var nm = new Date(newmonth);
        var dWarrantyEnd= dateFormat(nm, "dd mmm yyyy");
        $("#txtWarrantyEnd")[0].value = dWarrantyEnd; 
    }
    //////////////debugger;
    if(CalculationType == "Year")
    { if(nwarPeriod>100 || nwarPeriod<0)
        {alert("You Need Administrative Permission"); return false}
        var year = new Date(dwarstart);              
        var newyear = new Date(year);
        newyear.setYear(newyear.getFullYear() + nwarPeriod); // minus the date
        var ny = new Date(newyear);
        var dWarrantyEnd= dateFormat(ny, "dd mmm yyyy");
        $("#txtWarrantyEnd")[0].value = dWarrantyEnd; 
    }
     
 })


// To Load Location name on Piker
$('#txtLocationName').keypress(function (e) {
   // ////////////debugger;      
        var nProductCategoryID = $("#txtProductCategoryID").val();
        if(nProductCategoryID<=0)
        {alert("Please Select Product Category First"); return false}
        var nProductID = $("#txtProductID").val();
        if(nProductID<=0)
        {alert("Please Provide Product Name First"); return false}
        var nLotID = $("#txtProductID").val();
        if(nLotID<=0)
        {alert("Please Provide Product First"); return false}

        var keyCode = e.keyCode || e.which;
        if (keyCode == 13) {           
        var oParameter = new Object();
        oParameter.MultipleReturn = false;          
        var url = '@Url.Action("LocationPiker", "Location", new { AccountHead = "2~1" })'; 
        //var oReturnObject =  window.showModalDialog(url, oParameter, 'dialogHeight:550px;dialogWidth:500px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');
         var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:470px;dialogWidth:455px;dialogLeft:300;dialogTop:130;center:yes;resizable:no;status:no;scroll:no'); 
        //////////////debugger;
        if (oReturnObject != null) 
        {         
          document.getElementById('txtLocationName').value = oReturnObject.Name;
          document.getElementById('txtLocationID').value = oReturnObject.LocationID;  
          $('#txtLotName').focus();
                      
        }
        else 
         {
                $('#txtLocationName').focus();
         }
            return false;
       }

   })
//BackSpace Focus Change
$('#txtLocationName').keydown(function(e) 
{
    //////////////debugger; 
    if (e.keyCode == 8) 
    {
        $('#txtProductName').focus(); 
    } 
});

// To Load Product name in Piker
$('#txtProductName').keypress(function (e) {
        //////////////debugger;
        var nProductCategoryID = $("#txtProductCategoryID").val();
        if(nProductCategoryID<=0)
        {alert("Please Select Product Category First"); return false}
        var keyCode = e.keyCode || e.which;
        if (keyCode == 13) {           
            var oParameter = new Object();
            oParameter.Name = "ProductList";
            oParameter.MultipleReturn = false;                  
            var url = "/Product/ProductPiker?nProductCategoryID=" + nProductCategoryID;   // passing value of Product Category to Controller
            var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:455px;dialogWidth:450px;dialogLeft:300;dialogTop:130;center:yes;resizable:no;status:no;scroll:no'); 
           // var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:550px;dialogWidth:500px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');
           // ////////////debugger;
            if (oReturnObject != null) 
            {   
                 document.getElementById('txtLocationName').value = "";
                 document.getElementById('txtLocationID').value = 0; 
                 $("#txtLocationName")[0].value = 'Press Enter';             
                 document.getElementById('txtLotName').value = "";
                 document.getElementById('txtLotID').value = 0;
                 document.getElementById('txtActualAssetValue').value = 0;
                 document.getElementById('txtValueAfterEvaluation').value = 0;
                 $("#txtLotName")[0].value = 'Press Enter';
                 $("#txtLotName").focus(); 
                 document.getElementById('txtProductName').value = oReturnObject.ProductName;
                 document.getElementById('txtProductID').value = oReturnObject.ProductID;
                 $('#txtLocationName').focus();
             }           
           
            else 
                {
                  $('#txtProductName').focus(); 
                }
            return false;
        }
    })

//BackSpace Focus Change
$('#txtProductName').keydown(function(e) 
{
    //////////////debugger; 
    if (e.keyCode == 8) 
    {
        $('#txtProductCategoryName').focus(); 
    } 
});

// Load Product Category on a Tree View

$('#txtProductCategoryName').keypress(function (e) {
        ////////////debugger;
        
        var keyCode = e.keyCode || e.which;
        if (keyCode == 13) 
        {           
            var oParameter = new Object();
            oParameter.Name = "ProductCategory";
            oParameter.MultipleReturn = false;     
            var url = '@Url.Action("ProductCategoryTree", "ProductCategory")';
            var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:530px;dialogWidth:460px;dialogLeft:300;dialogTop:60;center:yes;resizable:no;status:no;scroll:no'); 
          
            ////////////debugger;
            if (oReturnObject != null) 
            {   
                 var Attribute =  oReturnObject.attributes.split("~")[0];                 
                 var AssetType = oReturnObject.attributes.split("~")[1];
                 var AssetTypeInString = oReturnObject.attributes.split("~")[2];

                if (Attribute == "True") 
                {
                     document.getElementById('txtProductName').value = "";
                     $("#txtProductName")[0].value = 'Press Enter';
                     document.getElementById('txtProductID').value = 0;
                     document.getElementById('txtProductCategoryName').value = oReturnObject.text;                
                     document.getElementById('txtProductCategoryID').value = oReturnObject.id;
                     document.getElementById('txtAssetTypeInString').value = AssetTypeInString;
                     document.getElementById('txtAssetType').value = AssetType;
                    $('#txtProductName').focus();
                }
                else
                {
                    alert("Select Last Layer Only");
                }

         }           
           
            else 
                {
                  $('#txtProductCategoryName').focus(); 
                }
            return false;
        }
    })





// To Load Lot No. on Piker
$('#txtLotName').keypress(function (e) {
        //////////////debugger;
        
        var nProductCategoryID = $("#txtProductCategoryID").val(); 
        if(nProductCategoryID<=0)
        {
            alert("Please Select Product Category First"); 
            $("#txtProductCategoryName").focus(); 
            return false
        }

        var nProductID = $("#txtProductID").val();
        if(nProductID<=0)
        {alert("Please Provide Product Name First"); $("#txtProductName").focus(); return false} 
        var nLocationID = $("#txtLocationID").val();  
        if(nLocationID<=0)
        {alert("Please Provide Location First"); $("#txtLocationID").focus(); return false} 
        var keyCode = e.keyCode || e.which;
        if (keyCode == 13) {    
        // ////////////debugger;       
            var oParameter = new Object();
            oParameter.Name = "LotList";
            oParameter.MultipleReturn = false;
            var url = "/Lot/LotPiker?nProductID=" + nProductID + "&nLocationID=" + nLocationID; // paramiter change on 16 March 13            
            var oReturnObject = window.showModalDialog(url, oParameter, 'dialogHeight:470px;dialogWidth:465px;dialogLeft:300;dialogTop:130;center:yes;resizable:no;status:no;scroll:no'); 
           ////debugger;
            if (oReturnObject != null) 
            {
                document.getElementById('txtLotName').value = oReturnObject.LotNo;
                document.getElementById('txtLotID').value = oReturnObject.LotID;  
                var UnitPrice = parseFloat(oReturnObject.UnitPrice);               
                document.getElementById('txtActualAssetValue').value = UnitPrice;
                document.getElementById('txtValueAfterEvaluation').value = UnitPrice;    
                document.getElementById('Balance').innerHTML = oReturnObject.Balance;
                nLotID = oReturnObject.LotID;
                balance = oReturnObject.Balance;
                ReturnLotBalance(nLotID);

                $("#txtManufacturer").focus();            
            }
            else 
            {
                $('#txtLotName').focus();
            }
            return false;
        }
})

//LotID = oReturnObject.LotID;

//function ReturnLotBalance(nLotID)
//{
//////debugger;
//             $.ajax({
//                    type: "GET",
//                    dataType: "json",                   
//                    url: '@Url.Action("GetLotBalance", "ProductUniqueIdentification")',
//                    data: { nLotID: nLotID},
//                    contentType: "application/json; charset=utf-8",
//                    success: function (data) {
//                       ////debugger;
//                        oLotBalance = jQuery.parseJSON(data);     
//                        if(oLotBalance!=null)
//                        {  
//                            var CountPuiid = oLotBalance.length;
//                            var BalanceLeft = balance - CountPuiid;
//                            if(BalanceLeft>=0)
//                            {
//                                document.getElementById('Identified').innerHTML = CountPuiid;
//                                document.getElementById("LotStatus").style.display = ''; 
//                                document.getElementById("LotStatus1").style.display = ''; 
//                                document.getElementById("Allrestinsert").style.display = '';
//                                document.getElementById('Left').innerHTML = BalanceLeft;
//                                                            
//                            }
//                        }
//                    },
//                    error: function (xhr, status, error) {
//                        alert(error);
//                    }
//                                      
//                });

//}


function ReturnLotBalance(nLotID)
{
    //debugger;


        var oCountLot=  {                                  
                             LotID : nLotID
                          };

             $.ajax({
                    type: "POST",
                    dataType: "json",                   
                    url: '@Url.Action("GetLotBalance", "ProductUniqueIdentification")',
                     data:  JSON.stringify(oCountLot),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                       //debugger;
                        oLotBalance = jQuery.parseJSON(data);     
                        if(oLotBalance!=null)
                        {  
                            var CountPuiid = oLotBalance.length;
                            var BalanceLeft = balance - CountPuiid;
                            if(BalanceLeft>=0)
                            {
                                document.getElementById('Identified').innerHTML = CountPuiid;
                                document.getElementById("LotStatus").style.display = ''; 
                                document.getElementById("LotStatus1").style.display = ''; 
                                document.getElementById("Allrestinsert").style.display = '';
                                document.getElementById('Left').innerHTML = BalanceLeft;
                                                            
                            }
                        }
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                                      
                });

}



//BackSpace Focus Change
$('#txtLotName').keydown(function(e) 
{
    //////////////debugger; 
    if (e.keyCode == 8) 
    {
        $('#txtLocationName').focus(); 
    } 
});

 $('#btnCancel').click(function () {        
    window.close();          
 });

//Disable Editing Piker TextBoxes

  $('#txtProductName').keydown(function (e) 
    {var keyCode = e.keyCode || e.which;       
        if (keyCode != 13) {return false;}
    })

    $('#txtLocationName').keydown(function (e) 
    {var keyCode = e.keyCode || e.which;
        if (keyCode != 13){return false;}            
    })

    $('#txtProductCategoryName').keydown(function (e) 
    {var keyCode = e.keyCode || e.which;        
        if (keyCode != 13) {return false;}            
    })

    $('#txtLotName').keydown(function (e) 
    {var keyCode = e.keyCode || e.which;        
        if (keyCode != 13) {return false;}    
    })
</script>
