@model IEnumerable<ESimSol.BusinessObjects.BenefitOnAttendanceEmployee>

    @{
        ViewBag.Title = "Benifets On Attendance";
    }
    <div class="menuMainCollectionTable" style="width:100%;height:100%">
        <div style="float:left; width: 30%;height:100%">
            <table id="tblBenefitOnAttendance" title="Benifets On Attendance" class="easyui-datagrid" style="width:100%; height:100%" fitcolumns="false" rownumbers="true" pagination="fasle" singleselect="true" , autorowheight="false" toolbar="#toolbarBenifits">
                <thead>
                    <tr>
                        <th field="Name" width="85%" align="left">Name</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarBenifits">
                <table>
                    <tr>
                        <td colspan="2">
                            <select id="cboBOAEmployeeType" style="width:90%">
                                <option value="0"> --Select Type-- </option>
                                <option value="1">Benifited</option>
                                <option value="2">Permanently Benifited</option>
                                <option value="3">Temporarily Benifited</option>
                                <option value="4">Temporarily Stopped</option>
                                <option value="5">Yet Not Benifited</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            S. Range :
                            <input id="txtStartSalaryRange" type="text" style="width:32.2%" class="number" /> To
                            <input id="txtEndeSalaryRange" type="text" style="width:33%" class="number" />
                            </td>
                        </tr>
                    <tr>
                        <td></td>
                        <td style="text-align:right;">
                            <a id="btnBenifited" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                            <a id="btnPrintExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true"></a>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div style="float:left; width: 70%;height:100%">
            <table id="tblEmployee" title="Employee List" class="easyui-datagrid" style="width:100%; height:95%" fitcolumns="false" rownumbers="true" pagination="fasle" multiselect="true" , autorowheight="false" toolbar="#toolbarEmployee">
                <thead>
                    <tr>
                        <th data-options="field:'Selected',checkbox:true"> </th>
                        <th field="EmployeeName" width="150">Employee Name</th>
                        <th field="EmployeeCode" width="100">Code</th>
                        <th field="DesignationName" width="100">Designation</th>
                        <th field="DepartmentName" width="150">Department</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarEmployee">
                <input id="txtsearchByName" class="reset-text" style="width:30%;" placeholder="Search Employee by Name or Code" />
                <a id="btnAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Adv.Src</a>
                <a id="btnAssignBenifits" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Assign Benifits</a>
                <a id="btnStopBenifits" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Disallow Benifits</a>
                <a id="btnHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">History</a>
                <a id="btnAllBenefits" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">All Benefits</a>
            </div>
            <div>
                <a id="btnPrevious" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-back" plain="true">Previous</a>
                <a id="btnNext" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-forword" plain="true">Next</a>
                <span> || </span>
                <span>Showing <label id="lblShowResult"></label> Records Out of <span> <label id="lblTotalResult"></label>  </span> Records </span>
            </div>


        </div>
    </div>

    <div id="winAssignBenifits" class=" easyui-window winclass" title="Benifit Type" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset style="height:60px">
                <table border="0" cellspacing="2" cellpadding="2" style="width:350px; font-size: 11px; font-weight: bold">
                    <tr>
                        <td style="text-align: center">
                            <input type="radio" id="rdbtnAssignPermanent" name="BenifitType" />Permanent
                            <span style="width:20px"></span>
                            <input type="radio" id="rdbtnAssingTemporary" name="BenifitType" />Temporary
                        </td>
                    </tr>
                    <tr id="region-temp-assign">
                        <td style=" text-align: center">
                            <input id="dtStartFrom" type="text" class="easyui-datebox" style="width: 105px;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            To <input id="dtEndTo" type="text" class="easyui-datebox" style="width: 105px;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                </table>
            </fieldset>

            <div style="width:100%;">
                <fieldset>
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                        <tr>
                            <td style="width:80%; text-align:right"></td>
                            <td style="width: 10%">
                                <a id="btnSaveAssignBenefits" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            </td>
                            <td style="width: 10%">
                                <a id="btnCloseAssignBenefits" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
    </div>

    <div id="winBOAStop" class=" easyui-window winclass" title="Edit BOA" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size: 11px; font-weight: bold">

                    <tr>
                        <td style="width: 20%; text-align: right">
                            <input type="radio" id="rdbtnPermanent" name="Permanent" />Permanent
                            <input id="dtInactive" type="date" class="easyui-datebox" style="width: 105px;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 20%; text-align: right">
                            <input type="radio" id="rdbtnTemporary" name="Temporary" />Temporary
                            <input id="dtStart" type="date" class="easyui-datebox" style="width: 105px;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            To <input id="dtEnd" type="date" class="easyui-datebox" style="width: 105px;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                </table>
            </fieldset>

            <div style="width:100%;">
                <fieldset>
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                        <tr>
                            <td style="width:80%; text-align:right"></td>
                            <td style="width: 10%">
                                <a id="btnSaveDisAllowBenefits" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Ok</a>
                            </td>
                            <td style="width: 10%">
                                <a id="btnCloseDisAllowBenefits" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
    </div>

    <div id="winTempDate" class=" easyui-window winclass" title="Temporary Assign" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset style="height:45px">
                <table border="0" cellspacing="2" cellpadding="2" style="width:350px; font-size: 11px; font-weight: bold">
                    <tr>
                        <td style=" text-align: center">
                            <input id="dtStartAssign" type="date" class="easyui-datebox" style="width: 105px;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            To <input id="dtEndAssign" type="date" class="easyui-datebox" style="width: 105px;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                </table>
            </fieldset>

            <div style="width:100%;">
                <fieldset>
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                        <tr>
                            <td style="width:80%; text-align:right"></td>
                            <td style="width: 10%">
                                <a id="btnSaveTemp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            </td>
                            <td style="width: 10%">
                                <a id="btnCloseTemp" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
    </div>

    <div id="winBOAESHistory" class=" easyui-window winclass" title="Benefits Stopped History" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset style="align-items:center">
                <a id="btnAddHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                <a id="btnEditHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
                <a id="btnDeleteHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
            </fieldset>
            <div id="tabHistory" class="easyui-tabs" style="width:355px;height:400px;">
                <div title="Assign History">
                    <table id="tblBOAEAssignHistory" class="easyui-datagrid" style="width:350px; height:365px" fitcolumns="false" rownumbers="true" pagination="fasle" singleselect="true" , autorowheight="false">
                        <thead>
                            <tr>
                                <th field="StartDateStr" width="45%" align="left">Start Date</th>
                                <th field="EndDateStr" width="45%" align="left">End Date</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div title="Stopped History">
                    <table id="tblBOAEStoppedHistory" class="easyui-datagrid" style="width:350px; height:365px" fitcolumns="false" rownumbers="true" pagination="fasle" singleselect="true" , autorowheight="false">
                        <thead>
                            <tr>
                                <th field="InactiveDateSt" width="30%" align="left">Issue Date</th>
                                <th field="StartDateSt" width="30%" align="left">Start Date</th>
                                <th field="EndDateSt" width="30%" align="left">End Date</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div style="width:100%;">
                <fieldset>
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                        <tr>
                            <td style="width:90%; text-align:right"></td>
                            <td style="width: 10%">
                                <a id="btnCloseHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
    </div>

    <div id="winAllBenefits" class=" easyui-window winclass" title="All Benefits" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <table id="tblAllBenefits" class="easyui-datagrid" style="width:350px; height:365px" fitcolumns="false" rownumbers="true" pagination="fasle" singleselect="true" , autorowheight="false">
                <thead>
                    <tr>
                        <th field="Name" width="60%" align="left">Benefit Name</th>
                        <th field="IsTemporaryAssignStr" width="35%" align="left">Benefit Type</th>
                    </tr>
                </thead>
            </table>
        </div>
        <div style="width:100%;">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:90%; text-align:right"></td>
                        <td style="width: 10%">
                            <a id="btnCloseAllBenefits" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Present Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Permanent Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>

                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            BU :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboBU" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    @*<tr>
                        <td class="td-AdvSearch-Level">
                            Block :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtBlock" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnBlock" class="pick-btn" type="button" value="P" />
                            <input id="btnResetBlock" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>*@
                    @*<tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" class="selection-search cboReset"></select>
                        </td>
                    </tr>*@
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" style="width:130px; float:left;"></select>
                            &nbsp; Group:
                            @*<select id="cboEmployeeGroup" style="width:130px; margin-right:10px;" class="cboReset"></select>*@
                            <input id="txtEmployeeGroup" style="width:90px;" type="text" />
                            <input id="btnEmployeeGroupPicker" class="pick-btn" type="button" value="P" style="width:20px;" />
                            <input id="btnEmployeeGroupReset" class="pick-btn" type="button" value="R" style="width:20px;" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Category:
                        </td>
                        <td class="td-AdvSearch-Level">
                            <div>
                                <select id="cboCategory" style="width:160px; float:left;"></select>
                                &nbsp; Gender :
                                <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    @*<tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift" class="selection-search cboReset"></select>
                        </td>
                    </tr>*@
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift" style="width:130px; float:left;"></select>
                            &nbsp; Block:
                            @*<select id="cboEmployeeGroup" style="width:130px; margin-right:10px;" class="cboReset"></select>*@
                            <input id="txtEmployeeBlock" style="width:90px;" type="text" />
                            <input id="btnEmployeeBlockPicker" class="pick-btn" type="button" value="P" style="width:20px;" />
                            <input id="btnEmployeeBlockReset" class="pick-btn" type="button" value="R" style="width:20px;" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 75px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                            <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                            <a id="btnEmployeeDatabaseXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true" onclick="PrintEmployeeDatabaseXL()"></a>
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" toolbar="#toolbar">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    @*<div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:175px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 65px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 45px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 50px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 45px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 50px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                            <input id="dtDateFrom" type="text" style="width: 128px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo" type="text" style="width: 128px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 425px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" toolbar="#toolbar">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>*@

    <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="locationtree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" >Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winDepartmentPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    @*<style type="text/css">
        .lblStar {
            color: #ff0000;
            font-weight: bold;
        }

        .tbl-AdvSearch {
            width: 100%;
            font-size: 11px;
            font-weight: bold;
            text-align: left;
            margin-left: 3px;
        }

        .td-AdvSearch-Level {
            text-align: right;
        }

        .td-AdvSearch-Input {
            text-align: left;
        }

        .txtfield-search {
            width: 305px;
            text-align: left;
            font-size: 11px;
        }

        .txtfield-picker {
            width: 259px;
            text-align: left;
            font-size: 11px;
        }

        .selection-search {
            width: 310px;
            text-align: left;
            font-size: 11px;
        }

        .pick-btn {
            width: 20px;
            text-align: center;
            font-size: 11px;
        }
    </style>*@
    <style type="text/css">
        .lblStar {
            color: #ff0000;
            font-weight: bold;
        }

        .tbl-AdvSearch {
            width: 100%;
            font-size: 11px;
            font-weight: bold;
            text-align: left;
            margin-left: 3px;
        }

        .td-AdvSearch-Level {
            text-align: right;
        }

        .td-AdvSearch-Input {
            text-align: left;
        }

        .txtfield-search {
            width: 312px;
            text-align: left;
            font-size: 11px;
        }

        .txtfield-picker {
            width: 265px;
            text-align: left;
            font-size: 11px;
        }

        .selection-search {
            width: 310px;
            text-align: left;
            font-size: 11px;
        }

        .pick-btn {
            width: 20px;
            text-align: center;
            font-size: 11px;
        }
    </style>
    <script type="text/javascript">
        var _oBenefitOnAttendanceEmployees=[];
        var _sBaseAddress="";
        var _nLastEmployeeID = 0;
        var _sEmployeeIDs = "";
        var _bNext = false;
        var _nLoadRecords = 0;
        var _nRowLength = 0;

        var _oEmployeeTypes=[];
        var _oShifts=[];
        var _oEmployeeCSs=[];
        var _oEmployeeWSs=[];
        var _oBusinessUnits=[];

        var _sAttendanceSchemeID="";
        var _sLocationID = "";
        var _sDepartmentID = "";
        var _sDesignationID = "";
        var _sBlockNames="";
        var _sBMMIDs="";
        var nPreviousCount = 0;

        
        var _sGroupNames = "";
        var _sGroupIDs = "";
        
        var _sBlockNames = "";
        var _sBlockIDs = "";

        $(document).ready(function () {
            _oBenefitOnAttendanceEmployees =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
            _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
            var oBenefitOnAttendances=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.BenefitOnAttendances));
            _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
            _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
            _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
            _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
            _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
            var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
            LoadCateGory(oEmployeeCategorys);

            InitializeAdvSearch();
            $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
            $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

            DynamicRefreshList(oBenefitOnAttendances,'tblBenefitOnAttendance');
            $('#lblTotalResult').data('TotalRecords',0);
            $('#btnBenifited').data('SearchVal','');
            PaginationResult();
        });

        function LoadCateGory(oEmployeeCategorys)
        {
            $("#cboCategory").icsLoadCombo({
                List: oEmployeeCategorys,
                OptionValue: "Value",
                DisplayText: "Text"
            });
        }

        $('#tblBenefitOnAttendance').datagrid({ onSelect: function (rowIndex, rowData) { OperationPerforms(rowIndex, rowData); } });

        //-----search employee

        $('#txtsearchByName').keypress(function (e) {
        
            debugger;
            var oEmps = $('#tblEmployee').datagrid('getRows');
            var sName=document.getElementById("txtsearchByName").value;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                debugger;
                //var c = String.fromCharCode(e.which);
                var txtSearchByName = document.getElementById('txtsearchByName').value.toUpperCase();
                if (txtSearchByName  == "")
                {
                    alert("Please enter name or code!");
                    return;
                }
                // txtSearchByName = txtSearchByName + c;

                var bFlag=false;
                var sTempName="";
                var sTempCode = "";
                var rows = $('#tblEmployee').datagrid('getRows');
                for(i=0;i<rows.length;++i)
                {
                    if((rows[i]['EmployeeName']).toUpperCase().indexOf(txtSearchByName)>=0 || (rows[i]['EmployeeCode']).toUpperCase().indexOf(txtSearchByName)>=0 )
                    {
                        bFlag=true;
                        break;
                    }
                }
                if(bFlag)
                {
                    $('#tblEmployee').datagrid('selectRow', i);
                }
                else
                {
                    GetByName(sName);
                }
            }
            $('#txtsearchByName').focus();
        });

        function GetByName(sName)
        {
            debugger;
            oEmp={EmployeeName:sName};
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/BenefitOnAttendance/SearchByNameOrCode",
                traditional: true,
                data: JSON.stringify(oEmp),
                contentType: "application/json; charset=utf-8",

                success: function(data)
                {
                    var oEmps=[];
                    oEmps = jQuery.parseJSON(data);
                    if (oEmps.length>0 && oEmps[0].ErrorMessage=="")
                    {
                        for(var i = 0; i < oEmps.length; i++){
                            $("#tblEmployee").datagrid("appendRow", oEmps[i]);
                        }
                        //DynamicRefreshList(oTPIs, "tblTPIs");
                    }
                    else
                    {
                        alert(oEmps[0].ErrorMessage);
                        oEmps=[];
                        DynamicRefreshList(oEmps, "tblEmployee");
                    }
                },
            });
        }

        $('#txtsearchByName').click(function (e)
        {
            document.getElementById("txtsearchByName").value="";
            $('#txtsearchByName').focus();
        });

        function ResetEmployeeGridData(){
            DynamicRefreshList([],'tblEmployee');
            $('#lblTotalResult').data('TotalRecords',0);
            PaginationResult();
        }

        function OperationPerforms(rowIndex, rowData){
            var oRows=$('#tblEmployee').datagrid('getRows');
            if(oRows.length>0){
                ResetEmployeeGridData();
            }
        }

        function PaginationResult(nTotalRecord){
            $('#lblShowResult').text($('#tblEmployee').datagrid('getRows').length);
            $('#lblTotalResult').text($('#lblTotalResult').data('TotalRecords'));
        }

        function EmployeeGridSelection(nType, bIsReset){
            if(nType==5){
                $('#btnHistory').hide();
                $('#tblEmployee').datagrid({
                    columns:[[
                        {field:'Selected',checkbox:true},
                        {field:'Name',title:'Employee Name', width:"25%"},
                        {field:'Code',title:'Code',width:"15%"},
                        {field:'DesignationName',title:'Designation',width:"25%"},
                        {field:'DepartmentName',title:'Department',width:"25%"}
                    ]]
                });
            }
            else{

                $('#btnHistory').show();
                $('#tblEmployee').datagrid({
                    columns:[[
                        {field:'Selected',checkbox:true},
                        {field:'EmployeeName',title:'Employee Name', width:"22%"},
                        {field:'EmployeeCode',title:'Code',width:"9%"},
                        {field:'DesignationName',title:'Designation',width:"14%"},
                        {field:'DepartmentName',title:'Department',width:"14%"},
                        {field:'IsTemporaryAssignStr',title:'Benefit Type',width:"11%"},
                        {field:'InactiveDateSt',title:'Inactive Date',width:"25%"}
                    ]]
                });
            }
            if(bIsReset)
                ResetEmployeeGridData();
        }

        $('#cboBOAEmployeeType').change(function(e){
            EmployeeGridSelection($('#cboBOAEmployeeType').val(),true);
        });

        function SeachBOATypeEmployee(nPreviousRecord, bIsPrevious){
            debugger
            var oBOA=$('#tblBenefitOnAttendance').datagrid('getSelected');
            var nStartSalaryRange=$('#txtStartSalaryRange').val();
            var nEndSalaryRange=$('#txtEndeSalaryRange').val();
            if(nStartSalaryRange==""){nStartSalaryRange=0;}
            if(nEndSalaryRange==""){nEndSalaryRange=0;}

            nStartSalaryRange= parseFloat(nStartSalaryRange);
            nEndSalaryRange= parseFloat(nEndSalaryRange);

            if($('#cboBOAEmployeeType').val()<=0){
                alert("Select a valid type");
                $('#cboBOAEmployeeType').focus();
                return false;
            }

            if(oBOA==null || oBOA.BOAID<=0){
                alert("Please select an item from benifits on attendance.");
                return false;
            }
            
            if(nStartSalaryRange>0 || nEndSalaryRange>0)
            {
                if(nStartSalaryRange>nEndSalaryRange)
                {
                    alert("Invalid Salary Range!");
                    return;
                }
                if(nStartSalaryRange>0 && nEndSalaryRange<=0)
                {
                    alert("Please enter End Salary Range!");
                    return;
                }
                if(nStartSalaryRange<=0 && nEndSalaryRange>0)
                {
                    alert("Please enter Start Salary Range!");
                    return;
                }
            }

            debugger;
            //console.log($('#btnBenifited').data('SearchVal'))
            
            if($('#btnBenifited').data('SearchVal')!=""){
                debugger;
                var sParams = $('#btnBenifited').data('SearchVal');                
                if(sParams.split('~')[0]!=$('#cboBOAEmployeeType').val() || sParams.split('~')[1] != oBOA.BOAID || sParams.split('~')[2] != $.trim($("#txtEmployee").val()) || $('#txtStartSalaryRange').val() != nStartSalaryRange || nEndSalaryRange!=$('#txtEndSalaryRange').val()){
                    DynamicRefreshList([],'tblEmployee');
                }
            }
            if(bIsPrevious){
                var oRows=$('#tblEmployee').datagrid('getRows');
                nPreviousRecord = (100>oRows.length)? oRows.length:100;
                for(var i=0; i<100;i++){
                    oRows.pop();
                }
                DynamicRefreshList(oRows,'tblEmployee');
                PaginationResult();
            }
            else{

                var oBenefitOnAttendance = {
                    Params: $('#cboBOAEmployeeType').val()+'~'+oBOA.BOAID+'~'+$.trim($("#txtEmployee").val())+'~'+nPreviousRecord+'~'+nStartSalaryRange+'~'+nEndSalaryRange
                };

                $('#btnBenifited').data('SearchVal',oBenefitOnAttendance.Params);

                var obj = {
                    BaseAddress: _sBaseAddress,
                    Object: oBenefitOnAttendance,
                    ControllerName: "BenefitOnAttendance",
                    ActionName: (($('#cboBOAEmployeeType').val()==5)?"GetNotBenifitedEmployees": "GetBOAEmpsByType"),
                    IsWinClose: false
                };

                $.icsDataGets(obj, function (response) {

                    if (response.status && response.objs.length > 0) {
                        if (response.objs[0].EmployeeID > 0) {
                            for(var i=0; i<response.objs.length;i++){
                                $('#tblEmployee').datagrid('appendRow',response.objs[i]);
                            }
                            $('#lblTotalResult').data('TotalRecords',parseInt(response.objs[0].Params));
                            PaginationResult();
                        }
                        else {
                            alert(response.objs[0].ErrorMessage);
                        }
                    }
                    else{
                        alert("No Employee Found.");
                    }
                });
            }


        }

        $('#btnBenifited').click(function(e){
            DynamicRefreshList([] ,'tblEmployee');
            SeachBOATypeEmployee(0, false)
        });

        $('#btnPrevious').click(function(e){
            SeachBOATypeEmployee($('#tblEmployee').datagrid('getRows').length, true);
        });

        $('#btnNext').click(function(e){
            
            if(parseInt($('#tblEmployee').datagrid('getRows').length)==parseInt($('#lblTotalResult').data('TotalRecords'))){
                alert("No more records found.");
                return false;
            }
            nPreviousCount += $('#tblEmployee').datagrid('getRows').length;
            //SeachBOATypeEmployee($('#tblEmployee').datagrid('getRows').length, false);
            SeachBOATypeEmployee(nPreviousCount, false);
        });

        $("#txtEmployee").keydown(function (e) {
            var nkeyCode = e.keyCode || e.which;
            if(nkeyCode==13){
                var sName=$.trim($("#txtEmployee").val());
                if(sName.length<=0)
                {
                    alert("Please Type Employee Name or Code");
                    return;
                }
                $('#cboBOAEmployeeType').val(0);
                var oBOA=$('#tblBenefitOnAttendance').datagrid('getSelected');
                if(oBOA==null || oBOA.BOAID<=0){
                    alert("Please select an item from benifits on attendance.");
                    return false;
                }
                var oBOAEmployee={
                    Params: $('#tblBenefitOnAttendance').datagrid('getSelected').BOAID +'~'+ sName +'~'+ ''
                }

                var obj = {
                    BaseAddress: _sBaseAddress,
                    Object: oBOAEmployee,
                    ControllerName: "BenefitOnAttendance",
                    ActionName: "GetsEmployeeWithBenefitOrNot",
                    IsWinClose: false
                };

                $.icsDataGets(obj, function (response) {

                    if (response.status && response.objs.length>0) {
                        if (response.objs[0].EmployeeID > 0) {
                            debugger;
                            var tblColums = [];
                            var oColumn = { field: "EmployeeName", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                            oColumn = { field: "EmployeeCode", title: "Code", width: 60, align: "left" };tblColums.push(oColumn);
                            oColumn = { field: "DepartmentName", title: "Department", width: 120, align: "left" };tblColums.push(oColumn);
                            oColumn = { field: "DesignationName", title: "Designation", width: 120, align: "left" };tblColums.push(oColumn);
                            oColumn = { field: "IsTemporaryAssignStr", title: "Benefit Type", width: 80, align: "left" };tblColums.push(oColumn);

                            var oPickerParam = {
                                winid: 'winEmployeeSearchPicker',
                                winclass:'clsEmployeeSearchPicker',
                                winwidth: 635,
                                winheight: 460,
                                tableid: 'tblEmployeeSearchPicker',
                                tablecolumns: tblColums,
                                datalist: response.objs,
                                multiplereturn: true,
                                searchingbyfieldName:'EmployeeName',
                                windowTittle: 'Employee List'
                            };
                            $.icsPicker(oPickerParam);
                            IntializeEmployeeSearchPicker(oPickerParam);//multiplereturn, winclassName

                        }
                        else { alert(response.objs[0].ErrorMessage); }

                    }
                    else{
                        alert("No employee found by this criteria.");
                    }
                });
                
            }
        });

        function IntializeEmployeeSearchPicker(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {

                debugger;
                var oEmployees = $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winEmployeeSearchPicker')
                {
                    if(oEmployees!=null && oEmployees.length>0 && oEmployees[0].EmployeeID>0 ){

                        EmployeeGridSelection($('#cboBOAEmployeeType').val(),false);
                        debugger;
                        for(var i=0; i<oEmployees.length;i++){
                            $('#tblEmployee').datagrid('appendRow',oEmployees[i]);
                        }
                        $('#lblTotalResult').data('TotalRecords',$('#tblEmployee').datagrid('getRows').length);
                        PaginationResult();

                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                    }
                    else{
                        alert("Select at least one employee.");
                    }
                }
            });
        }
 
        $('#rdbtnAssignPermanent').change(function(e){

            if($('#rdbtnAssignPermanent').is(':checked')){
                $('#region-temp-assign').hide();
            }
            else{
                $('#region-temp-assign').show();
            }
        });

        $('#rdbtnAssingTemporary').change(function(e){

            if($('#rdbtnAssingTemporary').is(':checked')){
                $('#region-temp-assign').show();
            }
            else{
                $('#region-temp-assign').hide();
            }

        });

        $('#btnAssignBenifits').click(function(e){

            var oRows = $('#tblEmployee').datagrid('getChecked');
            if(oRows.length<=0){
                alert("Select employee to assign benifits.");
                return false;
            }

            var oBOA=$('#tblBenefitOnAttendance').datagrid('getSelected');

            if(oBOA==null || oBOA.BOAID<=0){
                alert("Select benefits.");
                return false;
            }

            $('#dtStartFrom, #dtEndTo').datebox('setValue',icsdateformat(new Date()));
            $("#rdbtnAssignPermanent").prop('checked', true);
            $("#rdbtnAssingTemporary").prop('checked', false);
            $('#region-temp-assign').hide();

            $("#winAssignBenifits").icsWindow('open');

        });

        $('#btnSaveAssignBenefits').click(function(e){
            var oRows = $('#tblEmployee').datagrid('getChecked');
            var oBOA=$('#tblBenefitOnAttendance').datagrid('getSelected');
            var sIDs="";
            for(var i=0; i<oRows.length;i++){
                sIDs= sIDs+ oRows[i].EmployeeID+","
            }
            sIDs=sIDs.substring(0,sIDs.length-1);

            debugger;
            if($('#rdbtnAssingTemporary').is(':checked'))
            {
                if(new Date($('#dtStartFrom').datebox('getValue'))>new Date($('#dtEndTo').datebox('getValue'))){
                    alert("End date must be later than start date");
                    return;
                }
            }

            var oBenefitOnAttendance = {
                BOAID: oBOA.BOAID,
                Params: sIDs +'~'+$('#rdbtnAssingTemporary').is(':checked')+'~'+ $('#dtStartFrom').datebox('getValue') +'~'+$('#dtEndTo').datebox('getValue')
            };

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBenefitOnAttendance,
                ObjectId:"BOAEmployeeID",
                ControllerName: "BenefitOnAttendance",
                ActionName: "MultiAssign",
                TableId:"",
                IsWinClose: false,
                Message: ""
            };

            $.icsSave(obj, function (response) {

                debugger;
                if (response.status && response.obj!=null) {
                    if (response.obj.BOAEmployeeID > 0) {
                        alert("Benefit assign successfully.");
                        $("#winAssignBenifits").icsWindow('close');

                        for(var i=0;i<oRows.length;i++){
                            var nIndex = $("#tblEmployee").datagrid("getRowIndex", oRows[i]);
                            $("#tblEmployee").datagrid("deleteRow", nIndex);
                        }
                        var nRecords = parseInt($('#lblTotalResult').data('TotalRecords')) - parseInt(oRows.length);
                        $('#lblTotalResult').data('TotalRecords',parseInt(nRecords));
                        PaginationResult();
                    }
                }
                else{
                    alert("Unable to assign benefits.");
                }
            });
        });

        $("#btnCloseAssignBenefits").click(function () {
            $("#winAssignBenifits").icsWindow('close');
        });

        $("#btnStopBenifits").click(function () {

            var oRows = $('#tblEmployee').datagrid('getChecked');
            if(oRows.length<=0){
                alert("Select employee to dis allow benifits.");
                return false;
            }

            var oBOA=$('#tblBenefitOnAttendance').datagrid('getSelected');

            if(oBOA==null || oBOA.BOAID<=0){
                alert("Select benefits.");
                return false;
            }

            $('#dtInactive, #dtStart, #dtEnd').datebox('setValue',icsdateformat(new Date()))
            $("#rdbtnPermanent").prop('checked', true);
            $("#rdbtnTemporary").prop('checked', false);


            $("#winBOAStop").icsWindow('open', "Benefit On Attendance Employee Stopped");

        });

        $('#btnSaveDisAllowBenefits').click(function(e){

            debugger;
            var oRows = $('#tblEmployee').datagrid('getChecked');
            var oBOA=$('#tblBenefitOnAttendance').datagrid('getSelected');
            var sIDs="";
            for(var i=0; i<oRows.length;i++){
                sIDs= sIDs+ oRows[i].EmployeeID+","
            }
            sIDs=sIDs.substring(0,sIDs.length-1);

            if(!$('#rdbtnPermanent').is(':checked'))
            {
                if(new Date($('#dtStart').datebox('getValue'))>new Date($('#dtEnd').datebox('getValue'))){
                    alert("End date must be later than start date");
                    return;
                }
            }

            var oBOAEStopped = {
                BOAID : oBOA.BOAID,
                StartDate :  $('#dtStart').datebox('getValue'),
                EndDate : $('#dtEnd').datebox('getValue'),
                InactiveDate : $('#dtInactive').datebox('getValue'),
                IsPermanent : $('#rdbtnPermanent').is(':checked'),
                Params: sIDs
            };

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBOAEStopped,
                ObjectId:"BOAEmployeeID",
                ControllerName: "BenefitOnAttendance",
                ActionName: "MultiStopped",
                TableId:"",
                IsWinClose: false,
                Message: ""
            };

            $.icsSave(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.BOAEmployeeID > 0) {
                        alert("Benefit disallow successfully.");
                        $("#winBOAStop").icsWindow('close');
                        for(var i=0;i<oRows.length;i++){
                            var nIndex = $("#tblEmployee").datagrid("getRowIndex", oRows[i]);
                            $("#tblEmployee").datagrid("deleteRow", nIndex);
                        }
                        var nRecords = parseInt($('#lblTotalResult').data('TotalRecords')) - parseInt(oRows.length);
                        $('#lblTotalResult').data('TotalRecords',parseInt(nRecords));
                        PaginationResult();
                    }
                }
                else{
                    alert("Unable to disallow benefits.");
                }
            });
        });


        $("#btnCloseDisAllowBenefits").click(function () {
            $("#winBOAStop").icsWindow('close');
        });

        $('#rdbtnPermanent').click(function(e){
            $("#rdbtnPermanent").prop('checked', true);
            $("#rdbtnTemporary").prop('checked', false);
        });

        $('#rdbtnTemporary').click(function(e){
            $("#rdbtnTemporary").prop('checked', true);
            $("#rdbtnPermanent").prop('checked', false);
        });

        $("#btnHistory").click(function () {

            var oBOAEmployees = $('#tblEmployee').datagrid('getChecked');
            if(oBOAEmployees.length<=0){
                alert("Select one item from benefited employee.");
                return false;
            }

            if(oBOAEmployees.length>1){
                alert("Select at most one item from benefited employee.");
                return false;
            }

            if(oBOAEmployees[0].BOAEmployeeID==undefined){
                alert("Select only benifited type employee.")
                return false;
            }


            var oBOAEmployee = {
                BOAEmployeeID: oBOAEmployees[0].BOAEmployeeID
            };

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBOAEmployee,
                ControllerName: "BenefitOnAttendance",
                ActionName: "GetsBOAStoppedHistory",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {

                if (response.status) {
                    debugger;
                    $("#winTempDate").data('BOAEmployeeID',oBOAEmployees[0].BOAEmployeeID);
                    $("#winTempDate").data('IsTempAssign',oBOAEmployees[0].IsTemporaryAssign);

                    $("#winBOAESHistory").icsWindow('open', "History");
                    DynamicRefreshList(response.obj.TempAssignHistorys, 'tblBOAEAssignHistory');
                    DynamicRefreshList(response.obj.TempStopHistorys, 'tblBOAEStoppedHistory');
                }
            });
        });

        $("#btnCloseHistory").click(function () {
            $("#winBOAESHistory").icsWindow('close');
        });

        function GenerateObject(index, oBOAEH)
        {
            debugger;
            var obj;
            if(index==0) // BOAEAssign
            {
                obj={
                    BOAEAID : oBOAEH.BOAEAID,
                    BOAEmployeeID : oBOAEH.BOAEmployeeID,
                    StartDate:oBOAEH.StartDateStr,
                    EndDate:oBOAEH.EndDateStr
                }
            }
            if(index==1) // BOAEStop
            {
                obj={
                    BOAESID : oBOAEH.BOAESID,
                    BOAEmployeeID : oBOAEH.BOAEmployeeID,
                    StartDate:oBOAEH.StartDateSt,
                    EndDate:oBOAEH.EndDateSt
                }
            }
            return obj;
        }

        function RefreshObject()
        {
            var obj;
            if(parseInt($("#winTempDate").data('index'))==0)
            {
                obj={
                    BOAEAID : parseInt($("#winTempDate").data('id')),
                    BOAEmployeeID : parseInt($("#winTempDate").data('BOAEmployeeID')),
                    StartDate:$('#dtStartAssign').datebox('getValue'),
                    EndDate:$('#dtEndAssign').datebox('getValue')
                }
            }
            else
            {
                obj={
                    BOAESID : parseInt($("#winTempDate").data('id')),
                    BOAEmployeeID : parseInt($("#winTempDate").data('BOAEmployeeID')),
                    StartDate : $('#dtStartAssign').datebox('getValue'),
                    EndDate:$('#dtEndAssign').datebox('getValue')
                }
            }

            return obj;
        }

        $("#btnAddHistory").click(function () {
            var index = $('#tabHistory').tabs('getTabIndex',$('#tabHistory').tabs('getSelected'));
            if(!($("#winTempDate").data('IsTempAssign')) && index==0){
                alert("Unable to add temp benifits. Currently this employee enjoying parmanent benefits.");
                return;
            }
           
            $("#winTempDate").data('index',index);
            $("#winTempDate").data('id',0);
            $('#dtStartAssign, #dtEndAssign').datebox('setValue',icsdateformat(new Date()));
            $("#winTempDate").icsWindow('open',((index==0)?"Add Temporary Benefits":"Stop Benefits Temporary"));
        });

        $("#btnEditHistory").click(function () {
            var index = $('#tabHistory').tabs('getTabIndex',$('#tabHistory').tabs('getSelected'));
            var oRow = $("#"+((index==0)?"tblBOAEAssignHistory":"tblBOAEStoppedHistory")).datagrid("getSelected");
            if(oRow==null){
                alert("Select an item from list.");
                return false;
            }
            if(new Date(icsdateformat(new Date()))>new Date(oRow.EndDateStr)){
                alert("Unable to update.");
                return false;
            }

            $("#winTempDate").icsWindow('open',((index==0)?"Edit Temporary Benefits":"Edit Benefits Temporary"));

            $("#winTempDate").data('index',index);
            if(index==0){
                $("#winTempDate").data('id',oRow.BOAEAID);
                $('#dtStartAssign').datebox('setValue',oRow.StartDateStr);
                $('#dtEndAssign').datebox('setValue',oRow.EndDateStr);
            }
            else{
                $("#winTempDate").data('id',oRow.BOAESID);
                $('#dtStartAssign').datebox('setValue',oRow.StartDateSt);
                $('#dtEndAssign').datebox('setValue',oRow.EndDateSt);
            }
        });

        $("#btnDeleteHistory").click(function () {
            var index = $('#tabHistory').tabs('getTabIndex',$('#tabHistory').tabs('getSelected'));
            var oRow = $("#"+((index==0)?"tblBOAEAssignHistory":"tblBOAEStoppedHistory")).datagrid("getSelected");
            if(oRow==null){
                alert("Select an item from list.");
                return false;
            }

            if(new Date(icsdateformat(new Date()))>new Date(oRow.StartDateStr)){
                alert("Unable to delete.");
                return false;
            }

            if(!confirm("Are you sure to delete")) return false;

            var oTempObj=GenerateObject(index,oRow);

            var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oTempObj,
                ControllerName: "BenefitOnAttendance",
                ActionName: (index==0)?"DeleteTempAssignBenefit":"Delete_BOAEStopped",
                TableId: (index==0)?"tblBOAEAssignHistory":"tblBOAEStoppedHistory",
                IsWinClose: false
            };
            $.icsDelete(obj);

        });

        $("#btnSaveTemp").click(function () {

            if(new Date($('#dtStartAssign').datebox('getValue'))>new Date($('#dtEndAssign').datebox('getValue'))){
                alert("End date must be later than start date");
                return;
            }

            debugger;
            var objTemp=RefreshObject();

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: objTemp,
                ObjectId:((parseInt($("#winTempDate").data('index'))==0)?objTemp.BOAEAID:objTemp.BOAESID),
                ControllerName: "BenefitOnAttendance",
                ActionName: ((parseInt($("#winTempDate").data('index'))==0)?"SaveTempAssignBenefit":"Save_BOAEStopped"),
                TableId:((parseInt($("#winTempDate").data('index'))==0)?"tblBOAEAssignHistory":"tblBOAEStoppedHistory"),
                IsWinClose: false,
                Message: ""
            };

            $.icsSave(obj, function (response) {

                if (response.status && response.obj!=null) {
                    debugger;
                    if(parseInt($("#winTempDate").data('index'))==0){
                        if(response.obj.BOAEAID>0){
                            $("#winTempDate").icsWindow('close');
                        }
                    }
                    if(parseInt($("#winTempDate").data('index'))==1){
                        if(response.obj.BOAESID>0){
                            $("#winTempDate").icsWindow('close');
                        }
                    }
                }
            });


        });

        $("#btnCloseTemp").click(function () {
            $("#winTempDate").icsWindow('close');
        });

        $("#btnAllBenefits").click(function () {

            var oBOAEmployees = $('#tblEmployee').datagrid('getChecked');
            if(oBOAEmployees.length<=0){
                alert("Select one item from benefited employee.");
                return false;
            }

            if(oBOAEmployees.length>1){
                alert("Select at most one item from benefited employee.");
                return false;
            }

            if(oBOAEmployees[0].BOAEmployeeID==undefined){
                alert("Select only benifited type employee.")
                return false;
            }


            var oBOAEmployee = {
                EmployeeID: oBOAEmployees[0].EmployeeID
            };

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBOAEmployee,
                ControllerName: "BenefitOnAttendance",
                ActionName: "GetsAllBenefitsofEmployee",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length>0) {
                    $("#winAllBenefits").icsWindow('open', "All Benefits");
                    DynamicRefreshList(response.objs, 'tblAllBenefits');
                }
            });
        });

        $("#btnCloseAllBenefits").click(function () {
            $("#winAllBenefits").icsWindow('close');
        });


        /*---------------- Adv Search----------------*/

        function InitializeAdvSearch(){
            $("#cboEmployeeType").icsLoadCombo({
                List: _oEmployeeTypes,
                OptionValue: "EmployeeTypeID",
                DisplayText: "Name"
            });
            $("#cboShift").icsLoadCombo({
                List: _oShifts,
                OptionValue: "ShiftID",
                DisplayText: "ShiftWithDuration"
            });
            $("#cboEmployeeCardStatus").icsLoadCombo({
                List: _oEmployeeCSs,
                OptionValue: "Value",
                DisplayText: "Text"
            });
            $("#cboEmployeeWorkigStatus").icsLoadCombo({
                List: _oEmployeeWSs,
                OptionValue: "Value",
                DisplayText: "Text"
            });
            $("#cboBU").icsLoadCombo({
                List: _oBusinessUnits,
                OptionValue: "BusinessUnitID",
                DisplayText: "Name"
            });

            $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
            $('#txtFrom').numberbox('setValue',1);
            $('#txtTo').numberbox('setValue',50);
            $("#lblRange1").hide();

            var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                         {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                         {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

            $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
                List: oMonths,
                OptionValue: "MonthID",
                DisplayText: "Name",
                InitialValue:''
            });

            LoadDaysInMonth();
           
        }

        function LoadDaysInMonth(){
            $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
            var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

            var oDays=[];
            for(var i=1;i<=nDaysInMonth;i++){
                oDays.push({DayID:i,Day:i});
            }
            $("#cboDayFrom,#cboDayTo").icsLoadCombo({
                List: oDays,
                OptionValue: "DayID",
                DisplayText: "Day",
                InitialValue:''
            });
        }

        $("#cboDateType").change(function(e){
            if($("#cboDateType").val()==1){
                $("#regionDateTo").hide();
            }
            else{
                $("#regionDateTo").show();
            }
        });

        $("#cboMonthFrom").change(function(e){
            var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
            var oDays=[];
            for(var i=1;i<=nDaysInMonth;i++){
                oDays.push({DayID:i,Day:i});
            }
            $("#cboDayFrom").icsLoadCombo({
                List: oDays,
                OptionValue: "DayID",
                DisplayText: "Day",
                InitialValue:''
            });
        });

        $("#cboMonthTo").change(function(e){
            var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
            var oDays=[];
            for(var i=1;i<=nDaysInMonth;i++){
                oDays.push({DayID:i,Day:i});
            }
            $("#cboDayTo").icsLoadCombo({
                List: oDays,
                OptionValue: "DayID",
                DisplayText: "Day",
                InitialValue:''
            });
        });

        function EmployeePickerReset(){
            _nLastEmployeeID = 0;
            _sEmployeeIDs = "";
            _bNext = false;
            _nLoadRecords = 0;
            _nRowLength = 0;
            _sAttendanceSchemeID="";
            _sLocationID = "";
            _sDepartmentID = "";
            _sDesignationID = "";
            $(".txtReset").val("");
            $(".cboReset").val(0);
            $(".chkReset").prop("checked",false);

            $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
            LoadDaysInMonth();
            $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
            $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

            DynamicRefreshList([], "tblEmployeesForPicker");
            $("#lblcount").html("");
            $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
            $('#txtFrom').numberbox('setValue',1);
            $('#txtTo').numberbox('setValue',50);
            $("#lblRange1").hide();
        
            $('#txtEmployeeGroup').val("");
            $('#txtEmployeeBlock').val("");
        }

        $("#btnAdvSearch").click(function () {
            $('#cboBOAEmployeeType').val(0);
            var oBOA=$('#tblBenefitOnAttendance').datagrid('getSelected');
            if(oBOA==null || oBOA.BOAID<=0){
                alert("Please select an item from benifits on attendance.");
                return false;
            }
            EmployeePickerReset();
            $("#winEmployeePicker").icsWindow("open", " Employee Picker");
        });

        $('#chkRange').click(function()
        {
            if(document.getElementById("chkRange").checked == true)
            {
                document.getElementById("lblRange1").style.display = '';
            }
            else
            {
                document.getElementById("lblRange1").style.display = 'none';
            }
        });

        $('#btnEmpPickerSearch').click(function () {
            _bNext = false;
            AdvSearch();
        });

        function Next() {
            var oEmployees = [];
            oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
            if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
            _nRowLength = oEmployees.length;
            _bNext = true;
            AdvSearch();
        }

        function AdvSearch(){
            if (!_bNext) {
                _nRowLength = 0;
                _nLastEmployeeID = 0;
            }
            _nLoadRecords = document.getElementById("txtTo").value;

            if ($("#chkRange").is(':checked')) {
                if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
                var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
                var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
                if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
                _nRowLength = nRangeFrom - 1;
                _nLoadRecords = nRangeTo - nRangeFrom + 1;
            }


            var sName = $.trim($("#txtEmployeeName").val());
            var sCode = $.trim($("#txtEmpCodeForSearch").val());
            var sEnrollNo = $.trim($("#txtEnrollNo").val());
            var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
            var nEmployeeTypeID=$("#cboEmployeeType").val();
            var nShiftID=$("#cboShift").val();
            var nCardStatus=$("#cboEmployeeCardStatus").val();
            var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
            var nDateType=$("#cboDateType").val();
            var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
            var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
            var sGender="None";

            var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
            var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
            var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

            var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
            var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

            var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
            var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

            var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
            var dtDateFrom = $('#dtDateFrom').datebox('getValue');
            var dtDateTo = $('#dtDateTo').datebox('getValue');
            if(bIsJoiningDate)
            {
                if(new Date(dtDateFrom)>new Date(dtDateTo))
                {
                    alert("Invalid Joining Date Range!");
                    return;
                }
            }

            var nBusinessUnitID = $("#cboBU").val();
            var nCategory=$('#cboCategory').val();

            var sPresentAddress=$('#txtPresentAddress').val();
            var sPermanentAddress=$('#txtPermanentAddress').val();

            if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentID=="" && _sDesignationID=="" &&
               nEmployeeTypeID==0 && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
               bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 && !bIsJoiningDate 
                && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress==""  && _sBlockIDs=="" && _sGroupIDs=="")
            {
                alert("Please enter you selection criteria."); return false;
            }

            var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentID + '~' +_sDesignationID + '~' +
                         sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                         bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                         sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                          +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBlockIDs + '~' + _sGroupIDs;

            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/Employee/EmployeeSearch",
                traditional: true,
                data: JSON.stringify({ sParam: sParam }),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oEmps = jQuery.parseJSON(data);
                    debugger;
                    if (oEmps != null) {
                        if (oEmps.length > 0) {
                            if(!_bNext){
                                var oTEmps1=$('#tblEmployeesForPicker').datagrid('getRows');
                                if(oTEmps1.length>0){ oEmps = oTEmps1.concat(oEmps);}
                                DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                            }
                            else{
                                var bAppend=false;
                                var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                                if(oTEmps.length>0){
                                    debugger;
                                    for (var i = 0; i < oEmps.length; i++) {
                                        var IsAppend=true;
                                        for (var j = 0; j < oTEmps.length; j++) {

                                            if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                                IsAppend=false;
                                                break;
                                            }
                                        }
                                        if(IsAppend){
                                            bAppend=true;
                                            $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                        }
                                    }
                                }
                                else{
                                    for (var j = 0; j < oEmps.length; j++) {
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                    }
                                }
                                if(!bAppend){
                                    alert("No more data found!");
                                }
                            }

                        }
                        else {
                            alert("No more data found!");
                        }
                        var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                        document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                        _bNext = false;
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }

        $("#btnEmployeePickerOk").click(function () {
            var oEmployees = [];
            oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
            if (oEmployees.length <= 0) { alert("please select atleast one item");return; }

            var sEmpIDs="";

            for(var i=0; i<oEmployees.length;i++){
                sEmpIDs+=oEmployees[i].EmployeeID+",";
            }
            sEmpIDs=sEmpIDs.substring(0, sEmpIDs.length-1);

            var oBOAEmployee={
                Params: $('#tblBenefitOnAttendance').datagrid('getSelected').BOAID +'~'+ "" +'~'+ sEmpIDs
            }

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBOAEmployee,
                ControllerName: "BenefitOnAttendance",
                ActionName: "GetsEmployeeWithBenefitOrNot",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length>0) {
               
                    EmployeeGridSelection($('#cboBOAEmployeeType').val(),true);
                    debugger;
                    for(var i=0; i<response.objs.length;i++){
                        $('#tblEmployee').datagrid('appendRow',response.objs[i]);
                    }
                    $('#lblTotalResult').data('TotalRecords',$('#tblEmployee').datagrid('getRows').length);
                    PaginationResult();
                    $("#winEmployeePicker").icsWindow('close');
                }
            });
            
        });

        $("#btnEmployeePickerClose").click(function () {
            $("#winEmployeePicker").icsWindow('close');
        });

        /*-------------Attendance Schema Picker----------------*/
        $("#btnAttScheme").click(function(e){
            var oAttendanceScheme={Params:" "+"~"+0+"~"+0};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oAttendanceScheme,
                ControllerName: "AttendanceScheme",
                ActionName: "GetsAttendanceScheme",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].AttendanceSchemeID > 0) {
                        debugger;
                        var tblColums = [];
                        var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winAttendanceScheme',
                            winclass:'clsAttendanceScheme',
                            winwidth: 420,
                            winheight: 460,
                            tableid: 'tblAttendanceSchemePicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Attendance Scheme List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        });

        function IntializeAttendancePickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {

                var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if (oPickerobj.winid == 'winAttendanceScheme')
                {
                    if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                        $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                        _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                    }
                    else{
                        alert("Please select a schema.");
                    }
                }
            });
        }

        $("#btnResetAttScheme").click(function(e){
            $('#txtAttendanceScheme').val("");
            _sAttendanceSchemeID="";
        });

        /*-------------Location Picker----------------*/

        $("#btnLocationPicker").click(function(e){
            var nBusinessUnitID = $("#cboBU").val();
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0,BusinessUnitID:nBusinessUnitID};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        });

        $("#btnLocationPickerOk").click(function(e){
            var oLocation = $('#locationtree').tree('getSelected');
            if(oLocation!=null && oLocation.id>0){
                $("#winLocationPicker").icsWindow('close');
                $('#txtLocation').val(oLocation.text);
                _sLocationID= oLocation.id;
            }
            else{
                alert("Please select a location.");
            }
        });

        $("#btnLocationPickerClose").click(function(e){
            $("#winLocationPicker").icsWindow('close');
        });

        $("#btnResetLocationPicker").click(function(e){
            $('#txtLocation').val("");
            _sLocationID="";
        });
        /*-------------Department Picker----------------*/

        $("#btnDepartmentPicker").click(function(e){
            $("#winDepartmentPicker").icsWindow('open');
            var oDepartment={DepartmentID:0,BusinessUnitIDs:$('#cboBU').val(),LocationIDs:_sLocationID};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oDepartment,
                ControllerName: "Department",
                ActionName: "GetsDepartments",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.id > 0) {
                        $('#departmenttree').tree({ data: [response.obj] });
                    }
                }
            });
        });

        $("#btnDepartmentPickerOk").click(function(e){

            var oDepartment = $('#departmenttree').tree('getSelected');
            if(oDepartment!=null && oDepartment.id>0){
                $("#winDepartmentPicker").icsWindow('close');
                $('#txtDepartment').val(oDepartment.text);
                _sDepartmentID= oDepartment.id;
            }
            else{
                alert("Please select a department.");
            }
        });

        $("#btnDepartmentPickerClose").click(function(e){
            $("#winDepartmentPicker").icsWindow('close');
        });

        $("#btnResetDepartmentPicker").click(function(e){
            $('#txtDepartment').val("");
            _sDepartmentID="";
        });

        /*------------- Start Block Picker----------------*/
   
        $("#btnBlock").click(function(e){
            BlockPicker();
        });

        function BlockPicker()
        {
            var oBlockMachineMapping={
                ProductionProcessInt:0,
                DepartmentID:0,
                BlockName:""
            }
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBlockMachineMapping,
                ControllerName: "BlockMachineMapping",
                ActionName: "BlockMachineMapping_Search",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
        
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].BMMID > 0) {
                        var tblColums = [];
                        var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
                        var bmultiplereturn=true;

                        var oPickerParam = {
                            winid: 'winBlock',
                            winclass:'clsBlock',
                            winwidth: 320,
                            winheight: 460,
                            tableid: 'tblShift',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: bmultiplereturn,
                            searchingbyfieldName:'BlockName',
                            windowTittle: 'Block List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeBlockPickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                var oBlocks=[];
                oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winBlock')
                {
                    if(oBlocks!=null && oBlocks.length>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();

                        for(var i=0; i<oBlocks.length; i++)
                        {
                            _sBlockNames += oBlocks[i].BlockName+",";
                            _sBMMIDs += oBlocks[i].BMMID+",";
                    
                        }
                        _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                        _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
                        $("#txtBlock").val(_sBlockNames);
                    }
                    else
                    {
                        alert("Please select a designation.");
                    }
                }
            });
        }

        $("#btnResetBlock").click(function(e){
            $('#txtBlock').val("");
            _sBlockNames="";
            _sBMMIDs = "";
        });

        $("#txtBlock").keypress(function(e){
            if (e.which == 13)
            {
                BlockPicker();
            }
        });
        /*------------- End Block Picker----------------*/

        /*-------------Designation Picker----------------*/

        $("#btnDesignationPicker").click(function(e){
            var oDesignation={
                DesignationID:0,
                Params: $('#cboBU').val()+'~'+_sLocationID+'~'+ _sDepartmentID
            };
          
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oDesignation,
                ControllerName: "Designation",
                ActionName: "Gets",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].DesignationID > 0) {
                        debugger;
                        var tblColums = [];
                        var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winDesignation',
                            winclass:'clsDesignation',
                            winwidth: 320,
                            winheight: 460,
                            tableid: 'tblDesignation',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Designation List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        });

        function IntializeDesignationPickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {

                var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if (oPickerobj.winid == 'winDesignation')
                {
                    if(oDesignation!=null && oDesignation.DesignationID>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                        $('#txtDesignation').val(oDesignation.Name);
                        _sDesignationID=oDesignation.DesignationID;
                    }
                    else{
                        alert("Please select a designation.");
                    }
                }
            });
        }

        $("#btnResetDesignationPicker").click(function(e){
            $('#txtDesignation').val("");
            _sDesignationID="";
        });

        /*--------------------------------------------*/
        $('#btnPrintExcel').click(function (e)
        {
            var oBOA=$('#tblBenefitOnAttendance').datagrid('getSelected');
            var nStartSalaryRange=$('#txtStartSalaryRange').val();
            var nEndSalaryRange=$('#txtEndeSalaryRange').val();
            if(nStartSalaryRange==""){nStartSalaryRange=0;}
            if(nEndSalaryRange==""){nEndSalaryRange=0;}

            nStartSalaryRange= parseFloat(nStartSalaryRange);
            nEndSalaryRange= parseFloat(nEndSalaryRange);

            if($('#cboBOAEmployeeType').val()<=0){
                alert("Select a valid type");
                $('#cboBOAEmployeeType').focus();
                return false;
            }

            if(oBOA==null || oBOA.BOAID<=0){
                alert("Please select an item from benifits on attendance.");
                return false;
            }
            
            if(nStartSalaryRange>0 || nEndSalaryRange>0)
            {
                if(nStartSalaryRange>nEndSalaryRange)
                {
                    alert("Invalid Salary Range!");
                    return;
                }
                if(nStartSalaryRange>0 && nEndSalaryRange<=0)
                {
                    alert("Please enter End Salary Range!");
                    return;
                }
                if(nStartSalaryRange<=0 && nEndSalaryRange>0)
                {
                    alert("Please enter Start Salary Range!");
                    return;
                }
            }

            var tsv=((new Date()).getTime())/1000;
            var ActionName = (($('#cboBOAEmployeeType').val()==5)?"GetNotBenifitedEmployeesExcel": "GetBOAEmpsByTypeExcel");
            var sParam = $('#cboBOAEmployeeType').val()+'~'+oBOA.BOAID+'~'+$.trim($("#txtEmployee").val())+'~'+nStartSalaryRange+'~'+nEndSalaryRange;
            window.open(_sBaseAddress+ "/BenefitOnAttendance/"+ActionName+"?sParam="+sParam,"_blank");
        });
        /*------------EmployeeGroup--------------*/

        $("#btnEmployeeGroupReset").click(function(e){
            $("#txtEmployeeGroup").val("");
            _sGroupNames = "";
            _sGroupIDs = "";
        });

        $('#txtEmployeeGroup').keydown(function (e) {

            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                var txtSearchByGroup = $("#txtEmployeeGroup").val();
                var sTempName = "";
                SearchEmployeeGroup(txtSearchByGroup);
                $("#txtEmployeeGroup").val('');
            }
        });


        $("#btnEmployeeGroupPicker").click(function(e){
            SearchEmployeeGroup("");
        });
        function SearchEmployeeGroup(name) {
            $("#txtEmployeeGroup").val("");
            _sGroupNames = "";
            _sGroupIDs = "";
            var oGroup={
                Name : name
            };
            debugger
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oGroup,
                ControllerName: "Employee",
                ActionName: "GetsEmployeeGroupAdvSrc",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].EmployeeTypeID > 0) {
                        debugger;
                        var tblColums = [];
                        var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winGroup',
                            winclass:'clsGroup',
                            winwidth: 320,
                            winheight: 460,
                            tableid: 'tblGroup',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Employee Group List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeGroupPickerbutton(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeGroupPickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {

                var oGroups=[];
                oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winGroup')
                {
                    if(oGroups!=null && oGroups.length>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();

                        for(var i=0; i<oGroups.length; i++)
                        {
                            _sGroupNames += oGroups[i].Name+",";
                            _sGroupIDs += oGroups[i].EmployeeTypeID+",";

                        }
                        _sGroupNames=_sGroupNames.substring(0,_sGroupNames.length-1);
                        _sGroupIDs=_sGroupIDs.substring(0,_sGroupIDs.length-1);
                        $("#txtEmployeeGroup").val(_sGroupNames);
                    }
                    else
                    {
                        alert("Please select a Employee Group.");
                    }
                }
            });
        }

        /*------------EmployeeBlock--------------*/
    
        $("#btnEmployeeBlockReset").click(function(e){
            $("#txtEmployeeBlock").val("");
            _sBlockNames = "";
            _sBlockIDs = "";
        });
        $('#txtEmployeeBlock').keydown(function (e) {

            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                var txtSearchByBlock = $("#txtEmployeeBlock").val();
                var sTempName = "";
                SearchEmployeeBlock(txtSearchByBlock);
                $("#txtEmployeeBlock").val('');
            }
        });

        $("#btnEmployeeBlockPicker").click(function(e){
            SearchEmployeeBlock("");
        });
        function SearchEmployeeBlock(name) {
            $("#txtEmployeeBlock").val("");
            _sBlockNames = "";
            _sBlockIDs = "";
            var oBlock={
                Name : name
            };
            debugger
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBlock,
                ControllerName: "Employee",
                ActionName: "GetsEmployeeBlockAdvSrc",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].EmployeeTypeID > 0) {
                        debugger;
                        var tblColums = [];
                        var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winBlock',
                            winclass:'clsBlock',
                            winwidth: 320,
                            winheight: 460,
                            tableid: 'tblBlock',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Employee Block List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeBlockPickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {

                var oGroups=[];
                oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winBlock')
                {
                    if(oBlocks!=null && oBlocks.length>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();

                        for(var i=0; i<oBlocks.length; i++)
                        {
                            _sBlockNames += oBlocks[i].Name+",";
                            _sBlockIDs += oBlocks[i].EmployeeTypeID+",";

                        }
                        _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                        _sBlockIDs=_sBlockIDs.substring(0,_sBlockIDs.length-1);
                        $("#txtEmployeeBlock").val(_sBlockNames);
                    }
                    else
                    {
                        alert("Please select a Employee Block.");
                    }
                }
            });
        }
    </script>
