@model ESimSol.BusinessObjects.VPTransactionSummary
    @{
        ViewBag.Title = "Item";
    }
    <div id="winReport" class="easyui-panel menuMainCollectionTable" title="Trial Balance" style="margin-left: 0px; height: 100%; width:100%;" fit="true">
        <div id="divVPTransactionSummary" style="height:100%;width:100%;">
            <table id="tblVPTransactionSummarys" class="easyui-datagrid" style="width:100%; height:100%;" fit="false" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" showfooter="true"  autorowheight="false" toolbar="#toolbar">
                <thead>
                    <tr>
                        <th field="ProductCode" width="5%" align="left">Code</th>
                        <th field="ProductName" width="20%" align="left" formatter="FormatStyle">Item</th>
                        <th field="OpeiningPriceSt" width="8%" align="right">Opening Rate</th>
                        <th field="OpeiningQtyString" width="8%" align="right">Opening Qty</th>
                        <th field="OpeningValueInString" width="11%" align="right">Opening Value</th>
                        <th field="DebitPriceSt" width="6%" align="right">In Rate</th>
                        <th field="DebitQtyString" width="6%" align="right">In Qty</th>
                        <th field="DebitAmountInString" width="10%" align="right">In Amount</th>
                        <th field="CreditPriceSt" width="6%" align="right">Out Rate</th>
                        <th field="CreditQtyString" width="6%" align="right">Out Qty</th>
                        <th field="CreditAmountInString" width="10%" align="right">Out Amount</th>
                        <th field="ClosingPriceSt" width="7%" align="right">Closing Rate</th>
                        <th field="ClosingQtyString" width="7%" align="right">Closing Qty</th>
                        <th field="ClosingValueString" width="9%" align="right">Closing Value</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbar">
                From <input id="txtSettingFromDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100px" />
                To <input id="txtSettingToDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100px" />
                Account Head :<input type="text" id="txtAccountHeadName" placeholder="Type Account Head Name" style="width:219px;margin-left: 5px;" />
                <select id="cboCurrency" style="width:90px;"></select>
                <input type="checkbox" id="chkboxApproved" style="width:20px;" />Approved
                <input type="text" id="txtBUName" style="width:180px;" disabled /><input type="button" onclick="BUClean()" value="C" /><input type="button" value="Pick" onclick="PickBusinessUnit()" style="width:40px;" />
                <select id="cboProductCategory" class="easyui-combotree"  style="width:180px;"></select>
                <select id="cboProductGroup" style="width:140px;height:23px;"></select>
                <a id="btnRefreshVBT" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="PrintPDF()">Print</a>
                <a id="btnPrintXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="PrintXL()">Export To Excel</a>
            </div>           
        </div>
    </div>
    <script type="text/javascript">
        $(document).ready(function () {
            debugger;
            var oCompany= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));
            var oVPTransactionSummary =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
            $('#divVPTransactionSummary').data('obj',oVPTransactionSummary);
            $('#divVPTransactionSummary').data('objs',oVPTransactionSummary.VPTransactionSummarys);

            var oCurrencies =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencies));
            $("#cboCurrency").data('objs',oCurrencies);
            $("#cboCurrency").icsLoadCombo({List: oCurrencies,OptionValue: "CurrencyID",DisplayText: "CurrencyName", InitialValue : "--Currency--"});

            var oCOA= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.COA));
            $("#txtAccountHeadName").data('obj',oCOA);

            var oBusinessUnits= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
            $("#txtBUName").data('BusinessUnits',oBusinessUnits);
            $('#txtBUName').val(oVPTransactionSummary.BUName);
            $('#txtBUName').addClass('fontColorOfPickItem');

            $("#cboProductGroup").icsLoadCombo({List: [],OptionValue: "ProductBaseID",DisplayText: "ProductName", InitialValue : "--Select Product Group--"});

            sessionStorage.setItem("Company", JSON.stringify(oCompany));
            sessionStorage.setItem("VoucherWindow", 'Close');

            $('#txtSettingFromDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtSettingToDate').datebox('setValue', icsdateformat(new Date()));


            ////refresh control
            $('#txtSettingFromDate').datebox('setValue', oVPTransactionSummary.StartDateSt);
            $('#txtSettingToDate').datebox('setValue', oVPTransactionSummary.EndDateSt);
            $("#txtAccountHeadName").val(oCOA.AccountHeadName);
            $('#cboCurrency').val(oVPTransactionSummary.CurrencyID);
            $('#cboBusinessUnit').val(oVPTransactionSummary.BusinessUnitID);
            document.getElementById('chkboxApproved').checked =  oVPTransactionSummary.IsApproved;

            /////end refresh control

            var sHeaderText=RefreshHeader();
            $('#winReport').panel({ title:sHeaderText});
            $('#Mainlayout').layout('collapse', 'west');

            DynamicRefreshList(oVPTransactionSummary.VPTransactionSummarys,'tblVPTransactionSummarys');
            RefreshTotalSummary(oVPTransactionSummary.VPTransactionSummarys);

            $('#txtAccountHeadName').icsAutoComplete({
                BaseAddress : sessionStorage.getItem('BaseAddress'),
                ControllerName: "ChartsOfAccount",
                ActionName: "GetsAccountsHead",
                Object: {AccountHeadName:''},
                PropertyName: "AccountHeadName",
                ParamName: "AccountHeadName",
                Columns:[{field:'AccountHeadName',width:'70%'},{field:'ParentHeadName',width:'40%'}]
            });
            $('#cboProductCategory').combotree({
                onChange: function(newValue, oldValue)
                {
                    debugger;
                    ChangeCategory(newValue, oldValue);
                }
            });
            RefreshProductCategory(0);
           
        });

function RefreshProductCategory(nPCID)
{
    var oProductCategory ={  ProductCategoryID: 0 };
    $.ajax
    ({
        type: "POST",
        dataType: "json",
        url : sessionStorage.getItem("BaseAddress")+  "/ProductCategory/GetsProductCategoryForCombo",
        data:  JSON.stringify(oProductCategory),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var oProductCategorys = jQuery.parseJSON(data);
            if(oProductCategorys!=null)
            {
                $('#cboProductCategory').combotree('loadData', oProductCategorys);
                $('#cboProductCategory').combotree('setValue', nPCID);
            }
        },
        error: function (xhr, status, error)
        {
            alert(error);
        }
    });
}
function ChangeCategory(newValue, oldValue)
{
    debugger;
    var tProductCategory = $('#cboProductCategory').combotree('tree');	// get the tree object
    var oProductCategory = tProductCategory.tree('getSelected');	
    if(oProductCategory.IsLastLayer==true && oProductCategory.IsApplyGroup==true)
    {
        LoadProductGroup(oProductCategory.id);
    }else{
        $("#cboProductGroup").icsLoadCombo({List:[],OptionValue: "ProductBaseID",DisplayText: "ProductName", InitialValue : "--Select Product Group--"});
    }
}
function LoadProductGroup(nPCID)
{
            
    var oProductBase={ ProductCategoryID : nPCID};
    $.ajax({
        type: "POST",
        dataType: "json",
        url : _sBaseAddress+  "/ProductBase/GetByCategory",
        traditional: true,
        data: JSON.stringify(oProductBase),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var oProductBases = jQuery.parseJSON(data);
            if(oProductBases!=null)
            {
                $("#cboProductGroup").icsLoadCombo({List:oProductBases,OptionValue: "ProductBaseID",DisplayText: "ProductName", InitialValue : "--Select Product Group--"});
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }
    });
}
function RefreshHeader(){
    var sHeaderText='';
    if($('#txtAccountHeadName').data('obj') && $('#txtAccountHeadName').data('obj').AccountHeadID>0){
        sHeaderText='Item Transactions || '+$('#txtAccountHeadName').data('obj').AccountHeadName;
    }else{
        sHeaderText='Item Transactions';
    }
    var oVPTransactionSummary = $('#divVPTransactionSummary').data('obj');
    var sBUName = $('#txtBUName').val();
    if(oVPTransactionSummary.BusinessUnitIDs!="")
    {
        sHeaderText=sHeaderText+' || '+sBUName+' || "'+$('#txtSettingFromDate').datebox('getValue')+'" to "'+$('#txtSettingToDate').datebox('getValue')+'"';

    }else{
        sHeaderText=sHeaderText+' || '+jQuery.parseJSON(sessionStorage.getItem("Company")).Name+' || "'+$('#txtSettingFromDate').datebox('getValue')+'" to "'+$('#txtSettingToDate').datebox('getValue')+'"';
    }
    return sHeaderText;
}
function FormatStyle(value,row,index){
    //debugger;
    var s='';
    var param=row.ParentHeadID+","+row.ProductID;
    if(value!='Opening Balance'){
        s = '<label id="lblOpening'+index+'" style="color:blue;text-decoration:underline;cursor:pointer" onclick="ItemLedger('+param+')">'+value+'</label>';
    }
    else{
        s=value;
    }
    return s;
}
       
function ItemLedger(nParentHeadID, nProductID)
{
    //debugger;
    var oVPTransactionSummary = $('#divVPTransactionSummary').data('obj');
    var oVPTransactionSummary = {
        AccountHeadID : nParentHeadID,
        ProductID:nProductID,
        BusinessUnitIDs:oVPTransactionSummary.BusinessUnitIDs,
        BUName : oVPTransactionSummary.BUName,
        StartDate : $('#txtSettingFromDate').datebox('getValue'),
        EndDate : $('#txtSettingToDate').datebox('getValue'),
        CurrencyID : parseInt($('#cboCurrency').val()),
        IsApproved:$('#chkboxApproved').is(':checked')
    };
    $.ajax({
        type: "POST",
        dataType: "json",
        url : sessionStorage.getItem("BaseAddress")+  "/FinancialStatement/SetVPTSessionData",
        traditional: true,
        data:  JSON.stringify(oVPTransactionSummary),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var sFeedBackMessage = jQuery.parseJSON(data);                
            if (sFeedBackMessage==="Successful") {
                window.location.href = sessionStorage.getItem("BaseAddress")+ "/FinancialStatement/ViewItemLedger?menuid="+parseInt(sessionStorage.getItem('MenuID'));
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }
    });

        
}
$('#btnRefreshVBT').click(function(){
        if(!ValidateInput()){return false;}
        RefreshData();
    });
  
function RefreshTotalSummary(objs){
    //var oRows = $('#tblVPTransactionSummarys').datagrid('getRows');
    debugger;
    var nDebit=0, nCredit=0, nOpenig=0, nClosing=0;
    var nOpeiningValue=0, nDebitAmount = 0, nCreditAmount = 0, nClosingValue = 0;
    for(var i=0;i<objs.length;i++)
    {
        nDebit=nDebit+parseFloat((objs[i].DebitQty).toFixed(2));
        nCredit=nCredit+parseFloat((objs[i].CreditQty).toFixed(2));
        nOpenig=nOpenig+parseFloat((objs[i].OpeiningQty).toFixed(2));
        nClosing=nClosing+parseFloat((objs[i].ClosingQty).toFixed(2));

        nDebitAmount = nDebitAmount + parseFloat((objs[i].DebitAmount).toFixed(2));
        nCreditAmount = nCreditAmount + parseFloat((objs[i].CreditAmount).toFixed(2));
        nOpeiningValue = nOpeiningValue + parseFloat((objs[i].OpeiningValue).toFixed(2));
        nClosingValue = nClosingValue + parseFloat((objs[i].ClosingValue).toFixed(2));
    }
    nDebit=nDebit<0?'('+formatPrice((nDebit*(-1)).toFixed(2))+')':nDebit===0.00?'-':formatPrice(nDebit.toFixed(2));
    nCredit=nCredit<0?'('+formatPrice((nCredit*(-1)).toFixed(2))+')':nCredit===0.00?'-':formatPrice(nCredit.toFixed(2));
    nOpenig=nOpenig<0?'('+formatPrice((nOpenig*(-1)).toFixed(2))+')':nOpenig===0.00?'-':formatPrice(nOpenig.toFixed(2));
    nClosing=nClosing<0?'('+formatPrice((nClosing*(-1)).toFixed(2))+')':nClosing===0.00?'-':formatPrice(nClosing.toFixed(2));

    nDebitAmount = nDebitAmount <0?'('+formatPrice((nDebitAmount * (-1)).toFixed(2))+')': nDebitAmount ===0.00?'-':formatPrice(nDebitAmount.toFixed(2));
    nCreditAmount = nCreditAmount<0?'('+formatPrice((nCreditAmount*(-1)).toFixed(2))+')': nCreditAmount===0.00?'-':formatPrice(nCreditAmount.toFixed(2));
    nOpeiningValue = nOpeiningValue<0?'('+formatPrice((nOpeiningValue*(-1)).toFixed(2))+')': nOpeiningValue === 0.00?'-':formatPrice(nOpeiningValue.toFixed(2));
    nClosingValue = nClosingValue <0?'('+formatPrice((nClosingValue*(-1)).toFixed(2))+')': nClosingValue===0.00?'-':formatPrice(nClosingValue.toFixed(2));
   
   
    var oRow =
     {
        ProductName:'',
        OpeiningPriceSt:'Total',
        OpeiningQtyString : nOpenig,
        DebitQtyString:nDebit,
        CreditQtyString : nCredit,
        ClosingQtyString : nClosing,

        OpeningValueInString : nOpeiningValue,
        DebitAmountInString : nDebitAmount,
        CreditAmountInString : nCreditAmount,
        ClosingValueString : nClosingValue
     }
    $('#tblVPTransactionSummarys').datagrid('reloadFooter',[oRow]);
}
function PrintPDF(){
    if(!ValidateInput())return;
    var sStartDate= $('#txtSettingFromDate').datebox('getValue');
    var sEndDate=$('#txtSettingToDate').datebox('getValue');
    var oVPTransactionSummary = $('#divVPTransactionSummary').data('obj');
    var sHeader=sessionStorage.getItem("HeaderText");
    var nCurrencyID=parseInt($('#cboCurrency').val())?parseInt($('#cboCurrency').val()):0;
    var bIsApproved=$('#chkboxApproved').is(':checked');
    var nAccountHeadID=parseInt($('#txtAccountHeadName').data('obj').AccountHeadID)?parseInt($('#txtAccountHeadName').data('obj').AccountHeadID):0




    var sParam=nAccountHeadID+'~'+sStartDate+'~'+sEndDate+'~'+oVPTransactionSummary.BusinessUnitIDs+'~'+nCurrencyID+'~'+bIsApproved+'~'+sHeader;
    window.open(_sBaseAddress+'/FinancialStatement/PrintItemTransactions?Params=' +sParam, "_blank");
}
function PrintXL(){
    if(!ValidateInput())return;
    var sStartDate= $('#txtSettingFromDate').datebox('getValue');
    var sEndDate=$('#txtSettingToDate').datebox('getValue');
    var oVPTransactionSummary = $('#divVPTransactionSummary').data('obj');
    var sHeader=sessionStorage.getItem("HeaderText");
    var nCurrencyID=parseInt($('#cboCurrency').val())?parseInt($('#cboCurrency').val()):0;
    var bIsApproved=$('#chkboxApproved').is(':checked');
    var nAccountHeadID=parseInt($('#txtAccountHeadName').data('obj').AccountHeadID)?parseInt($('#txtAccountHeadName').data('obj').AccountHeadID):0

    var sParam=nAccountHeadID+'~'+sStartDate+'~'+sEndDate+'~'+oVPTransactionSummary.BusinessUnitIDs+'~'+nCurrencyID+'~'+bIsApproved+'~'+sHeader;
    window.open(_sBaseAddress+'/FinancialStatement/ExportItemTSToExcel?Params=' +sParam, "_blank");
}
function ValidateInput()
{
    if ( $('#txtSettingFromDate').datebox('getValue')=="") {
        alert("please select Start date!");
        $('#txtSettingFromDate').focus();
        return false;
    }

    if ( $('#txtSettingToDate').datebox('getValue')=="") {
        alert("Please select end date!!");
        $('#txtSettingToDate').focus();
        return false;
    }

    var sStartDate=$('#txtSettingFromDate').datebox('getValue');
    var sEndDate = $('#txtSettingToDate').datebox('getValue');
    var dStartDate = new Date(sStartDate);
    var dEndDate = new Date(sEndDate);

    if(dEndDate < dStartDate) {
        alert("End date must be grater then start date!!");
        $('#txtSettingToDate').focus();
        return false;
    }

    if ((!$('#txtAccountHeadName').data('obj') || $('#txtAccountHeadName').data('obj') == null) ) {
        alert("Please select Account Head!");
        $('#txtAccountHeadName').focus();
        return false;
    }

    if ((!parseInt($('#txtAccountHeadName').data('obj').AccountHeadID) || parseInt($('#txtAccountHeadName').data('obj').AccountHeadID)<=0) ) {
        alert("Please select Account Head!");
        $('#txtAccountHeadName').focus();
        return false;
    }
    return true;
}
function RefreshData(){
    debugger;
    var nAccountHeadID,nBUID,nCCID=0;
    var sHeaderText,sControllerName,sActionName,sStartDate,sEndDate='';
    var obj={};

    var oVPTransactionSummary = $('#divVPTransactionSummary').data('obj');
    sControllerName='FinancialStatement';
    sActionName='GetsItemTransactions';


    sStartDate=$('#txtSettingFromDate').datebox('getValue');
    sEndDate=$('#txtSettingToDate').datebox('getValue');
    nAccountHeadID=parseInt($('#txtAccountHeadName').data('obj').AccountHeadID)?parseInt($('#txtAccountHeadName').data('obj').AccountHeadID):0;
    sHeaderText=RefreshHeader();
    if(sActionName===''){return false;}
    sessionStorage.setItem("HeaderText", sHeaderText);
                
    obj={
        AccountHeadID:nAccountHeadID,
        StartDate:sStartDate,
        EndDate:sEndDate,
        BusinessUnitIDs:oVPTransactionSummary.BusinessUnitIDs,
        BUName:oVPTransactionSummary.BUName,
        ProductCategoryID:parseInt($('#cboProductCategory').combotree('getValue')),
        ProductBaseID :parseInt($('#cboProductGroup').val()),
        CurrencyID:parseInt($('#cboCurrency').val()),
        IsApproved:$('#chkboxApproved').is(':checked')
    };

    $.ajax({
        type: "POST",
        dataType: "json",
        url : sessionStorage.getItem('BaseAddress')+  "/FinancialStatement/SetVPTSessionData",
        traditional: true,
        data:  JSON.stringify(obj),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var sFeedBackMessage = jQuery.parseJSON(data);
            if (sFeedBackMessage==="Successful") {
                window.location.href = sessionStorage.getItem('BaseAddress')+ "/FinancialStatement/ViewItemTransactions?menuid="+parseInt(sessionStorage.getItem('MenuID'));
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }
    });

}


    
  
function BUClean() 
{
    $("#txtBUName").removeClass("fontColorOfPickItem");
    $("#txtBUName").val("Group Accounts");
    var oVPTransactionSummary = $('#divVPTransactionSummary').data('obj');
    oVPTransactionSummary.BusinessUnitIDs="0";
    $('#divVPTransactionSummary').data('obj',oVPTransactionSummary);
}
function PickBusinessUnit()
{
    //debugger;
    var oBusinessUnits=  $("#txtBUName").data('BusinessUnits');
    var tblColums = []; var oColumn = { field: "Code", title: "Code", width:60, align: "left" }; tblColums.push(oColumn);
    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
    oColumn = { field: "ShortName", title: "Short Name", width: 120, align: "left" }; tblColums.push(oColumn);
       
    var oPickerParam = {
        winid: 'winBusinessUnit',
        winclass: 'clsBusinessUnit',
        winwidth: 420,
        winheight: 460,
        tableid: 'tblBusinessUnits',
        tablecolumns: tblColums,
        datalist: oBusinessUnits,
        multiplereturn: true,
        searchingbyfieldName: 'Name',
        windowTittle: 'Business Unit List'
    };
    $.icsPicker(oPickerParam);
    IntializePickerbutton(oPickerParam);
    var oVPTransactionSummary = $('#divVPTransactionSummary').data('obj');
    var aSelectedBU = oVPTransactionSummary.BusinessUnitIDs.split(',');
    var oBUList = $('#tblBusinessUnits').datagrid('getRows');
    debugger;
    for(var i =0;i<oBUList.length;i++)
    {
        if(ICS_IsExistInArray(oBUList[i].BusinessUnitID,aSelectedBU))
        {
            $('#tblBusinessUnits').datagrid('checkRow',i);
        }
    }
}
function IntializePickerbutton(oPickerobj) {
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
        //for Single Select
        SetPickerValueAssign(oPickerobj);
    });
    $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
        if (e.which == 13)//enter=13
        {
            SetPickerValueAssign(oPickerobj);

        }
    });
}
function SetPickerValueAssign(oPickerobj)
{
    var oreturnObj = null, oreturnobjs = [];
    if (oPickerobj.multiplereturn) {
        oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
    } else {
        oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
    }
    $("#" + oPickerobj.winid).icsWindow("close");
    $("#" + oPickerobj.winid).remove();

    if (oPickerobj.winid == 'winBusinessUnit')
    {
        if (oreturnobjs.length>0)
        {
            $('#txtBUName').val(ICS_PropertyConcatation(oreturnobjs,'ShortName'));
            $('#txtBUName').addClass('fontColorOfPickItem');
            var oVPTransactionSummary = $('#divVPTransactionSummary').data('obj');
            oVPTransactionSummary.BusinessUnitIDs=ICS_PropertyConcatation(oreturnobjs,'BusinessUnitID');
            $('#divVPTransactionSummary').data('obj',oVPTransactionSummary);
        }
    }
}
 </script>
    
