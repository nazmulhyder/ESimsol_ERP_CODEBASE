@{
    ViewBag.Title = "Capacity Allocation List";
}
@model IEnumerable<ESimSol.BusinessObjects.CapacityAllocation>

    <div class="menuMainCollectionTable" ng-app="CapacityAllocationApp" style="height:520px">
        <div ng-controller="CapacityAllocationController">
            <div title="CapacityAllocation List" class="row ui-grid-top-panel">
                <div class="container">
                    <div class="form-inline">
                        <input type="text" ng-model="txtSearchByName" ng-keyup="SearchByName($event)" placeholder="Search by Buyer Name" style="width:170px"/>
                        <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Add()"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> New</button>
                        <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Edit()" ng-hide="btnEdit"> <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit</button>
                        <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Delete()" ng-hide="btnDelete"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Delete</button>
                        <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="View()"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> View</button>
                        <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Print()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span></button>
                    </div>
                </div>
            </div>
            <div ui-grid="gridOptions" ui-grid-selection  class="grid-angular" style="width:100%"></div>
        </div>
    </div>
<style type="text/css">
    .grid-angular {
        width: 100%;
        height:520px;
    }
</style>
<script type="text/javascript">
    debugger;
    var oCapacityAllocations =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oCapacityAllocationTypes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.CapacityAllocationTypes));
    var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    debugger;
    var CCapp= angular.module('CapacityAllocationApp', ['ui.grid','ui.grid.selection','ms.service']);
    CCapp.controller('CapacityAllocationController',function ($scope,$http,uiGridConstants,userSession)
    {
        oCapacityAllocations= (userSession.getData('CapacityAllocations').length>0)? userSession.getData('CapacityAllocations'):oCapacityAllocations;
    
      
        debugger;
        $scope.gridOptions= {
            multiSelect: false,
            enableFullRowSelection: true,
            columnDefs: [
              { field: 'Code', name:'Code', width:'15%' },
              { field: 'BuyerName', name:'Buyer', width:'25%' },
              { field: 'Remarks', name:'Remarks', width:'20%' , enableSorting: false},
              { field: 'QuantitySt', name:'Capacity/Month', cellClass: 'text-right', width:'25%' }
            ],
            data: oCapacityAllocations,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.selection.selectRow($scope.gridOptions.data[userSession.getRowIndex()]);
                userSession.clear();
            }
        };
        $scope.SearchByName = function(e)
        {
            debugger;
            var txtSearchByName = $scope.txtSearchByName;
            var rows = $scope.gridOptions.data;
            var sTempName="";
            var oSearchedList = [];
            var oCurrentList = $scope.gridOptions.data;
            if (e.which == 8)
            {
                oCurrentList = oCapacityAllocations;
            }
            for(i=0;i<oCurrentList.length;++i){
                sTempName=oCurrentList[i].BuyerName;
                n=sTempName.toUpperCase().indexOf(txtSearchByName.toUpperCase())
                if(n!=-1)
                {
                    oSearchedList.push(oCurrentList[i]);
                }
            }
            $scope.gridOptions= {data: oSearchedList};
        }
        $scope.Add=function()
        {
            sessionStorage.setItem("CapacityAllocations", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("CapacityAllocationHeader", "Add CapacityAllocation");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = _sBaseAddress+ "/CapacityAllocation/ViewCapacityAllocation?id=0";
        }
        $scope.Edit= function ()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oCapacityAllocation= data[0];//get selected index
            if(oCapacityAllocation==null || oCapacityAllocation.CapacityAllocationID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oCapacityAllocation);
            sessionStorage.setItem("CapacityAllocations", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("CapacityAllocationHeader", "Edit CapacityAllocation");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = _sBaseAddress+  "/CapacityAllocation/ViewCapacityAllocation?id="+oCapacityAllocation.CapacityAllocationID
        }
        $scope.View= function ()
        {
            //debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oCapacityAllocation= data[0];//get selected index
            if(oCapacityAllocation==null || oCapacityAllocation.CapacityAllocationID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oCapacityAllocation);
            sessionStorage.setItem("CapacityAllocations", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("CapacityAllocationHeader", "View CapacityAllocation");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = _sBaseAddress+  "/CapacityAllocation/ViewCapacityAllocation?id="+oCapacityAllocation.CapacityAllocationID;
        }
      
        $scope.Delete = function()
        {
            var data=$scope.gridApi.selection.getSelectedRows();
            var oCapacityAllocation= data[0];//get selected index
            if(oCapacityAllocation==null || oCapacityAllocation.CapacityAllocationID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if (!confirm("Confirm to Delete?")) return ;
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oCapacityAllocation);
            if (oCapacityAllocation.CapacityAllocationID > 0)
            {
                $.ajax
                ({
                    type: "GET",
                    dataType: "json",
                    url : _sBaseAddress+ "/CapacityAllocation/Delete",
                    data: { id: oCapacityAllocation.CapacityAllocationID},
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        debugger;
                        feedbackmessage = jQuery.parseJSON(data);
                        if (feedbackmessage == "Deleted")
                        {
                            alert("Delete sucessfully");
                            $scope.gridOptions.data.splice(SelectedRowIndex,1);
                            $scope.gridApi.core.refresh();
                        }
                        else
                        {
                            alert(feedbackmessage);
                        }
                    },
                    error: function (xhr, status, error)
                    {
                        alert(error);
                    }

                });
            }
        }
      

        $scope.Print = function () {
            debugger;
            window.open(sessionStorage.getItem('BaseAddress') +'/CapacityAllocation/PrintBookingStatus?sParam=');

        };
    });


</script>