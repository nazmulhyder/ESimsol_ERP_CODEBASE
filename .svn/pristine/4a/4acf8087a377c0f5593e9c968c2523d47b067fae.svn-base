@{
    ViewBag.Title = "Transfer Promotion Increment";
}
<html>
<head>
    <title> Transfer Promotion Increment </title>
</head>
<body class="menuMainCollectionTable">
@{var MenuID = HttpContext.Current.Session[SessionInfo.MenuID];}
@model ESimSol.BusinessObjects.TransferPromotionIncrement

    <div id="divmain" style="font-family: Tahoma">
        <div id="divBody">
            <fieldset>
                <legend id="lblHeaderName" style="font-weight: bold"> Add Transfer Promotion Increment </legend>
                <table id="TPI-Information" border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;">
                    <tr class="TPI-Information-tr">
                        <td class="TPI-Information-td-caption" style="text-align: right;">
                            Employee :
                        </td>
                        <td class="TPI-Information-td-inputitem" colspan="3">
                            <input id="txtEmployee" type="text" style="width: 405px;" placeholder="Type code or name then enter" />
                            <input id="btnEmployee" type="button" value="P" />
                        </td>
                    </tr>
                    <tr class="TPI-Information-tr">
                        <td class="TPI-Information-td-caption" style="text-align: right;">
                            Department :
                        </td>
                        <td class="TPI-Information-td-inputitem">
                            <input id="txtDRP" type="text" style="width: 155px;" disabled="disabled" />
                        </td>
                        <td class="TPI-Information-td-caption" style="text-align: right;">
                            Att. Scheme :
                        </td>
                        <td class="TPI-Information-td-inputitem">
                            <input id="txtAttScheme" type="text" style="width: 155px;" disabled="disabled" />
                        </td>
                    </tr>
                    <tr class="TPI-Information-tr">
                        <td class="TPI-Information-td-caption" style="text-align: right;">
                            Salary Scheme :
                        </td>
                        <td class="TPI-Information-td-inputitem">
                            <input id="txtSalaryScheme" type="text" style="width: 155px;" disabled="disabled" />
                        </td>
                        <td class="TPI-Information-td-caption" style="text-align: right;">
                            Gross Salary :
                        </td>
                        <td class="TPI-Information-td-inputitem">
                            <input id="txtGrossSalary" type="text" style="width: 120px;" disabled="disabled" />
                            <input id="btnViewGrossSalary" type="button" value="V" />
                        </td>
                    </tr>
                    <tr class="TPI-Information-tr">
                        <td class="TPI-Information-td-caption" style="text-align: right;">
                            Current Shift :
                        </td>
                        <td class="TPI-Information-td-inputitem">
                            <input id="txtCurrentShift" type="text" style="width: 155px;" disabled="disabled" />
                        </td>
                        <td class="TPI-Information-td-caption" style="text-align: right;">
                            Comp Gross Salary :
                        </td>
                        <td class="TPI-Information-td-inputitem">
                            <input id="txtCompGrossSalary" type="text" style="width: 120px;" disabled="disabled" />
                            <input id="btnViewCompGrossSalary" type="button" value="V" />
                        </td>
                    </tr>
                    <tr class="TPI-Information-tr">
                        <td class="TPI-Information-td-caption" style="text-align: right;">
                            Employee Type :
                        </td>
                        <td class="TPI-Information-td-inputitem">
                            <input id="txtCurrentEmployeeType" type="text" style="width: 155px;" disabled="disabled" />
                        </td>
                        <td class="TPI-Information-td-caption" style="text-align: right;">
                            
                        </td>
                        <td class="TPI-Information-td-inputitem">
                            
                        </td>
                    </tr>
                </table>

                <table id="TPI-checkbox" border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;">
                    <tr>
                        <td>
                            <input id="chkTransfer" type="checkbox" />Transfer
                        </td>
                        <td>
                            <input id="chkPromotion" type="checkbox" />Promotion
                        </td>
                        <td>
                            <input id="chkIncrement" type="checkbox" />Increment
                        </td>
                    </tr>
                    <tr id="hideForEdit">
                        <td colspan="3">
                            <input id="chkNoHistory" type="checkbox" />No History(If you check this one there will be no history for this action)
                        </td>
                    </tr>
                </table>
                <span id="lblTransfer"><!--it was label-->
                    <fieldset>
                        <legend style="font-weight: bold">Transfer </legend>
                        <table id="tblTransfer" border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;">
                            <tr class="Transfer-tr">
                                <td class="Transfer-td-caption" style="width: 100px; text-align: right;">
                                    Department :
                                </td>
                                <td class="Transfer-td-inputitem">
                                    <input id="txtTPIDRP" type="text" style="width:405px" placeholder="Type Department  then enter" /><input id="btnTPIDRP" type="button" value="P" />
                                </td>
                            </tr>
                            <tr class="Transfer-tr">
                                <td class="Transfer-td-caption" style="text-align: right;">
                                    Att. Scheme :
                                </td>
                                <td class="Transfer-td-inputitem">
                                    <input id="txtTPIAttScheme" type="text" style="width:405px" placeholder="Type Att. Scheme name then enter" /><input id="btnTPIAttScheme" type="button" value="P" />
                                </td>
                            </tr>
                            <tr class="Transfer-tr">
                                <td class="Transfer-td-caption" style="text-align: right;">
                                    Shift :
                                </td>
                                <td class="Transfer-td-inputitem">
                                    <select id="cboShift" style="width:442px"></select>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </span>
                <span id="lblPromotion">
                    <fieldset>
                        <legend style="font-weight: bold">Promotion </legend>
                        <table id="tblPromotion" border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;">
                            <tr class="Promotion-tr">
                                <td class="Promotion-td-caption" style=" text-align: right;">
                                    Designation :
                                </td>
                                <td class="Promotion-td-inputitem">
                                    <select id="cboDesignation" style="width:405px"></select>
                                    <input id="btnDesignation" type="button" value="L" onclick="GetDesignation()" />
                                </td>
                            </tr>
                            <tr class="Promotion-tr">
                                <td class="Promotion-td-caption" style=" text-align: right;">
                                    Employee Type :
                                </td>
                                <td class="Promotion-td-inputitem">
                                    <select id="cboEmployeeType" style="width:405px"></select>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </span>
                <span id="lblIncrement">
                    <fieldset>
                        <legend style="font-weight: bold">Increment </legend>
                        <table id="tblIncrement" border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;">
                            <tr class="Increment-tr">
                                <td class="Increment-td-caption" style="text-align: right;">
                                    Salary Scheme :
                                </td>
                                <td class="Increment-td-inputitem">
                                    <input id="txtTPISalaryScheme" type="text" style="width:400px" placeholder="Type salary scheme name and enter " /><input id="btnTPISalaryScheme" type="button" value="P" />
                                </td>
                            </tr>
                            <tr class="Increment-tr">
                                <td class="Increment-td-caption" style="text-align: right;">
                                    Increment Amount:
                                </td>
                                <td class="Increment-td-inputitem">
                                    <input id="txtTPIGrossSalary_FixedIncremented" class="number" type="text" style="width:120px;" placeholder="Amount" />
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Comp Increment Amount:<input id="txtCompTPIGrossSalary_FixedIncremented" class="number" type="text" style="width:120px;" placeholder="Comp Amount" />
                                </td>
                            </tr>
                            <tr class="Increment-tr">
                                <td class="Increment-td-caption" style="text-align: right;">
                                    Gross Salary :
                                </td>
                                <td class="Increment-td-inputitem">
                                    <input id="txtTPIGrossSalary_Fixed" class="number" type="text" style="width:160px;" placeholder="Fixed" />
                                    <input id="txtTPIGrossSalary_Percent" class="number" type="text" style="width:160px;" placeholder="Percent" />
                                    <input id="btnViewStructure" type="button" value="View Structure" style="width:100px;" />
                                </td>
                            </tr>
                            <tr class="Increment-tr">
                                <td class="Increment-td-caption" style="text-align: right;">
                                    Comp Gross :
                                </td>
                                <td class="Increment-td-inputitem">
                                    <input id="txtCompTPIGrossSalary_Fixed" class="number" type="text" style="width:160px;" placeholder="Fixed" />
                                    <input id="txtCompTPIGrossSalary_Percent" class="number" type="text" style="width:160px;" placeholder="Percent" />
                                </td>
                            </tr>

                            <tr class="Increment-tr">
                                <td class="Increment-td-caption" style="text-align: right;">
                                </td>
                                <td class="Increment-td-inputitem">
                                    <input id="chkBank" type="checkbox" /> Bank
                                    <input id="chkCash" type="checkbox" /> Cash &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                                    <span><label id="lblCash">Cash :</label><input type="text" style="width: 80px;" id="txtCash" />(BDT)</span>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </span>
                <table id="lblFooter" border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;">
                    <tr class="Footer-tr">
                        <td class="Footer-td-caption" style=" text-align: right;">
                            Note :
                        </td>
                        <td class="Footer-td-inputitem">
                            <input id="txtNote" type="text" style="width: 180px;" />
                        </td>
                        <td class="Footer-td-caption" style=" text-align: right;">
                            Effect On :
                        </td>
                        <td class="Footer-td-inputitem">
                            <input id="dtEffectedOn" type="text" style="width: 125px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                </table>
            </fieldset>

            <div id="div-action">
                <fieldset>
                    <legend>Action</legend>
                    <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true">Approve</a>
                    <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    <a id="btnCancel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </fieldset>
            </div>
        </div>
    </div>

    <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Present Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Permanent Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>

                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            BU :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboBU" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Block :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtBlock" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnBlock" class="pick-btn" type="button" value="P" />
                            <input id="btnResetBlock" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Category:
                        </td>
                        <td class="td-AdvSearch-Level">
                            <div>
                                <select id="cboCategory" style="width:160px; float:left;"></select>
                                &nbsp; Gender :
                                <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 75px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                            <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                            <a id="btnEmployeeDatabaseXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true" onclick="PrintEmployeeDatabaseXL()"></a>
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" toolbar="#toolbar">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" >Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="locationtree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" >Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" >Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winViewSalaryStructure" class="easyui-window winstyle" title="Salary Structure" style="width:38%;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <fieldset>
            <legend style="font-weight: bold">Salary Structure Information </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; margin-left: 10px; font-size: 11px; ">
                <tr>
                    <td>

                        <table id="tblSalaryStructureDetailBasic" class="easyui-datagrid" style="width: 450px;
                        height: 155px; font-size: 11px;" fitcolumns="false" pagination="false" toolbar="#toolbar"
                                singleselect="true" autorowheight="false" data-options="singleSelect: false, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false, toolbar: '#toolbar1'">
                            <thead>
                                <tr>
                                    <th field="SalaryHeadName" width="90" align="left">
                                        Salary Head
                                    </th>
                                    <!--<th field="Calculation" width="225" align="center" style="text-align: center">-->
                                    <th data-options="field:'Calculation',width:225,align:'right',editor:{type:'numberbox',options:{precision:0}}"
                                        align="center">
                                        Equation
                                    </th>

                                    <th field="Amount" width="90" align="right" formatter="formatPrice">
                                        Total Amount
                                    </th>
                                    <th field="CompAmount" width="90" align="right" formatter="formatPrice">
                                        Total Comp Amount
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </td>
                </tr>
            </table>

            <table style="margin-left: 10px;">
                <tr>
                    <td style="width: 100px; font-weight:bold;">
                        Total :
                    </td>
                    <td style="width: 80px; text-align: right;">
                        <label id="lblTotalPercent" style="text-align: right; width: 125px;">
                        </label>
                    </td>
                    <td style="width: 90px; text-align: right;">
                        <!--<label id="lblTotalAmount" style="text-align: right; width: 95px;"></label>-->
                    </td>
                    <td style="width: 165px; text-align: right;">
                        <label id="lblBasicTotal" style="text-align: right; width: 130px;">
                        </label>
                    </td>
                </tr>
            </table>

            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; margin-left: 10px">
                <tr>
                    <td style="font-weight: bold;">
                        Allowance
                    </td>
                </tr>
                <tr>
                    <td>
                        <table id="tblSalaryStructureDetailAllowance" class="easyui-datagrid" style="width: 450px;
                        height: 150px; font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false"
                                singleselect="true" autorowheight="true">
                            <thead>
                                <tr>
                                    <th field="AllowanceName" width="90" align="left">
                                        Allowance
                                    </th>
                                    <th field="AllowanceValueInString" width="225" align="left" style="text-align: right">
                                        Value
                                    </th>
                                    <th field="Amount" width="90" align="right" formatter="formatPrice">
                                        Total Amount
                                    </th>
                                    <th field="CompAmount" width="90" align="right" formatter="formatPrice">
                                        Total Comp Amount
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </td>
                </tr>
            </table>

            <table style="margin-left: 10px; font-size: 11px; font-weight: bold;">
                <tr>
                    <td>
                        <input type="checkbox" id="chkAllowBankAdvice" disabled="disabled" />Allow Bank Advice
                        <input type="checkbox" id="chkAllowOverTime" disabled="disabled" />Allow Over Time&nbsp;
                        <label id="lblAllowOverTime"></label>
                        &nbsp;
                        &nbsp;
                        <!--Total:&nbsp;
                        <label id="lblTotalValue"></label>-->

                    </td>

                </tr>
            </table>

            <table style="margin-left: 10px; font-size: 11px; font-weight: bold;">
                <tr>
                    <td style="width: 450px">
                        <input id="chkProductionBase" type="checkbox" disabled="disabled" />Production Base
                    </td>

                </tr>
                <tr>
                    <td style="width: 450px">
                        <input id="chkAttendanceDependent" type="checkbox" disabled="disabled" />Attendance Dependent
                    </td>

                </tr>
                <tbody id="tbdAttendanceDependent">
                    <tr>
                        <td style="width: 450px">
                            One Day Basic Salary Deduction For
                            <input id="txtLateCount" type="text" style="width:85px" disabled /> Days Late
                        </td>
                    </tr>

                    <tr>
                        <td style="width: 450px">
                            One Day Basic Salary Deduction For
                            <input id="txtEarlyLeavingCount" type="text" style="width:85px" disabled /> Days EarlyLeaving
                        </td>
                    </tr>
                </tbody>
            </table>
        </fieldset>

        <fieldset>
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                <tr>
                    <td style="width: 500px"></td>
                    <td style="width: 50px"></td>
                    <td style="width: 50px">
                        <a id="btnCloseViewSalaryStructure" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>

    <div id="winDRP" class="easyui-window winstyle" title="Department Requirement Policy List" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div id="focusDRP" tabindex="-1">
            <table id="tblDepartmentRequirementPolicy" class="easyui-datagrid" style="width: 335px; height: 330px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbar">
                <thead>
                    <tr>
                        <th field="DepartmentName" width="155">
                            Department
                        </th>
                        <th field="LocationName" width="170">
                            Location
                        </th>
                    </tr>
                </thead>
            </table>
            <table>
                <tr>
                    <td style="width: 210px; text-align: left"></td>
                    <td style="width: 50px; text-align: center">
                        <a id="DRPPickoK" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                    </td>
                    <td style="width: 50px; text-align: center">
                        <a id="DRPPickClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </div>

    </div>

    <div id="winAttendanceScheme" class="easyui-window winstyle" title="Attendance Scheme List" style="width:370px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div id="focusAttendanceScheme" tabindex="-1">
            <table id="tblAttendanceScheme" class="easyui-datagrid" style="width: 355px; height: 330px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbar">
                <thead>
                    <tr>
                        <th field="Name" width="180">
                            Name
                        </th>
                        <th field="EmployeeType" width="120">
                            Empolyee Type
                        </th>
                        <th field="DayOff" width="135">
                            DayOff
                        </th>
                    </tr>
                </thead>
            </table>
            <table>
                <tr>
                    <td style="width: 230px; text-align: left"></td>
                    <td style="width: 50px; text-align: center">
                        <a id="AttSchemePickoK" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                    </td>
                    <td style="width: 50px; text-align: center">
                        <a id="AttSchemePickClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>

</body>
</html>

<style>
     #divmain {
         position: fixed;
         height: 85%;
         width: 76%;
         overflow-y: scroll;
     }
     #headertable {
         position: fixed;
         width: 76%;
     }

     #TPI-Information, #lblFooter {
         width: 57%;
         margin-left: 20%;
     }

     #TPI-checkbox {
         margin-left: 29.5%;
     }

     .TPI-Information-tr, .Footer-tr {
         width: 100%;
     }

     .TPI-Information-td-caption, .Footer-td-caption {
         width: 16%;
     }

     .TPI-Information-td-inputitem, .Footer-td-inputitem {
         width: 25%;
     }

     #tblTransfer, #tblPromotion, #tblIncrement {
         width: 65%;
         margin-left: 19%;
     }

     .Transfer-tr, .Promotion-tr, .Increment-tr {
         width: 100%;
     }

     .Transfer-td-caption, .Promotion-td-caption, .Increment-td-caption {
         width: 16%;
     }

     .Transfer-td-inputitem, .Promotion-td-inputitem, .Increment-td-inputitem {
         width: 84%;
     }

     #div-action {
         text-align: right;
     }

     .tbl-AdvSearch {
         width: 100%;
         font-size: 11px;
         font-weight: bold;
         text-align: left;
         margin-left: 3px;
     }

     .td-AdvSearch-Level {
         text-align: right;
     }

     .td-AdvSearch-Input {
         text-align: left;
     }

     .txtfield-search {
         width: 312px;
         text-align: left;
         font-size: 11px;
     }

     .txtfield-picker {
         width: 265px;
         text-align: left;
         font-size: 11px;
     }

     .selection-search {
         width: 310px;
         text-align: left;
         font-size: 11px;
     }

     .pick-btn {
         width: 20px;
         text-align: center;
         font-size: 11px;
     }
</style>
<script type="text/javascript">

    var _oTPI=null;
    var _sBaseAddress="";
    var _nSalarySchemeID=0;
    var _nTPIDRPID=0;
    var _nTPIAttSID=0;
    var _nAttSID=0;
    var _nDRPID=0;
    var _nLocationID=0;
    var _nDepartmentID=0;
    var _nTPISalarySchemeID=0;
    var _sPaymentCycle="";
    var _nEmployeeID=0;
    var _oEmployee=null;
    var _oEmployeeOfficialInfo=null;
    var _nDesignationID=0;
    var _nNDRPID=0;
    var _nTPIDesignationID=0;
    var _bFlag=true;
    var _nDRPIDForLoadDesignation=0;
    var _oSalaryStructure = {ESSID:0};
    var _nLastEmployeeID = 0;
    var _sEmployeeIDs = "";
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _sAttendanceSchemeID="";
    var _sLocationID = "";
    var _sDepartmentID = "";
    var _sDesignationID = "";
    var _sBlockNames="";
    var _sBMMIDs="";

    var _nEmployeeTypeID= 0;
    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _oSalaryStructureDetails =[];
    var _oBusinessUnits=[];

    var _nMenuid=0;
    var _sTPIHeader="";
    var _nGrossAmount = 0;
    var _nCompGrossAmount = 0;

    $(document).ready(function ()
    {
        debugger;
        _oTPI = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        LoadCateGory(oEmployeeCategorys);

        
        $('#chkCash').prop('checked', false);
        $('#chkBank').prop('checked', true);
        document.getElementById('lblCash').innerHTML = 'Bank :';

        $("#txtEmployee").focus();
        $("#lblIncrement").hide();
        $("#lblPromotion").hide();
        $("#lblTransfer").hide();
        $("#btnApprove").hide();
        $('#dtEffectedOn').datebox('setValue',_oTPI.EffectedDateInString);
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(MenuID));
        _sTPIHeader=sessionStorage.getItem("TPIHeader");
        if(_oTPI.ErrorMessage!="")
        {
            alert(_oTPI.ErrorMessage);
            _oTPI.ErrorMessage=="";
        }

        $("#cboEmployeeType").icsLoadCombo({
            List:_oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name",
            InitialValue:"--Select Employee Type--"
        });

        $("#lblHeaderName").html(_sTPIHeader);

        if (_sTPIHeader == "Edit Transfer Promotion & Increment") {
            $("btnEmployee").hide();
            SetControl_TPI();
        }
        if (_sTPIHeader== "View Transfer Promotion & Increment" || _sTPIHeader== "Approve Transfer Promotion & Increment") {
            SetControl_TPI();
            $("#btnEmployee").prop("disabled", true);
            $("#btnTPIDRP").prop("disabled", true);
            $("#btnTPIAttScheme").prop("disabled", true);
            $("#btnTPISalaryScheme").prop("disabled", true);
            $("#btnSave").hide();
            if(_sTPIHeader== "Approve Transfer Promotion & Increment"){$("#btnApprove").show();}

            $("#chkTransfer").prop("disabled", true);
            $("#chkPromotion").prop("disabled", true);
            $("#chkIncrement").prop("disabled", true);
            $("#cboDesignation").prop("disabled", true);
            $("#cboShift").prop("disabled", true);
            $("#txtTPIGrossSalary_Fixed").prop("disabled", true);
            $("#btnViewGrossSalary").prop("disabled", true);
            $("#txtCurrentShift").prop("disabled", true);
            if(_sTPIHeader== "View Transfer Promotion & Increment"){
                $("#btnViewStructure").prop("disabled", true)
                $("#txtNote").prop("disabled", true);
            };
            $("#btnDesignation").prop("disabled", true);
            //$('#dtEffectedOn').datebox({disabled:true});
            $("#txtEmployee").prop("disabled", true);
            $("#txtTPIDRP").prop("disabled", true);
            $("#txtTPIAttScheme").prop("disabled", true);
            $("#txtTPISalaryScheme").prop("disabled", true);
            $("#txtTPIGrossSalary_Percent").prop("disabled", true);
        }
        InitializeAdvSearch();
    });

    function LoadCateGory(oEmployeeCategorys)
    {
        $("#cboCategory").icsLoadCombo({
            List: oEmployeeCategorys,
            OptionValue: "Value",
            DisplayText: "Text"
        });
    }

    function SetControl_TPI()
    {
        debugger;
        $("#txtEmployee").val(_oTPI.EmployeeName+", "+_oTPI.EmployeeofficialInString);
        $("#txtDRP").val(_oTPI.DepartmentName);
        _nDRPID=_oTPI.DRPID;
        _nNDRPID=_oTPI.DRPID;// this _nNDRPID is for getting DRP
        _nEmployeeID=_oTPI.EmployeeID;
        _nDesignationID=_oTPI.DesignationID;
        _nTPIDesignationID= _oTPI.TPIDesignationID;
        _nAttSID=_oTPI.ASID;
        $("#txtAttScheme").val(_oTPI.AttendanceSchemeName);
        $("#txtSalaryScheme").val(_oTPI.SalarySchemeName);
        $("#txtCurrentShift").val(_oTPI.Shift);
        $("#txtGrossSalary").val(_oTPI.GrossSalary);
        $("#txtCompGrossSalary").val(_oTPI.CompGrossSalary);
        $("#txtNote").val(_oTPI.Note);

        if(_oTPI.IsTransfer==true)
        {
            $('#chkTransfer').prop('checked', true);
            $("#lblTransfer").show();
            $("#txtTPIDRP").val(_oTPI.TPIDepartmentName);
            $("#txtTPIAttScheme").val(_oTPI.TPIASName);
            _nTPIDRPID=_oTPI.TPIDRPID;
            _nTPIAttSID=_oTPI.TPIASID;
            _nNDRPID=_oTPI.TPIDRPID;
            GetAttScheme(_oTPI.TPIASID);
        }
        if(_oTPI.IsPromotion==true)
        {
            $('#chkPromotion').prop('checked', true);
            $("#lblPromotion").show();
            GetDRP();
        }
        if(_oTPI.IsIncrement==true)
        {
            $('#chkIncrement').prop('checked', true);
            $("#lblIncrement").show();
            $("#txtTPISalaryScheme").val(_oTPI.TPISSName);
            $("#txtTPIGrossSalary_Fixed").val(_oTPI.TPIGrossSalary);
            $("#txtTPIGrossSalary_Percent").val(parseFloat(_oTPI.TPIGrossSalary-_oTPI.GrossSalary)/_oTPI.GrossSalary*100);
            $("#txtCompTPIGrossSalary_Fixed").val(_oTPI.CompTPIGrossSalary);
            $("#txtCompTPIGrossSalary_Percent").val(parseFloat(_oTPI.CompTPIGrossSalary-_oTPI.CompGrossSalary)/_oTPI.CompGrossSalary*100);
            _nTPISalarySchemeID=_oTPI.TPISalarySchemeID;

            if(_oTPI.IsCashFixed) {
                $('#chkBank').prop('checked', false);
                $('#chkCash').prop('checked', true);
                $('#txtCash').val(_oTPI.CashAmount);
                document.getElementById('lblCash').innerHTML = 'Cash :';
            } else {
                $('#chkBank').prop('checked', true);
                $('#chkCash').prop('checked', false);
                $('#txtCash').val(_oTPI.CashAmount);
                document.getElementById('lblCash').innerHTML = 'Bank :';
            }

        }
        if(_oTPI.IsNoHistory == true) {
            $('#hideForEdit').hide();
        }

    }
    
    $("#chkBank").click(function (e)
    {
        $('#chkCash').prop('checked', false);
        $('#chkBank').prop('checked', true);
        document.getElementById('lblCash').innerHTML = 'Bank :';
    });
    $("#chkCash").click(function (e)
    {
        $('#chkBank').prop('checked', false);
        $('#chkCash').prop('checked', true);
        document.getElementById('lblCash').innerHTML = 'Cash :';
    });

    $('#chkIncrement').click(function (e)
    {
        if($('#chkIncrement').is(":checked")==true)
        {
            $("#lblIncrement").show();
            if(_sTPIHeader=="Edit Transfer Promotion Increment")
            {
                $("#txtTPISalaryScheme").val(_oTPI.TPISSName);
                $('#txtTPIGrossSalary_Fixed').val(_oTPI.TPIGrossSalary);
                _nTPISalarySchemeID=_oTPI.TPISalarySchemeID;
            }
            else {
                
                $("#txtTPIGrossSalary_Fixed").val(_nGrossAmount);
                $("#txtCompTPIGrossSalary_Fixed").val(_nCompGrossAmount)
                $("#txtTPIGrossSalary_Percent").val(0);;
                $("#txtCompTPIGrossSalary_Percent").val(0);
            }
        }
        else
        {
            $("#lblIncrement").hide();
            $("#txtTPISalaryScheme").val("");
            $("#txtTPIGrossSalary_Fixed").val("");
            _nTPISalarySchemeID=0;
        }
    });

    $('#chkPromotion').click(function (e)
    {
        if($('#chkPromotion').is(":checked")==true)
        {
            $("#lblPromotion").show();
            if(_oTPI.TPIDRPID>0 && $('#chkTransfer').is(":checked")==true)
            {
                _nNDRPID=_oTPI.TPIDRPID;
            }
            else
            {
                _nNDRPID=_oTPI.DRPID;
            }
            if(_sTPIHeader == "Edit Transfer Promotion Increment")
            {
                GetDRP();
            }
        }
        else
        {
            $("#lblPromotion").hide();
            $('#cboDesignation').empty();
        }
    });

    $('#chkTransfer').click(function (e)
    {
        $('#cboDesignation').empty();
        if($('#chkTransfer').is(":checked")==true)
        {
            $("#lblTransfer").show();
            _nDRPIDForLoadDesignation = 0;
            if(_sTPIHeader == "Edit Transfer Promotion Increment")
            {
                $("#txtTPIDRP").val(_oTPI.TPIDepartmentName);
                $("#txtTPIAttScheme").val(_oTPI.TPIASName);
                _nTPIDRPID=_oTPI.TPIDRPID;
                _nTPIAttSID=_oTPI.TPIASID;
                _nTPIDesignationID= _oTPI.TPIDesignationID;
                _nNDRPID=_oTPI.TPIDRPID;
                GetDRP();
            }
        }
        else
        {

            $("#lblTransfer").hide();
            $("#txtTPIDRP").val("");
            $("#txtTPIAttScheme").val("");
            $("#cboShift").val(0);
            _nTPIDRPID=0;
            _nTPIAttSID=0;
            if (_oEmployeeOfficialInfo!=null)
            {
                _nLocationID=_oEmployeeOfficialInfo.LocationID;
                _nDepartmentID=_oEmployeeOfficialInfo.DepartmentID;
                _nDRPIDForLoadDesignation=_oEmployeeOfficialInfo.DRPID;
            }
            if(_sTPIHeader == "Edit Transfer Promotion Increment")
            {
                _bFlag=false;
                _nTPIDesignationID= 0;
                _nNDRPID=_oTPI.DRPID;
                GetDRP();
            }
        }

    });

    /*--------------------Employee Search By Name-----------*/

    $('#txtEmployee').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee").focus(); return;}
            SearchEmployeeByText(sCodeName);
        }
    });

    function SearchEmployeeByText(sEmpNameCode){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    PickEmployee(oreturnObj);
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        PickEmployee(oreturnObj);
                    }
                }
            }
        });
    }

    function PickEmployee(oEmployee){
        debugger;
        Reset();
        if(oEmployee.DesignationName=="" || oEmployee.DepartmentName=="" || oEmployee.LocationName=="")
        {
            alert("This Employee Has No Official Information !");
            $("#txtEmployee").focus();
            return;
        }
        _nEmployeeID=oEmployee.EmployeeID;

        $("#txtEmployee")[0].value=oEmployee.Name+" ["+oEmployee.Code+"]"+", "+oEmployee.DesignationName+", "+oEmployee.DepartmentName+", "+oEmployee.LocationName;
        GetEmployeeOfficialInfo(_nEmployeeID);
        GetSalaryStructure(_nEmployeeID);
    }
    /*------------------------- end emp search by code/name*----------------------/

    /*---------------- emp Search----------------*/

    function InitializeAdvSearch(){
        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));
        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });

        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                     {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                     {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentID = "";
        _sDesignationID = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
    }

    $("#btnEmployee").click(function () {
        debugger;
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange').click(function()
    {
        if(document.getElementById("chkRange").checked == true)
        {
            $("#lblRange1").show();
        }
        else
        {
            $("#lblRange1").hide();
        }
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        debugger
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }

        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');
        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }

        var nBusinessUnitID = $("#cboBU").val();
        var nCategory=$('#cboCategory').val();

        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();


        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentID=="" && _sDesignationID=="" &&
           nEmployeeTypeID==0 && sGender=="" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
           bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0
           && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBMMIDs=="")
        {
            alert("Please enter you selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentID + '~' +_sDesignationID + '~' +
                     sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                     bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                     sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                     +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBMMIDs;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnEmployeePickerOk").click(function () {
        debugger;
        var oEmployee = $('#tblEmployeesForPicker').datagrid('getSelected');
        if (oEmployee== null) { alert("please select atleast one item");return; }
        PickEmployee(oEmployee);
        $("#winEmployeePicker").icsWindow('close');
    });

    $("#btnEmployeePickerClose").click(function () {
        debugger;
        $("#winEmployeePicker").icsWindow('close');
    });

    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    /*-------------Location Picker----------------*/

    $("#btnLocationPicker").click(function(e){
        var nBusinessUnitID = $("#cboBU").val();
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitID:nBusinessUnitID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        var oLocation = $('#locationtree').tree('getSelected');
        if(oLocation!=null && oLocation.id>0){
            $("#winLocationPicker").icsWindow('close');
            $('#txtLocation').val(oLocation.text);
            _sLocationID= oLocation.id;
        }
        else{
            alert("Please select a location.");
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker").click(function(e){
        $('#txtLocation').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){

        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:$('#cboBU').val(),LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){

        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentID= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
    });

    $("#btnResetDepartmentPicker").click(function(e){
        $('#txtDepartment').val("");
        _sDepartmentID="";
    });

    /*------------- Start Block Picker----------------*/

    $("#btnBlock").click(function(e){
        BlockPicker();
    });

    function BlockPicker()
    {
        var oBlockMachineMapping={
            ProductionProcessInt:0,
            DepartmentID:0,
            BlockName:""
        }
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlockMachineMapping,
            ControllerName: "BlockMachineMapping",
            ActionName: "BlockMachineMapping_Search",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BMMID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblShift',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'BlockName',
                        windowTittle: 'Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBlocks=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNames += oBlocks[i].BlockName+",";
                        _sBMMIDs += oBlocks[i].BMMID+",";

                    }
                    _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                    _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
                    $("#txtBlock").val(_sBlockNames);
                }
                else
                {
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetBlock").click(function(e){
        $('#txtBlock').val("");
        _sBlockNames="";
        _sBMMIDs = "";
    });

    $("#txtBlock").keypress(function(e){
        if (e.which == 13)
        {
            BlockPicker();
        }
    });
    /*------------- End Block Picker----------------*/

    /*-------------Designation Picker----------------*/

    $("#btnDesignationPicker").click(function(e){
        var oDesignation={
            DesignationID:0,
            Params: $('#cboBU').val()+'~'+_sLocationID+'~'+ _sDepartmentID
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignation!=null && oDesignation.DesignationID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtDesignation').val(oDesignation.Name);
                    _sDesignationID=oDesignation.DesignationID;
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker").click(function(e){
        $('#txtDesignation').val("");
        _sDesignationID="";
    });

    /*----------------------end emp search----------------------*/

    function GetEmployeeOfficialInfo(EmpId)
    {
        debugger;
        var oEmployeeOfficial={EmployeeID:EmpId};
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/GetEmployeeOfficialInfo",
            data: JSON.stringify(oEmployeeOfficial),
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                debugger;
                _oEmployeeOfficialInfo = jQuery.parseJSON(data);
                if (_oEmployeeOfficialInfo!=null)
                {
                    document.getElementById("txtDRP").value=_oEmployeeOfficialInfo.DepartmentName;
                    document.getElementById("txtAttScheme").value=_oEmployeeOfficialInfo.AttendanceSchemeName;
                    $("#txtCurrentShift")[0].value=_oEmployeeOfficialInfo.CurrentShiftName;
                    
                    document.getElementById("txtCurrentEmployeeType").value=_oEmployeeOfficialInfo.EmployeeTypeName;

                    _nDRPID= _oEmployeeOfficialInfo.DRPID;
                    _nAttSID=_oEmployeeOfficialInfo.AttendanceSchemeID;
                    _nLocationID=_oEmployeeOfficialInfo.LocationID;
                    _nDepartmentID=_oEmployeeOfficialInfo.DepartmentID;
                    _nDesignationID=_oEmployeeOfficialInfo.DesignationID;
                    _nDRPIDForLoadDesignation=_oEmployeeOfficialInfo.DRPID;
                }
                else
                {
                    alert(_oEmployeeOfficialInfo.ErrorMessage);
                }
            },

        });
    }

    function GetSalaryStructure(EmpId)
    {
        debugger;
        var oEmployeeSalaryStructure={EmployeeID:EmpId};
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EmployeeSalaryStructure/GetSalaryStructure",
            data: JSON.stringify(oEmployeeSalaryStructure),
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                debugger;
                _oSalaryStructure = jQuery.parseJSON(data);
                if (_oSalaryStructure.ESSID>0)
                {
                    $("#txtSalaryScheme")[0].value=_oSalaryStructure.SalarySchemeName;
                    $("#txtGrossSalary")[0].value=_oSalaryStructure.GrossAmount;
                    $("#txtCompGrossSalary")[0].value=_oSalaryStructure.CompGrossAmount;

                    _nGrossAmount = _oSalaryStructure.GrossAmount;
                    _nCompGrossAmount = _oSalaryStructure.CompGrossAmount;

                    _nSalarySchemeID = _oSalaryStructure.SalarySchemeID;
                }
                else
                {
                    alert("This Employee Has No Salary Structure !");
                    Reset();
                    $("#txtEmployee").focus();
                    return;
                }
            },
        });
    }

    function Reset()
    {
        $("#txtEmployee").val("");
        $("#txtDRP").val("");
        $("#txtAttScheme").val("");
        $("#txtSalaryScheme").val("");
        $("#txtCurrentShift").val("");
        $("#txtGrossSalary").val("");
        $("#txtTPIDRP").val("");
        $("#txtTPIAttScheme").val("");
        $('#cboDesignation').empty();
        $("#txtTPISalaryScheme").val("");
        $("#txtTPIGrossSalary_Fixed").val("");
        _nEmployeeID=0;
        _nSalarySchemeID=0;
        _nTPIDRPID=0;
        _nTPIAttSID=0;
        _nAttSID=0;
        _nDRPID=0;
        _nLocationID=0;
        _nDepartmentID=0;
        _nTPISalarySchemeID=0;

    }

    $('#txtTPIDRP').keypress(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        var sDRPName = "";
        sDRPName = $("#txtTPIDRP").val();

        if (code == 13)//Enter key-13
        {
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/DepartmentRequirementPolicy/DRPPick",
                traditional: true,
                data: JSON.stringify({ sDRPName: sDRPName }),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oDRPs = jQuery.parseJSON(data);
                    if (oDRPs.length > 0 && oDRPs[0].ErrorMessage == "") {
                        $("#winDRP").icsWindow("open", " DRP List");
                        DynamicRefreshList(oDRPs, "tblDepartmentRequirementPolicy");
                        $('#tblDepartmentRequirementPolicy').datagrid('selectRow', 0);
                        $('#focusDRP').focus();
                    }
                    else {
                        alert('Data Not Found!')
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        }
    });

    $("#btnTPIDRP").click(function () {
        var sDRPName = "";
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/DepartmentRequirementPolicy/DRPPick",
            traditional: true,
            data: JSON.stringify({ sDRPName: sDRPName }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oDRPs = jQuery.parseJSON(data);
                if (oDRPs.length > 0 && oDRPs[0].ErrorMessage == "") {

                    $("#winDRP").icsWindow("open", " DRP List");
                    DynamicRefreshList(oDRPs, "tblDepartmentRequirementPolicy");
                    $('#tblDepartmentRequirementPolicy').datagrid('selectRow', 0);
                    $('#focusDRP').focus();
                }
                else {
                    alert('Data Not Found!')
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#winDRP").on("keydown", function (e) {
        var oDepartmentRequirementPolicy = $('#tblDepartmentRequirementPolicy').datagrid('getSelected');
        var nIndex = $('#tblDepartmentRequirementPolicy').datagrid('getRowIndex', oDepartmentRequirementPolicy);
        if (e.which == 38)//up arrow=38
        {
            if (nIndex <= 0) {
                $('#tblDepartmentRequirementPolicy').datagrid('selectRow', 0);
            }
            else {
                $('#tblDepartmentRequirementPolicy').datagrid('selectRow', nIndex - 1);
            }
            $('#txtDepartmentRequirementPolicy').blur();
        }
        if (e.which == 40)//down arrow=40
        {
            var oCurrentList = $('#tblDepartmentRequirementPolicy').datagrid('getRows');
            if (nIndex >= oCurrentList.length - 1) {
                $('#tblDepartmentRequirementPolicy').datagrid('selectRow', oCurrentList.length - 1);
            }
            else {
                $('#tblDepartmentRequirementPolicy').datagrid('selectRow', nIndex + 1);
            }
            $('#txtDepartmentRequirementPolicy').blur();
        }
        if (e.which == 13)//enter=13
        {
            var oSelectedDepartmentRequirementPolicy = $('#tblDepartmentRequirementPolicy').datagrid('getSelected');
            if (oSelectedDepartmentRequirementPolicy == null) {
                alert("Please select an item!");
                return;
            }
            if(oDepartmentRequirementPolicy.DepartmentRequirementPolicyID==_nDRPID)
            {
                alert("Please Select a Different Department !");
                return;
            }
            $("#txtTPIDRP")[0].value=oDepartmentRequirementPolicy.DepartmentName;
            _nTPIDRPID=oDepartmentRequirementPolicy.DepartmentRequirementPolicyID;
            _nLocationID=oDepartmentRequirementPolicy.LocationID;
            _nDepartmentID=oDepartmentRequirementPolicy.DepartmentID;
            _nDRPIDForLoadDesignation = 0;
            _nDRPIDForLoadDesignation = oDepartmentRequirementPolicy.DepartmentRequirementPolicyID;
            $("#winDRP").icsWindow('close');
        }
        if (e.which == 27)//escape=27
        {
            $("#winDRP").icsWindow('close');
        }
    });

    $("#DRPPickoK").click(function () {
        var oDepartmentRequirementPolicy = $('#tblDepartmentRequirementPolicy').datagrid('getSelected');
        if (oDepartmentRequirementPolicy == null) {
            alert("Please select an Contarctor!");
            return;
        }
        if(oDepartmentRequirementPolicy.DepartmentRequirementPolicyID==_nDRPID)
        {
            alert("Please Pick a Different DRP !");
            return;
        }
        $("#txtTPIDRP")[0].value=oDepartmentRequirementPolicy.DepartmentName;
        _nTPIDRPID=oDepartmentRequirementPolicy.DepartmentRequirementPolicyID;
        _nLocationID=oDepartmentRequirementPolicy.LocationID;
        _nDepartmentID=oDepartmentRequirementPolicy.DepartmentID;
        _nDRPIDForLoadDesignation = 0;
        _nDRPIDForLoadDesignation = oDepartmentRequirementPolicy.DepartmentRequirementPolicyID;
        $("#winDRP").icsWindow('close');
    });

    $("#AttSchemePickClose").click(function () {
        $("#winAttendanceScheme").icsWindow('close');
    });

    $("#DRPPickClose").click(function () {
        $("#winDRP").icsWindow('close');
    });

    $('#txtTPIAttScheme').keypress(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        var sASName = "";
        var sASName = $("#txtTPIAttScheme").val();

        if (code == 13)//Enter key-13
        {
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/AttendanceScheme/AttSchemePick",
                traditional: true,
                data: JSON.stringify({ sASName: sASName }),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oAttendanceSchemes = jQuery.parseJSON(data);
                    if (oAttendanceSchemes.length > 0 && oAttendanceSchemes[0].ErrorMessage == "") {

                        $("#winAttendanceScheme").icsWindow("open", " Attendance Scheme");
                        DynamicRefreshList(oAttendanceSchemes, "tblAttendanceScheme");
                        $('#tblAttendanceScheme').datagrid('selectRow', 0);
                        $('#focusAttendanceScheme').focus();
                    }
                    else {
                        alert('Data Not Found!')
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        }
    });

    $("#btnTPIAttScheme").click(function () {
        var sASName = "";
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceScheme/AttSchemePick",
            traditional: true,
            data: JSON.stringify({ sASName: sASName }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oAttendanceSchemes = jQuery.parseJSON(data);
                if (oAttendanceSchemes.length > 0 && oAttendanceSchemes[0].ErrorMessage == "") {

                    $("#winAttendanceScheme").icsWindow("open", " Attendance Scheme");
                    DynamicRefreshList(oAttendanceSchemes, "tblAttendanceScheme");
                    $('#tblAttendanceScheme').datagrid('selectRow', 0);
                    $('#focusAttendanceScheme').focus();
                }
                else {
                    alert('Data Not Found!')
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#winAttendanceScheme").on("keydown", function (e) {

        var oAttendanceScheme = $('#tblAttendanceScheme').datagrid('getSelected');
        var nIndex = $('#tblAttendanceScheme').datagrid('getRowIndex', oAttendanceScheme);
        if (e.which == 38)//up arrow=38
        {
            if (nIndex <= 0) {
                $('#tblAttendanceScheme').datagrid('selectRow', 0);
            }
            else {
                $('#tblAttendanceScheme').datagrid('selectRow', nIndex - 1);
            }
            $('#txtTPIAttScheme').blur();
        }
        if (e.which == 40)//down arrow=40
        {
            var oCurrentList = $('#tblAttendanceScheme').datagrid('getRows');
            if (nIndex >= oCurrentList.length - 1) {
                $('#tblAttendanceScheme').datagrid('selectRow', oCurrentList.length - 1);
            }
            else {
                $('#tblAttendanceScheme').datagrid('selectRow', nIndex + 1);
            }
            $('#txtTPIAttScheme').blur();
        }
        if (e.which == 13)//enter=13
        {

            var oSelectedAttendanceScheme = $('#tblAttendanceScheme').datagrid('getSelected');
            if (oSelectedAttendanceScheme == null) {
                alert("Please select an Contarctor!");
                return;
            }
            $("#txtTPIAttScheme")[0].value=oAttendanceScheme.Name;
            _nTPIAttSID=oAttendanceScheme.AttendanceSchemeID;
            GetRosterPlanDetail(oAttendanceScheme.RosterPlanID);
            $("#winAttendanceScheme").icsWindow('close');
        }
        if (e.which == 27)//escape=27
        {

            $("#winAttendanceScheme").icsWindow('close');

        }
    });

    $("#AttSchemePickoK").click(function () {
        var oAttendanceScheme = $('#tblAttendanceScheme').datagrid('getSelected');
        if (oAttendanceScheme == null) {
            alert("Please select an Contarctor!");
            return;
        }
        $("#txtTPIAttScheme")[0].value=oAttendanceScheme.Name;
        _nTPIAttSID=oAttendanceScheme.AttendanceSchemeID;
        GetRosterPlanDetail(oAttendanceScheme.RosterPlanID);
        $("#tblAttendanceScheme").icsWindow('close');
    });

    function GetDesignation()
    {
        if ( _nEmployeeID<=0) {
            alert("Please Pick an Employee!");
            return;
        }
        if ( _nDRPIDForLoadDesignation<=0) {
            alert("Invalid Department! Please pick a DRP for transfer !");
            return;
        }

        var tsv = ((new Date()).getTime()) / 1000;
        var oDesignations=[];
        $.ajax({
            type: "GET",
            dataType: "json",
            url: _sBaseAddress+ "/Designation/GetsByDRP",
            data:{ nDRPID: _nDRPIDForLoadDesignation,ts:tsv },
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oDesignations = jQuery.parseJSON(data);
                if (oDesignations[0].DesignationID>0)
                {
                    LoadDesignation(oDesignations) ;
                    if(_oTPI.IsPromotion==true)
                    {
                        if(_nTPIDesignationID>0)
                        {
                            $("#cboDesignation").val(_nTPIDesignationID);
                        }
                        else if( _nTPIDesignationID<=0 && _bFlag==false)
                        {
                            $("#cboDesignation").val(0);
                        }
                        else
                        {
                            $("#cboDesignation").val(_nDesignationID);
                        }
                    }
                }
                else
                {
                    return;
                }
            },

        });
    }

    function LoadDesignation(oDesignations)
    {
        $('#cboDesignation').empty();
        var listItems = "";
        listItems += "<option value='0'> --Select Designation-- </option>";
        for (var i = 0; i < oDesignations.length; i++)
        {
            listItems += "<option value='" + oDesignations[i].DesignationID + "'>" + oDesignations[i].Name + "</option>";
        }
        $("#cboDesignation").html(listItems);
    }

    $('#btnTPISalaryScheme').click(function (e)
    {
        if ( _nEmployeeID<=0)
        {
            alert("Please Pick an Employee!");
            return;
        }
        var code = (e.keyCode ? e.keyCode : e.which);
        var sSSName = "";
        var oSalaryScheme = { Name: sSSName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oSalaryScheme,
            ControllerName: "SalaryScheme",
            ActionName: "GetsBySalarySchemeName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].SalarySchemeID > 0) {

                    var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeTypeName", title: "EmployeeType", width: 140, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "NatureOfEmployeeInString", title: "Nature Of Employee", width: 140, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "PaymentCycleInString", title: "Payment Cycle", width: 140, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSalarySchemePicker',
                        winclass:'clsSalarySchemePicker',
                        winwidth: 625,
                        winheight: 460,
                        tableid: 'tblSalarySchemes',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Salary Scheme List'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeSalarySchemePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    $('#txtTPISalaryScheme').keypress(function (e)
    {
        if ( _nEmployeeID<=0)
        {
            alert("Please Pick an Employee!");
            return;
        }

        var code = (e.keyCode ? e.keyCode : e.which);
        var sSSName = document.getElementById("txtTPISalaryScheme").value;
        if (code == 13)//Enter key-13
        {
            var oSalaryScheme = { Name: sSSName};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oSalaryScheme,
                ControllerName: "SalaryScheme",
                ActionName: "GetsBySalarySchemeName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].SalarySchemeID > 0) {

                        var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "EmployeeTypeName", title: "EmployeeType", width: 140, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "NatureOfEmployeeInString", title: "Nature Of Employee", width: 140, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "PaymentCycleInString", title: "Payment Cycle", width: 140, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winSalarySchemePicker',
                            winclass:'clsSalarySchemePicker',
                            winwidth: 625,
                            winheight: 460,
                            tableid: 'tblSalarySchemes',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Salary Scheme List'
                        };

                        $.icsPicker(oPickerParam);
                        IntializeSalarySchemePickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });

        }
    });

    function IntializeSalarySchemePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winSalarySchemePicker')
            {
                if (oreturnObj != null && oreturnObj.SalarySchemeID > 0)
                {
                    $("#txtTPISalaryScheme")[0].value=oreturnObj.Name;
                    _nTPISalarySchemeID=oreturnObj.SalarySchemeID;

                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsSalarySchemePicker')
                {
                    if (oreturnObj != null && oreturnObj.SalarySchemeID > 0)
                    {
                        $("#txtTPISalaryScheme")[0].value=oreturnObj.Name;
                        _nTPISalarySchemeID=oreturnObj.SalarySchemeID;
                        LoadSalaryHeadGrid(_nTPISalarySchemeID,"SalaryScheme");
                    }
                }
            }
        });
    }

    $("#btnViewGrossSalary").click(function(e){

        if (_oSalaryStructure.ESSID <= 0)
        {
            alert("Please Pick a Salary Structure!");
            return;
        }
        $("#chkAllowBankAdvice").prop("checked",_oSalaryStructure.IsAllowBankAccount);
        $("#chkAllowOverTime").prop("checked",_oSalaryStructure.IsAllowOverTime);
        $('#chkProductionBase').prop('checked',_oSalaryStructure.IsProductionBase);
        if(_oSalaryStructure.IsAttendanceDependant==true)
        {
            $('#chkAttendanceDependent').prop('checked',_oSalaryStructure.IsAttendanceDependant);
            $('#tbdAttendanceDependent').show();
            $("#txtLateCount").prop("disabled", true);
            $("#txtEarlyLeavingCount").prop("disabled", true);
            $("#txtLateCount").val(_oTPI.LateCount);
            $("#txtEarlyLeavingCount").val(_oTPI.EarlyLeavingCount);
        }
        LoadSalaryStructureDetail(_oSalaryStructure.EmployeeSalaryStructureDetails);
        $("#winViewSalaryStructure").icsWindow('open');
    });

    $("#btnViewCompGrossSalary").click(function(e){

        if (_oSalaryStructure.ESSID <= 0)
        {
            alert("Please Pick a Salary Structure!");
            return;
        }
        $("#chkAllowBankAdvice").prop("checked",_oSalaryStructure.IsAllowBankAccount);
        $("#chkAllowOverTime").prop("checked",_oSalaryStructure.IsAllowOverTime);
        $('#chkProductionBase').prop('checked',_oSalaryStructure.IsProductionBase);
        if(_oSalaryStructure.IsAttendanceDependant==true)
        {
            $('#chkAttendanceDependent').prop('checked',_oSalaryStructure.IsAttendanceDependant);
            $('#tbdAttendanceDependent').show();
            $("#txtLateCount").prop("disabled", true);
            $("#txtEarlyLeavingCount").prop("disabled", true);
            $("#txtLateCount").val(_oTPI.LateCount);
            $("#txtEarlyLeavingCount").val(_oTPI.EarlyLeavingCount);
        }
        LoadSalaryStructureDetail(_oSalaryStructure.EmployeeSalaryStructureDetails);
        $("#winViewSalaryStructure").icsWindow('open');
    });

    function LoadSalaryStructureDetail(oSalaryStructureDetails)
    {
        var oBasicSalarySchemeDetails = [];
        var oAllowanceSalarySchemeDetails = [];
        for(var i=0;i<oSalaryStructureDetails.length;i++)
        {
            if(oSalaryStructureDetails[i].SalaryHeadType==1 )
            {
                oBasicSalarySchemeDetails.push(oSalaryStructureDetails[i]);
            }
            else if(oSalaryStructureDetails[i].SalaryHeadType!=1)
            {
                oAllowanceSalarySchemeDetails.push(oSalaryStructureDetails[i]);
            }
        }
        RefreshListForSalaryHeadOfBasicType(oBasicSalarySchemeDetails);
        RefreshListForSalaryHeadOfAllowanceType(oAllowanceSalarySchemeDetails);
    }

    function RefreshListForSalaryHeadOfBasicType(BasicSalarySchemeDetails)
    {
        var nBasicTotalAmount = 0;
        data = BasicSalarySchemeDetails;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblSalaryStructureDetailBasic').datagrid('loadData', data);
        debugger
        for(var i=0;i<BasicSalarySchemeDetails.length;i++)
        {
            nBasicTotalAmount = nBasicTotalAmount+ parseFloat(BasicSalarySchemeDetails[i].Amount);
        }
        $("#lblBasicTotal").html(formatPrice(nBasicTotalAmount));
    }

    function RefreshListForSalaryHeadOfAllowanceType(AllowanceSalarySchemeDetails)
    {
        var nAllowanceTotalAmount_Addition = 0;
        var nAllowanceTotalAmount_Deduction = 0;
        data = AllowanceSalarySchemeDetails;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblSalaryStructureDetailAllowance').datagrid('loadData', data);

        for(var i=0;i<AllowanceSalarySchemeDetails.length;i++)
        {
            if(AllowanceSalarySchemeDetails[i].SalaryHeadType ==2)
            {
                nAllowanceTotalAmount_Addition = nAllowanceTotalAmount_Addition+AllowanceSalarySchemeDetails[i].Amount;
            }
            else if(AllowanceSalarySchemeDetails[i].SalaryHeadType ==3)
            {
                nAllowanceTotalAmount_Deduction = nAllowanceTotalAmount_Deduction+AllowanceSalarySchemeDetails[i].Amount;
            }
        }
        //$("#lblAdditionAllowanceTotal").html(formatPrice(nAllowanceTotalAmount_Addition));
        //$("#lblDeductionAllowanceTotal").html(formatPrice(nAllowanceTotalAmount_Deduction));
    }

    $("#btnCloseViewSalaryStructure").click(function(e){
        $("#winViewSalaryStructure").icsWindow('close');
    });

    $('#txtTPIGrossSalary_Percent').keyup(function (e)
    {
        var nGrossSalary=$("#txtGrossSalary").val();
        var nPVal = parseFloat($("#txtTPIGrossSalary_Percent").val());
        $("#txtTPIGrossSalary_Fixed").val(parseFloat(nGrossSalary/100*(100+parseFloat(nPVal))));

    });
    $('#txtTPIGrossSalary_Fixed').keyup(function (e)
    {
        var nGrossSalary=$("#txtGrossSalary").val();
        var nFVal = parseFloat($("#txtTPIGrossSalary_Fixed").val());
        $("#txtTPIGrossSalary_Percent").val(parseFloat(nFVal-nGrossSalary)/nGrossSalary*100);

    });


    $('#txtCompTPIGrossSalary_Percent').keyup(function (e)
    {
        var nGrossSalary=$("#txtGrossSalary").val();
        var nPVal = parseFloat($("#txtCompTPIGrossSalary_Percent").val());
        $("#txtCompTPIGrossSalary_Fixed").val(parseFloat(nGrossSalary/100*(100+parseFloat(nPVal))));

    });
    $('#txtCompTPIGrossSalary_Fixed').keyup(function (e)
    {
        var nGrossSalary=$("#txtGrossSalary").val();
        var nFVal = parseFloat($("#txtCompTPIGrossSalary_Fixed").val());
        $("#txtCompTPIGrossSalary_Percent").val(parseFloat(nFVal-nGrossSalary)/nGrossSalary*100);

    });

    //Fixed Amount
    $('#txtTPIGrossSalary_FixedIncremented').keyup(function (e)
    {
        var nGrossSalary=parseFloat($("#txtGrossSalary").val());
        var nAmount=parseFloat($("#txtTPIGrossSalary_FixedIncremented").val());
        $('#txtCompTPIGrossSalary_FixedIncremented').val(nAmount);

        var nTotal = nGrossSalary + nAmount;
        $("#txtTPIGrossSalary_Fixed").val(nTotal);
        
        var nFVal = parseFloat($("#txtTPIGrossSalary_Fixed").val());
        $("#txtTPIGrossSalary_Percent").val(parseFloat(nFVal-nGrossSalary)/nTotal*100);
    });
    $('#txtCompTPIGrossSalary_FixedIncremented').keyup(function (e)
    {
        var nGrossSalary=parseFloat($("#txtCompGrossSalary").val());
        var nAmount=parseFloat($("#txtCompTPIGrossSalary_FixedIncremented").val());

        var nTotal = nGrossSalary + nAmount;
        $("#txtCompTPIGrossSalary_Fixed").val(nTotal);
        
        var nFVal = parseFloat($("#txtCompTPIGrossSalary_Fixed").val());
        $("#txtCompTPIGrossSalary_Percent").val(parseFloat(nFVal-nGrossSalary)/nTotal*100);

    });

    function ViewStructure_Validation()
    {
        RefreshListForSalaryHeadOfBasicType([]);
        RefreshListForSalaryHeadOfAllowanceType([]);
        var nGrossSalary=$("#txtGrossSalary").val();
        var nTPIGrossSalary_Fixed=$("#txtTPIGrossSalary_Fixed").val();
        var nTPIGrossSalary_Percent=$("#txtTPIGrossSalary_Percent").val();
        if ( _nEmployeeID<=0) {
            alert("Please Pick an Employee!");
            return false;
        }

        if ( nTPIGrossSalary_Fixed <=0) {
            alert("Please Enter Gross Salary or percent value!");
            $("#txtTPIGrossSalary_Fixed").focus();
            return false;
        }

        if(nGrossSalary==nTPIGrossSalary_Fixed)
        {
            alert("GrossSalary Must Not Be Same For The Same SalaryScheme !");
            return false;
        }
        return true;
    }

    $('#btnViewStructure').click(function (e)
    {
        debugger;

        LoadSalaryHeadGrid(_nTPISalarySchemeID,"SalaryScheme");
        if(!ViewStructure_Validation())return;
        CalculateHeadWiseSalaryAmount(_oSalaryStructureDetails);
        LoadSalaryStructureDetail(_oSalaryStructureDetails);
        $("#winViewSalaryStructure").icsWindow('open');
    });

    function LoadSalaryHeadGrid(nId,sType)
    {
        debugger
        var oESStructure = {ErrorMessage:nId+"~"+sType};
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oESStructure,
            ControllerName: "EmployeeSalaryStructure",
            ActionName: "GetSalaryStructure_Copy",
            IsWinClose: false
        };
        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj != null) {
                debugger
                _oSalaryStructureDetails = response.obj.EmployeeSalaryStructureDetails;
            }
            else { alert(response.obj.ErrorMessage); return;}
        });
    }

    function CalculateHeadWiseSalaryAmount(oSalaryStructureDetails)
    {
        var oTempSalaryStructureDetails=[];
        for(var i=0; i<oSalaryStructureDetails.length; i++)
        {
            if(oSalaryStructureDetails[i].SalarySchemeDetailCalculations!=null){
                var nAmount = GetAmount(oSalaryStructureDetails[i].SalarySchemeDetailCalculations);
                //comp
                var nCompAmount = GetCompAmount(oSalaryStructureDetails[i].SalarySchemeDetailCalculations);
                if(parseFloat(nAmount)>0 || parseFloat(nCompAmount)>0)
                {
                    SetSalaryHeadAmount(parseInt(oSalaryStructureDetails[i].SalaryHeadID), nAmount, nCompAmount);
                }
                else
                {
                    oTempSalaryStructureDetails.push(oSalaryStructureDetails[i]);
                }


                //if(parseFloat(nAmount)>0)
                //{
                //    SetSalaryHeadAmount(parseInt(oSalaryStructureDetails[i].SalaryHeadID), nAmount);
                //}
                //else
                //{
                //    oTempSalaryStructureDetails.push(oSalaryStructureDetails[i]);
                //}
            }

        }
        if(oTempSalaryStructureDetails.length>0)
        {
            CalculateHeadWiseSalaryAmount(oTempSalaryStructureDetails);
        }
    }

    function GetCompAmount(oSchemeDetailCalculations)
    {
        var sEquation="";
        var sGrossAmount= $("#txtCompTPIGrossSalary_Fixed").val();

        for(var i=0; i<oSchemeDetailCalculations.length;i++)
        {
            if(parseInt(oSchemeDetailCalculations[i].ValueOperatorInt)==2)//Operator=2
            {
                if(parseInt(oSchemeDetailCalculations[i].OperatorInt)!=7)
                {
                    sEquation=sEquation+oSchemeDetailCalculations[i].OperatorInString;
                }
                else
                {
                    if((i+1)>=oSchemeDetailCalculations.length)
                    {
                        //Must be a head exists
                        alert('Invalid equation!\nPlease check your equation!')
                        return;
                    }
                    if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==1)//Gross = 1
                    {
                        sEquation=sEquation+" ("+sGrossAmount +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==2)//SalaryItem = 2
                    {
                        //var nSalaryHeadAmount = GetSalaryHeadAmount(oSchemeDetailCalculations[i+1].SalaryHeadID);
                        //Comp
                        var nSalaryHeadCompAmount = GetSalaryHeadCompAmount(oSchemeDetailCalculations[i+1].SalaryHeadID);
                        if(parseFloat(nSalaryHeadCompAmount)<=0){ return 0.00; }
                        sEquation=sEquation+" ("+parseFloat(nSalaryHeadCompAmount).toFixed(2) +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==3)//Fixed = 3
                    {
                        sEquation=sEquation+" ("+oSchemeDetailCalculations[i+1].FixedValue +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    i=i+1;
                }
            }
            else
            {
                if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==1)//Gross = 1
                {
                    sEquation=sEquation+" "+sGrossAmount;
                }
                else if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==2)//SalaryItem = 2
                {
                    var nSalaryHeadCompAmount = GetSalaryHeadCompAmount(oSchemeDetailCalculations[i].SalaryHeadID);
                    if(parseFloat(nSalaryHeadCompAmount)<=0){ return 0.00; }
                    sEquation=sEquation+" "+parseFloat(nSalaryHeadCompAmount).toFixed(2)+" ";
                }
                else if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==3)//Fixed = 3
                {
                    sEquation=sEquation+" "+oSchemeDetailCalculations[i].FixedValue;
                }
            }
        }
        return parseFloat(eval(sEquation));
    }



    function GetAmount(oSchemeDetailCalculations)
    {
        var sEquation="";
        var sGrossAmount= $("#txtTPIGrossSalary_Fixed").val();

        for(var i=0; i<oSchemeDetailCalculations.length;i++)
        {
            if(parseInt(oSchemeDetailCalculations[i].ValueOperatorInt)==2)//Operator=2
            {
                if(parseInt(oSchemeDetailCalculations[i].OperatorInt)!=7)
                {
                    sEquation=sEquation+oSchemeDetailCalculations[i].OperatorInString;
                }
                else
                {
                    if((i+1)>=oSchemeDetailCalculations.length)
                    {
                        //Must be a head exists
                        alert('Invalid equation!\nPlease check your equation!')
                        return;
                    }
                    if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==1)//Gross = 1
                    {
                        sEquation=sEquation+" ("+sGrossAmount +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==2)//SalaryItem = 2
                    {
                        var nSalaryHeadAmount = GetSalaryHeadAmount(oSchemeDetailCalculations[i+1].SalaryHeadID);
                        if(parseFloat(nSalaryHeadAmount)<=0){ return 0.00; }
                        sEquation=sEquation+" ("+parseFloat(nSalaryHeadAmount).toFixed(2) +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(oSchemeDetailCalculations[i+1].CalculationOnInt)==3)//Fixed = 3
                    {
                        sEquation=sEquation+" ("+oSchemeDetailCalculations[i+1].FixedValue +"*"+oSchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    i=i+1;
                }
            }
            else
            {
                if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==1)//Gross = 1
                {
                    sEquation=sEquation+" "+sGrossAmount;
                }
                else if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==2)//SalaryItem = 2
                {
                    var nSalaryHeadAmount = GetSalaryHeadAmount(oSchemeDetailCalculations[i].SalaryHeadID);
                    if(parseFloat(nSalaryHeadAmount)<=0){ return 0.00; }
                    sEquation=sEquation+" "+parseFloat(nSalaryHeadAmount).toFixed(2)+" ";
                }
                else if(parseInt(oSchemeDetailCalculations[i].CalculationOnInt)==3)//Fixed = 3
                {
                    sEquation=sEquation+" "+oSchemeDetailCalculations[i].FixedValue;
                }
            }
        }
        return parseFloat(eval(sEquation));
    }

    function GetSalaryHeadCompAmount(nSalaryHeadID){
        for(var i=0; i<_oSalaryStructureDetails.length; i++)
        {
            if(parseInt(_oSalaryStructureDetails[i].SalaryHeadID)===parseInt(nSalaryHeadID))
            {
                return  parseFloat(_oSalaryStructureDetails[i].CompAmount);
            }
        }
        return parseFloat(0.00);
    }


    function GetSalaryHeadAmount(nSalaryHeadID){
        for(var i=0; i<_oSalaryStructureDetails.length; i++)
        {
            if(parseInt(_oSalaryStructureDetails[i].SalaryHeadID)===parseInt(nSalaryHeadID))
            {
                return  parseFloat(_oSalaryStructureDetails[i].Amount);
            }
        }
        return parseFloat(0.00);
    }

    function SetSalaryHeadAmount(nSalaryHeadID, nAmount, nCompAmount){
        for(var i=0; i<_oSalaryStructureDetails.length; i++)
        {
            if(parseInt(_oSalaryStructureDetails[i].SalaryHeadID)===parseInt(nSalaryHeadID))
            {
                _oSalaryStructureDetails[i].Amount = parseFloat(nAmount);
                _oSalaryStructureDetails[i].CompAmount = parseFloat(nCompAmount);
                break;
            }
        }
    }

    function ValidateInput()
    {
        if($("#txtEmployee").val()==""||$("#txtEmployee").val()==null)
        {
            alert("Please Enter Employee !");
            $("#btnEmployee").focus();
            return false;
        }

        if (!$('#chkTransfer').is(":checked") && !$('#chkPromotion').is(":checked") && !$('#chkIncrement').is(":checked"))
        {
            alert("Please Check At Least One: Transfer, Promotion or Increment !");
            $("#chkTransfer").focus();
            return false;
        }

        if ($('#chkTransfer').is(":checked"))
        {

            if($("#txtTPIDRP").val()==""||$("#txtTPIDRP").val()==null)
            {
                alert("Please Select a Department !");
                $("#btnTPIDRP").focus();
                return false;
            }
            if($("#txtTPIAttScheme").val()==""||$("#txtTPIAttScheme").val()==null)
            {
                alert("Please Select Att. Scheme !");
                $("#btnTPIAttScheme").focus();
                return false;
            }
            if($("#cboShift").val()==0)
            {
                alert("Please Select Shift !");
                $("#cboShift").focus();
                return false;
            }
        }

        if ($('#chkPromotion').is(":checked"))
        {
            if($("#cboDesignation").val()<=0)
            {
                alert("Please Load Designation !");
                $("#btnDesignation").focus();
                return false;
            }
        }

        if ($('#chkIncrement').is(":checked"))
        {
            var nTPIGrossSalary_Fixed=$("#txtTPIGrossSalary_Fixed").val();
            if ( nTPIGrossSalary_Fixed <=0) {
                alert("Please Enter Gross Salary or percent value!");
                $("#txtTPIGrossSalary_Fixed").focus();
                return false;
            }
            var nGrossSalary=$("#txtTPIGrossSalary").val()
            if(nGrossSalary==nTPIGrossSalary_Fixed)
            {
                alert("GrossSalary Must Not Be Same For The Same SalaryScheme !");
                return false;
            }
        }
        //debugger;
        //var EffectedDate=$('#dtEffectedOn').datebox('getValue');
        //var EffectedDateTime=new Date(EffectedDate);
        //var ND= new Date();
        //ND.setHours(0,0,0,0);
        //if(EffectedDateTime<ND)
        //{
        //    alert("EffectedDate Must Not be Less Than Current Date !");
        //    $("#dtEffectedOn").focus();
        //    return false;
        //}

        return true;
    }

    function RefreshObject()
    {
        debugger;
        var IsCashFixed = false;
        if ($("#chkBank").is(':checked')) {
            IsCashFixed = false;
        }
        if ($("#chkCash").is(':checked')) {
            IsCashFixed = true;
        }

        var oTPI =
        {
            TPIID:_oTPI.TPIID,
            EmployeeID:_nEmployeeID,
            DesignationID:_nDesignationID,
            DRPID :_nDRPID,
            ASID :_nAttSID,
            SalarySchemeID :_nSalarySchemeID,
            GrossSalary :$("#txtGrossSalary").val(),
            IsTransfer : $('#chkTransfer').is(":checked"),
            IsPromotion : $('#chkPromotion').is(":checked"),
            IsIncrement : $('#chkIncrement').is(":checked"),
            TPIDesignationID :$("#cboDesignation").val(),
            TPIDRPID :_nTPIDRPID,
            TPIASID :_nTPIAttSID,
            TPISalarySchemeID :_nTPISalarySchemeID,
            TPIShiftID :$("#cboShift").val(),
            TPIGrossSalary :$("#txtTPIGrossSalary_Fixed").val(),
            CompTPIGrossSalary :$("#txtCompTPIGrossSalary_Fixed").val(),
            //TPIIsFixedAmount :document.getElementById("chkIncludeFixedItem").checked,
            Note :$("#txtNote").val(),
            EffectedDate : $('#dtEffectedOn').datebox('getValue'),
            EmployeeTypeID:_nEmployeeTypeID,
            TPIEmployeeTypeID:$("#cboEmployeeType").val(),
            IsNoHistory:$('#chkNoHistory').is(":checked"),
            IsCashFixed : IsCashFixed,
            CashAmount:$("#txtCash").val()
        };
        return oTPI;
    }

    $('#btnSave').click(function (e)
    {
        debugger;
        if (!ValidateInput() ) return;
        var oTPI = RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/TransferPromotionIncrement/TransferPromotionIncrement_IU",
            traditional: true,
            data: JSON.stringify(oTPI),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                oTPI = jQuery.parseJSON(data);
                if (oTPI.ErrorMessage == "")
                {
                    alert("Data Saved sucessfully");
                    var oTPIs =sessionStorage.getItem("TPIs");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));

                    if(oTPIs!=null)
                    {
                        oTPIs = jQuery.parseJSON(oTPIs);
                    }
                    else
                    {
                        oTPIs=[];
                    }
                    if(nIndex!=-1)
                    {
                        oTPIs[nIndex]=oTPI;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oTPIs.length);
                        oTPIs.push(oTPI);
                    }
                    debugger
                    sessionStorage.setItem("TPIs", JSON.stringify(oTPIs));
                    window.location.href = _sBaseAddress+ "/TransferPromotionIncrement/View_TPIs?menuid="+_nMenuid;
                }
                else
                {
                    alert(oTPI.ErrorMessage);
                }
            },
        });
    });

    function GetDRP()
    {
        var  oDPI={DepartmentRequirementPolicyID:_nNDRPID};
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress+ "/TransferPromotionIncrement/GetDRP",
            data: JSON.stringify(oDPI),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oDRPs = jQuery.parseJSON(data);
                if (oDRPs.DepartmentRequirementPolicyID>0)
                {
                    _nLocationID=oDRPs.LocationID;
                    _nDepartmentID=oDRPs.DepartmentID;
                    _nDRPIDForLoadDesignation=oDRPs.DepartmentRequirementPolicyID;
                    GetDesignation();
                }
                else
                {
                    return;
                }
            },

        });
    }

    $('#cboDesignation').change(function (e)
    {
        debugger;
        var DID=$("#cboDesignation").val();
        if(_nDesignationID==DID)
        {
            alert("Please Select A Different Designation !");
            $("#cboDesignation").val(0);
            return;
        }
        if($('#cboDesignation').val() > 0) {
            debugger;
            var oDesignation = { DesignationID: $('#cboDesignation').val() }

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oDesignation,
                ControllerName: "Designation",
                ActionName: "getDesignation",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj.DesignationID > 0) {
                    debugger;
                    var _oDesignation = response.obj;

                    if (_oDesignation.EmployeeTypeID > 0) {
                        $("#cboEmployeeType").val(_oDesignation.EmployeeTypeID);
                        _nEmployeeTypeID = _oDesignation.EmployeeTypeID;
                    }
                    else {
                        $("#cboEmployeeType").icsLoadCombo({
                            List: _oEmployeeTypes,
                            OptionValue: "EmployeeTypeID",
                            DisplayText: "Name",
                            InitialValue: "--Select Employee Type--"
                        });
                    }
                }
            });
        }
    });

    function GetRosterPlanDetail(RosterPlanID)
    {
        if (RosterPlanID<=0 || RosterPlanID==null)
        {
            alert('Invalid Roster plan !');
            return;
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/RosterPlan/GetRosterPlanDetail",
            traditional: true,
            data:  JSON.stringify({nID:RosterPlanID}),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oRosterPlanDetails = jQuery.parseJSON(data);
                if (oRosterPlanDetails.length > 0) {

                    RefreshShift(oRosterPlanDetails);
                    document.getElementById("cboShift").value=_oTPI.TPIShiftID;
                }
                else {
                    alert(_oRosterPlanDetails[0].ErrorMessage);
                }
            },
        });
    }

    function RefreshShift(oRosterPlanDetails)
    {
        var listSelectedShifts="";
        listSelectedShifts="<option value='"+0+"'>" +"--Select Shift--" + "</option>";
        if(oRosterPlanDetails.length>0)
        {
            for (var j = 0; j <  oRosterPlanDetails.length; j++)
            {
                listSelectedShifts += "<option value='" + oRosterPlanDetails[j].ShiftID+"'>" + oRosterPlanDetails[j].Shift+"</option>";
            }
        }
        $("#cboShift").html(listSelectedShifts);

    }

    function GetAttScheme(AttSID)
    {
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/TransferPromotionIncrement/GetAttScheme",
            traditional: true,
            data:  JSON.stringify({nID:AttSID}),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oAttS = jQuery.parseJSON(data);
                if (oAttS!=null && oAttS.AttendanceSchemeID>0) {

                    GetRosterPlanDetail(oAttS.RosterPlanID);


                }
                else {
                    alert(oAttS.ErrorMessage);
                }
            },
        });

    }

    $('#btnCancel').click(function (e)
    {
        window.location.href = _sBaseAddress+ "/TransferPromotionIncrement/View_TPIs?menuid="+_nMenuid;
        //window.location.href = _sBaseAddress+ "/TransferPromotionIncrement/View_TPIs?menuid="+_nMenuid;
    });

    $('#txtEmployee').keydown(function (e)
    {
        if (e.keyCode == 8)
        {
            $("#txtEmployee").val("");
        }
    });

    $('#txtTPIDRP').keydown(function (e)
    {
        if (e.keyCode == 8)
        {
            $("#txtTPIDRP").val("");
        }
    });

    $('#txtTPIAttScheme').keydown(function (e)
    {
        if (e.keyCode == 8)
        {
            $("#txtTPIAttScheme").val("");
        }
    });

    $('#txtTPISalaryScheme').keydown(function (e)
    {
        if (e.keyCode == 8)
        {
            $("#txtTPISalaryScheme").val("");
        }
    });

    $(document).keydown(function (e) { if (e.keyCode == 27) { $('div').icsWindow('close'); } });

    $('#btnApprove').click(function (e)
    {
        if (!confirm("Confirm to Approve?")) return;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/TransferPromotionIncrement/TransferPromotionIncrement_Approve",
            traditional: true,
            data: JSON.stringify({oTPI:_oTPI}),
            contentType: "application/json; charset=utf-8",

            success: function(data) {

                oTPI = jQuery.parseJSON(data);
                if (oTPI.TPIID > 0)
                {
                    if(oTPI.ApproveBy>0)
                    {
                        alert("Data Saved sucessfully");
                        var oTPIs =sessionStorage.getItem("TPIs");
                        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));

                        if(oTPIs!=null)
                        {
                            oTPIs = jQuery.parseJSON(oTPIs);
                        }
                        else
                        {
                            oTPIs=[];
                        }
                        if(nIndex!=-1)
                        {
                            oTPIs[nIndex]=oTPI;
                        }
                        else
                        {
                            sessionStorage.setItem("SelectedRowIndex", oTPIs.length);
                            oTPIs.push(oTPI);
                        }
                        debugger
                        sessionStorage.setItem("TPIs", JSON.stringify(oTPIs));
                        window.location.href = _sBaseAddress+ "/TransferPromotionIncrement/View_TPIs?menuid="+_nMenuid;
                    }
                }
                else
                {
                    alert(oTPI.ErrorMessage);
                }
            }
        });
    });

</script>