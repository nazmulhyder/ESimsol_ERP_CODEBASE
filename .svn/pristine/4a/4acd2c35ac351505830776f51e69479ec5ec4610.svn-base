@{
    ViewBag.Title = "Batch List";
}
@model IEnumerable<ESimSol.BusinessObjects.FNProductionBatch>
<div class="menuMainCollectionTable" ng-app="FNProductionBatchApp" style="height:500px;overflow:hidden;">

    <div ng-controller="FNProductionBatchTransferController">
        <div class="region-tab" style="height:30px;">
            <div class="tab">
                <button id="btnTransfer" class="tablinks" ng-class="active" ng-click="openTab($event)">Waiting For Transfer</button>
                <button id="btnReceive" class="tablinks" ng-click="openTab($event)">Waiting For Receive</button>
             
            </div>
        </div>
        <div>
            <div id="region-Transfer" style="overflow:no-display;" ng-if="regionTransfer">
                <div title="Transfer List" class=" ui-grid-top-panel">
                    <div class="container" style="width:99%">
                        <div class="form-inline">
                            <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Transfer()"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Transfer</button>
                        </div>
                    </div>
                </div>
                <div ui-grid="gridOptionsForTransfer" ui-grid-selection class="grid-angular"></div>

            </div>
            <div id="region-Dyeing" ng-if="regionReceive">
                <div title="FNProductionBatch List" class="ui-grid-top-panel">
                    <div class="container" style="width:99%">
                        <div class="form-inline">
                            <input type="checkbox" ng-model="$parent.chkDate" class="form-control" />
                            <div class="input-group date date-container">  
                                <input type="text" class="form-control" ng-init="initializeDatepicker()" ;style="width:85px" ng-model="$parent.dtTransferFrom" ng-disabled="!chkDate"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                            </div>
                            <span>to</span>
                            <div class="input-group date date-container">
                                <input type="text" class="form-control" ng-init="initializeDatepicker()"  style="width:85px" ng-model="$parent.dtTransferTo" ng-disabled="!chkDate"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                            </div>
                            <input type="text" ng-model="$parent.txtFNExeNo" class="form-control" style="width:150px" ng-keydown="SearchKeyDownFNExeNo($event)" placeholder="Type Order No & Press Enter" />
                            <input type="text" ng-model="$parent.txtBatchNo" class="form-control" style="width:150px" placeholder="Type Batch No & Press Enter" ng-keydown="SearchKeyDownFNBatch($event)" />
                            <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="FNBatchSearch()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                           
                            <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="FNBatchReceive()"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Receive</button>
                           
                        </div>

                    </div>
                    <div ui-grid="gridOptionsForReceive" ui-grid-selection class="grid-angular"></div>

                </div>
            </div>
<script type="text/ng-template" id="divTransfer.html">

<div class="modal-header">
    <h4 class="modal-title" id="modal-title">Transfer Information</h4>
</div>
<div class="modal-body regionSearch">
    <fieldset style="margin-bottom: 0px;">
      
        <div class="col-md-12">
            <div class="col-md-3" style="font-weight:bold; text-align:right;">Transfer No:</div>
            <div class="col-md-3"><input type="text" ng-model="txtTransferNo" class="form-control" style="width:100%"  disabled/></div>
            <div class="col-md-3" style="font-weight:bold; text-align:right;">FN Treatment:</div>
            <div class="col-md-3">
                <select ng-model="FNTreatment" ng-options="obj.id as obj.Value for obj in TreatmentProcess"  class="form-control"></select>
            </div>
        </div>
      
        <div class="col-md-12" style="padding-top:3px;">
            <div class="col-md-3" style="font-weight:bold; text-align:right;">Note:</div>
            <div class="col-md-3"><input type="text" ng-model="txtNote" class="form-control" style="width:100%" placeholder="Type Remarks "/></div>
            <div class="col-md-3" style="font-weight:bold; text-align:right;">Transfer By:</div>
            <div class="col-md-3"><input type="text" ng-model="txtTransferBy" class="form-control" style="width:100%" disabled /></div>
        </div>

      
    </fieldset>
</div>
<div class="modal-footer">
   
    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="TransferFNBatch()"> <span class="glyphicon glyphicon-floppy-save" aria-hidden="true"></span> Transfer</button>
    <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-folder-close" aria-hidden="true"></span> Close</button>
</div>

</script>

            <script type="text/ng-template" id="divReceive.html">

                <div class="modal-header">
                    <h4 class="modal-title" id="modal-title">Transfer Information</h4>
                </div>
                <div class="modal-body regionSearch">
                    <fieldset style="margin-bottom: 0px;">
                        <legend>Transfer Information</legend>
                        <div class="col-md-12">
                            <div class="col-md-3" style="font-weight:bold; text-align:right;">Transfer No:</div>
                            <div class="col-md-3"><input type="text" ng-model="txtTransferNo" class="form-control" style="width:100%" disabled /></div>
                            <div class="col-md-3" style="font-weight:bold; text-align:right;">FN Treatment:</div>
                            <div class="col-md-3">
                                <select ng-model="FNTreatment" ng-options="obj.id as obj.Value for obj in TreatmentProcess" ng-disabled="true" class="form-control"></select>
                            </div>
                        </div>

                        <div class="col-md-12" style="padding-top:3px;">
                            <div class="col-md-3" style="font-weight:bold; text-align:right;">Note:</div>
                            <div class="col-md-3"><input type="text" ng-model="txtNote" class="form-control" style="width:100%"  disabled /></div>
                            <div class="col-md-3" style="font-weight:bold; text-align:right;">Transfer By:</div>
                            <div class="col-md-3"><input type="text" ng-model="txtTransferBy" class="form-control" style="width:100%" disabled /></div>
                        </div>


                    </fieldset>
                    <div ui-grid="gridOptionsForTransferBatch" style="width:100%;height:300px;"></div>
                </div>
                <div class="modal-footer">

                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="ReceiveFinalFNBatch()"> <span class="glyphicon glyphicon-floppy-save" aria-hidden="true"></span> Receive</button>
                    <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-folder-close" aria-hidden="true"></span> Close</button>
                </div>

            </script>
        </div>
    </div>
</div>


            <style type="text/css">
                .grid-angular {
                    width: 100%;
                    height: 480px;
                }

                .input-group-addon {
                    padding: 3px 6px;
                }

                .form-control {
                    height: 24px;
                    padding: 0px 4px;
                    font-size: 12px;
                }

                /*-------Navigation Tab---------*/
                /* Style the tab */
                .region-tab div.tab {
                    overflow: hidden;
                    border: none;
                    background-color: #FFFFFF;
                    height: 30px;
                }
                /* Style the buttons inside the tab */
                div.tab button {
                    background-color: inherit;
                    float: left;
                    border: none;
                    outline: none;
                    cursor: pointer;
                    padding-top: 10px;
                    padding-right: 10px;
                    padding-left: 10px;
                    transition: 0.3s;
                }

                .region-tab div.tab label {
                    background-color: inherit;
                    float: right;
                    border: none;
                    outline: none;
                    cursor: pointer;
                    padding: 6px 10px;
                    /*transition: 0.3s;*/
                    font-weight: bold;
                }
                /* Change background color of buttons on hover */
                div.tab button:hover {
                    border-bottom: 2px solid blue;
                }
                /* Create an active/current tablink class */
                div.tab button.active {
                    border-bottom: 2px solid blue;
                    background-color: #E0ECFF;
                }
            </style>



<script type="text/javascript">

    var oFNProductionBatchs =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oFNProductionBatchTransfers=@Html.Raw(Json.Encode(@ViewBag.FNProductionBatchTransfers));
    var oFNTreatments=@Html.Raw(Json.Encode(@ViewBag.FNTreatments));
    var SelectedTreatment =@Html.Raw(Json.Encode(ViewBag.TreatmentProcess));
    var TransferByName =@Html.Raw(Json.Encode(@ViewBag.TransferByName));

    var CCapp= angular.module('FNProductionBatchApp', ['ngAnimate','ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.cellNav','ms.service', 'ui.grid.pinning','Transfer.service','Receive.service']);
    CCapp.controller('FNProductionBatchTransferController',function ($scope, $http,   $uibModal, $log, uiGridConstants, msModal, userSession ,Transferservice ,ReceiveService)
    {
        //oFNProductionBatchs= (userSession.getData('FNProductionBatchs').length>0)? userSession.getData('FNProductionBatchs'):oFNProductionBatchs;
        debugger;
        $scope.active ="active";
        $scope.regionTransfer =true;
        $scope.regionReceive =false;
        $scope.FNTreatments =oFNTreatments;
        $scope.openTab= function(event) {
            var i, tablinks;
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace("active", "");
            }
            document.getElementById(event.target.id).classList.add("active");

             if(event.target.id==='btnTransfer'){
                 $scope.regionTransfer =true;
                 $scope.regionReceive =false;
            }
             if(event.target.id==='btnReceive'){
                 $scope.regionTransfer =false;
                 $scope.regionReceive =true;
             }
        }
        $scope.initializeDatepicker = function(){
            $('.date-container').datepicker({
                format: "dd M yyyy",
                calendarWeeks: true,
                autoclose: true,
                todayHighlight: true
            });}
        $scope.chkDate =false;
        $scope.dtTransferFrom=$scope.dtTransferTo=icsdateformat(new Date());
        $scope.txtFNExeNo="";  
        $scope.txtBatchNo="";
        $scope.FNBatchIDs =""; 
        $scope.FNOrderIDs ="";
        $scope.SearchKeyDownFNBatch = function (e) {
                  
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtBatchNo = $.trim($scope.txtBatchNo);
                if (txtBatchNo == "" || txtBatchNo == null) {
                        
                    msModal.Message({ headerTitle: '', bodyText: 'Type Batch No and Press Enter', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                    return;
                }
                $scope.getsFNBatch();
            } else if (code == 8) 
            {
                $scope.txtBatchNo = '';
                $scope.FNBatchIDs ="";
            }
        };
        $scope.getsFNBatch = function () {
             
                
            var oSupplier = {
                BatchNo: $scope.txtBatchNo
            }
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress + '/FNProductionBatchQuality/GetsFNBatch', $.param(oSupplier), config).then(
                                function (response) {
                                    debugger;
                                    var results = jQuery.parseJSON(response.data);
                                    var modalObj = {
                                        size: 'sm',
                                        title: 'Batch List',
                                        url: _sBaseAddress + '/Home/Modal',
                                        modalController: 'ContractorModalCtrl',
                                        appController: 'GRNController',
                                        objs: results,
                                        multiSelect: true,
                                        columns: [{ field: 'BatchNo', name: 'Batch No' }]
                                    }
                                       
                                    var modalInstance = msModal.Instance(modalObj);
                                        
                                    modalInstance.result.then(function (result) {
                                        debugger;
                                        var count=1;
                                        var FNBatchIDs="";
                                        angular.forEach(result,function(item ,index){
                                            FNBatchIDs+=item.FNBatchID+',';
                                            count+=(index);
                                        });
                                        $scope.FNBatchIDs= FNBatchIDs.substring(0,FNBatchIDs.length-1);
                                        $scope.txtBatchNo=count+" item Selected";
                                            
                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message); }
                            );
        };
      
                
        $scope.SearchKeyDownFNExeNo = function (e) {
                  
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtFNExeNo = $.trim($scope.txtFNExeNo);
                if (txtFNExeNo == "" || txtFNExeNo == null) {
                        
                    msModal.Message({ headerTitle: '', bodyText: 'Type Order No and Press Enter', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                    return;
                }
                $scope.getsFNOrders();
            } else if (code == 8) 
            {
                $scope.txtFNExeNo = '';
                $scope.FNOrderIDs  ="";
            }
        };
        $scope.getsFNOrders = function () {
            debugger;
            var FNOrder = {
                FNExONo: $scope.txtFNExeNo
            }
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress + '/FNProductionBatchQuality/GetsFNExeOrders', $.param(FNOrder), config).then(
                                function (response) {
                                    debugger;
                                    var results = jQuery.parseJSON(response.data);
                                    var modalObj = {
                                        size: 'sm',
                                        title: 'Order List',
                                        url: _sBaseAddress + '/Home/Modal',
                                        modalController: 'ContractorModalCtrl',
                                        appController: 'GRNController',
                                        objs: results,
                                        multiSelect: true,
                                        columns: [{ field: 'FNExONo', name: 'Order No' }]
                                    }
                                       
                                    var modalInstance = msModal.Instance(modalObj);
                                        
                                    modalInstance.result.then(function (result) {
                                        debugger;
                                        var count=0;
                                        var FNOrderIDs ="";
                                        angular.forEach(result,function(item ,index){
                                            FNOrderIDs+=item.FNExOID+',';
                                            count+=(index);
                                        });
                                        $scope.FNOrderIDs=FNOrderIDs.substring(0, FNOrderIDs.length-1);
                                        $scope.txtFNExeNo=count+" item Selected";

                                      
                                            
                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message); }
                            );
        };

        $scope.gridOptionsForTransfer= {
            multiSelect: true,
            enableFullRowSelection: true,
            columnDefs: [
            { field: 'BatchNo', name:'Batch No',cellClass: 'text-left', width:'8%' },
            { field: 'FNExONo', name:'Order No',cellClass: 'text-left', width:'8%' },
            { field: 'StartDateTimeSt', name:'Start Time',cellClass: 'text-left', width:'12%' },
            { field: 'EndDateTimeSt', name:'End Time',cellClass: 'text-left', width:'12%' },
            { field: 'StartBatcherName', name:'Start Batcher',cellClass: 'text-left', width:'12%' },
            { field: 'EndBatcherName', name:'End Batcher',cellClass: 'text-left', width:'12%' },
            { field: 'StartQty', name:'Start Qty',cellClass: 'text-right', width:'7%' },
            { field: 'EndQty', name:'End Qty',cellClass: 'text-right', width:'7%' },
            { field: 'StartWidth', name:'Start Width',cellClass: 'text-right', width:'10%' },
            { field: 'EndWidth', name:'End Width', width:'8%' ,cellClass: 'text-right', enableSorting: false}
            ],
            data: oFNProductionBatchs,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                //$scope.gridApi.selection.selectRow($scope.gridOptions.data[userSession.getRowIndex()]);
                userSession.clear();

            }
        };
        $scope.gridOptionsForReceive= {
            multiSelect: false,
            enableFullRowSelection: true,
            columnDefs: [
            { field: 'FNPBTransferNo', name:'Transfer No',cellClass: 'text-left', width:'15%' },
            { field: 'FNTreatmentStr', name:'Treatment Type',cellClass: 'text-left', width:'12%' },
            { field: 'TransferNote', name:'Note',cellClass: 'text-left', width:'12%' },

            { field: 'TransferByName', name:'Transfer By',cellClass: 'text-left', width:'15%' },
            { field: 'RecvByName', name:'Received By',cellClass: 'text-left', width:'15%' }

            ],
            data: oFNProductionBatchTransfers,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApiForReceive = gridApi;
                $scope.gridApiForReceive.selection.clearSelectedRows();
                //$scope.gridApiForReceive.selection.selectRow($scope.gridOptions.data[userSession.getRowIndex()]);

            }
        };
        $scope.FNBatchSearch =function(){

            var oFNBatchTransfer = {
                Params:$scope.FNOrderIDs +'~' +$scope.FNBatchIDs +'~'+  $scope.chkDate+'~'+ $scope.dtTransferFrom+'~'+$scope.dtTransferTo
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FNProductionBatchTransfer/GetsFNProductionBatchTransfer', $.param(oFNBatchTransfer), config).then(
                        function (response)
                        {   
                          
                            var oFNPBTs = jQuery.parseJSON(response.data);
                            if (oFNPBQs.length>0)
                            {
                                $scope.gridOptionsForReceive.data=oFNPBQs;
                            } else {
                                alert("Data Not Found.");
                                       
                                return;
                            }
                                    
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message); }
                    );

        }



        $scope.Transfer=function()
        {
            debugger;
            var oFNProductionBatchs=$scope.gridApi.selection.getSelectedRows();
            if(oFNProductionBatchs.length<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(!confirm("Are you Sure to transfer?"))
                return;
            var modalObj={
                modalcontroller:'ModalQCCtrl',
                appcontroller:'FNProductionBatchTransferController',
                FNProductionBatchs:oFNProductionBatchs,
                TreatmentProcess:$scope.FNTreatments,
                SelectedTreatment :SelectedTreatment,
                TransferByName:TransferByName
            }
            var modalInstance=Transferservice.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                window.location.href = window.location.href;

            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        }
        $scope.FNBatchReceive =function(){
            var oFNProductionBatchTransfer=$scope.gridApiForReceive.selection.getSelectedRows()[0];
            if(oFNProductionBatchTransfer==null)
            {
                alert("Please select a item from list!");
                return;
            }
            if(!confirm("Are you Sure to Receive?"))
                return;

            var oFNPBTransfer = {
                 FNPBTransferID:oFNProductionBatchTransfer.FNPBTransferID
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/FNProductionBatchTransfer/GetFNTransfer',JSON.stringify(oFNPBTransfer)).then(
                        function (response)
                        {
                            var oFNPBT = jQuery.parseJSON(response.data);
                            if (oFNPBT.FNPBTransferID>0)
                            {
                                var modalObj={
                                    modalcontroller:'ModalQCCtrl',
                                    appcontroller:'FNProductionBatchTransferController',
                                    FNPBTransfer:oFNPBT,
                                    TreatmentProcess:$scope.FNTreatments,
                                    
                                }
                                var modalInstance=ReceiveService.Instance(modalObj);
                                modalInstance.result.then(function (result)
                                {
                                    window.location.href = window.location.href;

                                }, function () {
                                    $log.info('Modal dismissed at: ' + new Date());
                                });
                            } else {
                                alert("Data Not Found.");
                                return;
                            }

                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message); }
                    );



           
        }

    });

    var masterfnppservice = angular.module('Transfer.service', ['ms.service', 'ngAnimate', 'ui.bootstrap']);
    masterfnppservice.service('Transferservice', function ($uibModal) {

        this.Instance = function (modalProperty) {
            var modalInstance = {
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'divTransfer.html',
                controller: 'ModalQCCtrl',
                controllerAs: (modalProperty.appcontroller == undefined) ? '' : modalProperty.appcontroller,
                resolve: {
                    obj: function () {
                        return {

                            FNProductionBatchs:(modalProperty.FNProductionBatchs == undefined) ? [] : modalProperty.FNProductionBatchs
                            ,TreatmentProcess:(modalProperty.TreatmentProcess == undefined) ? [] : modalProperty.TreatmentProcess
                             ,SelectedTreatment:(modalProperty.SelectedTreatment == undefined) ? 0 : modalProperty.SelectedTreatment
                              ,TransferByName:(modalProperty.TransferByName == undefined) ?"" : modalProperty.TransferByName


                        };
                    }

                }
            }

            modalInstance.controller = function ($http, $scope, $log, $uibModalInstance, uiGridConstants,msModal,icsMethod, obj) {
                debugger;
                $scope.txtTransferNo="";
                $scope.TreatmentProcess = obj.TreatmentProcess;
                $scope.FNTreatment=obj.SelectedTreatment ;
                $scope.txtNote="";
                $scope.txtTransferBy=obj.TransferByName.UserName;
                $scope.FNProductionBatchs=obj.FNProductionBatchs;

                $scope.TransferFNBatch = function ()
                {
                   
                    var TempFNProductionBatchTransfer={
                        FNTreatment:$scope.FNTreatment,
                        TransferNote: $scope.txtNote
                    }
                    var FNProductionBatchTransferDetails=[];
                    for(var i=0;i<$scope.FNProductionBatchs.length;i++){
                        FNProductionBatchTransferDetails.push({FNPBTransferDetailID:0,FNPBTransferID:0,FNPBatchID:$scope.FNProductionBatchs[i].FNPBatchID});
                    }

                    debugger;
                    var FNProductionBatchTransferDetail = {
                        TempFNProductionBatchTransfer:TempFNProductionBatchTransfer,
                        FNProductionBatchTransferDetails:FNProductionBatchTransferDetails,
                        FNPBTransferID:0

                    };
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(_sBaseAddress+'/FNProductionBatchTransfer/TransferFBPBatch',JSON.stringify(FNProductionBatchTransferDetail)).then(
                                function (response)
                                {
                                    var oFNPBQ = jQuery.parseJSON(response.data);
                                    if (oFNPBQ.FNPBTransferID>0)
                                    {
                                        alert("Successfully Transfered.");
                                        $uibModalInstance.close(oFNPBQ);
                                    } else {
                                        alert("Data Not Found.");
                                        return;
                                    }

                                },
                                    function (response) { alert(jQuery.parseJSON(response.data).Message); }
                            );
                };

                $scope.Close = function () {
                    $uibModalInstance.dismiss('cancel');
                };
            }
            return $uibModal.open(modalInstance);
        }
    });
    var masterfnppservice = angular.module('Receive.service', ['ms.service', 'ngAnimate', 'ui.bootstrap']);
    masterfnppservice.service('ReceiveService', function ($uibModal) {

        this.Instance = function (modalProperty) {
            var modalInstance = {
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'divReceive.html',
                controller: 'ModalQCCtrl',
                controllerAs: (modalProperty.appcontroller == undefined) ? '' : modalProperty.appcontroller,
                resolve: {
                    obj: function () {
                        return {

                            FNPBTransfer:(modalProperty.FNPBTransfer == undefined) ? null : modalProperty.FNPBTransfer
                            ,TreatmentProcess:(modalProperty.TreatmentProcess == undefined) ? [] : modalProperty.TreatmentProcess
                             
                        };
                    }

                }
            }

            modalInstance.controller = function ($http, $scope, $log, $uibModalInstance, uiGridConstants,msModal,icsMethod, obj) {
                debugger;
            
                $scope.txtTransferNo=obj.FNPBTransfer.FNPBTransferNo;
                $scope.TreatmentProcess = obj.TreatmentProcess;
                $scope.FNTreatment=obj.FNPBTransfer.FNTreatment ;
                $scope.txtNote=obj.FNPBTransfer.TransferNote;
                $scope.txtTransferBy=obj.FNPBTransfer.TransferByName;
                $scope.gridOptionsForTransferBatch= {
                    multiSelect: false,
                    enableFullRowSelection: true,
                    columnDefs: [
                    { field: 'BatchNo', name:'Batch No',cellClass: 'text-left', width:'25%' },
                    
                    { field: 'StartQty', name:'Start Qty',cellClass: 'text-right', width:'15%' },
                    { field: 'EndQty', name:'End Qty',cellClass: 'text-right', width:'15%' },
                    { field: 'StartWidth', name:'Start Width',cellClass: 'text-right', width:'15%' },
                    { field: 'EndWidth', name:'End Width',cellClass: 'text-right', width:'12%' }
                   ],
                    data: obj.FNPBTransfer.FNProductionBatchTransferDetails,
                    onRegisterApi : function(gridApi)
                    {
                        $scope.gridApiForReceive = gridApi;
                       
                    }
                };
             
                $scope.ReceiveFinalFNBatch = function ()
                {
                   
                    debugger;
                    var oFNProductionBatchTransfer = {
                        FNPBTransferID:obj.FNPBTransfer.FNPBTransferID,
                            FNTreatment:obj.FNPBTransfer.FNTreatment,
                       TransferNote:obj.FNPBTransfer.TransferNote
                    

                    };
                    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                    $http.post(_sBaseAddress+'/FNProductionBatchTransfer/ReceiveFBPBatch',JSON.stringify(oFNProductionBatchTransfer)).then(
                                function (response)
                                {
                                    var oFNPBQ = jQuery.parseJSON(response.data);
                                    if (oFNPBQ.FNPBTransferID>0)
                                    {
                                        alert("Successfully Received.");
                                        $uibModalInstance.close(oFNPBQ);
                                    } else {
                                        alert("Data Not Found.");
                                        return;
                                    }

                                },
                                    function (response) { alert(jQuery.parseJSON(response.data).Message); }
                            );
                };

                $scope.Close = function () {
                    $uibModalInstance.dismiss('cancel');
                };
            }
            return $uibModal.open(modalInstance);
        }
    });
    
    
</script>
