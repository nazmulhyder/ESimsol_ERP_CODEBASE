@{
    ViewBag.Title = "Loan Refund";
}
@model IEnumerable<ESimSol.BusinessObjects.EmployeeLoanRefund>

    <div class="menuMainCollectionTable">
        <table id="tblEmployeeLoanRefund" title="Employee Loan Refunds" class="easyui-datagrid" fit="true" fitcolumn="true" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbar">
            <thead>
                <tr>
                    <th field="RefundNo" width="8%" align="center">Refund No</th>
                    <th field="RefundDateStr" width="10%" align="center">Refund Date</th>
                    <th field="EmployeeNameCode" width="15%" align="center">Employee Name</th>
                    <th field="LoanCode" width="8%" align="center">Loan Code</th>
                    <th field="NoOfInstallmentRefund" formatter="formatPrice" width="10%" align="center">No Inst. Refund</th>
                    <th field="Amount" formatter="formatPrice" width="8%" align="right">Amount</th>
                    <th field="ServiceCharge" formatter="formatPrice" width="10%" align="right">Service Charge</th>
                    <th field="Note" width="15%" align="left">Note</th>
                    <th field="ApproveDateStr" width="10%" align="center">Approve Date</th>
                    <th field="ApproveByName" width="15%" align="left">Approve By</th>
                </tr>
            </thead>

        </table>
     
        <div id="toolbar">
            <input type="checkbox" id="chkDate"/>
            <input id="dtFrom" type="text" style="width: 100px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /> To
            <input id="dtTo" type="text" style="width: 100px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
            <input type="text" id="txtRefundNo" placeholder="Search Refund No" style="width:12%;" />
            <input type="text" id="txtEmployeeNameCode" placeholder="Search Employee" style="width:12%;" />
            <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true"></a>
            <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">New</a>
            <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
            <a id="btnView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
            <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
            <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Approve</a>
            <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
        </div>

        <div id="winLoanRefund" class="easyui-window" title="Loan Refund" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <fieldset>
                <table id="tblPanel" style="text-align:center; margin-right:10px; ">
                    <tr>
                        <td class="td-col-5 align-right">
                            <label>Loan Refund No:</label>
                        </td>
                        <td class="td-col-5">
                            <input type="text" id="txtLoanRefundNo" class="reset-text"/>
                        </td>
                        <td class="td-col-5 align-right">
                            <label>Refund Date:</label>
                        </td>
                        <td class="td-col-5">
                            <input id="dtRefundDate" type="text" style="width: 110px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-col-5 align-right">
                            <label>Employee Name:</label>
                        </td>
                        <td colspan="3" class="td-col-15">
                            <input id="txtEmployee" class="reset-text txt-styler-picker" placeholder="Search Employee" />
                            <a id="btnPickEmployee" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnResetEmployee" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-col-5 align-right">
                            <label>Employee Loan:</label>
                        </td>
                        <td colspan="3" class="td-col-15">
                            <input id="txtEmployeeLoan" class="reset-text txt-styler-picker" placeholder="Search Loan" />
                            <a id="btnPickLoan" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnResetLoan" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-col-5 align-right" valign="top">
                            <label>Loan Detail:</label>
                        </td>
                        <td colspan="3" class="td-col-15">
                            <textarea id="txtLoanDetail" class="reset-text" placeholder="Loan info" disabled></textarea>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-col-5 align-right">
                            <label>Inst. Refund:</label>
                        </td>
                        <td class="td-col-5">
                            <input id="txtNoOfInstalment" type="number" min="0" pattern="^[0-9]" step="1" class="reset-text only-number txt-styler" />
                        </td>
                        <td class="td-col-5 align-right">
                            <label>Amount:</label>
                        </td>
                        <td class="td-col-5">
                            <input type="text" id="txtAmount" class="number reset-text" disabled/>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-col-5 align-right">
                            <label>Service Charge:</label>
                        </td>
                        <td colspan="3" class="td-col-15">
                            <input type="text" id="txtServiceCharge" class="number reset-text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-col-5 align-right">
                            <label>Note:</label>
                        </td>
                        <td colspan="3" class="td-col-15">
                            <input type="text" id="txtNote" class="reset-text" />
                        </td>
                    </tr>
                </table>

            </fieldset>
            <fieldset class="actionfieldsetstyle">
                <legend>Actions : </legend>
                <div style="text-align:right;">
                    <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </div>

            </fieldset>
        </div>

    </div>

    <style type="text/css">
        #tblPanel {
            width: 550px;
        }

        .td-col-5 label {
            width: 100%;
        }

        .td-col-15 select {
            width: 97%;
        }

        .td-col-15 input,textarea {
            width: 95%;
        }
        .td-col-5 input {
            width: 85%;
        }
        .td-col-15 .txt-styler-picker{
            width:79%;
        }
    </style>

    <script type="text/javascript">

    var _sBaseAddress="";
    var _oEmployeeLoanRefunds=[];
    var _oEmployeeLoanRefund=null;

    $(document).ready(function () {
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oEmployeeLoanRefunds =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        $('.number').icsCurrencyBox();
        DynamicRefreshList(_oEmployeeLoanRefunds,'tblEmployeeLoanRefund');
        ResetControll();
        $('#dtFrom, #dtTo').datebox({'disabled' : true});
        $('#dtFrom, #dtTo').datebox('setValue', icsdateformat(new Date()));
    });
    $(document).keydown(function (e) { if (e.keyCode == 27) { $('#div').icsWindow('close'); } });

    $('#tblEmployeeLoanRefund').datagrid({ onSelect: function (rowIndex, rowData) { OperationPerforms(rowIndex, rowData); } });


    $('#chkDate').change(function(e){

        if( $('#chkDate').is(':checked')){
            $('#dtFrom, #dtTo').datebox({'disabled' : false});
        }
        else{
            $('#dtFrom, #dtTo').datebox({'disabled' : true});
        }
        $('#dtFrom, #dtTo').datebox('setValue', icsdateformat(new Date()));
    });

    function OperationPerforms(rowIndex, rowData) {
        debugger;
        if (rowData != null && rowData.ELRID > 0) {
            if (rowData.ApproveBy<=0) {
                $('#btnEdit,#btnDelete,#btnView,#btnApprove').show();
                $('#btnPrint').hide();
            }
            else {
                $('#btnEdit,#btnDelete,#btnApprove').hide();
                $('#btnView,#btnPrint').show();
            }
        }
    }

    /*.......... Searching ............. */


    $("#txtRefundNo").keyup(function (e) {
        debugger;

        var oEmployeeLoanRefunds =[];
        var keyCode = e.keyCode || e.which;
        $('#txtRefundNo').removeClass("errorFieldBorder");
        if (keyCode == 8) { oEmployeeLoanRefunds = _oEmployeeLoanRefunds; }
        else{ oEmployeeLoanRefunds = $('#tblEmployeeLoanRefund').datagrid('getRows'); }
        if (e.keyCode == 13) // Enter Press
        {
            if (!$.trim($("#txtRefundNo").val()).length) {

                alert("Please enter refund no to search.");
                $('#txtRefundNo').focus();
                $('#txtRefundNo').val("");
                return;
            }
            else { $('#txtRefundNo').removeClass("errorFieldBorder"); }

            var oEmployeeLoanRefund={
                Params:   $.trim($("#txtRefundNo").val())+'~'+ "" + "~" + $('#chkDate').is(':checked')+ '~' + $('#dtFrom').datebox('getValue')+ '~' + $('#dtTo').datebox('getValue')

            };
            debugger;
            GetsEmployeeLoanRefund(oEmployeeLoanRefund,false);
        }
        else {
            var sTempName="";
            var oSearchedData = [];
            for(i=0;i<oEmployeeLoanRefunds.length;++i)
            {
                sTempName=oEmployeeLoanRefunds[i]['RefundNo'];
                if(sTempName.toUpperCase().indexOf($('#txtRefundNo').val().toUpperCase())>-1)
                {
                    oSearchedData.push(oEmployeeLoanRefunds[i]);
                }
            }
            $('#tblEmployeeLoanRefund').empty();
            if (oSearchedData.length == 0) { DynamicRefreshList(_oEmployeeLoanRefunds, "tblEmployeeLoanRefund");}
            else { DynamicRefreshList(oSearchedData, "tblEmployeeLoanRefund"); }

        }
    });


    $("#txtEmployeeNameCode").keyup(function (e) {
        var oEmployeeLoanRefunds =[];
        var keyCode = e.keyCode || e.which;
        $('#txtEmployeeNameCode').removeClass("errorFieldBorder");
        if (keyCode == 8) { oEmployeeLoanRefunds = _oEmployeeLoanRefunds; }
        else{ oEmployeeLoanRefunds = $('#tblEmployeeLoanRefund').datagrid('getRows'); }
        if (e.keyCode == 13) // Enter Press
        {
            if (!$.trim($("#txtEmployeeNameCode").val()).length) {

                alert("Please enter employee name/ code to search.");
                $('#txtEmployeeNameCode').focus();
                $('#txtEmployeeNameCode').val("");
                return;
            }
            else { $('#txtEmployeeNameCode').removeClass("errorFieldBorder"); }

            var oEmployeeLoanRefund={
                Params:   ""+'~'+$.trim($("#txtEmployeeNameCode").val()) +"~"+ $('#chkDate').is(':checked')+ '~' + $('#dtFrom').datebox('getValue')+ '~' + $('#dtTo').datebox('getValue')

            };
            GetsEmployeeLoanRefund(oEmployeeLoanRefund,false);
        }
        else {
            var sTempName="";
            var oSearchedData = [];
            for(i=0;i<oEmployeeLoanRefunds.length;++i)
            {
                sTempName=oEmployeeLoanRefunds[i]['EmployeeNameCode'];
                if(sTempName.toUpperCase().indexOf($('#txtEmployeeNameCode').val().toUpperCase())>-1)
                {
                    oSearchedData.push(oEmployeeLoanRefunds[i]);
                }
            }
            $('#tblEmployeeLoanRefund').empty();
            if (oSearchedData.length == 0) { DynamicRefreshList(_oEmployeeLoanRefunds, "tblEmployeeLoanRefund");}
            else { DynamicRefreshList(oSearchedData, "tblEmployeeLoanRefund"); }

        }
    });


    $('#btnSearch').click(function(e){

        if($.trim($("#txtRefundNo").val())=="" && $.trim($("#txtEmployeeNameCode").val())=="" && !$('#chkDate').is(':checked')){
            alert("No searching criteria found to search."); return false;
        }
        var oEmployeeLoanRefund={
            Params:   $.trim($("#txtRefundNo").val()) +'~'+$.trim($("#txtEmployeeNameCode").val()) +"~"+ $('#chkDate').is(':checked') + '~' + $('#dtFrom').datebox('getValue')+ '~' + $('#dtTo').datebox('getValue')

        };
        GetsEmployeeLoanRefund(oEmployeeLoanRefund, false) ;
    });

    function GetsEmployeeLoanRefund(oEmployeeLoanRefund, bIsAdvSearch) {
        debugger;
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeLoanRefund,
            ControllerName: "EmployeeLoan",
            ActionName: "GetsEmployeeLoanRefund",
            IsWinClose: bIsAdvSearch
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs != null) {
                if (response.objs.length > 0) {
                    if(response.objs[0].ELRID>0){
                        _oEmployeeLoanRefunds=response.objs;
                        DynamicRefreshList(response.objs, "tblEmployeeLoanRefund");
                    }
                    else{DynamicRefreshList([], "tblEmployeeLoanRefund"); alert(response.objs[0].ErrorMessage);}
                }
                else { DynamicRefreshList([], "tblEmployeeLoanRefund"); alert("No refund found."); }
            }
        });
    }



    /*...........................................................*/

    function GetLoanRefund(bIsReadonly){
        var oEmployeeLoanRefund = $('#tblEmployeeLoanRefund').datagrid('getSelected');
        if(oEmployeeLoanRefund==null || oEmployeeLoanRefund.ELRID<=0){
            alert("Please select an item from list.");
            return false;
        }
        ResetControll();
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeLoanRefund,
            ControllerName: "EmployeeLoan",
            ActionName: "GetLoanRefund",
            IsWinClose: false
        };
        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj != null) {
                debugger;
                if(response.obj.ELRID>0){
                    RefreshControll(oEmployeeLoanRefund);
                    if(bIsReadonly){
                        $('#winLoanRefund input,textarea').prop("disabled",true);
                        $('#winLoanRefund .td-col-15 .txt-styler-picker').css('width','95%');
                        $('.ics-pick, #btnSave').hide();
                    }
                    else{
                        $('#winLoanRefund .td-col-15 .txt-styler-picker').css('width','79%');
                    }
                    $("#winLoanRefund").icsWindow('open');
                }
                else{
                    alert(response.obj.ErroMessage);
                }
            }
            else{
                alert("Invalid loan refund");
            }
        });
    }

    function Save(oEmployeeLoanRefund, sActionName, sMessage){
        var obj =
         {
             BaseAddress: _sBaseAddress,
             Object: oEmployeeLoanRefund,
             ObjectId: oEmployeeLoanRefund.ELRID,
             ControllerName: "EmployeeLoan",
             ActionName: sActionName,
             TableId: "tblEmployeeLoanRefund",
             IsWinClose: true,
             Message: sMessage
         };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.ELRID > 0) {
                    OperationPerforms(-1, response.obj);
                }
            }
        });
    }

    $('#btnAdd').click(function (e) {
        ResetControll();
        $("#winLoanRefund").icsWindow('open');
    });

    $('#btnEdit').click(function (e) {
        GetLoanRefund(false);
    });

    $('#btnView').click(function (e) {
        GetLoanRefund(true);
    });

    $('#btnDelete').click(function (e) {
        var oEmployeeLoanRefund = $('#tblEmployeeLoanRefund').datagrid('getSelected');
        if(oEmployeeLoanRefund==null || oEmployeeLoanRefund.ELRID<=0) { alert("Please select an item from list."); return false; }
        if (oEmployeeLoanRefund.ApproveBy>0) { alert('Unable to delete. Already approved.'); return false; }
        if (!confirm("Confirm to Delete?")) return false;

        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeLoanRefund,
            ControllerName: "EmployeeLoan",
            ActionName: "DeleteLoanRefund",
            TableId: "tblEmployeeLoanRefund",
            IsWinClose: false
        };
        $.icsDelete(obj);
    });

    $('#btnApprove').click(function (e) {

        var oEmployeeLoanRefund = $('#tblEmployeeLoanRefund').datagrid('getSelected');
        if(oEmployeeLoanRefund==null || oEmployeeLoanRefund.ELRID<=0) { alert("Please select an item from list."); return false; }

        if (!confirm((oEmployeeLoanRefund.ApproveBy>0)?"Confirm to Approve?" : "Confirm to Approve?")) return false;

        Save(oEmployeeLoanRefund, "ApproveLoanRefund", "Approve Successfully.")
    });

    $('#btnPrint').click(function (e)
    {
        var oELR = $('#tblEmployeeLoanRefund').datagrid('getSelected');
        if (oELR ==null || oELR.ELRID <=0 ) { alert("Please select an item from list."); return ; }
        if(oELR.ApproveBy<=0){
            alert("Yet not approved.");
            return false;
        }
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/EmployeeLoan/PrintLoanRefund?nId="+oELR.ELRID+"&nts="+tsv, "_blank");
    });
   /*-----------------------------------------------------------*/
   
    function ResetLoanInfo(){
        
        $('#dtRefundDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtEmployeeLoan').data('EmployeeLoanID',0);
        $('#txtNoOfInstalment').data('Installments',[]);
        $('#txtNoOfInstalment').data('RemainingInstallment',0);
        $('#txtAmount').data('RefundableAmount',0);

        $('#txtLoanDetail').val("");
        $('#txtNoOfInstalment').val("");
        $('#txtAmount').val("");
    }

    function ResetControll(){
        _oEmployeeLoanRefund=null;
        $('#winLoanRefund input,textarea').not('#txtLoanDetail, #txtAmount').prop("disabled",false);
        $('#txtEmployee').data('EmployeeID',0);
        ResetLoanInfo();
        $('#winLoanRefund .reset-text').val("");
        $('#winLoanRefund .td-col-15 .txt-styler-picker').css('width','79%');
        $('.ics-pick, #btnSave').show();
    }

    function RefreshControll(oEmployeeLoanRefund){
        _oEmployeeLoanRefund=oEmployeeLoanRefund;
        $('#txtLoanRefundNo').val(oEmployeeLoanRefund.RefundNo);
        $('#dtRefundDate').datebox('setValue', oEmployeeLoanRefund.RefundDateStr);
        $('#txtEmployee').val(oEmployeeLoanRefund.EmployeeNameCode);
        $('#txtEmployeeLoan').val(oEmployeeLoanRefund.LoanCode);
        $('#txtNoOfInstalment').val(oEmployeeLoanRefund.NoOfInstallmentRefund);
        $('#txtAmount').val(formatPrice(oEmployeeLoanRefund.Amount));
        $('#txtServiceCharge').val(formatPrice(oEmployeeLoanRefund.ServiceCharge));
        $('#txtNote').val(oEmployeeLoanRefund.Note);

        GetLoan({EmployeeLoanID:oEmployeeLoanRefund.EmployeeLoanID});
    }

    function RefreshObject(){
        var oEmployeeLoanRefund={
            ELRID : (_oEmployeeLoanRefund!=null && _oEmployeeLoanRefund.ELRID>0)? _oEmployeeLoanRefund.ELRID : 0,
            EmployeeLoanID : parseInt($('#txtEmployeeLoan').data('EmployeeLoanID')),
            NoOfInstallmentRefund : parseInt($('#txtNoOfInstalment').val()),
            Amount : parseFloat(icsRemoveComma($('#txtAmount').val())),
            ServiceCharge : parseFloat(icsRemoveComma($('#txtServiceCharge').val())),
            Note : $.trim($('#txtNote').val()),
            RefundNo : $.trim($('#txtLoanRefundNo').val()),
            RefundDate : $('#dtRefundDate').datebox('getValue')
        };
        return oEmployeeLoanRefund;
    }

    function Validation(){

        
        if($.trim($("#txtLoanRefundNo").val())==''){
            $('#txtLoanRefundNo').focus();
            $('#txtLoanRefundNo').addClass("errorFieldBorder");
            alert('Loan refund no reuired.');
            return false;
        }
        else{
            $('#txtLoanRefundNo').removeClass("errorFieldBorder");
        }

        if(parseInt($("#txtEmployee").data('EmployeeID'))<=0){
            $('#txtEmployee').focus();
            $('#txtEmployee').addClass("errorFieldBorder");
            alert('No employee found.');
            return false;
        }
        else{
            $('#txtEmployee').removeClass("errorFieldBorder");
        }

        if(parseInt($("#txtEmployeeLoan").data('EmployeeLoanID'))<=0){
            $('#txtEmployeeLoan').focus();
            $('#txtEmployeeLoan').addClass("errorFieldBorder");
            alert('No loan found.');
            return false;
        }
        else{
            $('#txtEmployeeLoan').removeClass("errorFieldBorder");
        }
        
        if(parseFloat(icsRemoveComma($("#txtAmount").val()))<=0){
            $('#txtAmount').focus();
            $('#txtAmount').addClass("errorFieldBorder");
            alert('Amount required.');
            return false;
        }
        else{
            $('#txtAmount').removeClass("errorFieldBorder");
        }
        if(parseFloat(icsRemoveComma($("#txtAmount").val()))>parseFloat($("#txtAmount").data('RefundableAmount')) ){
            $('#txtAmount').focus();
            $('#txtAmount').addClass("errorFieldBorder");
            alert('Max. refundable amount '+ formatPrice(parseFloat($("#txtAmount").data('RefundableAmount'))));
            return false;
        }
        else{
            $('#txtAmount').removeClass("errorFieldBorder");
        }
        return true;
    }

    $("#btnSave").click(function () {
        debugger;
        if(!Validation()) return false;
        var oEmployeeLoanRefund = RefreshObject();
        Save(oEmployeeLoanRefund, "SaveLoanRefund", ((oEmployeeLoanRefund.ELRID>0)?"Update Successfully." : "Save Successfully."));
    });

    $("#btnClose").click(function () {
        $('#winLoanRefund').icsWindow('close');
    });

    $('.only-number').keydown(function (e) {

        if ((e.which >= 48 && e.which <= 57) || (e.which >= 96 && e.which <= 105)|| e.which==9 || e.which==38 || e.which==40 || e.which==8 || e.which==37 || e.which==39 || e.which==46 ||  e.which==27) {
            return true;
        }
        else {
            return false
        }
    });


    /*-------------------Get Employee--------------------------*/
    $("#btnResetEmployee").click(function () {
        $("#txtEmployee").val("");
        $('.emp-info').val("");
        $('#txtEmployee').data('EmployeeID',0);
        ResetLoanInfo();
    });

    $("#btnPickEmployee").click(function () {

        var sEmployeeName=$.trim($("#txtEmployee").val());
        if(sEmployeeName==""){ alert("Type employee name to search."); return false; }
        GetEmployees(sEmployeeName);
    });

    $("#txtEmployee").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var sEmployeeName=$.trim($("#txtEmployee").val());
            if(sEmployeeName==""){ alert("Type employee name to search."); return false; }
            GetEmployees(sEmployeeName);
        }
        else if(nkeyCode==8){
            $("#txtEmployee").val("");
            $('.emp-info').val("");
            $('#txtEmployee').data('EmployeeID',0);
            ResetLoanInfo();
        }
    });

    function GetEmployees(sEmployeeName){

        var oEmployee = { Params:sEmployeeName+'~'+0 };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeForLoan",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "NameCode", title: "Name", width: 180, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 90, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 110, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winEmployeePicker',
                        winclass:'clsEmployeePicker',
                        winwidth: 450,
                        winheight: 400,
                        tableid: 'tblEmployeePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'NameCode',
                        windowTittle: 'Employee List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerbutton(oPickerParam);//multiplereturn, winclassName
                    $('#tblEmployeePicker').datagrid('selectRow',0);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No employee found.");
            }
        });


    }

    function IntializeEmployeePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            EmployeeSelect(oPickerobj);
        });
        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                EmployeeSelect(oPickerobj);
            }
        });
    }

    function EmployeeSelect(oPickerobj){
        var oEmployee = $('#'+oPickerobj.tableid).datagrid('getSelected');
        if (oPickerobj.winid == 'winEmployeePicker')
        {
            if(oEmployee !=null  && oEmployee.EmployeeID>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                $('#txtEmployee').val(oEmployee.NameCode);
                $('#txtEmployee').data('EmployeeID',oEmployee.EmployeeID);
                $('#txtEmployeeLoan').focus().select();
            }
            else{
                alert("Please select employee.");
            }
        }
    }

    /*-------------------Gets Loan--------------------------*/
    
    $("#btnResetLoan").click(function () {
        $("#txtEmployeeLoan").val("");
        ResetLoanInfo();
    });

    $("#btnPickLoan").click(function () {

        var sLoanCode=$.trim($("#txtEmployeeLoan").val());
        //if(sLoanCode==""){ alert("Type employee name to search."); return false; }
        GetLoans(sLoanCode);
    });

    $("#txtEmployeeLoan").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var sLoanCode=$.trim($("#txtEmployeeLoan").val());
            //if(sLoanCode==""){ alert("Type employee name to search."); return false; }
            GetLoans(sLoanCode);
        }
        else if(nkeyCode==8){
            $("#txtEmployeeLoan").val("");
            ResetLoanInfo();
        }
    });

    function GetLoans(sLoanCode){

        if(parseInt($("#txtEmployee").data('EmployeeID'))<=0){
            alert("Please select employee first");
            return false;
        }

        var oEmployeeLoan = { EmployeeID:$("#txtEmployee").data('EmployeeID') };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeLoan,
            ControllerName: "EmployeeLoan",
            ActionName: "GetsRefundableLoan",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeLoanID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Loan Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "LoanAmount", title: "Loan Amount", width: 100, align: "right", formatter:formatPrice };tblColums.push(oColumn);
                    oColumn = { field: "InstallmentAmount", title: "Inst. Amount", width: 90, align: "right",formatter:formatPrice };tblColums.push(oColumn);
                    oColumn = { field: "RefundableAmount", title: "Refundable Amount", width: 115, align: "right",formatter:formatPrice };tblColums.push(oColumn);
                    
                    var oPickerParam = {
                        winid: 'winLoanPicker',
                        winclass:'clsLoanPicker',
                        winwidth: 480,
                        winheight: 400,
                        tableid: 'tblLoanPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Code',
                        windowTittle: 'Loan List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeEmployeeLoanPickerbutton(oPickerParam);//multiplereturn, winclassName
                    $('#tblLoanPicker').datagrid('selectRow',0);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No loan found.");
            }
        });


    }

    function IntializeEmployeeLoanPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            EmployeeLoanSelect(oPickerobj);
        });
        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                EmployeeLoanSelect(oPickerobj);
            }
        });
    }

    function EmployeeLoanSelect(oPickerobj){
        debugger;
        var oEmployeeLoan = $('#'+oPickerobj.tableid).datagrid('getSelected');
        if (oPickerobj.winid == 'winLoanPicker')
        {
            if(oEmployeeLoan !=null  && oEmployeeLoan.EmployeeLoanID>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                $('#txtEmployeeLoan').val(oEmployeeLoan.Code);
                $('#txtEmployeeLoan').data('EmployeeLoanID',oEmployeeLoan.EmployeeLoanID);

                $('#txtLoanDetail').val("Loan Amount: "+ formatPrice(oEmployeeLoan.LoanAmount) +", Interest Rate: "+ formatPrice(oEmployeeLoan.InterestRate)+"\nTotal Inst.: "+oEmployeeLoan.NoOfTotalInstallment + ", Refundable Amount: "+ formatPrice(oEmployeeLoan.RefundableAmount));

                $('#txtNoOfInstalment').data('Installments',[]);
                $('#txtNoOfInstalment').data('RemainingInstallment',oEmployeeLoan.RemainingInstallment);
                $('#txtAmount').data('RefundableAmount', oEmployeeLoan.RefundableAmount.toFixed(2));

                $('#txtNoOfInstalment').val(oEmployeeLoan.RemainingInstallment);
                $('#txtAmount').val(formatPrice(oEmployeeLoan.RefundableAmount));
                $('#txtNoOfInstalment').focus().select();
                GetsInstallment(oEmployeeLoan);
               
            }
            else{
                alert("Please select loan.");
            }
        }
    }


    /*-------------------Amount--------------------------*/

    $('#txtNoOfInstalment').change(function(e){
        GetRefundableAmount();
    });

    $("#txtNoOfInstalment").keyup(function (e) {
        GetRefundableAmount();
    });

    function GetRefundableAmount(){
        if(parseInt($("#txtEmployee").data('EmployeeID'))<=0){
            $('#txtEmployee').focus();
            $('#txtEmployee').addClass("errorFieldBorder");
            alert('No employee found.');
            return false;
        }
        else{
            $('#txtEmployee').removeClass("errorFieldBorder");
        }

        if(parseInt($("#txtEmployeeLoan").data('EmployeeLoanID'))<=0){
            $('#txtEmployeeLoan').focus();
            $('#txtEmployeeLoan').addClass("errorFieldBorder");
            alert('No loan found.');
            return false;
        }
        else{
            $('#txtEmployeeLoan').removeClass("errorFieldBorder");
        }

        if(parseInt($("#txtNoOfInstalment").data('RemainingInstallment'))<$("#txtNoOfInstalment").val()){
            alert("Max. "+ $("#txtNoOfInstalment").data('RemainingInstallment')  +" installment can be refundable.");
            $("#txtNoOfInstalment").val($("#txtNoOfInstalment").data('RemainingInstallment'));
            return false;
        }

        debugger;
        var oELIs=$('#txtNoOfInstalment').data('Installments');
     
        var nAmount=0;
        for(var i=0;i<$("#txtNoOfInstalment").val();i++){
            nAmount = parseFloat(nAmount) + parseFloat(oELIs[i].InstallmentAmount);
        }

        $('#txtAmount').val(formatPrice(nAmount));
    }

    /*-------------------Get Employee Loan & Installments--------------------------*/


    function GetLoan(oEmployeeLoan)
    {
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeLoan,
            ControllerName: "EmployeeLoan",
            ActionName: "GetRefundableLoan",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.EmployeeLoanID > 0) {
                    oEmployeeLoan=response.obj;
                    $('#txtEmployeeLoan').data('EmployeeLoanID',oEmployeeLoan.EmployeeLoanID);
                    $('#txtLoanDetail').val("Loan Amount: "+ formatPrice(oEmployeeLoan.LoanAmount) +", Interest Rate: "+ formatPrice(oEmployeeLoan.InterestRate)+"\nTotal Inst.: "+oEmployeeLoan.NoOfTotalInstallment + ", Refundable Amount: "+ formatPrice(oEmployeeLoan.RefundableAmount));
                   
                    $('#txtEmployee').data('EmployeeID',oEmployeeLoan.EmployeeID);
                    $('#txtNoOfInstalment').data('RemainingInstallment',oEmployeeLoan.RemainingInstallment);
                    $('#txtAmount').data('RefundableAmount', oEmployeeLoan.RefundableAmount.toFixed(2));
                    GetsInstallment(response.obj);
                }
            }
        });
    }

    function GetsInstallment(oEmployeeLoan){
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeLoan,
            ControllerName: "EmployeeLoan",
            ActionName: "GetRefundableInstallment",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length>0) {
                if (response.objs[0].ELInstallmentID > 0) {
                    $('#txtNoOfInstalment').data('Installments',response.objs);
                }
                else {alert(response.obj[0].ErrorMessage); }
            }
        });
    }

    </script>
