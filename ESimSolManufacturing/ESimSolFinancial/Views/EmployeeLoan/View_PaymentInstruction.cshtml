<html>
    <head>  
        <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
        <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
        <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />
        <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
    </head>
    <body>
    @model ESimSol.BusinessObjects.EmployeeLoan
        <div style="font-family:Tahoma">           
            <table border="0" cellspacing="2" cellpadding="2">
                <tr>
                    <td style="background-color:#cfb53b; text-align:center; width:800px; color:White">
                        <label id="lblHeaderName" style="font-size:15px; font-weight:bold; text-decoration:Underline"> Add Leave Application</label>
                    </td>
                </tr>
            </table>
            @*<fieldset>
                <legend style="font-weight:bold">  Payment Instruction </legend>*@
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight: bold">
                    <tr>
                        <td style=" text-align:right">
                            Employee :
                        </td>
                        <td >
                            <input id="txtEmployee" type="text" style="width:250px;" readonly/>
                        </td>
                        <td>
                            
                        </td>
                        <td>
                            Code : <input id="txtCode" type="text" style="width:80px;" readonly/>
                        </td>
                    </tr>
                    <tr>
                        <td style=" text-align:right">
                            Official Info. :
                        </td>
                        <td colspan = "3">
                            <input id="txtOfficialInfo" type="text" style="width:460px;" readonly/>
                        </td>
                        
                    </tr>
                     <tr>
                        <td style=" text-align:right">
                            Approve Amount  :
                        </td>
                        <td colspan="3">
                            <input id="txtApproveAmount" type="text" style="width:130px;"/>
                            <label id="lblApproveAmount"></label>
                        </td>
                       
                      
                    </tr>
                     <tr>
                        <td style=" text-align:right">
                            Receiveable Amount :
                        </td>
                        <td colspan ="3">
                            <input id="txtReceiveableAmount" type="text" style="width:130px;" readonly/>
                            <label id="lblReceiveableAmount"></label> 
                        </td>
                        
                    </tr>
                    <tr>
                        <td style=" text-align:right">
                            Outstanding :
                        </td>
                        <td colspan="3">
                            <input id="txtOutstanding" type="text" style="width:130px;" readonly/>
                             <label id="lblOutstanding"></label>  
                        </td>
                        
                    </tr>
                    <tr>
                        <td style=" text-align:right">
                            Life Cycle :
                        </td>
                        <td >
                            <input id="txtLifeCycle" type="text" style="width:130px;"/>(Years)
                        </td>
                        <td>
                            Interest Rate :
                        </td>
                        <td>
                            <input id="txtInterestRate" type="text" style="width:70px;" value="0"/>%
                        </td>
                    </tr>
                </table>
                <fieldset style="border-radius:8px;">
                <legend style="font-weight:bold">Disbursement Policy</legend>
                    Dtae :  <input id="dtDate" type="text" style="width: 100px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    &nbsp; Amount : <input id="txtDisburseamount" type="text" style="width:80px;"/>
                    <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-save" plain="true" onclick ="DisbursementTableLoad()" >Add</a>
                    <a id="btnDisbursementRemove" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-remove" plain="true" onclick="RemoveDisbursent()" >Remove</a>

                    <table id="tblDisbursementPolicy" title="Disbursement" class="easyui-datagrid" style="width:585px;height:150px"
                           data-options="
                    singleSelect: false,
                    fitColumns:false,
                    rownumbers:true,
                    pagination:false,
                    autoRowHeight:false,
                    showFooter: true,
                    onClickRow: onClickRow_Disbursement
                    ">

                        <thead>
                            <tr>
                                <th data-options="field:'ExpectedDisburseDate',width:110,align:'center', editor:{type:'datebox'}">Date</th>

                                <th field="Amount" width="110" align="right" style="text-align: right">
                                    Amount
                                </th>
                                <th field="ReceivableAmount" width="110" align="right">
                                    Receivable
                                </th>
                                <th field="StatusInString" width="110" align="left">
                                    Status
                                </th>
                                <th field="ActivationAfterInString" width="110" align="left">
                                    Disburse Date
                                </th>
                            </tr>
                        </thead>
                    </table>
                        <table style="font-size:11px;">
                            <tr>
                                <td style="width:80px;">
                                </td>
                                <td style="width:150px; text-align:right">
                                    Total : <label id="lblTotalDisburse"></label>
                                </td>
                            </tr>

                        </table>
                </fieldset>
                <fieldset style="border-radius:8px;">
                <legend style="font-weight:bold">Installment Policy</legend>
                    From : <input id="dtDateStartfrom" type="text" style="width: 95px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /> 
                    Total Inst. : <input id="txtTotalInstallment" type="text" style="width:50px;" value="1" />
                    Or Amount/Installment : <input id="txtAmountPerInstallment" type="text" style="width:50px;" />
                    <a id="btnCreate" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-save" plain="true" onclick="InstallmentTableLoad()" >Create</a>
                    <a id="btnInstallmentRemove" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-remove" plain="true"  onclick ="RemoveInstallment()">Remove</a>

                    <table id="tblInstallmentPolicy" title="Installment" class="easyui-datagrid" style="width:585px;height:150px"
                           data-options="
                    singleSelect: false,
                    fitColumns:false,
                    rownumbers:true,
                    pagination:false,
                    autoRowHeight:false,
                    showFooter: true,
                    onClickRow: onClickRow_Installment
                    ">

                        <thead>
                            <tr>

                                <th data-options="field:'ExpectedRealizeDate',width:100,align:'center', editor:{type:'datebox'}">Date</th>

                                <th field="Amount" width="110" align="right" style="text-align: right">
                                    Amount
                                </th>
                                <th field="PeriodInString" width="110" align="left">
                                    Status
                                </th>
                                <th field="ConditionInString" width="110" align="left">
                                    Realized Date
                                </th>
                                <th field="ActivationAfterInString" width="100" align="left">
                                    Note
                                </th>
                            </tr>
                        </thead>
                    </table>
                        <table style="font-size:11px;">
                            <tr>
                                <td style="width:80px;">
                                </td>
                                <td style="width:150px; text-align:right">
                                    Total : <label id="lblTotalInstallmentAmount"></label>
                                </td>
                            </tr>

                        </table>
                </fieldset>
           @* </fieldset>*@
            <br />
            @*<fieldset>
                <legend style="font-weight:bold"> Action : </legend>*@
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:450px; text-align:left">
                            
                        </td>
                        <td style="width:50px">
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-save" plain="true" onclick="Save()">Save</a>
                           
                        </td>
                        <td style="width:50px">
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-cancel" plain="true" onclick="Close()">Close</a>
                        </td>
                    </tr>       
                </table>
            @*</fieldset>*@
        </div>
    </body>
</html>

<script type="text/javascript">
var _oEmployeeLoan = null;
var _sBaseAddress = "";
var _bIsPaid=true;
var _oEmployee = null;
var _nEmployeeID = 0;
var _nESSID = 0;

$(document).ready(function() 
{
    _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    _oEmployeeLoan = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var obj = window.dialogArguments;
    document.getElementById('lblHeaderName').innerHTML = obj.Name;
    $('#dtDate').datebox('setValue', icsdateformat(new Date()));
    $('#dtDateStartfrom').datebox('setValue', icsdateformat(new Date()));
    $("#txtApproveAmount").numberbox();
    //$("#txtReceiveableAmount").numberbox();
    //$("#txtOutstanding").numberbox();
    //$("#txtLifeCycle").numberbox();
    //$("#txtInterestRate").numberbox();

    //$("#txtDisburseamount").numberbox();
    //$("#txtTotalInstallment").numberbox();
    //$("#txtAmountPerInstallment").numberbox();


    RefreshControl();
    LoadForPreview();
    
});

function RefreshControl()
{
    
    document.getElementById('txtEmployee').value = _oEmployeeLoan.EmployeeName+"["+_oEmployeeLoan.EmployeeCode+"]";
    $("#txtOfficialInfo")[0].value = _oEmployeeLoan.DesignationName+"," + _oEmployeeLoan.DepartmentName +","+_oEmployeeLoan.LocationName+"["+_oEmployeeLoan.EmployeeTypeName+","+_oEmployeeLoan.WorkingStatusInString+"]";
    document.getElementById("txtCode").value = _oEmployeeLoan.Code;
    if(_oEmployeeLoan.ApproveAmount>0)
    {
        $('#txtApproveAmount').numberbox('setValue', _oEmployeeLoan.ApproveAmount);
    }
    else
    {
        $('#txtApproveAmount').numberbox('setValue', _oEmployeeLoan.Amount);
    }
}

function LoadForPreview()
{
    
    $("#txtReceiveableAmount").numberbox('setValue',_oEmployeeLoan.ReceivableAmount);
    $("#txtOutstanding").numberbox('setValue',_oEmployeeLoan.ReceivableAmount);

    document.getElementById('txtLifeCycle').value = _oEmployeeLoan.LifeCycleInMonth;
    document.getElementById('txtInterestRate').value = _oEmployeeLoan.InterestRate; 
    document.getElementById('txtTotalInstallment').value = _oEmployeeLoan.TotalInstallment;
     
    for(var i=0;i<_oEmployeeLoan.EmployeeLoanDisbursementPolicys.length;i++)
    {
        _oEmployeeLoan.EmployeeLoanDisbursementPolicys[i].ExpectedDisburseDate = _oEmployeeLoan.EmployeeLoanDisbursementPolicys[i].ExpectedDisburseDateInString;
    }
    RefreshDisburseList(_oEmployeeLoan.EmployeeLoanDisbursementPolicys);

    for(var j=0;j<_oEmployeeLoan.EmployeeLoanInstallmentPolicys.length;j++)
    {
        _oEmployeeLoan.EmployeeLoanInstallmentPolicys[j].ExpectedRealizeDate = _oEmployeeLoan.EmployeeLoanInstallmentPolicys[j].ExpectedRealizeDateInString;
    }
    RefreshInstallList(_oEmployeeLoan.EmployeeLoanInstallmentPolicys);

    if(_oEmployeeLoan.EmployeeLoanInstallmentPolicys.length>0 && _oEmployeeLoan.EmployeeLoanDisbursementPolicys.length>0)
    {
        document.getElementById('btnSave').style.display = 'none';
    }

    document.getElementById('lblTotalDisburse').innerHTML = _oEmployeeLoan.ApproveAmount
    document.getElementById('lblTotalInstallmentAmount').innerHTML = _oEmployeeLoan.ReceivableAmount
}

function RefreshDisburseList(oEmployeeLoans)
{
    data = oEmployeeLoans ;
    data = { "total": "" + data.length + "", "rows": data };
    $('#tblDisbursementPolicy').datagrid('loadData', data);
    
}

function RefreshInstallList(oEmployeeLoans)
{
    data = oEmployeeLoans ;
    data = { "total": "" + data.length + "", "rows": data };
    $('#tblInstallmentPolicy').datagrid('loadData', data);
    
}

$('#txtApproveAmount').numberbox({
	onChange: function(newValue,oldValue){
	    var newValue = document.getElementById("txtApproveAmount").value; 
	    if(newValue>0)
	    {
	        var tsv= (new Date().getTime())/1000;   
	        $.ajax({
	            type: "GET",
	            dataType: "json",            
	            url : _sBaseAddress+  "/EmployeeLoan/TakaInWord",
	            traditional: true,
	            data: {value:newValue, ts:tsv },
	            contentType: "application/json; charset=utf-8",
	            success: function (data)
	            {
	                document.getElementById("lblApproveAmount").innerHTML = jQuery.parseJSON(data);                
	            },
	            error: function (xhr, status, error) 
	            {
	                alert(error);
	            }

	        });
	    }
}
});

$('#txtReceiveableAmount').numberbox({
	onChange: function(newValue,oldValue){
	    var newValue = document.getElementById("txtReceiveableAmount").value;
	    if(newValue>0)
	    {
	        var tsv= (new Date().getTime())/1000;   
	        $.ajax({
	            type: "GET",
	            dataType: "json",            
	            url : _sBaseAddress+  "/EmployeeLoan/TakaInWord",
	            traditional: true,
	            data: {value:newValue, ts:tsv },
	            contentType: "application/json; charset=utf-8",
	            success: function (data)
	            {
	                document.getElementById("lblReceiveableAmount").innerHTML = jQuery.parseJSON(data);                
	            },
	            error: function (xhr, status, error) 
	            {
	                alert(error);
	            }

	        });
	    }
}
});

$('#txtOutstanding').numberbox({
	onChange: function(newValue,oldValue){
	    var newValue = document.getElementById("txtOutstanding").value;
	    if(newValue>0)
	    {
	        var tsv= (new Date().getTime())/1000;   
	        $.ajax({
	            type: "GET",
	            dataType: "json",            
	            url : _sBaseAddress+  "/EmployeeLoan/TakaInWord",
	            traditional: true,
	            data: {value:newValue, ts:tsv },
	            contentType: "application/json; charset=utf-8",
	            success: function (data)
	            {
	                document.getElementById("lblOutstanding").innerHTML = jQuery.parseJSON(data);                
	            },
	            error: function (xhr, status, error) 
	            {
	                alert(error);
	            }

	        });
	    }
}
});

//function TakaInWord()
//{
//    var newValue = document.getElementById("txtApproveAmount").value;    
//    var tsv= (new Date().getTime())/1000;   
//    $.ajax({
//            type: "GET",
//            dataType: "json",            
//            url : _sBaseAddress+  "/EmployeeLoan/TakaInWord",
//            traditional: true,
//            data: {value:newValue, ts:tsv },
//            contentType: "application/json; charset=utf-8",
//            success: function (data)
//            {
//               document.getElementById("lblApproveAmount").innerHTML = jQuery.parseJSON(data);                
//            },
//            error: function (xhr, status, error) 
//            {
//                alert(error);
//            }

//        });
//    var newValue = document.getElementById("txtReceiveableAmount").value;
//    var tsv= (new Date().getTime())/1000;   
//    $.ajax({
//            type: "GET",
//            dataType: "json",            
//            url : _sBaseAddress+  "/EmployeeLoan/TakaInWord",
//            traditional: true,
//            data: {value:newValue, ts:tsv },
//            contentType: "application/json; charset=utf-8",
//            success: function (data)
//            {
//               document.getElementById("lblReceiveableAmount").innerHTML = jQuery.parseJSON(data);                
//            },
//            error: function (xhr, status, error) 
//            {
//                alert(error);
//            }

//        });
//    var newValue = document.getElementById("txtOutstanding").value;
//    var tsv= (new Date().getTime())/1000;   
//    $.ajax({
//            type: "GET",
//            dataType: "json",            
//            url : _sBaseAddress+  "/EmployeeLoan/TakaInWord",
//            traditional: true,
//            data: {value:newValue, ts:tsv },
//            contentType: "application/json; charset=utf-8",
//            success: function (data)
//            {
//               document.getElementById("lblOutstanding").innerHTML = jQuery.parseJSON(data);                
//            },
//            error: function (xhr, status, error) 
//            {
//                alert(error);
//            }

//        });
//} 


var editIndex_Disbursement = undefined;  
function endEditing_Disbursement ()
{  
    if (editIndex_Disbursement  == undefined){return true}
      
    if ($('#tblDisbursementPolicy').datagrid('validateRow', editIndex_Disbursement ))
    { 
        $('#tblDisbursementPolicy').datagrid('endEdit', editIndex_Disbursement );                   
        editIndex_Disbursement  = undefined;  
        return true;  
    }
    else 
    {  
        return false;  
    }  
}  

function onClickRow_Disbursement (index)
{  
    
    if (editIndex_Disbursement  != index)
    {  
        if (endEditing_Disbursement ())
        {
            $('#tblDisbursementPolicy').datagrid('selectRow', index).datagrid('beginEdit', index);  
            editIndex_Disbursement  = index;  
        }
        else 
        {  
            $('#tblDisbursementPolicy').datagrid('selectRow', editIndex_Disbursement);  
        }  
    }  
}  

var editIndex_Installment = undefined;  
function endEditing_Installment()
{  
    if (editIndex_Installment == undefined){return true}
      
    if ($('#tblInstallmentPolicy').datagrid('validateRow', editIndex_Installment))
    { 
        $('#tblInstallmentPolicy').datagrid('endEdit', editIndex_Installment);                   
        editIndex_Installment = undefined;  
        return true;  
    }
    else 
    {  
        return false;  
    }  
}  

function onClickRow_Installment(index)
{  
    
    if (editIndex_Installment != index)
    {  
        if (endEditing_Installment())
        {
            $('#tblInstallmentPolicy').datagrid('selectRow', index).datagrid('beginEdit', index);  
            editIndex_Installment = index;  
        }
        else 
        {  
            $('#tblInstallmentPolicy').datagrid('selectRow', editIndex_Installment);  
        }  
    }  
} 

$('#txtApproveAmount').keyup(function (e) 
{
    SetReceieveable();  
});

$('#txtLifeCycle').keyup(function (e) 
{
    
    SetReceieveable();
    //$('#txtTotalInstallment').numberbox('setValue', parseFloat(document.getElementById("txtLifeCycle").value));
    document.getElementById("txtTotalInstallment").value = parseFloat(document.getElementById("txtLifeCycle").value);
});

$('#txtInterestRate').keyup(function (e) 
{
    SetReceieveable();  
});

function SetReceieveable()
{
    debugger
    var nApprovalAmount = parseFloat(document.getElementById("txtApproveAmount").value);
    nApprovalAmount = parseFloat(nApprovalAmount);
    var nInterest = parseFloat(document.getElementById("txtInterestRate").value);
    var nLifeCycle = parseFloat(document.getElementById("txtLifeCycle").value);
    //alert(ReceieveableCalculation(nApprovalAmount,nInterest,nLifeCycle));
    //document.getElementById("txtReceiveableAmount").value = ReceieveableCalculation(nApprovalAmount,nInterest,nLifeCycle);

    $('#txtReceiveableAmount').numberbox('setValue', ReceieveableCalculation(nApprovalAmount,nInterest,nLifeCycle));
    $('#txtOutstanding').numberbox('setValue', ReceieveableCalculation(nApprovalAmount,nInterest,nLifeCycle));

    //document.getElementById("txtOutstanding").value = ReceieveableCalculation(nApprovalAmount,nInterest,nLifeCycle); 
}

function ReceieveableCalculation(nApprovalAmount,nInterest,nLifeCycle)//url from where this formula is taken - http://www.wikihow.com/Calculate-Loan-Payments
{
    debugger
   if(nInterest !=0)
   {
   
       var nTotal = nApprovalAmount * (nInterest/100/12 / (1 - Math.pow((1 + nInterest/100/12), -nLifeCycle)));
       return (nTotal*nLifeCycle).toFixed(2);
   }
   else
   {
       return nApprovalAmount;
   }
}

function  icsdateformat(date)
{
    var mthNames = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
    var y = date.getFullYear();
    var m = date.getMonth();
    var d = date.getDate();
    var result= d +' '+ mthNames[m]+' '+ y;
    return result;
}

function DisbursementTableLoad()
{
    
    if(document.getElementById("txtApproveAmount").value <=0)
    {
        alert("Please enter approve amount !!");
        return;
    }

    var nAnount  = 0;
    var nTotalReceieveableAmount = 0;
    var nApprovedAmount  = 0;
    var nReceieveableAmount = 0;

    nAnount  = document.getElementById("txtDisburseamount").value;
    if(document.getElementById("txtDisburseamount").value <=0)
    {
        alert("Please enter  amount !!");
        return;
    }
    if(document.getElementById("txtInterestRate").value != 0)
    {
         nTotalReceieveableAmount = document.getElementById("txtReceiveableAmount").value;
         nApprovedAmount  = document.getElementById("txtApproveAmount").value;
         nReceieveableAmount = nTotalReceieveableAmount/nApprovedAmount*nAnount;
    }
    else
    {
        nReceieveableAmount = nAnount
    }

    var DisbursementPolicy =
    {
        ELDPID : 0,
        EmployeeLoanID : _oEmployeeLoan.EmployeeLoanID,
        ExpectedDisburseDate : $('#dtDate').datebox('getValue'),
        Amount : nAnount,
        ReceivableAmount : nReceieveableAmount
        
    }
 
   $('#tblDisbursementPolicy').datagrid('appendRow', DisbursementPolicy);
   var nTotalAmount = 0;
   var oEmployeeLoans = $('#tblDisbursementPolicy').datagrid('getRows');
   for(var i =0; i<oEmployeeLoans.length; i++)
   {
        nTotalAmount = parseFloat(nTotalAmount) + parseFloat(oEmployeeLoans[i].Amount);
   }

   document.getElementById('lblTotalDisburse').innerHTML = nTotalAmount;
}

function InstallmentTableLoad()
{
   
    //var oEmployeeLoans = $('#tblInstallmentPolicy').datagrid('getRows');
    //if(oEmployeeLoans.length>0)
    //{
    //    alert("Already Created !");
    //    return;
    //}

    var nApprovalAmount = parseFloat(document.getElementById("txtApproveAmount").value);
    nApprovalAmount = parseFloat(nApprovalAmount);
    var nInterest = parseFloat(document.getElementById("txtInterestRate").value);
    var nLifeCycle = parseFloat(document.getElementById("txtTotalInstallment").value);
    var nPerInstallment = ReceieveableCalculation(nApprovalAmount,nInterest,nLifeCycle)/nLifeCycle;
    var dInstallmentDate = $('#dtDateStartfrom').datebox('getValue');
    var nTotalInstallment = document.getElementById("txtTotalInstallment").value;
    var nAmontPerInstallment = document.getElementById("txtAmountPerInstallment").value;
   
    if( nAmontPerInstallment> 0)
    {
        nTotalInstallment = nApprovalAmount/ nAmontPerInstallment;
        nPerInstallment = nAmontPerInstallment;
        //$('#txtTotalInstallment').numberbox('setValue', nTotalInstallment);
        document.getElementById("txtTotalInstallment").value =  nTotalInstallment;
    }
    var oDate=new Date(dInstallmentDate);

    var oLists = [];
    data = oLists ;
    data = { "total": "" + data.length + "", "rows": data };
    $('#tblInstallmentPolicy').datagrid('loadData', data);

    for(var i =0; i<nTotalInstallment; i++)
    {

        var InstallmentPolicy =
        {
            ELDPID : 0,
            EmployeeLoanID : _oEmployeeLoan.EmployeeLoanID,
            ExpectedRealizeDate :icsdateformat(oDate) ,
            Amount : nPerInstallment
        
        }
        $('#tblInstallmentPolicy').datagrid('appendRow', InstallmentPolicy);
        oDate.setMonth(oDate.getMonth()+1);

   }
   
   var nTotalAmount = 0;
   var oEmployeeLoans = $('#tblInstallmentPolicy').datagrid('getRows');
   for(var i =0; i<oEmployeeLoans.length; i++)
   {
        nTotalAmount = parseFloat(nTotalAmount) + parseFloat(oEmployeeLoans[i].Amount);
   }

   document.getElementById('lblTotalInstallmentAmount').innerHTML = nTotalAmount;
}

function RemoveDisbursent() 
{
    var oEmployeeLoanDisbursent = $('#tblDisbursementPolicy').datagrid('getSelected');
    if (oEmployeeLoanDisbursent == null)
    {
        alert("Please select an item from the list!");
        return false;
    }
   
    if (!confirm("Confirm to Delete?")) return;
    var SelectedRowIndex = $('#tblDisbursementPolicy').datagrid('getRowIndex', oEmployeeLoanDisbursent);
    $('#tblDisbursementPolicy').datagrid('deleteRow', SelectedRowIndex);  

}

function RemoveInstallment() 
{
    var oEmployeeLoanInstallment = $('#tblInstallmentPolicy').datagrid('getSelected');
    if (oEmployeeLoanInstallment == null)
    {
        alert("Please select an item from the list!");
        return false;
    }
   
    if (!confirm("Confirm to Delete?")) return;
    var SelectedRowIndex = $('#tblInstallmentPolicy').datagrid('getRowIndex', oEmployeeLoanInstallment);
    $('#tblInstallmentPolicy').datagrid('deleteRow', SelectedRowIndex);  
 
}

function ValidateInput() 
{
   
    if(document.getElementById("txtApproveAmount").value =="" || document.getElementById("txtApproveAmount").value ==0)
    {
        alert("Please Enter ApproveAmount !");
        document.getElementById("txtApproveAmount").style.borderColor = 'red';
        document.getElementById("txtApproveAmount").focus();
        return false;
    }
        
    if(document.getElementById("txtLifeCycle").value =="" || document.getElementById("txtLifeCycle").value ==0)
    {
        alert("Please enter LifeCycle!");
        document.getElementById("txtLifeCycle").style.borderColor = 'red';
        document.getElementById("txtLifeCycle").focus();
        return false;
    }
    
    var oEmployeeLoans = $('#tblDisbursementPolicy').datagrid('getRows');
    if(oEmployeeLoans.length<=0)
    {
        alert("Please Add Disbursement!");
        return false;
    }

    var oEmployeeLoans = $('#tblInstallmentPolicy').datagrid('getRows');
    if(oEmployeeLoans.length<=0)
    {
        alert("Please Create Installment!");
        return false;
    }

    //if(document.getElementById("txtDisburseamount").value =="")
    //{
    //    alert("Please Enter Disburseamount !");
    //    document.getElementById("txtDisburseamount").style.borderColor = 'red';
    //    document.getElementById("txtDisburseamount").focus();
    //    return false;
    //}
    
    //if(document.getElementById("txtTotalInstallment").value =="" && document.getElementById("txtAmountPerInstallment").value =="")
    //{
    //    alert("Please Enter Total Installment or Amount Per Installment !");
    //    document.getElementById("txtTotalInstallment").style.borderColor = 'red';
    //    document.getElementById("txtTotalInstallment").focus();
    //    return false;
    //}
 
    return true;
}

function RefreshObject()
{
    var oEmployeeLoan = 
        {
            EmployeeLoanID : _oEmployeeLoan.EmployeeLoanID,
            ApproveAmount : document.getElementById("txtApproveAmount").value,
            ReceivableAmount : document.getElementById("txtReceiveableAmount").value,
            LifeCycleInMonth : document.getElementById("txtLifeCycle").value,
            InterestRate : document.getElementById("txtInterestRate").value,
            TotalInstallment : document.getElementById("txtTotalInstallment").value,
            EmployeeLoanDisbursementPolicys : $('#tblDisbursementPolicy').datagrid('getRows'),
            EmployeeLoanInstallmentPolicys : $('#tblInstallmentPolicy').datagrid('getRows')
        }
   return oEmployeeLoan;
}

function Save() 
{
    if (!ValidateInput()) return;
     
    var oEmployeeLoan = RefreshObject();

    $.ajax({
    type: "POST",
    dataType: "json",
    url: _sBaseAddress + "/EmployeeLoan/PaymentInstruction_Save",
    traditional: true,
    data: JSON.stringify(oEmployeeLoan),
    contentType: "application/json; charset=utf-8",

    success: function(data) {
        
        var oEmployeeLoan = jQuery.parseJSON(data);
        if (oEmployeeLoan.EmployeeLoanID > 0) {
            alert("Payment Instruction Saved sucessfully");
            window.returnValue = oEmployeeLoan;
            window.close();
        } else {
            alert(oEmployeeLoan.ErrorMessage);
        }
    },
    error: function(xhr, status, error) {
        alert(error);
    }
    });
    
}

function Close() 
{
    window.close();
}
</script>