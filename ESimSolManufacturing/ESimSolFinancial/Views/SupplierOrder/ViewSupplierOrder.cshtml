<html>

<body>
    @{
        ViewBag.Title = "Supplier Order";
    }
    @model ESimSol.BusinessObjects.PurchaseOrder
    <div id="progbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable" id="divPurchaseOrder" title="Add Supplier Order" style="font-family:Tahoma; height:100%; width:100%">
        <div id="tabPurchaseOrderTabs" class="easyui-tabs" style="width:100%; height:88%">
            <div id="vidPOBasicInfo" title="Supplier Order" style="">
                <fieldset>
                    <legend style="font-weight: bold"> </legend>
                    <table border="0" cellspacing="1" cellpadding="1" style="font-size: 11px; font-weight: bold; width:100%">
                        <tr>
                            <td style="text-align:right; width:12%">
                                Ref Type :
                            </td>
                            <td style="text-align:left; width:30%">
                                <select id="cboRefType" style="width:98%"><option value="1">Open</option><option value="3">Spare Parts Request</option></select>
                            </td>
                            <td style="text-align:right; width:12%">
                                SO No :
                            </td>
                            <td style="text-align:left; width:17%">
                                @Html.TextBoxFor(model => model.PONo, new { id = "txtPONo", disabled = "disabled", style = "width: 96%" })
                            </td>
                            <td style="text-align:right; width:12%">
                                SO Date :
                            </td>
                            <td style="text-align:right; width:17%">
                                <input type="text" style="width:100%" id="txtPODate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                        </tr>
                        <tr id="trReference">
                            <td style="text-align:right; width:12%">
                                <label id="lblRefNo">Request No :</label>                                
                            </td>
                            <td style="text-align:left; width:30%">
                                <input type="text" id="txtRefNo" placeholder="Type Requisition No and press enter" style="width:80%;" />                                
                                <input type="button" value="Pick" id="btnRefPick" />                                
                            </td>
                            <td style="text-align:right; width:12%">
                                <label id="lblRefDate">Request Date :</label>                                
                            </td>
                            <td style="text-align:left; width:17%">
                                @Html.TextBoxFor(model => model.RefDateSt, new { id = "txtRefDate", disabled = "disabled", style = "width: 96%" })                                
                            </td>
                            <td style="text-align:right; width:12%">                                
                                <label id="lblRefBy">Request By :</label>
                            </td>
                            <td style="text-align:right; width:17%">
                                @Html.TextBoxFor(model => model.RefBy, new { id = "txtRefBy", disabled = "disabled", style = "width: 96%" })                                
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align:right; width:12%">
                                Supplier Name :
                            </td>
                            <td style="text-align:left; width:30%">
                                <input type="text" style="width:80%; text-align:left" id="txtSupplierName" placeholder="Type Name & Press Enter" />
                                <input type="button" value="Pick" id="btnPickSupplier" />                                
                            </td>
                            <td style="text-align:right; width:12%">
                                MKT Person :
                            </td>
                            <td style="text-align:left; width:17%">
                                <select style="width:100%" id="cboMKTPerson"></select>
                            </td>
                            <td style="text-align:right; width:12%">
                                Currency :
                            </td>
                            <td style="text-align:left; width:17%">
                                <table border="0" cellpadding="0" cellspacing="0">
                                    <tr>
                                        <td style="width:50%"><select id="cboCurrency" style="width:100%;"></select></td>
                                        <td style="width:20%">C.Rate</td>
                                        <td style="width:30%"><input type="text" style="width:100%; text-align:left" id="txtCRate" /></td>
                                    </tr>
                                </table>
                                
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align:right; width:12%">
                                Contact Person :
                            </td>
                            <td style="text-align:left; width:30%">                  
                                <table border="0" cellspacing="0"  cellpadding="0" width="100%">
                                    <tr>
                                        <td style="width:78%; text-align:left">
                                            <select id="cboContactPerson" style="width:100%;"></select>
                                        </td>
                                        <td style="width:22%; text-align:right">
                                            <a id="btnReLoadLoadContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="LoadContactPerson(1)" iconcls="icon-reload" plain="false"></a>
                                            <a id="btnNewContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="NewContactPerson(1)" iconcls="icon-add" plain="false"></a>
                                        </td>
                                    </tr>
                                </table>                                              
                            </td>
                            <td style="text-align:right; width:12%">
                                Payment Term :
                            </td>
                            <td style="text-align:left; width:17%">
                                <input type="text" style="width:100%; text-align:left" id="txtPaymentTerm"  placeholder="Type Name & Press Enter" />
                            </td>    
                            <td style="text-align:right; width:12%">
                                Ship By:
                            </td>
                            <td style="text-align:left; width:17%">
                                <input type="text" style="width:100%; text-align:left" id="txtShipBy" />
                            </td>                                 
                        </tr>
                        <tr>
                            <td style="text-align:right; width:12%">
                                Delivery To :
                            </td>
                            <td style="text-align:left; width:30%">
                                @Html.TextBoxFor(model => model.DeliveryToName, new { style = "width:80%;", placeholder = "Type Name & Press Enter", id = "txtDeliveryToName" })
                                <input type="button" value="Pick" id="btnPickDeliveryTo" />
                            </td>
                            <td style="text-align:right; width:12%">
                                Contact Person :
                            </td>
                            <td style="text-align:left; width:17%">
                                <table border="0" cellspacing="0" cellpadding="0" width="100%">
                                    <tr>
                                        <td style="width:60%; text-align:left">
                                            <select id="cboDeliveryToContactPerson" style="width:100%;"></select>
                                        </td>
                                        <td style="width:40%; text-align:right">
                                            <a id="btnLoadDeliveryToContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="ReLoadLoadContactPerson(2)" iconcls="icon-reload" plain="false"></a>
                                            <a id="btnNewDeliveryToContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="NewContactPerson(2)" iconcls="icon-add" plain="false"></a>
                                        </td>
                                    </tr>
                                </table>             
                            </td>
                            <td style="text-align:right; width:12%">
                                Trade Term :
                            </td>
                            <td style="text-align:left; width:17%">
                                @Html.TextBoxFor(model => model.TradeTerm, new { style = "width: 100%;", id = "txtTradeTerm" })
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align:right; width:12%">
                                Bill To :
                            </td>
                            <td style="text-align:left; width:30%">
                                @Html.TextBoxFor(model => model.BillToName, new { style = "width:80%;", placeholder = "Type Name & Press Enter", id = "txtBillToName" })
                                <input type="button" value="Pick" id="btnPickBillTo" />
                            </td>
                            <td style="text-align:right; width:12%">
                                Contact Person :
                            </td>
                            <td style="text-align:left; width:17%">
                                <table border="0" cellspacing="0" cellpadding="0" width="100%">
                                    <tr>
                                        <td style="width:60%; text-align:left">
                                            <select id="cboBIllToContactPerson" style="width:100%;"></select>
                                        </td>
                                        <td style="width:40%; text-align:right">
                                            <a id="btnLoadBIllToContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="ReLoadLoadContactPerson(3)" iconcls="icon-reload" plain="false"></a>
                                            <a id="btnNewBIllToContactPerson" href=" javascript:void(0)" class="easyui-linkbutton" onclick="NewContactPerson(3)" iconcls="icon-add" plain="false"></a>
                                        </td>
                                    </tr>
                                </table>        
                            </td>
                            <td style="text-align:right; width:12%">
                                Note :
                            </td>
                            <td style="text-align:left; width:17%">
                                @Html.TextBoxFor(model => model.Note, new { style = "width: 100%;", id = "txtNote" })
                            </td>
                        </tr>
                    </table>                    
                </fieldset>
                <div style="width:100%; height:230px">
                    <table id="tblPODetail" title="Supplier Order Detail" class="easyui-datagrid" style="width:100%;height:200px"
                           data-options="singleSelect: true, fit:true, fitColumns:true, rownumbers:true, pagination:false, autoRowHeight:false, toolbar:'#toolbarPurchaseOrderDetail',onClickRow:onClickRow">
                        <thead>
                            <tr>
                                <th field="ProductCode" width="10%" align="left">Part No</th>
                                <th field="ProductName" width="20%" align="left">Item Name</th>     
                                <th field="ModelShortName" width="20%" align="left">Model Name</th>                                
                                <th data-options="field:'Note',align:'left',editor:{type:'textbox'}" width="13%"> Remark </th>
                                <th field="Qty" width="8%" align="right" formatter="formatPrice">Qty</th>
                                <th field="UnitSymbol" width="5%" align="left">Unit</th>
                                <th data-options="field:'Qty_Entry',align:'right',editor:{type:'numberbox',options:{precision:2}}" width="8%"> Qty</th>
                                <th field="UnitPrice" width="8%" align="right" formatter="formatPrice4digit">UnitPrice</th>
                                <th data-options="field:'UnitPrice_Entry',align:'right',editor:{type:'numberbox',options:{precision:4}}" width="8%">Unit Price</th>
                                <th field="AmountST" width="8%" align="right">Amount</th>
                            </tr>
                        </thead>
                    </table>
                    <div id="toolbarPurchaseOrderDetail">
                        <input type="text" id="txtProductName" placeholder="Press enter with product name or code" style="width:15%" />
                        <a id="btnPickProduct" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>
                        <select id="cboMeasurementUnit" style="width: 10%"></select>
                        <label id="lblQty">Qty :</label><input type="text" id="txtQty" style="width: 10%; text-align:right;" />
                        <label id="lblRate">Rate :</label><input type="text" id="txtUnitPrice" style="width: 10%; text-align:right;" />
                        <label id="lblModel">Model:</label><input type="text" id="txtVehicleModel" placeholder="Type Model No & Press Enter" style="width:120px;" /><a id="btnVehicleModel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>
                        <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"> Add</a>
                        <a id="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                        <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                        
                    </div>                    
                </div>
                <div style="height:20px">
                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                        <tr>
                            <td style="width:80%;  text-align:right;font-weight:bold;">Total:</td>
                            <td style="width:18%; text-align:right; font-weight:bold;">
                                <label id="lblTotalAmount">0.00</label>
                            </td>
                            <td style="width:2%;  text-align:right;font-weight:bold;"></td>
                        </tr>
                    </table>
                </div>
            </div>
            <div title="Terms and Condition " style="width: 100%; height:450px">
                <table id="tblPOTandCClauses" class="easyui-datagrid" style="width:100%; height:450px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#TCtoolbar" data-options="singleSelect: true, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false , onClickRow: onClickRowTC">
                    <thead>
                        <tr>
                            <th field="ClauseTypeSt" width="15%" align="left"> Type </th>
                            <th field="TermsAndCondition" width="80%" align="left" data-options="field:'TermsAndCondition',editor:{type:'text',options:{precision:0}}"> Terms & Condition </th>
                        </tr>
                    </thead>
                </table>
                <div id="TCtoolbar" style=" height:25px;">
                    <input type="button" id="btnPickPOTandC" value="Pick Term And Condition" style="width: 150px; font-size: 12px" />
                    <input type="button" id="btnRemovePOTandC" value="Remove" style="width: 80px; font-size: 12px" />
                    <input type="button" id="btnRefreshPOTandC" value="Refresh" style="width: 80px; font-size: 12px" />
                </div>

            </div>
        </div>
        <div style="width:100%; height:10%">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>                        
                        <td style="width:85%; text-align:right"></td>
                        <td style="width: 15%">                            
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                        
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>


</body>
</html>
<style>
    td, th {
        padding: 2px;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        var oPurchaseOrder =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oMarketingAccounts = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.MarketingAccounts));
        var oPOTandCClauses= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.POTandCClauses));
        var oCompany = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));
        debugger;
    
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").hide();
        $('#divPurchaseOrder').data('Company', oCompany);
        $('#divPurchaseOrder').data('PurchaseOrder', oPurchaseOrder);
        
        $('#cboCurrency').data('Currencys', oCurrencys);
        $('#cboMKTPerson').data('MKTPersons', oMarketingAccounts);
        $('#txtUnitPrice').icsCurrencyBox(null, null, 4);
        $('#txtQty,#txtCRate').icsCurrencyBox(null, null, 2);
        RefreshComboBox();
        RefreshControls();
        RefreshLayout();
        
    
    });
   
    $("#cboCurrency").change(function(){
        var nCurrencyID = $('#cboCurrency').val();
        var oCompany = $('#divPurchaseOrder').data('Company');
        if(parseInt(nCurrencyID)==parseInt(oCompany.BaseCurrencyID))
        {
            $('#txtCRate').val(1);
            $('#txtCRate').prop('disabled',true);
        }else{
            $('#txtCRate').val(0);
            $('#txtCRate').prop('disabled',false);
        }
    });

    function updateProgress() {
        var value =$('#progbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds) {
        $("#progbarParent").hide();
    }

    function RefreshLayout()
    {
        //Open=1, NOA=2, & Requisition=3
        if(parseInt($("#cboRefType").val())===1)
        {
            $('#trReference,#lblRefNo,#txtRefNo,#btnRefPick,#lblRefDate,#txtRefDate,#lblRefBy,#txtRefBy').hide();
            $('#txtSupplierName,#btnPickSupplier,#lblQty,#lblRate,#cboMeasurementUnit,#txtQty,#txtUnitPrice,#btnAdd').show();
            $('#tblPODetail').datagrid('hideColumn','UnitPrice');
            $('#tblPODetail').datagrid('hideColumn','Qty');
            $('#tblPODetail').datagrid('showColumn','UnitPrice_Entry');
            $('#tblPODetail').datagrid('showColumn','Qty_Entry');
        }
       
        else if(parseInt($("#cboRefType").val())===3)
        {
            $('#trReference,#lblRefNo,#txtRefNo,#btnRefPick,#lblRefDate,#txtRefDate,#lblRefBy,#txtRefBy,#txtSupplierName,#btnPickSupplier').show();
            $('#lblQty,#lblRate,#cboMeasurementUnit,#txtQty,#txtUnitPrice,#btnAdd,#lblModel,#txtVehicleModel,#btnVehicleModel').hide();
            $('#lblRefNo').html("Request No :");
            $('#lblRefDate').html("Request Date :");
            $('#lblRefBy').html("Request By :");
            $('#txtRefNo').attr("placeholder", "Type Request No and pres enter");
            $('#tblPODetail').datagrid('hideColumn','UnitPrice');
            $('#tblPODetail').datagrid('hideColumn','Qty');
            $('#tblPODetail').datagrid('showColumn','UnitPrice_Entry');
            $('#tblPODetail').datagrid('showColumn','Qty_Entry');
        }

        var sPurchaseOrderHeader = sessionStorage.getItem("PurchaseOrderHeader");
        if (sPurchaseOrderHeader != "Add SupplierOrder")
        {
            $('#txtSupplierName,#txtDeliveryToName,#txtBillToName').css('color', 'blue');
            $('#txtSupplierName,#txtDeliveryToName,#txtBillToName').css('fontWeight', 'bold');
            $('#txtRefNo').css('color', 'blue');
            $('#txtRefNo').css('fontWeight', 'bold');
            //Load Supplier Contact Person
            var nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').ContractorID);
            LoadContactPerson(nContractorID,1);

            //Load Delivery To Contact Person
            nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').DeliveryTo);
            LoadContactPerson(nContractorID,2);

            //Load Bill Contact Person
            nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').BillTo);
            LoadContactPerson(nContractorID,3);
        }

        if (sPurchaseOrderHeader === "View SupplierOrder") {
            $('#vidPOBasicInfo,#toolbarPurchaseOrderDetail').find('input, textarea, button, select').attr('disabled','disabled');
            $('#btnSave').hide();
        }
    }

    function RefreshComboBox()
    {
        var oCurrencys = $('#cboCurrency').data('Currencys');
        var oMarketingAccounts = $('#cboMKTPerson').data('MKTPersons');

        $("#cboCurrency").icsLoadCombo({ List: oCurrencys, OptionValue: "CurrencyID", DisplayText: "NameSymbol" });
        $("#cboMKTPerson").icsLoadCombo({ List: oMarketingAccounts, OptionValue: "MarketingAccountID", DisplayText: "Name" });
    }

    function RefreshControls()
    {
       
        var oPurchaseOrder = $('#divPurchaseOrder').data('PurchaseOrder');
        $('#cboRefType').val(oPurchaseOrder.RefTypeInt);
        $('#txtPODate').datebox('setValue',oPurchaseOrder.PODateSt);
        $('#txtRefNo').val(oPurchaseOrder.RefNo);
        $('#txtCRate').val(oPurchaseOrder.CRate);
        $('#txtSupplierName').val(oPurchaseOrder.ContractorName);
        $('#cboRefType').val(oPurchaseOrder.RefTypeInt);
        $('#cboMKTPerson').val(oPurchaseOrder.ConcernPersonID);
        $('#cboCurrency').val(oPurchaseOrder.CurrencyID);
        $('#txtNote').val(oPurchaseOrder.Note);
        if(oPurchaseOrder.PurchaseOrderDetails!=null)
        {
            DynamicRefreshList(oPurchaseOrder.PurchaseOrderDetails, 'tblPODetail');
        }
        if(oPurchaseOrder.POTandCClauses!=null && oPurchaseOrder.POTandCClauses!=[])
        {
            DynamicRefreshList(oPurchaseOrder.POTandCClauses, 'tblPOTandCClauses');
        }
        RefreshSummery();
    }

    function ValidateInput()
    {
        var oPurchaseOrder = $('#divPurchaseOrder').data('PurchaseOrder');
        if(oPurchaseOrder===null)
        {
            alert("Invalid Supplier Order!");
            return false
        }

        var nRefType=parseInt($('#cboRefType').val());
        if(parseInt($('#cboRefType').val())<=0)
        {
            alert("Please select Refrence Type!");
            $("#cboRefType").addClass("errorFieldBorder");
            $("#cboRefType").focus();
            return false;
        }
        else
        {
            $("#cboRefType").removeClass("errorFieldBorder");
        }

        var sPODate= $('#txtPODate').datebox('getValue');
        if(sPODate === null || sPODate==="")
        {
            alert("Please select PO Date!");
            $("#txtPODate").focus();
            return false;
        }

        if(nRefType!=1)
        {
            if(oPurchaseOrder.RefID===null || parseInt(oPurchaseOrder.RefID)<=0)
            {
                var sRefName ="Requisition";
                alert("Please select an Request Number!");
                $("#txtRefNo").addClass("errorFieldBorder");
                $("#txtRefNo").focus();
                return false;
            }
            else
            {
                $("#txtRefNo").removeClass("errorFieldBorder");
            }
        }

        if (oPurchaseOrder.ContractorID===null || parseInt(oPurchaseOrder.ContractorID) <= 0) {
            alert("Please enter Supplier Name.");
            $("#txtSupplierName").addClass("errorFieldBorder");
            $("#txtSupplierName").focus();
            return false;
        } else {
            $("#txtSupplierName").removeClass("errorFieldBorder");
        }

        if ($('#cboMKTPerson').val()===null || parseInt($('#cboMKTPerson').val())<=0)
        {
            alert("Please Select MKT Person!");
            $("#cboMKTPerson").addClass("errorFieldBorder");
            $("#cboMKTPerson").focus();
            return false;
        } else {
            $("#cboMKTPerson").removeClass("errorFieldBorder");
        }

        if ($('#cboCurrency').val()===null || parseInt($('#cboCurrency').val())<=0)
        {
            alert("Please Select Currency!");
            $("#cboCurrency").addClass("errorFieldBorder");
            $("#cboCurrency").focus();
            return false;
        } else {
            $("#cboCurrency").removeClass("errorFieldBorder");
        }

        if (parseFloat(icsRemoveComma($('#txtCRate').val()))<=0)
        {
            alert("Currency Rate Should be Greater than 0.");
            $("#txtCRate").addClass("errorFieldBorder");
            $("#txtCRate").focus();
            return false;
        } else {
            $("#txtCRate").removeClass("errorFieldBorder");
        }

        if ($('#cboContactPerson').val()===null || parseInt($('#cboContactPerson').val())<=0)
        {
            alert("Please Select Contact Person!");
            $("#cboContactPerson").addClass("errorFieldBorder");
            $("#cboContactPerson").focus();
            return false;
        } else {
            $("#cboContactPerson").removeClass("errorFieldBorder");
        }

        var oPODetails = $('#tblPODetail').datagrid('getRows');
        if(oPODetails==null || oPODetails.length<=0)
        {
            alert("Add At least one Detail.");
            return false;
        }

        for(var i =0;i<oPODetails.length;i++)
        {
            if(parseFloat(oPODetails[i].Qty)<=0)
            {
                alert("Quantity Should be greater than 0 for ["+oPODetails[i].ProductName+"]");
                return false;
            }
            if(parseFloat(oPODetails[i].UnitPrice)<=0)
            {
                alert("Unit Price Should be greater than 0 for ["+oPODetails[i].ProductName+"]");
                return false;
            }
        }
     
        return true;
    }

    function RefreshObject()
    {
        var oTempPurchaseOrder = $('#divPurchaseOrder').data('PurchaseOrder');

        var oPurchaseOrder= {
            POID : parseInt(oTempPurchaseOrder.POID),
            BUID : parseInt(sessionStorage.getItem('BUID')),
            PONo : oTempPurchaseOrder.PONo,
            PODate : new Date($('#txtPODate').datebox('getValue')),
            RefTypeInt : parseInt($('#cboRefType').val()),
            RefID : parseInt(oTempPurchaseOrder.RefID),
            StatusInt : parseInt(oTempPurchaseOrder.StatusInt),
            ContractorID : parseInt(oTempPurchaseOrder.ContractorID),
            ContactPersonnelID : parseInt($("#cboContactPerson").val()),
            Note : $.trim($("#txtNote").val()),
            ConcernPersonID : parseInt($("#cboMKTPerson").val()),
            ApproveBy : parseInt(oTempPurchaseOrder.ApproveBy),
            CurrencyID : parseInt($("#cboCurrency").val()),
            CRate: parseFloat(icsRemoveComma($('#txtCRate').val())),
            PaymentTermID:$('#divPurchaseOrder').data('PurchaseOrder').PaymentTermID,
            ShipBy :$.trim($("#txtShipBy").val()),
            TradeTerm :$.trim($("#txtTradeTerm").val()),
            DeliveryTo :$('#divPurchaseOrder').data('PurchaseOrder').DeliveryTo,
            DeliveryToContactPerson :$('#cboDeliveryToContactPerson').val(),
            BillTo :$('#divPurchaseOrder').data('PurchaseOrder').BillTo,
            BIllToContactPerson :$('#cboBIllToContactPerson').val(),
            PurchaseOrderDetails : $('#tblPODetail').datagrid('getRows'),
            POTandCClauses : $('#tblPOTandCClauses').datagrid('getRows')
        };
        return oPurchaseOrder;
    }

    $('#btnSave').click(function(e){
        endEditingTC();
        endEditing();
        var oPurchaseOrder=RefreshObject();
        if(!ValidateInput()) return;
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/PurchaseOrder/Save",
            traditional: true,
            data:  JSON.stringify(oPurchaseOrder),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oPO= jQuery.parseJSON(data);
                if (oPO.ErrorMessage=="" || oPO.ErrorMessage==null)
                {
                     debugger;
                    _oPurchaseOrder=oPO;
                    alert("Data Save Succesfully!!");
                  
                        var oPurchaseQuotation =oPO;
                        var oPurchaseQuotations =sessionStorage.getItem("PurchaseQuotations");
                        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                   
                        if(_oPurchaseOrder.PurchaseOrderDetails!=null)
                        {
                            DynamicRefreshList(_oPurchaseOrder.PurchaseOrderDetails, 'tblPODetail');
                        }
                
                        var oPurchaseOrders =sessionStorage.getItem("PurchaseOrders");
                        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));

                        if(oPurchaseOrders!=null)
                        {
                            oPurchaseOrders = jQuery.parseJSON(oPurchaseOrders);
                        }
                        else
                        {
                            oPurchaseOrders=[];
                        }
                        if(nIndex!=-1)
                        {
                            oPurchaseOrders[nIndex]=_oPurchaseOrder;
                        }
                        else
                        {
                            sessionStorage.setItem("SelectedRowIndex", oPurchaseOrders.length);
                            oPurchaseOrders.push(_oPurchaseOrder);
                        }
                        sessionStorage.setItem("PurchaseOrders", JSON.stringify(oPurchaseOrders));
                        window.location.href = sessionStorage.getItem('BackLink');

                    }
               
                else
                {
                    alert(oPO.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $('#cboRefType').change(function(e){
        RefreshLayout();
        $('#txtRefNo').val('');
        $('#txtRefDate').val('');
        $('#txtRefBy').val('');
        $('#txtSupplierName').val('');
        $('#cboCntactPerson').empty();
        RefreshList([]);
        $('#divPurchaseOrder').data('PurchaseOrder').RefID = 0;
        $('#divPurchaseOrder').data('PurchaseOrder').ContractorID = 0;
    });

    $("#btnAdd").click(function () {
        if (!ValidatePurchaseOrderDetail()) return;
        var oPurchaseOrderDetail = DetailRefreshObject();
        $('#tblPODetail').datagrid('appendRow', oPurchaseOrderDetail);

        //Reset Detail Control
        $("#txtProductName,#txtVehicleModel").removeClass("fontColorOfPickItem");
        $('#txtProductName').data('Product', null);
        $("#txtProductName,#txtVehicleModel").val("");
        $('#txtQty').val('0.00');
        $('#txtUnitPrice').val('0.00');
        $('#txtVehicleModel').data('VehicleModel',null);
        LoadMeasurementUnit(0, null);
        RefreshGrid();
        $('#txtProductName').focus();
    });

    $("#btnRemove").click(function () {
        var oPODetail = $('#tblPODetail').datagrid('getSelected');
        if (oPODetail == null) {
            alert("Please select a item from list!");
            return;
        }
        var conf = confirm("Confirm to delete?");
        if (conf == false) return;

        endEditing();
        var SelectedRowIndex = $('#tblPODetail').datagrid('getRowIndex', oPODetail);
        $('#tblPODetail').datagrid('deleteRow', SelectedRowIndex);

        var ooPODetails = $('#tblPODetail').datagrid('getRows');
        RefreshList(ooPODetails);
    });

    function ValidatePurchaseOrderDetail() {
        var oProduct = $('#txtProductName').data('Product');
        if (oProduct == null || parseInt(oProduct.ProductID) <= 0) {
            alert("Please Pick Product!");
            $('#txtProductName').focus();
            return false;
        }
        var oPODetails = $('#tblPODetail').datagrid('getRows');
        for (var i = 0; i < oPODetails.length; i++) {
            if (parseInt(oPODetails[i].ProductID) == parseInt(oProduct.ProductID)) {
                alert("Your Selected Product Already Exists!");
                $('#txtProductName').focus();
                return false;
            }
        }
        if($('#cboMeasurementUnit').val() === null || parseInt($('#cboMeasurementUnit').val()) <= 0) {
            alert("Please select an Unit");
            $('#cboMeasurementUnit').focus();
            return false;
        }

        var nQty = icsRemoveComma($('#txtQty').val());
        if (nQty == null || nQty == "" || parseFloat(nQty) <= 0) {
            alert("Please Enter Invoice Qty!");
            $('#txtQty').focus();
            return false;
        }
        var nUnitPrice = icsRemoveComma($('#txtUnitPrice').val());
        if (nUnitPrice == null || nUnitPrice == "" || parseFloat(nUnitPrice) <= 0) {
            alert("Please Enter Unit Price!");
            $('#txtUnitPrice').focus();
            return false;
        }
        if(parseInt($('#cboRefType').val())==1)
        {
            if($('#txtVehicleModel').data('VehicleModel')==null)
            {
                alert("Please Select Vehicle Model.");
                $('#txtVehicleModel').focus();
                return false;
            }
        }

        return true;
    }

    function DetailRefreshObject() {
        var oProduct = $('#txtProductName').data('Product');
        var nUnitID = parseInt($('#cboMeasurementUnit').val());
        var sUnitName = GetUnitNameSymbol(nUnitID, true);
        var sSymbol = GetUnitNameSymbol(nUnitID, false);
        var nQty = parseFloat(icsRemoveComma($('#txtQty').val()));
        var nUnitPrice = parseFloat(icsRemoveComma($('#txtUnitPrice').val()));
        var oPurchaseOrderDetail = {
            PODetailID: 0,
            POID: 0,
            ProductID: oProduct.ProductID,
            MUnitID: nUnitID,
            Qty: nQty,
            Qty_Entry: nQty,
            UnitPrice: nUnitPrice,
            UnitPrice_Entry: nUnitPrice,
            AmountST : formatPrice(nQty * nUnitPrice),
            ProductCode: oProduct.ProductCode,
            ProductName: oProduct.ProductName,
            UnitSymbol: sSymbol,
            VehicleModelID:$('#txtVehicleModel').data('VehicleModel').VehicleModelID,
            ModelShortName:$('#txtVehicleModel').data('VehicleModel').ModelShortName+'['+$('#txtVehicleModel').data('VehicleModel').ModelNo+']' 
        };
        return oPurchaseOrderDetail;
    }

    function RefreshList(oPurchaseOrderDetails) {
        data = oPurchaseOrderDetails;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblPODetail').datagrid('loadData', data);
        RefreshSummery();
    }

    $("#btnRefresh").click(function () {
        endEditing();
        data = $('#tblPODetail').datagrid('getRows');
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblPODetail').datagrid('loadData', data);
        RefreshSummery();
    });

    function RefreshGrid() {
        endEditing();
        data = $('#tblPODetail').datagrid('getRows');
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblPODetail').datagrid('loadData', data);
        RefreshSummery();
    }

    function RefreshSummery() {
        var nTotalAmount = 0;
        var oPODetails = $('#tblPODetail').datagrid('getRows');
        for (var i = 0; i < oPODetails.length; i++) {
            nTotalAmount = nTotalAmount + (parseFloat(oPODetails[i].Qty)*parseFloat(oPODetails[i].UnitPrice));
        }
        $('#lblTotalAmount').html(formatPrice(nTotalAmount));
    }

    $("#btnClose").click(function(){
        window.location.href = sessionStorage.getItem('BackLink');
    });

    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            window.location.href = sessionStorage.getItem('BackLink');
        }
    });

    $("#btnRefreshPOTandC").click(function (e) {
        endEditingTC();
        var oPOTandCClauses = $('#tblPOTandCClauses').datagrid('getRows');
        DynamicRefreshList(oPOTandCClauses, "tblPOTandCClauses");
    });

    $("#btnRemovePOTandC").click(function (e) {
        var oPOTandCClauses = $('#tblPOTandCClauses').datagrid('getSelected');
        if(oPOTandCClauses==null)
        {
            alert("Please select a item from list!");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblPOTandCClauses').datagrid('getRowIndex',oPOTandCClauses);
        alert("Delete sucessfully");
        $('#tblPOTandCClauses').datagrid('deleteRow',SelectedRowIndex);
        var oPOTandCClauses = $('#tblPOTandCClauses').datagrid('getRows');
        DynamicRefreshList(oPOTandCClauses, "tblPOTandCClauses");
    });


    //Start Grid Edit
    var editTCIndex = undefined;
    function endEditingTC() {
        if (editTCIndex == undefined) { return true }

        if ($('#tblPOTandCClauses').datagrid('validateRow', editTCIndex)) {
            $('#tblPOTandCClauses').datagrid('endEdit', editTCIndex);
            editTCIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRowTC(index) {
        if (editTCIndex != index) {
            if (endEditingTC()) {
                $('#tblPOTandCClauses').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oPOTandCClause= $('#tblPOTandCClauses').datagrid('getSelected');
                editTCIndex = index;
            }
            else {
                $('#tblPOTandCClauses').datagrid('selectRow', editTCIndex);
            }
        }
    }

    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#tblPODetail').datagrid('validateRow', editIndex)) {
            $('#tblPODetail').datagrid('endEdit', editIndex);
            $('#tblPODetail').datagrid('selectRow', editIndex);
            var oPODetail = $('#tblPODetail').datagrid('getSelected');
            if (oPODetail == null)
            {
                return;
            }
            oPODetail.Qty=parseFloat(oPODetail.Qty_Entry);
            oPODetail.UnitPrice=parseFloat(oPODetail.UnitPrice_Entry);
            oPODetail.AmountST=formatPrice((parseFloat(oPODetail.UnitPrice_Entry)*parseFloat(oPODetail.Qty_Entry)));
            $('#tblPODetail').datagrid('updateRow', { index: editIndex, row: oPODetail });
            RefreshSummery();
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRow(index) {

        if (editIndex != index) {
            if (endEditing()) {
                $('#tblPODetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oPODetail= $('#tblPODetail').datagrid('getSelected');
                editIndex = index;
            }
            else {
                $('#tblPODetail').datagrid('selectRow', editIndex);
            }
        }
    }
    //end grid edit
    $("#txtPaymentTerm").keydown(function (e){
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            PickPaymentTerms();
        }else   if (code == 8) //backspace=8
        {
            $('#txtPaymentTerm').removeClass('fontColorOfPickItem');
            $('#divPurchaseOrder').data('PurchaseOrder').PaymentTermID=0;
        }
    });
    function PickPaymentTerms()
    {
        var oPaymentTerm = { TermText: $.trim($('#txtPaymentTerm').val()), BUID:sessionStorage.getItem('BUID')};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oPaymentTerm,
            ControllerName: "PaymentTerm",
            ActionName: "GetPaymentTermsForInvoice",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PaymentTermID> 0) {

                    var tblColums = []; var oColumn = { field: "FullTerm", title: "Name", width: 520, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPaymentTerms',
                        winclass: 'clsPaymentTerm',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblPaymentTerms',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameDaysInString',
                        windowTittle: 'Payment Term List'

                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });
    }

    //Delivery to
    $("#txtDeliveryToName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //Open=1, NOA=2, & Requisition=3
            PickDeliveryTo($.trim($('#txtDeliveryToName').val()));
        }else  if (code == 8) //backspace=8
        {
            $("#txtDeliveryToName").removeClass("fontColorOfPickItem");
            $('#divPurchaseOrder').data('PurchaseOrder').DeliveryTo=0;
            $("#cboDeliveryToContactPerson").icsLoadCombo({ List: [], OptionValue: "ContactPersonnelID", DisplayText: "Name" });
        }

    })
    function PickDeliveryTo(sDeliveryToName)
    {
        var oContractor = { Params: 7 + '~' + sDeliveryToName+'~'+sessionStorage.getItem("BUID") };//internal contractor : 7
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        var $This=$(this);
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 50, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winDeliveryTo',
                        winclass:'clsDeliveryTo',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblDeliveryTos',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Delivery To List',
                        TextBox:$This
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    $('#btnPickDeliveryTo').click(function () {
        PickDeliveryTo("");
    });
    //BIll To
    $("#txtBillToName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //Open=1, NOA=2, & Requisition=3
            PickBillTo($.trim($('#txtBillToName').val()));
        }else  if (code == 8) //backspace=8
        {
            $("#txtBillToName").removeClass("fontColorOfPickItem");
            $('#divPurchaseOrder').data('PurchaseOrder').BillTo=0;
            $("#cboBillToContactPerson").icsLoadCombo({ List: [], OptionValue: "ContactPersonnelID", DisplayText: "Name" });
        }

    })
    function PickBillTo(sBillToName)
    {
        var oContractor = { Params: 7 + '~' + sBillToName+'~'+sessionStorage.getItem("BUID") };//internal contractor : 7
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        var $This=$(this);
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 50, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBillTo',
                        winclass:'clsBillTo',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblBillTos',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Bill To List',
                        TextBox:$This
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
    $('#btnPickBillTo').click(function () {
        PickBillTo("");
    });

    //Start Ref No Pick
    $("#txtRefNo").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //Open=1, NOA=2, & Requisition=3
            if(parseInt($("#cboRefType").val())===2)
            {
                var sRefNo= $.trim($('#txtRefNo').val());
                PickNOA(sRefNo);
            }
            else if(parseInt($("#cboRefType").val())===3)
            {
                var sRefNo= $.trim($('#txtRefNo').val());
                PickRequisition(sRefNo);
            }
        }
    });
    $("#btnRefPick").click(function () {
        //Open=1, NOA=2, & Requisition=3
        if(parseInt($("#cboRefType").val())===3)
        {
            var sRefNo= $.trim($('#txtRefNo').val());
            PickRequisition(sRefNo);
        }

    });
    $('#txtRefNo').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtRefNo").removeClass("fontColorOfPickItem");
            $('#divPurchaseOrder').data('PurchaseOrder').RefID=0;
            $("#txtRefDate,#txtRefBy").val("");
        }
    });
   
    function PickRequisition(sRefNo)
    {
        var oPurchaseRequisition = {
            PRNo : sRefNo,
            BUID : sessionStorage.getItem('BUID')
        };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oPurchaseRequisition,
            ControllerName: "SparePartsRequest",
            ActionName: "GetPurchaseRequsitionFORPO",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PRID> 0) {
                    var tblColums = []; var oColumn = { field: "PRNo", title: "Req No", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "PRDateST", title: "Requisition Date", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "PrepareByName", title: "Requisition By", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPurchaseRequsitions',
                        winclass: 'clsPurchaseRequsition',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblPurchaseRequsitions',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'PRNo',
                        windowTittle: 'Purchase Requsition List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });
    }
    //end Ref No Pick


    $("#txtVehicleModel").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oModel={
                ModelNo: $.trim( $("#txtVehicleModel").val())
            };
            PickVehileModel(oModel);
        }
        if (code == 8) //backspace=8
        {
            var txtVehicleModel = document.getElementById("txtVehicleModel");
            txtVehicleModel.value = '';
            txtVehicleModel.style.color = "black";
            txtVehicleModel.style.fontWeight = "normal";
        }
    });
    $("#btnVehicleModel").click(function () {
        var oModel={
            ModelNo: $.trim( $("#txtVehicleModel").val())
        };
        PickVehileModel(oModel);
    });
    function PickVehileModel(oModel)
    {
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oModel,
            ControllerName: "VehicleModel",
            ActionName: "GetVehicleModels",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0)
            {
                if (response.objs[0].VehicleModelID > 0) {
                    var tblColums = [];var oColumn ={};
                    oColumn= { field: "ModelNo", title: "ModelNo", width: 350, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ModelShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winVehicleModel',
                        winclass: 'clsVehicleModel',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblVehicleModel',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ModelNo',
                        windowTittle: 'Model List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert("Data Not Found");
                    return;
                }
            }
            else{
                alert("Data Not Found");
                return;
            }
        });

    }



    //Start Supplier Picker
    $("#txtSupplierName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //Open=1, NOA=2, & Requisition=3
            if(parseInt($("#cboRefType").val())===2)
            {
                PickSupplierForNOA($.trim($('#txtSupplierName').val()));
            }
            else
            {
                PickSupplier($.trim($('#txtSupplierName').val()));
            }
        }
    });
    $("#btnPickSupplier").click(function () {
        //Open=1, NOA=2, & Requisition=3
        if(parseInt($("#cboRefType").val())===2)
        {
            PickSupplierForNOA($.trim($('#txtSupplierName').val()));
        }
        else
        {
            PickSupplier($.trim($('#txtSupplierName').val()));
        }
    });
    $('#txtSupplierName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtSupplierName").removeClass("fontColorOfPickItem");
            $('#divPurchaseOrder').data('PurchaseOrder').ContractorID=0;
            $("#cboContactPerson").icsLoadCombo({ List: [], OptionValue: "ContactPersonnelID", DisplayText: "Name" });
        }
    });
    function PickSupplier(sSupplierName)
    {
        var oContractor = { Params: 1 + '~' + sSupplierName+'~'+sessionStorage.getItem("BUID") };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        var $This=$(this);
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 50, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winContractor',
                        winclass:'clsContractor',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblContractors',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Contractor List',
                        TextBox:$This
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }
  
    //End Supplier Picker


    //Product Pick
    $("#txtProductName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtProductName').val()==null || $('#txtProductName').val()=="")
            {
                alert("Please Type Product and Press Enter.");
                $('#txtProductName').focus();
                return;
            }

            //Open=1, NOA=2, & Requisition=3
            if(parseInt($("#cboRefType").val())===1)
            {
                PickProduct();
            }
            else
            {
                var nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').ContractorID);
                if(parseInt($("#cboRefType").val())===2)
                {
                    if(nContractorID<=0)
                    {
                        alert("Please select a supplier!");
                        return;
                    }
                }
                PickProductForPR();
            }
        }
    });
    $("#btnPickProduct").click(function () {
        //Open=1, NOA=2, & Requisition=3
        if(parseInt($("#cboRefType").val())===1)
        {
            PickProduct();
        }
        else
        {
            var nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').ContractorID);
            if(parseInt($("#cboRefType").val())===2)
            {
                if(nContractorID<=0)
                {
                    alert("Please select a supplier!");
                    return;
                }
            }
            PickProductForPR(nContractorID);
        }
    });
    $('#txtProductName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtProductName").removeClass("fontColorOfPickItem");
            $('#txtProductName').data('Product', null);
        }
    });
    function PickProduct()
    {
        var nBUID = parseInt(sessionStorage.getItem("BUID"));
        var oProduct = { BUID: nBUID, ProductName: $.trim($('#txtProductName').val())};
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oProduct,
            ControllerName: "PurchaseOrder",
            ActionName: "GetProducts",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Part No", width: 80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Item Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductCategoryName", title: "Category", width: 100, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Part List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    function PickProductForPR(nSupplierID)
    {
       
        var nRefType = parseInt($("#cboRefType").val());
        var nRefID = $('#divPurchaseOrder').data('PurchaseOrder').RefID;
        if(parseInt(nRefID)<=0)
        {
            alert("Please select an Request!");
            return;
        }

        var oPurchaseOrder = {RefID: parseInt(nRefID), ContractorID:nSupplierID };
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oPurchaseOrder,
            ControllerName: "SupplierOrder",
            ActionName: "GetsProductsFromPR",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = []; var oColumn =null;
                    debugger;
                   
                    oColumn = { field: "ProductCode", title: "Part No", width:80, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Item Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ModelShortName", title: "Model Name", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "UnitPriceSt", title: "Unit Price", width: 100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "QtySt", title: "Qty", width: 50, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "UnitSymbol", title: "Unit", width: 50, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPRNOAPicker',
                        winclass: 'clsProductPRNOAPicker',
                        winwidth: 750,
                        winheight: 460,
                        tableid: 'tblProductPRNOAPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Part List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    //End Product


    //Start terms & Conditions
    $("#btnPickPOTandC").click(function () {
        var oPOTandCSetup = {BUID:sessionStorage.getItem('BUID') };
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oPOTandCSetup,
            ControllerName: "POTandCSetup",
            ActionName: "Gets",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].POTandCSetupID > 0) {
                    var tblColums = []; var oColumn = { field: "ClauseAndType", title: "PO Term and Condition", width:500, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPOTandCSetupPicker',
                        winclass: 'clsPOTandCSetupPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblPOTandCSetupPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'POTandCSetup List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert("Data not Found");
                }

            }
        });

    });
    //end terms & Conditions

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj)
    {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if(oPickerobj.winid=='winPurchaseRequsitions')
        {
            if(oreturnObj!=null && oreturnObj.PRID>0)
            {
                $('#txtRefNo').val(oreturnObj.PRNo);
                $('#txtRefNo').addClass('fontColorOfPickItem');
                $('#txtRefDate').val(oreturnObj.PRDateST);
                $('#txtRefBy').val(oreturnObj.PrepareByName);
                $('#divPurchaseOrder').data('PurchaseOrder').RefID=parseInt(oreturnObj.PRID);
            }
        }
        else if (oPickerobj.winid=='winVehicleModel')
        {
            debugger;
            if(parseInt(oreturnObj.VehicleModelID)>0)
            {
                $('#txtVehicleModel').val(oreturnObj.ModelShortName+'['+ oreturnObj.ModelNo+']');
                $('#txtVehicleModel').data('VehicleModel',oreturnObj);
                $("#txtVehicleModel").addClass('fontColorOfPickItem');
                $("#txtVehicleModel").focus();
            }
        }
        else if (oPickerobj.winid == 'winContractor')//Contractor region
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $('#txtSupplierName').val(oreturnObj.Name);
                $('#txtSupplierName').addClass('fontColorOfPickItem');
                $('#divPurchaseOrder').data('PurchaseOrder').ContractorID = parseInt(oreturnObj.ContractorID);
                $('#txtSupplierName').focus();
                //Load contract Person 1:Supplier;2:Delivery To;3:Bill To
                LoadContactPerson(parseInt(oreturnObj.ContractorID),1);
            }
        }
        else if (oPickerobj.winid == 'winProductPicker')
        {
            if (oreturnObj != null && parseInt(oreturnObj.ProductID) > 0)
            {
                $('#txtProductName').val(oreturnObj.ProductName);
                $('#txtProductName').addClass('fontColorOfPickItem');
                $('#txtProductName').data('Product', oreturnObj);
                $('#txtProductName').focus();
                LoadMeasurementUnit(parseInt(oreturnObj.ProductID), oreturnObj);
                $('#txtQty').focus();
            }
        }
        else if (oPickerobj.winid == 'winProductPRNOAPicker')
        {
            if (oreturnobjs!=null && oreturnobjs.length > 0)
            {
                SaveDetail_PRNOA(oreturnobjs);
            }
        }
        else if (oPickerobj.winid == 'winPOTandCSetupPicker')
        {
            if (oreturnobjs!=null && oreturnobjs.length > 0) {
                SavePOTnC(oreturnobjs);
            }
        }else if (oPickerobj.winid =='winPaymentTerms')
        {
            if (oreturnObj != null && parseInt(oreturnObj.PaymentTermID)> 0) {
                $('#txtPaymentTerm').val(oreturnObj.FullTerm);
                $('#txtPaymentTerm').addClass('fontColorOfPickItem');
                $('#divPurchaseOrder').data('PurchaseOrder').PaymentTermID=parseInt(oreturnObj.PaymentTermID);
                $('#txtBILLNo').focus();
            }
        } 
        else if (oPickerobj.winid == 'winDeliveryTo')//Contractor region
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $('#txtDeliveryToName').val(oreturnObj.Name);
                $('#txtDeliveryToName').addClass('fontColorOfPickItem');
                $('#divPurchaseOrder').data('PurchaseOrder').DeliveryTo = parseInt(oreturnObj.ContractorID);
                $('#txtDeliveryToName').focus();
                //Load contract Person 1:Supplier;2:Delivery To;3:Bill To
                LoadContactPerson(parseInt(oreturnObj.ContractorID),2);
            }
        }  
        else if (oPickerobj.winid == 'winBillTo')//Contractor region
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $('#txtBillToName').val(oreturnObj.Name);
                $('#txtBillToName').addClass('fontColorOfPickItem');
                $('#divPurchaseOrder').data('PurchaseOrder').BillTo = parseInt(oreturnObj.ContractorID);
                $('#txtBillToName').focus();
                //Load contract Person 1:Supplier;2:Delivery To;3:Bill To
                LoadContactPerson(parseInt(oreturnObj.ContractorID),3);
            }
        }
    }

    function SavePOTnC(oPOTandCSetups)
    {
        if (oPOTandCSetups != null && oPOTandCSetups.length > 0)
        {
            var oPOTandCClauses = $('#tblPOTandCClauses').datagrid('getRows');
            if (oPOTandCSetups.length > 0)
            {
                for (var i = 0; i < oPOTandCSetups.length; i++)
                {
                    if(!ExistTAndC(oPOTandCSetups[i].ClauseType, oPOTandCSetups[i].Clause,oPOTandCClauses))
                    {
                        var oPOTandCClausesTemp = {
                            POTandCClauseID: 0,
                            POID: 0,
                            ClauseType:oPOTandCSetups[i].ClauseType,
                            ClauseTypeSt:oPOTandCSetups[i].ClauseTypeSt,
                            TermsAndCondition: oPOTandCSetups[i].Clause
                        };
                        $('#tblPOTandCClauses').datagrid('appendRow', oPOTandCClausesTemp);
                    }

                }

            }

        }
    }

    function ExistTAndC(nClauseType,sClause, oPOTandCClauses )
    {
        if(oPOTandCClauses==null || oPOTandCClauses.length<0)
        {
            return false;
        }
        for(var i = 0;i<oPOTandCClauses.length;i++)
        {
            if(parseInt(oPOTandCClauses[i].ClauseType)== parseInt(nClauseType) && oPOTandCClauses[i].TermsAndCondition == sClause)
            {
                return true;
            }
        }
        return false;
    }

    function SaveDetail_PRNOA(oPurchaseOrderDetails)
    {
        var oPriviousDetails = $('#tblPODetail').datagrid('getRows');
        for (i=0; i<oPurchaseOrderDetails.length;i++)
        {
            if(!ICS_IsExistForTwoProperty(oPriviousDetails,'ProductID', oPurchaseOrderDetails[i].ProductID, 'VehicleModelID', oPurchaseOrderDetails[i].VehicleModelID))
            {
                $('#tblPODetail').datagrid('appendRow', oPurchaseOrderDetails[i]);
            }
        }
    }

    function LoadMeasurementUnit(nProductID, oSelectedProduct) {
        var listItems = "";
        $("#cboMeasurementUnit").data('MeasurementUnits', []);
        $("#cboMeasurementUnit").empty();
        if (parseInt(nProductID) > 0) {
            var oProduct = {
                ProductID: nProductID
            };
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress") + "/MeasurementUnit/GetsMUnits",
                data: JSON.stringify(oProduct),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oMeasurementUnits = jQuery.parseJSON(data);
                    $("#cboMeasurementUnit").data('MeasurementUnits', oMeasurementUnits);
                    if (oMeasurementUnits.length > 0) {
                        for (var i = 0; i < oMeasurementUnits.length; i++) {
                            listItems += "<option value='" + oMeasurementUnits[i].MeasurementUnitID + "'>" + oMeasurementUnits[i].UnitName+'['+oMeasurementUnits[i].Symbol +"]</option>";
                        }
                        $("#cboMeasurementUnit").html(listItems);
                        $("#cboMeasurementUnit").val(oSelectedProduct.MeasurementUnitID);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    }

    function GetUnitNameSymbol(nUnitID, bIsName) {
        var sUnitNameSymbol = "";
        var oMeasurementUnits = $("#cboMeasurementUnit").data('MeasurementUnits');
        for (var i = 0; i < oMeasurementUnits.length; i++) {
            if (parseInt(oMeasurementUnits[i].MeasurementUnitID) == parseInt(nUnitID)) {
                if (bIsName == true) {
                    return oMeasurementUnits[i].UnitName;
                }
                else {
                    return oMeasurementUnits[i].Symbol;
                }
            }
        }
        return sUnitNameSymbol;
    }

    function LoadContactPerson(nContractorID, nConType) {
        var listItems = "";
        if (parseInt(nContractorID) > 0)
        {
            var oContractor = {ContractorID: nContractorID};
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress")+"/Contractor/GetContactPersonnels",
                data: JSON.stringify(oContractor),
                contentType: "application/json; charset=utf-8",
                success: function (data)
                {
                    debugger;
                    var oContractorPersonals = jQuery.parseJSON(data);
                    if (oContractorPersonals.length > 0)
                    {
                        var sContractPerson = "cboContactPerson";
                        var nContactPersonnelID = parseInt($('#divPurchaseOrder').data('PurchaseOrder').ContactPersonnelID);
                        if(parseInt(nConType)==2)
                        {
                            sContractPerson="cboDeliveryToContactPerson";
                            nContactPersonnelID = parseInt($('#divPurchaseOrder').data('PurchaseOrder').DeliveryToContactPerson);
                        }else if(parseInt(nConType)==3)
                        {
                            sContractPerson="cboBIllToContactPerson";
                            nContactPersonnelID = parseInt($('#divPurchaseOrder').data('PurchaseOrder').BIllToContactPerson);
                        }
                        $("#"+sContractPerson).icsLoadCombo({List: oContractorPersonals,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                        $("#"+sContractPerson).val(nContactPersonnelID);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }

            });
        }
    }

    function ReLoadLoadContactPerson (nConType)
    {
        debugger;
        var nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').ContractorID);
        if(parseInt(nConType)==2)
        {
            nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').DeliveryTo);
        }else if(parseInt(nConType)==3)
        {
            nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').BillTo);
        }
        if(nContractorID<=0)
        {
            if(parseInt(nConType)==1)
            {
                alert("Please Pick a Supplier!");
            }else if(parseInt(nConType)==2)
            {
                alert("Please Pick a Delivery To!");
            }if(parseInt(nConType)==3)
            {
                alert("Please Pick a Bill To!");
            }
            return;
        }
        LoadContactPerson(nContractorID,nConType);
    }

    function NewContactPerson(nConType)
    {
        var nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').ContractorID);
        if(parseInt(nConType)==2)
        {
            nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').DeliveryTo);
        }else if(parseInt(nConType)==3)
        {
            nContractorID=parseInt($('#divPurchaseOrder').data('PurchaseOrder').BillTo);
        }
        if(parseInt(nContractorID)<=0)
        {
            if(parseInt(nConType)==1)
            {
                alert("Please Pick a Supplier!");
            }else if(parseInt(nConType)==2)
            {
                alert("Please Pick a Delivery To!");
            }if(parseInt(nConType)==3)
            {
                alert("Please Pick a Bill To!");
            }
            return;
        }
        sessionStorage.setItem("ContractorBackTo", "");
        sessionStorage.setItem("SelectedRowIndex", 0);
        sessionStorage.setItem("ContractorHeader", "Add Contact Personnel");
        window.open(_sBaseAddress+"/Contractor/ViewContactPersonnel?id="+nContractorID,"_blank");

        $('#btnReload').click(function(e){
            LoadContractPersonals(_oPurchaseQuotation.SupplierID);
        });
    
      
    }

         
   


</script>