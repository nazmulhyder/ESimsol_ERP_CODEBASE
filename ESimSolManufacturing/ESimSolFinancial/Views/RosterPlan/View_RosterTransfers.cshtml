@{
    ViewBag.Title = "Shift Rostering";
}
@model ESimSol.BusinessObjects.RosterPlanEmployee

<div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
    <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
        <label style="font-size:18px;">Please wait</label>
        <div id="progressbar" style="width:100%;height:37px;"></div>
    </div>
</div>
<div id="tabPQDetailAndTermsAndCondition" class="easyui-tabs menuMainCollectionTable" style="height:560px;">
    <div title="Shift Rostering" style="padding:2px; font-size:12px; font-style:normal;height:483px;">
        <table id="tblRosterPlanEmployees" class="easyui-datagrid" singleselect="true" style="height:100%; width: 100%;"
               data-options="singleselect:true,rownumbers:false,fit:true,fitcolumns:true,singleselect:true,autorowheight:false,toolbar:'#toolbar',footer:'#ft'"></table>

        <div id="toolbar">
            Date :
            <input id="dtStartDate" name="dtStartDate" type="text" style="width:100px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
            To <input id="dtEndDate" name="dtStartDate" type="text" style="width: 100px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
            <input type="text" id="txtSearchbyNameCode" placeholder="Search by Code" style="width: 150px" />
            <select id="cboDepartment" class="easyui-combotree" style="width:200px;"></select>
            <select id="cboHRMShift" style="width:150px;"></select>
            <input type="checkbox" id="chkIsRostered"  /> Rostered
            <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Search</a>
            <input type="button" onclick="TransferShift()" value="Set Roster Plan" />
            <input type="button" onclick="TransferShiftDept()" value="Set Roster Plan (Dept)" />
        </div>
        <div id="ft" style="padding:2px 2px; width:100%">
            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tr>
                    <td style="width:200px">
                        <label id="lblcount" style="font-size:13px; font-weight:bold">Item Count : 0 of 0</label>
                    </td>
                    <td>
                        <label style="font-size:13px; font-weight:bold">Number Of Record :</label> <input id="txtRecordCount" type="text" style="width:40px" />&nbsp;
                        <a id="btnNext" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-forword" plain="fales">Next</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>

    <div title="Loader" style="padding:2px; font-size:12px; font-style:normal;width:50%;">
       <div style="text-align:center; overflow:hidden; width: 50%; margin-left: 20%; margin-right: 20%; margin-top: 10%; margin-bottom: 20%;">
           <fieldset style="text-align:left;padding:10px 20px;">
               <legend>Upload Roster Plan</legend>
               @using (Html.BeginForm("View_RosterTransfers", "RosterPlan", FormMethod.Post, new { enctype = "multipart/form-data" }))
               {
                   <table style="width:100%;" cellpadding="3" cellspacing="2">
                       <tr style="width:100%;">
                           <td style="width:15%;text-align:left;">
                               <input type="file" id="fileRosters" name="fileRosters" />
                           </td>
                       </tr>
                       <tr>
                           <td style="text-align:left;">
                               Date :
                               <input id="dtStartDateLoader" name="dtStartDateLoader" type="text" style="width: 100px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                               To
                               <input id="dtEndDateLoader" name="dtEndDateLoader" type="text" style="width: 100px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                           </td>
                       </tr>
                       <tr style="height: 40px;">
                           <td style="text-align:left;">
                               <input type="submit" id="btnImportRosterXL" value=" Import List" class="icon-up PrintList" style="margin-top: 4px;" />
                           </td>
                       </tr>
                   </table>
               }

               <div style="float:left; width:20%">
                   <a id="btnDownload" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-down" plain="true" style="margin-top: 4px; width: 200px; text-align:left;" onclick="SampleFormatDownload()">Download Excel Format</a>
               </div>
           </fieldset>

        </div>
    </div>

    <div title="Adv. Search" style="padding:2px; font-size:12px; font-style:normal;width:100%;height:700px;">
        <table cellpadding="2" cellspacing="2" style="width: 70%; margin-top:3%;">
            <tr>
                <td style="width:40%; text-align:right;">Date :</td>
                <td style="width:60%; text-align:left; padding-left:2.5%;">
                    <input id="dtStartDateAdv" type="text" style="width: 30%" class="easyui-datebox" required="required" data-options="formatter:icsdateformat, parser:icsdateparser" />
                    &nbsp; To &nbsp;
                    <input id="dtEndDateAdv" type="text" style="width: 30%" class="easyui-datebox" required="required" data-options="formatter:icsdateformat, parser:icsdateparser" />

                </td>
            </tr>
            <tr>
                <td style="width:40%; text-align:right;">BusinessUnit :</td>
                <td style="width:60%; text-align:right;">
                    <input id="txtBusinessUnit_Collection" type="text" style="width:85%;" placeholder="Pick Business Unit" />
                    <a id="btnBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                    <a id="btnResetBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

                </td>
            </tr>
            <tr>
                <td style="width:40%; text-align:right;">Location :</td>
                <td style="width:60%; text-align:right;">
                    <input id="txtLocation_Colection" style="width:85%;" placeholder="Pick Location" type="text" />
                    <a id="btnLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                    <a id="btnResetLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
                </td>
            </tr>
            <tr>
                <td style="width:40%; text-align:right;">Department :</td>
                <td style="width:60%; text-align:right;">
                    <input id="txtDepartment_Collection" style="width:85%;" type="text" placeholder="Pick Department" />
                    <a id="btnDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                    <a id="btnResetDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
                </td>
            </tr>
            <tr>
                <td style="width:40%; text-align:right;">Designation :</td>
                <td style="width:60%; text-align:right;">
                    <input id="txtDesignation_Collection" type="text" style="width:85%;" placeholder="Pick Designation" />
                    <a id="btnDesignationPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                    <a id="btnResetDesignationPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
                </td>
            </tr>
            <tr>
                <td style="width:40%; text-align:right;">Salary Scheme :</td>
                <td style="width:60%; text-align:right;">
                    <input id="txtSalaryScheme" type="text" style="width:85%;" placeholder="Type salary scheme name & enter" />
                    <a id="btnSalaryScheme" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                    <a id="btnCSalaryScheme" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
                </td>
            </tr>
            <tr>
                <td style="width:40%; text-align:right;">Group :</td>
                <td style="width:60%; text-align:right;">
                    <input id="txtEmployeeGroup" style="width:85%;" type="text" placeholder="Enter Group" />
                    <a id="btnEmployeeGroupPicker" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                    <a id="btnEmployeeGroupPickerReset" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
                </td>
            </tr>
            <tr>
                <td style="width:40%; text-align:right;">Block :</td>
                <td style="width:60%; text-align:right;">
                    <input id="txtEmployeeBlock" style="width:85%;" type="text" placeholder="Enter Block" />
                    <a id="btnEmployeeBlockPicker" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick" />
                    <a id="btnEmployeeBlockPickerReset" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
                </td>
            </tr>
            <tr>
                <td style="width:40%; text-align:right;">Employee :</td>
                <td style="width:60%; text-align:right;">
                    <input id="txtEmployee_Collection" style="width:85%;" type="text" placeholder="Type Code & Enter" />
                    <a id="btnEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                    <a id="btnCEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
                </td>
            </tr>
            <tr>
                <td style="width:40%; text-align:right;">Shift :</td>
                <td style="width:60%; text-align:right;">
                    <input id="txtShift" style="width:85%;" type="text" placeholder="Pick Shift" />
                    <a id="btnShift" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                    <a id="btnResetShift" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
                </td>
            </tr>
            <tr>
                <td style="width:40%; text-align:right;">Salary Range :</td>
                <td style="width:60%; text-align:right;margin-left:4%;">
                    <input id="txtStartSalaryRange" type="text" style="width:20%; float:left;margin-left:4%;" class="number" /> <label style="float:left;">To</label>
                    <input id="txtEndeSalaryRange" type="text" style="width:20%; float:left;" class="number" />
                </td>
            </tr>

            <tr>
                <td style="width:40%; text-align:right;"></td>
                <td style="width:60%; text-align:right;">
                    <label style="float:left;margin-left:4%;"><a id="btnExcelRoster" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true" style="">Excel</a></label>
                </td>
            </tr>
        </table>
    </div>

</div>
<div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="font-family:Tahoma">
        <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
            <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
        </div>
        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:400px; text-align:right"></td>

                    <td style="width:50px">
                        <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</div>

<div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="font-family:Tahoma">
        <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
            <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
        </div>
        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:400px; text-align:right"></td>

                    <td style="width:50px">
                        <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</div>

<div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="font-family:Tahoma">
        <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
            <ul id="locationtree" data-options="checkbox:true" singleselect="false"></ul>
        </div>

        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:400px; text-align:right"></td>

                    <td style="width:50px">
                        <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</div>

<div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <div style="width: 100%; font-family: Tahoma;">
        <div style="width: 47%; float: left;">
            <table class="tbl-AdvSearch">
                <tr>
                    <td class="td-AdvSearch-Level">
                        Employee Name :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Code :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Present Address :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Permanent Address :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Authentication No :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                        <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Attendance Scheme :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                        <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                        <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        BU :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <select id="cboBU" class="selection-search cboReset"></select>
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Location :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                        <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                        <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Dept./Section :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                        <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                        <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Designation :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                        <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                        <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                    </td>
                </tr>
                @*<tr>
                        <td class="td-AdvSearch-Level">
                            Block :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeBlockAdv" class="txtfield-picker txtReset" type="text" />
                            <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                            <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />


                            @*<input id="txtBlock" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnBlock" class="pick-btn" type="button" value="P" />
                            <input id="btnResetBlock" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>*@
                <tr>
                    <td class="td-AdvSearch-Level">
                        Employee Type :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <select id="cboEmployeeType" style="width:130px; float:left;" class="selection-search cboReset"></select>
                        &nbsp; Group:
                        <input id="txtEmployeeGroupAdv" style="width:90px;" type="text" />
                        <input id="btnEmployeeGroupPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                        <input id="btnEmployeeGroupResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Category:
                    </td>
                    <td class="td-AdvSearch-Level">
                        <div>
                            <select id="cboCategory" style="width:130px; float:left;"></select>
                            &nbsp; Gender :
                            <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                <option value="0">None</option>
                                <option value="1">Male</option>
                                <option value="2">Female</option>
                            </select>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Current Shift :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <select id="cboShift_EmpSearch" style="width:130px; float:left;" class="selection-search cboReset"></select>

                        &nbsp; Block:
                        <input id="txtEmployeeBlockAdv" style="width:90px;" type="text" />
                        <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                        <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Card Status :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Working Status :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Date Of Birth :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <select id="cboDateType" style="width: 75px" class="cboReset">
                            <option value='0'>None</option>
                            <option value='1'>Equal</option>
                            <option value='2'>Between</option>
                        </select>
                        <span></span>
                        <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                        <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                        <span id="regionDateTo">
                            <span>To</span>
                            <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                            <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                        </span>

                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level">
                        Joining Date :
                    </td>
                    <td class="td-AdvSearch-Input">
                        <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                        <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                        <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level"></td>
                    <td class="td-AdvSearch-Input">
                        <input type="checkbox" id="chkActive" class="chkReset" /> Active
                        <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                        <input type="checkbox" id="chkUser" class="chkReset" /> User
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level"></td>
                    <td class="td-AdvSearch-Input">
                        <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level"></td>
                    <td class="td-AdvSearch-Input">
                        <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level"></td>
                    <td class="td-AdvSearch-Input">
                        <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level"></td>
                    <td class="td-AdvSearch-Input">
                        <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                    </td>
                </tr>
                <tr>
                    <td class="td-AdvSearch-Level"></td>
                    <td class="td-AdvSearch-Input">
                        <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                        <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                    </td>
                </tr>
            </table>
        </div>
        <div style="width: 52%; float: right;">
            <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                <thead>
                    <tr>
                        <th data-options="field:'Selected',checkbox:true"></th>
                        <th field="Code" width="200"> Code</th>
                        <th field="Name" width="150">Employee Name</th>
                        <th field="DepartmentName" width="100">Department</th>
                        <th field="DesignationName" width="100">Designation</th>
                    </tr>
                </thead>
            </table>
            <table style="width: 485px; font-size: 12px; font-weight: bold;">
                <tr>
                    <td style="text-align: left">
                        <input id="chkRange" type="checkbox" />Range
                        <label id="lblRange1">
                            <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                        </label>
                        <label id="lblRange2">
                            <input id="txtTo" type="text" style="width:40px" />
                        </label>
                        <label id="lblcount"></label>
                    </td>
                    <td style="text-align: right">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                        <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
                <tr>
                    <td style="text-align: left"></td>
                    <td style="text-align: right"></td>
                </tr>
            </table>
        </div>
    </div>
</div>

<div id="winRosterPlan" class="easyui-window winstyle" title="Manual Attendance" style="width:300px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
        <tr>
            <td>
                In Time :
            </td>
            <td>
                <input id="timeSpinner" class="easyui-timespinner" style="width: 200px;" requird="required"
                       data-options="showSeconds:false" />
            </td>
        </tr>
        <tr>
            <td style=" text-align: right">
                Out Time :
            </td>
            <td>
                <input id="txtOutTime" class="easyui-timespinner" style="width: 200px;" requird="required"
                       data-options="showSeconds:false" />
            </td>
        </tr>

        <tr>
            <td style=" text-align: right;">
                Max. OT (hh mm):
            </td>
            <td style="width:150px;">
                <input id="txtMaxOTInMin" class="easyui-timespinner" style="width: 200px;" requird="required" data-options="showSeconds:false" />
            </td>
        </tr>
        <tr>
            <td style=" text-align: right;">
                Remarks:
            </td>
            <td style="width:150px;">
                <input id="txtRemarks" style="width: 200px;" requird="required" />
            </td>
        </tr>

        <tr>
            <td style=" text-align: right">
                Shift :
            </td>
            <td>
                <select id="cboEditedShift" style="width:200px;"></select>
            </td>
        </tr>
        <tr>
            <td style=" text-align: center">                
            </td>
            <td style=" text-align: center">
                <label><input id="chkGWD" type="checkbox" onclick="checkboxMan()" />GWD</label> &emsp; </label>
                <label><input id="chkHoliday" type="checkbox" onclick="checkboxMan()" disabled/>Holiday</label> &emsp; 
                <label><input id="chkOffDay" type="checkbox" onclick="checkboxMan()" />Off Day</label> 
            </td>
        </tr>
    </table>

    <fieldset>
        <legend style="font-weight:bold"> Action : </legend>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
            <tr>
                <td style="width:400px; text-align:right"></td>

                <td style="width:50px">
                    <a id="btnRosterPlanUpdate" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Update</a>
                </td>
                <td style="width:50px">
                    <a id="btnRosterPlanClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </td>
            </tr>
        </table>
    </fieldset>
</div>


<style type="text/css">
    .lblStar {
        color: #ff0000;
        font-weight: bold;
    }

    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>

<script type="text/javascript">
    var _oRosterPlanEmployee=null;
    var _sFeedBack=null;

    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _oBusinessUnits=[];

    var _sBlockNamesAdv="";
    var _sBlockIDsAdv="";
    var _sGroupNamesAdv="";
    var _sGroupIDsAdv="";

    
    var _sEmployeeIDs = "";
    var _sAttendanceSchemeID ="";
    var _sBusinessUnitIds = "";
    var _sDepartmentNames = "";
    var _sDepartmentIds = "";
    var _sDesignationNames = "";
    var _sDesignationIds = "";
    var _sSalarySchemeIDs = "";
    var _sLocationID = "";
    var _sGroupNames="";
    var _sGroupIDs="";
    var _sBlockNames="";
    var _sBlockIDs="";
    var _sShiftNames="";
    var _sShiftIds = "";
    
    var _nLastEmployeeID = 0;
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;


    $(document).ready(function () {
        _oRosterPlanEmployee =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oHRMShifts =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.HRMShifts));
        _sFeedBack=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FeedBack));

        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));

       var res =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FeedBackText));
        debugger;
        if(_sFeedBack!=null){alert(_sFeedBack);}
        else if(res== "successful"){
            alert("Uploaded Successfully!");
        }

        $('#cboEditedShift').data('HRMShifts', oHRMShifts);
        $('#txtRecordCount').numberbox({min:0, precision:0 });
        $('#txtRecordCount').numberbox('setValue',20);

        $('#dtStartDate').datebox('setValue',icsdateformat(new Date()));
        $('#dtEndDate').datebox('setValue',icsdateformat(new Date()));
        $('#dtStartDateLoader').datebox('setValue',icsdateformat(new Date()));
        $('#dtEndDateLoader').datebox('setValue',icsdateformat(new Date()));

        $('#dtStartDateAdv').datebox('setValue',icsdateformat(new Date()));
        $('#dtEndDateAdv').datebox('setValue',icsdateformat(new Date()));

        sessionStorage.setItem("Employees",null);
        sessionStorage.setItem("Rosters",null);
        RefreshDepartment();
        GenerateTableColumns();
        RefreshList([]);
        RefreshCboShift(oHRMShifts);
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
        
        InitializeAdvSearch();
        LoadBU();
        LoadCateGory(oEmployeeCategorys);


    });


    $("#chkGWD").change(function(e){
        if($("#chkGWD").is(':checked')){
            $("#chkHoliday,#chkOffDay").prop('checked',false);
        }
    });
    $("#chkHoliday,#chkOffDay").change(function(e){
        if($("#chkHoliday").is(':checked') || $("#chkOffDay").is(':checked')){
            $("#chkGWD").prop('checked',false);
        }
    });


    function SampleFormatDownload() {
        window.open(_sBaseAddress+ "/RosterPlan/SampleFormatDownload");
    }

    $('#btnImportRosterXL').click( function ()
    {

        var sStartDate=$('#dtStartDateLoader').datebox('getValue');
        var sEndDate = $('#dtEndDateLoader').datebox('getValue');

        var dStartDate = new Date(sStartDate);
        var dEndDate = new Date(sEndDate);

        var days=(parseInt(Math.floor((dEndDate - dStartDate) / (1000*60*60*24)))+1);
        if(days>7)
        {
            alert("You can select maximum 7 Days!");
            $('#dtEndDateLoader').focus();
            return false;
        }

        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        _intervalID = setInterval(updateProgress, 250);
        if ($.trim($("#fileAttendances").val()) == "") {
            alert("Please select a file.");
            $("#fileAttendances").addClass("errorFieldBorder");
            $("#fileAttendances").focus();
            return false;
        } else {
            $("#fileAttendances").removeClass("errorFieldBorder");
        }
        return true;
    });
    function RefreshCboShift(oHRMShifts)
    {
        $("#cboEditedShift").icsLoadCombo({
            List:  oHRMShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration",
        });

        var oShifts = [];
        var oShift = {ShiftID:0, Name:'--Select Shift--' };
        oShifts.push(oShift);
        for(var i=0; i<oHRMShifts.length; i++)
        {
            oShifts.push(oHRMShifts[i]);
        }

        $("#cboHRMShift").icsLoadCombo({
            List:  oShifts,
            OptionValue: "ShiftID",
            DisplayText: "Name",
        });
        $("#cboHRMShift").val(0);
    }


    function RefreshDepartment()
    {
        var oDepartment ={  DepartmentID: 0 };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem("BaseAddress")+  "/RosterPlan/GetsDepartments",
            data:  JSON.stringify(oDepartment),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oDepartments = jQuery.parseJSON(data);
                if(oDepartments!=null)
                {
                    $('#cboDepartment').combotree('loadData', oDepartments);
                    $('#cboDepartment').combotree('setValue', { id: 0, text: '--Select Department--' });
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function ValidateSearch()
    {
        var sStartDate=$('#dtStartDate').datebox('getValue');
        var sEndDate = $('#dtEndDate').datebox('getValue');
        if(sStartDate===null || sStartDate=== "")
        {
            alert("Please select start date!");
            $('#dtStartDate').focus();
            return false;
        }
        if(sEndDate===null || sEndDate=== "")
        {
            alert("Please select start date!");
            $('#dtEndDate').focus();
            return false;
        }
        var dStartDate = new Date(sStartDate);
        var dEndDate = new Date(sEndDate);
        if(dStartDate>dEndDate)
        {
            alert("Start date must be smaller than end date!");
            $('#dtEndDate').focus();
            return false;
        }
        var days=(parseInt(Math.floor((dEndDate - dStartDate) / (1000*60*60*24)))+1);
        if(days>31)
        {
            alert("You can select maximum 31 Days!");
            $('#dtEndDate').focus();
            return false;
        }

        var nRecordCount  = parseInt($('#txtRecordCount').numberbox('getValue'));
        if(nRecordCount<=0)
        {
            alert("Enter Number Of Record!");
            $('#txtRecordCount').focus();
            return false;
        }
        return true;
    }

    function RefreshSearchObject(nLastRowNum)
    {
        debugger;
        var oRosterPlanEmployee = {
            DepartmentID:$('#cboDepartment').combotree('getValue'),
            StartDate:$('#dtStartDate').datebox('getValue'),
            EndDate : $('#dtEndDate').datebox('getValue'),
            LastRowNum : parseInt(nLastRowNum),
            RecordCount : parseInt($('#txtRecordCount').numberbox('getValue')),
            EmployeeName : $.trim($("#txtSearchbyNameCode").val()),
            ShiftID : parseInt($('#cboHRMShift').val()),
            IsRostered : $("#chkIsRostered").is(":checked")
        };
        return oRosterPlanEmployee;
    }

    $('#btnSearch').click(function(e){
        if(!ValidateSearch()) return;
        var oRosterPlanEmployee = RefreshSearchObject(0);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem("BaseAddress")+  "/RosterPlan/SearchRosterPlan",
            data:  JSON.stringify(oRosterPlanEmployee),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oRosterPlanEmployee = jQuery.parseJSON(data);
                if(oRosterPlanEmployee!=null)
                {
                    if(oRosterPlanEmployee.ErrorMessage=="")
                    {
                        GenerateTableColumns();
                        RefreshList(oRosterPlanEmployee.EmployeeRosters);
                        sessionStorage.setItem("LastRowNum", oRosterPlanEmployee.LastRowNum);
                        $('#lblcount').text(oRosterPlanEmployee.TotalRecord);
                    }
                    else
                    {
                        alert(oRosterPlanEmployee.ErrorMessage);
                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });

    $('#btnNext').click(function(e){
        if(!ValidateSearch()) return;
        var nLastRowNum = parseInt(sessionStorage.getItem("LastRowNum"));
        var oRosterPlanEmployee = RefreshSearchObject(nLastRowNum);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem("BaseAddress")+  "/RosterPlan/SearchRosterPlan",
            data:  JSON.stringify(oRosterPlanEmployee),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oRosterPlanEmployee = jQuery.parseJSON(data);
                if(oRosterPlanEmployee!=null)
                {
                    if(oRosterPlanEmployee.ErrorMessage=="")
                    {
                        var oEmployeeRosters = oRosterPlanEmployee.EmployeeRosters
                        for(var i=0; i<oEmployeeRosters.length; i++)
                        {
                            $('#tblRosterPlanEmployees').datagrid('appendRow',oEmployeeRosters[i]);
                        }
                        sessionStorage.setItem("LastRowNum", oRosterPlanEmployee.LastRowNum);
                        $('#lblcount').text(oRosterPlanEmployee.TotalRecord);
                    }
                    else
                    {
                        alert(oRosterPlanEmployee.ErrorMessage);
                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });

    function GenerateTableColumns(){
        var otblColumns = [];
        var otblFrozebColumns = [];
        var oColumn = null;
        var sStartDate=$('#dtStartDate').datebox('getValue');
        var sEndDate = $('#dtEndDate').datebox('getValue');
        var dStartDate = new Date(sStartDate);
        var dEndDate = new Date(sEndDate);
        var days=(parseInt(Math.floor((dEndDate - dStartDate) / (1000*60*60*24)))+1);
        var dAttendanceDate = new Date();
        dAttendanceDate=dStartDate;

        //oColumn = { field: 'Selected', checkbox:true}; otblFrozebColumns.push(oColumn);
        oColumn = { field: "EmployeeCode", width: "10%", title: "Code"}; otblFrozebColumns.push(oColumn);
        oColumn = { field: "EmployeeName", width: "15%", title: "Name"}; otblFrozebColumns.push(oColumn);
        for (var i = 0; i < days; i++) {
            var DayNo = icsCustomStringFormat((i + 1), '00');
            oColumn = { field: 'RPObj' + DayNo, width: "15%", title: icsdateformat(dAttendanceDate), formatter: function(value,row,index){ return CellFormat(value); } }; otblColumns.push(oColumn);
            dAttendanceDate.setDate(dAttendanceDate.getDate()+1);
        }
        $('#tblRosterPlanEmployees').datagrid({ frozenColumns : [otblFrozebColumns] });
        $('#tblRosterPlanEmployees').datagrid({ columns: [otblColumns] });
    }

    function CellFormat(oRosterPlanEmployee)
    {
        var sDisplayText =""; var sInTimeOutTimeText ="";
        var nRPEID = parseInt(oRosterPlanEmployee.RPEID);
        if(nRPEID>0)
        {
            sDisplayText = oRosterPlanEmployee.ShiftWithDuration;
            sInTimeOutTimeText = '('+oRosterPlanEmployee.InTimeSt+'-'+oRosterPlanEmployee.OutTimeSt+')';
        }
        else
        {
            sDisplayText = 'Yet to Roster Plan';
            sInTimeOutTimeText = '';
        }
        if(Boolean(oRosterPlanEmployee.IsHoliday))
        {
            sInTimeOutTimeText = sInTimeOutTimeText + ' '+ oRosterPlanEmployee.IsHolidaySt;
        }
        if(Boolean(oRosterPlanEmployee.IsDayOff))
        {
            sInTimeOutTimeText = sInTimeOutTimeText + '-'+ oRosterPlanEmployee.IsDayOffSt;
        }
        var sReturn = '<div style="height:40px;text-align:center">'
        sReturn= sReturn+ '<label style="text-decoration:underline; color:blue; cursor:pointer;" onclick="ViewRosterPlan('+oRosterPlanEmployee.RPEID+','+oRosterPlanEmployee.EmployeeID+',\''+oRosterPlanEmployee.DateInString+'\');">'+sDisplayText+'</label></br>'+sInTimeOutTimeText;
        sReturn= sReturn+ '</div>';
        return sReturn;
    }

    function ViewRosterPlan(nRPEID, nEmployeeID, dDate)
    {
        var oRostaerPlan = {
            RPEID : nRPEID,
            EmployeeID : nEmployeeID,
            AttendanceDate : dDate
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem("BaseAddress")+  "/RosterPlan/GetsRosterPlan",
            data:  JSON.stringify(oRostaerPlan),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oRosterPlanEmployee = jQuery.parseJSON(data);
                if(oRosterPlanEmployee!=null)
                {
                    $("#winRosterPlan").icsWindow('open', oRosterPlanEmployee.EmployeeName + ' @@ '+oRosterPlanEmployee.DateInString);
                    $('#timeSpinner').timespinner('setValue', oRosterPlanEmployee.InTimeSt);
                    $('#txtOutTime').timespinner('setValue', oRosterPlanEmployee.OutTimeSt);
                    $('#txtMaxOTInMin').timespinner('setValue', oRosterPlanEmployee.MaxOTInMinSt);
                    $('#cboEditedShift').val(oRosterPlanEmployee.ShiftID);
                    $('#chkHoliday').prop('checked', Boolean(oRosterPlanEmployee.IsHoliday));
                    $('#chkOffDay').prop('checked', Boolean(oRosterPlanEmployee.IsDayOff));
                    $("#winRosterPlan").icsWindow('open');
                    $("#winRosterPlan").data("RosterPlanEmployee",oRosterPlanEmployee);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    $("#cboEditedShift").change(function() {
        if(parseInt(this.value)>0)
        {
            var oHRMShifts = $('#cboEditedShift').data('HRMShifts');
            if(oHRMShifts!=null)
            {
                for(var i=0; i<oHRMShifts.length; i++)
                {
                    if(parseInt(this.value)=== parseInt(oHRMShifts[i].ShiftID))
                    {
                        $('#timeSpinner').timespinner('setValue', oHRMShifts[i].StartTimeInString);
                        $('#txtOutTime').timespinner('setValue', oHRMShifts[i].EndTimeInString);
                    }
                }
            }
        }
    });

    $("#btnRosterPlanClose").click(function(e){
        $('#timeSpinner').timespinner('setValue', '00:00');
        $('#txtOutTime').timespinner('setValue', '00:00');
        $('#txtMaxOTInMin').timespinner('setValue', '00:00');
        $('#cboEditedShift').val(0);
        $('#chkHoliday').prop('checked', false);
        $('#chkOffDay').prop('checked', false);
        $("#winRosterPlan").icsWindow('close');
    });

    $("#btnRosterPlanUpdate").click(function(e){
        var oTempRosterPlanEmployee = $("#winRosterPlan").data("RosterPlanEmployee");
        if(parseInt(oTempRosterPlanEmployee.EmployeeID)<=0)
        {
            alert("Invalid Employee!\nPlease check Employee Official!");
            return;
        }
        if(parseInt($('#cboEditedShift').val())<=0)
        {
            alert("Please Select Shift!!");
            return;
        }

        //var IsGWD = false;

        //$('#chkGWD').prop('checked', Boolean(oRosterPlanEmployee.IsGWD))
        debugger;
        var oRosterPlanEmployee = {
            RPEID : oTempRosterPlanEmployee.RPEID,
            EmployeeID : oTempRosterPlanEmployee.EmployeeID,
            AttendanceDate : oTempRosterPlanEmployee.DateInString,
            InTime : $('#timeSpinner').timespinner('getValue'),
            OutTime : $('#txtOutTime').timespinner('getValue'),
            MaxOTInMinDateTime: $('#txtMaxOTInMin').timespinner('getValue'),
            ShiftID : parseInt($('#cboEditedShift').val()),
            IsHoliday : document.getElementById('chkHoliday').checked,
            IsDayOff : document.getElementById('chkOffDay').checked,
            Remarks : $('#txtOutTime').val()
            // IsGWD : document.getElementById('chkGWD').checked
        };
        debugger;
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/RosterPlan/SaveRosterPlanEmployee",
            traditional: true,
            data: JSON.stringify(oRosterPlanEmployee),
            contentType: "application/json; charset=utf-8",
            success: function(data){
                var oRosterPlanEmployee = jQuery.parseJSON(data);
                if (parseInt(oRosterPlanEmployee.RPEID)>0)
                {
                    var oEmployeeRoster =$("#tblRosterPlanEmployees").datagrid("getSelected");
                    var SelectedRowIndex = $('#tblRosterPlanEmployees').datagrid('getRowIndex', oEmployeeRoster);
                    for (var item in oEmployeeRoster) {
                        if(oEmployeeRoster[item].DateInString===oRosterPlanEmployee.DateInString)
                        {
                            oEmployeeRoster[item]= oRosterPlanEmployee;
                            break;
                        }
                    }
                    $('#tblRosterPlanEmployees').datagrid('updateRow', { index: SelectedRowIndex, row: oEmployeeRoster });
                    alert("Update Successfully !");
                    $("#winRosterPlan").icsWindow('close');
                }
                else
                {
                    alert(oRosterPlanEmployee.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    });

    function RefreshList(oRosterPlanEmployees)
    {
        //var rows = $('#tblRosterPlanEmployees').datagrid('getRows');

        data={"total":""+oRosterPlanEmployees.length+"","rows":oRosterPlanEmployees};
        $('#tblRosterPlanEmployees').datagrid('loadData',data);
        //$('#tblRosterPlanEmployees').datagrid('appendRow',data);
        //$('#tblRosterPlanEmployees').datagrid({selectOnCheck:false, checkOnSelect:false})
    }

    function TransferShift(){
        window.location.href = sessionStorage.getItem("BaseAddress")+ "/RosterPlan/View_RosterTransfer";
    }
    function TransferShiftDept(){

        sessionStorage.setItem("Operation", "New");
        sessionStorage.setItem("SelectedRowIndex", -1);
        sessionStorage.setItem("RosterTransferDept", "Roster Transfer Dept");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href = sessionStorage.getItem("BaseAddress")+ "/RosterPlan/View_RosterTransferDept";
    }

    $('#txtSearchbyNameCode').keyup(function (e) {
        var nCode = (e.keyCode ? e.keyCode : e.which);
        var c = String.fromCharCode(e.which);
        var txtSearchbyNameCode = $("#txtSearchbyNameCode").val();
        var sTempCode = "";
        var rows = $('#tblRosterPlanEmployees').datagrid('getRows');
        for (i = 0; i < rows.length; ++i) {
            sTempCode = rows[i]['EmployeeCode'].substring(0, txtSearchbyNameCode.length);
            if (txtSearchbyNameCode.toUpperCase() == sTempCode.toUpperCase()) {
                $('#tblRosterPlanEmployees').datagrid('selectRow', i);
                break;
            }
            else{
                $('#tblRosterPlanEmployees').datagrid('unselectAll');
            }
        }
        if (nCode != 13 || txtSearchbyNameCode=="") return;
        GetEmployeeByNameCode(txtSearchbyNameCode, true);
        $("#txtSearchbyNameCode").val('');
        $("#txtSearchbyNameCode").focus();
    });

    function GetEmployeeByNameCode(sNameCode,bIsCode)
    {
        if(!ValidateSearch()) return;
        var oRosterPlanEmployee = RefreshSearchObject(0);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem("BaseAddress")+  "/RosterPlan/SearchRosterPlan",
            data:  JSON.stringify(oRosterPlanEmployee),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oRosterPlanEmployee = jQuery.parseJSON(data);

                if(oRosterPlanEmployee!=null)
                {
                    if(oRosterPlanEmployee.ErrorMessage=="")
                    {
                        GenerateTableColumns();
                        console.log(oRosterPlanEmployee.EmployeeRosters);

                        var rows = $('#tblRosterPlanEmployees').datagrid('getRows');
                        rows.push(oRosterPlanEmployee.EmployeeRosters[0]);
                        RefreshList(rows);
                        //$("#tblRosterPlanEmployees").datagrid("appendRow", oRosterPlanEmployee.EmployeeRosters);

                        sessionStorage.setItem("LastRowNum", rows[rows.length-1].LastRowNum);
                        $('#lblcount').text(rows.length);
                    }
                    else
                    {
                        alert(oRosterPlanEmployee.ErrorMessage);
                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }





    /*-------------Start Business Unit Picker----------------*/
    $("#btnBusinessUnitPicker_Collection").click(function(e){
        BusinessUnitPicker();
    });

    $("#txtBusinessUnit_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            BusinessUnitPicker();
        }
    });

    function BusinessUnitPicker()
    {
        var oBusinessUnit={
            BusinessUnitID:0
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBusinessUnit,
            ControllerName: "BusinessUnit",
            ActionName: "GetsBusinessUnitWithPermission",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BusinessUnitID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBusinessUnit',
                        winclass:'clsBusinessUnit',
                        winwidth: 320,
                        winheight: 400,
                        tableid: 'tblBusinessUnit',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Business Unit List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBusinessUnitPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBusinessUnits=[];
            oBusinessUnits = $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBusinessUnit')
            {
                if(oBusinessUnits!=null && oBusinessUnits.length>0)
                {
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    var sBusinessUnitName = "";
                    for(var i=0; i<oBusinessUnits.length; i++)
                    {
                        sBusinessUnitName+=oBusinessUnits[i].Name+",";
                        _sBusinessUnitIds+=oBusinessUnits[i].BusinessUnitID+",";
                    }

                    sBusinessUnitName=sBusinessUnitName.substring(0,sBusinessUnitName.length-1);
                    _sBusinessUnitIds=_sBusinessUnitIds.substring(0,_sBusinessUnitIds.length-1);
                    $("#txtBusinessUnit_Collection").val(sBusinessUnitName);
                }
                else
                {
                    alert("Please select a Business Unit.");
                }
            }
        });
    }

    $("#btnResetBusinessUnitPicker_Collection").click(function(e){
        $('#txtBusinessUnit_Collection').val("");
        _sBusinessUnitIds="";
    });
    /*-------------End Business Unit Picker----------------*/

    /*-------------Location Picker----------------*/
    var btnLocation="";
    $("#btnLocationPicker,#btnLocationPicker_Colection").click(function(e){
        btnLocation = $(this).attr("id");
        var sBusinessUnitIDs ="";
        var nBusinessUnitID=0;
        if(btnLocation=="btnLocationPicker")
        {
            nBusinessUnitID = $("#cboBU").val();
            sBusinessUnitIDs = String(nBusinessUnitID);
        }
        else{sBusinessUnitIDs=_sBusinessUnitIds;}
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        if(btnLocation=="btnLocationPicker")
        {
            var oLocation = $('#locationtree').tree('getSelected');
            if(oLocation!=null && oLocation.id>0){
                $("#winLocationPicker").icsWindow('close');
                _sLocationID=oLocation.id;
                $('#txtLocation').val(oLocation.text);
            }
            else{
                alert("Please select a location.");
            }
        }
        else
        {
            var oLocations = $('#locationtree').tree('getChecked');
            if(oLocations!=null && oLocations.length>0)
            {
                var LocationName="";
                for(var i=0; i<oLocations.length; i++)
                {
                    if(oLocations[i].id !=1)
                    {
                        LocationName+=oLocations[i].text+",";
                        _sLocationID+=oLocations[i].id+",";
                    }
                }

                LocationName=LocationName.substring(0,LocationName.length-1);
                _sLocationID=_sLocationID.substring(0,_sLocationID.length-1);
                $("#winLocationPicker").icsWindow('close');
                $('#txtLocation_Colection').val(LocationName);
            }
            else
            {
                alert("Please select a location.");
            }
        }
    });

    $('#txtLocation_Colection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sBusinessUnitIDs ="";
            sBusinessUnitIDs=_sBusinessUnitIds;
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };
            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker,#btnResetLocationPicker_Colection").click(function(e){
        $('#txtLocation').val("");
        $('#txtLocation_Colection').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){
        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){
        _sDepartmentNames = "";
        _sDepartmentIds= "";
        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentIds= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose,#btnDepartmentPickerClose_Collection").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
        $("#winDepartmentPicker_Collection").icsWindow('close');
    });

    $("#btnResetDepartmentPicker,#btnResetDepartmentPicker_Collection").click(function(e){
        $('#txtDepartment,#txtDepartment_Collection').val("");
        _sDepartmentIds="";
        _sDepartmentNames = "";
    });

    /*-------------Designation Picker----------------*/
    var btnDesignation="";
    $("#btnDesignationPicker,#btnDesignationPicker_Collection").click(function(e){
        btnDesignation = $(this).attr("id");
        DesignationPicker();
    });

    $("#txtDesignation_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            btnDesignation ="btnDesignationPicker_Collection";
            DesignationPicker();
        }
    });

    function DesignationPicker()
    {
        var oDesignation={
            DesignationID:0,
            Params: _sBusinessUnitIds+'~'+_sLocationID+'~'+ _sDepartmentIds
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            _sDesignationNames = "";
            _sDesignationIds = "";
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;
                    if(btnDesignation=="btnDesignationPicker_Collection"){bmultiplereturn=true;}

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oDesignations=[];

            if(btnDesignation=="btnDesignationPicker_Collection")
            {
                oDesignations = $('#'+oPickerobj.tableid).datagrid('getChecked');
            }
            else
            {
                var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
                oDesignations.push(oDesignation);
            }

            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignations!=null && oDesignations.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames+=oDesignations[i].Name+",";
                        _sDesignationIds+=oDesignations[i].DesignationID+",";
                    }

                    _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                    _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
                    if(btnDesignation=="btnDesignationPicker_Collection")
                    {
                        $("#txtDesignation_Collection").val(_sDesignationNames);
                    }
                    else
                    {
                        $("#txtDesignation").val(_sDesignationNames);
                    }
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker,#btnResetDesignationPicker_Collection").click(function(e){
        $('#txtDesignation').val("");
        $('#txtDesignation_Collection').val("");
        _sDesignationIds="";
        _sDesignationNames = "";
    });


    /*---------------- emp Search End click ----------------*/

    /*---------------- emp Search Start keyprees----------------*/
    $('#txtEmployee_Collection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee_Collection").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
            SearchEmployeeByText(sCodeName);
        }
    });

    function SearchEmployeeByText(sEmpNameCode){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _sEmployeeIDs=oreturnObj.EmployeeID;
                    $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
                    $("#txtEmployee_Collection").val(oreturnObj.Name);
                    $("#winEmployeePicker").icsWindow('close');
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        _sEmployeeIDs=oreturnObj.EmployeeID;
                        $('#txtEmployee').data("EmployeeIDs",_sEmployeeIDs);
                        $("#txtEmployee_Collection").val(oreturnObj.Name);
                        $("#winEmployeePicker").icsWindow('close');
                    }
                }
            }
        });
    }

    $('#btnCEmployee').click(function (e)
    {
        document.getElementById("txtEmployee_Collection").value = "" ;
        $('#txtEmployeeName').data("EmployeeIDs","");
        _sEmployeeIDs = "";
    });

    /*---------------- emp Search Start keyprees----------------*/

    /*-------------Department Picker start Collection----------------*/
    $("#btnDepartmentPicker_Collection").click(function(e){
        DepartmentPicker();
    });

    $("#txtDepartment_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            DepartmentPicker();
        }
    });

    function DepartmentPicker()
    {
        $("#winDepartmentPicker_Collection").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree_Collection').tree({ data: [response.obj] });
                }
            }
        });
    }

    $("#btnDepartmentPickerOk_Collection").click(function(e){
        _sDepartmentNames = "";
        _sDepartmentIds= "";
        var oDepartments = $('#departmenttree_Collection').tree('getChecked');
        if(oDepartments!=null && oDepartments.length>0){
            $("#winDepartmentPicker_Collection").icsWindow('close');
            for(var i=0; i<oDepartments.length; i++)
            {
                _sDepartmentNames+=oDepartments[i].text+",";
                _sDepartmentIds+=oDepartments[i].id+",";
            }

            _sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
            _sDepartmentIds=_sDepartmentIds.substring(0,_sDepartmentIds.length-1);
            $("#txtDepartment_Collection").val(_sDepartmentNames);
        }
        else{
            alert("Please select a department.");
        }
    });
    $('#txtEmployeeGroup').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroup").val();
            var sTempName = "";
            SearchEmployeeGroup(txtSearchByGroup);
            $("#txtEmployeeGroup").val('');
        }
    });


    $("#btnEmployeeGroupPicker").click(function(e){
        SearchEmployeeGroup("");
    });
    function SearchEmployeeGroup(name) {
        $("#txtEmployeeGroup").val("");
        _sGroupNames = "";
        _sGroupIDs = "";
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oGroups.length; i++)
                    {
                        _sGroupNames += oGroups[i].Name+",";
                        _sGroupIDs += oGroups[i].EmployeeTypeID+",";

                    }
                    _sGroupNames=_sGroupNames.substring(0,_sGroupNames.length-1);
                    _sGroupIDs=_sGroupIDs.substring(0,_sGroupIDs.length-1);
                    $("#txtEmployeeGroup").val(_sGroupNames);
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }

    $("#btnEmployeeGroupPickerReset").click(function(e){
        
        $('#txtEmployeeGroup').val("");
        _sGroupIDs = "";
    });

    /*------------EmployeeBlock--------------*/

    $('#txtEmployeeBlock').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlock").val();
            var sTempName = "";
            SearchEmployeeBlock(txtSearchByBlock);
            $("#txtEmployeeBlock").val('');
        }
    });

    $("#btnEmployeeBlockPicker").click(function(e){
        SearchEmployeeBlock("");
    });
    function SearchEmployeeBlock(name) {
        $("#txtEmployeeBlock").val("");
        _sBlockNames = "";
        _sBlockIDs = "";
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    debugger;
                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNames += oBlocks[i].Name+",";
                        _sBlockIDs += oBlocks[i].EmployeeTypeID+",";

                    }
                    _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                    _sBlockIDs=_sBlockIDs.substring(0,_sBlockIDs.length-1);
                    $("#txtEmployeeBlock").val(_sBlockNames);
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }
    

    $("#btnEmployeeBlockPickerReset").click(function(e){
        _sBlockNames = "";
        $('#txtEmployeeBlock').val("");
        _sBlockIDs = "";
    });


     
    $("#btnEmployeeGroupResetAdv").click(function(e){
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
    });

    $('#txtEmployeeGroupAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroupAdv").val();
            var sTempName = "";
            SearchEmployeeGroupAdv(txtSearchByGroup);
            $("#txtEmployeeGroupAdv").val('');
        }
    });


    $("#btnEmployeeGroupPickerAdv").click(function(e){
        SearchEmployeeGroupAdv("");
    });
    function SearchEmployeeGroupAdv(name) {
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oGroups.length; i++)
                    {
                        _sGroupNamesAdv += oGroups[i].Name+",";
                        _sGroupIDsAdv += oGroups[i].EmployeeTypeID+",";

                    }
                    _sGroupNamesAdv=_sGroupNamesAdv.substring(0,_sGroupNamesAdv.length-1);
                    _sGroupIDsAdv=_sGroupIDsAdv.substring(0,_sGroupIDsAdv.length-1);
                    $("#txtEmployeeGroupAdv").val(_sGroupNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }


    /*------------EmployeeBlockAdv--------------*/

    $('#txtEmployeeBlockAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlockAdv").val();
            var sTempName = "";
            SearchEmployeeBlockAdv(txtSearchByBlock);
            $("#txtEmployeeBlockAdv").val('');
        }
    });

    $("#btnEmployeeBlockPickerAdv").click(function(e){
        SearchEmployeeBlockAdv("");
    });
    function SearchEmployeeBlockAdv(name) {
        $("#txtEmployeeBlockAdv").val("");
        _sBlockNamesAdv = "";
        _sBlockIDsAdv = "";
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNamesAdv += oBlocks[i].Name+",";
                        _sBlockIDsAdv += oBlocks[i].EmployeeTypeID+",";

                    }
                    _sBlockNamesAdv=_sBlockNamesAdv.substring(0,_sBlockNamesAdv.length-1);
                    _sBlockIDsAdv=_sBlockIDsAdv.substring(0,_sBlockIDsAdv.length-1);
                    $("#txtEmployeeBlockAdv").val(_sBlockNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }
    

    $("#btnEmployeeBlockResetAdv").click(function(e){
        debugger;
        _sBlockNamesAdv = "";
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDsAdv = "";
    });



    $("#btnShift").click(function(e){
        ShiftPicker();
    });

    function ShiftPicker()
    {
        var oShift={
            ShiftID:0,
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oShift,
            ControllerName: "HRMShift",
            ActionName: "GetsShifts",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
        
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ShiftID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ShiftWithDuration", title: "Shift", width: 230, align: "left" };tblColums.push(oColumn);
                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winShift',
                        winclass:'clsShift',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblShift',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Shift List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeShiftPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeShiftPickerbutton(oPickerobj)
    {
        _sShiftNames="";
        _sShiftIds = "";
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oShifts=[];
            oShifts= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winShift')
            {
                if(oShifts!=null && oShifts.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oShifts.length; i++)
                    {
                        _sShiftNames += oShifts[i].ShiftWithDuration+",";
                        _sShiftIds += oShifts[i].ShiftID+",";
                    
                    }
                    _sShiftNames=_sShiftNames.substring(0,_sShiftNames.length-1);
                    _sShiftIds=_sShiftIds.substring(0,_sShiftIds.length-1);
                    $("#txtShift").val(_sShiftNames);
                }
                else
                {
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetShift").click(function(e){
        $('#txtShift').val("");
        _sShiftNames="";
        _sShiftIds = "";
    });

    $("#txtShift").keypress(function(e){
        if (e.which == 13)
        {
            ShiftPicker();
        }
    });

    $("#btnEmployee").click(function () {
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
        $('#txtEmployeeGroupAdv').val("");
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDsAdv = "";
        _sGroupIDsAdv = "";
    }
    
    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }
    $("#btnEmployeePickerOk").click(function () {
        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length<=0) { alert("please select atleast one item");return; }
        var sEmpIDs="";
        var sEmpNames="";
        for(var i=0;i<oEmployees.length;i++)
        {
            sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
            sEmpNames=sEmpNames+oEmployees[i].Name+",";
        }
        _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
        sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
        $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
        $("#txtEmployee_Collection").val(sEmpNames);
        $("#winEmployeePicker").icsWindow('close');
        SearchByDepartmentAndDateRangeWithPasignation();
    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }
        debugger
        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }

        var nBusinessUnitID = $("#cboBU").val();
        var nCategory=$('#cboCategory').val();
        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();

        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
           nEmployeeTypeID==0 && sGender=="None" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
           bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0
          && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBlockIDsAdv==""&& _sGroupIDsAdv=="")
        {
            alert("Please enter your selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                     sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                     bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                     sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                      +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBlockIDsAdv+"~"+_sGroupIDsAdv;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }
    
    function InitializeAdvSearch(){
        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                    {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                    {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });
    
    function LoadCateGory(oEmployeeCategorys)
    {
        $("#cboCategory").icsLoadCombo({
            List: oEmployeeCategorys,
            OptionValue: "Value",
            DisplayText: "Text"
        });
    }
    function LoadBU()
    {
        $('#cboBU_Collection').combobox({
            data:_oBusinessUnits,
            valueField:'BusinessUnitID',
            textField:'Name',
            multiple:true
        });
        $('#cboBU_Collection').combobox('setValue',  _oBusinessUnits.length>0?_oBusinessUnits[0].BusinessUnitID:0);
    }

    
    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });


    
    $('#btnExcelRoster').click(function () {
        _oActiveEmployee=[];
        _oInActiveEmployee=[];
        //var dtDateFrom = icsdateformat(new Date(GenerateStartTimeInString()));
        //var dtDateTo = icsdateformat(new Date(GenerateEndTimeInString()));

        debugger;
        var dtDateFrom = $('#dtStartDateAdv').datebox('getValue');
        var dtDateTo = $('#dtEndDateAdv').datebox('getValue');

        
        var nStartSalaryRange=$('#txtStartSalaryRange').val();
        var nEndSalaryRange=$('#txtEndeSalaryRange').val();
        if(nStartSalaryRange==""){nStartSalaryRange=0;}
        if(nEndSalaryRange==""){nEndSalaryRange=0;}
        nStartSalaryRange= parseFloat(nStartSalaryRange);
        nEndSalaryRange= parseFloat(nEndSalaryRange);
        if(nStartSalaryRange>0 || nEndSalaryRange>0)
        {
            if(nStartSalaryRange>nEndSalaryRange)
            {
                alert("Invalid Salary Range!");
                return;
            }
            if(nStartSalaryRange>0 && nEndSalaryRange<=0)
            {
                alert("Please enter End Salary Range!");
                return;
            }
            if(nStartSalaryRange<=0 && nEndSalaryRange>0)
            {
                alert("Please enter Start Salary Range!");
                return;
            }
        }

        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert('Invalid Date Range');
            return;
        }

        if(_sEmployeeIDs == "" && _sBusinessUnitIds == "" && _sSalarySchemeIDs == "" && _sDepartmentIds == "" && _sDesignationIds ==""&& _sLocationID=="" && _sGroupIDs == "" && _sBlockIDs == "" && _sShiftIds == "")
        {
            alert("Please select at least one searching criteria with date!");
            return;
        }

        window.open(_sBaseAddress+ "/RosterPlan/ExcelRosterPlanEmployee?sEmployeeIDs="+_sEmployeeIDs+"&sBusinessUnitIds="+_sBusinessUnitIds+"&sLocationID="+_sLocationID+"&sDepartmentIds="+_sDepartmentIds+"&sDesignationIds="+_sDesignationIds+"&sSalarySchemeIDs="+_sSalarySchemeIDs+"&DateFrom="+dtDateFrom+"&DateTo="+dtDateTo+"&sGroupIDs="+_sGroupIDs+"&sBlockIDs="+_sBlockIDs+"&nStartSalaryRange="+nEndSalaryRange + "&nEndSalaryRange="+nEndSalaryRange+"&ShiftIds=" + _sShiftIds, "_blank");
        debugger;
        //$.ajax({
        //    type: "POST",
        //    dataType: "json",
        //    url: _sBaseAddress + "/AttendanceDaily/MonthlyAttendanceReportSearch",
        //    traditional: true,
        //    data: JSON.stringify({sEmployeeIDs : _sEmployeeIDs,sBusinessUnitIds:_sBusinessUnitIds,sLocationID:_sLocationID,sDepartmentIds:_sDepartmentIds,sDesignationIds:_sDesignationIds,sSalarySchemeIDs:_sSalarySchemeIDs, DateFrom : dtDateFrom, DateTo : dtDateTo, sGroupIDs:_sGroupIDs, sBlockIDs:_sBlockIDs,nStartSalaryRange:nStartSalaryRange,nEndSalaryRange:nEndSalaryRange,ShiftIds:_sShiftIds }),
        //    contentType: "application/json; charset=utf-8",

        //    success: function(data)
        //    {
        //        debugger;
        //        oMonthlyAttendanceReports=[];//declared globally

        //        oMonthlyAttendanceReports = jQuery.parseJSON(data);
        //        if (oMonthlyAttendanceReports.length>0 && oMonthlyAttendanceReports[0].ErrorMessage=="")
        //        {
        //            RefreshList(oMonthlyAttendanceReports);
        //            for(var i =0; i<oMonthlyAttendanceReports.length;i++)
        //            {
        //                if(oMonthlyAttendanceReports[i].WorkingStatus==1)
        //                {
        //                    _oActiveEmployee.push(oMonthlyAttendanceReports[i]);
        //                }
        //                else if(oMonthlyAttendanceReports[i].WorkingStatus==6)
        //                {
        //                    _oInActiveEmployee.push(oMonthlyAttendanceReports[i]);
        //                }
        //            }
        //        }
        //        else
        //        {
        //            alert(oMonthlyAttendanceReports[0].ErrorMessage);
        //            oMonthlyAttendanceReports=[];
        //            RefreshList(oMonthlyAttendanceReports);
        //        }
        //    },
        //    error: function(xhr, status, error)
        //    {
        //        alert(error);
        //    }
        //});
        
    });
    
</script>
