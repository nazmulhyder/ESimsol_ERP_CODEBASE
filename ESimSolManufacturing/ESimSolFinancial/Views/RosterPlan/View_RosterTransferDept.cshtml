@{
    ViewBag.Title = "Set Roster Plan (Department)";
}
@model ESimSol.BusinessObjects.RosterPlanEmployee
@{var MenuID = HttpContext.Current.Session[SessionInfo.MenuID];}

<div class="regionSearch">
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1000;opacity:.9;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px; color: black;">Please wait</label>
            <div id="progressbar" style="width:100%;height:17px; border-radius: 10px"></div>
        </div>

    </div>
    <div style="width:100%; height:480px; bfloat:left;" class="menuMainCollectionTable">
        <div style="width:50%; height:480px; float:left;">
            <fieldset style="margin-bottom: 0px; height:480px;">
                <legend>Searching criteria</legend>


                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">Employee:</label></div>
                    <div class="col-md-8 text-left">
                        <input id="txtEmployee_Collection" style="width:37%;" type="text" placeholder="Pick Employee" />
                        <input id="btnEmployee" type="button" value="P" />
                        <input id="btnCEmployee" type="button" value="C" />
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">Business Unit:</label></div>
                    <div class="col-md-5 text-left">
                        <select id="cboBusinessUnit" style="width:250px;" class="form-control"></select>
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">Location:</label></div>
                    <div class="col-md-8 text-left">
                        <input id="txtLocation_ColectionF" style="width:37%;" placeholder="Pick Location" type="text" />
                        <input id="btnLocationPicker_ColectionF" type="button" value="P" />
                        <input id="btnResetLocationPicker_ColectionF" type="button" value="C" />
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">Department:</label></div>
                    <div class="col-md-8 text-left">
                        <input id="txtDepartment_Collection" style="width:37%;" type="text" placeholder="Pick Department" />
                        <input id="btnDepartmentPicker_Collection" type="button" value="P" />
                        <input id="btnResetDepartmentPicker_Collection" type="button" value="C" />
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">Designation:</label></div>
                    <div class="col-md-8 text-left">
                        <input id="txtDesignation_Collection" style="width:37%;" type="text" placeholder="Pick Designation" />
                        <input id="btnDesignationPicker_Collection" type="button" value="P" />
                        <input id="btnResetDesignationPicker_Collection" type="button" value="C" />
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">Shift:</label></div>
                    <div class="col-md-8 text-left">
                        <select id="cboShift" class="form-control" style="width:250px;"></select>
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="col-md-4 text-right">
                    </div>
                    <div class="col-md-8 text-left">
                        <input type="radio" name="rbShift" value="1" checked="checked" onclick="hideText(this);" />Official
                        <input type="radio" name="rbShift" value="0" onclick="showText(this);" />Roster
                        <input id="dtRosterDate" name="dtRosterDate" type="text" style="width:145px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    </div>
                </div>


                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">Group:</label></div>
                    <div class="col-md-8 text-left">
                        <input id="txtEmployeeGroup" style="width:37%;" type="text" placeholder="Pick Group" />
                        <input id="btnEmployeeGroupPicker" type="button" value="P" />
                        <input id="btnEmployeeGroupPickerReset" type="button" value="C" />
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">Block:</label></div>
                    <div class="col-md-8 text-left">
                        <input id="txtEmployeeBlock" style="width:37%;" type="text" placeholder="Pick Block" />
                        <input id="btnEmployeeBlockPicker" type="button" value="P" />
                        <input id="btnEmployeeBlockPickerReset" type="button" value="C" />
                    </div>
                </div>
            </fieldset>

            <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                <div style="width: 100%; font-family: Tahoma;">
                    <div style="width: 47%; float: left;">
                        <table class="tbl-AdvSearch">
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Employee Name :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Code :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Present Address :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Permanent Address :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Authentication No :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                                    <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Attendance Scheme :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                                    <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                                    <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    BU :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboBU" class="selection-search cboReset"></select>
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Location :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                                    <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                                    <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Dept./Section :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                                    <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                                    <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Designation :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                                    <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                                    <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                                </td>
                            </tr>
                            @*<tr>
                            <td class="td-AdvSearch-Level">
                                Block :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEmployeeBlockAdv" class="txtfield-picker txtReset" type="text" />
                                <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                                <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />


                                @*<input id="txtBlock" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnBlock" class="pick-btn" type="button" value="P" />
                                <input id="btnResetBlock" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>*@
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Employee Type :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboEmployeeType" style="width:130px; float:left;" class="selection-search cboReset"></select>
                                    &nbsp; Group:
                                    <input id="txtEmployeeGroupAdv" style="width:90px;" type="text" />
                                    <input id="btnEmployeeGroupPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                                    <input id="btnEmployeeGroupResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Category:
                                </td>
                                <td class="td-AdvSearch-Level">
                                    <div>
                                        <select id="cboCategory" style="width:130px; float:left;"></select>
                                        &nbsp; Gender :
                                        <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                            <option value="0">None</option>
                                            <option value="1">Male</option>
                                            <option value="2">Female</option>
                                        </select>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Current Shift :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboShift_EmpSearch" style="width:130px; float:left;" class="selection-search cboReset"></select>

                                    &nbsp; Block:
                                    <input id="txtEmployeeBlockAdv" style="width:90px;" type="text" />
                                    <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                                    <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Card Status :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Working Status :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Date Of Birth :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <select id="cboDateType" style="width: 75px" class="cboReset">
                                        <option value='0'>None</option>
                                        <option value='1'>Equal</option>
                                        <option value='2'>Between</option>
                                    </select>
                                    <span></span>
                                    <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                                    <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                                    <span id="regionDateTo">
                                        <span>To</span>
                                        <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                        <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                                    </span>

                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level">
                                    Joining Date :
                                </td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                                    <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                                    <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkActive" class="chkReset" /> Active
                                    <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                                    <input type="checkbox" id="chkUser" class="chkReset" /> User
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                                </td>
                            </tr>
                            <tr>
                                <td class="td-AdvSearch-Level"></td>
                                <td class="td-AdvSearch-Input">
                                    <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                                    <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div style="width: 52%; float: right;">
                        <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                            <thead>
                                <tr>
                                    <th data-options="field:'Selected',checkbox:true"></th>
                                    <th field="Code" width="200"> Code</th>
                                    <th field="Name" width="150">Employee Name</th>
                                    <th field="DepartmentName" width="100">Department</th>
                                    <th field="DesignationName" width="100">Designation</th>
                                </tr>
                            </thead>
                        </table>
                        <table style="width: 485px; font-size: 12px; font-weight: bold;">
                            <tr>
                                <td style="text-align: left">
                                    <input id="chkRange" type="checkbox" />Range
                                    <label id="lblRange1">
                                        <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                                    </label>
                                    <label id="lblRange2">
                                        <input id="txtTo" type="text" style="width:40px" />
                                    </label>
                                    <label id="lblcount"></label>
                                </td>
                                <td style="text-align: right">
                                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                                    <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                                    <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </td>
                            </tr>
                            <tr>
                                <td style="text-align: left"></td>
                                <td style="text-align: right"></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>

            <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                <div style="font-family:Tahoma">
                    <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                        <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
                    </div>
                    <fieldset>
                        <legend style="font-weight:bold"> Action : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                            <tr>
                                <td style="width:400px; text-align:right"></td>

                                <td style="width:50px">
                                    <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                                </td>
                                <td style="width:50px">
                                    <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </div>
            </div>

            <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                <div style="font-family:Tahoma">
                    <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                        <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
                    </div>
                    <fieldset>
                        <legend style="font-weight:bold"> Action : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                            <tr>
                                <td style="width:400px; text-align:right"></td>

                                <td style="width:50px">
                                    <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                                </td>
                                <td style="width:50px">
                                    <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </div>
            </div>



        </div>
        <div style="width:50%; height:480px; float:right;">
            <fieldset style="margin-bottom: 0px; height:480px;">
                <legend>Set Roster Plan (Department)</legend>

                <div class="row col-md-12" style="padding-top:20px;">
                    <div class="col-md-4 text-right"><label class="control-label">Attendance Date:</label></div>
                    <div class="col-md-8 text-left">
                        <input id="dtStartDate" name="dtStartDate" type="text" style="width:98px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        To <input id="dtEndDate" name="dtStartDate" type="text" style="width: 98px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                    </div>
                </div>

                @*<div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">Business Unit:</label></div>
                    <div class="col-md-5 text-left">
                        <select id="cboBusinessUnit" style="width:220px;" class="form-control"></select>
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">Location:</label></div>
                    <div class="col-md-8 text-left">
                        <input id="txtLocation_Colection" style="width:22.5%;" placeholder="Pick Location" type="text" />
                        <input id="btnLocationPicker_Colection" type="button" value="P" />
                        <input id="btnResetLocationPicker_Colection" type="button" value="C" />
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">Department:</label></div>
                    <div class="col-md-8 text-left">
                        <input id="txtDepartment_Collection" style="width:22.5%;" type="text" placeholder="Pick Department" />
                        <input id="btnDepartmentPicker_Collection" type="button" value="P" />
                        <input id="btnResetDepartmentPicker_Collection" type="button" value="C" />
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">Shift:</label></div>
                    <div class="col-md-8 text-left">
                        <select id="cboShift" class="form-control" style="width:220px;"></select>
                    </div>
                </div>*@
                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">Shift:</label></div>
                    <div class="col-md-8 text-left">
                        <select id="cboShiftTrs" class="form-control" style="width:220px;"></select>
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">InTime:</label></div>
                    <div class="col-md-3 text-left">
                        <div>
                            <input id="txtInTime" class="easyui-timespinner" style="width: 220px;" requird="required"
                                   data-options="showSeconds:false" />
                        </div>
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">OutTime:</label></div>
                    <div class="col-md-3 text-left">
                        <div>
                            <input id="txtOutTime" class="easyui-timespinner" style="width: 220px;" requird="required"
                                   data-options="showSeconds:false" />
                        </div>
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">IsGWD:</label></div>
                    <div class="col-md-3 text-left">
                        <div class='input-group date time-container'>
                            <input id="chkGWD" type="checkbox" />
                        </div>
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">IsDayoff:</label></div>
                    <div class="col-md-3 text-left">
                        <div class='input-group date time-container'>
                            <input id="chkOffDay" type="checkbox" />
                        </div>
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">MaxOT:</label></div>
                    <div class="col-md-3 text-left">
                        <div>
                            <input id="txtMaxOTInMin" class="easyui-timespinner" style="width: 220px;" requird="required"
                                   data-options="showSeconds:false" />
                        </div>
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-4 text-right"><label class="control-label">Remarks:</label></div>
                    <div class="col-md-5 text-left">
                        <div>
                            <input id="txtRemarks" style="width: 220px;" class="form-control" />
                        </div>
                    </div>
                </div>

                <div class="row col-md-12">
                    <div class="col-md-3 text-right"><label class="control-label"></label></div>
                    <div class="col-md-6 text-right">
                        <button class="btn btn-primary btn-sm" type="button" onclick="TransferShiftDept()">Transfer</button>
                        <button class="btn btn-danger btn-sm" type="button" onclick="Close()">Close</button>
                    </div>
                    <div class="col-md-3 text-right">

                    </div>
                </div>

                <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                    <div style="font-family:Tahoma">
                        <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                            <ul id="locationtree" data-options="checkbox:true" singleselect="false"></ul>
                        </div>

                        <fieldset>
                            <legend style="font-weight:bold"> Action : </legend>
                            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                                <tr>
                                    <td style="width:400px; text-align:right"></td>

                                    <td style="width:50px">
                                        <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                                    </td>
                                    <td style="width:50px">
                                        <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                    </td>
                                </tr>
                            </table>
                        </fieldset>
                    </div>
                </div>

                <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                    <div style="font-family:Tahoma">
                        <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                            <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
                        </div>
                        <fieldset>
                            <legend style="font-weight:bold"> Action : </legend>
                            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                                <tr>
                                    <td style="width:400px; text-align:right"></td>

                                    <td style="width:50px">
                                        <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                                    </td>
                                    <td style="width:50px">
                                        <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                    </td>
                                </tr>
                            </table>
                        </fieldset>
                    </div>
                </div>

                <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
                    <div style="font-family:Tahoma">
                        <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                            <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
                        </div>

                        <fieldset>
                            <legend style="font-weight:bold"> Action : </legend>
                            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                                <tr>
                                    <td style="width:400px; text-align:right"></td>

                                    <td style="width:50px">
                                        <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                                    </td>
                                    <td style="width:50px">
                                        <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                    </td>
                                </tr>
                            </table>
                        </fieldset>
                    </div>
                </div>

            </fieldset>
        </div>
    </div>

</div>
<style type="text/css">
    .lblStar {
        color: #ff0000;
        font-weight: bold;
    }

    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }


    .regionSearch .form-control {
        height: 26px;
        padding: 0px 2px;
        font-size: 12px;
    }

    .regionSearch .control-label {
        padding-top: 1px;
    }

    .regionSearch .col-md-12 {
        width: 100%;
        padding-right: 1px;
        padding-left: 1px;
        margin-bottom: 5px;
    }

    .regionSearch .col-md-3 {
        width: 25%;
        padding-left: 1px;
    }

    .regionSearch .col-md-9 {
        width: 75%;
        padding-right: 1px;
    }

    .regionSearch .col-md-4 {
        width: 28%;
        padding-right: 1px;
        padding-left: 1px;
    }

    .regionSearch .col-md-8 {
        width: 72%;
        padding-right: 1px;
        padding-left: 1px;
    }

    .regionSearch .col-md-5 {
        width: 40%;
        padding-right: 1px;
        padding-left: 1px;
    }

    .regionSearch .col-md-6 {
        width: 48%;
        padding-right: 0px;
        padding-left: 0px;
    }

    .regionSearch .col-md-1 {
        width: 10%;
        padding-right: 1px;
        padding-left: 1px;
    }

    .regionSearch .btn-sm {
        padding: 3px 10px;
    }

    .regionSearch .input-group-addon {
        padding: 2px 8px;
    }

    .regionSearch.col-sm-3 {
        width: 40%;
    }
        #progressbarParent {
            opacity: 0.8;
            background-color: #DCD9D4;
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0px;
            left: 0px;
            z-index: 1000;
        }
       
</style>

<script type="text/javascript">

    var _sLocationID = "";
    var _sLocationIDs = "";
    var nBusinessUnitID=0;
    var _sDepartmentIds = "";
    var _sDepartmentNames = "";
    var _oShifts = [];
    var _sGroupNames="";
    var _sGroupIDs="";
    var _sBlockNames="";
    var _sBlockIDs="";
    var _sDesignationNames = "";
    var _sDesignationIds = "";
    var _sEmployeeIDs = "";

    var _nLastEmployeeID = 0;
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _oBusinessUnits = [];
    var _oEmployeeTypes = [];
    var _oEmployeeCSs = [];
    var _oEmployeeWSs = [];


    var _sBlockNamesAdv="";
    var _sBlockIDsAdv="";
    var _sGroupNamesAdv="";
    var _sGroupIDsAdv="";

    $(document).ready(function () {
        debugger;
        var _oRosterPlanEmployee =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(MenuID));
        var _oRosterPlans= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.RosterPlans));
        var _oRosterPlanDetails=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.RosterPlanDetails));

        _oBusinessUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.BusinessUnits));
        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));

        $('#cboBusinessUnit').data('BusinessUnits', _oBusinessUnits);
        $('#cboShift').data('HRMShifts', _oShifts);
        $('#dtStartDate').datebox('setValue',icsdateformat(new Date()));
        $('#dtEndDate').datebox('setValue',icsdateformat(new Date()));
        $("#dtRosterDate").datebox({'disabled': true});
        $('#dtRosterDate').datebox('setValue',icsdateformat(new Date()));

        $('#dtRosterDate').hide();

        $('#txtInTime').timespinner('setValue', '08:00');
        $('#txtOutTime').timespinner('setValue', '17:00');
        $('#txtMaxOTInMin').timespinner('setValue', '00:00');

        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
        InitializeAdvSearch();
        LoadCateGory(oEmployeeCategorys);

        //RefreshCboBusinessUnit(_oBusinessUnits);
        debugger;
        $("#cboShift").icsLoadCombo({List:_oShifts,OptionValue:"ShiftID",DisplayText: "ShiftWithDuration"});
        $("#cboShiftTrs").icsLoadCombo({List:_oShifts,OptionValue:"ShiftID",DisplayText: "ShiftWithDuration"});
        $('#cboBusinessUnit').icsLoadCombo({List:_oBusinessUnits,OptionValue:"BusinessUnitID",DisplayText:"Name"});
    });


    function LoadCateGory(oEmployeeCategorys)
    {
        $("#cboCategory").icsLoadCombo({
            List: oEmployeeCategorys,
            OptionValue: "Value",
            DisplayText: "Text"
        });
    }

    function showText(myRadio) {
        $("#dtRosterDate").datebox({'disabled': false});
    }
    function hideText(myRadio) {
        $("#dtRosterDate").datebox({'disabled': true});
    }
    $("#cboShiftTrs").change(function(e){
        debugger;
        var id = $("#cboShiftTrs").val();
        for(var i = 0; i < _oShifts.length; i++) {
            if(id == _oShifts[i].ShiftID) {
                debugger;
                $('#txtInTime').timespinner('setValue', _oShifts[i].StartTimeInString);
                $('#txtOutTime').timespinner('setValue', _oShifts[i].EndTimeInString);
                $('#txtMaxOTInMin').timespinner('setValue', _oShifts[i].MaxOTComplianceInMinInString);
            }
        }


    });



    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    function InitializeAdvSearch(){
        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                    {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                    {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }
        debugger
        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }
        debugger;
        var nBusinessUnitID = $("#cboBU").val();
        var nCategory=$('#cboCategory').val();
        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();

        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
           nEmployeeTypeID==0 && sGender=="None" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
           bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0
          && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBlockIDsAdv==""&& _sGroupIDsAdv=="")
        {
            alert("Please enter your selection criteria."); return false;
        }
        debugger;
        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                     sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                     bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                     sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                      +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBlockIDsAdv+"~"+_sGroupIDsAdv;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnEmployeePickerOk").click(function () {
        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length<=0) { alert("please select atleast one item");return; }
        var sEmpIDs="";
        var sEmpNames="";
        for(var i=0;i<oEmployees.length;i++)
        {
            sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
            sEmpNames=sEmpNames+oEmployees[i].Name+",";
        }
        _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
        sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
        $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
        $("#txtEmployee_Collection").val(sEmpNames);
        $("#winEmployeePicker").icsWindow('close');
        SearchByDepartmentAndDateRangeWithPasignation();
    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
        $('#txtEmployeeGroupAdv').val("");
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDs = "";
        _sGroupIDs = "";
    }
    $("#btnEmployee").click(function () {
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });
    $("#chkGWD").change(function(e){
        debugger;
        //var rdCheck = $('input[name="rbShift"]:checked').val();
        debugger;
        if($("#chkGWD").is(':checked')){
            $("#chkOffDay").prop('checked',false);
        }
    });
    $("#chkOffDay").change(function(e){
        debugger;
        if($("#chkOffDay").is(':checked')){
            $("#chkGWD").prop('checked',false);
        }
    });

    /*LOCATION PICKER*/

    var btnLocation="";
    $("#btnLocationPicker,#btnLocationPicker_ColectionF").click(function(e){
        debugger;
        btnLocation = $(this).attr("id");
        var sBusinessUnitIDs ="";
        var nBusinessUnitID=0;
        var _sBusinessUnitIds = nBusinessUnitID;
        if(btnLocation=="btnLocationPicker")
        {
            nBusinessUnitID = $("#cboBU").val();
            sBusinessUnitIDs = String(nBusinessUnitID);
        }
        else{sBusinessUnitIDs=_sBusinessUnitIds;}
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        debugger;
        if(btnLocation=="btnLocationPicker")
        {
            var oLocation = $('#locationtree').tree('getSelected');
            if(oLocation!=null && oLocation.id>0){
                $("#winLocationPicker").icsWindow('close');
                _sLocationID=oLocation.id;
                $('#txtLocation').val(oLocation.text);
            }
            else{
                alert("Please select a location.");
            }
        }
        else
        {
            var oLocations = $('#locationtree').tree('getChecked');
            if(oLocations!=null && oLocations.length>0)
            {
                var LocationName="";
                for(var i=0; i<oLocations.length; i++)
                {
                    if(oLocations[i].id !=1)
                    {
                        LocationName+=oLocations[i].text+",";
                        _sLocationID+=oLocations[i].id+",";
                    }
                }

                LocationName=LocationName.substring(0,LocationName.length-1);
                _sLocationID=_sLocationID.substring(0,_sLocationID.length-1);
                $("#winLocationPicker").icsWindow('close');
                $('#txtLocation_ColectionF').val(LocationName);
            }
            else
            {
                alert("Please select a location.");
            }
        }
    });

    $('#txtLocation_ColectionF').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sBusinessUnitIDs ="";
            sBusinessUnitIDs=_sBusinessUnitIds;
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };
            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker,#btnResetLocationPicker_ColectionF").click(function(e){
        $('#txtLocation').val("");
        $('#txtLocation_ColectionF').val("");
        _sLocationID="";
    });


    /*Department Picker*/
    $("#btnDepartmentPicker_Collection").click(function(e){
        DepartmentPicker();
    });

    $("#txtDepartment_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            DepartmentPicker();
        }
    });

    function DepartmentPicker()
    {
        $("#winDepartmentPicker_Collection").icsWindow('open');
        var nBusinessUnitID=$("#cboBusinessUnit").val();
        var oDepartment={DepartmentID:0,BusinessUnitIDs:nBusinessUnitID>0?nBusinessUnitID:"",LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree_Collection').tree({ data: [response.obj] });
                }
            }
        });
    }

    $("#btnDepartmentPickerOk_Collection").click(function(e){
        var oDepartments = $('#departmenttree_Collection').tree('getChecked');
        if(oDepartments!=null && oDepartments.length>0){
            $("#winDepartmentPicker_Collection").icsWindow('close');
            for(var i=0; i<oDepartments.length; i++)
            {
                _sDepartmentNames+=oDepartments[i].text+",";
                _sDepartmentIds+=oDepartments[i].id+",";
            }

            _sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
            _sDepartmentIds=_sDepartmentIds.substring(0,_sDepartmentIds.length-1);
            $("#txtDepartment_Collection").val(_sDepartmentNames);
        }
        else{
            alert("Please select a department.");
        }
    });
    $("#btnResetDepartmentPicker_Collection").click(function(e){

        $('#txtDepartment_Collection').val("");
        _sDepartmentNames = "";
        _sDepartmentIds="";
    });
    $("#btnDepartmentPickerClose_Collection").click(function(e){
        debugger;
        $("#txtDepartment_Collection").icsWindow('close');
    });
    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 90){
            value += Math.floor(Math.random() * 30);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }

    
    function TransferShiftDept() {

        debugger;
        var IsDayOff = $("#chkOffDay").is(':checked');
        var IsGWD = $("#chkGWD").is(':checked');
        var StartDate= $('#dtStartDate').datebox('getValue');
        var EndDate= $('#dtEndDate').datebox('getValue');
        var InTime= $('#txtInTime').timespinner('getValue');
        var OutTime= $('#txtOutTime').timespinner('getValue');
        var MaxOTDateTime= $('#txtMaxOTInMin').timespinner('getValue');
        var CurrentShiftID=$("#cboShift").val();
        var TrsShiftID=$("#cboShiftTrs").val();
        var BusinessUnitID = $("#cboBusinessUnit").val();
        var Remarks = $("#txtRemarks").val();
        var DeparmentIDs = _sDepartmentIds;
        var LocationIDs = _sLocationID;


        var EmployeeIDs = _sEmployeeIDs;
        var DesignationIDs = _sDesignationIds;

        var getRadio = $('input[name=rbShift]:checked').val();
        var isOfficial = true;
        if(parseInt(getRadio)==1)
        {
            isOfficial = true;
        }
        else {
            isOfficial = false;
        }
        var rosterDate = $('#dtRosterDate').datebox('getValue');

        var GroupIDs = _sGroupIDs;
        var BlockIDs = _sBlockIDs;


        if(EmployeeIDs == ""&&BusinessUnitID <= 0 && LocationIDs == ""&&DeparmentIDs == ""&&DesignationIDs==""&&GroupIDs==""&&BlockIDs=="") {
            alert("Please select at least one searching criteria.");
        }
            

        //if(BusinessUnitID <= 0) {
        //    alert("Please select  Business Unit!");
        //    return;
        //}
        //if(LocationIDs == "") {
        //    alert("Please select  Location!");
        //    return;
        //}
        //if(DeparmentIDs == "") {
        //    alert("Please select  Department!");
        //    return;
        //}

        //if(CurrentShiftID<=0)
        //{
        //    alert("Please select a shift!");
        //    return;
        //}

        var oObject=
            {
                ErrorMessage:StartDate + '~'
                +EndDate + '~'
                +(nBusinessUnitID < 0? 0 :nBusinessUnitID) + '~'
                +LocationIDs + '~'
                +(_sDepartmentIds == ""?"":_sDepartmentIds) + '~'
                +CurrentShiftID + '~'
                +(InTime == ""?new Date():InTime) + '~'
                +(OutTime == ""?new Date():OutTime) + '~'
                +IsGWD + '~'
                +IsDayOff + '~'
                +Remarks + '~'
                +(MaxOTDateTime == "" ? new Date() : MaxOTDateTime) + '~'
                +EmployeeIDs + '~'
                +DesignationIDs + '~'
                +isOfficial + '~'
                +rosterDate + '~'
                +GroupIDs + '~'
                +BlockIDs + '~'
                +TrsShiftID
            }
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/RosterPlan/RosterTransfer_TransferDept",
            traditional: true,
            data:  JSON.stringify(oObject),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var results = jQuery.parseJSON(data);
                
                if (results.FeedBackResponse) {
                    alert("Transfered Successfully");
                    window.location.href = sessionStorage.getItem("BackLink");
                     
                } else {
                    var tsv=((new Date()).getTime())/1000;
                    window.open(_sBaseAddress+ "/RosterPlan/PrintErrorList?ts="+tsv, "_blank");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

        //$("#progressbar").progressbar({ value: 0 });
        //$("#progressbarParent").show();
        //var intervalID = setInterval(updateProgress, 250);
        //$.ajax({
        //    type: "GET",
        //    dataType: "json",
        //    url : _sBaseAddress+  "/RosterPlan/RosterTransfer_TransferDept?StartDate="+StartDate
        //        +"&EndDate="+EndDate
        //        +"&BUID=" + (nBusinessUnitID < 0? 0 :nBusinessUnitID)
        //        +"&LocationIDs="+ 
        //        +"&DepartmentIDs="+(_sDepartmentIds == ""?"":_sDepartmentIds)
        //        +"&ShiftID="+CurrentShiftID
        //        +"&InTime="+(InTime == ""?new Date():InTime) 
        //        +"&OutTime=" + (OutTime == ""?new Date():OutTime)
        //        +"&IsGWD=" + IsGWD
        //        +"&IsDayOff="+ IsDayOff 
        //        +"&Remarks="+Remarks
        //        +"&MaxOTDateTime=" + (MaxOTDateTime == "" ? new Date() : MaxOTDateTime) 
        //        +"&EmployeeIDs="+EmployeeIDs
        //        +"&DesignationIDs="+DesignationIDs
        //        +"&isOfficial="+isOfficial
        //        +"&RosterDate="+rosterDate
        //        +"&GroupIDs="+GroupIDs
        //        +"&BlockIDs="+BlockIDs
        //        +"&TrsShiftID"+TrsShiftID,
        //    traditional: true,
        //    contentType: "application/json; charset=utf-8",
        //    success: function (data) {
        //        debugger;
        //        var oRosterPlanEmployees = jQuery.parseJSON(data);
        //        if(oRosterPlanEmployees.length>0 && oRosterPlanEmployees[0].ErrorMessage=="")
        //        {

        //            alert("Shift Transfered Successfully !");
        //            window.location.href = sessionStorage.getItem("BackLink");
        //        }
        //        else
        //        {
        //            alert(oRosterPlanEmployees[0].ErrorMessage);
        //        }
        //        $("#progressbar").progressbar({ value: 0 });//hide
        //        $("#progressbarParent").hide();
        //    },
        //    error: function (xhr, status, error) {
        //        alert(error);
        //        $("#progressbar").progressbar({ value: 0 });//hide
        //        $("#progressbarParent").hide();
        //    }
        //});
    }

    function Close()
    {
        window.location.href = sessionStorage.getItem("BackLink");
    }


    $("#cboBusinessUnit").change(function(e){
        $('#txtLocation_Colection').val("");
        _sLocationID = "";

        $('#txtDepartment_Collection').val("");
        _sDepartmentNames = "";
        _sDepartmentIds="";
    });
    /*------------EmployeeGroup--------------*/

    $('#txtEmployeeGroup').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroup").val();
            var sTempName = "";
            SearchEmployeeGroup(txtSearchByGroup);
            $("#txtEmployeeGroup").val('');
        }
    });


    $("#btnEmployeeGroupPicker").click(function(e){
        SearchEmployeeGroup("");
    });
    function SearchEmployeeGroup(name) {
        $("#txtEmployeeGroup").val("");
        _sGroupNames = "";
        _sGroupIDs = "";
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oGroups.length; i++)
                    {
                        _sGroupNames += oGroups[i].Name+",";
                        _sGroupIDs += oGroups[i].EmployeeTypeID+",";

                    }
                    _sGroupNames=_sGroupNames.substring(0,_sGroupNames.length-1);
                    _sGroupIDs=_sGroupIDs.substring(0,_sGroupIDs.length-1);
                    $("#txtEmployeeGroup").val(_sGroupNames);
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }

    $("#btnEmployeeGroupPickerReset").click(function(e){

        $('#txtEmployeeGroup').val("");
        _sGroupIDs = "";
    });

    /*------------EmployeeBlock--------------*/

    $('#txtEmployeeBlock').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlock").val();
            var sTempName = "";
            SearchEmployeeBlock(txtSearchByBlock);
            $("#txtEmployeeBlock").val('');
        }
    });

    $("#btnEmployeeBlockPicker").click(function(e){
        SearchEmployeeBlock("");
    });
    function SearchEmployeeBlock(name) {
        $("#txtEmployeeBlock").val("");
        _sBlockNames = "";
        _sBlockIDs = "";
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    debugger;
                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNames += oBlocks[i].Name+",";
                        _sBlockIDs += oBlocks[i].EmployeeTypeID+",";

                    }
                    _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                    _sBlockIDs=_sBlockIDs.substring(0,_sBlockIDs.length-1);
                    $("#txtEmployeeBlock").val(_sBlockNames);
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }


    $("#btnEmployeeBlockPickerReset").click(function(e){
        _sBlockNames = "";
        $('#txtEmployeeBlock').val("");
        _sBlockIDs = "";
    });



    /*-------------Designation Picker----------------*/
    var btnDesignation="";
    $("#btnDesignationPicker,#btnDesignationPicker_Collection").click(function(e){
        btnDesignation = $(this).attr("id");
        DesignationPicker();
    });

    $("#txtDesignation_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            btnDesignation ="btnDesignationPicker_Collection";
            DesignationPicker();
        }
    });

    function DesignationPicker()
    {
        var _sBusinessUnitIds = nBusinessUnitID;
        var oDesignation={
            DesignationID:0,
            Params: _sBusinessUnitIds+'~'+_sLocationID+'~'+ _sDepartmentIds
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            _sDesignationNames = "";
            _sDesignationIds = "";
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;
                    if(btnDesignation=="btnDesignationPicker_Collection"){bmultiplereturn=true;}

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oDesignations=[];

            if(btnDesignation=="btnDesignationPicker_Collection")
            {
                oDesignations = $('#'+oPickerobj.tableid).datagrid('getChecked');
            }
            else
            {
                var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
                oDesignations.push(oDesignation);
            }

            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignations!=null && oDesignations.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames+=oDesignations[i].Name+",";
                        _sDesignationIds+=oDesignations[i].DesignationID+",";
                    }

                    _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                    _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
                    if(btnDesignation=="btnDesignationPicker_Collection")
                    {
                        $("#txtDesignation_Collection").val(_sDesignationNames);
                    }
                    else
                    {
                        $("#txtDesignation").val(_sDesignationNames);
                    }
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker,#btnResetDesignationPicker_Collection").click(function(e){
        $('#txtDesignation').val("");
        $('#txtDesignation_Collection').val("");
        _sDesignationIds="";
        _sDesignationNames = "";
    });


    $('#txtEmployee_Collection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee_Collection").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
            SearchEmployeeByText(sCodeName);
        }
    });

    function SearchEmployeeByText(sEmpNameCode){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _sEmployeeIDs=oreturnObj.EmployeeID;
                    $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
                    $("#txtEmployee_Collection").val(oreturnObj.Name);
                    $("#winEmployeePicker").icsWindow('close');
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        _sEmployeeIDs=oreturnObj.EmployeeID;
                        $('#txtEmployee').data("EmployeeIDs",_sEmployeeIDs);
                        $("#txtEmployee_Collection").val(oreturnObj.Name);
                        $("#winEmployeePicker").icsWindow('close');
                    }
                }
            }
        });
    }

    $('#btnCEmployee').click(function (e)
    {
        document.getElementById("txtEmployee_Collection").value = "" ;
        $('#txtEmployeeName').data("EmployeeIDs","");
        _sEmployeeIDs = "";
    });

    /*------------EmployeeGroupAdv--------------*/

    $("#btnEmployeeGroupResetAdv").click(function(e){
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
    });

    $('#txtEmployeeGroupAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroupAdv").val();
            var sTempName = "";
            SearchEmployeeGroupAdv(txtSearchByGroup);
            $("#txtEmployeeGroupAdv").val('');
        }
    });


    $("#btnEmployeeGroupPickerAdv").click(function(e){
        SearchEmployeeGroupAdv("");
    });
    function SearchEmployeeGroupAdv(name) {
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oGroups.length; i++)
                    {
                        _sGroupNamesAdv += oGroups[i].Name+",";
                        _sGroupIDsAdv += oGroups[i].EmployeeTypeID+",";

                    }
                    _sGroupNamesAdv=_sGroupNamesAdv.substring(0,_sGroupNamesAdv.length-1);
                    _sGroupIDsAdv=_sGroupIDsAdv.substring(0,_sGroupIDsAdv.length-1);
                    $("#txtEmployeeGroupAdv").val(_sGroupNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }


    /*------------EmployeeBlockAdv--------------*/

    $('#txtEmployeeBlockAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlockAdv").val();
            var sTempName = "";
            SearchEmployeeBlockAdv(txtSearchByBlock);
            $("#txtEmployeeBlockAdv").val('');
        }
    });

    $("#btnEmployeeBlockPickerAdv").click(function(e){
        SearchEmployeeBlockAdv("");
    });
    function SearchEmployeeBlockAdv(name) {
        $("#txtEmployeeBlockAdv").val("");
        _sBlockNamesAdv = "";
        _sBlockIDsAdv = "";
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNamesAdv += oBlocks[i].Name+",";
                        _sBlockIDsAdv += oBlocks[i].EmployeeTypeID+",";

                    }
                    _sBlockNamesAdv=_sBlockNamesAdv.substring(0,_sBlockNamesAdv.length-1);
                    _sBlockIDsAdv=_sBlockIDsAdv.substring(0,_sBlockIDsAdv.length-1);
                    $("#txtEmployeeBlockAdv").val(_sBlockNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }


    $("#btnEmployeeBlockResetAdv").click(function(e){
        debugger;
        _sBlockNamesAdv = "";
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDsAdv = "";
    });

    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){
        $("#winDepartmentPicker").icsWindow('open');
        var _sBusinessUnitIds = nBusinessUnitID;
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){
        _sDepartmentNames = "";
        _sDepartmentIds= "";
        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentIds= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose,#btnDepartmentPickerClose_Collection").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
        $("#winDepartmentPicker_Collection").icsWindow('close');
    });

    $("#btnResetDepartmentPicker,#btnResetDepartmentPicker_Collection").click(function(e){
        $('#txtDepartment,#txtDepartment_Collection').val("");
        _sDepartmentIds="";
        _sDepartmentNames = "";
    });
</script>
