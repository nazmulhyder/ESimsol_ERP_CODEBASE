<html>
@{
    ViewBag.Title = "Time Action Plan";
}
<body>
    @model ESimSol.BusinessObjects.TAP

    <div class="menuMainCollectionTable">
            <div id="accABC" class="easyui-tabs" style="font-family:Tahoma;width:100%;height:90%; ">
                <div id="tdDetailDivInfo" title="TnA">
                    <fieldset style="overflow-y:auto">
                        <legend style="font-weight: bold;">TnA Info: </legend>
                        <table border="0" cellspacing="0" cellpadding="0" style="font-size: 11px; font-weight: bold" width="100%">
                            <tr>
                                <td style="width:13%; text-align: right; "><label class="asterixStyle">*</label>Style No:</td>
                                <td style="width:30%; text-align:left;">@Html.TextBoxFor(model => model.StyleNo, new { style = "width:85%;", id = "txtStyleNo", placeholder = "Type Style No Press Enter." })<input type="button" value="Pick" id="btnStylePick" style="width:15%;" onclick="StylePiker()" /> </td>
                                <td style="width:13%; text-align: right">O/Con Date</td>
                                <td style="width:17%; text-align:left;"><input id="txtPlanDate" type="text" class="easyui-datebox" onchange="ChangeDate()" style="width: 100%;" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                                <td style="width:27%; vertical-align:bottom; text-align:right;" rowspan="6">
                                    <table border="1" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td style=" text-align:center; width:210px; height:190px;">
                                                <img id="imgCoverImage" src="@Url.Action("GetLargeImage", "TechnicalSheet", new { id = Model.TechnicalSheetID })" alt="Photo" style="width:210px; height:190px" />
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>

                            <tr>
                                <td style="width:13%; text-align: right">Item:</td>
                                <td style="width:30%; text-align:left;">@Html.TextBoxFor(model => model.ProductName, new { style = "width:100%;", id = "txtProductName", disabled = "disabled" }) </td>

                                <td style="width:13%; text-align: right">PO Issue Date:</td>
                                <td style="width:17%; text-align:left;"><input id="txtPODate" type="text" class="easyui-datebox" style="width: 100%;" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                            </tr>
                            <tr>
                                <td style="width:13%; text-align: right">PO No:</td>
                                <td style="width:30%; text-align:left;">@Html.TextBoxFor(model => model.OrderRecapNo, new { style = "width:84%;", id = "txtOrderNo", placeholer = "type PO NO" }) <input type="button" value="Pick" id="btnRecapPick" style="width:14%;" onclick="PickOrder()" /> </td>

                                <td style="width:13%; text-align: right">Delivery Date:</td>
                                <td style="width:17%; text-align:left;"><input id="txtShipmentDate" type="text" class="easyui-datebox" onchange="ChangeDate()" style="width:100%;" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                            </tr>
                            <tr>
                                <td style="width:13%; text-align: right">Fabrication:</td>
                                <td style="width:30%; text-align:left;">@Html.TextBoxFor(model => model.YarnCategoryName, new { style = "width:100%;", id = "txtFabrication", disabled = "disabled" })</td>

                                <td style="width:13%; text-align: right">Lead Time:</td>
                                <td style="width:17%; text-align:left;">@Html.TextBoxFor(model => model.LeadTime, new { style = "width:80%; text-align:right", id = "txtLeadTime", disabled = "disabled" })<input type="text" style="width:18%;" value="Days" disabled /> </td>
                            </tr>
                            <tr>
                                <td style="width:13%; text-align: right">Concern/Merchant:</td>
                                <td style="width:30%; text-align:left;">@Html.TextBoxFor(model => model.MerchandiserName, new { style = "width:100%;", id = "txtMerchandiserName", disabled = "disabled" })</td>

                                <td style="width:13%; text-align: right">Order Qty:</td>
                                <td style="width:17%; text-align:left;">@Html.TextBoxFor(model => model.OrderQty, new { style = "width:80%; text-align:right", id = "txtOrderQty", disabled = "disabled" })<input type="text" style="width:18%;" value="Pcs" disabled /> </td>
                            </tr>
                           
                        </table>
                    </fieldset>
                </div>
                <div id="tdDetailDivApproval" title="Approval Process">
                    <table id="tblTAPApprovalProcess" class="easyui-datagrid" style="height:480px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" showfooter="true" data-options="rownumbers:true,singleSelect: true, toolbar:'#TAPDetailstoolbar',onLoadSuccess: onLoadSuccessApproval, onClickRow: onClickRowApprovalProcess">
                        <thead>
                            <tr>
                                <th field="OrderStepName" width="150">Article Name</th>
                                <th width="160" data-options="field:'SubStepName',align:'left',editor:{type:'text',options:{precision:0}}">Sub step</th>
                                <th width="140" data-options="field:'ReqSubmissionDays',align:'center',editor:{type:'numberbox',options:{precision:0}}">Submission lead time<br />(Days fm O/Con date)</th>
                                <th field="SubmissionDateInString" align="center" width="100">Sub Date</th>
                                <th width="100" data-options="field:'ReqBuyerApprovalDays',align:'center',editor:{type:'numberbox',options:{precision:0}}">Approval Lead time(Days)</th>
                                <th field="ApprovalPlanDateInString" align="center" width="150">Deadline for Approval</th>
                                <th width="120" data-options="field:'Remarks',align:'center',editor:{type:'text',options:{precision:0}}">Remarks</th>
                            </tr>
                        </thead>
                    </table>
                    <div id="TAPDetailstoolbar" style="text-align:left; font-weight:normal">
                        <a href="javascript:void(0)" id="btnAddOrderStep" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddApprovalSubStep()">Add Sub Step</a>
                        <a href="javascript:void(0)" id="btnRemoveDetail" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="RemoveApprovalStep()">Remove</a>
                        <a href="javascript:void(0)" id="btnApprovalProcess" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshApprovalProcess()"></a>
                    </div>
                </div>
                <div id="tdDetailDiv" title="Fabric & Swieing Process">
                    <table id="tblTAPProduction" class="easyui-datagrid" style="height:480px;"fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" data-options="rownumbers:true,singleSelect: true, onLoadSuccess: onLoadSuccessProduction, toolbar:'#TAPProductiontoolbar', onClickRow: onClickRowProduction">
                        <thead>
                            <tr>
                                <th field="OrderStepName" width="150">Article Name</th>
                                <th width="160" data-options="field:'SubStepName',align:'left',editor:{type:'text',options:{precision:0}}">Sub step</th>
                                <th width="130" data-options="field:'ReqSubmissionDays',align:'center',editor:{type:'numberbox',options:{precision:0}}">Required Days</th>
                                <th field="SubmissionDateInString" align="center" width="170">Start Date</th>
                                <th field="ApprovalPlanDateInString" align="center" width="170">Deadline</th>
                                <th width="130" data-options="field:'Remarks',align:'center',editor:{type:'text',options:{precision:0}}">Remarks</th>
                            </tr>
                        </thead>
                    </table>
                    <div id="TAPProductiontoolbar" style="text-align:left; font-weight:normal">
                       @*<a href="javascript:void(0)" id="btnAddOrderStep" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddProductionSubStep()">Add Sub Step</a>
                        <a href="javascript:void(0)" id="btnRemoveDetail" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="RemoveProductionStep()">Remove</a>*@
                        <a href="javascript:void(0)" id="btnApprovalProcess" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshProductionProcess()"></a>
                    </div>
                </div>
              </div>
        <fieldset style="height:10%;">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="1" cellpadding="1" style="font-size: 11px; font-weight: bold; vertical-align:middle;width:100%">
                <tr>
                    <td style="width:80%; text-align:left">
                        <table border="0"cellpadding="0" cellspacing="0" width="100%">
                            <tr>
                                <td style="width:13%; text-align: right">Fabric Lead Time:</td>
                                 <td style="width:12%;">@Html.TextBoxFor(model => model.FabricLeadTime, new { style = "width:55%;text-align:right", id = "txtFabricLeadTime", disabled = "disabled" })<input type="text" style="width:45%;" value="Days" disabled /> </td>
                                 <td style="width:15%; text-align: right">Approval Lead time:</td>
                                 <td style="width:12%;">@Html.TextBoxFor(model => model.ApprovalDuration, new { style = "width:60%;text-align:right", id = "txtApprovalDuration", disabled = "disabled" })<input type="text" style="width:40%;" value="Days" disabled /> </td>
                                 <td style="width:13%; text-align: right">Producion time:</td>
                                 <td style="width:12%;">@Html.TextBoxFor(model => model.ProductionTime, new { style = "width:55%;text-align:right", id = "txtProductionTime", disabled = "disabled" })<input type="text" style="width:45%;" value="Days" disabled /> </td>
                                 <td style="width:11%; text-align: right">Buffer In Hand:</td>
                                 <td style="width:12%;">@Html.TextBoxFor(model => model.BufferingDays, new { style = "width:60%;text-align:right", id = "txtBufferingDays", disabled = "disabled" })<input type="text" style="width:40%;" value="Days" disabled /> </td>
                            </tr>
                        </table>
                    </td>
                    <td style="width:20%; text-align:right;">
                        <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true" onclick="Approve()">Approve</a>
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save(false,false)">Save</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>

<script type="text/javascript">
    var _oTAP=null;
    var _sBaseAddress="";
    var _oTAPDetails = [];
    var _oTempOrderSteps= [];
    var _sTAPHeader = "";
    var _oAuthorizationRolesMapping = [];
    var _oTAPApprovalProcesList = [];
    var _oTAPProductionProcesList = [];
    var _lBackLink = "";
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        _oTAP =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oTAPApprovalProcesList = _oTAP.TAPApprovalProcesList;
        _oTAPProductionProcesList = _oTAP.TAPProductionProcesList;
        _sTAPHeader = sessionStorage.getItem("TAPHeader");
        _lBackLink = sessionStorage.getItem("BackLink");
        RefreshControl();
    });

   

    function RefreshControl()
    {
        debugger;
        document.getElementById('btnApprove').style.display = 'none';
        if(parseInt(_oTAP.TechnicalSheetID)>0){var txtStyleNo=document.getElementById("txtStyleNo");txtStyleNo.style.color="blue";txtStyleNo.style.fontWeight="bold";}
        if(parseInt(_oTAP.OrderRecapID)>0){var txtOrderNo=document.getElementById("txtOrderNo");txtOrderNo.style.color="blue";txtOrderNo.style.fontWeight="bold";}
        $('#txtPlanDate').datebox('setValue',_oTAP.PlanDateInString);
        $('#txtPODate').datebox('setValue',_oTAP.PODateInString);
        $('#txtShipmentDate').datebox('setValue',_oTAP.ShipmentDateInString);
        if(_sTAPHeader=="View Time Action Plan")
        {
            document.getElementById('txtOrderNo').disabled = true;
            document.getElementById('btnStylePick').disabled = true;
            document.getElementById('btnRecapPick').disabled = true;
            //document.getElementById('txtRemarks').disabled = true;
                        
            document.getElementById('btnAddOrderStep').style.display = 'none';
            document.getElementById('btnRemoveDetail').style.display = 'none';
            document.getElementById('btnSave').style.display = 'none';
        }
        if(_sTAPHeader=="Approved Time Action Plan")
        {
            document.getElementById('btnSave').style.display = 'none';
            document.getElementById('btnApprove').style.display = '';   
        }
        if(parseInt(_oTAP.TAPID)>0)//only for saved item
        {
            RefreshTAPApprovalProcessList(_oTAPApprovalProcesList);
            RefreshTAPProductionList(_oTAPProductionProcesList);
            //DateCalCulation();
        }
    }
    
   
    function AddApprovalSubStep()
    {
        debugger;
        var oTAPDetail = $('#tblTAPApprovalProcess').datagrid('getSelected');
        if(oTAPDetail== null){alert("Please Select Detail");return;}
        if(oTAPDetail.TnAStepInt==1){alert("Sorry,Labdip can't Add.");return;}
        sessionStorage.setItem('TAPDetail',JSON.stringify(oTAPDetail));//set Detail . Don't remove other ise both object will same value
        var oNewTAPApprovalProcess = null;
        var nExistingSubSTeps = ICS_FindObjects($('#tblTAPApprovalProcess').datagrid('getRows'),"TnAStep",oTAPDetail.TnAStep)
        oNewTAPApprovalProcess = jQuery.parseJSON(sessionStorage.getItem('TAPDetail'));
        oNewTAPApprovalProcess.Sequence = parseInt(nExistingSubSTeps.length+1);
        oNewTAPApprovalProcess.TAPDetailID = 0;//New Item so No TAP Detail ID
        if(oTAPDetail.SubStepName!=null && oTAPDetail.SubStepName!="")
        {            
            
            oNewTAPApprovalProcess.SubStepName =parseInt(nExistingSubSTeps.length+1)+" "+oTAPDetail.SubStepName;   
        }
        debugger;
        $('#tblTAPApprovalProcess').datagrid('appendRow',oNewTAPApprovalProcess);
        var oPriviousList = $('#tblTAPApprovalProcess').datagrid('getRows');
       MakeSequence(oPriviousList,'tblTAPApprovalProcess');
       onLoadSuccessApproval(null);
       alert("Succesfully Added.");
    }
    function MakeSequence(oNewList, sTableId)
    {
        $.icsProgressBar(true);// start
        var oTAP = {TAPDetails:oNewList};
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/TAP/GetRearagngeList",
            traditional: true,
            data:  JSON.stringify(oTAP),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                $.icsProgressBar(false);// End
                var oTAPDetails = jQuery.parseJSON(data);
                if (oTAPDetails.length>0)
                {
                    RefreshTAPApprovalProcessList(oTAPDetails);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });

    }
    function RemoveApprovalStep()
    {
        debugger;
        var oTAPDetail= $('#tblTAPApprovalProcess').datagrid('getSelected');
        if(oTAPDetail==null)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return ;
        endEditingApprovalProcess();
        var SelectedRowIndex=$('#tblTAPApprovalProcess').datagrid('getRowIndex',oTAPDetail);
        $('#tblTAPApprovalProcess').datagrid('deleteRow',SelectedRowIndex);
        alert("Delete sucessfully");
        onLoadSuccessApproval(null);
        DateCalCulation();
    }
    function RefreshApprovalProcess()
    {
        debugger;
        var oApprovalList = $('#tblTAPApprovalProcess').datagrid('getRows');
        RefreshTAPApprovalProcessList(oApprovalList);
    }
    var editiIndexApprovalProcess = undefined;
    function endEditingApprovalProcess(){

        if (editiIndexApprovalProcess == undefined){return true}
        if ($('#tblTAPApprovalProcess').datagrid('validateRow', editiIndexApprovalProcess))
        {
            $('#tblTAPApprovalProcess').datagrid('endEdit', editiIndexApprovalProcess);
            $('#tblTAPApprovalProcess').datagrid('selectRow',editiIndexApprovalProcess);
            var oTAPDetail=$('#tblTAPApprovalProcess').datagrid('getSelected');
            $('#tblTAPApprovalProcess').datagrid('updateRow',{index: editiIndexApprovalProcess,	row: oTAPDetail});
            DateCalCulation();
            onLoadSuccessApproval(null);
            editiIndexApprovalProcess = undefined;
            return true;
        }
        else
        {
            return false;
        }

    }
    function onClickRowApprovalProcess(index){

        if (editiIndexApprovalProcess != index){
            if (endEditingApprovalProcess())
            {
                $('#tblTAPApprovalProcess').datagrid('selectRow', index).datagrid('beginEdit', index);
                editiIndexApprovalProcess = index;
            }
            else
            {
                $('#tblTAPApprovalProcess').datagrid('selectRow', editiIndexApprovalProcess);
            }
        }
    }
    function onLoadSuccessApproval(data) {
        debugger;
        var nSpan = 0;
        var oMergeList = [];
        var oDetials = $('#tblTAPApprovalProcess').datagrid('getRows');
        var nStepID = oDetials[0].OrderStepID;
        var nTempIndex = 0;
        for(var i =0;i<oDetials.length;i++)
        {
            if(nStepID!=oDetials[i].OrderStepID)
            {
                if(nSpan>1)    
                {
                    //oMergeList.push({index:nTempIndex,Span:nSpan});
                    $('#tblTAPApprovalProcess').datagrid('mergeCells', { index:nTempIndex, field: 'OrderStepName', rowspan:nSpan });
                }
                nSpan = 0;//Reset
                nTempIndex = i;
            }
            nSpan++;
            nStepID=oDetials[i].OrderStepID;//set step id
        }
        
    }

    function DateCalCulation()
    {
        //Approval Region
        debugger;
        var oTAPApprovals = $('#tblTAPApprovalProcess').datagrid('getRows');
        var nSubmissionDays = 0;
        for(var i=0;i<oTAPApprovals.length;i++) {
            if(oTAPApprovals[i].TnAStepInt==1 || parseInt(oTAPApprovals[i].TnAStepInt)==4)//Labdip or Accesories
            {
                var tempDate =new Date($('#txtPlanDate').datebox('getValue'));  oTAPApprovals[i]  = CommonDateCalculation(oTAPApprovals[i],tempDate);

            }else  if(parseInt(oTAPApprovals[i].TnAStepInt)==2 || parseInt(oTAPApprovals[i].TnAStepInt)==3 )//Prints Off OR fitting Sample  
            {
                if(parseInt(oTAPApprovals[i].Sequence)==1)//for First Step
                {
                    var tempDate =new Date($('#txtPlanDate').datebox('getValue'));                    oTAPApprovals[i]  = CommonDateCalculation(oTAPApprovals[i],tempDate);
                }else
                {
                    var tempDate =new Date(oTAPApprovals[i-1].ApprovalPlanDateInString);               oTAPApprovals[i]  = CommonDateCalculation(oTAPApprovals[i],tempDate);

                }
            }else if(oTAPApprovals[i].TnAStepInt==5)//Sample fabrics (Based on Lab dips)
            {
                debugger;
                var oLabDips = ICS_FindObjects($('#tblTAPApprovalProcess').datagrid('getRows'),'TnAStepInt',1)//Labdips:1
                var oMathcingObject = ICS_FindObject(oLabDips,'SubStepName',oTAPApprovals[i].SubStepName);
                var tempDate =null;
                if(oMathcingObject!=null && oMathcingObject!="")
                {
                    tempDate = new Date(oMathcingObject.ApprovalPlanDateInString)
                }else{
                    tempDate =new Date(oLabDips[oLabDips.length-1].ApprovalPlanDateInString);
                }
                oTAPApprovals[i]  = CommonDateCalculation(oTAPApprovals[i],tempDate);
                
            }else if(oTAPApprovals[i].TnAStepInt==6)//Collection sample - (Based on Fit, print & Acc App.)
            {
                debugger;
                if(parseInt(oTAPApprovals[i].Sequence)==1)//for First Step
                {
                    //fitting sample last item 
                    var oFittingSamples = ICS_FindObjects( $('#tblTAPApprovalProcess').datagrid('getRows'),'TnAStepInt',3)//fiting sample:3
                    var tempDate =new Date(oFittingSamples[oFittingSamples.length-1].ApprovalPlanDateInString);   oTAPApprovals[i]  = CommonDateCalculation(oTAPApprovals[i],tempDate);

                }else
                {
                    var tempDate =new Date(oTAPApprovals[i-1].ApprovalPlanDateInString);  oTAPApprovals[i]  = CommonDateCalculation(oTAPApprovals[i],tempDate);
                }

            }else if(oTAPApprovals[i].TnAStepInt==7)//Pre cutting file
            {
                if(parseInt(oTAPApprovals[i].Sequence)==1)//for First Step
                {
                    //fitting sample last item 
                    var oAccessoreis = ICS_FindObjects( $('#tblTAPApprovalProcess').datagrid('getRows'),'TnAStepInt',4)//Accessoreis:4
                    var tempDate =new Date(oAccessoreis[oAccessoreis.length-1].ApprovalPlanDateInString);   oTAPApprovals[i]  = CommonDateCalculation(oTAPApprovals[i],tempDate);

                }else
                {
                    var tempDate =new Date(oTAPApprovals[i-1].ApprovalPlanDateInString);                    oTAPApprovals[i]  = CommonDateCalculation(oTAPApprovals[i],tempDate);
                }
            }
        }
        RefreshTAPApprovalProcessList(oTAPApprovals);
        var oCollectionSamples = ICS_FindObjects( $('#tblTAPApprovalProcess').datagrid('getRows'),'TnAStepInt',6)//Collection Smple:6
        var dPlanDate =new Date($('#txtPlanDate').datebox('getValue'));var nMiliseconds = (1000 * 60 * 60 * 24);
        var dcollectionDate =new Date(oCollectionSamples[oCollectionSamples.length-1].ApprovalPlanDateInString);
        var millisBetween = dcollectionDate.getTime() - dPlanDate.getTime();
        var nApprovalDuration = Math.floor(millisBetween / nMiliseconds);
        $('#txtApprovalDuration').val(formatPricewithoutdecimal(nApprovalDuration,0));
        $('#tblTAPApprovalProcess').datagrid('reloadFooter',[{SubStepName: 'Approval duration :', ReqSubmissionDays:formatPricewithoutdecimal(nApprovalDuration,0)+" Days",ApprovalPlanDateInString:"Leadtime for Prod", Remarks:formatPricewithoutdecimal(parseInt(icsRemoveComma($('#txtLeadTime').val(), 0))-nApprovalDuration)+" Days"}]);
        
        //Productoin Region
        var oTAPProductions = $('#tblTAPProduction').datagrid('getRows');
        var oTempTAPApprovals =  $('#tblTAPApprovalProcess').datagrid('getRows');
        for(var i=0;i<oTAPProductions.length;i++) {
            if(parseInt(oTAPProductions[i].TnAStepInt)==8)//bulk Program
            {
                oTAPProductions[i].SubmissionDate = new Date(-8640000000000000);oTAPProductions[i].SubmissionDateInString ="";//min date
                var tempDate =new Date(oTempTAPApprovals[0].ApprovalPlanDateInString); //Labddip Apply Date
                oTAPProductions[i]  = SetOnlyApprovalPlanDate(oTAPProductions[i],tempDate);
            }else  if(parseInt(oTAPProductions[i].TnAStepInt)==9)//Yarn Inhouse By
            {
                var tempDate =new Date($('#txtPlanDate').datebox('getValue')); 
                tempDate = new Date(tempDate.setDate(tempDate.getDate()+parseInt(oTAPProductions[i].ReqSubmissionDays)));
                oTAPProductions[i].SubmissionDate = tempDate;oTAPProductions[i].SubmissionDateInString =icsdateformat(tempDate);
                //Approval plan date
                oTAPProductions[i].ApprovalPlanDate = new Date(tempDate.setDate(tempDate.getDate()+7));//requiremnt of Client add 7 dys
                oTAPProductions[i].ApprovalPlanDateInString =icsdateformat(oTAPProductions[i].ApprovalPlanDate);
            }else  if(parseInt(oTAPProductions[i].TnAStepInt)==10)//Knitting
            {
                var oYarnInHouseBys = ICS_FindObjects( $('#tblTAPProduction').datagrid('getRows'),'TnAStepInt',9)//YarnInHouseBy:9
                var tempDate =new Date(oYarnInHouseBys[oYarnInHouseBys.length-1].ApprovalPlanDateInString); 
                tempDate = new Date(tempDate.setDate(tempDate.getDate()+7));//Requirement by client
                oTAPProductions[i].SubmissionDate = tempDate;oTAPProductions[i].SubmissionDateInString =icsdateformat(tempDate);
                //Approval plan date
                tempDate =new Date(oYarnInHouseBys[oYarnInHouseBys.length-1].ApprovalPlanDateInString);
                oTAPProductions[i]  = SetOnlyApprovalPlanDate(oTAPProductions[i],tempDate);
            }else  if(parseInt(oTAPProductions[i].TnAStepInt)==11)//Dyeing by
            {
                var oKnittings = ICS_FindObjects( $('#tblTAPProduction').datagrid('getRows'),'TnAStepInt',10)//Knitting:10
                var tempDate =new Date(oKnittings[oKnittings.length-1].SubmissionDateInString); 
                tempDate = new Date(tempDate.setDate(tempDate.getDate()+5));//Requirement by client
                oTAPProductions[i].SubmissionDate = tempDate;oTAPProductions[i].SubmissionDateInString =icsdateformat(tempDate);
                //Approval plan date
                tempDate =new Date(oKnittings[oKnittings.length-1].ApprovalPlanDateInString); 
                oTAPProductions[i]  = SetOnlyApprovalPlanDate(oTAPProductions[i],tempDate);

            }else  if(parseInt(oTAPProductions[i].TnAStepInt)==12)//Foreign Accessories inhouse by
            {
                var oAccesories = ICS_FindObjects(oTempTAPApprovals,'TnAStepInt',4)//Accesories:4
                var tempDate =new Date(oAccesories[0].ApprovalPlanDateInString); 
                tempDate = new Date(tempDate.setDate(tempDate.getDate()+parseInt(oTAPProductions[i].ReqSubmissionDays)));
                oTAPProductions[i].SubmissionDate = tempDate;oTAPProductions[i].SubmissionDateInString =icsdateformat(tempDate);
                oTAPProductions[i].ApprovalPlanDate = tempDate;oTAPProductions[i].ApprovalPlanDateInString =icsdateformat(tempDate);//same as submission datte
            }else  if(parseInt(oTAPProductions[i].TnAStepInt)==13)//Possible Cutting Date
            {
                oTAPProductions[i].SubmissionDate = new Date(-8640000000000000);oTAPProductions[i].SubmissionDateInString ="";//min date
                var oCollectionSamples = ICS_FindObjects(oTempTAPApprovals,'TnAStepInt',6)//Collection Sample:6
                var tempDate =new Date(oCollectionSamples[oCollectionSamples.length-1].ApprovalPlanDateInString); 
                oTAPProductions[i]  = SetOnlyApprovalPlanDate(oTAPProductions[i],tempDate);
            }
            else if(parseInt(oTAPProductions[i].TnAStepInt)>=14 && parseInt(oTAPProductions[i].TnAStepInt)<=18)//PossibleInputDate = 14,SewingPerDays = 15,FinishingClose = 16,PreFinal=17,FinalInspection = 18
            {
                
                oTAPProductions[i].SubmissionDate = new Date(-8640000000000000);oTAPProductions[i].SubmissionDateInString ="";//min date
                var tempDate =new Date(oTAPProductions[i-1].ApprovalPlanDateInString); 
                oTAPProductions[i]  = SetOnlyApprovalPlanDate(oTAPProductions[i],tempDate);
            }
        }
        RefreshTAPProductionList(oTAPProductions);
        var oDyeings = ICS_FindObjects( $('#tblTAPProduction').datagrid('getRows'),'TnAStepInt',11)//Dyeingby:11
        var oDyeingDate =new Date(oDyeings[oDyeings.length-1].ApprovalPlanDateInString); 
        var  nFabricLeadTime = Math.floor((oDyeingDate.getTime() - dPlanDate.getTime()) / nMiliseconds);
        $('#txtFabricLeadTime').val(formatPricewithoutdecimal(nFabricLeadTime,0));
        var nTotalProductionTime = 0;
        for(var i=0;i<oTAPProductions.length;i++){if(parseInt(oTAPProductions[i].TnAStepInt)>14 && parseInt(oTAPProductions[i].TnAStepInt)<=18){nTotalProductionTime +=parseInt(oTAPProductions[i].ReqSubmissionDays)}}
        $('#txtProductionTime').val(formatPricewithoutdecimal(nTotalProductionTime,0));
        $('#txtBufferingDays').val(formatPricewithoutdecimal(parseInt(icsRemoveComma($('#txtLeadTime').val(), 0))-parseInt(nTotalProductionTime+nApprovalDuration),0));
        
    }
    function CommonDateCalculation(oTAPDetail, tempDate)
    {
        
        tempDate = new Date(tempDate.setDate(tempDate.getDate()+parseInt(oTAPDetail.ReqSubmissionDays)));
        oTAPDetail.SubmissionDate = tempDate;oTAPDetail.SubmissionDateInString =icsdateformat(tempDate);
        //calculate Approve plan date
        oTAPDetail.ApprovalPlanDate = new Date(tempDate.setDate(tempDate.getDate()+parseInt(oTAPDetail.ReqBuyerApprovalDays)));
        oTAPDetail.ApprovalPlanDateInString =icsdateformat(oTAPDetail.ApprovalPlanDate);
        return oTAPDetail;
    }
    function SetOnlyApprovalPlanDate(oTAPDetail,tempDate)
    {
        //calculate Approve plan date
        oTAPDetail.ApprovalPlanDate = new Date(tempDate.setDate(tempDate.getDate()+parseInt(oTAPDetail.ReqSubmissionDays)));
        oTAPDetail.ApprovalPlanDateInString =icsdateformat(oTAPDetail.ApprovalPlanDate);
        return oTAPDetail;
    }
    var editiIndexProduction = undefined;
    function endEditingProduction(){

        if (editiIndexProduction == undefined){return true}
        if ($('#tblTAPProduction').datagrid('validateRow', editiIndexProduction))
        {
            $('#tblTAPProduction').datagrid('endEdit', editiIndexProduction);
            $('#tblTAPProduction').datagrid('selectRow',editiIndexProduction);
            var oTAPDetail=$('#tblTAPProduction').datagrid('getSelected');
            $('#tblTAPProduction').datagrid('updateRow',{index: editiIndexProduction,	row: oTAPDetail});
            DateCalCulation();
            onLoadSuccessProduction(null);
            editiIndexProduction = undefined;
            return true;
        }
        else
        {
            return false;
        }

    }
    function onClickRowProduction(index){

        if (editiIndexProduction != index){
            if (endEditingProduction())
            {
                $('#tblTAPProduction').datagrid('selectRow', index).datagrid('beginEdit', index);
                editiIndexProduction = index;
            }
            else
            {
                $('#tblTAPProduction').datagrid('selectRow', editiIndexProduction);
            }
        }
    }
    function onLoadSuccessProduction(data) {
        debugger;
        var nSpan = 0;
        var oMergeList = [];
        var oDetials = $('#tblTAPProduction').datagrid('getRows');
        var nStepID = oDetials[0].OrderStepID;
        var nTempIndex = 0;
        for(var i =0;i<oDetials.length;i++)
        {
            if(nStepID!=oDetials[i].OrderStepID)
            {
                if(nSpan>1)    
                {
                    oMergeList.push({index:nTempIndex,Span:nSpan});
                }
                nSpan = 0;//Reset
                nTempIndex = i;
            }
            nSpan++;
            nStepID=oDetials[i].OrderStepID;//set step id
        }

        for (var i = 0; i < oMergeList.length; i++) 
        {
            $('#tblTAPProduction').datagrid('mergeCells', { index:oMergeList[i].index, field: 'OrderStepName', rowspan:oMergeList[i].Span });
        }
    }


    function ValidateInput()
    {
        if(parseInt(_oTAP.TechnicalSheetID)<=0){alert("Please Pick Style");return false;}
        if($('#tblTAPApprovalProcess').datagrid('getRows').length<=0){alert("Sorry, There is no Approval Process.");return false;}
        if($('#tblTAPProduction').datagrid('getRows').length<=0){alert("Sorry, There is no Production Process.");return false;}

        return true;
    }
    function RefreshObject()
    {
        var oTAP= {
            TAPID :_oTAP.TAPID,
            TechnicalSheetID:_oTAP.TechnicalSheetID,
            OrderRecapID :_oTAP.OrderRecapID,
            PlanDate: $('#txtPlanDate').datebox('getValue'),
            PODate :  $('#txtPODate').datebox('getValue'),
            OrderQty : _oTAP.OrderQty,//txtOrderQty
            LeadTime :$("#txtLeadTime").val(),
            ApprovalDuration :icsRemoveComma($('#txtApprovalDuration').val(), 0),
            ProductionLeadTime :parseInt(icsRemoveComma($('#txtLeadTime').val(), 0))  -parseInt(icsRemoveComma($('#txtApprovalDuration').val(), 0)),
            FabricLeadTime :icsRemoveComma($('#txtFabricLeadTime').val(), 0),
            ProductionTime :icsRemoveComma($('#txtProductionTime').val(), 0),
            BufferingDays :icsRemoveComma($('#txtBufferingDays').val(), 0),
            ShipmentDate: $('#txtShipmentDate').datebox('getValue'),
            //Remarks :$("#txtRemarks").val(),
            BUID:sessionStorage.getItem('BUID'),
            TAPDetails :MakeRefreshDetails()
        };
        return oTAP;
    }
    function MakeRefreshDetails()
    {
        var oTAPDetails = [];
        var oApprovalList = $('#tblTAPApprovalProcess').datagrid('getRows');
        for(var i=0;i<oApprovalList.length;i++)
        {
            oApprovalList[i].SubmissionDate = new Date(oApprovalList[i].SubmissionDateInString);
            oApprovalList[i].ApprovalPlanDate = new Date(oApprovalList[i].ApprovalPlanDateInString);
            oTAPDetails.push(oApprovalList[i]);
        }
        var oProductionList = $('#tblTAPProduction').datagrid('getRows');
        for(var i=0;i<oProductionList.length;i++)
        {
            oProductionList[i].SubmissionDate = new Date(oProductionList[i].SubmissionDateInString);
            oProductionList[i].ApprovalPlanDate = new Date(oProductionList[i].ApprovalPlanDateInString);
            oTAPDetails.push(oProductionList[i]);
        }
        return oTAPDetails;
    }
    function Save()
    {
        debugger;
        endEditingApprovalProcess();
        endEditingProduction();
        if(!ValidateInput()) return;
        var oTAP=RefreshObject();
        $.icsProgressBar(true);// false
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/TAP/Save",
            traditional: true,
            data:  JSON.stringify(oTAP),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                $.icsProgressBar(false);// false
                var oTAP = jQuery.parseJSON(data);
                if (oTAP.TAPID>0)
                {
                    alert("Data Saved sucessfully");
                    var oTAPs = sessionStorage.getItem("TAPs");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oTAPs != null) {
                            oTAPs = jQuery.parseJSON(oTAPs);
                        }
                        else {
                            oTAPs = [];
                        }
                        if (nIndex != -1) {
                            oTAPs[nIndex] = oTAP;
                        }
                        else {
                            sessionStorage.setItem("SelectedRowIndex", oTAPs.length);
                            oTAPs.push(oTAP);
                        }
                        sessionStorage.setItem("TAPs", JSON.stringify(oTAPs));
                        window.location.href = _lBackLink;
                  
                }
                else {
                    alert(oTAP.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    function Approve()
    {
        if(_oTAP==null || _oTAP.TAPID<=0)
        {
            alert("Sorry, there is No TAP!");
            return;
        }
        if (!confirm("Confirm to Approve?")) return ;
        var oTAP = {TAPID:_oTAP.TAPID,ActionTypeExtra:"Approve"};
        $.icsProgressBar(true);// false
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/TAP/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oTAP),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                $.icsProgressBar(false);// false
                var oTAP= jQuery.parseJSON(data);
                if ((oTAP.ErrorMessage=="" || oTAP.ErrorMessage == null) && (oTAP.ApprovedBy)!=0)
                {
                    alert("Approved Successfully!!");
                    var oTAPs = sessionStorage.getItem("TAPs");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oTAPs != null) {
                        oTAPs = jQuery.parseJSON(oTAPs);
                    }
                    else {
                        oTAPs = [];
                    }
                    if (nIndex != -1) {
                        oTAPs[nIndex] = oTAP;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oTAPs.length);
                        oTAPs.push(oTAP);
                    }
                    sessionStorage.setItem("TAPs", JSON.stringify(oTAPs));
                    window.location.href = _lBackLink;
                }else
                {
                    alert(oTAP.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });

    }

        
    function StylePiker()
    {
        var oTechnicalSheet = { BUID:sessionStorage.getItem('BUID'),StyleNo:$.trim($('#txtStyleNo').val())};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oTechnicalSheet,
            ControllerName: "OrderRecap",
            ActionName: "StyleSearch",
            IsWinClose: false
        };
        $.icsProgressBar(true);// false
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                $.icsProgressBar(false);// false
                if (response.objs[0].TechnicalSheetID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "StyleNo", title: "Style No", width:200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer", width:150, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winStyle',
                        winclass: 'clsStyle',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblStyle',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Style List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            } else{
                alert("Data Not Found.");
                return;
            }
        });
    }
    $('#txtStyleNo').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if(code==13)//enter
        {
            if($.trim($('#txtStyleNo').val())==null || $.trim($('#txtStyleNo').val())=="")
            {
                alert("Type Style No.");
                return;
            }
            StylePiker();
        }else if (code == 8) //backspace=8
        {
            _oTAP.TechnicalSheetID =0;            
            _oTAP.ProductID = 0;
            $("#txtProductName").val('');
            $("#txtStyleNo,").removeClass("fontColorOfPickItem");
            $('#txtStyleNo').focus();
            RefreshStyleImage(0);
        }
    });
    function PickOrder()
    {
        if(parseInt(_oTAP.TechnicalSheetID)<=0)
        {
            alert("Please select Style");
            return;
        }
        $.icsProgressBar(true);// false
        var oTAP = { TechnicalSheetID: _oTAP.TechnicalSheetID, OrderRecapID:_oTAP.OrderRecapID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oTAP,
            ControllerName: "TAP",
            ActionName: "StyleWiseOrderRecaps",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                $.icsProgressBar(false);// false
                if (response.objs[0].OrderRecapID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "StyleNo", title: "Style No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "OrderRecapNo", title: "Order Recap", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShipmentDateInString", title: "Shipment Date", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "FactoryName", title: "Factory", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "FabricName", title: "Fabrication", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Product Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ApproveByName", title: "Approve By", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "TotalQuantity", title: "Quantity", width: 100, align: "right" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winOrderRecaps',
                        winclass: 'clsOrderRecap',
                        winwidth: 820,
                        winheight: 500,
                        tableid: 'tblOrderRecaps',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'StyleNo',
                        windowTittle: 'View Style Wise Order Recap List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else
            {
                alert("Data Not Found.");
                return;
            }
        });
      
    }

    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            PickerEvents(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                PickerEvents(oPickerobj);
            }
        });
    }
    function PickerEvents(oPickerobj) {
        var oreturnobj = null, oreturnobjs = [];
        if(oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        }else{
            oreturnobj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }

        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winStyle')
        {
            $('#txtStyleNo').val(oreturnobj.StyleNo);
            var txtStyleNo = document.getElementById("txtStyleNo");txtStyleNo.style.color = "blue";txtStyleNo.style.fontWeight = "bold";
            _oTAP.TechnicalSheetID = oreturnobj.TechnicalSheetID;
            _oTAP.BuyerID = oreturnobj.BuyerID;
            $('#txtProductName').val(oreturnobj.ProductName);
            $('#txtFabrication').val(oreturnobj.YarnCategoryName);
            $('#txtMerchandiserName').val(oreturnobj.MerchandiserName);
            $('#txtOrderQty').val(formatPricewithoutdecimal(oreturnobj.ApproxQty,0));
            _oTAP.OrderQty = oreturnobj.ApproxQty;
            $('#txtOrderNo').focus();
            LoadApprovalAndProductionProcess(oreturnobj.TechnicalSheetID,oreturnobj.TSType);
            RefreshStyleImage( _oTAP.TechnicalSheetID);
        }else  if (oPickerobj.winclass == 'clsOrderRecap')
        {
            debugger;
            if(oreturnobj.OrderRecapID>0)
            {
                $('#txtOrderNo').val(oreturnobj.OrderRecapNo);
                var txtOrderNo = document.getElementById("txtOrderNo");txtOrderNo.style.color = "blue";txtOrderNo.style.fontWeight = "bold";
                $('#txtPODate').val(oreturnobj.OrderDateInString);                
                $('#txtShipmentDate').val(oreturnobj.ShipmentDateInString);
                //set Order date
                _oTAP.OrderRecapID = oreturnobj.OrderRecapID;
                $('#txtMerchandiserName').val(oreturnobj.MerchandiserName);
                $('#txtOrderQty').val(formatPricewithoutdecimal(oreturnobj.TotalQuantity,0));
                _oTAP.OrderQty = oreturnobj.TotalQuantity;
            }
        }
    }
    function LoadApprovalAndProductionProcess(nTechnicalSheetID, nTSType)
    {
        $.icsProgressBar(true);// false
        var oTAP={TechnicalSheetID:nTechnicalSheetID, TSType:nTSType};
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/TAP/GetProcesList",
            traditional: true,
            data:  JSON.stringify(oTAP),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                $.icsProgressBar(false);// false
               var oTAP = jQuery.parseJSON(data);
               if (oTAP.ErrorMessage=="" || oTAP.ErrorMessage==null)
               {
                   var oApprovalProcesList = oTAP.TAPApprovalProcesList;
                   var oProductionProcesList = oTAP.TAPProductionProcesList;
                   RefreshTAPApprovalProcessList(oApprovalProcesList);
                   RefreshTAPProductionList(oProductionProcesList);
                   DateCalCulation();
               }
               else 
               {
                   alert(oTAP.ErrorMessage);
               }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
    function RefreshTAPApprovalProcessList(oTAPDetails)
    {
        data=oTAPDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblTAPApprovalProcess').datagrid('loadData',data);

    }
    function RefreshTAPProductionList(oTAPDetails)
    {
        data=oTAPDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblTAPProduction').datagrid('loadData',data);

    }
   

    $('#txtPlanDate,#txtShipmentDate').datebox({
        onSelect: function(date){
            debugger;
            var dPlanDate =new Date($('#txtPlanDate').datebox('getValue'));
            var dDeliveryDate =new Date($('#txtShipmentDate').datebox('getValue'));
            var millisecondsPerDay = 1000 * 60 * 60 * 24;
            var millisBetween = dDeliveryDate.getTime() - dPlanDate.getTime();
            var days = millisBetween / millisecondsPerDay;
            $('#txtLeadTime').val(Math.floor(days));
            DateCalCulation();
        }
    });

    function RefreshStyleImage(nTechnicalSheetID)
    {
        $.ajax({
            cache:true,
            type: "GET",
            url: "@(Url.Action("GetStyleImageInBase64", "TechnicalSheet"))",
            data: "id=" + nTechnicalSheetID,
            success: function (data) {
                //debugger;
                $('#imgCoverImage').attr('src', "data:image/jpg;base64," + data.base64imgage );
            }
        });
    }

    function Close()
    {
        window.location.href = _lBackLink;
    }




    function HavePermission(sOperationType, sDbObject)
    {
        var nSessionID =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.currentUserID]));
        if(nSessionID == -9) //check SuperUser
        {
            return true;
        }else
        {

            for(var i =0;i<_oAuthorizationRolesMapping.length;i++)
            {
                if(_oAuthorizationRolesMapping[i].OperationTypeInString == sOperationType && _oAuthorizationRolesMapping[i].DBObjectName == sDbObject)
                    return  true;
            }
            return false;
        }
    }

</script>
