@{
   ViewBag.Title = "Budget list";
}
@model IEnumerable<ESimSol.BusinessObjects.CostSheet>
    <div id="winApprovalRequest" class="easyui-window" title="Request For Approval" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <fieldset style="margin-top:3px">
                <table border="0" style="font-size:12px">
                    <tr>
                        <td style="width:150px; text-align:right">Request To:</td>
                        <td style="width:250px; text-align:left"><select id="cboApprovalRequestTo" style="width:225px;font-size:12px;" /></td>
                    </tr>
                    <tr>
                        <td style="width:150px; text-align:right">Note :</td>
                        <td style="width:250px; text-align:left">
                            <input type="text" id="txtApprovalRequestNote" style="width:220px" />
                        </td>
                    </tr>
                </table>
            </fieldset>

            <fieldset style="margin-bottom:3px">
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; width:400px">
                    <tr>
                        <td style="width:300px; text-align:right"></td>
                        <td style="width:50px">
                            <a id="btnApprovalRequestConfirm" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Confirm</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnApprovalRequestClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
    
    <div class="menuMainCollectionTable" id="divCostSheets">
        <table id="tblBudget" title="Budget Issue" class="easyui-datagrid" fit="true" fitcolumns="false" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbar">
            <thead data-options="frozen:true">
                <tr>
                    <th field="FileNo" width="11%">File No</th>
                    <th field="StyleNo" width="10%">Style No</th>
                    <th field="CostSheetStatusInString" width="10%">Status</th>
                    <th field="BuyerName" width="10%">Buyer</th>
                    <th field="MerchandiserName" width="11%">Merchandiser</th>
                </tr>
            </thead>
            <thead>
                <tr>
                    <th field="BrandName" width="5%">Brand</th>
                    <th field="CostingDateInString" width="8%">Issue Date</th>
                    <th field="FabricCostPerDozenInString" align="right" width="10%">Fabric Cost/Dzn</th>
                    <th field="AccessoriesCostPerDozenInString" width="10%">Accessories Cost/Dsn</th>
                    <th field="PrintPricePerPcs" width="10%" formattter="formatPrice">Print/Pcs</th>
                    <th field="EmbrodaryPricePerPcs" width="10%" formattter="formatPrice">Embrodary/Pcs</th>
                    <th field="TestPricePerPcs" width="10%" formattter="formatPrice">Test/Pcs</th>
                    <th field="FOBPricePerPcsInString" width="10%">FOB/Pcs</th>
                </tr>
            </thead>
        </table>
        <div id="toolbar">
            <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" onclick="Add()" plain="true">Add</a>
            <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" onclick="Edit()" plain="true">Edit</a>
            <a id="btnDetails" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" onclick="View()" plain="true">View</a>
            <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" onclick="Delete()" plain="true">Delete</a>
            <a id="btnCopy" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-copy" onclick="Copy()" plain="true">Copy</a>
            <a id="btnRequestforApproval" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-request" onclick="RequestforApproval()" plain="true">Request for Approval</a>
            <a id="btnUndoRequest" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" onclick="UndoRequest()" plain="true">Undo Request</a>
            <a id="btnWaitforApproval" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" onclick="WaitForApproval()" plain="true">Wait for Approval</a>
            <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" onclick="BudgetApprove()" plain="true">Approve</a>
            <a id="btnUndoApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" onclick="UndoApprove()" plain="true">Undo Approved</a>
            <a id="btnRFRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-request" onclick="RequestForRevise()" plain="true"> Req For Revise</a>
            <a id="btnAcceptRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" onclick="AcceptRevise()" plain="true"> Accept Revise</a>
            <a id="btnHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" onclick="History()" plain="true"> History</a>
            <a id="btnRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" onclick="ReviseHistory()" plain="true"> Amendment History</a>
            <a id="btnPreView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" onclick="PrintPreview()" plain="true">Preview</a>
            <a id="btnPrintList" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" onclick="PrintList()" plain="true">Print List</a>
        </div>
    </div>


    <script type="text/javascript">
        //debugger;
        var  _sBaseAddress= null;
        $(document).ready(function () {
            var oTempCostSheets =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
            _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
            var oCostSheet = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CostSheet));
            var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
           var oCostSheets =sessionStorage.getItem("Budgets");
            if(oCostSheets!=null)
            {
                oCostSheets  = jQuery.parseJSON(oCostSheets);
            }
            else
            {
                oCostSheets = oTempCostSheets ;
            }
            $('#divCostSheets').data('CostSheet',oCostSheet);
            RefreshCostSheetList(oCostSheets);
            RefreshControlLayout(oAuthorizationRolesMapping);
           
        });
        function  RefreshCostSheetList(oCostSheets)
        {
            //debugger;
            data=oCostSheets;
            data={"total":""+data.length+"","rows":data};
            $('#tblBudget').datagrid('loadData',data);
            var nID =parseInt(sessionStorage.getItem("SelectedRowIndex"));
            if(nID!=-1)
            {
                $('#tblBudget').datagrid('selectRow', nID);
            }
        }

        function Add ()
        {
            //debugger;
            var oList = $('#tblBudget').datagrid('getRows');
            sessionStorage.setItem("Budgets", JSON.stringify(oList));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("CostSheetHeader", "Add Budget");
            sessionStorage.setItem("CostSheetType", $('#divCostSheets').data('CostSheet').CostSheetTypeInInt);
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheetWoven?id="+$('#divCostSheets').data('CostSheet').CostSheetID+"&OperationType=2";
            
        }
        function Edit ()
        {
            debugger;
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            if(parseInt(oCostSheet.CostSheetStatus)!=1 )
            {
                alert("Without Initialized Item can't Update!");
                return;
            }
            var oList = $('#tblBudget').datagrid('getRows');
            sessionStorage.setItem("Budgets", JSON.stringify(oList));
            var SelectedRowIndex=$('#tblBudget').datagrid('getRowIndex',oCostSheet);
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("CostSheetHeader", "Edit Budget");
            sessionStorage.setItem("CostSheetType", oCostSheet.CostSheetTypeInInt);
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheetWoven?id="+oCostSheet.CostSheetID+"&OperationType=2";
      
        }
        function Copy ()
        {
            debugger;
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            var oList = $('#tblBudget').datagrid('getRows');
            sessionStorage.setItem("Budgets", JSON.stringify(oList));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("CostSheetHeader", "Copy Budget");
            sessionStorage.setItem("CostSheetType", oCostSheet.CostSheetTypeInInt);
            sessionStorage.setItem("BackLink", window.location.href);
            
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheetWoven?id="+oCostSheet.CostSheetID+"&OperationType=2";
        
        }
        function View ()
        {
            //debugger;
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            var oList = $('#tblBudget').datagrid('getRows');
            sessionStorage.setItem("Budgets", JSON.stringify(oList));
            var SelectedRowIndex=$('#tblBudget').datagrid('getRowIndex',oCostSheet);
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("CostSheetHeader", "View Budget");
            sessionStorage.setItem("CostSheetType", oCostSheet.CostSheetTypeInInt);
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheetWoven?id="+oCostSheet.CostSheetID+"&OperationType=2";
       
        }
        function Delete ()
        {
            debugger;
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            if(parseInt(oCostSheet.CostSheetStatus)!=1)
            {
                alert("Please select Only Initialized Item from List!");
                return;
            }
            if (!confirm("Confirm to Delete?")) return ;
            var SelectedRowIndex=$('#tblBudget').datagrid('getRowIndex',oCostSheet);
            $.ajax({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress")+ "/CostSheet/Delete",
                traditional: true,
                data:  JSON.stringify(oCostSheet),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Delete sucessfully");
                        $('#tblBudget').datagrid('deleteRow',SelectedRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        }
     
        function WaitForApproval()
        {
            var oCostSheet = {BUID:sessionStorage.getItem('BUID'),OperationType:2};

            $.ajax({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress")+ "/CostSheet/WaitingSearch",
                traditional: true,
                data:  JSON.stringify(oCostSheet),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    oCostSheets = jQuery.parseJSON(data);
                    if (oCostSheets.length>0)
                    {
                        DynamicRefreshList(oCostSheets,'tblBudget');
                    }
                    else
                    {
                        alert("Please Select Item From List");
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }

        function RequestforApproval ()
        {
            debugger;
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Select an item from list");
                return false;
            }

            if  (oCostSheet.CostSheetStatus!=1)
            {
                alert("Please select only Initialized item from list");
                return;
            }

            var SelectedRowIndex=$('#tblBudget').datagrid('getRowIndex', oCostSheet);
            var oEmployee = { DesignationName : '2,23' };//Management, Merchandiser
            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+"/User/GetsRequestedUsers",
                traditional: true,
                data:  JSON.stringify(oEmployee),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oUsers = jQuery.parseJSON(data);
                    if(oUsers===null){ oUsers=[]; }
                    $("#cboApprovalRequestTo").icsLoadCombo({ List: oUsers, OptionValue: "UserID", DisplayText: "UserName" });
                    $("#winApprovalRequest").icsWindow('open', "Approval Request");
                    $("#winApprovalRequest input").not("input[type='button']").val("");
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });




        }

        $('#btnApprovalRequestClose').click(function(e){
            $("#winApprovalRequest").icsWindow('close');
        });

        $('#btnApprovalRequestConfirm').click(function(e){
            var oCostSheet = $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(parseInt($('#cboApprovalRequestTo').val())==0)
            {
                alert('Please Select Approval User');
                $('#cboApprovalRequestTo').focus();
                return false;
            }
            var oApprovalRequest= {
                ApprovalRequestID :0,
                OperationObjectID : parseInt(oCostSheet.CostSheetID),
                RequestTo : parseInt($('#cboApprovalRequestTo').val()),
                Note :$.trim($("#txtApprovalRequestNote").val())

            };

            var oTempCostSheet = {
                CostSheetID : parseInt(oCostSheet.CostSheetID),
                ActionTypeExtra : "RequestForApproved",
                StatusInInt:0,
                ApprovalRequest : oApprovalRequest
            }
            var SelectedRowIndex=$('#tblBudget').datagrid('getRowIndex', oCostSheet);
            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+"/CostSheet/ChangeStatus",
                traditional: true,
                data:  JSON.stringify(oTempCostSheet),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oCostSheet = jQuery.parseJSON(data);
                    if(oCostSheet!=null)
                    {
                        if(oCostSheet.ErrorMessage=="" || oCostSheet.ErrorMessage == null)
                        {
                            alert("Cost Sheet Approval Request  Successfully.");
                            $('#tblBudget').datagrid('updateRow',{index: SelectedRowIndex,	row: oCostSheet});
                            $("#winApprovalRequest").icsWindow('close');
                        }
                        else
                        {
                            alert(oCostSheet.ErrorMessage);
                        }
                    }
                    else
                    {
                        alert("Invalid Operation!");
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        });

        function UndoRequest()
        {
            //debugger;
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Select an item from list");
                return false;
            }
            if(oCostSheet.CostSheetStatus!=2)
            {
                alert("Please select only Requested  item from list");
                return;
            }
            if (!confirm("Confirm to Undo Request?")) return ;
            oCostSheet.ActionTypeExtra="UndoRequest";
            StatusChange(oCostSheet,"Undo Request");
        }
        function BudgetApprove ()
        {
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oCostSheet.CostSheetStatus!=2)
            {
                alert("Please select only Requested  item from list");
                return;
            }

            var oList = $('#tblBudget').datagrid('getRows');
            sessionStorage.setItem("Budgets", JSON.stringify(oList));
            var SelectedRowIndex=$('#tblBudget').datagrid('getRowIndex',oCostSheet);
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("CostSheetHeader", "Approve Budget");
            sessionStorage.setItem("CostSheetType", oCostSheet.CostSheetTypeInInt);
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheetWoven?id="+oCostSheet.CostSheetID+"&OperationType=2";
          
        }
        function UndoApprove ()
        {
            //debugger;
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || oCostSheet.CostSheetID<=0)
            {
                alert("Please select a item from list!");
                return;
            }else if(oCostSheet.CostSheetStatus!=3)
            {
                alert("Please select only Approved item from list");
                return;
            }
            if (!confirm("Confirm to Undo Approve?")) return ;
            oCostSheet.ActionTypeExtra="UndoApprove";
            StatusChange(oCostSheet,"Undo Approve");
        };
        function SendToBuyer()
        {
            //debugger;
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || oCostSheet.CostSheetID<=0)
            {
                alert("Please select a item from list!");
                return;
            }else if(oCostSheet.CostSheetStatus!=3)
            {
                alert("Please select only Approved item from list");
                return;
            }
            if (!confirm("Confirm to Send To Buyer?")) return ;
            oCostSheet.ActionTypeExtra="PI_In_Buyer_Hand";
            StatusChange(oCostSheet,"Sent to Buyer");
        };
        function Cancel()
        {
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || oCostSheet.CostSheetID<=0)
            {
                alert("Please select a item from list!");
                return;
            }else if(oCostSheet.CostSheetStatus<2 || oCostSheet.CostSheetStatus>0)
            {
                alert("In this stage you can't Cancel the Item");
                return;
            }
            if (!confirm("Confirm to Cancel?")) return ;
            oCostSheet.ActionTypeExtra="Cancel";
            StatusChange(oCostSheet,"Cancel");
        };
        function RequestForRevise ()
        {
            //debugger;
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please select a item from list!");
                return;
            }else if(oCostSheet.CostSheetStatus!=3)
            {
                alert(oCostSheet.CostSheetStatusInString+" Item Can't Request for Ammendment");
                return;
            }
            if (!confirm("Confirm to Request for Revise?")) return ;
            oCostSheet.ActionTypeExtra="RequestForRevise";
            StatusChange(oCostSheet,"RequestForRevise");
        };
        function AcceptRevise ()
        {
            //debugger;
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            if(oCostSheet.CostSheetStatus!=4 )
            {
                alert("Without Request for Revise Item can't Accept!");
                return;
            }
            var oList = $('#tblBudget').datagrid('getRows');
            sessionStorage.setItem("Budgets", JSON.stringify(oList));
            var SelectedRowIndex=$('#tblBudget').datagrid('getRowIndex',oCostSheet);
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("CostSheetHeader", "Cost Sheet Revise");
            sessionStorage.setItem("CostSheetType", oCostSheet.CostSheetTypeInInt);
            sessionStorage.setItem("BackLink", window.location.href);
            if(oCostSheet.CostSheetTypeInInt==0)
            {
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheet?id="+oCostSheet.CostSheetID+"&OperationType="+oCostSheet.OperationType;
            }else{
                window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheetWoven?id="+oCostSheet.CostSheetID+"&OperationType="+oCostSheet.OperationType;
            }
            //window.location.href =sessionStorage.getItem('BaseAddress')+"/CostSheet/ViewCostSheetRevise?id="+oCostSheet.CostSheetID+"&OperationType="+oCostSheet.OperationType;

        }
        function ReviseHistory ()
        {
            //debugger;
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || parseInt(oCostSheet.CostSheetID)<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(parseInt(oCostSheet.CostSheetStatus)<3 )
            {
                alert("In this moment can't see Revise History!");
                return;
            }
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oCostSheet,
                ControllerName: "CostSheet",
                ActionName: "GetCostSheetReviseHistory",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].CostSheetID > 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: "FileNo", title: "File No", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "StyleNo", title: "Style No", width: 120, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "CostSheetStatusInString", title: "Status", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "BuyerName", title: "Buyer Name", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "CostingDateInString", title: "Costing Date", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: 'MerchandiserName', title: 'Merchandser', width: 90, align: "left"};tblColums.push(oColumn);
                        oColumn = { field: 'FabricCostPerDozen', title: 'Fabric Cost/Dzn', width: 90, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: 'AccessoriesCostPerDozen', title: 'Accessories Cost /Dzn', width: 100, align: "left"};tblColums.push(oColumn);
                        oColumn = { field: 'ProductionCostPerDozen', title: 'CM/Dzn', width: 80, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: 'FOBPricePerPcs', title: 'FOB/Pcs', width: 60, align: "left"};tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winCostSheets',
                            winclass: 'clsCostSheet',
                            winwidth: 950,
                            winheight: 460,
                            tableid: 'tblBudgets',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            btnOkText : "Print",
                            searchingbyfieldName: 'FileNo',
                            windowTittle: 'CostSheet List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Found.");
                }
            });

        }


        function SetCostSheetStatusExtra (oCostSheet)
        {

            switch (oCostSheet.CostSheetStatus)
            {
                case 1 : {
                    oCostSheet.StatusInInt =1;
                    break;
                }
                case 2 :{
                    oCostSheet.StatusInInt =2;
                    break;
                }
                case 3 :{
                    oCostSheet.StatusInInt =3;
                    break;
                }
                case 4 :{
                    oCostSheet.StatusInInt =4;
                    break;
                }
                case 5 :{
                    oCostSheet.StatusInInt =5;
                    break;
                }

            }

            return oCostSheet;
        }
        function StatusChange (oCostSheet,sParamIdentifier)
        {
            debugger;
            var oCostSheet = SetCostSheetStatusExtra(oCostSheet);
            var SelectedRowIndex=$('#tblBudget').datagrid('getRowIndex',oCostSheet);
            $.ajax({
                type: "POST",
                dataType: "json",
                url:_sBaseAddress+ "/CostSheet/ChangeStatus",
                traditional: true,
                data:  JSON.stringify(oCostSheet),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oCostSheet= jQuery.parseJSON(data);
                    if (oCostSheet.ErrorMessage=="" || oCostSheet.ErrorMessage == null)
                    {
                        if(sParamIdentifier=="Undo Request")
                        {
                            alert("Successfully Undo the Request !");
                        }
                        else if(sParamIdentifier=="RequestForRevise")
                        {
                            alert("Successfully Request for Revise!");
                        }else   if(sParamIdentifier=="Approve")
                        {
                            alert("Approved Successfully!!");

                        }else  if(sParamIdentifier=="Undo Approve")
                        {
                            alert("Successfully Undo Approve !");

                        }
                        else  if(sParamIdentifier=="Accept Revise")
                        {
                            alert("Successfully Accept Revise!");

                        }
                        else if(sParamIdentifier=="Cancel")
                        {
                            alert("Successfully Cancel Selected Item!");
                        }
                        $('#tblBudget').datagrid('updateRow',{index: SelectedRowIndex,row: oCostSheet});
                    }else
                    {
                        alert(oCostSheet.ErrorMessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
        function PrintPreview ()
        {
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || oCostSheet.CostSheetID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
           window.open(sessionStorage.getItem('BaseAddress') + '/CostSheet/BudgetPrint?id='+oCostSheet.CostSheetID);
        }
    
        function PrintList()
        {
            var oCostSheets=  $('#tblBudget').datagrid('getRows');;//$('#tblBudget').datagrid('getRows');
            var ids ="";
            if(oCostSheets.length >0)
            {

                for(var i =0;i<oCostSheets.length;i++)
                {
                    ids =ids+oCostSheets[i].CostSheetID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else
            {
                alert("Data not found ");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/CostSheet/PrintCostSheetList?sIDs='+ids);
        }
       
        function History ()
        {
            debugger;
            var oCostSheet= $('#tblBudget').datagrid('getSelected');
            if(oCostSheet==null || oCostSheet.CostSheetID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oCostSheet,
                ControllerName: "CostSheet",
                ActionName: "GetCostSheetHistory",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].CostSheetID > 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: 'PreviousStatusInString', title: 'Previous State', width: 200, align: "left" };
                        oColumn = { field: 'CurrentStatusInString', title: 'Current State',  width:100, align: "left"};tblColums.push(oColumn);
                        oColumn = { field: 'Note', title: 'Note',  width: 100, align: "left"};tblColums.push(oColumn);
                        oColumn = { field: 'OperateByName', title: 'Operation By',  width: 100, align: "left"};tblColums.push(oColumn);
                        oColumn = { field: 'OperationDateTimeInString', title: 'Operation Date',  width: 120, align: "left"};tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winCostSheetHistorys',
                            winclass: 'clsCostSheetHistory',
                            winwidth: 660,
                            winheight: 460,
                            tableid: 'tblBudgetHistorys',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'PreviousStatusInString',
                            windowTittle: 'Cost Sheet History List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Found.");
                }
            });

        }

        //button hide
        function RefreshControlLayout(oAuthorizationRolesMapping)
        {

            $('#btnAdd,#btnEdit,#btnDetails,#btnDelete,#btnReqForApprove,#btnUndoRequest,#btnWaitforApproval,#btnWaitforRevise,#btnApprove,#btnUndoApproved,#btnRFRevise,#btnAcceptRevise,#btnRevise,#btnHistory,#btnPreView,#btnPrintList').hide();
            if(PermissionChecker('AdvSearch','CostSheet',oAuthorizationRolesMapping)){$("#btnAdvanceSearch").show();}
            if(PermissionChecker('Add','CostSheet',oAuthorizationRolesMapping)){$("#btnAdd,#btnRequestforApproval,#btnWaitforRevise,#btnCopy,#btnRFRevise").show();}
            if(PermissionChecker('Edit','CostSheet',oAuthorizationRolesMapping)){$("#btnEdit").show();}
            if(PermissionChecker('View','CostSheet',oAuthorizationRolesMapping)){$("#btnDetails,#btnRevise,#btnHistory").show();}
            if(PermissionChecker('Delete','CostSheet',oAuthorizationRolesMapping)){$("#btnDelete").show();}
            if(PermissionChecker('UndoRequest','CostSheet',oAuthorizationRolesMapping)){$("#btnUndoRequest").show();}
            if(PermissionChecker('WaitforApproval','CostSheet',oAuthorizationRolesMapping)){$("#btnWaitforApproval").show();}
            if(PermissionChecker('Approved','CostSheet',oAuthorizationRolesMapping)){$("#btnApprove,#btnUndoApproved").show();}
            if(PermissionChecker('Amendment','CostSheet',oAuthorizationRolesMapping)){$("#btnAcceptRevise").show();}
            if(PermissionChecker('Preview','CostSheet',oAuthorizationRolesMapping)){$("#btnPreView").show();}
            if(PermissionChecker('PrintList','CostSheet',oAuthorizationRolesMapping)){$("#btnPrintList").show(); }

        }
    </script>
