<html>
<head>
    @{
        ViewBag.Title = "Payment";
    } 
</head>
<body>
    @model ESimSol.BusinessObjects.Payment
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable easyui-panel" title="Payment" style="font-family:Tahoma; text-align:center; width:100%; height:88%;">
        <div style="margin-left:0px; margin-top:0px" id="divPament">
            <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size: 12px">
                <tr>
                    <td style="width:26%"><select id="cboBUType" style=" width:100%;" onchange="ChangeBUOrInvioceType()"></select></td>
                    <td style="width:26%"><select id="cboInvoiceType" style=" width:100%;" onchange="ChangeBUOrInvioceType()"></select></td>
                    <td style="width:8%; text-align: right; font-weight: normal">Party Name:</td>
                    <td style="width:40%;text-align:left" colspan="3">
                        <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                            <tr>
                                <td style="width:82%;font-size:12px;font-weight:bold"><input id="txtContractorName" class="reset-text" style="width:100%" placeholder="Type & Press Enter" /></td>
                                <td style="width:8%;text-align:right;"><input type="button" style="width:100%" id="btnPickContractor" value="Pick"></td>
                                <td style="width:8%;text-align:right;"><input type="button" style="width:100%" id="btnClrContractor" value="Clear"></td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
            <table id="tblPaymentDetails" class="easyui-datagrid" style="width:100%;height:220px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" showfooter="true" toolbar="#toolbarOne" data-options="onClickRow:onClickRow">
                <thead>
                    <tr>
                        <th field="InvoiceTypeSt" width="8%" align="left">Invoice Type</th>
                        <th field="SampleInvoiceNo" width="10%" align="left">Invoice No</th>
                        <th field="AmountInCurrency" width="8%" align="right" formatter="formatPrice">Amount(<label id="lblCurrency"></label>)</th>
                        <th field="CRateInString" width="8%" align="right">CRate(<label id="lblExCRate"></label>)</th>
                        <th field="AmountWithExchangeRate" width="8%" formatter="formatPrice" align="right">Amount(<label id="lblExCurrency"></label>)</th>
                        <th field="AlreadyPaid" width="9%" align="right" formatter="formatPrice">Already Paid </th>
                        <th field="AlreadyDiscount" width="9%" align="right" formatter="formatPrice">Already Discount </th>
                        <th field="AlreadyAdditionalAmount" width="9%" align="right" formatter="formatPrice">Already Addition </th>
                        <th data-options="field:'DisCount',align:'right',editor:{type:'numberbox',options:{precision:2}}" width="6%">DisCount</th>
                        <th data-options="field:'AdditionalAmount',align:'right',editor:{type:'numberbox',options:{precision:2}}" width="6%">Addition</th>
                        <th field="YetToPayment" width="10%" align="right" formatter="formatPrice">Yet To Payment</th>
                        <th data-options="field:'PaymentAmount',align:'right',editor:{type:'numberbox',options:{precision:2}}" formatter="formatPrice" width="10%">Payment Amount</th>
                        <th field="SampleInvoiceDateInString" width="10%" align="left">Invoice Date</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarOne">
                <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size: 12px">
                    <tr>
                        <td style="width: 15%; text-align: right; font-weight: normal">
                            Add Invoice/Debit Note:
                        </td>
                        <td style="width:40%;text-align:left">
                            <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                <tr>
                                    <td style="width:80%"><input id="txtSampleInvoiceNo" class="reset-text" style="width:100%" placeholder="Type & Press Enter" /></td>
                                    <td style="width:8%;text-align:right;"><a id="btnSampleInvoice" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a></td>
                                    <td style="width:8%;text-align:right;"><a id="btnClrSampleInvoice" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a></td>
                                </tr>
                            </table>
                                       
                        </td>
                        <td style="width:45%; text-align: left; font-weight: normal">
                            <a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                            <a id="btnRemoveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>     
                        </td>
                    </tr>
                </table>      
            </div>
            <fieldset>
                <legend>Payment info</legend>
                <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size: 12px">
                    <tr>
                        <td style="width:10%; text-align: right; font-weight: normal">
                            Payment Type
                        </td>
                        <td style="width:25%; font-size:12px; text-align:left">
                            <select id="cboPaymentType" style="width:100%" onchange="ChangePaymentType()"></select>
                        </td>
                        <td style="width:10%; font-size:12px; text-align:right">
                            MR Date
                        </td>
                        <td style="width:25%; font-size:12px; text-align:left">
                            <input id="txtMRDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100%" />
                        </td>
                        <td style="width:10%; font-size:12px; text-align:right">
                            MR No
                        </td>
                        <td style="width:20%; font-size:12px; text-align:right">
                            <input type="text" id="txtMRNo" style="width:100%; text-align:left" disabled ="disabled"/>
                        </td>
                    </tr>

                    <tr>
                        <td style="width:10%; font-size:12px; text-align:right">
                            Currency
                        </td>
                        <td style="width:25%; font-size:12px; text-align:left">
                            <select style="width:100%" id="cboCurrency" onchange="ChangeCurrency(true);"> </select>
                        </td>
                        <td style="width:10%; font-size:12px; text-align:right">
                            C Rate
                        </td>
                        <td style="width:25%; font-size:12px; text-align:left">
                            <input id="txtCRate" type="text" style="width:100%;" />
                        </td>

                        <td style="width:10%; font-size:12px; text-align:right">
                            Amount
                            <span class="lblCurrency"></span>
                        </td>
                        <td style="width:20%; font-size:12px; text-align:left" >
                            <input type="text" id="txtAmount" style="width:100%; text-align:right" disabled="disabled" />
                        </td>
                    </tr>
                    <tr id="rtDocument">
                        <td style="width:10%; text-align: right; font-weight: normal">
                            Payment Mode
                        </td>
                        <td style="width:25%; font-size:12px; text-align:left">
                            <select id="cboPaymentMode" style="width:100%" onchange="ChangePaymentMode()"></select>
                        </td>
                        <td style="width:10%; font-size:12px; text-align:right">
                           <label id="lblDocNo">No</label>
                        </td>
                        <td style="width:25%; font-size:12px; text-align:left">
                            <input id="txtDocNo" type="text" style="width:100%;" />
                        </td>
                        <td style="width:10%; font-size:12px; text-align:right">
                            Date
                        </td>
                        <td style="width:20%; font-size:12px; text-align:left">
                            <input id="txtDocDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100%;" />
                        </td>
                    </tr>
                    <tr id="rtDocBank">
                        <td style="width:10%; font-size:12px; text-align:right">
                            Bank
                        </td>
                        <td style="width:55%; font-size:12px; text-align:left" colspan="3">
                            <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                <tr>
                                    <td style="width:88%"><input id="txtBank_Issue" class="reset-text" style="width:100%" type="text" placeholder="Type & Press Enter" /></td>
                                    <td style="width:6%"><input type="button" style="width:100%" id="btnPickBank_Issue" value="P"></td>
                                    <td style="width:6%"><input type="button" style="width:100%" id="btnClrBank_Issue" value="C"></td>
                                </tr>
                            </table>
                        </td>
                        <td style="width:10%; font-size:12px; text-align:right">
                            Deposite A/C:
                        </td>
                        <td style="width:20%; font-size:12px; text-align:left">
                            <select id="cboDepositAccount" style="width:100%"></select>
                        </td>
                    </tr>
                  
                    <tr>
                        <td style="width: 10%; text-align: right; font-weight: normal">
                            In Word
                        </td>
                        <td colspan="5" style="width:90%;" font-size:12px; text-align:left">
                            <input id="txtAmountInWord" type="text" style="width:100%;" disabled="disabled" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 10%; text-align: right; font-weight: normal">
                            Note
                        </td>
                        <td colspan="5" style="width:90%; font-size:12px; text-align:left">
                            <input id="txtNote" type="text" style="width:100%;" />
                        </td>
                    </tr>

                    <tr id="rtDocBankTemp">
                        <td style="width: 10%; text-align: right; font-weight: normal">
                            Receive By
                        </td>
                        <td colspan="5" style="width:90%; font-size:12px; text-align:left">
                            <input id="txtPrepareByName" type="text" style="width:100%;" disabled="disabled" />
                        </td>
                    </tr>

                </table>
            </fieldset>
        </div>         
    </div>
    <fieldset>
        <legend style="font-weight: bold">Action : </legend>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
            <tr>
                <td style="width:15%; text-align:left">
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" id="btnPrint">MoneyReceipt</a>
                </td>
                <td style="width:65%; text-align:right"></td>

                <td style="width: 20%; text-align:right">
                    <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true">Approved</a>
                    <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                </td>
            </tr>
        </table>
    </fieldset>                
</body>
</html>
<script type="text/javascript">
    $(document).ready(function () {
        var oPayment =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oPaymentModes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PaymentModes));
        var oPaymentTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PaymentTypes));
        var oBusinessUnits= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oBankAccounts = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BankAccounts));
        var sPrepareByName = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.currentUserName]));
        var oCompany = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));
        
        $('#divPament').data('Company',oCompany);
        $('#divPament').data('Payment',oPayment);
        $('#divPament').data('Currencys',oCurrencys);
        $('#divPament').data('PaymentModes',oPaymentModes);
        $('#divPament').data('PaymentTypes',oPaymentTypes);
        $('#divPament').data('BankAccounts',oBankAccounts);
        $('#divPament').data('BusinessUnits',oBusinessUnits);
        $('#divPament').data('PrepareByName',sPrepareByName);
        Initialization(oPayment);
        $("#progressbar").progressbar({value: 0 });
        $("#progressbarParent").hide();
        Control_disabled();
    });

    function ChangeBUOrInvioceType()
    {
        var nInvoiceType = parseInt($('#cboInvoiceType').val());
        var oPayment = {PaymentID : 0,
            ContractorID: 0,
            ContactPersonnelID : 0,
            MRNo :'',
            ContractorName:'',
            PaymentModeInt : 0,
            PaymentTypeInInt :0,
            Amount : 0.00,
            PaymentDocID : 0,
            CurrencyID: 0,
            CRate: 0,
            Note : '',
            DocNo :'',
            BankID : 0,
            BankAccountID_Deposit: 0,
            DocDateSt: icsdateformat(new Date()),
            PaymentDocID:0,
            PrepareByName:$('#divPament').data('PrepareByName'),
            MRDateSt : icsdateformat(new Date()),
            BUID:parseInt($('#cboBUType').val()),
            PaymentDetails:[]
        };
       Initialization(oPayment);
       $('#cboInvoiceType').val(nInvoiceType);
    }

    var editIndex = undefined;
    function endEditing() {
        debugger;
        if (editIndex == undefined) { return true }
        if ($('#tblPaymentDetails').datagrid('validateRow', editIndex)) {
            $('#tblPaymentDetails').datagrid('endEdit', editIndex);
            $('#tblPaymentDetails').datagrid('selectRow', editIndex);
            var oDetail = $('#tblPaymentDetails').datagrid('getSelected');
            oDetail.YetToPayment = parseFloat( parseFloat(parseFloat(oDetail.AmountWithExchangeRate).toFixed(2))+parseFloat(parseFloat(oDetail.AlreadyAdditionalAmount).toFixed(2))+parseFloat(parseFloat(oDetail.AdditionalAmount).toFixed(2)))-  (parseFloat(parseFloat(oDetail.AlreadyDiscount).toFixed(2)) + parseFloat(parseFloat(oDetail.DisCount).toFixed(2)) + parseFloat(parseFloat(oDetail.AlreadyPaid).toFixed(2)));
            if( parseFloat(parseFloat(oDetail.PaymentAmount).toFixed(2))>parseFloat(parseFloat(oDetail.YetToPayment).toFixed(2)))
            {
                alert("Payment Amount Should be Less then or equal Yet To Payment.");
                $('#tblPaymentDetails').datagrid('selectRow', editIndex).datagrid('beginEdit', editIndex);
                editIndex = undefined;
                return true;
            }
            
            $('#tblPaymentDetails').datagrid('updateRow', { index: editIndex, row: oDetail });
            RefreshTotalSummery();
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }
    function onClickRow(index) {

        if (editIndex != index) {
            if (endEditing()) {
                $('#tblPaymentDetails').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oDetail= $('#tblPaymentDetails').datagrid('getSelected');
                editIndex = index;
            }
            else {
                $('#tblPaymentDetails').datagrid('selectRow', editIndex);
            }
        }
    }
    function Control_disabled()
    {
        $('#txtPrepareByName,#txtMRNo').prop("disabled", true);
        $('#txtAmountInWord,#txtAmount').prop("disabled", true);

    }
    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }
    function ChangePaymentType()
    {
        var nPaymentType = parseInt($('#cboPaymentType').val());
        $('#rtDocBank').hide();
        $('#rtDocument').hide()
        if(nPaymentType==1 )
        {
            $('#rtDocBank').hide();
            $('#rtDocument').hide();
            $('#rtDocBankTemp').show();

        }
        else if(nPaymentType==2)
        {
            $('#rtDocBank').show();
            $('#rtDocument').show();
            $('#rtDocBankTemp').hide();
        }
    }
    function ChangePaymentMode()
    {
        var sPaymentMode = $('#cboPaymentMode option:selected').text();
        $('#lblDocNo').html(sPaymentMode+" No");
    }
    function ChangeCurrency(bIsComboChange)
    {
        var nCurrencyID_Compare = 0;
        nCurrencyID_Compare= parseInt($('#divPament').data('Company').BaseCurrencyID);
        var nCurrencyID = parseInt($('#cboCurrency').val());
        if(nCurrencyID==nCurrencyID_Compare)
        {            
            $('#txtCRate').val(parseFloat(1).toFixed(2));
            $('#txtCRate').prop("disabled", true);
        }
        else
        {
            $('#txtCRate').val(parseFloat($('#divPament').data('Payment').CRate).toFixed(4));
            $("#txtCRate").prop("disabled", false);
        }

        if(bIsComboChange===true)
        {
            var oPaymentDetails = $('#tblPaymentDetails').datagrid('getRows');
            for(var i= 0; i<oPaymentDetails.length; i++)
            {
                if(parseInt(nCurrencyID)!= parseInt(oPaymentDetails[i].CurrencyID))
                {                    
                    oPaymentDetails[i].DisCount = 0;
                    oPaymentDetails[i].AdditionalAmount = 0;
                    oPaymentDetails[i].YetToPayment = (parseFloat(oPaymentDetails[i].AmountWithExchangeRate) + parseFloat(oPaymentDetails[i].AlreadyAdditionalAmount)) - (parseFloat(oPaymentDetails[i].AlreadyDiscount) + parseFloat(oPaymentDetails[i].AlreadyPaid));
                    oPaymentDetails[i].PaymentAmount = parseFloat(oPaymentDetails[i].YetToPayment);
                }
                else
                {
                    oPaymentDetails[i].DisCount = 0;
                    oPaymentDetails[i].AdditionalAmount = 0;
                    oPaymentDetails[i].YetToPayment = (parseFloat(oPaymentDetails[i].AmountInCurrency) + parseFloat(oPaymentDetails[i].AlreadyAdditionalAmount)) - (parseFloat(oPaymentDetails[i].AlreadyDiscount) + parseFloat(oPaymentDetails[i].AlreadyPaid));
                    oPaymentDetails[i].PaymentAmount = parseFloat(oPaymentDetails[i].YetToPayment);
                }
            }
            DynamicRefreshList(oPaymentDetails, "tblPaymentDetails");
            RefreshTotalSummery();
        }
    }
       
    $("#txtAmount").keypress(function (e) {
        if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {

            return false;
        }
    });
    $("#txtCRate").keypress(function (e) {
        if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
            return false;
        }
    });

    function GetBankAccounts()
    {
        var oBankAccount = {
            BusinessUnitID:$("#cboBUType").val()
        };
        $.ajax({
            type:"POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/Payment/GetBankAccountBUWise",
            traditional: true,
            data:  JSON.stringify(oBankAccount),
            contentType: "application/json; charset=utf-8",
            success: function (data) 
            {
                
                oBankAccounts = jQuery.parseJSON(data);
                if (oBankAccounts.length>0 && (oBankAccounts[0].ErrorMessage == "" || oBankAccounts[0].ErrorMessage == null))
                { 
                    $("#cboDepositAccount").icsLoadCombo({List:oBankAccounts, OptionValue:"BankAccountID",DisplayText: "AccountWithBankName"});
                }else{
                    $("#cboDepositAccount").icsLoadCombo({List:[], OptionValue:"BankAccountID",DisplayText: "AccountWithBankName"});
                }
                $('#cboDepositAccount').val(parseInt($('#divPament').data('Payment').BankAccountID_Deposit));    
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function GetAmountInWord()
    {
        var oPaymentDetails = $('#tblPaymentDetails').datagrid('getRows');
        var nCurrencyID = 0;
        if(oPaymentDetails.length>0)
        {
            nCurrencyID=oPaymentDetails[0].ExchangeCurrencyID;
        }
        if(nCurrencyID<=0 || nCurrencyID==null)
        {
            return;
        }
        var oPayment ={
            Amount : parseFloat(icsRemoveComma($('#txtAmount').val(),2)),
            CurrencyID:nCurrencyID
        };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/Payment/TakaInWord",
            traditional: true,
            data:  JSON.stringify(oPayment),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var sAmountInWord = jQuery.parseJSON(data);
                $('#txtAmountInWord').val(sAmountInWord);
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }
    function Initialization(oPayment)
    {
        RefreshControl(oPayment);
        $('#btnApprove').hide();
        var sOperation = sessionStorage.getItem('Operation');
        if(sOperation=="View")
        {
            $('#toolbarOne,#btnSave,.ics-pick').hide();
        }
        else if(sOperation=="Approve")
        {
            $('#toolbarOne,#btnSave,.ics-pick').hide();
            $('#btnApprove').show();
        }
        else{
            $('#toolbarOne,#btnSave,.ics-pick').show();
        }
    }
    function LoadCombo()
    {
        $("#cboBUType").icsLoadCombo({List: $('#divPament').data('BusinessUnits'),OptionValue: "BusinessUnitID",DisplayText: "BUTypeSt" });
        $("#cboPaymentMode").icsLoadCombo({List: $('#divPament').data('PaymentModes'),OptionValue: "id",DisplayText: "Value"});
        $("#cboPaymentType").icsLoadCombo({List: $('#divPament').data('PaymentTypes'),OptionValue: "id",DisplayText: "Value",});
        $("#cboPaymentStatus").icsLoadCombo({List: $('#divPament').data('PaymentStatus'),OptionValue: "id",DisplayText: "Value",});
        $("#cboCurrency").icsLoadCombo({List: $('#divPament').data('Currencys'),OptionValue: "CurrencyID",DisplayText: "CurrencyName"});
        $("#cboDepositAccount").icsLoadCombo({List:$('#divPament').data('BankAccounts'), OptionValue:"BankAccountID",DisplayText: "AccountWithBankName"});
        $('#cboInvoiceType').empty();
        var listDates = "<option value='"+1+"'>" + "Bill/Invoice" + "</option>";
        listDates+= "<option value='"+11+"'>" + "Non L/C PI" + "</option>";
        listDates+= "<option value='"+12+"'>" + "Fabric PO" + "</option>";
        $("#cboInvoiceType").html(listDates);
    }

    function RefreshControl(oPayment)
    {
        debugger;
        LoadCombo() ;
        if(oPayment.BankID>0)
        {
            $('#txtBank_Issue').val(oPayment.BankName);
        }
        else{
            $('#txtBank_Issue').val("");
        }
        $('#txtMRDate').datebox('setValue',oPayment.MRDateSt);
        $('#txtDocDate').datebox('setValue',oPayment.DocDateSt);
        $('#txtMRNo').val(oPayment.MRNo);
        $('#txtContractorName').val(oPayment.ContractorName);
        $('#cboPaymentMode').val(oPayment.PaymentModeInt);
        $('#cboPaymentType').val(oPayment.PaymentTypeInInt);
        $('#txtDocNo').val(oPayment.DocNo);
        $('#txtNote').val(oPayment.Note);
        $('#txtPrepareByName').val(oPayment.PrepareByName);
        $('#txtCRate').val(parseFloat(oPayment.CRate).toFixed(4));
        $('#txtAmount').val(formatPrice(parseFloat(oPayment.Amount),0));
        $("#cboCurrency").val(oPayment.CurrencyID);
        $('#cboBUType').val(oPayment.BUID);
        if(oPayment.PaymentDetails!=null)
        {
            DynamicRefreshList(oPayment.PaymentDetails, "tblPaymentDetails");
            if(oPayment.PaymentDetails.length>0)
            {
                $('#cboInvoiceType').val(oPayment.PaymentDetails[0].InvoiceType);
                $('#lblCurrency').html(oPayment.PaymentDetails[0].CurrencySymbol);
                $('#lblExCurrency,#lblExCRate').html(oPayment.PaymentDetails[0].ExchangeCurrencySymbol);
            }
        }
        GetBankAccounts();
        ChangePaymentType();
        GetAmountInWord();
        RefreshTotalSummery() ;
        ChangeCurrency(false);
    }
    function RefreshTotalSummery()
    {
        var nAmountInCurrency = 0, nAmountWithExchangeRate=0, nDisCount=0, nAdditionalAmount = 0, nNetPayble = 0,nAlreadyPaid=0,nYetToPayment=0, nPaymentAmount=0, nAlreadyDiscount = 0, nAlreadyAdditionalAmount = 0;
        var sCurrency = "";
        sCurrency = $("#cboCurrency option:selected").text();
        var oPaymentDetails = $('#tblPaymentDetails').datagrid('getRows');
        for (var i = 0; i < oPaymentDetails.length; i++)
        {
            nAmountInCurrency += parseFloat(oPaymentDetails[i].AmountInCurrency);
            nAmountWithExchangeRate +=parseFloat(oPaymentDetails[i].AmountWithExchangeRate);
            nDisCount +=parseFloat(oPaymentDetails[i].DisCount);
            nAdditionalAmount +=parseFloat(oPaymentDetails[i].AdditionalAmount);
            nAlreadyPaid +=parseFloat(oPaymentDetails[i].AlreadyPaid);
            nAlreadyAdditionalAmount +=parseFloat(oPaymentDetails[i].AlreadyAdditionalAmount);
            nYetToPayment +=parseFloat(oPaymentDetails[i].YetToPayment);
            nAlreadyDiscount+=parseFloat(oPaymentDetails[i].AlreadyDiscount);
            nPaymentAmount +=parseFloat(oPaymentDetails[i].PaymentAmount);
        }
        var oFooterList = [{InvoiceTypeSt: ' ', SampleInvoiceNo:' ', SampleInvoiceDateInString:'Total :', AmountInCurrency:nAmountInCurrency,CRateInString:'', AmountWithExchangeRate:nAmountWithExchangeRate,DisCount:nDisCount,AlreadyDiscount:nAlreadyDiscount,AlreadyAdditionalAmount:nAlreadyAdditionalAmount, AdditionalAmount:nAdditionalAmount, AlreadyPaid:nAlreadyPaid,YetToPayment:nYetToPayment, PaymentAmount :nPaymentAmount}];
        $('#tblPaymentDetails').datagrid('reloadFooter',oFooterList);
        $("#txtAmount").val(formatPrice(nPaymentAmount,0));
        GetAmountInWord();
    }
    function ValidateInputPayment()
    {
        var oPaymentDetails = $('#tblPaymentDetails').datagrid('getRows');
        if(oPaymentDetails==null || oPaymentDetails.length<=0)
        {
            alert("Please, Pick at least one Invoice/Debit Note.");
            $("#txtContractorName").focus();
            $("#txtContractorName").addClass("errorFieldBorder");
            return;
        }
        if( parseInt($('#divPament').data('Payment').ContractorID)<=0)
        {
            alert("Please, Pick at least one Invoice/Debit Note.");
            $("#txtContractorName").focus();
            $("#txtContractorName").addClass("errorFieldBorder");
            return;
        }

        var nPaymentType =$('#cboPaymentType').val();
        var nPaymentMode =$('#cboPaymentMode').val();
        if(parseInt(nPaymentType)<=0)
        {
            alert("Please Select a payment Type.");
            $('#cboPaymentType').focus();
            $("#cboPaymentType").addClass("errorFieldBorder");
            return false;
        }
        if(parseInt($('#cboCurrency').val())<=0)
        {
            alert("Please Select Currency Name.");
            $('#cboCurrency').focus();
            $("#cboCurrency").addClass("errorFieldBorder");
            return false;
        }


        if(parseFloat(icsRemoveComma($('#txtAmount').val(),2)) <=0)
        {
            alert("Please, entry Paid Amount.");
            $('#txtAmount').focus();
            $("#txtAmount").addClass("errorFieldBorder");
            return false;
        }
        if(parseFloat($('#txtCRate').val()) <=0)
        {
            alert("Please, Entry Convertion Rate.");
            $('#txtCRate').focus();
            $("#txtCRate").addClass("errorFieldBorder");
            return false;
        }
        if(parseInt(nPaymentType)==2) /// Not Cash //Cash
        {
            if(nPaymentMode=0)
            {
                alert("Please Select a payment mode.");
                $('#cboPaymentMode').focus();
                $("#cboPaymentMode").addClass("errorFieldBorder");
                return false;
            }

            var sDocNo=$('#txtDocNo').val();
            if(sDocNo==null || sDocNo=="")
            {
                alert("Please, Entry Document No.");
                $('#txtDocNo').focus();
                $("#txtDocNo").addClass("errorFieldBorder");
                return false;
            }
            if( parseInt($('#divPament').data('Payment').BankID)<=0)
            {
                alert("Please Select a Bank from Bank list.");
                $('#txtBranchName').focus();
                return false;
            }
            if(parseInt($('#cboDepositAccount').val())<=0)
            {
                alert("Please Select  Bank Account.");
                $('#cboDepositAccount').focus();
                return false;
            }
        }

        return true;
    }
    function RefreshObject()
    {
        
        var oPayment = $('#divPament').data('Payment');
        var dDocDate = $('#txtDocDate').datebox('getValue');
        var nPaymentType =$('#cboPaymentType').val();
        var nPaymentMode =$('#cboPaymentMode').val();
        var sDocNo=$('#txtDocNo').val();
        if(parseInt(nPaymentType)>1)
        {
            if(parseInt(oPayment.BankID)<=0)
            {
                oPayment.BankID=0;
            }
        }
        else
        {
            nPaymentMode=1;  // Cash
            sDocNo="";
        }
        var oPayment={
            PaymentID :(oPayment!= null) ? oPayment.PaymentID : 0,
            ContractorID: parseInt(oPayment.ContractorID),
            ContactPersonnelID : 0,
            MRNo :$('#txtMRNo').val(),
            PaymentModeInt : parseInt(nPaymentMode),
            PaymentTypeInInt :  parseInt($('#cboPaymentType').val()),
            Amount : parseFloat(icsRemoveComma($('#txtAmount').val(),2)),
            PaymentDocID : 0,
            CurrencyID: parseInt($('#cboCurrency').val()),
            CRate: parseFloat($('#txtCRate').val()),
            Note : document.getElementById("txtNote").value,
            DocNo :sDocNo,
            BankID : parseInt(oPayment.BankID),
            BankAccountID_Deposit: parseInt($('#cboDepositAccount').val()),
            DocDate: dDocDate,
            PaymentDocID:(oPayment!= null)?oPayment.PaymentDocID:0,
            MRDate : $('#txtMRDate').datebox('getValue'),
            BUID:parseInt($('#cboBUType').val()),
            PaymentDetails:$('#tblPaymentDetails').datagrid('getRows')
        };
        return oPayment;
    }

    $("#btnSave").click(function (e) {
        
        endEditing();
        if (!ValidateInputPayment()) return;
        var oPayment = RefreshObject();
        $.ajax({
            type:"POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/Payment/Save",
            traditional: true,
            data:  JSON.stringify(oPayment),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
           
               oPayment = jQuery.parseJSON(data);
                if (oPayment.ErrorMessage == "" || oPayment.ErrorMessage == null)
                {
                    alert("Data Save Succesfully!!");
                    var oPayments =sessionStorage.getItem("Payments");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    
                    if(oPayments!=null)
                    {
                        oPayments = jQuery.parseJSON(oPayments);
                    }
                    else
                    {
                        oPayments=[];
                    }
                    if(nIndex!=-1)
                    {
                        oPayments[nIndex]=oPayment;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oPayments.length);
                        oPayments.push(oPayment);
                    }
                    sessionStorage.setItem("Payments", JSON.stringify(oPayments));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oPayment.ErrorMessage);
                }

            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });

    });
    $("#btnApprove").click(function (){

        if (!ValidateInputPayment()) return;
        if (parseInt($('#divPament').data('Payment').PaymentID)<= 0 || $('#divPament').data('Payment')== null)
        {
            alert("Please, First save LC from  previous tab!");
            return ;
        }
        if (!confirm("Confirm to Approve?")) return false;
        var oPayment = RefreshObject();
        oPayment.PaymentStatusInInt = 3;//Enchashment
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/Payment/Approved",
            traditional: true,
            data:  JSON.stringify(oPayment),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                
                var oPayment= jQuery.parseJSON(data);
                if (oPayment.ErrorMessage=="" || oPayment.ErrorMessage==null)
                {
                    $('#divPament').data('Payment',oPayment);
                    alert("Succesfully Approved.");
                    var oPayments =sessionStorage.getItem("Payments");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    
                    if(oPayments!=null)
                    {
                        oPayments = jQuery.parseJSON(oPayments);
                    }
                    else
                    {
                        oPayments=[];
                    }
                    if(nIndex!=-1)
                    {
                        oPayments[nIndex]=oPayment;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oPayments.length);
                        oPayments.push(oPayment);
                    }
                    sessionStorage.setItem("Payments", JSON.stringify(oPayments));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else
                {
                    alert(oPayment.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });
    /// Pick Object
    $("#btnClrContractor").click(function () {
        $("#txtContractorName").val("");
        $('#divPament').data('Payment').ContractorID=0;
    });
    $("#btnPickContractor").click(function () {

        if(parseInt($('#cboBUType').val())<=0)
        {
            alert("Please, Select Business Unit");
            $("#cboBUType").focus();
            $("#cboBUType").addClass("errorFieldBorder");
            return;
        }

        var oContractor = {
            Params:parseInt($('#cboBUType').val())
        };
        GetContractors(oContractor,true);
    });
    $("#txtContractorName").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            if(parseInt($('#cboBUType').val())<=0)
            {
                alert("Please, Select Business Unit");
                $("#cboBUType").focus();
                $("#cboBUType").addClass("errorFieldBorder");
                return;
            }
            var sContractorName=$.trim($("#txtContractorName").val());
            if(sContractorName=="" || sContractorName==null)
            {
                alert("Please, Type name or part of Name");
                $("#txtContractorName").focus();
                $("#txtContractorName").addClass("errorFieldBorder");
                return;
            }
            var oContractor = {
                Params: '2,3' + '~' + $.trim($("#txtContractorName").val()+'~'+parseInt($('#cboBUType').val()))
            };
            GetContractors(oContractor, false);
        }
        else if(nkeyCode==8){
            $("#txtContractorName").val("");
            $('#divPament').data('Payment').ContractorID=0;
        }
    });
    function GetContractors(oContractor, bIsFromSampleInvoice){
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oContractor,
            ControllerName:bIsFromSampleInvoice?"Payment":"Contractor",
            ActionName: bIsFromSampleInvoice?"ContractorGetsByPaymentType": "ContractorSearchByNameType",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    
                    var tblColums = [];
                    var oColumn = { field: "ContractorID", title: "Code", width: 50, align: "center" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 190, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Phone", title: "Phone", width: 140, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winContractorPicker',
                        winclass:'clsContractorPicker',
                        winwidth: 460,
                        winheight: 460,
                        tableid: 'tblContractorPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Contractor List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No contractor found.");
            }
        });
    }
    $("#btnClrSampleInvoice").click(function ()
    {
        $("#txtSampleInvoiceNo").val("");
        $('#txtSampleInvoiceNo').removeClass('fontColorOfPickItem');
    });
    $("#btnSampleInvoice").click(function () {

        if(parseInt($('#cboBUType').val())<=0)
        {
            alert("Please, Select Business Unit");
            $("#cboBUType").focus();
            $("#cboBUType").addClass("errorFieldBorder");
            return;
        }
        if(parseInt($('#cboInvoiceType').val())<=0)
        {
            alert("Please, Select Invoice Type");
            $("#cboInvoiceType").focus();
            $("#cboInvoiceType").addClass("errorFieldBorder");
            return;
        }
        var oSampleInvoice = {
            SampleInvoiceNo:  $.trim($("#txtSampleInvoiceNo").val()),
            ContractorID :$('#divPament').data('Payment').ContractorID,
            BUID:sessionStorage.getItem('BUID'),
            InvoiceType:parseInt($('#cboInvoiceType').val())

        };
        Get_SampleInvoice(oSampleInvoice);
    });
    $("#txtSampleInvoiceNo").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var sSampleInvoiceNo=$.trim($("#txtSampleInvoiceNo").val());
            //if(sSampleInvoiceNo=="" || sSampleInvoiceNo==null)
            //{
            //    alert("Please, Type Invoice/Debit Note No");
            //    $("#txtSampleInvoiceNo").focus();
            //    $("#txtSampleInvoiceNo").addClass("errorFieldBorder");
            //    return;
            //}
            var oSampleInvoice = {
                SampleInvoiceNo:  $.trim($("#txtSampleInvoiceNo").val()),
                ContractorID :$('#divPament').data('Payment').ContractorID,
                BUID:parseInt($('#cboBUType').val()),
                InvoiceType:parseInt($('#cboInvoiceType').val())
            };
            Get_SampleInvoice(oSampleInvoice);
        }
        else if(nkeyCode==8){
            $("#txtSampleInvoiceNo").val("");
            $("#txtSampleInvoiceNo").empty();


        }
    });
    function Get_SampleInvoice(oSampleInvoice) {
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oSampleInvoice,
            ControllerName: "Payment",
            ActionName: "Gets_SampleInvoice",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response)
        {            
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ReferenceID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "SampleInvoiceNo", title: "No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "AmountInCurrencyInString", title: "Amount(Invoice)", width: 100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "AmountWithExchangeRateInString", title: "Amount(Exchnage.)", width: 100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "AlreadyPaid", title: "Already Paid", width: 100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "YetToPayment", title: "Yet To Payment", width: 100, align: "right",formatter:formatPrice };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSampleInvoicePicker',
                        winclass: 'clsSampleInvoicePicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblSampleInvoicePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'SampleInvoiceNo',
                        windowTittle: 'Invoice/Debit Note List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    // Pick PI

    $("#txtBank_Issue").keydown(function (e) {
        if (e.keyCode === 13) // Enter Press
        {            
            if($("#txtBank_Issue").val()=="" || $("#txtBank_Issue").val()==null)
            {
                $("#txtBank_Issue").removeClass("fontColorOfPickItem");
                alert("Please, Type name or Name Part ")
                return;
            }

            var oBank = {                
                Name : $.trim($("#txtBank_Issue").val())
            };
            PickBanks(oBank);
        }
        else if (e.keyCode === 08) {
            $("#txtBank_Issue").removeClass("fontColorOfPickItem");
            _oExportLC.BBranchID_Issue=0;
        }
    });
    $("#btnClrBank_Issue").click(function () {
        $("#txtBank_Issue").removeClass("fontColorOfPickItem");
        $("#txtBank_Issue").val("");
        _oExportLC.BBranchID_Issue=0;
    });
    $("#btnPickBank_Issue").click(function () {        
        var oBank = {                
            Name : $.trim($("#txtBank_Issue").val())
        };
        PickBanks(oBank);
    });
    function PickBanks(oBank) {
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oBank,
            ControllerName: "Bank",
            ActionName: "Gets",
            IsWinClose: false
        };

        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BankID > 0) {
                    var tblColums = []; var oColumn = { field: "Code", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Bank Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBank_IssuePicker',
                        winclass: 'clsBank_Issue',
                        winwidth: 500,
                        winheight: 460,
                        tableid: 'tblBank_Issues',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'BranchName',
                        windowTittle: 'Bank List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else {
                alert("Sorry, No Contactor Found.");
            }
        });
    }

    /// End Pick PI
    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }
    function SetPickerValueAssign(oPickerobj) {        
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winContractorPicker')
        {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                $('#txtContractorName').val(oreturnObj.Name);
                $('#divPament').data('Payment').ContractorID= oreturnObj.ContractorID;
                $("#txtSampleInvoiceNo").focus();
                $("#txtSampleInvoiceNo").addClass("errorFieldBorder");
            }
            else{
                alert("Data not found");
            }
        }
        else if (oPickerobj.winid == 'winSampleInvoicePicker')
        {
            if (oreturnobjs!= null && oreturnobjs.length> 0)
            {
                var nCurrencyID = oreturnobjs[0].CurrencyID;
                $('#txtSampleInvoiceNo').addClass('fontColorOfPickItem');
                for (var i = 0; i < oreturnobjs.length; i++)
                {
                    if( parseInt(oreturnobjs[i].CurrencyID)!= parseInt(nCurrencyID))
                    {
                        alert("Sorry Your Selected Invoices are not same Currency. Please Select Same Currency of Invoice.");
                        return;
                    }
                    var bExists= IsExist(oreturnobjs[i].ReferenceID)
                    if(!bExists)
                    {
                        oreturnobjs[i].SampleInvoiceDate = oreturnobjs[i].SampleInvoiceDateInString;
                        $('#divPament').data('Payment').ContractorID= oreturnobjs[i].ContractorID;
                        $("#txtContractorName").val(oreturnobjs[i].ContractorName);
                        $('#tblPaymentDetails').datagrid('appendRow',oreturnobjs[i]);
                    }
                }
                $('#lblCurrency').html(oreturnobjs[0].CurrencySymbol);
                $('#lblExCurrency,#lblExCRate').html(oreturnobjs[0].ExchangeCurrencySymbol);
                RefreshTotalSummery();
                $('#txtSampleInvoiceNo').focus();
            }
        }
        else if (oPickerobj.winid == 'winBank_IssuePicker') {
            if (oreturnObj != null && oreturnObj.BankID > 0)
            {                
                $('#txtBank_Issue').val(oreturnObj.Name);
                $('#divPament').data('Payment').BankID= oreturnObj.BankID;
            }
            else{
                alert("Data not found");
            }
        }
        else
        {
            alert("Data not found");
            return false;
        }
    }
    function IsExist(nReferenceID)
    {
        var oPaymentDetails = $('#tblPaymentDetails').datagrid('getRows');
        for (var i = 0; i < oPaymentDetails.length; i++) {
            if (parseInt(oPaymentDetails[i].ReferenceID) == parseInt(nReferenceID))
            {
                return true;
            }
        }

        return false;
    }
    $("#btnRemoveDetail").click(function () {
        var oFSCDetails = $("#tblPaymentDetails").datagrid("getSelected");
        if (oFSCDetails == null) { alert("Please select an item from list!"); return false; }
        var nIndex=$('#tblPaymentDetails').datagrid('getRowIndex',oFSCDetails);
        if (!confirm("Confirm to Delete?")) return false;
        $("#tblPaymentDetails").datagrid("deleteRow", nIndex);
        RefreshTotalSummery();
    });
    $("#btnRefreshDetail").click(function () {
        endEditing();
        var oPaymentDetails = $('#tblPaymentDetails').datagrid('getRows');
        var nCurrencyID = parseInt($('#cboCurrency').val());
        for(var i= 0; i<oPaymentDetails.length; i++)
        {
            if(parseInt(nCurrencyID)!= parseInt(oPaymentDetails[i].CurrencyID))
            { 
                oPaymentDetails[i].YetToPayment = (parseFloat(oPaymentDetails[i].AmountWithExchangeRate) + parseFloat(oPaymentDetails[i].AlreadyAdditionalAmount)+ parseFloat(oPaymentDetails[i].AdditionalAmount)) - (parseFloat(oPaymentDetails[i].AlreadyDiscount) + parseFloat(oPaymentDetails[i].AlreadyPaid) + parseFloat(oPaymentDetails[i].DisCount));                
            }
            else
            {                
                oPaymentDetails[i].YetToPayment = (parseFloat(oPaymentDetails[i].AmountInCurrency) + parseFloat(oPaymentDetails[i].AlreadyAdditionalAmount)+ + parseFloat(oPaymentDetails[i].AdditionalAmount)) - (parseFloat(oPaymentDetails[i].AlreadyDiscount) + parseFloat(oPaymentDetails[i].AlreadyPaid) + parseFloat(oPaymentDetails[i].DisCount));                
            }
        }
        DynamicRefreshList(oPaymentDetails, "tblPaymentDetails");
        RefreshTotalSummery();
    });
    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });
    $('#btnPrint').click(function (e)
    {
        if ($('#divPament').data('Payment') ==null || $('#divPament').data('Payment').PaymentID <=0 ) { alert("Please select an item from list."); return ; }
        var tsv=((new Date()).getTime())/1000;
        window.open(sessionStorage.getItem('BaseAddress')+ "/Payment/PrintPreview?nID="+ $('#divPament').data('Payment').PaymentID+"&nts="+tsv, "_blank");

    });

</script>