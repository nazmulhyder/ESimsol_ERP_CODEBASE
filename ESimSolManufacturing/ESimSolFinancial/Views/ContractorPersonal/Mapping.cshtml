@{
    ViewBag.Title = "Contact Personnel Mapping";
}
@model ESimSol.BusinessObjects.ContactPersonnel

<div style="padding-top:5px" ng-app="ContactPersonnelAPP" ng-controller="ContactPersonnelCtrl" class="form-horizontal regionContactPersonnel">
    <div class="ui-grid-top-panel panel-danger" style="height:115px; padding:10px 0 0 10px">
        <div class="row col-md-12">
            <div class="col-md-2 text-right"><label class="control-label">Person Name:</label></div>
            <div class="col-md-4 text-left">
                <input ng-model="ContactPersonnel.Name" ng-disabled="disabled" class="form-control" required />
            </div>
            <div class="col-md-2 text-right"><label class="control-label">Phone No:</label></div>
            <div class="col-md-4 text-left">
                <input ng-model="ContactPersonnel.Phone" ng-disabled="disabled" class="form-control" required />
            </div>
        </div>
        <div class="row col-md-12">
            <div class="col-md-2 text-right"><label class="control-label">Email:</label></div>
            <div class="col-md-4 text-left">
                <input ng-model="ContactPersonnel.Email" ng-disabled="disabled" class="form-control" required />
            </div>
            <div class="col-md-2 text-right"><label class="control-label">Address:</label></div>
            <div class="col-md-4 text-left">
                <input ng-model="ContactPersonnel.Address" ng-disabled="disabled" class="form-control" required />
            </div>
        </div>
        <div class="row col-md-12">
            <div class="col-md-2 text-right"><label class="control-label">Note:</label></div>
            <div class="col-md-10 text-left input-group">
                <input ng-model="ContactPersonnel.Note" ng-disabled="disabled" style="width:80%" class="form-control" required />
                <button class="btn btn-sm btn-success" ng-hide="save_cp" style="margin-left:13px" ng-click="saveCP()">Save </button>
            </div>
        </div>
    </div>
    <div>
        
    <div class="col-md-7">
        <fieldset>
            <legend> Contractors </legend>
            <div class="ui-grid-top-panel">
                <div class="col-md-12">
                    <div class="input-group">
                        <input ng-model="ContactPersonnel.ContractorNameCP" class="form-control input-group-sm" ng-disabled="disabled_OrderBy" ng-keydown="SearchKeyDownContractor($event)" placeholder="Type Contractor Name & Press Enter" required />
                        <span class="input-group-btn">
                            @*<button type="button" class="btn btn-sm" aria-label="left Align" ng-click="ClearContractor()" ng-disabled="disabled" ng-disabled="disabled_OrderBy">
                                <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                            </button>*@
                            <span style="margin-left:0px;"></span>
                            <button type="button" class="btn btn-sm  btn-primary" aria-label="left Align" ng-click="PickContractor('')" ng-disabled="disabled_OrderBy">
                                <span class="glyphicon glyphicon-add" aria-hidden="true"></span> Add 
                            </button>
                            @*<button class="btn btn-sm btn-primary" ng-click="AddModule()">Add</button>*@
                            <button class="btn btn-sm btn-danger" ng-click="DeleteContractor()">Remove </button>
                        </span>
                    </div>
                       
                </div>
            </div>
            <div ui-grid="gridOptionsContractor" ui-grid-selection ui-grid-resize-columns ui-grid-edit ui-grid-row-edit class="grid ui-grid-selectable"></div>
        </fieldset>
    </div>

    <div class="col-md-5">
        <fieldset>
            <legend> Business Units </legend>
            <div class="ui-grid-top-panel">
                <div class="col-md-12">
                    @*<select ng-model="ModlueID" ng-options="obj.id as obj.Value for obj in Modules" ng-disabled="disabled" class="form-control">
                        <option value="">--Select Unit--</option>
                    </select>*@
                    <button class="btn btn-sm btn-primary" ng-click="AddBU()">Add</button>
                </div>
            </div>
            <div ui-grid="gridOptionsBU" ui-grid-selection ui-grid-resize-columns ui-grid-edit ui-grid-row-edit class="grid ui-grid-selectable"></div>
        </fieldset>
    </div>

    <fieldset>
        <legend>Action</legend>
        <div class="row col-md-12 text-right">  @*ng-hide="hide_Save">*@
            <button type="button" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="save()"> <span class="glyphicon glyphicon-floppy-save" aria-hidden="true"> Save</span> </button>
            <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
        </div>
    </fieldset>
    </div>
</div>

<style type="text/css">

    .grid{
        width:100%; 
        height:320px;
    }
    .regionContactPersonnel .form-horizontal .control-label{
        padding-top:3px;
    }
    .regionContactPersonnel .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .regionContactPersonnel .col-md-12{
        width:100%;
        padding-right:5px;
        padding-left:5px;
        margin-bottom:5px;
    }
    .regionContactPersonnel .col-md-2{
        width:13%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionContactPersonnel .col-md-3{
        width:20%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionContactPersonnel .col-md-4{
        width:28%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionContactPersonnel .col-md-5{
        width:40%;
        padding-right:5px;
        padding-left:0px;
    }

     .regionContactPersonnel .col-md-10{
        width:86%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionContactPersonnel .btn-sm{
         padding:3px 10px;
     }
     .regionContactPersonnel .input-group-addon{
         padding: 4px 8px;
     }
</style>

<script type="text/javascript">

    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oContactPersonnel =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var ContactPersonnelModule = angular.module('ContactPersonnelAPP', ['ngAnimate', 'ui.bootstrap', 'ui.grid', 'ui.grid.selection', 'ui.grid.edit','ms.service']);
    var nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oBusinessUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));

    ContactPersonnelModule.controller('ContactPersonnelCtrl', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession) {
        debugger;

        var viewType = sessionStorage.getItem("Operation");

        if (viewType == 'View')
        {
            $scope.ContactPersonnel.BUID=nBUID;
        }
        else if (viewType == 'Edit')
        {
            $scope.save_cp=false;
        }
        else
        {
            $scope.disabled= false;
            $scope.save_cp=false;
        }

        $scope.ContactPersonnel=oContactPersonnel;
        $scope.BusinessUnits=oBusinessUnits;

        $scope.MakeGrid= function()
        {
            debugger;
            var oDetailColumns = [];
            var oColumn = { field: 'Name', name:'Unit Name', width:'70%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                oColumn = { field: 'ShortName', name:'Short Name', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
            $scope.gridOptionsBU = {
                enableRowSelection: true,
                enableRowHeaderSelection: false,
                multiSelect: true,
                enableColumnResizing: true,
                showColumnFooter: false,
                enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
                columnDefs:oDetailColumns,
                data:  $scope.ContactPersonnel.BusinessUnits,
                onRegisterApi: function (gridApi)
                {
                    $scope.gridDetailApiBU = gridApi;
                }
            };

            //var oLabdipChallanDetails=$scope.LabdipChallan.LabdipChallanDetails;
            // $scope.gridOptionsLabdipChallanDetail.data=[];
            // $scope.gridOptionsLabdipChallanDetail.data= $scope.LabdipChallan.LabdipChallanDetails;
        }
        $scope.MakeGrid();
        $scope.MakeGridContract= function()
        {
            debugger;
            var oDetailColumns = [];
            var oColumn = { field: 'Name', name:'Contractor Name', width:'70%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                oColumn = { field: 'Zone', name:'Zone', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn)
            $scope.gridOptionsContractor = {
                enableRowSelection: true,
                enableRowHeaderSelection: false,
                multiSelect: true,
                enableColumnResizing: true,
                showColumnFooter: false,
                enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
                columnDefs:oDetailColumns,
                data:  $scope.ContactPersonnel.Contractors,
                onRegisterApi: function (gridApi)
                {
                    $scope.gridDetailApiContractor = gridApi;
                }
            };

            //var oLabdipChallanDetails=$scope.LabdipChallan.LabdipChallanDetails;
            // $scope.gridOptionsLabdipChallanDetail.data=[];
            // $scope.gridOptionsLabdipChallanDetail.data= $scope.LabdipChallan.LabdipChallanDetails;
        }
        $scope.MakeGridContract();

        $scope.AddBU=function()
        {
            if($scope.ContactPersonnel.ContactPersonnelID<=0)
            {
                alert("Please save contact person first and try again!"); return;
            }

            var modalObj={
                size: 'md',
                title:" BU List ",
                url:_sBaseAddress+'/Home/Modal',
                modalController:'ContractorModalCtrl',appController:'ContactPersonnelCtrl',
                objs:$scope.BusinessUnits,multiSelect:true,
                rows: $scope.gridOptionsBU.data,
                columns:
                    [
                        { field: 'Name', name:'Unit Name', width:'70%',cellClass: 'text-left', enableCellEdit:false },
                        { field: 'ShortName', name:'ShortName', width:'28%',cellClass: 'text-left', enableCellEdit:false }
                    ]
            }

            var modalInstance=msModal.Instance(modalObj);
            //for(var i=0;i<$scope.BusinessUnits.length;i++)
            //{
            //    modalInstance.modalGridApi.selection.selectRow();
            //}

            modalInstance.result.then(function (result)
            {
                if(result!=undefined && result.length>0)
                {
                    $scope.gridOptionsBU.data=[];
                    for(var i=0;i<result.length;i++)
                    {
                        //if(!chkDuplicate(result[i].BusinessUnitID, $scope.gridOptionsBU.data))
                        result[i].BUID=result[i].BusinessUnitID;
                        $scope.gridOptionsBU.data.push(result[i])
                    }
                }
            },
            function ()
            {$log.info('Modal dismissed at: ' + new Date());});
        }
        function chkDuplicate(nPID,oList)
        {
            debugger;
            if(nPID<=0 || oList==undefined)
                return false;
            for(var i=0;i<oList.length;i++)
            {
                if(oList[i].BUID==nPID)
                {
                    return true;
                }else false;
            }
        }
       
        //Contractor
        $scope.SearchKeyDownContractor = function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var ContractorName = $.trim($scope.ContactPersonnel.ContractorNameCP);
                if (ContractorName == "" || ContractorName == null) {
                    alert("Type Contractor Name and Press Enter");
                    return;
                }
                $scope.PickContractor(ContractorName);
            } else if (code == 8) //backspace=8
            {
                //debugger;
                //$scope.ContactPersonnel.ContractorNameCP = '';
                //$scope.ContactPersonnel.Contractor = 0;
            }
        };
        $scope.PickContractor = function (sContractorName) {
            debugger;
            if($scope.ContactPersonnel.ContactPersonnelID<=0)
            {
                alert("Please save contact person first and try again!"); return;
            }

            var oContractor = {
                Params: '1,2,3' + '~' + sContractorName + '~' + 0
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress') + '/Contractor/ContractorSearchByNameType', $.param(oContractor), config).then(
                                function (response) {
                                    debugger;
                                    var oColumns = [];
                                    var oColumn = { field: 'ContractorID', name: 'Code', width: '20%' }; oColumns.push(oColumn);
                                    oColumn = { field: 'Name', name: 'Contractor Name', width: '50%', enableSorting: false }; oColumns.push(oColumn);
                                    oColumn = { field: 'Address', name: 'Address', width: '30%', enableSorting: false }; oColumns.push(oColumn);
                                    var results = response.data;
                                    var modalObj = {
                                        size: 'md',
                                        modalcontroller: 'ModalCc',
                                        appcontroller: 'CCategoryController',
                                        objs: results,
                                        multiSelect: true,
                                        pickertitle: 'Contractor List',
                                        searchingbyfieldName: 'Name',
                                        columns: oColumns
                                    }
                                    var modalInstance = msModal.Instance(modalObj);
                                    modalInstance.result.then(function (result) {
                                        debugger;
                                        $scope.ContactPersonnel.ContractorNameCP = '';
                                        var oList=[];

                                        for(var j=0; j<result.length; j++)
                                        {
                                            var nIsExist=false;
                                            for(var i=0;i<$scope.gridOptionsContractor.data.length;i++)
                                            {
                                                if(result[j].ContractorID==$scope.gridOptionsContractor.data[i].ContractorID){
                                                    nIsExist=true; break;
                                                }
                                            }
                                            if(!nIsExist)
                                                oList.push(result[j]);
                                        }

                                        if(oList.length>0)
                                            $scope.SaveContractor(oList);
                                       // $scope.ContactPersonnel.ContractorName = result.Name;

                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message); }
                            );
        };
        $scope.ClearContractor = function () {
            debugger;
            $scope.ContactPersonnels = [];
            $scope.ContactPersonnel.ContractorNameCP = "";
            $scope.ContactPersonnel.ContractorID = 0;
        };

        $scope.SaveContractor= function(oContractors)
        {
            if($scope.ContactPersonnel.ContactPersonnelID<=0)
            {
                alert("Please save contact person first and try again!"); return;
            }

            var oCP=
                {
                    ContactPersonnelID: $scope.ContactPersonnel.ContactPersonnelID,
                    Contractors:oContractors
                }
            $http.post(_sBaseAddress+'/ContractorPersonal/SaveContractor',JSON.stringify(oCP)).then(
                            function (response) {
                                var result=jQuery.parseJSON(response.data);
                                if(result.ErrorMessage=="")
                                {
                                    debugger;
                                    alert('Added Successfully.');
                                    //$scope.ContactPersonnel=result;
                                    for(var i=0; i<result.Contractors.length;i++)
                                        $scope.gridOptionsContractor.data.push(result.Contractors[i]);

                                    // msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                }
                                else
                                {
                                    alert(result.ErrorMessage);
                                }

                            },
                            function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                      );
        }
        $scope.DeleteContractor= function(oContractors)
        {
            var data=$scope.gridDetailApiContractor.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
         
            if (!confirm("Confirm to Delete?")) return ;
          
            var oCP=
              {
                  ContactPersonnelID: $scope.ContactPersonnel.ContactPersonnelID,
                  Contractors:data
              }

            $http.post(_sBaseAddress+'/ContractorPersonal/DeleteContractor',JSON.stringify(oCP)).then(
                            function (response) {
                                var result=jQuery.parseJSON(response.data);
                                if(result.ErrorMessage=="")
                                {
                                    debugger;
                                    alert('Removed Successfully.');
                                    //$scope.ContactPersonnel=result;
                                    var data=$scope.gridDetailApiContractor.selection.getSelectedRows();
                                    for(var i=0; i<data.length;i++)
                                    {
                                        for(var j=0; j<$scope.gridOptionsContractor.data.length;j++)
                                        {
                                            if(data[i].ContractorID==$scope.gridOptionsContractor.data[j].ContractorID)
                                                $scope.gridOptionsContractor.data.splice(j,1);
                                        }
                                    }
                                    // msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                }
                                else
                                {
                                    alert(result.ErrorMessage);
                                }

                            },
                            function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                      );
        }

        $scope.Validation=function()
        {
            if($scope.ContactPersonnel.Name==undefined || $scope.ContactPersonnel.Name=="")
            {
                alert("Please write Person Name and try again!");return false;
            }
            if($scope.ContactPersonnel.Phone==undefined ||$scope.ContactPersonnel.Phone=="")
            {
                alert("Please write Phone number and try again!");return false;
            }
            return true
        }
        
        $scope.saveCP = function () {
            
            if(!$scope.Validation())return;
            $http.post(_sBaseAddress+'/ContractorPersonal/Save',JSON.stringify($scope.ContactPersonnel)).then(
                             function (response) {
                                 debugger;
                                 var result=jQuery.parseJSON(response.data);
                                 if(result.ContactPersonnelID>0 && result.ErrorMessage=="")
                                 {
                                     alert('Save Successfully.');
                                     $scope.ContactPersonnel=result;
                                     userSession.setData('ContactPersonnels',$scope.ContactPersonnel);
                                     // msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                 }
                                 else
                                 {
                                     alert(result.ErrorMessage);
                                 }

                             },
                             function (response) { alert(response.statusText);}
                       );
        };

        $scope.save = function () {
            if($scope.ContactPersonnel.ContactPersonnelID<=0)
            {
                alert("Please save contact person first and try again!"); return;
            }
            if(!$scope.Validation())return;

            $scope.ContactPersonnel.BusinessUnits=$scope.gridOptionsBU.data;
            $http.post(_sBaseAddress+'/ContractorPersonal/Save',JSON.stringify($scope.ContactPersonnel)).then(
                             function (response) {
                                 var result=jQuery.parseJSON(response.data);
                                 if(result.ContactPersonnelID>0 && result.ErrorMessage=="")
                                 {
                                     debugger;
                                     alert('Save Successfully.');
                                     $scope.ContactPersonnel=result;
                                     userSession.setData('ContactPersonnels',$scope.ContactPersonnel);
                                     userSession.previousPage();
                                     // msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                 }
                                 else
                                 {
                                     alert(result.ErrorMessage);
                                 }

                             },
                             function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                       );
        };
        $scope.close = function () {
            userSession.previousPage();
        };
    });

</script>


