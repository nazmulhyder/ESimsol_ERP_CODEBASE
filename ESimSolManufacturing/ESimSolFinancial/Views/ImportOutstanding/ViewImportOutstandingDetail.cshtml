@{
    ViewBag.Title = "Import OutStanding Detail";
}

@model IEnumerable <ESimSol.BusinessObjects.ImportOutStandingDetail>
                      
<div ng-app="IODetailApp" ng-controller="IODetailCntrl as IOD">
    <div class="ui-tabs-panel" style="background-color:lightgray">
        <label class="control-label" style="padding-left:10px">Bank: {{ImportOSR.BankShortName}} || Payment Type: {{ImportOSR.LCPaymentTypeSt}}  [{{ImportOSR.CurrencyName}}]</label>
    </div>
   <section>
        <ul class="nav nav-tabs" style="background:#d6dbdf; color:white;">
            <li ng-class="{active:IOD.IsSet(1)}">
                <a href="" ng-click="IOD.SetTab(1)" style="color:black;">L/C Open </a>
            </li>
            <li ng-class="{active:IOD.IsSet(2)}">
                <a href="" ng-click="IOD.SetTab(2)" style="color:black;">Copy Doc Recd</a>
            </li>
            <li ng-class="{active:IOD.IsSet(3)}">
                <a href="" ng-click="IOD.SetTab(3)" style="color:black;">Shipment Done</a>
            </li>
            <li ng-class="{active:IOD.IsSet(4)}">
                <a href="" ng-click="IOD.SetTab(4)" style="color:black;">Doc In Bank</a>
            </li>
            <li ng-class="{active:IOD.IsSet(5)}">
                <a href="" ng-click="IOD.SetTab(5)" style="color:black;">Doc In CnF</a>
            </li>
            <li ng-class="{active:IOD.IsSet(6)}">
                <a href="" ng-click="IOD.SetTab(6)" style="color:black;">Goods In Transit</a>
            </li>

        </ul>
        <div ng-if="IOD.IsSet(1)">
            <div class="form-inline">
                <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="IOD.Close(1)"> <span class="glyphicon glyphicon-circle-arrow-left" aria-hidden="true"> Back</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.Refresh(1)"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.Print(1)"> <span class="glyphicon glyphicon-print" aria-hidden="true"> Preview</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.PrintXL(1)"> <span class="glyphicon glyphicon-export" aria-hidden="true"> Excel</span></button>
            </div>
            <div ui-grid="LCOpengridOptionsgridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
        </div>
        <div ng-if="IOD.IsSet(2)">
            <div class="form-inline">
                <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="IOD.Close(2)"> <span class="glyphicon glyphicon-circle-arrow-left" aria-hidden="true"> Back</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.Refresh(2)"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.Print(2)"> <span class="glyphicon glyphicon-print" aria-hidden="true"> Preview</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.PrintXL(2)"> <span class="glyphicon glyphicon-export" aria-hidden="true"> Excel</span></button>
            </div>
            <div ui-grid="ShipmenmentInTransitgridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
        </div>
        <div ng-if="IOD.IsSet(3)">
            <div class="form-inline">

                <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="IOD.Close(3)"> <span class="glyphicon glyphicon-circle-arrow-left" aria-hidden="true"> Back</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.Refresh(3)"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.Print(3)"> <span class="glyphicon glyphicon-print" aria-hidden="true"> Preview</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.PrintXL(3)"> <span class="glyphicon glyphicon-export" aria-hidden="true"> Excel</span></button>
            </div>
            <div ui-grid="ShipmenDonegridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="angular-grid ui-grid-selectable"></div>
        </div>
        <div ng-if="IOD.IsSet(4)">
            <div class="form-inline">

                <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="IOD.Close(4)"> <span class="glyphicon glyphicon-circle-arrow-left" aria-hidden="true"> Back</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.Refresh(4)"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.Print(4)"> <span class="glyphicon glyphicon-print" aria-hidden="true"> Preview</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.PrintXL(4)"> <span class="glyphicon glyphicon-export" aria-hidden="true"> Excel</span></button>
            </div>
            <div ui-grid="DocInBanksgridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="angular-grid ui-grid-selectable"></div>
        </div>
        <div ng-if="IOD.IsSet(5)">
            <div class="form-inline">

                <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="IOD.Close(5)"> <span class="glyphicon glyphicon-circle-arrow-left" aria-hidden="true"> Back</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.Refresh(5)"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.Print(5)"> <span class="glyphicon glyphicon-print" aria-hidden="true"> Preview</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.PrintXL(5)"> <span class="glyphicon glyphicon-export" aria-hidden="true"> Excel</span></button>
            </div>
            <div ui-grid="DocInCnFsgridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="angular-grid ui-grid-selectable"></div>
        </div>
        <div ng-if="IOD.IsSet(6)">
            <div class="form-inline">
                <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="IOD.Close(6)"> <span class="glyphicon glyphicon-circle-arrow-left" aria-hidden="true"> Back</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.Refresh(6)"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.Print(6)"> <span class="glyphicon glyphicon-print" aria-hidden="true"> Preview</span></button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="IOD.PrintXL(6)"> <span class="glyphicon glyphicon-export" aria-hidden="true"> Excel</span></button>
            </div>
           <div ui-grid="GoodsInTransitsgridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="angular-grid ui-grid-selectable"></div>
        </div>
</section>
</div>

    <style type="text/css">
        .form-control {
            height: 26px;
            padding: 0px 6px;
            font-size: 12px;
        }
        .grid {
            height: 450px;
            width: 100%;
        }

        /*.ui-grid-cell  {
              display : table-cell;
              height: auto !important;
              overflow:auto;
              position: static;
        }

        .ui-grid-row {
              display : table-row;
              height: auto !important;
              position: static;
        }*/


        /*.ui-grid-viewport .ui-grid-cell-contents {
          word-wrap: break-word;
          white-space: normal !important;
        }*/

        .ui-grid-row, .ui-grid-cell {
          height: auto!important;
        }

        .ui-grid-row div[role=row] {
          display: flex;
          align-content: stretch;
        }

        /*.ui-grid-CellText{
              height: auto !important;
              white-space: pre-line;
              overflow:visible;
        }*/

        .angular-grid {
            height: 450px;
            width: 100%;
        }

        .custom-pagination {
            margin-top: -15px;
            margin-bottom: -15px;
        }

    </style>

    <script type="text/javascript">
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        @*var oLCOpens =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oShipmenmentInTransits = @Html.Raw(Json.Encode(ViewBag.ShipmenmentInTransit));
        var oShipmenDones = @Html.Raw(Json.Encode(ViewBag.ShipmenDone));
        var oDocInBanks = @Html.Raw(Json.Encode(ViewBag.DocInBank));
        var oDocInCnFs = @Html.Raw(Json.Encode(ViewBag.DocInCnF));
        var oGoodsInTransits = @Html.Raw(Json.Encode(ViewBag.GoodsInTransit));*@
       
        var oLCOpens =null;
        var oShipmenmentInTransits = null;
        var oShipmenDones =null;
        var oDocInBanks =null;
        var oDocInCnFs = null;
        var oGoodsInTransits = null;

        var  IODetailApp = angular.module('IODetailApp', ['ngAnimate','ui.bootstrap','ui.grid','ui.grid.selection','ui.grid.resizeColumns','ms.service']);
        IODetailApp.controller('IODetailCntrl', function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession) {

            $scope.ImportOSR =JSON.parse(sessionStorage.getItem("ImportOSR"));
            debugger;
            $scope.LCOpengridOptionsgridOptions ={
                enableRowHeaderSelection: false,
                enableRowSelection: true,
                enableFullRowSelection: true,
                multiSelect: false,
                enableColumnResizing: true,
                noUnselect : true,
                showColumnFooter: true,
                enableGridMenu: true,
                columnDefs: [ 
                    {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                    { field: 'LCNo', name: 'L/C No', width:'12%', enableCellEdit: false },
                    { field: 'ImportLCDateStr', name: 'L/C Date', width:'10%', enableCellEdit: false},
                    { field: 'PINo', name: 'PI No', width:'12%', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'ContractorName', name: 'Supplier Name', width: '32%', enableCellEdit: false },
                    { field: 'ProductName', name: 'Commodity', width: '28%' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    //{ field: 'ProductCode', name: 'Product Code', width: '10%', enableCellEdit: false },
                    { field: 'Qty', name: 'Due Inv Qty', width:'8%',cellClass: 'text-right', cellFilter: 'number: 2',  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item | number:2}}</div>'  },
                    { field: 'value', name: 'value', width:'10%',cellClass: 'text-right', cellFilter: 'number: 2' ,  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item  | number:2}}</div>' },
                    { field: 'ShipmentDateStr', name: 'Shipment Date', width:'10%',cellClass: 'text-center', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'ExpireDateStr', name: 'Expire Date', width:'10%',cellClass: 'text-center', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'Qty_PI', name: 'LC Qty', width:'10%',cellClass: 'text-right', cellFilter: 'number: 2',  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item| number:2}}</div>' },
                    { field: 'UnitPrice', name: 'UnitPrice', width:'8%',cellClass: 'text-right', cellFilter: 'number: 4' ,  aggregationHideLabel: true, footerCellFilter: 'number:4', footerCellClass: 'text-right' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item| number:2}}</div>' },
                    { field: 'Amount_PI', name: 'LC value', width:'10%',cellClass: 'text-right', cellFilter: 'number: 2' ,  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item| number:2}}</div>' },
                    { field: 'Qty_Invoice', name: 'Inv Qty', width:'10%',cellClass: 'text-right', cellFilter: 'number: 2',  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item| number:2}}</div>' },
                ],
                data:oLCOpens,
                onRegisterApi:function(LCOpengridOptionsgridApi) {
                    $scope.LCOpengridOptionsgridApi = LCOpengridOptionsgridApi;
                }
            };
         
            $scope.ShipmenmentInTransitgridOptions ={
                enableRowHeaderSelection: false,
                //rowHeight:80,
                enableRowSelection: true,
                enableFullRowSelection: true,
                multiSelect: false,
                enableColumnResizing: true,
                noUnselect : true,
                showColumnFooter: true,
                enableGridMenu: true,
                columnDefs: [
                    {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                    { field: 'LCNo', name: 'LC No', width:'12%', enableCellEdit: false },
                    { field: 'ImportLCDateStr', name: 'L/C Date', width:'10%', enableCellEdit: false },
                    { field: 'InvoiceNo', name: 'Invoice No', width:'12%', enableCellEdit: false,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'DateofInvoiceStr', name: 'Invoice Date', width:'10%', cellClass: 'text-center', enableCellEdit: false,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>'  },
                    { field: 'ContractorName', name: 'Supplier Name', width: '32%', enableCellEdit: false},
                    { field: 'ProductName', name: 'Commodity', width: '28%',cellTemplate:'<div ng-repeat="item in row.entity[col.field]">{{item}}</div>' },
                    { field: 'ShipmentDateStr', name: 'Shipment Date', width:'12%',cellClass: 'text-center', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>'},
                    { field: 'ExpireDateStr', name: 'Expire Date', width:'12%',cellClass: 'text-center', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>'},
                    //{ field: 'ProductCode', name: 'Product Code', width: '10%', enableCellEdit: false },
                    //{ field: 'BLNo', name: 'BL No', width: '8%', enableCellEdit: false },
                    //{ field: 'BLDateStr', name: 'BL Date', width: '8%', enableCellEdit: false },
                    { field: 'Qty', name: 'Qty', width:'8%',cellClass: 'text-right', cellFilter: 'number: 2',  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>'},
                    { field: 'UnitPrice', name: 'UnitPrice', width:'8%',cellClass: 'text-right', cellFilter: 'number: 2' ,  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>'},
                    { field: 'value', name: 'value', width:'10%',cellClass: 'text-right', cellFilter: 'number: 2' ,  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>'}

                ],
                data:oShipmenmentInTransits,
                onRegisterApi:function(ShipmenmentInTransitgridApi) {
                    $scope.ShipmenmentInTransitgridApi = ShipmenmentInTransitgridApi;

                }
            };
           
             $scope.ShipmenDonegridOptions ={
                enableRowHeaderSelection: false,
                enableRowSelection: true,
                enableFullRowSelection: true,
                multiSelect: false,
                enableColumnResizing: true,
                noUnselect : true,
                showColumnFooter: true,
                enableGridMenu: true,
                columnDefs: [
                      {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                    { field: 'LCNo', name: 'LC No', width:'12%', enableCellEdit: false  },
                    { field: 'ImportLCDateStr', name: 'L/C Date',cellClass: 'text-center', width:'10%', enableCellEdit: false  },
                    { field: 'InvoiceNo', name: 'Invoice No', width:'12%', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'DateofInvoiceStr', name: 'Invoice Date',cellClass: 'text-center', width:'10%', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'ContractorName', name: 'Supplier Name', width: '32%', enableCellEdit: false },
                    //{ field: 'ProductCode', name: 'Product Code', width: '10%', enableCellEdit: false },
                    { field: 'ProductName', name: 'Commodity', width: '28%' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'BLNo', name: 'BL No', width: '8%', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'BLDateStr', name: 'BL Date', width: '8%',cellClass: 'text-center', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'Qty', name: 'Qty', width:'8%',cellClass: 'text-right', cellFilter: 'number: 2',  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>' },
                    { field: 'UnitPrice', name: 'UnitPrice', width:'8%',cellClass: 'text-right', cellFilter: 'number: 2' ,  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right',cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>'  },
                    { field: 'value', name: 'value', width:'10%',cellClass: 'text-right', cellFilter: 'number: 2' ,  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>' }

                ],
                data:oShipmenDones,
                onRegisterApi:function(ShipmenDonegridApi) {
                    $scope.ShipmenDonegridApi = ShipmenDonegridApi;

                }
             };
            
             $scope.DocInBanksgridOptions ={
                 enableRowHeaderSelection: false,
                 enableRowSelection: true,
                 enableFullRowSelection: true,
                 multiSelect: false,
                 enableColumnResizing: true,
                 noUnselect : true,
                 showColumnFooter: true,
                 enableGridMenu: true,
                 columnDefs: [
                        {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                    { field: 'LCNo', name: 'LC No', width:'12%', enableCellEdit: false  },
                    { field: 'ImportLCDateStr', name: 'L/C Date', cellClass: 'text-center',width:'10%', enableCellEdit: false  },
                    { field: 'InvoiceNo', name: 'Invoice No', width:'12%', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'DateofInvoiceStr', name: 'Invoice Date',cellClass: 'text-center', width:'10%', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'ContractorName', name: 'Supplier Name', width: '32%', enableCellEdit: false },
                    //{ field: 'ProductCode', name: 'Product Code', width: '10%', enableCellEdit: false },
                    { field: 'ProductName', name: 'Commodity', width: '28%' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'BLNo', name: 'BL No', width: '8%', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'BLDateStr', name: 'BL Date', width: '8%', cellClass: 'text-center',enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'Qty', name: 'Qty', width:'8%',cellClass: 'text-right', cellFilter: 'number: 2',  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>' },
                    { field: 'UnitPrice', name: 'UnitPrice', width:'8%',cellClass: 'text-right', cellFilter: 'number: 2' ,  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>' },
                    { field: 'value', name: 'value', width:'8%',cellClass: 'text-right', cellFilter: 'number: 2' ,  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>' }
                ],
                 data:oDocInBanks,
                 onRegisterApi:function(DocInBanksgridApi) {
                     $scope.DocInBanksgridApi = DocInBanksgridApi;

                 }
             };   
            
             $scope.DocInCnFsgridOptions ={
                 enableRowHeaderSelection: false,
                 enableRowSelection: true,
                 enableFullRowSelection: true,
                 multiSelect: false,
                 enableColumnResizing: true,
                 noUnselect : true,
                 showColumnFooter: true,
                 enableGridMenu: true,
                 columnDefs: [
                    {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                    { field: 'LCNo', name: 'LC No', width:'12%', enableCellEdit: false  },
                    { field: 'ImportLCDateStr', name: 'L/C Date',cellClass: 'text-center', width:'10%', enableCellEdit: false  },
                    { field: 'InvoiceNo', name: 'Invoice No', width:'12%', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'DateofInvoiceStr', name: 'Invoice Date',cellClass: 'text-center', width:'10%', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'ContractorName', name: 'Supplier Name', width: '32%', enableCellEdit: false },
                    //{ field: 'ProductCode', name: 'Product Code', width: '10%', enableCellEdit: false },
                    { field: 'ProductName', name: 'Commodity', width: '28%' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'InvoiceStatusSt', name: 'Status',cellClass: 'text-center', width: '12%' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'FileNo', name: 'FileNo', width: '12%' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                     { field: 'CnFSendDateStr', name: 'Send Date',cellClass: 'text-center', width:'10%', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'Qty', name: 'Qty', width:'8%',cellClass: 'text-right', cellFilter: 'number: 2',  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>' },
                    { field: 'UnitPrice', name: 'UnitPrice', width:'8%',cellClass: 'text-right', cellFilter: 'number: 2' ,  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>' },
                    { field: 'value', name: 'value', width:'10%',cellClass: 'text-right', cellFilter: 'number: 2' ,  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>' }
                  ],
                 data:oDocInCnFs,
                 onRegisterApi:function(DocInCnFsgridApi) {
                     $scope.DocInCnFsgridApi = BillWisegridApi;
                 }
             };
             
             $scope.GoodsInTransitsgridOptions ={
                 enableRowHeaderSelection: false,
                 enableRowSelection: true,
                 enableFullRowSelection: true,
                 multiSelect: false,
                 enableColumnResizing: true,
                 noUnselect : true,
                 showColumnFooter: true,
                 enableGridMenu: true,
                 columnDefs: [
                      
                    { field: 'InvoiceNo', name: 'Invoice No', width:'12%', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    //{ field: 'InvoiceNo', name: 'Invoice No', width:'12%', enableCellEdit: false },
                    { field: 'DateofInvoiceStr', name: 'Invoice Date',cellClass: 'text-center', width:'10%', enableCellEdit: false ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>' },
                    { field: 'ContractorName', name: 'Supplier Name', width: '32%', enableCellEdit: false },
                    //{ field: 'ProductCode', name: 'Product Code', width: '10%', enableCellEdit: false },
                    { field: 'ProductName', name: 'Commodity', width: '28%' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item}}</div>'},
                    //{ field: 'Qty_Invoice', name: 'Qty Invoice', width:'8%',cellClass: 'text-right', cellFilter: 'number: 2',  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                    { field: 'Qty', name: 'Qty', width:'8%',cellClass: 'text-right', cellFilter: 'number: 2',  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>' },
                    { field: 'UnitPrice', name: 'UnitPrice', width:'8%',cellClass: 'text-right', cellFilter: 'number: 2' ,  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>'},
                    { field: 'value', name: 'value', width:'8%',cellClass: 'text-right', cellFilter: 'number: 2' ,  aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' ,cellTemplate:'<div ng-repeat="item in row.entity[col.field] track by $index">{{item|number:2}}</div>'}

                 ],
                 data:oGoodsInTransits,
                 onRegisterApi:function(GoodsInTransitsgridApi) {
                     $scope.GoodsInTransitsgridApi = GoodsInTransitsgridApi;

                 }
             };
            
             this.Close = function(tabId){
                 debugger;
                 window.location.href = sessionStorage.getItem("BackLink");
             }

            this.Refresh = function(tabId)
            {
                debugger;
               var ImportOSR =JSON.parse(sessionStorage.getItem("ImportOSR"));
                
                 var obj= {
                     StartDate:ImportOSR.StartDate,
                     EndDate:ImportOSR.EndDate,
                     BUID:ImportOSR.BUID,
                     BankBranchID:ImportOSR.BankBranchID,
                     LCPaymentType:ImportOSR.LCPaymentType,
                     CurrencyID:ImportOSR.CurrencyID,
                     nReportType:tabId,
                     ErrorMessage:ImportOSR.ErrorMessage,
                 }
                 //console.log(obj); return;
                 $http.post(_sBaseAddress + '/ImportOutstanding/GetsIOSDetail',JSON.stringify(obj)).then(
                       function (response) {
                           debugger;
                           var results=response.data;

                           if (results.length > 0) 
                           {
                               ///MakeDynamicObject
                               var MyDynamicList=[];
                               var  nLCID=0;
                               var  nTotalValue=0;
                               for (var i=0; i<results.length;i++) 
                               {
                                   if(results[i]!=null &&  results[i].LCID!=nLCID)
                                   {
                                       var oDetails = [];
                                       //--------GetDetails-For-Same--LCID
                                       for (var j=0; j<results.length;j++) 
                                       {
                                           if(results[j].LCID==results[i].LCID)
                                           {
                                               oDetails.push(results[j]);
                                           }
                                           //Pending: if LCID>CurrenctLCID 'BREAK'
                                       }
                                       var oDynamic = new Object();
                                       oDynamic.InvoiceType=[];
                                       oDynamic.ImportLCDateStr=results[i].ImportLCDateStr;
                                       oDynamic.LCNo=results[i].LCNo;
                                       
                                       oDynamic.InvoiceNo=GetMergeValue(oDetails,'InvoiceNo');
                                       oDynamic.DateofInvoiceStr=GetMergeValue(oDetails,'DateofInvoiceStr');
                                       oDynamic.PINo =GetMergeValue(oDetails,'PINo');
                                       oDynamic.FileNo =GetMergeValue(oDetails,'FileNo');
                                       
                                       oDynamic.ProductName=[];
                                       oDynamic.MUnit=[];
                                       oDynamic.ContractorName=results[i].ContractorName;
                                       oDynamic.Qty =[];
                                       oDynamic.UnitPrice =[];
                                       oDynamic.Qty_Invoice =[];
                                       oDynamic.Qty_PI =[];
                                       oDynamic.value =[];
                                       oDynamic.Qty_TR = [];
                                       oDynamic.GRNNo = [];
                                       oDynamic.Qty_StockIn = [];
                                       oDynamic.Qty_Short = [];
                                       oDynamic.BLNo = [];
                                       oDynamic.BLDateStr = [];

                                       oDynamic.ShipmentDateStr=[];
                                       oDynamic.ExpireDateStr=[];
                                       oDynamic.Amount_PI=[];
                                       oDynamic.CnFSendDateStr=[];
                                       oDynamic.InvoiceStatusSt=[];
                                       
                                       for (var k=0; k<oDetails.length;k++) 
                                       {
                                           oDynamic.InvoiceType.push(oDetails[k].InvoiceType);
                                           //oDynamic.LCNo.push(oDetails[k].LCNo);
                                           //oDynamic.InvoiceNo.push(oDetails[k].InvoiceNo);
                                           oDynamic.ProductName.push(oDetails[k].ProductName);
                                           oDynamic.MUnit.push(oDetails[k].MUnit);
                                           //oDynamic.ContractorName.push(oDetails[k].ContractorName);
                                           oDynamic.Qty.push(oDetails[k].Qty);
                                           oDynamic.UnitPrice.push(oDetails[k].UnitPrice);
                                           oDynamic.Qty_Invoice.push(oDetails[k].Qty_Invoice);
                                           oDynamic.Qty_PI.push(oDetails[k].Qty_PI);
                                           //oDynamic.PINo.push(oDetails[k].PINo);
                                           oDynamic.value.push(oDetails[k].value); if(results.length!=i+1)nTotalValue+=oDetails[k].value;
                                               
                                           oDynamic.Qty_TR.push(oDetails[k].Qty_TR);
                                           oDynamic.GRNNo.push(oDetails[k].GRNNo);
                                           oDynamic.Qty_StockIn.push(oDetails[k].Qty_StockIn);
                                           oDynamic.Qty_Short.push(oDetails[k].Qty_Short);
                                           oDynamic.BLNo.push(oDetails[k].BLNo);
                                           oDynamic.BLDateStr.push(oDetails[k].BLDateStr);

                                           //oDynamic.DateofInvoiceStr.push(oDetails[k].DateofInvoiceStr);
                                           oDynamic.ShipmentDateStr.push(oDetails[k].ShipmentDateStr);
                                           oDynamic.ExpireDateStr.push(oDetails[k].ExpireDateStr);
                                           oDynamic.Amount_PI.push(oDetails[k].Amount_PI);
                                           oDynamic.CnFSendDateStr.push(oDetails[k].CnFSendDateStr);
                                           oDynamic.InvoiceStatusSt.push(oDetails[k].InvoiceStatusSt);
                                       }    
                                       if(results.length==i+1)
                                       {
                                           oDynamic.value=[];
                                           oDynamic.value.push(nTotalValue);
                                       }
                                       MyDynamicList.push(oDynamic);
                                       }
                                       nLCID = results[i].LCID;
                                    }

                               results=MyDynamicList;
                               console.log(MyDynamicList);
                               //return;
                               //set LC Open
                               if(tabId ==1){
                                   $scope.LCOpengridOptionsgridOptions.data= results;
                               }
                                   //set ShipmenmentInTransit
                               else if(tabId==2){
                                   $scope.ShipmenmentInTransitgridOptions.data= results;
                               }
                                   //set ShipmenDone
                               else if(tabId==3){
                                   $scope.ShipmenDonegridOptions.data= results;
                               }
                               //set DocInBanks
                               else if(tabId==4){
                                   $scope.DocInBanksgridOptions.data= results;
                               }
                                   //set DocInCnFs
                               else if(tabId==5){
                                   $scope.DocInCnFsgridOptions.data= results;
                               }
                                   //set GoodsInTransits
                               else if(tabId==6){
                                   $scope.GoodsInTransitsgridOptions.data= results;
                               }
                           } 
                           else {
                               msModal.Message({ headerTitle: '', bodyText: 'No Data Found !!', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                              
                               return;
                           }
                       },
                       function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
                 );
             }

            function GetMergeValue(nList,nItem)
            {
                var tempList=[];var IsDuplicate=false;
                for(var i=0; i<nList.length; i++)
                {
                    if(nList[i][nItem]!='')
                        tempList.push(nList[i][nItem]);
                    else
                        tempList.push('-');

                    if(i>0 && nList[i][nItem]!=nList[i-1][nItem])
                    {
                        IsDuplicate=true;
                    }
                }

                var tempReturnList=[];
                tempReturnList.push(nList[0][nItem]);
                //tempReturnList.push(nList[0][nItem]);

                if(IsDuplicate)
                    return tempList
                else
                    return tempReturnList;
            }

            this.Print = function(tabId){

                 var  sTempString =  "";

                 var ImportOSR =$scope.ImportOSR;
                //JSON.parse(sessionStorage.getItem("ImportOSR"));

                 var  sTempString =ImportOSR.BUID+'~'+ImportOSR.CurrencyID+'~'+ ImportOSR.StartDate+'~'+ImportOSR.EndDate+'~'+ImportOSR.BankBranchID+'~'+ImportOSR.LCPaymentType+'~'+tabId+'~'+ImportOSR.ErrorMessage;

                 window.open(_sBaseAddress + '/ImportOutstanding/PrintDetailsPreview?sTempString='+sTempString, "_blank");
             };

            this.PrintXL = function(tabId){

                 var  sTempString =  "";

                 var ImportOSR =JSON.parse(sessionStorage.getItem("ImportOSR"));
                 var  sTempString =ImportOSR.BUID+'~'+ImportOSR.CurrencyID+'~'+ ImportOSR.StartDate+'~'+ImportOSR.EndDate+'~'+ImportOSR.BankBranchID+'~'+ImportOSR.LCPaymentType+'~'+tabId+'~'+ImportOSR.ErrorMessage;

                 window.open(_sBaseAddress + '/ImportOutstanding/PrintDetailsPreviewXL?sTempString='+sTempString, "_blank");
             };
             
            //TAb selection
            this.tab = 1;
            this.SetTab = function (tabId)
            {
                this.tab = tabId;
            }
            this.IsSet = function (tabid)
            {
                //this.Refresh(tabid);
                return this.tab === tabid;
            }

        });


    </script>





