@{
    ViewBag.Title = "Lot Assign";
}
@model ESimSol.BusinessObjects.LotParent
    <div ng-app="LotParentModule">
        <div ng-controller="LotParentController" style="width:99.5%">
           <fieldset>
               <legend>Lot Info:</legend>
               <div class="col-md-12">
                   <div class="col-md-1 text-right"><label>Date:</label></div>
                   <div class="col-md-2"><input type="text" ng-model="LotParent.OrderDateInString" style="width:100%" disabled /></div>
                   <div class="col-md-1 text-right"><label>Order:</label></div>
                   <div class="col-md-2"><input type="text" ng-model="LotParent.DyeingOrderNo" style="width:100%" disabled /></div>
                   <div class="col-md-1 text-right"><label>Qty:</label></div>
                   <div class="col-md-2"><input type="text" ng-model="LotParent.Qty" style="width:100%" disabled /></div>
                   <div class="col-md-1 text-right"><label>Party:</label></div>
                   <div class="col-md-2"><input type="text" ng-model="LotParent.ContractorName" style="width:100%" disabled /></div>
               </div>
           </fieldset>
            <div class="ui-grid-top-panel" style="padding-top:5px">
                <div class="row">
                    <div class="form-inline">
                        <input class="form-control" ng-show="opt_inhouse" ng-model="LotParent.txtLotNo" placeholder="Type Lot No & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownLot($event)" style="width:210px; height:24px; margin-left:20px" required />
                        <button type="button" ng-show="opt_inhouse" class="btn btn-primary btn-xs" aria-label="right Align" ng-click="PickLots()" ng-disabled="disabled"><span aria-hidden="true" class="glyphicon glyphicon-ok"> Pick </span></button>
                        <input class="form-control number" ng-show="opt_inhouse" ng-model="LotParent.txtLotQty" placeholder="Type Qty & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownLotQty($event)" style="width:110px; height:24px; margin-left:20px" required />
                        <button type="button" ng-show="opt_inhouse" class="btn btn-success btn-xs" aria-label="right Align" ng-click="AddLot()" ng-disabled="disabled"><span aria-hidden="true" class="glyphicon glyphicon-plus"> Add </span></button>
                        <button type="button" ng-show="opt_inhouse" class="btn btn-danger btn-xs" aria-label="right Align" style="float:right; margin-right:5%" ng-click="Remove_LotParent()" ng-disabled="disabled"><span aria-hidden="true" class="glyphicon glyphicon-trash"> Remove </span></button>

                        <input class="form-control" ng-show="opt_outside" ng-model="LotParent.txtOrderNo" placeholder="Type Order No & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownOrder($event)" style="width:210px; height:24px; margin-left:20px" required />
                        <button type="button" ng-show="opt_outside" class="btn btn-primary btn-xs" aria-label="right Align" ng-click="PickOrderDetails()" ng-disabled="disabled"><span aria-hidden="true" class="glyphicon glyphicon-ok"> Pick </span></button>
                        <input class="form-control number" ng-show="opt_outside" ng-model="LotParent.txtLotQty_Out" placeholder="Type Qty & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownLotQty_Out($event)" style="width:110px; height:24px; margin-left:20px" required />
                        <button type="button" ng-show="opt_outside" class="btn btn-success btn-xs" aria-label="right Align" ng-click="AddLot_Out()" ng-disabled="disabled"><span aria-hidden="true" class="glyphicon glyphicon-plus"> Add </span></button>

@*                        <button type="button" ng-show="opt_outside" class="btn btn-danger btn-xs" aria-label="right Align" style="float:right; margin-right:5%" ng-click="Remove_LotParent()" ng-disabled="disabled"><span aria-hidden="true"> Remove </span></button>*@
                    </div>
                </div>
            </div>
            <div style="width:99.5%;" ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-edit ui-grid-row-edit class="grid"></div>
            <div class="row" style="width:100%;">
                <fieldset style="height:60px; margin:10px 0 0 20px">
                    <legend>Action</legend>
                    <div class="row col-md-12 text-right">
                        <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Close</button>
                    </div>
                </fieldset>
            </div>
        </div>
    </div>

    <style type="text/css">
        .form-control {
            height: 26px;
            padding: 0px 6px;
            font-size: 12px;
        }

        .grid {
            height: 380px;
            width: 99%;
        }

        .col-md-1 .col-md-2 .col-md-3 .col-md-4 {
            padding: 5px 5px 5px 5px;
        }

        .custom-pagination {
            margin-top: -15px;
            margin-bottom: -15px;
        }

        .spacing {
            padding-bottom: 5px;
        }
    </style>

    <script type="text/javascript">

        var pager =[];
        var _nBUID=0;
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oLotParent =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _nBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
        var _bIsInHouse = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.IsInHouse));
        
        var oDUDetail = JSON.parse(sessionStorage.getItem('DUDetail'));

        console.log(oLotParent);
        var  LotParentModule = angular.module('LotParentModule', ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection','ui.grid.resizeColumns','ui.grid.edit', 'ui.grid.cellNav','ms.service']);
        LotParentModule.controller('LotParentController', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession) {
            debugger;
            $scope.LotParent=oLotParent;
            $scope.gridOptions ={
                enableSorting: true,
                enableFullRowSelection: true,
                //enableRowHeaderSelection: false,
                enableSelectAll: false,
                multiSelect:false,
                enableHorizontalScrollbar: uiGridConstants.scrollbars.Always,
                //enableVerticalScrollbar : false,
                columnDefs: [
                    { field: 'DyeingOrderNo', name: 'OrderNo', width:'10%', enableCellEdit: false },
                    { field: 'Qty_Order', name: 'OrderQty', width: '8%', cellClass:'text-right', cellFilter:'number:2' , enableCellEdit: false},
                    { field: 'ProductNameLot', name: 'Yarn Count', width:'12%', enableCellEdit: false},
                    { field: 'LotNo', name: 'Yarn Lot No', width:'12%', enableCellEdit: false},
                    { field: 'BalanceLot', name: 'Balance(Lot) Qty', width: '10%',cellClass:'text-right', cellFilter:'number:2' , enableCellEdit: false},
                    { field: 'Qty', name: 'Qty', width: '10%',enableCellEdit: _bIsInHouse, cellClass:'text-right number', cellFilter:'number:2'},
                    { field: 'Balance', name: 'Balance(Order)', width: '10%',enableCellEdit: _bIsInHouse, cellClass:'text-right number', cellFilter:'number:2'},
                    { field: 'LotParentDateSt', name: 'Assign Date', width:'14%',cellClass:'text-center', enableCellEdit: false },
                    { field: 'Qty_Batch_Out', name: 'Batch Qty', width: '10%',cellClass:'text-right', cellFilter:'number:2' , enableCellEdit: false},
                     { field: 'OperationUnitName', name: 'Store', width:'10%', enableCellEdit: false},
                ],
                data:oLotParent.LotParents,
                onRegisterApi:function(gridApi)
                {
                    $scope.gridApi = gridApi;
                    $scope.gridApi.selection.clearSelectedRows();

                    $scope.gridApi.edit.on.afterCellEdit($scope,function(rowEntity, colDef, newValue, oldValue){ //console.log(rowEntity);
                        if(newValue != oldValue)
                            $scope.Edit_LotParent(rowEntity, oldValue, $scope.gridOptions.data.indexOf(rowEntity));
                    })
                }
            };
            
            if(oDUDetail!=null)
                $scope.LotParent.Qty= oDUDetail.Qty;

            $scope.opt_inhouse= _bIsInHouse;
            $scope.opt_outside= !_bIsInHouse;
            
            //=========== FOR IN OUT SIDE =================
            $scope.SearchKeyDownOrder = function (e){
                //debugger;
                var code = (e.keyCode ? e.keyCode : e.which);
                if (code == 13)
                {
                    var sOrderRefNo=$scope.LotParent.txtOrderNo;
                    var txtOrder = $.trim(sOrderRefNo);
                    if(txtOrder=="" || txtOrder==null)
                    {
                        alert("Type Order No and Press Enter");
                        return;
                    }
                    $scope.PickOrderDetails(txtOrder);
                }
            };
            $scope.PickOrderDetails= function (txtOrder)
            {
                debugger;
                txtOrder= (txtOrder==undefined? "" : txtOrder);
                var oLotParent= {
                    LotID:$scope.LotParent.LotID,
                    ContractorID:$scope.LotParent.ContractorID,
                    IsInHouse:_bIsInHouse,
                    DyeingOrderNo: txtOrder,
                };
                debugger;
                var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                $http.post(_sBaseAddress+'/DyeingOrder/Gets_Lot',$.param(oLotParent), config).then(
                            function (response)
                            {
                                debugger;
                                var results=jQuery.parseJSON(response.data);
                                debugger;
                                if(results.length>0 && results[0].ErrorMessage=="")
                                {
                                    //$scope.LotParent.LotParentDetails=result;

                                    var oDetailColumns = [];
                                    var oColumn = { field: 'DyeingOrderNo', name:'Order No', width:'15%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                                    oColumn = { field: 'LotNo', name:'LotNo', width:'15%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                                    oColumn = { field: 'ProductName', name:'ProductName', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                                    oColumn ={ field: 'Balance', name:'Qty', width:'15%',cellClass: 'text-left', cellFilter:'number:2',enableCellEdit:false };oDetailColumns.push(oColumn);
                                    oColumn ={ field: 'BalanceLot', name:'Qty(Lot)', width:'15%',cellClass: 'text-left', cellFilter:'number:2',enableCellEdit:false };oDetailColumns.push(oColumn);
                                   
                                    var modalObj={
                                        size:'lg',
                                        modalcontroller:'',
                                        url:_sBaseAddress+'/Home/Modal',
                                        appcontroller:'DUProGuideLineCtrl',
                                        objs:results,
                                        multiSelect:false,
                                        pickertitle:'Order List',
                                        searchingbyfieldName:'DyeingOrderNo',
                                        columns:oDetailColumns
                                    }
                                    var modalInstance=msModal.Instance(modalObj);
                                   
                                    modalInstance.result.then(function (result)
                                    {
                                        var oLotParents =  $scope.gridOptions.data;

                                        //if(result.Qty > $scope.LotParent.Qty)
                                        //{
                                        //    alert("Order Qty Is Greater Than Balance!"); return;
                                        //}

                                        for(var i=0; i<oLotParents.length; i++)
                                        {
                                            if(oLotParents[i].DyeingOrderID==result.DyeingOrderID)
                                            {
                                                alert("Duplicate Entry Not Possible!"); return;
                                            }
                                        }
                                        //SAVE LOT PARENT
                                        $scope.LotParent.txtOrderNo= result.DyeingOrderNo;
                                        $scope.LotParent.txtLotQty_Out= result.Balance;
                                        $scope.LotParent.SelectedLot= result;

                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });

                                }else {alert("No Data Found!!");}
                            },
                                function (response) { alert(response.statusText);}
                        );
            };
            
            $scope.SearchKeyDownLotQty_Out = function (e){
                //debugger;
                var code = (e.keyCode ? e.keyCode : e.which);
                if (code == 13)
                {
                    $scope.AddLot_Out();
                }
            };
            $scope.AddLot_Out = function ()
            {
                if(!parseFloat($scope.LotParent.SelectedLot.LotParentID)>0)
                {
                    alert("Please pick a order and try again!!"); return;
                }
                if(!parseFloat($scope.LotParent.txtLotQty_Out)>0)
                {
                    alert("Lot Qty Should be greater than zero!!"); return;
                }

                if(parseFloat($scope.LotParent.txtLotQty_Out) > $scope.LotParent.SelectedLot.Qty)
                {
                    alert("Order Qty Is Greater Than Balance!"); return;
                }

                $scope.LotParent.SelectedLot.Qty=parseFloat($scope.LotParent.txtLotQty_Out);

                $scope.Transfer_Lot($scope.LotParent.SelectedLot);
            }
            $scope.Transfer_Lot = function (result) 
            {
                var oLotParent= 
                    {
                    LotID: result.LotID,
                    ContractorID: $scope.LotParent.ContractorID,
                    DyeingOrderID:  $scope.LotParent.DyeingOrderID,
                    DyeingOrderID_Out:  result.DyeingOrderID,
                    ParentType: result.ParentType,
                    ParentID: result.ParentID,
                    LotParentID: result.LotParentID,
                    ProductID: $scope.LotParent.ProductID,
                    UnitPrice: result.UnitPrice,
                    CurrencyID: result.CurrencyID,
                    Note: "Assigned Dyeing Lot (outside)",
                    Qty: result.Qty,
                    Balance: result.Qty
                };

                $http.post(_sBaseAddress+'/DyeingOrder/Transfer_Lot',JSON.stringify(oLotParent)).then(
                    function (response) {
                        var result=jQuery.parseJSON(response.data);
                        console.log(result);
                        if(result.LotParentID>0 && result.ErrorMessage=="")
                        {
                            debugger;
                            alert("Lot Transfered Successfully!!");
                            
                            var isExist=false;

                            for(var i=0; i<$scope.gridOptions.data.length; i++)
                            {
                                if($scope.gridOptions.data[i].LotParentID==result.LotParentID)
                                {
                                    isExist=true;  $scope.gridOptions.data[i]=result;
                                }
                            }

                            if(!isExist)
                                $scope.gridOptions.data.push(result);

                            $scope.LotParent.txtOrderNo= "";
                            $scope.LotParent.txtLotQty_Out= "";
                            $scope.LotParent.SelectedLot= {};
                        }
                        else
                        {
                            alert(result.ErrorMessage);
                        }
                    },
                    function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
            );
            };
            //================== OUT END ==================

            $scope.PickLots= function (txtLot)
            {
                debugger;
                txtLot= (txtLot==undefined? "" : txtLot);
                var oLotParent= {
                    DyeingOrderID:$scope.LotParent.DyeingOrderID,
                    ContractorID:$scope.LotParent.ContractorID,
                    IsInHouse:_bIsInHouse,
                    LotNo: txtLot,
                };
                debugger;
                var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                $http.post(_sBaseAddress+'/DyeingOrder/Gets_Lot',$.param(oLotParent), config).then(
                            function (response)
                            {
                                debugger;
                                var results=jQuery.parseJSON(response.data);
                                debugger;
                                if(results.length>0)
                                {
                                    //$scope.LotParent.LotParentDetails=result;
                                    var oDetailColumns = [];
                                    var oColumn = { field: 'LotNo', name:'LotNo', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                                    oColumn = { field: 'ProductName', name:'ProductName', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                                    oColumn = { field: 'StoreName', name:'StoreName', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                                    oColumn ={ field: 'Qty', name:'Qty', width:'15%',cellClass: 'text-left', cellFilter:'number:2',enableCellEdit:false };oDetailColumns.push(oColumn);
                                   
                                    var modalObj={
                                        size:'lg',
                                        modalcontroller:'',
                                        url:_sBaseAddress+'/Home/Modal',
                                        appcontroller:'DUProGuideLineCtrl',
                                        objs:results,
                                        multiSelect:false,
                                        pickertitle:'Order List',
                                        searchingbyfieldName:'LotNo',
                                        columns:oDetailColumns
                                    }
                                    var modalInstance=msModal.Instance(modalObj);
                                   
                                    modalInstance.result.then(function (result)
                                    {
                                        var oLotParents =  $scope.gridOptions.data;

                                        for(var i=0; i<oLotParents.length; i++)
                                        {
                                            if(oLotParents[i].LotID==result.LotID)
                                            {
                                                alert("Duplicate Entry Not Possible!"); return;
                                            }
                                        }
                                        $scope.LotParent.txtLotNo= result.LotNo;
                                        $scope.LotParent.txtLotQty= result.Qty;
                                        $scope.LotParent.SelectedLot= result;

                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });

                                }else {alert("No Data Found!!");}
                            },
                                function (response) { alert(response.statusText);}
                        );
            };

            //=========== FOR IN HOUSE =================
            $scope.LotParent.SelectedLot={};
            $scope.SearchKeyDownLot = function (e){
                //debugger;
                var code = (e.keyCode ? e.keyCode : e.which);
                if (code == 13)
                {
                    var sOrderRefNo=$scope.LotParent.txtLotNo;
                    var txtLot = $.trim(sOrderRefNo);
                    if(txtLot=="" || txtLot==null)
                    {
                        alert("Type Lot No and Press Enter");
                        return;
                    }
                    $scope.PickLots(txtLot);
                }
            };
         
            $scope.SearchKeyDownLotQty = function (e){
                //debugger;
                var code = (e.keyCode ? e.keyCode : e.which);
                if (code == 13)
                {
                    $scope.AddLot();
                }
            };
            $scope.AddLot = function ()
            {
                if(!parseFloat($scope.LotParent.SelectedLot.Qty)>0)
                {
                    alert("Please pick a lot and try again!!"); return;
                }
                if(!parseFloat($scope.LotParent.txtLotQty)>0)
                {
                    alert("Lot Qty Should be greater than zero!!"); return;
                }

                if(parseFloat($scope.LotParent.txtLotQty) > $scope.LotParent.SelectedLot.Qty)
                {
                    alert("Order Qty Is Greater Than Balance!"); return;
                }
                $scope.LotParent.SelectedLot.LotParentID=0;
                $scope.LotParent.SelectedLot.Qty=parseFloat($scope.LotParent.txtLotQty);

                $scope.Save_LotParent($scope.LotParent.SelectedLot);
            }
            //================== IN END ==================

            $scope.Save_LotParent = function (result) 
            {
                var oLotParent= {
                    LotID: result.LotID,
                    LotParentID: result.LotParentID,
                    ContractorID: $scope.LotParent.ContractorID,
                    ProductID: $scope.LotParent.ProductID,
                    DyeingOrderID: result.DyeingOrderID,
                    ParentType: result.ParentType,
                    ParentID: result.ParentID,
                    UnitPrice: result.UnitPrice,
                    CurrencyID: result.CurrencyID,
                    Note: "Assigned Dyeing Lot (InHouse)",
                    Qty: result.Qty,
                    Balance: result.Qty
                };

                $http.post(_sBaseAddress+'/LotStockReport/Save_LotParent',JSON.stringify(oLotParent)).then(
                    function (response) {
                        var result=jQuery.parseJSON(response.data);
                        console.log(result);
                        if(result.LotParentID>0 && result.ErrorMessage=="")
                        {
                            debugger;
                            alert("Data Saved Successfully!!");
                            $scope.gridOptions.data.push(result);

                            $scope.LotParent.txtLotNo= "";
                            $scope.LotParent.txtLotQty= "";
                            $scope.LotParent.SelectedLot= {};
                        }
                        else
                        {
                            alert(result.ErrorMessage);
                        }
                    },
                    function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
            );
            };
            $scope.Edit_LotParent = function (rowentity, oldValue, index) 
            {
                var oLotParent= {
                    LotID: rowentity.LotID,
                    LotParentID: rowentity.LotParentID,
                    ContractorID: $scope.LotParent.ContractorID,
                    ProductID: $scope.LotParent.ProductID,
                    DyeingOrderID: rowentity.DyeingOrderID,
                    ParentType: rowentity.ParentType,
                    ParentID: rowentity.ParentID,
                    UnitPrice: rowentity.UnitPrice,
                    CurrencyID: rowentity.CurrencyID,
                    Note: "Assigned Dyeing Lot (InHouse)",
                    Qty: rowentity.Qty,
                    Balance: rowentity.Balance
                };

                $http.post(_sBaseAddress+'/DyeingOrder/Edit_Lot',JSON.stringify(oLotParent)).then(
                    function (response) {
                        var result=jQuery.parseJSON(response.data);
                        console.log(result);
                        if(result.LotParentID>0 && result.ErrorMessage=="")
                        {
                            debugger;
                            alert("Data Saved Successfully!!");
                            $scope.gridOptions.data[index]=result;

                            $scope.LotParent.txtLotNo= "";
                            $scope.LotParent.txtLotQty= "";
                            $scope.LotParent.SelectedLot= {};
                        }
                        else
                        {
                            debugger;
                            $scope.gridOptions.data[index].Balance=oldValue;
                            alert(result.ErrorMessage);
                        }
                    },
                    function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
            );
            };
            $scope.Remove_LotParent= function ()
            {
                var oLotParent = $scope.gridApi.selection.getSelectedRows()[0];
                if(oLotParent==null || oLotParent.LotParentID<=0)
                {
                    alert("Select At least One item !");
                    return;
                }
                if(parseFloat(oLotParent.Qty_Batch_Out)>0)
                {
                    alert("Selected item has already been used in Batch!");
                    return;
                }
                var SelectedRowIndex=$scope.gridOptions.data.indexOf(oLotParent);
                if (!confirm("Confirm to Remove?")) return ;

                $http.post(_sBaseAddress+'/LotStockReport/Delete_LotParent',JSON.stringify(oLotParent)).then(
                   function (response) {
                       var result=jQuery.parseJSON(response.data);
                       console.log(result);
                       if(result=="Deleted")
                       {
                           debugger;
                           alert("Data Deleted Successfully!!");
                           $scope.gridOptions.data.splice(SelectedRowIndex,1);
                       }
                       else
                       {
                           alert(result);
                       }
                   },
                   function (response) { alert(response.statusText);});
            };

            $scope.Close=function ()
            {
                debugger;
                //window.location.href = sessionStorage.getItem("BackLink");
                userSession.previousPage();
            };
        });

    </script>




