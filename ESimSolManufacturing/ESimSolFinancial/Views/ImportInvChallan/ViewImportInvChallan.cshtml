@{
    ViewBag.Title = "Add Invoice Receive";
}
@model ESimSol.BusinessObjects.ImportInvChallan

<div style="padding-top:5px" ng-app="ImportInvChallanAPP" ng-controller="ImportInvChallanCtrl" class="form-horizontal regionImportInvChallan">
    <fieldset>
        <legend>Invoice Info</legend>
        <div class="row col-md-12">
            <div class="col-md-2 text-right"><label class="control-label">Challan No:</label></div>
            <div class="col-md-3 text-left">
                <input ng-model="ImportInvChallan.ChallanNo" disabled="disabled" class="form-control" required />
            </div>
            <div class="col-md-2 text-right"><label class="control-label">Invoice Date:</label></div>
            <div class="col-md-3 text-left">
                <div class="input-group date date-container">
                    <input type="text" class="form-control" ng-model="ImportInvChallan.ChallanDateSt" ng-disabled="disabled"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                </div>
            </div>
            <div class="col-md-2 text-right"><label class="control-label"></label></div>
            <div class="col-md-3 text-left">
                
            </div>
        </div>
        <div class="row col-md-12">
            <div class="col-md-2 text-right"><label class="control-label">Vehicle No:</label></div>
            <div class="col-md-3 text-left">
                <input ng-model="ImportInvChallan.VehicleInfo" ng-disabled="disabled" class="form-control" required />
            </div>
            <div class="col-md-2 text-right"><label class="control-label">Driver Name:</label></div>
            <div class="col-md-3 text-left">
                    <input ng-model="ImportInvChallan.DriverName" ng-disabled="disabled" class="form-control" required />
            </div>
            <div class="col-md-2 text-right"><label class="control-label">Cotract No:</label></div>
            <div class="col-md-3 text-left">
                <input ng-model="ImportInvChallan.CotractNo" ng-disabled="disabled" class="form-control" required />
            </div>
        </div>
      
        <div class="row col-md-12">
            <div class="col-md-2 text-right"><label class="control-label">Remarks:</label></div>
            <div class="col-md-10 text-left">
                <input ng-model="ImportInvChallan.Note" ng-disabled="disabled" class="form-control" />
            </div>
        </div>
    </fieldset>
   
    <div class="ui-grid-top-panel">
        <div class="input-group">
            <div class="row col-md-12">
                <span class="input-group-btn">
                    <input ng-model="InvoiceNo" class="form-control" ng-keydown="SearchKeyDownPackingList($event)" placeholder="Type invoice No & Press Enter" required />
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PickPackingList()"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> </button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="editDetail()" ng-hide="hide"> <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> </button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="deleteDetail()" ng-hide="hide"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> </button>
                </span>
            </div>
           
        </div>
       
    </div>
    <div style="width: 100%; height:320px;" ui-grid="gridOptions" ui-grid-selection ui-grid-cellnav ui-grid-edit></div>
    <fieldset>
        <legend>Action</legend>
        <div class="row col-md-12 text-right">
            <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="save_Revise()" ng-hide="hide_Revise"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Save(Revise)</span> </button>
            <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Approve()" ng-hide="hide_Approve"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Approve</span> </button>
            <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Save()" ng-hide="hide_Save"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true">Save</span> </button>
            <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
        </div>
    </fieldset>

 
</div>


<style type="text/css">

    .grid{
        width:100%; 
        height:320px;
    }
    .regionImportInvChallan .form-horizontal .control-label{
        padding-top:3px;
    }
    .regionImportInvChallan .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .regionImportInvChallan .col-md-12{
        width:100%;
        padding-right:5px;
        padding-left:5px;
        margin-bottom:5px;
    }
    .regionImportInvChallan .col-md-2{
        width:13%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionImportInvChallan .col-md-3{
        width:20%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionImportInvChallan .col-md-4{
        width:28%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionImportInvChallan .col-md-5{
        width:40%;
        padding-right:5px;
        padding-left:0px;
    }

     .regionImportInvChallan .col-md-10{
        width:86%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionImportInvChallan .btn-sm{
         padding:3px 10px;
     }
     .regionImportInvChallan .input-group-addon{
         padding: 4px 8px;
     }
</style>

<script type="text/javascript">

    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oImportInvChallan =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oImportInvChallanDetails =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ImportInvChallanDetails));
    var ImportInvChallanModule = angular.module('ImportInvChallanAPP', ['ngAnimate', 'ui.bootstrap', 'ui.grid', 'ui.grid.selection', 'ui.grid.edit','ms.service']);
    ImportInvChallanModule.controller('ImportInvChallanCtrl', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession) {
        debugger
        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });
        //$scope.disabled= userSession.viewOption() || (oImportInvChallan.IsGRN==true)?true:false;
        //$scope.hide= userSession.viewOption()|| (oImportInvChallan.ApproveBy!=0)?true:false || (oImportInvChallan.ReceivedBy!=0)?true:false;

        //$scope.disabled= userSession.viewOption() || (oImportInvChallan.ApproveBy!=0)?true:false || (oImportInvChallan.IsGRN==true)?true:false;
        //$scope.hide= userSession.viewOption()|| (oImportInvChallan.ApproveBy!=0)?true:false || (oImportInvChallan.IsGRN==true)?true:false;
        
        var viewType = sessionStorage.getItem("Operation");
        if (viewType == 'View')
        {
            $scope.disabled= true;
            $scope.hide=true;

            $scope.hide_Revise=true;
            $scope.hide_Approve=true;
            $scope.hide_Save=true;
        }
        else  if (viewType == 'Approve')
        {
            $scope.disabled= true;
            $scope.hide=true;
            $scope.hide_Revise=true;
            $scope.hide_Approve=false;
            $scope.hide_Save=true;
        }
      
        else
        {
            $scope.disabled= false;
            $scope.hide=false;

            $scope.hide_Revise=true;
            $scope.hide_Approve=true;
            $scope.hide_Save=false;
        }

        //$scope.Currencys=oCurrencys;
        //$scope.WorkingUnits=oWorkingUnits;
        $scope.ImportInvChallan=oImportInvChallan;
        
       
        //uigrid
        //$scope.gridOptions = {
        //    enableSorting: true,
        //    enableRowSelection: true,
        //    //enableRowHeaderSelection: false,
        //    enableSelectAll: false,
        //    multiSelect: false,
        //    showColumnFooter: true,
        //    enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
        //    //enableVerticalScrollbar : false,
        //    columnDefs: [
               
        //        { field: 'ProductName', name: 'Product Name', width: '15%', enableCellEdit: false, headerCellClass: 'blue' },
        //        { field: 'LotNo', name: 'Lot No', width: '12%', enableCellEdit: false },
        //        { field: 'Qty', name: 'Qty', cellClass: 'text-right', width: '10%', cellFilter: 'number: 2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
        //        { field: 'Qty_IPL', name: 'Qty_IPL', cellClass: 'text-right', width: '15%', cellFilter: 'number: 2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
        //        { field: 'Qty_GRN', name: 'Qty_GRN', cellClass: 'text-right', width: '15%', cellFilter: 'number: 2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
        //        { field: 'NumberOfPack', name: 'NumberOfPack', cellClass: 'text-right', width: '15%', cellFilter: 'number: 2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
        //        { field: 'QtyPerPack', name: 'QtyPerPack', width: '15%' },
        //        { field: 'ImportInvoiceNo', name: 'Invoice No', width: '15%', enableCellEdit: false, headerCellClass: 'blue' }
        //    ],
        //    data: oImportInvChallanDetails,
        //    onRegisterApi: function (gridApi) {
        //        $scope.gridApi = gridApi;
        //    }
        //};

        var oDetailColumns = [];
        var oColumn = { field: 'ProductName', name:'Product Name', width:'10%',enableCellEdit:false };oDetailColumns.push(oColumn);
        oColumn ={ field: 'LotNo', name:'Lot No', width:'12%',enableCellEdit:false };oDetailColumns.push(oColumn);
       
        oColumn ={ field: 'NumberOfPack', name: 'NumberOfPack', cellClass: 'text-right',width: '10%' , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:0'};oDetailColumns.push(oColumn);
        oColumn ={ field: 'QtyPerPack', name: 'QtyPerPack', cellClass: 'text-right',width: '10%' , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:0'};oDetailColumns.push(oColumn);
        oColumn ={ field: 'Qty', name: 'Qty', cellClass: 'text-right',width: '10%' , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:0'};oDetailColumns.push(oColumn);
        //oColumn ={ field: 'MUName', name:'Unit', width:'7%',enableCellEdit:false };oDetailColumns.push(oColumn);
        oColumn ={ field: 'Qty_GRN', name:'Qty(GRN)', width:'12%',enableCellEdit:false };oDetailColumns.push(oColumn);
        oColumn ={ field: 'ImportInvoiceNo', name:'Invoice No', width:'7%',enableCellEdit:false };oDetailColumns.push(oColumn);

        ////Commercial invoice LC Detail
        $scope.gridOptions = {
            showColumnFooter: true,
            multiSelect: false,
            enableRowSelection: true,  
            enableSelectAll: false,
            columnDefs:oDetailColumns,
            data:oImportInvChallanDetails,
            onRegisterApi: function (gridApi) {
                $scope.gridDetailApi = gridApi;
                gridApi.edit.on.afterCellEdit($scope,
                  function (rowEntity, colDef, newValue, oldValue) 
                  { 
                      debugger;
                      rowEntity.Qty= parseFloat(parseFloat(rowEntity.NumberOfPack )* parseFloat(rowEntity.QtyPerPack));
                      //$scope.SetTotal();
                      return rowEntity;
                  });
            }
        };
    

        $scope.Save = function () 
        {
          
            debugger;
         //   if(!$scope.Validation()) return;
            //var oDUProGuideLine= $scope.DUProGuideLine;
            //oDUProGuideLine.IssueDate = new Date($scope.DUProGuideLine.IssueDateST);
           

            $scope.ImportInvChallan.ChallanDate = new Date($scope.ImportInvChallan.ChallanDateSt);
            $scope.ImportInvChallan.ImportInvChallanDetails = $scope.gridOptions.data;

            debugger;
            $http.post(_sBaseAddress+'/ImportInvChallan/Save',JSON.stringify($scope.ImportInvChallan)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    console.log(result);
                    if(result.ImportInvChallanID>0 && (result.ErrorMessage==""||result.ErrorMessage==null))
                    {
                        debugger;
                        alert("Data Saved Successfully!!");
                        $scope.ImportInvChallan=result;
                        userSession.setData('ImportInvChallans',$scope.ImportInvChallan);
                        userSession.previousPage();
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        );
        };

    
        $scope.Approve = function () {
            $scope.ImportInvChallan.ChallanDate = $scope.ImportInvChallan.ChallanDateSt;
            $scope.ImportInvChallan.ImportInvChallanDetails = $scope.gridOptions.data;

            $http.post(_sBaseAddress+'/ImportInvChallan/Approved',JSON.stringify($scope.ImportInvChallan)).then(
                             function (response) {   
                                 var result=jQuery.parseJSON(response.data);
                                 console.log(result);
                                 if(result.ImportInvChallanID>0)
                                 {
                                     debugger;
                                     $scope.ImportInvChallan=result;
                                     userSession.setData('ImportInvChallans',$scope.ImportInvChallan);
                                     userSession.previousPage();
                                     // msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                 }
                                 
                             },
                             function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                       );
        };

 

        $scope.close = function () {
            userSession.previousPage();
        };


        $scope.SearchKeyDownPackingList =  function (e) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtInvoiceNos = $.trim($scope.InvoiceNo);
                if(txtInvoiceNos=="" || txtInvoiceNos==null)
                {
                    alert("Type Invoice No and Press Enter");
                    return;
                }
                $scope.PickPackingList();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.InvoiceNos = '';
            }
        };
        $scope.PickPackingList= function () {
            var oImportInvChallanDetail = {
                ImportInvoiceNo: $.trim($scope.InvoiceNo)
            };
           
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/ImportInvChallan/GetsPackingList',$.param(oImportInvChallanDetail), config).then(
                    function (response)
                    {
                        var oColumns = [];
                        var oColumn = { field: 'ImportInvoiceNo', name: 'InvoiceNo',width: '20%'  };oColumns.push(oColumn);
                        oColumn = { field: 'LotNo', name: 'Lot No',width: '15%', enableSorting: false  };oColumns.push(oColumn);
                        oColumn = { field: 'Qty', name: 'Qty',width: '12%', enableSorting: false  };oColumns.push(oColumn);
                        oColumn = { field: 'NumberOfPack', name: 'NumberOfPack',width: '12%', enableSorting: false  };oColumns.push(oColumn);
                        oColumn = { field: 'QtyPerPack', name: 'QtyPerPack',width: '12%', enableSorting: false  };oColumns.push(oColumn);
                        oColumn = { field: 'Qty_IPL', name: 'Qty(Packing List)',width: '12%', enableSorting: false  };oColumns.push(oColumn);
                        oColumn = { field: 'Qty_GRN', name: 'Qty(GRN)',width: '12%', enableSorting: false  };oColumns.push(oColumn);
                        var results=jQuery.parseJSON(response.data);
                        var modalObj={
                            size:'lg',
                            title:'Packing List',
                            url:_sBaseAddress+'/Home/Modal',
                            modalController:'', 
                            appController:'ImportInvChallanCtrl', 
                            objs:results,
                            multiSelect:true,
                            pickertitle:' Packing List',
                            searchingbyfieldName:'ImportInvoiceNo',
                            columns:oColumns
                        }
                        var modalInstance=msModal.Instance(modalObj);
                        modalInstance.result.then(function (result)
                        {

                            angular.forEach(result,function(value,index){
                                $scope.gridOptions.data.push(value);
                            });
                            $scope.gridApi.grid.modifyRows($scope.gridOptions.data);


                        }, function () {
                            $log.info('Modal dismissed at: ' + new Date());
                        });
                    },
                        function (response) { alert(jQuery.parseJSON(response.data).Message);}
                );
        };


    

        $scope.deleteDetail = function () 
        {
            debugger;
            var data = $scope.gridApi.selection.getSelectedRows();
            if(data==null || data[0].length>0){
                msModal.Message({headerTitle : '', bodyText:"Select an item from list", sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            angular.forEach($scope.gridOptions.data, function (value, index)
            {
                if (value.ImportInvChallanDetailID == data[0].ImportInvChallanDetailID) {
                    $scope.gridOptions.data.splice(index, 1);
                }
            }, $scope.gridOptions.data);
            //$http.post('/ImportInvChallan/DeleteDetail', JSON.stringify(data[0])).then(
            //                function (response) 
            //                {
            //                    if (jQuery.parseJSON(response.data) == 'Deleted')
            //                    {
            //                        angular.forEach($scope.gridOptions.data, function (value, index)
            //                        {
            //                            if (value.ImportInvChallanDetailID == data[0].ImportInvChallanDetailID) {
            //                                $scope.gridOptions.data.splice(index, 1);
            //                            }
            //                        }, $scope.gridOptions.data);
            //                    }
            //                    else {
            //                        msModal.Message({headerTitle : '', bodyText:jQuery.parseJSON(response.data), sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
            //                    }
            //                },
            //                function (response) { alert(jQuery.parseJSON(response.data)); }
            //            );
        };


        $scope.Modal = function (obj, operation, url) {
            debugger;
            var modalInstance = $uibModal.open({
                //animation: $scope.animationsEnabled,
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'lg',
                templateUrl: 'ImportInvChallanDeatailModal.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'ImportInvChallanCtrl',
                resolve: {
                    obj: function () {
                        return { ImportInvChallan:$scope.ImportInvChallan, ImportInvChallanDetail: obj, operation: operation };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                if(operation=='add'){
                    $scope.gridOptions.data.push(result);
                    if(result.ImportInvChallan.ImportInvChallanID>0)
                    {
                        $scope.ImportInvChallan=result.ImportInvChallan;
                        userSession.setData('ImportInvChallans',$scope.ImportInvChallan);
                        $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                        $scope.gridApi.selection.selectRow($scope.gridOptions.data[0]);
                    }    
                }
                else{
                    $scope.gridOptions.data[$scope.index]=result;
                    $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                    $scope.gridApi.selection.selectRow($scope.gridOptions.data[$scope.index]);
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        
      



    });


    ImportInvChallanModule.controller('ModalInstanceCtrl', function ($scope, $http, $uibModalInstance, msModal, obj) {
        debugger;
        $scope.operation=obj.operation;
        $scope.ImportInvChallan=obj.ImportInvChallan;

        if(obj.ImportInvChallanDetail!=null){
            $scope.ImportInvChallanDetail = obj.ImportInvChallanDetail;
        }
        else{
            $scope.ImportInvChallanDetail={
                ImportInvChallanDetailID : 0,
                ImportInvChallanID : $scope.ImportInvChallan.ImportInvChallanID,
                ProductID : 0,
                ProductName : '',
                Type : 0,
                MUnitID : 0,
                UnitPrice : 0,
                LotID : 0,
                LotNo : '',
                StapleLength : '',
                BaleQty : 0,
                PartyGrossWeigth : 0,
                PartyPerBalePare : 0,
                ScaleGrossWeigth  : 0,
                ScalePerBalePare : 0,
                PartyTotalBalePare : 0,
                ScaleTotalBalePare : 0,
                PartyNetWeight : 0,
                ScaleNetWeight : 0,
                ImportInvChallan:null
            }
        }

      

    });

</script>


