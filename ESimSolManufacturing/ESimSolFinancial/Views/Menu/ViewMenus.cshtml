@model ESimSol.BusinessObjects.TMenu
<head>
    @{
        ViewBag.Title = "Menu List";
    }    
</head>
<body>
    <div id="winMenu" class="easyui-window" title="View Menu" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <table id="tblMenu"  class="easyui-datagrid" style="width:100%;height:245px"data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbarMenu' ">
                <thead>
                    <tr>
                        <th field="MenuName" width="250" align="left">Menu Name</th>
                        <th field="ControllerName" width="230" align="left">Controller Name</th>
                        <th field="ActionName" width="250" align="left">Action Name</th>
                        <th field="BUName" width="150" align="left">Business Unit</th>
                        <th field="IsWithBUInString" width="100" align="left">Is With BU</th>
                        <th field="ModuleNameText" width="100" align="left">Module Name</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarMenu">
                Menu Name : <input type="text" id="txtMenuName" style="width:110px;" /> Controller Name : <input type="text" id="txtControllerName" style="width:120px;" /> Action Name :<input type="text" id="txtActionName" style="width:110px;" />Business Unit:<select id="cboBU" style="width:110px;"></select> Module Name: <select id="cboModuleName" style="width:110px;"></select><input type="checkbox" id="chkIsWithBU" />Is With BU 
                <a id="btnAddMenu" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                <a id="btnRemoveMenu" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                <a id="btnRefreshMenu" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshGrid()">Refresh</a>                              
            </div>
       
        <fieldset class="actionfieldsetstyle">
            <legend>Actions : </legend>
            <a id="btnCloseMenu" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
        </fieldset>
    </div>
    <div id="winEditMenu" class="easyui-window" title="Edit Menu" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
            <tr>
                <td style="width:200px; text-align:right">
                    Menu Name:
                </td>
                <td style="width:300px">
                    <input type="text" style="width: 300px;" id = "txtEditMenuName"/></td>
            </tr>
            <tr>
                <td style="width:200px; text-align:right">
                    Controller Name :
                </td>
                <td style="width:300px">
                    <input type="text" style="width: 300px;" id="txtEditControllerName" />
                </td>
            </tr>
            <tr>
                <td style="width:200px; text-align:right">
                    Action Name :
                </td>
                <td style="width:300px">
                    <input type="text" style="width: 300px;" id="txtEditActionName" />
                </td>
            </tr>
            <tr>
                <td style="width:200px; text-align:right">
                    Business Unit:
                </td>
                <td style="width:300px">
                    <select id="cboBUForEdit" style="width:100%;"></select>
                </td>
            </tr>
            <tr>
                <td style="width:200px; text-align:right">
                    With BU :
                </td>
                <td style="width:300px">
                    <input type="checkbox" id="chkIsWithBUForEdit" /> 
                </td>
            </tr>
            <tr>
                <td style="width:200px; text-align:right">
                    Module Name:
                </td>
                <td style="width:300px">
                    <select id="cboEditModuleName" style="width:100%;"></select>
                </td>
            </tr>
        </table>
        <fieldset class="actionfieldsetstyle">
            <legend>Actions : </legend>
              <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>&nbsp;&nbsp;
            <a id="btnCloseEditMenu" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
        </fieldset>
    </div>
    <div id="winMenuSequence" class="easyui-window" title="View Menu Sequence Configure" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <table id="tblMenuSequence" class="easyui-datagrid" style="width:100%;height:245px" data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbarMenuSequence' ">
            <thead>
                <tr>
                    <th field="MenuName" width="200" align="left">Menu Name</th>
                    <th field="ControllerName" width="170" align="left">Controller Name</th>
                    <th field="ActionName" width="400" align="left">Action Name</th>
                    <th field="BUName" width="130" align="left">Business Unit</th>
                    <th field="MenuSequence" width="70" align="left">Sequence</th>
                </tr>
            </thead>
        </table>
        <div id="toolbarMenuSequence">
            <a href="javascript:void(0)" id="btnUp" class="easyui-linkbutton" iconcls="icon-up" plain="true" onclick="UP()">Up</a>
            <a href="javascript:void(0)" id="btnDown" class="easyui-linkbutton" iconcls="icon-down" plain="true" onclick="Down()">Down</a>
            <a href="javascript:void(0)" id="btnRefresh" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshMenuSequence()">Refresh</a>
        </div>
        <fieldset class="actionfieldsetstyle">
            <legend>Actions : </legend>
            <a id="btnSaveSequence" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="SaveSequence()">Save</a>
            <a id="btnCloseMenuSequence" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
        </fieldset>
    </div>
    <div class="menuMainCollectionTable">
        <table id="tblMenuTreeGrid" title="Menu List" class="easyui-treegrid" fit="true" fitcolumns="true" data-options="idField:'id',treeField:'text', rownumbers:'true', toolbar:'#toolbar'">
            <thead>
                <tr>
                    <th field="text" width="270">Menu Name</th>
                    <th field="ControllerName" width="150">Controller Name</th>
                    <th field="ActionName" width="150">Action Name</th>
                    <th field="BUName" width="200">Unit Name</th>
                    <th field="ActivityInString" width="100">Activity</th>
                </tr>
            </thead>
        </table>
        <div id="toolbar">
            <input id="txtSearchByName" type="text" placeholder="Search by name" style="width:180px" />
            <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
            <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" >Edit</a>
            <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" >Delete</a>
            <a id="btnSequenceConfigure" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="SequenceConfigure()">Sequence Configure</a>
            <a id="btnActivity" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Activity</a>  
            <a id="btnMoveMenu" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cut" plain="true">Move Directory</a>
            <a id="btnPasteMenu" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Paste</a>
            @*<a id="btnChkIndex" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">ChkIndex</a>*@

        </div>
    </div>
</body>
<style type="text/css">
    #winMenu {
        width: 100%;
    }
    #winEditMenu {
        width:500px;
    }
</style>
<script type="text/javascript">
    var _oTMenu=null;
    var _oAuthorizationRolesMapping = [];
    var _sBaseAddress="";
    var _sRemovedids = "";
    var _oMenus = [];
    var _oBusinessUnits = [];
    var _oMenu={MenuID:0};
    var _oMenuForMove = [];
    var _oMenuForPaste = [];
    var _nTimeToMove = 0;
    var _oModuleNames = [];
    $(document).ready(function () {
        _oTMenu=@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        _oBusinessUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.BusinessUnits));
        _oModuleNames = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ModuleNames));
        RefreshTreeList(_oTMenu, "tblMenuTreeGrid");
        //RefreshControlLayout();
    });
    function RefreshTreeList(oTObject, tableId) {
        data = [oTObject];
        data = { "total": "" + data.length + "", "rows": data };
        $("#" + tableId).treegrid('loadData', data);
    }
    $('#btnActivity').click(function () {
        debugger;
        var oMenu = $('#tblMenuTreeGrid').datagrid('getSelected');
        if (oMenu == null || parseInt(oMenu.id) <= 0) {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex = $('#tblMenuTreeGrid').datagrid('getRowIndex', oMenu);
        var sActivity = "Active";
        var bActivity = true;
        if(oMenu.IsActive) {
            sActivity = "InActive";
            bActivity = false;
        }
        if (!confirm("Confirm to "+sActivity+"!")) return;

        var oMenu = {
            MenuID: oMenu.id,
            ParentID: oMenu.parentid,
            MenuName: oMenu.text,
            ActionName: oMenu.ActionName,
            ControllerName: oMenu.ControllerName,
            IsActive:bActivity
        };
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Menu/Save",
            traditional: true,
            data: JSON.stringify(oMenu),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oMenu = jQuery.parseJSON(data);
                if (oMenu.MenuID > 0) {

                    if(oMenu.IsActive) {
                        alert("Activated successfully");
                    }
                    else {
                        alert("InActivated successfully");
                    }

                    var oTMenu = {
                        id: oMenu.MenuID,
                        text:oMenu.MenuName,
                        state:'',
                        attributes:'',
                        parentid:oMenu.ParentID,
                        MenuName:oMenu.MenuName,
                        ControllerName:oMenu.ControllerName,
                        ActionName:oMenu.ActionName,
                        BUName:oMenu.BUName,
                        IsActive:oMenu.IsActive,
                        ActivityInString:(oMenu.IsActive)?"Active":"InActive"
                    };
                    $('#tblMenuTreeGrid').treegrid('update', { id:oTMenu.id, row: oTMenu });
                }
                else {
                    alert(oMenu.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });

    $('#txtSearchByName').keypress(function (e) {
        //debugger;
        var c = String.fromCharCode(e.which);
        var txtSearchByName = document.getElementById('txtSearchByName').value;
        txtSearchByName = txtSearchByName + c;

        var bFlag = false;
        var sMenuName = "";
        var rows = $('#tblMenuTreeGrid').treegrid('getChildren', 1);
        for (i = 0; i < rows.length; ++i) {
            sMenuName = rows[i]['text'].substring(0, txtSearchByName.length);
            if (txtSearchByName.toUpperCase() == sMenuName.toUpperCase()) {
                var id = rows[i]['id'];
                $('#tblMenuTreeGrid').treegrid('select', id);
                break;
            }
        }
    });

    $("#btnAdd").click(function () {
        debugger
        var oMenu = $('#tblMenuTreeGrid').datagrid('getSelected');
        if (oMenu == null || parseInt(oMenu.id) <= 0) {
            alert("Please select a item from list!");
            return;
        }
        _oMenu = oMenu;
        var SelectedRowIndex = $('#tblMenuTreeGrid').datagrid('getRowIndex', oMenu);
        $("#winMenu").icsWindow('open', "Selected parent menu : " + oMenu.text);
        $("#winMenu input").val("");
        $("#winMenu select").val(0);
        $("#cboBU").icsLoadCombo({ List: _oBusinessUnits, OptionValue: "BusinessUnitID", DisplayText: "BUTypeSt" });
        $("#cboModuleName").icsLoadCombo({ List: _oModuleNames, OptionValue: "id", DisplayText: "Value" });
        GetChildMenus(oMenu,'tblMenu');
    });
    $("#btnEdit").click(function () {
        var oMenu = $('#tblMenuTreeGrid').datagrid('getSelected');
        if (oMenu == null || parseInt(oMenu.id) <= 0) {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex = $('#tblMenuTreeGrid').datagrid('getRowIndex', oMenu);
        $("#winEditMenu").icsWindow('open', oMenu.text);
        $("#cboBUForEdit").icsLoadCombo({ List: _oBusinessUnits, OptionValue: "BusinessUnitID", DisplayText: "BUTypeSt" });
        $("#cboEditModuleName").icsLoadCombo({ List: _oModuleNames, OptionValue: "id", DisplayText: "Value" });
        GetMenu(oMenu);
    });
    $("#btnSequenceConfigure").click(function () {
        var oMenu = $('#tblMenuTreeGrid').datagrid('getSelected');
        if (oMenu == null || parseInt(oMenu.id) <= 0) {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex = $('#tblMenuTreeGrid').datagrid('getRowIndex', oMenu);
        $("#winMenuSequence").icsWindow('open', "Selected parent menu : " + oMenu.text);
        $("#winMenuSequence input").val("");
        $("#winMenuSequence select").val(0);
        GetChildMenus(oMenu,'tblMenuSequence');
    });

    $("#btnDelete").click(function () {
        var oMenu = $('#tblMenuTreeGrid').datagrid('getSelected');
        if (oMenu == null || oMenu.id <= 0) {
            alert("Please select a item from list!");
            return;
        }
        if (oMenu.parentid == 0) {
            alert("Deletion not possible!");
            return;
        }
        if (!confirm("Confirm to Delete?")) return;
        var SelectedRowIndex = $('#tblMenuTreeGrid').datagrid('getRowIndex', oMenu);
        var oTempMenu = { MenuID: oMenu.id };
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Menu/Delete",
            traditional: true,
            data: JSON.stringify(oTempMenu),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var sFeedBackMessage  = jQuery.parseJSON(data);
                if (sFeedBackMessage === "Data Delete Successfully") {
                    alert("Data Delete Successfully");
                    $('#tblMenuTreeGrid').treegrid('remove',oMenu.id);
                }
                else {
                    alert(sFeedBackMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });
    function GetMenu(oMenu)
    {
        var oTempMenu = { MenuID: oMenu.id };
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oTempMenu,
            ControllerName:"Menu",
            ActionName: "GetMenu",
            IsWinClose: false
        };
        $.icsDataGet(obj, function (response) {
            debugger;
            if (response.status && response.obj != null) {
                if (response.obj.ErrorMessage != "" || response.obj.ErrorMessage != null) {
                    _oMenu = response.obj;
                    RefreshControlEditMenu();
                }
                else { alert(response.obj.ErrorMessage); }
            }
            else { alert("No information found."); }
        });
    }

    function RefreshControlEditMenu()
    {
        $("#txtEditMenuName").val(_oMenu.MenuName);
        $("#txtEditControllerName").val(_oMenu.ControllerName);
        $("#txtEditActionName").val(_oMenu.ActionName);
        $("#cboBUForEdit").val(_oMenu.BUID);
        $("#cboEditModuleName").val(_oMenu.ModuleName);
        $('#chkIsWithBUForEdit').attr('checked', _oMenu.IsWithBU);
    }
    function GetChildMenus(oMenu,tblid) {
        var oTempMenu = { ParentID: oMenu.id };
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oTempMenu,
            ControllerName: "Menu",
            ActionName: "GetMenuChilds",
            IsWinClose: false
        };
        $.icsDataGet(obj, function (response) {
            debugger;
            if (response.status && response.obj != null) {
                if (response.obj.ErrorMessage != "" || response.obj.ErrorMessage != null)
                {
                    debugger;
                    _oMenu = response.obj;
                    DynamicRefreshList(response.obj.ChildNodes, tblid);
                    _oMenus = response.obj.ChildNodes;
                }
                else { alert(response.obj.ErrorMessage); }
            }
            else { alert("No information found."); }
        });
    }
    //Picker Js start from Here

    $("#btnCloseMenu").click(function () {
        $("#winMenu").icsWindow("close");
        $("#winMenu input").val("");
        $("#winMenu select").val(0);
        if (_sRemovedids.length > 0) {
            _sRemovedids = _sRemovedids.substring(0, _sRemovedids.length - 1);
        }
        var RemovedIds = oReturnObjects.RemovedIds.split(",");
        if (RemovedIds.length > 0) {
            for (i = 0; i < RemovedIds.length; i++) {
                $('#tblMenuTreeGrid').treegrid('remove', RemovedIds[i]);
            }
        }
        var newMenus = $('#tblMenu').datagrid('getRows');
        if (newMenus != null) {
            if (newMenus.length > 0) {
                for (i = 0; i < newMenus.length; i++) {
                    if (!IsExists(oMenu.id, newMenus[i].MenuID)) {
                        var oTMenu = {
                            id: newMenus[i].MenuID,
                            text: newMenus[i].MenuName,
                            state: '',
                            attributes: '',
                            parentid: newMenus[i].ParentID,
                            MenuName: newMenus[i].MenuName,
                            ControllerName: newMenus[i].ControllerName,
                            ActionName: newMenus[i].ActionName,
                            BUName: newMenus[i].BUName
                        };
                        $('#tblMenuTreeGrid').treegrid('append', { parent: oMenu.id, data: [oTMenu] });
                    }
                }
                $('#tblMenuTreeGrid').treegrid('select', oMenu.id);
                $('#tblMenuTreeGrid').treegrid('expand', oMenu.id);
            }
        }
    });
    $("#btnCloseEditMenu").click(function () {
        $("#winEditMenu").icsWindow("close");
        $("#winEditMenu input").val("");
        $("#winEditMenu select").val(0);
    });
    $("#btnAddMenu").click(function () {
        debugger;
        if (!ValidateInput()) return;
        var oMenu = RefreshObject();

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Menu/Save",
            traditional: true,
            data: JSON.stringify(oMenu),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                _oMenu = jQuery.parseJSON(data);
                if (_oMenu.MenuID > 0) {
                    alert("Data Saved sucessfully");

                    var oMenus = $('#tblMenu').datagrid('getRows');
                    var nIndex = oMenus.length;

                    $('#tblMenu').datagrid('appendRow', _oMenu);
                    $('#tblMenu').datagrid('selectRow', nIndex);

                    $("#txtMenuName,#txtControllerName,#txtActionName").val('');
                    $("#txtMenuName").focus();
                    $("#chkIsWithBU").attr('checked', false);
                }
                else {
                    alert(_oMenu.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#btnRemoveMenu").click(function () {
        var oMenu = $('#tblMenu').datagrid('getSelected');
        if (oMenu == null || oMenu.MenuID <= 0) {
            alert("Please select a item from list!");
            return;
        }
        if (!confirm("Confirm to Delete?")) return;
        var SelectedRowIndex = $('#tblMenu').datagrid('getRowIndex', oMenu);
        $.ajax
       ({
           type: "POST",
           dataType: "json",
           url: _sBaseAddress + "/Menu/Delete",
           data: JSON.stringify(oMenu),
           contentType: "application/json; charset=utf-8",
           success: function (data) {
               //debugger;
               feedbackmessage = jQuery.parseJSON(data);
               if (feedbackmessage == "Data Delete Successfully") {
                   alert("Data Delete Successfully");
                   _sRemovedids = _sRemovedids + oMenu.MenuID + ',';
                   $('#tblMenu').datagrid('deleteRow', SelectedRowIndex);
               }
               else {
                   alert(feedbackmessage);
               }
           },
           error: function (xhr, status, error) {
               alert(error);
           }

       });
    });
    function RefreshGrid() {
        //debugger;
        $.ajax({
            type: "GET",
            dataType: "json",
            url: _sBaseAddress + "/Menu/getchildren",
            traditional: true,
            data: { id: _oMenu.ParentID },
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var oMenus = jQuery.parseJSON(data);
                if (oMenus != null) {
                    if (oMenus.length > 0) {
                        data = oMenus;
                        data = { "total": "" + data.length + "", "rows": data };
                        $('#tblMenu').datagrid('loadData', data);
                    }
                }
                else {
                    //alert('Data not found!!');
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }
    function RefreshObject()
    {
        var bIsWithBU =  false;
        if($('#chkIsWithBU').is(":checked"))
        {
            bIsWithBU=true;
        }
        var oMenu = {
            MenuID: 0,
            ParentID: _oMenu.ParentID,
            MenuName: $('#txtMenuName').val(),
            ActionName: $('#txtActionName').val(),
            ControllerName: $('#txtControllerName').val(),
            ModuleName:$('#cboModuleName').val(),
            CallingPerameterValue: "",
            CallingPerameterType: "",
            BUID:$('#cboBU').val(),
            IsWithBU:bIsWithBU,
            MenuSequence:parseInt($('#tblMenu').datagrid('getRows').length)+1,
        };
        return oMenu;
    }
    function ValidateInput() {
        if (document.getElementById("txtMenuName").value == null || document.getElementById("txtMenuName").value == "") {
            alert("Please enter Menu Name!");
            $('#txtMenuName').focus();
            return false;
        }

        if (document.getElementById("txtControllerName").value == null || document.getElementById("txtControllerName").value == "") {
            alert("Please enter controller name!");
            $('#txtControllerName').focus();
            return false;
        }
        if (document.getElementById("txtActionName").value == null || document.getElementById("txtActionName").value == "") {
            alert("Please enter action name!");
            $('#txtActionName').focus();
            return false;
        }
        return true;
    }

    function IsExists(nparentid, id) {
        var oChildNodes = $('#tblMenuTreeGrid').treegrid('getChildren', nparentid);
        for (i = 0; i < oChildNodes.length; i++) {
            if (oChildNodes[i].id == id) {
                return true;
            }
        }
        return false;
    }
    /*Edit region of Menu*/
    function Save() {
        if (!EditValidateInput()) return;
        var oMenu = EditRefreshObject();

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Menu/Save",
            traditional: true,
            data: JSON.stringify(oMenu),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oMenu = jQuery.parseJSON(data);
                if (oMenu.MenuID > 0) {
                    alert("Data Saved sucessfully");
                    var oTMenu = {
                        id: oMenu.MenuID,
                        text:oMenu.MenuName,
                        state:'',
                        attributes:'',
                        parentid:oMenu.ParentID,
                        MenuName:oMenu.MenuName,
                        ControllerName:oMenu.ControllerName,
                        ActionName:oMenu.ActionName,
                        BUName:oMenu.BUName
                    };
                    $('#tblMenuTreeGrid').treegrid('update', { id:oTMenu.id, row: oTMenu });
                    $("#winEditMenu").icsWindow("close");
                    $("#winEditMenu input").val("");
                    $("#winEditMenu select").val(0);
                }
                else {
                    alert(oMenu.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function EditValidateInput() {
        if (document.getElementById("txtEditMenuName").value == null || document.getElementById("txtEditMenuName").value == "") {
            alert("Please enter Menu Name!");
            $('#txtEditMenuName').focus();
            return false;
        }

        if (document.getElementById("txtEditControllerName").value == null || document.getElementById("txtEditControllerName").value == "") {
            alert("Please enter controller name!");
            $('#txtEditControllerName').focus();
            return false;
        }
        if (document.getElementById("txtEditActionName").value == null || document.getElementById("txtEditActionName").value == "") {
            alert("Please enter action name!");
            $('#txtEditActionName').focus();
            return false;
        }
        return true;
    }

    function EditRefreshObject() {
        debugger;
        var bIsWithBU =  false;
        if($('#chkIsWithBUForEdit').is(":checked"))
        {
            bIsWithBU=true;
        }
        var oMenu = {
            MenuID: _oMenu.MenuID,
            ParentID: _oMenu.ParentID,
            MenuName: $('#txtEditMenuName').val(),
            ActionName: $('#txtEditActionName').val(),
            ControllerName: $('#txtEditControllerName').val(),
            ModuleName:$('#cboEditModuleName').val(),
            CallingPerameterValue: "",
            CallingPerameterType: "",
            IsWithBU:bIsWithBU,
            BUID:$('#cboBUForEdit').val()
        };
        return oMenu;
    }
    //Picker Js End  here

    //Menu Sequence start
    function UP()
    {
        debugger;
        var oMenu = $('#tblMenuSequence').datagrid('getSelected');
        if(oMenu==null)
        {
            alert("Please select Item");
            return;
        }
        var SelectedRowIndex=$('#tblMenuSequence').datagrid('getRowIndex',oMenu);
        if(SelectedRowIndex==0)return;
        var oMenus=$('#tblMenuSequence').datagrid('getRows');
        _oMenus = [];
        for(var i=0; i<oMenus.length; i++)
        {
            if(i==(SelectedRowIndex-1))
            {
                _oMenus[i]=oMenus[i+1];
            }
            else if(i==SelectedRowIndex)
            {
                _oMenus[i]=oMenus[i-1];
            }
            else
            {
                _oMenus[i]=oMenus[i];
            }
            _oMenus[i].MenuSequence=i+1;
        }
        data = _oMenus;
        data={"total":""+data.length+"","rows":data};
        $('#tblMenuSequence').datagrid('loadData',data);
        //    MakeMenu();
        var newSelectedRowIndex=SelectedRowIndex-1;
        $('#tblMenuSequence').datagrid('selectRow',newSelectedRowIndex);

    }

    function Down()
    {
        debugger;
        var oMenu = $('#tblMenuSequence').datagrid('getSelected');
        if(oMenu==null)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblMenuSequence').datagrid('getRowIndex',oMenu);
        if(SelectedRowIndex==(_oMenus.length-1))return;
        var oMenus=$('#tblMenuSequence').datagrid('getRows');
        _oMenus=[];
        for(var i=0; i<oMenus.length; i++)
        {
            if(i==(SelectedRowIndex+1))
            {
                _oMenus[i]=oMenus[i-1];
            }
            else if(i==SelectedRowIndex)
            {
                _oMenus[i]=oMenus[i+1];
            }
            else
            {
                _oMenus[i]=oMenus[i];
            }
            _oMenus[i].MenuSequence=i+1;
        }
        data = _oMenus;
        data={"total":""+data.length+"","rows":data};
        $('#tblMenuSequence').datagrid('loadData',data);

        var newSelectedRowIndex=SelectedRowIndex+1;
        $('#tblMenuSequence').datagrid('selectRow',newSelectedRowIndex);
    }

    function RefreshMenuSequence()
    {
        var oMenus = $('#tblMenuSequence').datagrid('getRows');
        if(oMenus.length>0)
        {
            for(var i = 0;i<oMenus.length;i++)
            {
                oMenus[i].MenuSequence = i+1;
            }
            RefreshListSequence(oMenus);
        }
    }

    function RefreshListSequence(oMenus)
    {
        data=oMenus;
        data={"total":""+data.length+"","rows":data};
        $('#tblMenuSequence').datagrid('loadData',data);
    }

    function SaveSequence()
    {
        //debugger;
        var oMenu= {
            Menus :$('#tblMenuSequence').datagrid('getRows')
        };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/Menu/RefreshMenuSequence",
            traditional: true,
            data:  JSON.stringify(oMenu),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
              var  oMenu = jQuery.parseJSON(data);
              if (oMenu.DisplayMessage=="" || oMenu.DisplayMessage==null)
              {
                    alert("Data Saved sucessfully");
                    $("#winMenuSequence").icsWindow("close");
                    $("#winMenuSequence input").val("");
                    $("#winMenuSequence select").val(0);
                }
                else {
                  alert(oMenu.DisplayMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    $("#btnCloseMenuSequence").click(function () {
        $("#winMenuSequence").icsWindow("close");
        $("#winMenuSequence input").val("");
        $("#winMenuSequence select").val(0);
    });
    //Menu Sequence End
    $(document).keydown(function (e) { if (e.keyCode == 27) { $('#winMenu').icsWindow('close'); } });

function RefreshControlLayout()
{
    document.getElementById('btnAdd').style.display = 'none';
    document.getElementById('btnEdit').style.display = 'none';
    document.getElementById('btnDelete').style.display = 'none';
    if(HavePermission('Add','Menu')){document.getElementById('btnAdd').style.display = '';}
    if(HavePermission('Edit','Menu')){document.getElementById('btnEdit').style.display = '';}
    if(HavePermission('Delete','Menu')){document.getElementById('btnDelete').style.display = '';}
}
///////////////////////////menu Move/////////////////////////////////////
function GetMenuMove(oMenu)
{
    var oTempMenu = { MenuID: oMenu.id };
    var obj =
    {
        BaseAddress: _sBaseAddress,
        Object: oTempMenu,
        ControllerName:"Menu",
        ActionName: "GetMenu",
        IsWinClose: false
    };
    $.icsDataGet(obj, function (response) {
        debugger;
        if (response.status && response.obj != null) {
            if (response.obj.ErrorMessage != "" || response.obj.ErrorMessage != null) {
                _oMenuForMove = response.obj;
            }
            else { alert(response.obj.ErrorMessage); }
        }
    });
}
function Assign()
{
    if(_oMenuForMove.MenuID == _oMenuForPaste.id )
    {
        alert("You Can Not Move a Menu Into That Menu");
        return;
    }
    var oMenu = {
        MenuID: _oMenuForMove.MenuID,
        ParentID: _oMenuForPaste.id,
        MenuName: _oMenuForMove.MenuName,
        ActionName: _oMenuForMove.ActionName,
        ControllerName: _oMenuForMove.ControllerName,
        CallingPerameterValue: "",
        CallingPerameterType: "",
        BUID : _oMenuForMove.BUID,
        IsWithBU:_oMenuForMove.IsWithBU,
        IsActive : _oMenuForMove.IsActive,
        BUName : _oMenuForMove.BUName,
        MenuSequence:parseInt($('#tblMenu').datagrid('getRows').length)+1,
    };
    debugger;
    $.ajax({
        type: "POST",
        dataType: "json",
        url: _sBaseAddress + "/Menu/Save",
        traditional: true,
        data: JSON.stringify(oMenu),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            debugger;
            _oMenu = jQuery.parseJSON(data);
            if (_oMenu.ErrorMessage == undefined || _oMenu.ErrorMessage == null) {
                alert("Menu Moved sucessfully");

                location.reload();
            }
            else {
                alert(_oMenu.ErrorMessage);
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }
    });
}
$('#btnMoveMenu').click(function(){
    debugger;
    var oMenu = $('#tblMenuTreeGrid').datagrid('getSelected');
    if (oMenu == null || parseInt(oMenu.id) <= 0) {
        alert("Please select a item from list!");
        return;
    }
    GetMenuMove(oMenu);
    alert("Menu Copied");
    _nTimeToMove = 1;
}),
$('#btnPasteMenu').click(function(){
    debugger;
    if(_nTimeToMove==0)
    {
        alert("Please First Select The Menu You Want To Move");
        return;
    }
    var oMenu = $('#tblMenuTreeGrid').datagrid('getSelected');
    if (oMenu == null || parseInt(oMenu.id) <= 0) {
        alert("Please select a item from list!");
        return;
    }
    _oMenuForPaste = oMenu;
    Assign();
    _nTimeToMove = 0;
}),
function HavePermission(sOperationType, sDbObject)
{
    var nSessionID =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.currentUserID]));
        if(nSessionID == -9) //check SuperUser
        {
            return true;
        }else
        {

            for(var i =0;i<_oAuthorizationRolesMapping.length;i++)
            {
                if(_oAuthorizationRolesMapping[i].OperationTypeInString == sOperationType && _oAuthorizationRolesMapping[i].DBObjectName == sDbObject)
                    return  true;
            }
            return false;
        }
    }
</script>