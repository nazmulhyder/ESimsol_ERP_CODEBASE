<!DOCTYPE html />
<html>
<head>
    <title>Salary Structure</title>
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
</head>
<body>
    @model ESimSol.BusinessObjects.EmployeeSalaryStructure
    <div style="font-family: Tahoma">
        <table border="0" cellspacing="2" cellpadding="2">
            <tr>
                <td style="background-color: #cfb53b; text-align: center; width: 880px; color: White">
                    <label id="lblHeaderName" style="font-size: 15px; font-weight: bold; text-decoration: Underline">Salary Structure</label>
                </td>
            </tr>
        </table>
        <fieldset>
            <legend style="font-weight: bold">Salary Structure Information </legend>@* main table for upper Portion*@
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; ">
                <tr>
                    <td>
                        @*table1*@
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;
                            margin-top: 25px">
                            <tr>
                                <td style="width: 130px; text-align: right"> </td>
                                <td  style="width: 200px; text-align: right">
                                    <input type="button" id="btnCopyFromOtherStructure" value="Copy From Other Structure" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 130px; text-align: right">Employee :</td>
                                <td style="width: 200px">
                                    <input type="text" disabled="disabled" style="width: 150px" id="txtEmployee"/>
                                    <input type="button" style="width: 45px;" value="Pick" id="btnEmployee" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    Types Of Employee :
                                </td>
                                <td style="width: 200px;">
                                    <input type="text" disabled="disabled" style="width: 200px;" id="txtTypesOfEmployee"/>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    @*Nature Of Employee :*@
                                </td>
                                <td style="width: 200px">
@*                                    <input type="text" style="width: 200px" disabled="disabled" id="txtNatureOfEmployee"/>
*@                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    Scheme :
                                </td>
                                <td style="width: 200px">
                                    <input type="text" style="width: 150px" disabled="disabled" id="txtScheme" />
                                    <input type="button" style="width: 45px;" value="Pick" id="btnScheme"/>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    Payment Cycle :
                                </td>
                                <td style="width: 200px">
                                    <input type="text" style="width: 200px" disabled="disabled" id="txtPaymentCycle"/>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    Description :
                                </td>
                                <td style="width: 200px">
                                    <input type="text" style="width: 200px" id="txtDescription"/>
                                </td>
                            </tr>
                        </table>
                        @* end table1*@
                    </td>
                    <td>
                        @*table2*@
                        <table style="margin-left: 30px; margin-top: 20px;font-size: 11px; font-weight: bold;">
                            <tr>
                                <td>
                                    Gross Salary :
                                </td>
                                <td>
                                    <input type="text" style="width: 80px;" id="txtGrossSalary"/>BDT
                                </td>
                                <td>
                                    <input type="checkbox" id="chkIncludeFixedItem"/>Include Fixed Item
                                </td>
                                <td>
                                    <input type="button" id="btnSetStructure" value="Set Structure" onclick="SetStructure()"/>
                                </td>
                            </tr>
                        </table>
                        @*end table2*@ @*table3*@
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; margin-left: 30px; font-size: 11px; ">
                            <tr>
                                <td>
                                    @*grid1*@
                                    <table id="tblSalarySchemeDetailBasic" class="easyui-datagrid" style="width: 440px;
                                        height: 150px; font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false"
                                        singleselect="true" autorowheight="true">
                                        <thead>
                                            <tr>
                                                <th field="SalaryHeadName" width="100" align="left">
                                                    Salary Head
                                                </th>
                                                <th field="Percent" width="65" align="right" style="text-align: right">
                                                    Percent
                                                </th>
                                                <th field="FixedAmount" width="100" align="right" formatter="formatPrice">
                                                    Fixed Amount
                                                </th>
                                                <th field="Amount" width="120" align="right" formatter="formatPrice">
                                                    Total Amount
                                                </th>
                                            </tr>
                                        </thead>
                                    </table>
                                </td>
                            </tr>
                        </table>
                        @*end table3*@
                         @*table4*@
                        <table style="margin-left: 30px;">
                            <tr>
                                <td style="width: 100px;">
                                    Total :
                                </td>
                                <td style="width: 80px; text-align: right;">
                                    <label id="lblTotalPercent" style="text-align: right; width: 125px;">
                                    </label>
                                </td>
                                <td style="width: 100px; text-align: right;">
                                    <label id="lblTotalAmount" style="text-align: right; width: 95px;">
                                    </label>
                                </td>
                                <td style="width: 125px; text-align: right;" >
                              
                                    <label id="lblTotal" style="text-align: right; width: 130px;" >
                                    </label>
                                   
                                </td>
                            </tr>
                        </table>
                        @*end table4*@
                    </td>
                </tr>
            </table>
            @* end main table for upper Portion*@
             @*table for under portion*@
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; margin-left: 140px">
                <tr>
                    <td style="font-weight: bold;">
                        Allowance
                    </td>
                </tr>
                <tr>
                    <td>
                        <table id="tblSalarySchemeDetailAllowance" class="easyui-datagrid" style="width: 690px;
                            height: 150px; font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false"
                            singleselect="true" autorowheight="true">
                            <thead>
                                <tr>
                                    <th field="AllowanceName" width="105" align="left">
                                        Allowance
                                    </th>
                                    <th field="AllowanceValueInString" width="100" align="left" style="text-align: right">
                                        Value
                                    </th>
                                    <th field="PeriodInString" width="125" align="left">
                                        Period
                                    </th>
                                    <th field="ConditionInString" width="110" align="left">
                                        Condition
                                    </th>
                                    <th field="ActivationAfterInString" width="120" align="left">
                                        Activation After
                                    </th>
                                    <th field="Amount" width="95" align="right" formatter="formatPrice">
                                        Total Amount
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </td>
                </tr>
            </table>
            <table style="margin-left: 140px; font-size: 11px; font-weight: bold;">
                <tr>
                    <td style="width:250px;">
                        <input type="checkbox" id="chkAllowBankAdvice" disabled="disabled"/>Allow Bank Advice
                        <input type="checkbox" id="chkAllowOverTime" disabled="disabled"/>Allow Over Time&nbsp;
                    </td>
                    <td id="tdforchkAllowOverTime" style="width:300px;" >
                        <label id="lblAllowOverTime"></label>  
                        
                   </td>
                   <td style="width:130px; text-align:right" >
                   Total:&nbsp;
                        <label id="lblTotalValue"></label>  
                        
                   </td>

                </tr>
            </table>
            <table style="margin-left: 140px; font-size: 11px; font-weight: bold;">
                <tr>
                    <td style="width: 450px">
                        <input id="chkProductionBase" type="checkbox" disabled="disabled"/>Production Base
                    </td>
                    
                </tr>
                <tr>
                    <td style="width: 450px">
                        <input id="chkAttendanceDependent" type="checkbox" disabled="disabled"/>Attendance Dependent
                    </td>
                    
                </tr>
                <tbody id="tbdAttendanceDependent">
                <tr>
                    <td style="width: 450px">
                        One Day Basic Salary Deduction For
                        <input id="txtLateCount" type="text"  style="width:85px"/> Days Late
                    </td>
                </tr>
                
                <tr>
                    <td style="width: 450px">
                        One Day Basic Salary Deduction For
                        <input id="txtEarlyLeavingCount" type="text" style="width:85px"/> Days EarlyLeaving
                    </td>
                </tr>
                </tbody>
            </table>
        </fieldset>
        <fieldset>
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                <tr>
                    <td style="width: 690px">
                    </td>
                    <td style="width: 50px">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" >Save</a>
                    </td>
                    <td style="width: 50px">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">
var _oSalaryStructure=null;
var _sBaseAddress="";
var _oEmployee=null;
var _oSalaryScheme=null;
var _oBasicSalarySchemeDetails=[];
var _oAllowanceSalarySchemeDetails=[];
var _nFixedAmount=0;
var _nTotal=0; 
$(document).ready(function ()
{
    _oSalaryStructure = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var obj = window.dialogArguments;
    document.getElementById("lblAllowOverTime").style.display = 'none';
    document.getElementById("tbdAttendanceDependent").style.display = 'none';
    document.getElementById('lblHeaderName').innerHTML = obj.Name;
    $('#txtGrossSalary').numberbox();
    if(obj.Name=="Preview Salary Structure")
    {
        SetControl(_oSalaryStructure);
        document.getElementById('txtDescription').disabled = true;
        document.getElementById('txtGrossSalary').disabled = true;
        document.getElementById('chkIncludeFixedItem').disabled = true;
        document.getElementById("btnSetStructure").style.display = 'none';
        document.getElementById("btnCopyFromOtherStructure").style.display = 'none';
        document.getElementById("btnSave").style.display = 'none';
        document.getElementById('btnEmployee').disabled = true;
        document.getElementById('btnScheme').disabled = true;
    }
});

function SetControl(_oSalaryStructure)
{
    debugger;
    document.getElementById("txtEmployee").value=_oSalaryStructure.EmployeeName;
    document.getElementById("txtTypesOfEmployee").value=_oSalaryStructure.EmployeeTypeName;
    document.getElementById("txtScheme").value=_oSalaryStructure.SalarySchemeName;
    document.getElementById("txtPaymentCycle").value=_oSalaryStructure.PaymentCycleInString;
    document.getElementById("txtDescription").value=_oSalaryStructure.Description;
    $('#txtGrossSalary').numberbox('setValue',_oSalaryStructure.GrossAmount);
    document.getElementById("chkIncludeFixedItem").checked=_oSalaryStructure.IsIncludeFixedItem;
    document.getElementById("chkProductionBase").checked=_oSalaryStructure.IsProductionBase;
    if(_oSalaryStructure.IsAttendanceDependant==true)
    {
    
        document.getElementById("chkAttendanceDependent").checked=_oSalaryStructure.IsAttendanceDependant;
        document.getElementById("tbdAttendanceDependent").style.display = '';
        document.getElementById("txtLateCount").disabled=true;
        document.getElementById("txtEarlyLeavingCount").disabled=true;
        document.getElementById("txtLateCount").value=_oSalaryStructure.LateCount;
        document.getElementById("txtEarlyLeavingCount").value=_oSalaryStructure.EarlyLeavingCount;
        window.resizeTo(880,725);
    }
    LoadSalaryStructureDetail(_oSalaryStructure);

}

$('#btnEmployee').click(function (e)
{
    var oParameter = new Object();
    oParameter.Name = "Employee Advance Search";
    oParameter.MultipleItemReturn=false;
    var url = _sBaseAddress + "/Employee/EmployeeHRMPiker";
    var nLeft=(window.screen.width/2)-(1000/2);
    var nHeight=(window.screen.height/2)-(510/2);
    _oEmployee=window.showModalDialog(url, oParameter, 'dialogHeight:510px;dialogWidth:1000px;dialogLeft:'+nLeft+';dialogTop:'+nHeight+';center:yes;resizable:no;status:no;scroll:yes');
    //_oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:500px;dialogWidth:1000px;dialogLeft:50;dialogRight:50;dialogTop:50;center:yes;resizable:yes;status:no;scroll:no');
    if(_oEmployee!=null)
    {
        if (_oEmployee.EmployeeTypeID<=0)
        {
            alert('Official Information is not assigned yet.\nAssign Official Information to this employee.!!');
            _oEmployee=null;
            return;
        }
        $("#txtEmployee")[0].value=_oEmployee.Name;
        $("#txtTypesOfEmployee")[0].value=_oEmployee.EmployeeTypeName;
    }
});



function formatPrice(val)
{  
    //debugger;
    if(val==null)
    {
        val=0.00;
    }
    val=parseFloat(val);
    var test = val.toFixed(2);
    var tests = addComma(test);
    return tests;       
} 

function addComma(nStr)
{
	nStr += '';
	x = nStr.split('.');
	x1 = x[0];
	x2 = x.length > 1 ? '.' + x[1] : '';
	var process = /(\d+)(\d{3})/;
	while (process.test(x1))
    {
	  x1 = x1.replace(process, '$1' + ',' + '$2');
	}
	return x1 + x2;
} 


$('#btnScheme').click(function (e)
{
    //debugger;
    if( $("#txtEmployee")[0].value=="")
    {
        alert("Please Select Employee!");
        return;
    }
   
    var oParameter = new Object();
    oParameter.Name = " Search salary Scheme ";
    oParameter.MultipleItemReturn=false;
    var tsv = ((new Date()).getTime()) / 1000;
    var url = _sBaseAddress + "/SalaryScheme/AdvanceSearch?ts=" + tsv;
    _oSalaryScheme = window.showModalDialog(url, oParameter, 'dialogHeight:380px;dialogWidth:890px;dialogLeft:50;dialogRight:50;dialogTop:100;center:yes;resizable:yes;status:no;scroll:no');
    if(_oSalaryScheme!=null)
    {
        if(_oEmployee.EmployeeTypeName!=_oSalaryScheme.EmployeeTypeName)
        {
            alert("Please Select a Scheme for "+_oEmployee.EmployeeTypeName);
            return;
        }
        if(_oSalaryScheme.IsActive==false)
        {
            alert("Please Select An Active Scheme");
            return;
        }
        $("#txtScheme")[0].value=_oSalaryScheme.Name;
        $("#txtPaymentCycle")[0].value=_oSalaryScheme.PaymentCycleInString;
        GetsalarySchemeByID(_oSalaryScheme.SalarySchemeID);
        
        
     }
});

function GetsalarySchemeByID(nSId)
{
    if (nSId > 0)
    {
        $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/SalaryScheme/CopyFromOtherGrade",
                data: { nId: nSId},
                contentType: "application/json; charset=utf-8",
                success: function(data) 
                {
                    //debugger;
                    var salaryScheme = jQuery.parseJSON(data);
                    if (salaryScheme != null)
                    {
                        LoadSalaryStructure(salaryScheme); 
                    } 
                    else 
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function(xhr, status, error)
                {
                    alert(error);
                }
             });
    }

}

function LoadSalaryStructure(oSalaryScheme)
{
    //debugger;
    _oBasicSalarySchemeDetails=[];
    _oAllowanceSalarySchemeDetails=[];
    document.getElementById("chkAllowBankAdvice").checked=oSalaryScheme.IsAllowBankAccount;
    document.getElementById("chkAllowOverTime").checked=oSalaryScheme.IsAllowOverTime;
    document.getElementById("chkProductionBase").checked=oSalaryScheme.IsProductionBase;
    
    if(oSalaryScheme.IsAllowOverTime==true)
    {
         document.getElementById("lblAllowOverTime").style.display = '';
         document.getElementById("lblAllowOverTime").innerHTML ="[Over Time Value : Over Time Hour*("+oSalaryScheme.OverTimeONInString+"/"+oSalaryScheme.DividedBy+")*"+oSalaryScheme.MultiplicationBy+"]"
    }
    
    if(oSalaryScheme.IsAttendanceDependant==true)
    {
    
        document.getElementById("chkAttendanceDependent").checked=oSalaryScheme.IsAttendanceDependant;
        document.getElementById("tbdAttendanceDependent").style.display = '';
        document.getElementById("txtLateCount").disabled=true;
        document.getElementById("txtEarlyLeavingCount").disabled=true;
        document.getElementById("txtLateCount").value=oSalaryScheme.LateCount;
        document.getElementById("txtEarlyLeavingCount").value=oSalaryScheme.EarlyLeavingCount;
        window.resizeTo(880,725);
    }
    
    for(var i=0;i<oSalaryScheme.SalarySchemeDetails.length;i++)
    {
        //debugger
        if(oSalaryScheme.SalarySchemeDetails[i].SalaryHeadType==1 && (oSalaryScheme.SalarySchemeDetails[i].Percent!=0 || oSalaryScheme.SalarySchemeDetails[i].FixedAmount!=0))
        {
             _oBasicSalarySchemeDetails.push(oSalaryScheme.SalarySchemeDetails[i]); 
        }
        else if(oSalaryScheme.SalarySchemeDetails[i].SalaryHeadType!=1)
        {
            _oAllowanceSalarySchemeDetails.push(oSalaryScheme.SalarySchemeDetails[i]); 
        }
    }

//    _oSalaryStructure.EmployeeSalaryStructureDetails

    RefreshListForSalaryHeadOfBasicType(_oBasicSalarySchemeDetails);
    RefreshListForSalaryHeadOfAllowanceType(_oAllowanceSalarySchemeDetails);
       
}

//=================s
function LoadSalaryStructureDetail(_oSalaryStructure)
{
//    debugger;
    _oBasicSalarySchemeDetails=[];
    _oAllowanceSalarySchemeDetails=[];
    var nAmount=0;
    var nAAmount=0;
    document.getElementById("chkAllowBankAdvice").checked=_oSalaryStructure.IsAllowBankAccount;
    document.getElementById("chkAllowOverTime").checked=_oSalaryStructure.IsAllowOverTime;
    
    if(_oSalaryStructure.IsAllowOverTime==true)
    {
         document.getElementById("lblAllowOverTime").style.display = '';
         document.getElementById("lblAllowOverTime").innerHTML ="[Over Time Value : Over Time Hour*("+_oSalaryStructure.OverTimeONInString+"/"+_oSalaryStructure.DividedBy+")*"+_oSalaryStructure.MultiplicationBy+"]"
       
    }
//    debugger;
    for(var i=0;i<_oSalaryStructure.EmployeeSalaryStructureDetails.length;i++)
    {
        //debugger
        if(_oSalaryStructure.EmployeeSalaryStructureDetails[i].SalaryHeadType==1 && (_oSalaryStructure.EmployeeSalaryStructureDetails[i].Percent!=0 || _oSalaryStructure.EmployeeSalaryStructureDetails[i].FixedAmount!=0))
        {
             _oBasicSalarySchemeDetails.push(_oSalaryStructure.EmployeeSalaryStructureDetails[i]);
             nAmount=nAmount+_oSalaryStructure.EmployeeSalaryStructureDetails[i].Amount;
        }
        else if(_oSalaryStructure.EmployeeSalaryStructureDetails[i].SalaryHeadType!=1)
        {
            _oAllowanceSalarySchemeDetails.push(_oSalaryStructure.EmployeeSalaryStructureDetails[i]); 
            nAAmount=nAAmount+_oSalaryStructure.EmployeeSalaryStructureDetails[i].Amount;
        }
    }

    RefreshListForSalaryHeadOfBasicType(_oBasicSalarySchemeDetails);
    RefreshListForSalaryHeadOfAllowanceType(_oAllowanceSalarySchemeDetails);
    document.getElementById("lblTotal").innerHTML =formatPrice(nAmount);  
    document.getElementById("lblTotalValue").innerHTML =formatPrice(nAAmount);  
   
}
//=================

function RefreshListForSalaryHeadOfBasicType(oSalaryHeadNames) 
{
//    debugger;
    data = oSalaryHeadNames;
    data = { "total": "" + data.length + "", "rows": data };
    $('#tblSalarySchemeDetailBasic').datagrid('loadData', data);
}

function RefreshListForSalaryHeadOfAllowanceType(oSalaryHeadNames) 
{
//    debugger;
    data = oSalaryHeadNames;
    data = { "total": "" + data.length + "", "rows": data };
    $('#tblSalarySchemeDetailAllowance').datagrid('loadData', data);
}

//$('#btnSetStructure').click(function (e)
function  SetStructure()
{
    if($("#txtScheme").val()=="")
    {
        alert("Please Enter Scheme Name !");
        $("#txtScheme").focus();
        return ;
    }
    if($('#txtGrossSalary').numberbox('getValue')=="")
    {
        alert("Please Enter Gross salary ! ");
        $("#txtGrossSalary").focus();
        return ;
    }
    
    CalcutionBasicTypeSalaryHead();
    CalcutionAllowance();
}

function CalcutionBasicTypeSalaryHead()
{
//    debugger;
    var oSalarySchemes=$('#tblSalarySchemeDetailBasic').datagrid('getRows');
    var nTotal=0; 
    _nFixedAmount=0;
    var nActualGross=0;
    var nGross= $('#txtGrossSalary').numberbox('getValue'); 
    for(var i=0;i<oSalarySchemes.length;i++)
    {
        _nFixedAmount=_nFixedAmount+oSalarySchemes[i].FixedAmount;
    } 
    if(document.getElementById("chkIncludeFixedItem").checked==true)
    {
        nActualGross=nGross-_nFixedAmount;
    }
    else
    {
        nActualGross=nGross;
    }
    for(var i=0;i<oSalarySchemes.length;i++)
    { 
        if(oSalarySchemes[i].Percent!=undefined && oSalarySchemes[i].Percent!="" && oSalarySchemes[i].Percent!=0)
        {
            oSalarySchemes[i].Amount= oSalarySchemes[i].Percent/100*nActualGross;
        }
        else if(oSalarySchemes[i].FixedAmount!=undefined && oSalarySchemes[i].FixedAmount!="" && oSalarySchemes[i].FixedAmount!=0)
        {
            oSalarySchemes[i].Amount= oSalarySchemes[i].FixedAmount;
        }
        if(oSalarySchemes[i].Amount!=undefined)
        {
            nTotal=nTotal+oSalarySchemes[i].Amount;
        }
    }
    _nTotal=nTotal;
    document.getElementById("lblTotal").innerHTML =formatPrice(nTotal);
    RefreshListForSalaryHeadOfBasicType(oSalarySchemes);
}

function CalcutionAllowance()
{
    var oSalarySchemes=$('#tblSalarySchemeDetailBasic').datagrid('getRows');
    var oAllowances=$('#tblSalarySchemeDetailAllowance').datagrid('getRows');
    var nGross=$('#txtGrossSalary').numberbox('getValue');
    var nTotalVal=0;
        debugger;
    for(var i=0;i<oAllowances.length;i++)
    {
        if (oAllowances[i].AllowanceCalculationOn==1)
        {
            oAllowances[i].Amount=nGross*oAllowances[i].AllowanceValue/100;
        }
        else if(oAllowances[i].AllowanceCalculationOn==2)
        {
            for(var k=0;k<oSalarySchemes.length;k++)
            {
                if(oSalarySchemes[k].SalaryHeadID==oAllowances[i].CalculateOnSalaryHeadID)
                {
                debugger;
                    oAllowances[i].Amount=oAllowances[i].AllowanceValue/100*oSalarySchemes[k].Amount;
                }
            }
        }
        else
        {
            oAllowances[i].Amount=oAllowances[i].AllowanceValue;
        }
        nTotalVal=nTotalVal+oAllowances[i].Amount;
    }
    document.getElementById("lblTotalValue").innerHTML = formatPrice(nTotalVal);
    RefreshListForSalaryHeadOfAllowanceType(oAllowances);
}

function ValidateInput()
{
    if($("#txtEmployee").val()=="")
    {
        alert("Please Enter Employee!!");
        return false;
    }
    if($("#txtScheme").val()=="")
    {
        alert("Please Enter A Scheme!!");
        return false;
    }
    var nGsalary=$('#txtGrossSalary').numberbox('getValue');
    //debugger;
    if(nGsalary=="")
    {
        alert("Please Enter Gross Salary!!");
        return false;
    }
    if(_nTotal==0)
    {
        alert("Please Set The Salary Structure!!");
        return false;
    }
    if(document.getElementById("chkIncludeFixedItem").checked==true)
    {
        if(_nTotal!=nGsalary)
        {
            alert("Total Amount must be equal to Gross Salary ! ");
            return false;
        }
        return true;
    }else{
       if((_nTotal-_nFixedAmount)!=nGsalary)
       {
           alert("Incorrect Total Amount ! ");
           return false;
       }
    }
    
    return true; 
}

function RefreshObject() 
{
     //debugger;
     var oSalaryStructureDetail=[];
     var oBasicTypeDetails = $('#tblSalarySchemeDetailBasic').datagrid('getRows');
     var oAllowanceTypeDetails = $('#tblSalarySchemeDetailAllowance').datagrid('getRows');
     for(var i=0;i<oBasicTypeDetails.length;i++)
     {
        oSalaryStructureDetail.push(oBasicTypeDetails[i]);
     }
     for(var i=0;i<oAllowanceTypeDetails.length;i++)
     {
        oSalaryStructureDetail.push(oAllowanceTypeDetails[i]);
     }

     var nActualGrossAmount=0;
     var nGrossAmount=0;
     nGrossAmount=$('#txtGrossSalary').numberbox('getValue');
     if(document.getElementById("chkIncludeFixedItem").checked==false)
     {
        //debugger;
        nActualGrossAmount=parseFloat(nGrossAmount)+parseFloat(_nFixedAmount);
        nActualGrossAmount = parseFloat(nActualGrossAmount);
        bIncludeFixedItem=false;
     }
     else
     {
        nActualGrossAmount=nGrossAmount;
        bIncludeFixedItem=true;
     }
     var oSalaryScheme = 
     {
         ESSID :_oSalaryStructure.ESSID,
         EmployeeID:_oEmployee.EmployeeID,
         SalarySchemeID:_oSalaryScheme.SalarySchemeID,
         Description:$("#txtDescription").val(),
         GrossAmount:nGrossAmount,
         IsIncludeFixedItem:bIncludeFixedItem,
         ActualGrossAmount:nActualGrossAmount,
         CurrencyID:1,//may be changed !
         EmployeeSalaryStructureDetails:oSalaryStructureDetail
     };
    
     return oSalaryScheme;
}

$('#btnSave').click(function (e)
{
    //debugger
    if (!ValidateInput()) return;
    var oEmployeeSalaryStructure = RefreshObject();
    $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/EmployeeSalaryStructure/EmployeeSalaryStructure_IU",
            traditional: true,
            data: JSON.stringify(oEmployeeSalaryStructure),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                //debugger
                oEmployeeSalaryStructure = jQuery.parseJSON(data);
                if (oEmployeeSalaryStructure.ErrorMessage == "") 
                {
                    alert("Data Saved sucessfully");
                    window.returnValue = oEmployeeSalaryStructure;
                    window.close();
                } 
                else 
                {
                    alert(oEmployeeSalaryStructure.ErrorMessage);
                }
             },
             error: function(xhr, status, error)
             {
                alert(error);
             }
          });
});

$('#btnCopyFromOtherStructure').click(function (e)
{
    //debugger;
    var oParameter = new Object();
    oParameter.Name = "Employee Advance Search";
    oParameter.MultipleItemReturn=false;
    var url = _sBaseAddress + "/Employee/EmployeeHRMPiker";
    _oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:500px;dialogWidth:930px;dialogLeft:50;dialogRight:50;dialogTop:50;center:yes;resizable:yes;status:no;scroll:no');
    if(_oEmployee!=null)
    {
        if (_oEmployee.EmployeeID > 0)
        {
            var tsv = ((new Date()).getTime()) / 1000;
            $.ajax({
                    type: "GET",
                    dataType: "json",
                    url: _sBaseAddress + "/EmployeeSalaryStructure/CopyFromOtherStructure",
                    data: { nId: _oEmployee.EmployeeID,ts: tsv},
                    contentType: "application/json; charset=utf-8",
                    success: function(data) 
                    {
                        //debugger;
                        var osalaryStructure = jQuery.parseJSON(data);
                        
                            if (osalaryStructure.ESSID <=0)
                            {
                                alert("This Employee has not assigned any salary structure. Please select an employee who has already assigned salary structure !");
                                return;
                            }
                            else
                            {
                                osalaryStructure.ESSID=0;
                                for(var i=0;i<osalaryStructure.EmployeeSalaryStructureDetails.length;i++)
                                {
                                    osalaryStructure.EmployeeSalaryStructureDetails[i].ESSSID=0;
                                }
                                osalaryStructure.EmployeeID=0;
                                osalaryStructure.SalarySchemeID=0;
                                SetControl(osalaryStructure);
                             }
                         
                      }
                      
                });
        }
    }
});

function Close()
{
    window.close();
}

$(document).keydown(function (e)
{
    var keyCode = e.keyCode || e.which;
    if (keyCode == 27)
    {
        window.close();
    }
});
</script>