<html>
<head>
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
</head>
<body>
    @model ESimSol.BusinessObjects.ProductUniqueIdentification
    <div style="font-family: Tahoma">
        <table border="0" cellspacing="2" cellpadding="2">
            <tr>
                <td style="background-color: #CFB53B; text-align: center; width: 460px; color: White">
                    <label id="lblHeaderName" style="font-size: 15px; font-weight: bold; text-decoration: Underline;
                        width: 460px">
                        Add Sibling Asset Unique Identification</label>
                </td>
            </tr>
        </table>
        <fieldset style="width: 400px; text-align: right">
            <div style="height: 540px; overflow: auto">
                <table border="0">
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Category:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.ProductCategoryName, new { style = "width: 215px;", id = "txtProductCategoryName", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Product Name
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.ProductName, new { style = "width: 215px;", id = "txtProductName", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Location:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.Name, new { style = "width: 215px;", id = "txtLocationName", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Lot:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.LotNo, new { style = "width: 215px;", id = "txtLotName", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td id="LotStatus1" style="width: 155px; font-size: 13px; text-align: left">
                        </td>
                        <td id="LotStatus" style="width: 240px; font-size: 13px; text-align: left">
                            Lot Balance:
                            <label for="PUI" style="color: Highlight; font-size: small;" id="Balance">
                            </label>
                            Identified:
                            <label for="Identified" style="color: Highlight; font-size: small;" id="Identified">
                            </label>
                            Left :
                            <label for="Left" style="color: Highlight; font-size: small;" id="Left">
                            </label>
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr id="Allrestinsert">
                        <td style="width: 155px; font-size: 13px; text-align: right; color: Blue">
                        </td>
                        <td style="width: 240px; font-size: 13px; text-align: left; color: Blue">
                            Identify all Left Products: @Html.CheckBoxFor(model => model.SelectAllLot, new { id = "chkSelectAllLot" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Manufacturer:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.Manufacturer, new { style = "width: 215px;", id = "txtManufacturer", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Origin:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.Origin, new { style = "width:215px", id = "txtOrigin", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Asset Type:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.AssetTypeInString, new { style = "width:215px", id = "txtAssetTypeInString", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Warranty Type:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.WarrantyOn, new { style = "width:215px", id = "txtWarrantyOn", @readonly = "readonly" })
                            <br />
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Warranty Period:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.Warranty, new { style = "width:215px", id = "txtWarrantyPeriod", @readonly = "readonly" })
                            <br />
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Warranty Start Date:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.WarrantyStart, new { style = "width: 215px;", id = "txtWarrantyStart", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Warranty End Date:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.WarrantyEnd, new { style = "width: 215px;", id = "txtWarrantyEnd", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Serial No:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.SerialNumberOnProduct, new { style = "width: 215px;", id = "txtSerialNumberOnProduct" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Tag No:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.TagNo, new { style = "width: 215px;", id = "txtTagNo" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Base Currency:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.CurrencyNameSymbol, new { style = "width: 215px;", id = "txtCurrencyNameSymbol", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Actual Asset Value:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.ActualAssetValue, new { style = "width: 215px;", id = "txtActualAssetValue", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Value After Evaluation:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.ValueAfterEvaluation, new { style = "width: 215px;", id = "txtValueAfterEvaluation", @readonly = "readonly" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            Description:
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.Description, new { style = "width: 215px", id = "txtDescription" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr style="visibility: hidden">
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            @Html.TextBoxFor(model => model.ProductID, new { style = "width: 15px;", id = "txtProductID" })
                            @Html.TextBoxFor(model => model.LocationID, new { style = "width: 15px;", id = "txtLocationID" })
                            @Html.TextBoxFor(model => model.LotID, new { style = "width: 15px;", id = "txtLotID" })
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                            @Html.TextBoxFor(model => model.ProductCategoryID, new { style = "width: 15px;", id = "txtProductCategoryID" })
                            @Html.TextBoxFor(model => model.Balance, new { style = "width: 15px;", id = "txtBalance" })
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr style="visibility: hidden">
                        <td style="width: 155px; font-size: 13px; text-align: right">
                            @Html.TextBoxFor(model => model.AssetType, new { style = "width:15px", id = "txtAssetType" })
                        </td>
                        <td style="width: 240px; text-decoration: underline; text-align: right">
                        </td>
                        <td>
                        </td>
                    </tr>
                </table>
            </div>
            <table>
                <tr>
                    <td style="width: 60px; font-size: 13px; text-align: left">
                    </td>
                    <td style="width: 165px; font-size: 13px; text-align: left">
                    </td>
                    <td style="width: 165px; font-size: 13px; text-align: right">
                        <input type="button" value="Save" id="btnSave" style="width: 40px;" />
                        <input type="button" value="Cancel" id="btnCancel" style="width: 60px;" />
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript"> 
var nLotID = 0;
var balance = 0;
_oProductUniqueIdentificationSiblings = [];
   
$(document).ready(function () {
     //debugger;        
       
       _oProductUniqueIdentificationSiblingSerial = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ProductUniqueIdentificationlst));
        _oProductUniqueIdentificationSiblings = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ProductUniqueIdentifications));
        document.getElementById('txtLotName').value = _oProductUniqueIdentificationSiblings[0].LotNo;
        _oPUICompanys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.Companys));
        document.getElementById('txtCurrencyNameSymbol').value = _oPUICompanys[0].CurrencyNameSymbol; 
        ShowDatainTextBoxes(); 
        nLotID = _oProductUniqueIdentificationSiblings[0].LotID        
        txtWarrantyOn.style.backgroundColor = "#E0E0E0";
        txtWarrantyStart.style.backgroundColor = "#E0E0E0";
        txtWarrantyEnd.style.backgroundColor = "#E0E0E0";
        txtProductCategoryName.style.backgroundColor = "#E0E0E0";
        txtProductName.style.backgroundColor = "#E0E0E0";
        txtLocationName.style.backgroundColor = "#E0E0E0";
        txtLotName.style.backgroundColor = "#E0E0E0";
        txtManufacturer.style.backgroundColor = "#E0E0E0";
        txtOrigin.style.backgroundColor = "#E0E0E0";
        txtWarrantyPeriod.style.backgroundColor = "#E0E0E0";
        txtActualAssetValue.style.backgroundColor = "#E0E0E0";
        txtValueAfterEvaluation.style.backgroundColor = "#E0E0E0";
        txtAssetTypeInString.style.backgroundColor = "#E0E0E0";
        txtCurrencyNameSymbol.style.backgroundColor = "#E0E0E0";

         GetLot();

$("#txtSerialNumberOnProduct").keydown(function(event) 
{////////////debugger;
        // Allow: backspace, delete, tab, escape, and enter
        if ( event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || 
             // Allow: Ctrl+A
            (event.keyCode == 65 && event.ctrlKey === true) || 
             // Allow: home, end, left, right
            (event.keyCode >= 35 && event.keyCode <= 39)) {
                 // let it happen, don't do anything
                 return;
        }
        else 
        {
            // Ensure that it is a number and stop the keypress
            if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105 )) {
            event.preventDefault(); 
        }   
 }
 });


$("#txtWarrantyPeriod").keydown(function(event) 
{////////////debugger;
        // Allow: backspace, delete, tab, escape, and enter
        if ( event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || 
             // Allow: Ctrl+A
            (event.keyCode == 65 && event.ctrlKey === true) || 
             // Allow: home, end, left, right
            (event.keyCode >= 35 && event.keyCode <= 39)) {
                 // let it happen, don't do anything
                 return;
        }
        else 
        {
            // Ensure that it is a number and stop the keypress
            if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105 )) {
            event.preventDefault(); 
            
        }   
 }
 });




$("#txtTagNo").keydown(function(event) 
{
//////debugger;
       
        if ( event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 || 
            
        (event.keyCode == 65 && event.ctrlKey === true) || 
            
        (event.keyCode >= 35 && event.keyCode <= 39)) 
        {
             
            return;
        }
        else 
        {
        // Ensure that it is a number and stop the keypress
        if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105 )) {
        event.preventDefault();             
        //alert("Insert Only Numeric Number");
        }   
 }
 });


});






function GetLot() 
{
    //debugger;

        var oAddSibling=  {                                  
                             LotID : _oProductUniqueIdentificationSiblings[0].LotID
                            };
        

$.ajax({
    type: "POST",
    dataType: "json",
     url: '@Url.Action("GetLotCount", "ProductUniqueIdentification")',    
    data:  JSON.stringify(oAddSibling),
    contentType: "application/json; charset=utf-8",
    success: function (data) 
    {
        //debugger;
         _PPL = jQuery.parseJSON(data);
         nLotID = _PPL[0].LotID;
         ReturnLotBalance(nLotID);
                   
    },
    error: function (xhr, status, error) 
    {
        alert(error);
    }
});
}




 


$('#btnSave').click(function () 
 {
    
       ////debugger;
        if(!ValidateInput()) return false;   
            
        var oProductUniqueIdentification=RefreshObject();
         $.ajax({
          type: "POST",
          dataType: "json",
          url: '@Url.Action("AddProductUniqueIdentification", "ProductUniqueIdentification")',
          data:  JSON.stringify(oProductUniqueIdentification),
          contentType: "application/json; charset=utf-8",
          success: function (data) {
             //debugger;
              var oProductUniqueIdentifications = jQuery.parseJSON(data);
                  
              if (oProductUniqueIdentifications[0].ErrorMessage!=null)  
              {
                alert(oProductUniqueIdentifications[0].ErrorMessage);
                return;
              }

              else 
              {
                  alert("Data Saved sucessfully");                 
                  window.returnValue = oProductUniqueIdentifications;                  
                  window.close();
                  
              }
          },
          error: function (xhr, status, error) {
              alert(error);
          }

      });
          
});









 function ShowDatainTextBoxes()
 {
    ////debugger;
     document.getElementById('txtAssetType').value = _oProductUniqueIdentificationSiblings[0].AssetType;

    document.getElementById('txtWarrantyOn').value = _oProductUniqueIdentificationSiblings[0].WarrantyOn;

    document.getElementById('txtWarrantyStart').value = _oProductUniqueIdentificationSiblings[0].WarrantyStartInString;
    document.getElementById('txtWarrantyEnd').value = _oProductUniqueIdentificationSiblings[0].WarrantyEndInString;  
      
    document.getElementById('txtProductCategoryName').value = _oProductUniqueIdentificationSiblings[0].ProductCategoryName;
    document.getElementById('txtProductCategoryID').value = _oProductUniqueIdentificationSiblings[0].ProductCategoryID;
    document.getElementById('txtProductName').value = _oProductUniqueIdentificationSiblings[0].ProductName;
    document.getElementById('txtProductID').value = _oProductUniqueIdentificationSiblings[0].ProductID;
    document.getElementById('txtLocationName').value = _oProductUniqueIdentificationSiblings[0].LocationName; 
    document.getElementById('txtLocationID').value = _oProductUniqueIdentificationSiblings[0].LocationID;
    document.getElementById('txtLotName').value = _oProductUniqueIdentificationSiblings[0].LotNo; 
    document.getElementById('txtLotID').value = _oProductUniqueIdentificationSiblings[0].LotID;
    document.getElementById('txtManufacturer').value = _oProductUniqueIdentificationSiblings[0].Manufacturer;
    document.getElementById('txtOrigin').value = _oProductUniqueIdentificationSiblings[0].Origin;
    document.getElementById('txtAssetTypeInString').value = _oProductUniqueIdentificationSiblings[0].AssetTypeInString;


    document.getElementById('txtWarrantyPeriod').value = _oProductUniqueIdentificationSiblings[0].Warranty;
    document.getElementById('txtActualAssetValue').value = _oProductUniqueIdentificationSiblings[0].ActualAssetValue;
    document.getElementById('txtValueAfterEvaluation').value = _oProductUniqueIdentificationSiblings[0].ValueAfterEvaluation;
    document.getElementById('txtDescription').value = _oProductUniqueIdentificationSiblings[0].Description;
    //document.getElementById('txtSerialNumberOnProduct').value = _oProductUniqueIdentificationSiblings[0].SerialNumberOnProduct;
    //document.getElementById('txtTagNo').value = (_oProductUniqueIdentificationSiblings[0].TagNo);
    //debugger;
    var max = 0;
    for(var s=0; s<_oProductUniqueIdentificationSiblingSerial.length; s++)
    {
        if(_oProductUniqueIdentificationSiblingSerial[s].SerialNumberOnProduct>max)
        {
            max = _oProductUniqueIdentificationSiblingSerial[s].SerialNumberOnProduct;
        }

    }
    debugger;
     var maxSerial =parseInt(max)+1

    document.getElementById('txtSerialNumberOnProduct').value = maxSerial;

    var maxTag = 0;
    for(var t=0; t<_oProductUniqueIdentificationSiblingSerial.length; t++)
    {
        if(_oProductUniqueIdentificationSiblingSerial[t].TagNo>maxTag)
        {
            maxTag = _oProductUniqueIdentificationSiblingSerial[t].TagNo;
        }

    }
    var Tag =parseInt(maxTag)+1
    document.getElementById('txtTagNo').value = Tag;

 }
 
 function RefreshObject()
 { 
   //debugger;
    var oProductUniqueIdentification= {
                                    PUIID: 0,
                                    ProductCategoryID : $("#txtProductCategoryID").val(), 
                                    ProductID : $("#txtProductID").val(),                                    
                                    LotID : $("#txtLotID").val(),
                                    SelectAllLot: document.getElementById("chkSelectAllLot").checked,                                  
                                    Manufacturer : $("#txtManufacturer").val(),  
                                    Origin : $("#txtOrigin").val(),
                                    AssetType : $("#txtAssetType").val(), 
                                    CalculationType : $("#txtWarrantyOn").val(), 
                                    Warranty : $("#txtWarrantyPeriod").val(),                                   
                                    WarrantyStart: $("#txtWarrantyStart").val(),
                                    WarrantyEnd : $("#txtWarrantyEnd").val(),
                                    SerialNumberOnProduct: $("#txtSerialNumberOnProduct").val(), 
                                    TagNo : $("#txtTagNo").val(),
                                    ActualAssetValue: $("#txtActualAssetValue").val(),
                                    ValueAfterEvaluation : $("#txtValueAfterEvaluation").val(), 
                                    Description : $("#txtDescription").val(),                                    
                                    LocationID : $("#txtLocationID").val()                   
                                 };
        return oProductUniqueIdentification;
 }

    




function ValidateInput() 
{
   ////debugger;

        var assettype = $("#txtAssetType").val();
        if(assettype<=0)
        {
            alert("Asset Type Must Required");
            return false;
        }
        var nProductCategory = $("#txtProductCategoryID").val();         
        if(nProductCategory==1)  
        {
            alert("You Can Not Select Node, Select Other Node");
            $('#txtProductCategoryName').focus(); 
            return false;
        }

        if(nProductCategory<=0)  
        {
            alert("Press Enter To Category and Select A Node From Tree, except Root Node"); 
            $('#txtProductCategoryName').focus(); 
            return false;
        }        
        var nProductID = $("#txtProductID").val(); 
        if(nProductID<=0)  
        {
            alert("Provide Product Name"); 
            $('#txtProductName').focus(); 
            return false;
        }  
           
        var nLocationID = $("#txtLocationID").val(); 
        if(nLocationID<=0)  
        {
            alert("Select Location");
             $('#txtLocationName').focus(); 
             return false;
        } 
        
        var nLotID = $("#txtLotID").val(); 
        if(nLotID<=0)  
        {
            alert("Select Lot");
            $('#txtLotName').focus(); 
            return false;
        }

        var sManuf = $("#txtManufacturer").val(); 
        if(sManuf=="")  
        {
            alert("Provide Manufacturer"); 
            $('#txtManufacturer').focus(); 
            return false;
        } 
        var sOrigin = $("#txtOrigin").val();    
        if(sOrigin=="")  
        {
            alert("Provide Origin");
            $('#txtOrigin').focus();
            return false;
        }          
        
        var nWarrantyPeriod = $("#txtWarrantyPeriod").val();        
        if(nWarrantyPeriod<=0)  
        {
            alert("Provide Warrenty Period");
            $('#txtWarrantyPeriod').focus(); 
            return false;
        } 
        var WarPeriod =parseInt($("#txtWarrantyPeriod")[0].value); 
        if(WarPeriod <=0)
        {
            alert("Enter Warranty Period"); 
            $('#txtWarrantyPeriod').focus(); 
            return false
        }
        var nSerialNo = $("#txtSerialNumberOnProduct").val(); 
        if(nSerialNo<=0)  
        {
            alert("Provide Serial"); 
            $('#txtSerialNumberOnProduct').focus();
            return false;
        }   
        var nTagNo = $("#txtTagNo").val(); 
        if(nTagNo<=0||nTagNo=="")  
        {
            alert("Provide Tag"); 
            $('#txtTagNo').focus(); 
            return false;
        }         
          
           
        var ndActualAssetValue =$("#txtActualAssetValue").val();  
        if (ndActualAssetValue < 1) 
        {
            alert("Actual Asset Value Can't be Zero or Negetive");
            $('#txtActualAssetValue').focus(); 
            return false;
        }         
  
        var ndvalueafterevaluation = $("#txtValueAfterEvaluation").val();
        if(ndvalueafterevaluation<=0)
        {
            alert("Value After Evaluation Can't be Zero or Negetive");
            $('#txtValueAfterEvaluation').focus();
            return false;
        }  
        var sdescription = $("#txtDescription").val();
        if(sdescription=="")
        {
            alert("Please Provide Description"); 
            $('#txtDescription').focus(); 
            return false;
        }        

      return true; 
}




function ReturnLotBalance(nLotID)
{
    //debugger;


        var oCountLot=  {                                  
                             LotID : nLotID
                          };

             $.ajax({
                    type: "POST",
                    dataType: "json",                   
                    url: '@Url.Action("GetLotBalance", "ProductUniqueIdentification")',
                     data:  JSON.stringify(oCountLot),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                       //debugger;
                        oLotBalance = jQuery.parseJSON(data);     
                        if(oLotBalance!=null)
                        {  
                            var LotBalance = _oProductUniqueIdentificationSiblings[0].ActualAssetValue
                            var CountPuiid = oLotBalance.length;
                            var BalanceLeft = LotBalance - CountPuiid;
                            if(BalanceLeft>=0)
                            {
                                document.getElementById('Identified').innerHTML = CountPuiid;
                                document.getElementById("LotStatus").style.display = ''; 
                                document.getElementById("LotStatus1").style.display = ''; 
                                document.getElementById("Allrestinsert").style.display = '';
                                document.getElementById('Left').innerHTML = BalanceLeft;
                                document.getElementById('Balance').innerHTML = LotBalance;
                                                            
                            }
                        }
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                                      
                });

}




 $('#btnCancel').click(function () {        
    window.close();          
 });



</script>
