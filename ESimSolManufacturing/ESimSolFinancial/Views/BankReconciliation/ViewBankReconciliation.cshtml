@model ESimSol.BusinessObjects.BankReconciliation
@{
    ViewBag.Title = "Bank Reconciliation";
}
<div id="progbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
    <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
        <label style="font-size:18px;">Please wait</label>
        <div id="progbar" style="width:100%;height:37px;"></div>
    </div>
</div>
<div class="menuMainCollectionTable" style="font-family:Tahoma; margin-left: 0px; height: 100%; width:100%">
    <div id="divVoucher" class="easyui-panel" title="" fit="true" style="width:100%;padding:1px">                
        <div style="height:90%; width:100%">            
            <table id="tblBankReconciliation" title="Bank Reconciliation" class="easyui-datagrid" style="height:100%; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarBankReconcilation" data-options="onClickCell : onClickCell, showFooter:true">
                <thead>
                    <tr>
                        <th field="VNo" width="12%" align="left">Voucher No</th>
                        <th field="RVAH" width="35%" align="left">Particular/Party</th>
                        <th field="RRmrk" width="12%" align="center">Reconcile Remarks</th>
                        <th field="VDateSt" width="9%" align="center">Voucher Date</th>
                        <th field="RDateSt" width="8%" align="center" formatter="FormatBankDate">Bank Date</th>
                        <th field="DrAmountSt" width="10%" align="right">Debit<span class="lblBaseCurrency"></span></th>
                        <th field="CrAmountSt" width="10%" align="right">Credit<span class="lblBaseCurrency"></span></th>
                    </tr>
                </thead>
            </table>
        </div>
        <div id="toolbarBankReconcilation" style="width:100%">
            <table border="0" cellpadding="2" cellspacing="2" style="width:100%">
                <tr>                    
                    <td style="width:10%; font-size:12px; text-align:center">
                        <select style="width:98%" id="cboBusinessUnit"> </select>
                    </td>
                    <td style="width:15%; font-size:12px; text-align:center">
                        <input type="text" placeholder="Search by Account Head Name" style="width:98%" id="txtAccountHead" />
                    </td>
                    <td style="width:22%; font-size:12px; text-align:center">
                        <input type="text" placeholder="Search by Subledger Name" style="width:98%" id="txtSubledger" />
                    </td>
                    <td style="width:12%; font-size:12px; text-align:right">
                        <input id="txtStartDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:98%" />
                    </td>
                    <td style="width:2%; font-size:12px; text-align:center;font-weight:bold">
                        To
                    </td>
                    <td style="width:12%; font-size:12px; text-align:left">
                        <input id="txtEndDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:98%" />
                    </td>
                    <td style="width:11%; font-size:12px; text-align:center">
                        <select style="width:95%" id="cboCurrency"> </select>
                    </td>
                    <td style="width:8%; font-size:12px; text-align:left">
                        <input type="button" value="Refresh" id="btnRefresh" style="width:100%; font-weight:bold" />
                    </td>
                    <td style="width:8%; font-size:12px; text-align:left">
                        <input type="button" value="Remove" id="btnRemove" style="width:100%; font-weight:bold" />
                    </td>                    
                </tr>
                <tr>                    
                    <td colspan="2" style="width:20%; font-size:12px; text-align:center">
                        @*<select style="width:98%" id="cboReconcileType"> </select>*@
                    </td>                    
                    <td style="width:22%; font-size:12px; text-align:center"></td>
                    <td style="width:12%; font-size:12px; text-align:right"></td>
                    <td style="width:2%; font-size:12px; text-align:center;font-weight:bold"></td>
                    <td style="width:12%; font-size:12px; text-align:left"></td>                  
                    <td colspan="3" style="width:27%; font-size:12px; text-align:center">
                        <input type="text" id="txtOpeningBalance" style="font-weight:bold; font-size:12px; text-align:right; width:99%" disabled="disabled" />
                    </td>
                </tr>
            </table>
        </div>
        <div style="width:100%; padding-top:18px">
            <table border="0" cellpadding="0" cellspacing="0" width="100%">                
                <tr>
                    <td style="width:40%; text-align:left; font-size:12px; font-weight:bold">
                        <a id="btnCommit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-setting" plain="false" style="margin-left:40px;">Authorize</a>
                    </td>
                    <td colspan="4" style="text-align:right; font-size:12px; font-weight:bold">

                        <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
                        <a id="btnExportXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">ExportXL</a>
                        <a id="btnPrintBankFlow" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print Bank Fund Flow</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Cancel</a>                        
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

<style type="text/css">
    .DateClass {
        width: 100%;
        border: none !important;
        text-align: center !important;
    }
    .RemarksClass {
        width: 100%;
        border: none !important;
        text-align: left !important;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        var oBankReconciliation = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));        
        var oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oBusinessUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        @*var oReconcileDataTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ReconcileDataTypes));*@

        $('#cboCurrency').data('Currencys', oCurrencys);
        $('#cboBusinessUnit').data('BusinessUnits', oBusinessUnits);
        //$('#cboReconcileType').data('ReconcileDataTypes', oReconcileDataTypes);
        $('#txtAccountHead').data('AccountHead', null);
        $('#txtSubledger').data('Subledger', null);
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").hide();

        $('#txtOpeningBalance').data('OpeningBalance', 0);
        $('#txtOpeningBalance').data('OpeningBalanceSt', '');
        $('#txtOpeningBalance').val("Opening Balance : 0.00");
        $('#txtStartDate').datebox('setValue', icsdateformat(new Date()));
        $('#txtEndDate').datebox('setValue', icsdateformat(new Date()));
        $('#Mainlayout').layout('collapse', 'west');
        RefreshComboBoxes(parseInt(oBankReconciliation.BUID));
        $('#txtAccountHead').focus();

        
    });

    function updateProgress() {
        var value =$('#progbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds) {
        $("#progbarParent").hide();
    }

    function RefreshComboBoxes(nBUID) {
        var oCurrencys = $('#cboCurrency').data('Currencys');
        var oBusinessUnits = $('#cboBusinessUnit').data('BusinessUnits');
        
        $("#cboCurrency").icsLoadCombo({ List: oCurrencys, OptionValue: "CurrencyID", DisplayText: "NameSymbol", InitialValue: "--Select Currency--" });
        $("#cboBusinessUnit").icsLoadCombo({ List: oBusinessUnits, OptionValue: "BusinessUnitID", DisplayText: "ShortNameCode", InitialValue: "--Business Unit--"});
        //$("#cboReconcileType").icsLoadCombo({ List: oReconcileDataTypes, OptionValue: "id", DisplayText: "Value", InitialValue: "--Reconcile Type--" });
        $('#cboBusinessUnit').val(parseInt(nBUID));
    }

    $('#cboBusinessUnit').change(function(){
        var nBUID =parseInt($("#cboBusinessUnit").val());
        window.location.href =  sessionStorage.getItem('BaseAddress') +'/BankReconciliation/ViewBankReconciliation?buid='+parseInt(nBUID)+'&menuid='+parseInt(sessionStorage.getItem('MenuID'));
    });

    function RemakeBalance(oBankReconciliations)
    {
        var nOpeningBalance = parseFloat($('#txtOpeningBalance').data('OpeningBalance'));
        for(var i=0; i<oBankReconciliations.length; i++)
        {
            if(oBankReconciliations[i].IsDr === true)
            {
                nOpeningBalance = nOpeningBalance + parseFloat(oBankReconciliations[i].DrAmount);
            }
            else
            {
                nOpeningBalance = nOpeningBalance - parseFloat(oBankReconciliations[i].CrAmount);
            }
            oBankReconciliations[i].CBalance =  nOpeningBalance;
            if (nOpeningBalance < 0)
            {
                oBankReconciliations[i].CBalanceSt =  '('+icsFormatPrice((nOpeningBalance*(-1)), null, 2)+')';
            }
            else
            {
                oBankReconciliations[i].CBalanceSt =  icsFormatPrice(nOpeningBalance, null, 2);
            }
        }
        RefreshList(oBankReconciliations);        
    }

    $('#btnRemove').click(function(){
        var oBankReconciliation= $('#tblBankReconciliation').datagrid('getSelected');
        if(oBankReconciliation==null || parseInt(oBankReconciliation.VDID) <=0)
        {
            alert("Please select an Item from List!");
            return false;
        }
        if (!confirm("Confirm to Remove?")) return ;
        var SelectedRowIndex=$('#tblBankReconciliation').datagrid('getRowIndex',oBankReconciliation);        

        if(parseInt(oBankReconciliation.BRID)>0)
        {
            var oBR = {
                BankReconciliationID : parseInt(oBankReconciliation.BRID)
            }; 

            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+  "/BankReconciliation/Delete",
                traditional: true,
                data: JSON.stringify(oBR),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var sFeedBackMessage = jQuery.parseJSON(data);
                    if (sFeedBackMessage == "Deleted")
                    {
                        $('#tblBankReconciliation').datagrid('deleteRow', SelectedRowIndex);
                        var oBankReconciliations = $('#tblBankReconciliation').datagrid('getRows');
                        RemakeBalance(oBankReconciliations);
                    }
                    else
                    {
                        alert(sFeedBackMessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });       
        }
        else
        {
            $('#tblBankReconciliation').datagrid('deleteRow', SelectedRowIndex);
            var oBankReconciliations = $('#tblBankReconciliation').datagrid('getRows');
            RemakeBalance(oBankReconciliations);
        }
    });

    function ValidateInput()
    {
        //if($('#cboReconcileType').val() === null || parseInt($('#cboReconcileType').val()) <= 0)
        //{
        //    alert("Please select Reconcilation Type!");
        //    $('#cboReconcileType').focus();
        //    return false;
        //}

        if($('#cboBusinessUnit').val() === null || parseInt($('#cboBusinessUnit').val()) <= 0)
        {
            alert("Please select Business Unit!");
            $('#cboBusinessUnit').focus();
            return false;
        }

        var oSubledger = $('#txtSubledger').data('Subledger');
        if(oSubledger === null || parseInt(oSubledger.ACCostCenterID) <=0 )
        {
            alert("Please select Bank Account!");
            $('#txtSubledger').focus();
            return false;
        }

        var sStartDate = $('#txtStartDate').datebox('getValue');
        if(sStartDate === null || sStartDate ==="")
        {
            alert("Please select start date!");
            $('#txtStartDate').focus();
            return false;
        }

        var sEndDate = $('#txtEndDate').datebox('getValue');
        if(sEndDate === null || sEndDate ==="")
        {
            alert("Please select end date!");
            $('#txtEndDate').focus();
            return false;
        }

        var dStartDate = new Date(sStartDate);
        var dEndDate = new Date(sEndDate);

        if( dStartDate.getTime() > dEndDate.getTime()){
            alert("Start Date Must be smallar than end Date!");
            $('#txtEndDate').focus();
            return false;
        }
        if($('#cboCurrency').val() === null || parseInt($('#cboCurrency').val()) <= 0)
        {
            alert("Please select Currency!");
            $('#cboCurrency').focus();
            return false;
        }
        return true;
    }

    $('#btnRefresh').click(function(){
        RefreshList([]);
        $('#txtOpeningBalance').data('OpeningBalance', 0);
        $('#txtOpeningBalance').data('OpeningBalanceSt', '');
        if(!ValidateInput()) return;

        var oSubledger = $('#txtSubledger').data('Subledger');
        var oBankReconciliation =   {
            BUID : parseInt($('#cboBusinessUnit').val()),
            SubledgerID : parseInt(oSubledger.ACCostCenterID),
            StartDate : $('#txtStartDate').datebox('getValue'),
            EndDate : $('#txtEndDate').datebox('getValue'),
            CurrencyID : parseInt($('#cboCurrency').val())
            //ReconcileDataType : parseInt($('#cboReconcileType').val())
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress")+  "/BankReconciliation/PrepareBankReconciliation",
            traditional: true,
            data: JSON.stringify(oBankReconciliation),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                clearInterval(intervalID);
                $("#progbarParent").hide();
                oBankReconciliation  = data;
                if (oBankReconciliation.ErrorMessage === "") {
                    $('#txtOpeningBalance').data('OpeningBalance', oBankReconciliation.OpeningBalance);
                    $('#txtOpeningBalance').data('OpeningBalanceSt', oBankReconciliation.OpeningBalanceSt);
                    $('#txtOpeningBalance').val("Opening Balance : " +oBankReconciliation.OpeningBalanceSt);
                    if(oBankReconciliation.BRObjs.length>0)
                    {
                        RefreshList(oBankReconciliation.BRObjs);
                    }                    
                }
                else
                {
                    alert(oBankReconciliation.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    function RefreshList(oBRObjs)
    {
        var data=oBRObjs;
        data={"total":""+data.length+"","rows":data};
        $('#tblBankReconciliation').datagrid('loadData',data);
        MakeFooterColumn('tblBankReconciliation');

        $('#tblBankReconciliation').datagrid({
            rowStyler: function(index,row){
                if (parseInt(row.BRID)>0 && row.RDateSt===""){
                    return 'color:#FF0000;';                    
                }
                else if (parseInt(row.BRID)>0){
                    return 'color:#0404B4;';                    
                }
            }
        });
    }
    function MakeFooterColumn(sTable)
    {
        var nOpeningBalance = parseFloat($('#txtOpeningBalance').data('OpeningBalance'));
        var nTotalDrAmount = GetSum('DrAmount',sTable, true);
        var nTotalCrAmount = GetSum('CrAmount',sTable, true);
        var nClosingBalance = (parseFloat(nOpeningBalance) + parseFloat(nTotalDrAmount) - parseFloat(nTotalCrAmount));
        var sClosingBalance = '';
        if(nClosingBalance<0)
        {
            sClosingBalance = 'Closing Balance = <a href="javascript:void(0)" onclick=Print("Closing")>('+ formatPrice(nClosingBalance*(-1))+')</a>';
        }
        else
        {
            sClosingBalance = 'Closing Balance = <a href="javascript:void(0)" onclick=Print("Closing")>'+ formatPrice(nClosingBalance)+'</a>';
        }
        var nUneffectDrAmount = GetSum('DrAmount',sTable, false);
        var nUneffectCrAmount = GetSum('CrAmount',sTable, false);
        sClosingBalance = sClosingBalance+' || Unaffected (Dr: <a href="javascript:void(0)" onclick=Print("Unaffected")>'+ formatPrice(nUneffectDrAmount)+'</a>';
        var sCreditPart =  'Cr: <a href="javascript:void(0)" onclick=Print("Unaffected")>'+ formatPrice(nUneffectCrAmount)+'</a>)';

        var FooterField=[];
        var obj=new Object();
        var FieldNames=$('#'+sTable).data();
        if(sTable=='tblBankReconciliation')
        {
            //'formatPriceFor3digit'
            obj['VNo'] = "Grand Total: ";
            obj['RVAH'] = sClosingBalance;
            obj['RRmrk'] = sCreditPart;
            obj['RDateSt'] = "";            
            obj['DrAmountSt'] = formatPrice(nTotalDrAmount);
            obj['CrAmountSt'] = formatPrice(nTotalCrAmount);
        }
        FooterField.push(obj);
        $('#'+sTable).datagrid('reloadFooter',FooterField);
    }

    function GetSum(sFieldName,sTable,bIsReconcile)
    {   
        var sum = 0;
        var data=$('#'+sTable).datagrid('getRows');
        //var data=$('#'+sTable).datagrid('getRows').select(sFieldName);        
        //for (i = 0; i < data.length; i++)
        //{
        //    sum = sum + parseFloat(data[i]);
        //}        
        for (i = 0; i < data.length; i++)
        {
            if(bIsReconcile===true)
            {
                if(data[i].RDateSt!="")
                {
                    if(sFieldName==="DrAmount")
                    {
                        sum = sum + parseFloat(data[i].DrAmount);
                    }
                    else if(sFieldName==="CrAmount")
                    {
                        sum = sum + parseFloat(data[i].CrAmount);
                    }
                }
            }
            else
            {
                if(data[i].RDateSt==="")
                {
                    if(sFieldName==="DrAmount")
                    {
                        sum = sum + parseFloat(data[i].DrAmount);
                    }
                    else if(sFieldName==="CrAmount")
                    {
                        sum = sum + parseFloat(data[i].CrAmount);
                    }
                }
            }
        }
        return sum;
    }

    function onClickCell(index,field,value){
        if(field === "RDateSt")
        {
            var sControlID = '#txtBankDate'+ index;
            $(sControlID).unbind("keydown");
            $(sControlID).keydown(function(e){
                if(e.keyCode===13)
                {
                    BankDateKeyDown(parseInt(index));
                }
            });
            $(sControlID).select();
        }

        //if(field === "RRmrk")
        //{
        //    var nDataLength = $('#tblBankReconciliation').datagrid('getRows').length;
        //    if(nDataLength === index)
        //    {
        //        $('#btnClose').select();
        //    }
        //    else
        //    {
        //        var sControlID = '#txtRemarks'+ index;
        //        $(sControlID).unbind("keydown");
        //        $(sControlID).keydown(function(e){
        //            if(e.keyCode===13)
        //            {
        //                RemarksKeyDown(parseInt(index));
        //            }
        //        });
        //    }
        //    $(sControlID).select();
        //}
    }

    function DateValidation(InputDate)
    {
        var MonthArray = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
        var sInputDate = InputDate.split("/");
        if(sInputDate.length!=3)
        {
            return "Invalid Date";
        }
        var dateLength =  sInputDate[0].length;
        var monthLength = sInputDate[1].length;
        var trimYear = $.trim(sInputDate[2]);
        var yearLength =  trimYear.length;
        var monthNumber=0;
        var result = "";
        if(parseInt(dateLength) != 2 || parseInt(monthLength) != 2 || parseInt(yearLength) != 4 || parseInt(trimYear) < 2000)
        {
            result = "Invalid Date";
        }
        if(result != "Invalid Date")
        {
            var nMonth = parseInt(sInputDate[1]);
            if(nMonth===null || nMonth === 'NaN' || nMonth<=0 || nMonth>12)
            {
                result = "Invalid Date";
            }
            else
            {
                result = "Valid Month";
                monthNumber = nMonth;
            }
        }
        if(result == "Valid Month")
        {
            var year = parseInt(trimYear);
            var month = monthNumber;
            var days = Math.round(((new Date(year, month))-(new Date(year, month-1)))/86400000);
            if(parseInt(sInputDate[0]) < 0 || parseInt(sInputDate[0]) > days)
            {
                result = "Invalid Date";
            }
            else
            {
                result = "Valid Date";
            }
        }
        if(result == "Valid Date")
        {
            var sInputDate = InputDate.split("/");
            result = sInputDate[0] + "/" + sInputDate[1] + "/" + sInputDate[2];
        }
        return result;
    }

    function CapitaliseFirstLetter(string)
    {
        var result = string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
        return result;
    }

    function ValidateInputForMultiSave()
    {
        if($('#cboBusinessUnit').val() === null || parseInt($('#cboBusinessUnit').val()) <= 0)
        {
            alert("Please select Business Unit!");
            $('#cboBusinessUnit').focus();
            return false;
        }

        var oAccountHead = $('#txtAccountHead').data('AccountHead');
        if(oAccountHead === null || parseInt(oAccountHead.AccountHeadID) <=0 )
        {
            alert("Please select Reconciliation Account Head!");
            $('#txtAccountHead').focus();
            return false;
        }

        var oSubledger = $('#txtSubledger').data('Subledger');
        if(oSubledger === null || parseInt(oSubledger.ACCostCenterID) <=0 )
        {
            alert("Please select Bank Account!");
            $('#txtSubledger').focus();
            return false;
        }

        var sStartDate = $('#txtStartDate').datebox('getValue');
        if(sStartDate === null || sStartDate ==="")
        {
            alert("Please select start date!");
            $('#txtStartDate').focus();
            return false;
        }

        var sEndDate = $('#txtEndDate').datebox('getValue');
        if(sEndDate === null || sEndDate ==="")
        {
            alert("Please select end date!");
            $('#txtEndDate').focus();
            return false;
        }

        var dStartDate = new Date(sStartDate);
        var dEndDate = new Date(sEndDate);

        if( dStartDate.getTime() > dEndDate.getTime()){
            alert("Start Date Must be smallar than end Date!");
            $('#txtEndDate').focus();
            return false;
        }

        var oBRObjs = $('#tblBankReconciliation').datagrid('getRows');
        if(oBRObjs===null || oBRObjs.length<=0)
        {
            alert("There is no Reconcile data for save!");
            return false;
        }

        for(var i=0; i<oBRObjs.length; i++)
        {
            if(oBRObjs[i]===null || parseInt(oBRObjs[i].VDID) <=0)
            {
                alert("Invalid Reconcile Item! for Voucher No :"+ oBRObjs[i].VNo);
                return false;
            }
            if(parseInt(oBRObjs[i].RStatusInt) !=0)
            {
                alert("Voucher No :"+ oBRObjs[i].VNo+ " already Reconcile!");
                return false;
            }
            var sDateResult  = DateValidation(oBRObjs[i].RDateSt);
            if(sDateResult === "Invalid Date")
            {
                alert("Invalid Reconcilation Date for Voucher No :"+ oBRObjs[i].VNo +"!");
                return false;
            }
        }
        return true;
    }

    $('#btnSave').click(function (e){
        //endEditing();
        if(!ValidateInputForMultiSave())return;

        var oSubledger = $('#txtSubledger').data('Subledger');
        var oAccountHead = $('#txtAccountHead').data('AccountHead');
        if(oAccountHead === null || parseInt(oAccountHead.AccountHeadID) <=0 )
        {
            alert("Please select Reconcile Account Head!");
            $('#txtAccountHead').focus();
            return false;
        }

        if (!confirm("Confirm to Save?")) return ;
        var MonthArray = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
        var oBRObjs = $('#tblBankReconciliation').datagrid('getRows');
        for(var i=0; i<oBRObjs.length; i++)
        {
            var sInputDate = oBRObjs[i].RDateSt.split("/");
            var sDay = sInputDate[0];
            var nMonth = parseInt(sInputDate[1]);
            var sYear = sInputDate[2];
            //var sDate = (sMonth+'/'+sDay+'/'+sYear);
            var sDate = (sDay+' '+ MonthArray[nMonth-1] +' '+sYear);
            oBRObjs[i].RDate = sDate;
        }

        var oBankReconciliation =   {
            BUID : parseInt($('#cboBusinessUnit').val()),
            SubledgerID : parseInt(oSubledger.ACCostCenterID),
            StartDate : $('#txtStartDate').datebox('getValue'),
            EndDate : $('#txtEndDate').datebox('getValue'),
            ReconcilHeadID : parseInt(oAccountHead.AccountHeadID),
            BRObjs : oBRObjs
        };

        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/BankReconciliation/MultiSave",
            traditional: true,
            data:  JSON.stringify(oBankReconciliation),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                clearInterval(intervalID);
                $("#progbarParent").hide();
                oBankReconciliation  = data;
                if (oBankReconciliation.ErrorMessage === "") {
                    alert("Data Save Successfully");
                    $('#txtOpeningBalance').val("Opening Balance : "+oBankReconciliation.OpeningBalanceSt);
                    if(oBankReconciliation.BRObjs.length>0)
                    {
                        RefreshList(oBankReconciliation.BRObjs);
                    }
                    MakeFooterColumn('tblBankReconciliation');                    
                }
                else
                {
                    alert(oBankReconciliation.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(xhr+'~' +status+'~'+error);
            }
        });
    });

    $('#btnCommit').click(function (e){
        var oBRObjs = $('#tblBankReconciliation').datagrid('getRows');
        if(oBRObjs === undefined ||  oBRObjs === null || oBRObjs.length <=0 )
        {
            alert("There is no data for Authorize!");
            $('#btnRefresh').focus();
            return;
        }
        for(var i=0; i<oBRObjs.length; i++)
        {
            if(parseInt(oBRObjs[i].BRID)<=0)
            {
                alert("Please Save Voucher No : "+ oBRObjs[i].VNo+ " before authorize voucher");
                return;
            }
            if(parseInt(oBRObjs[i].RStatusInt) !=0)
            {
                alert("Voucher No :"+ oBRObjs[i].VNo+ " already Reconcile!");
                return;
            }
            var sDateResult  = DateValidation(oBRObjs[i].RDateSt);
            if(sDateResult === "Invalid Date")
            {
                alert("Invalid Reconcilation Date for Voucher No :"+ oBRObjs[i].VNo +"!");
                return;
            }
            oBRObjs[i].RDate = oBRObjs[i].RDateSt;
            oBRObjs[i].VDate = oBRObjs[i].VDateSt;
        }
        if (!confirm("Confirm to Authorize?")) return ;
        var oBankReconciliation =  { BRObjs : oBRObjs };

        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/BankReconciliation/AuthorizeBankReconciliation",
            traditional: true,
            data:  JSON.stringify(oBankReconciliation),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                clearInterval(intervalID);
                $("#progbarParent").hide();
                var sFeedBackMessage = jQuery.parseJSON(data);
                if (sFeedBackMessage === "Successful") {
                    alert("Successfully Authorized");
                    RefreshList([]);
                }
                else
                {
                    alert(sFeedBackMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(xhr+'~' +status+'~'+error);
            }
        });
    });

    $('#btnClose').click(function (e){
        window.location.href = window.location.href;
    });

    $('#btnPrint').click(function (e){
      
        Print("Common");
    });

    function Print(sControl)
    {
        debugger;
        if(!ValidateInput()) return;
        var oSubledger = $('#txtSubledger').data('Subledger');
        var oBankReconciliation =   {
            BUID : parseInt($('#cboBusinessUnit').val()),
            SubledgerID : parseInt(oSubledger.ACCostCenterID),
            StartDate : $('#txtStartDate').datebox('getValue'),
            EndDate : $('#txtEndDate').datebox('getValue'),
            CurrencyID : parseInt($('#cboCurrency').val()),
            ErrorMessage:sControl //Common, Closing, Unaffected 
            //ReconcileDataType : parseInt($('#cboReconcileType').val())
        };
        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress")+  "/BankReconciliation/SetPrintSessionData",
            traditional: true,
            data: JSON.stringify(oBankReconciliation),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var sFeedBackMessage  = jQuery.parseJSON(data);
                if (sFeedBackMessage === "Successful") {
                    window.open(sessionStorage.getItem('BaseAddress')+'/BankReconciliation/PrintBankReconciliation', "_blank");
                }
                else
                {
                    alert(sFeedBackMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    }

    $('#btnExportXL').click(function (e){
        if(!ValidateInput()) return;
        var oSubledger = $('#txtSubledger').data('Subledger');
        var oBankReconciliation =   {
            BUID : parseInt($('#cboBusinessUnit').val()),
            SubledgerID : parseInt(oSubledger.ACCostCenterID),
            StartDate : $('#txtStartDate').datebox('getValue'),
            EndDate : $('#txtEndDate').datebox('getValue'),
            CurrencyID : parseInt($('#cboCurrency').val())
            //ReconcileDataType : parseInt($('#cboReconcileType').val())
        };
        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress")+  "/BankReconciliation/SetPrintSessionData",
            traditional: true,
            data: JSON.stringify(oBankReconciliation),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var sFeedBackMessage  = jQuery.parseJSON(data);
                if (sFeedBackMessage === "Successful") {
                    window.open(sessionStorage.getItem('BaseAddress')+'/BankReconciliation/ExportBankReconciliationToExcel', "_blank");
                }
                else
                {
                    alert(sFeedBackMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });

    $('#btnPrintBankFlow').click(function (e){
        if(!ValidateInput()) return;
        var oSubledger = $('#txtSubledger').data('Subledger');
        var oBankReconciliation =   {
            BUID : parseInt($('#cboBusinessUnit').val()),
            SubledgerID : parseInt(oSubledger.ACCostCenterID),
            StartDate : $('#txtStartDate').datebox('getValue'),
            EndDate : $('#txtEndDate').datebox('getValue'),
            CurrencyID : parseInt($('#cboCurrency').val())
            //ReconcileDataType : parseInt($('#cboReconcileType').val())
        };
        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress")+  "/BankReconciliation/SetPrintSessionData",
            traditional: true,
            data: JSON.stringify(oBankReconciliation),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var sFeedBackMessage  = jQuery.parseJSON(data);
                if (sFeedBackMessage === "Successful") {
                    window.open(sessionStorage.getItem('BaseAddress')+'/BankReconciliation/PrintBankReconciliationFlow', "_blank");
                }
                else
                {
                    alert(sFeedBackMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });
    ///AccountHead Pick
    $("#txtAccountHead").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sAccountHeadName = $.trim($('#txtAccountHead').val())
            if(sAccountHeadName === null || sAccountHeadName === "")
            {
                alert("Please enter payable account Name!");
                $('#txtAccountHead').focus();
                return;
            }

            var oChatOfAccount = {
                AccountHeadCodeName : sAccountHeadName
            }
            PickAccountHeads(oChatOfAccount);
        }
    });

    $('#txtAccountHead').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtAccountHead").removeClass("fontColorOfPickItem");
            $('#txtAccountHead').data('AccountHead', null);
        }
    });

    function PickAccountHeads(oChatOfAccount)
    {
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oChatOfAccount,
            ControllerName: "BankReconciliation",
            ActionName: "GetsCOAByCodeOrName",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AccountHeadID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "AccountCode", title: "Account Code", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "AccountHeadName", title: "Account Name", width: 220, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ParentHeadName", title: "Category Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winAccountHead',
                        winclass: 'clsAccountHead',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblAccountHeads',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'AccountHeadName',
                        windowTittle: 'Account Head List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
                return;
            }
        });
    }
    //End AccountHead Picker

    ///Subledger Pick
    $("#txtSubledger").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sSubledgerName = $.trim($('#txtSubledger').val())
            if(sSubledgerName === null || sSubledgerName === "")
            {
                alert("Please enter subledger Name!");
                $('#txtSubledger').focus();
                return;
            }

            var oACCostCenter = {
                Name : sSubledgerName
            };
            PickSubledger(oACCostCenter);
        }
    });

    $('#txtSubledger').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtSubledger").removeClass("fontColorOfPickItem");
            $('#txtSubledger').data('Subledger', null);
        }
    });

    function PickSubledger(oACCostCenter)
    {
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oACCostCenter,
            ControllerName: "ACCostCenter",
            ActionName: "GetsCostCenter",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ACCostCenterID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Subledger Code", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Subledger Name", width: 220, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "CategoryName", title: "Category Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winSubledger',
                        winclass: 'clsSubledger',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblSubledger',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Subledger List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
                return;
            }
        });
    }
    //End Subledger Picker

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid === 'winAccountHead')
        {
            if (oreturnObj != null && parseInt(oreturnObj.AccountHeadID) > 0) {
                $('#txtAccountHead').val(oreturnObj.AccountHeadName);
                $('#txtAccountHead').addClass('fontColorOfPickItem');
                $('#txtAccountHead').data('AccountHead', oreturnObj);
                $("#cboComponentType").val(parseInt(oreturnObj.ComponentID));
                $('#txtSubledger').focus();
            }
        }
        else if (oPickerobj.winid === 'winSubledger')
        {
            if (oreturnObj != null && parseInt(oreturnObj.ACCostCenterID) > 0) {
                $('#txtSubledger').val(oreturnObj.Name);
                $('#txtSubledger').addClass('fontColorOfPickItem');
                $('#txtSubledger').data('Subledger', oreturnObj);
                RefreshList([]);
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url : sessionStorage.getItem('BaseAddress')+  "/BankReconciliation/GetLastDate",
                    traditional: true,
                    data:  JSON.stringify(oreturnObj),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        var sLastDate  = jQuery.parseJSON(data);
                        $('#txtStartDate').datebox('setValue', sLastDate);
                        $('#btnRefresh').focus();
                    },
                    error: function (xhr, status, error)
                    {
                        alert(xhr+'~' +status+'~'+error);
                    }
                });

            }
        }
    }

    function FormatBankDate(value, row, index)
    {
        var HtmlControl = '';
        var sControlID = 'txtBankDate'+ index;
        HtmlControl = '<input type="text" class="DateClass" id="'+sControlID+'" value="'+value+'" />';
        return HtmlControl;
    }

    function FormatRemarks(value, row, index)
    {
        var HtmlControl = '';
        var sControlID = 'txtRemarks'+ index;
        HtmlControl = '<input type="text" class="RemarksClass" id="'+sControlID+'" value="'+value+'" />';
        return HtmlControl;
    }

    function BankDateKeyDown(nRowindex)
    {
        //var nTempIndex = parseInt(nRowindex);
        $('#tblBankReconciliation').datagrid('selectRow', nRowindex);
        var oBankReconciliation = $('#tblBankReconciliation').datagrid('getSelected');
        var sHtmlControlID = '#txtBankDate' + nRowindex;
        var sBankDate = $(sHtmlControlID).val();

        if(sBankDate!=null && sBankDate!="")
        {
            var sDateResult  = DateValidation(sBankDate);
            if(sDateResult === "Invalid Date")
            {
                alert("Invalid Reconcilation Date!");
                var sTargetedTextBox = '#txtBankDate' + nRowindex;
                $('#tblBankReconciliation').datagrid('selectRow', nRowindex);

                $(sTargetedTextBox).unbind("keydown");
                $(sTargetedTextBox).keydown(function(e){
                    if(e.keyCode===13)
                    {
                        BankDateKeyDown(parseInt(nRowindex));
                    }
                });
                $(sTargetedTextBox).select();
                return;
            }

            var MonthArray = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
            var sInputDate = sBankDate.split("/");
            var sDay = sInputDate[0];
            var nMonth = parseInt(sInputDate[1]);
            var sYear = sInputDate[2];
            //var sDate = (sMonth+'/'+sDay+'/'+sYear);
            var sDate = (sDay+' '+ MonthArray[nMonth-1] +' '+sYear);
            oBankReconciliation.RDate = sBankDate;
        }
        else
        {
            oBankReconciliation.RDate = "";
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/BankReconciliation/SaveBankDate",
            traditional: true,
            data:  JSON.stringify(oBankReconciliation),
            contentType: "application/json; charset=utf-8",
            success: function (data) {                
                var oBankReconciliation = jQuery.parseJSON(data);
                if (oBankReconciliation.EMessage === "") {                    
                    $('#tblBankReconciliation').datagrid('updateRow',{index: nRowindex,	row: oBankReconciliation});
                    MakeFooterColumn('tblBankReconciliation');
                    nRowindex = nRowindex + 1;
                    var sTargetedTextBox = '#txtBankDate' + nRowindex;
                    $('#tblBankReconciliation').datagrid('selectRow', nRowindex);

                    $(sTargetedTextBox).unbind("keydown");
                    $(sTargetedTextBox).keydown(function(e){
                        if(e.keyCode===13)
                        {
                            BankDateKeyDown(parseInt(nRowindex));
                        }
                    });
                    $(sTargetedTextBox).select();
                                        
                    //var sTargetedTextBox = '#txtRemarks' + nRowindex;
                    //$('#tblBankReconciliation').datagrid('selectRow', nRowindex);
                    //$(sTargetedTextBox).unbind("keydown");
                    //$(sTargetedTextBox).keydown(function(e){
                    //    if(e.keyCode===13)
                    //    {
                    //        RemarksKeyDown(parseInt(nRowindex));
                    //    }
                    //});
                    //$(sTargetedTextBox).select();                
                }
                else
                {
                    alert(oBankReconciliation.EMessage);
                    var sTargetedTextBox = '#txtBankDate' + nRowindex;
                    $('#tblBankReconciliation').datagrid('selectRow', nRowindex);

                    $(sTargetedTextBox).unbind("keydown");
                    $(sTargetedTextBox).keydown(function(e){
                        if(e.keyCode===13)
                        {
                            BankDateKeyDown(parseInt(nRowindex));
                        }
                    });
                    $(sTargetedTextBox).select();
                    return;
                }
            },
            error: function (xhr, status, error)
            {
                alert(xhr+'~' +status+'~'+error);
            }
        });
        
    }

    function RemarksKeyDown(nRowindex)
    {
        $('#tblBankReconciliation').datagrid('selectRow', nRowindex);
        var oBankReconciliation = $('#tblBankReconciliation').datagrid('getSelected');
        var sHtmlControlID = '#txtRemarks' + nRowindex;
        var sRemarks = $(sHtmlControlID).val();
        oBankReconciliation.RRmrk = sRemarks;

        if(parseInt(oBankReconciliation.BRID)>0)
        {            
            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+  "/BankReconciliation/SaveRemarks",
                traditional: true,
                data:  JSON.stringify(oBankReconciliation),
                contentType: "application/json; charset=utf-8",
                success: function (data) {                
                    var oBankReconciliation = jQuery.parseJSON(data);
                    if (oBankReconciliation.EMessage === "") {                    
                        $('#tblBankReconciliation').datagrid('updateRow',{index: nRowindex,	row: oBankReconciliation});
                        var nDataLength = $('#tblBankReconciliation').datagrid('getRows').length;
                        if(nDataLength === nRowindex)
                        {
                            $('#btnClose').select();
                        }
                        else
                        {
                            nRowindex = nRowindex + 1;
                            var sTargetedTextBox = '#txtBankDate' + nRowindex;
                            $('#tblBankReconciliation').datagrid('selectRow', nRowindex);

                            $(sTargetedTextBox).unbind("keydown");
                            $(sTargetedTextBox).keydown(function(e){
                                if(e.keyCode===13)
                                {
                                    BankDateKeyDown(parseInt(nRowindex));
                                }
                            });
                            $(sTargetedTextBox).select();
                        }               
                    }
                    else
                    {
                        alert(oBankReconciliation.EMessage);
                        var sTargetedTextBox = '#txtRemarks' + nRowindex;
                        $('#tblBankReconciliation').datagrid('selectRow', nRowindex);
                        $(sTargetedTextBox).unbind("keydown");
                        $(sTargetedTextBox).keydown(function(e){
                            if(e.keyCode===13)
                            {
                                RemarksKeyDown(parseInt(nRowindex));
                            }
                        });
                        $(sTargetedTextBox).select();
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(xhr+'~' +status+'~'+error);
                }
            });
        }
        else
        {
            $('#tblBankReconciliation').datagrid('updateRow',{index: nRowindex,	row: oBankReconciliation});
            var nDataLength = $('#tblBankReconciliation').datagrid('getRows').length;
            if(nDataLength === nRowindex)
            {
                $('#btnClose').select();
            }
            else
            {
                nRowindex = nRowindex + 1;
                var sTargetedTextBox = '#txtBankDate' + nRowindex;
                $('#tblBankReconciliation').datagrid('selectRow', nRowindex);

                $(sTargetedTextBox).unbind("keydown");
                $(sTargetedTextBox).keydown(function(e){
                    if(e.keyCode===13)
                    {
                        BankDateKeyDown(parseInt(nRowindex));
                    }
                });
                $(sTargetedTextBox).select();
            }
        }
    }
</script>