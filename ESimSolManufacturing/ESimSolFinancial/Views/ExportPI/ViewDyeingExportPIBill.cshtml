@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Export PI Bill";
}

<body>
    @model ESimSol.BusinessObjects.ExportPI
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div id="winContactPersonnel" class="easyui-window" title="Add Contact Personeel" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <legend style="font-weight:bold"> Contact Personnel Informations : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:125px; text-align:right">
                            Name :
                        </td>

                        <td style="width:200px">
                            <input type="text" style="width: 200px;" id="txtName" />
                        </td>
                        <td style="width:50px"> </td>
                        <td style="width:125px; text-align:right">
                            Address :
                        </td>
                        <td style="width:300px">
                            <input type="text" style="width: 300px;" id="txtAddress" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Phone :
                        </td>

                        <td style="width:200px">
                            <input type="text" style="width: 200px;" id="txtPhone" />
                        </td>
                        <td style="width:50px"> </td>
                        <td style="width:125px; text-align:right">
                            Email :
                        </td>
                        <td style="width:300px">
                            <input type="text" style="width: 300px;" id="txtEmail" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:125px; text-align:right">
                            Note :
                        </td>
                        <td colspan="4">
                            <input type="text" style="width: 690px;" id="txtNote" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <fieldset style="width:97%;height:8%; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:7%;text-align:right;">
                        <a id="btnAddContactPersonnel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="AddContactPersonnel()">Save</a>
                        <a id="btnCloseContactPersonnel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="CloseContactPersonnel()">Close</a>
                    </td>

                </tr>
            </table>
        </fieldset>
    </div>

    <div id="winOrdersheetPicker" style="width:70%; text-align:center;" class="easyui-window winstyle" title="Order Sheet Picker" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <table style="width:100%;">
            <tr>
                <td style="width:50%">
                    <div style="width:100%">
                        <table id="tblOrderSheets" title="Order Sheet List" class="easyui-datagrid" style="height:300px; " fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                            <thead>
                                <tr>
                                    <th field="PONo" width="100">PO No</th>
                                    <th field="OrderSheetStatusInString" width="150">Status</th>
                                    <th field="PartyPoNo" width="150">Party PO No</th>
                                    <th field="OrderDateInString" width="150">Order Date</th>
                                    <th field="Amount" align="right" formatter="formatPrice" width="100">Amount</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </td>
                <td style="width:50%">
                    <table id="tblOrderSheetDetail" title="Order Sheet Details" class="easyui-datagrid" style="height:300px; " fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                        <thead>
                            <tr>
                                <th field="ProductName" width="130" align="left">Product</th>
                                <th field="SizeName" width="60" align="left">Size</th>
                                <th field="ColorName" width="80" align="left">Color</th>
                                <th field="UnitSymbol" width="50" align="left">Unit</th>
                                <th field="YetToPIQty" width="70" align="right">Qty</th>
                                <th field="UnitPrice" width="60" align="right">Rate</th>
                                <th field="Amount" width="80" formatter="formatPrice" align="right">Total</th>
                            </tr>
                        </thead>
                    </table>
                </td>
            </tr>
        </table>

        <fieldset class="actionfieldsetstyle">
            <legend>Actions : </legend>
            <a id="btnOkOrderSheetPicker" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
            <a id="btnCloseOrderSheetPicker" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
        </fieldset>
    </div>
    <div class="menuMainCollectionTable" style="width:100%;height:100%">
        <div class="easyui-panel" title="" style="font-family:Tahoma; text-align:center; height:88%;">
            <div id="tabExportPITabs" class="easyui-tabs" style="width:100%; height:100%;">
                <div title="Export PI" style=" width:100%">
                    <div id="divExportPI">
                        <fieldset>
                            <legend style="font-weight:bold"> PI Information : </legend>
                            <table border="0" cellspacing="1" cellpadding="1" class="CaptionStyle" style="width:100%;text-align:left;">
                                <tr>
                                    <td style="width:15%; text-align:right">
                                        PI No :
                                    </td>
                                    <td style="width:15%">
                                        @Html.TextBoxFor(model => model.PINo, new { style = "width:100%", id = "txtPINo", placeholder = "Auto Generated", disabled = "disabled" })
                                    </td>
                                    <td style="width:9%; text-align:right;">Payment Type:</td>
                                    <td style="width:9%">
                                        <select id="cboPaymentType" style=" width:100%;"></select>
                                    </td>
                                    <td style="width:15%; text-align:right">
                                        Issue Date :
                                    </td>
                                    <td style="width:15%"><input type="text" style="width:100%;" id="txtIssueDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    <td style="width:9%;text-align:right;">Validate Date : </td>
                                    <td style="width:9%"><input type="text" style="width:100%;" id="txtValidateDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                </tr>
                                <tr>
                                    <td style="width:15%; text-align:right">
                                        Factory(AccountOf):
                                    </td>
                                    <td style="width:15%">@Html.TextBoxFor(model => model.ContractorName, new { style = "width:100%;", id = "txtContractorName", placeholder = "Type & Press Enter" })</td>
                                    <td style="width:9%;text-align:right;">C.Person: </td>
                                    <td style="width:9%"><select id="cboContractorContactPerson" style=" width:100%;"></select></td>
                                    <td style="width:15%; text-align:right">
                                        <span class="lblBUSName"></span> <label> Concern Person</label>:
                                    </td>
                                    <td style="width:15%"><select id="cboMktPersons" style="width:100%;"></select></td>
                                    <td style="width:9%;text-align:right;">Currency : </td>
                                    <td style="width:9%"><select id="cboCurrency" style=" width:100%;" name="cboCurrency" class="_select_changeA"></select></td>
                                </tr>
                                <tr>
                                    <td style="width:15%; text-align:right">
                                        Buying House :
                                    </td>

                                    <td style="width:15%">@Html.TextBoxFor(model => model.BuyerName, new { style = "width:100%;", id = "txtBuyerName", placeholder = "Type & Press Enter" }) </td>
                                    <td style="width:9%;text-align:right;">C.Person: </td>
                                    <td style="width:9%"><select id="cboBuyerContactPerson" style=" width:100%;"></select></td>
                                    <td style="width:15%; text-align:right">
                                        Yarn Count  :
                                    </td>
                                    <td style="width:15%">@Html.TextBoxFor(model => model.YarnCount, new { style = "width:100%;", id = "txtYarnCount" })</td>
                                    <td style="width:9%;text-align:right;">PI Type : </td>
                                    <td style="width:9%"><select id="cboPIType" style="width:100%;" class="changePIType"><option value="0">Open</option><option value="1">Order Sheet</option></select></td>
                                </tr>
                                <tr>
                                    <td style="width:15%; text-align:right">
                                        Delivery To :
                                    </td>

                                    <td colspan="3" style="width:33%">@Html.TextBoxFor(model => model.DeliveryToName, new { style = "width:100%;", id = "txtDeliveryToName", placeholder = "Type & Press Enter" }) </td>
                                    <td style="width:15%; text-align:right">
                                        Color Info:
                                    </td>

                                    <td style="width:15%">@Html.TextBoxFor(model => model.ColorInfo, new { style = "width:100%;", id = "txtColorInfo" }) </td>
                                    <td style="width:9%;text-align:right;">Depth of Shade:</td>
                                    <td style="width:9%;text-align:right;"><select id="cboDepthOfShade" style="width:100%;"></select></td>

                                </tr>
                                <tr>
                                    <td style="width:15%; text-align:right">
                                        PI Bank :
                                    </td>
                                    <td style="width:15%"><select style="width:100%;" id="cboBank" /></td>
                                    <td style="width:9%;text-align:right;">Bank Account : </td>
                                    <td style="width:9%"><select style="width:100%;" id="cboBankAccount" /></td>
                                    <td style="width:15%; text-align:right">
                                        Note :
                                    </td>
                                    <td colspan="3" style="width:33%">
                                        @Html.TextBoxFor(model => model.Note, new { style = "width:100%;", id = "txtNote" })
                                    </td>
                                </tr>
                            </table>
                        </fieldset>
                        </div>
                        <table id="tblExportPIDetail" title="Products/Item Description" class="easyui-datagrid" style="width:100%;height:250px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarPIDetail">
                            <thead>
                                <tr>
                                    <th field="ProductCode" width="80" align="left">Code</th>
                                    <th field="ProductName" width="140" align="left">Name</th>
                                    <th data-options="field:'BuyerReference',width:100,height:60 ,align:'Left',editor:{type:'text'}" align="Left">Count/B.Ref</th>
                                    <th data-options="field:'Qty',width:100,align:'right',editor:{type:'numberbox',options:{precision:4}}" align="right">Qty(<label id="lblMUnitOne"></label>)</th>
                                    <th data-options="field:'UnitPrice',width:80,align:'right',editor:{type:'numberbox',options:{precision:8}}" formatter="formatPricePrice" align="right">UP.(<label id="lblMUnitOneUP"></label>)</th>
                                    <th data-options="field:'QtyTwo',width:80,align:'right',editor:{type:'numberbox',options:{precision:4}}" align="right">Qty(<label id="lblMUnitTwo"></label>)</th>
                                    <th data-options="field:'UnitPriceTwo',width:100,align:'right',editor:{type:'numberbox',options:{precision:4}}" formatter="formatPricePrice" align="right">UP.(<label id="lblMUnitTwoUP"></label>)</th>
                                    <th field="AmountSt" width="100" align="right">Amount</th>
                                    <th data-options="field:'AdjQty',width:100,align:'right',editor:{type:'numberbox',options:{precision:4}}" align="right">AdjQty</th>
                                    <th data-options="field:'AdjRate',width:100,align:'right',editor:{type:'numberbox',options:{precision:4}}" align="right">AdjRate</th>
                                    <th data-options="field:'DocCharge',width:100,align:'right',editor:{type:'numberbox',options:{precision:4}}" align="right">DocCharge</th>
                                    <th data-options="field:'CRate',width:100,align:'right',editor:{type:'numberbox',options:{precision:4}}" align="right">CRate</th>
                                    <th field="AdjValue" width="100" align="right">AdjValue</th>
                                    <th field="ExportQuality" width="100" align="right">Quality</th>
                                    <th data-options="field:'StyleNo',width:100,height:60 ,align:'Left',editor:{type:'text'}" align="Left">Style No</th>
                                    <th data-options="field:'ColorInfo',width:100,height:60 ,align:'Left',editor:{type:'text'}" align="Left">ColorInfo</th>
                                </tr>
                            </thead>
                        </table>
                        <div id="toolbarPIDetail">
                            <a id="btnRefreshPIDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                            <a id="btnProductFormDeliveryBill" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">Add From Bill</a>
                        </div>
                        <table border="0" style="width:100%;">
                            <tr>
                                <td id=" tdtotalcaption" style="width: 40%; text-align: right; font-size: 12px; font-weight:bold"></td>
                                <td id="tdTotalCaption" style="width: 10%; text-align: right; font-size: 12px; font-weight:bold"> Total : </td>
                                <td style="width: 20%; text-align: right; font-size: 12px">
                                    <label id="lblTotalQty" style="text-align: right; font-size:12px; float: right; font-weight:bold">0.00</label>
                                </td>
                                <td style="width: 20%; text-align: right; font-size: 12px">
                                    <label id="lblTotalValue" style="text-align: right; font-size:12px; float: right; font-weight:bold">0.00</label>
                                </td>
                                <td style="width: 10%; text-align: right; font-size: 12px">
                                    <label id="lblTotalAdjValue" style="text-align: right; font-size:12px; float: right; font-weight:bold">0.00</label>
                                </td>
                            </tr>
                        </table>
                    </div>
                <div id="divTermsAndCondition" title="Terms & Condition" style="padding:2px">
                    <fieldset id="fsTemsCondition">
                        <legend style="font-weight:bold"> Terms & Conditions : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" class="CaptionStyle" style="width:100%;">
                            <tr>
                                <td style="width:15%; text-align:right">Libor Rate</td>
                                <td style="width:18%"><select id="cboLiborRate" style="width:100%" /></td>
                                <td style="width:15%; text-align:right">LC Terms</td>
                                <td style="width:18%"><select style="width:100%;" id="cboLCTerm" /></td>
                                <td style="width:15%; text-align:right">App LC Open Date</td>
                                <td style="width:18%"><input type="text" style="width:100%;" id="txtLCOpenDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                            </tr>
                            <tr>
                                <td style="width:15%; text-align:right">Bank FDD</td>
                                <td style="width:18%"><select id="cboBankFDD" style="width:100%" /></td>
                                <td style="width:15%; text-align:right">Over Due Rate(%)</td>
                                <td style="width:18%">@Html.TextBoxFor(model => model.OverdueRateSt, new { style = "width:100%;", id = "txtOverDueRate" })</td>
                                <td style="width:15%; text-align:right">App Delivery Date</td>
                                <td style="width:18%"><input type="text" style="width:100%;" id="txtDeliveryDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" /></td>
                            </tr>
                            <tr>
                                <td style="width:15%; text-align:right">Shipment Term</td>
                                <td style="width:18%"><select id="cboShipmentTermFDD" style="width:100%" /></td>
                                <td style="width:15%; text-align:right">Note(Non Print)</td>
                                <td colspan="3" style="width:50%"><input type="text" style="width:100%;" id="txtNoteTwo" /></td>
                            </tr>
                        </table>
                    </fieldset>
                    <table id="tblPITandCClauses" title="Commercial Terms and Condition" class="easyui-datagrid" style="width:100%; height:340px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#TCtoolbar" data-options="singleSelect: true, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false, onClickRow: onClickRowTC">
                        <thead>
                            <tr>
                                <th field="CaptionName" width="12%">Caption</th>
                                <th field="TermsAndCondition" width="88%" align="left" data-options="field:'TermsAndCondition',editor:{type:'text',options:{precision:0}}"> Terms & Condition </th>
                            </tr>
                        </thead>
                    </table>
                    <div id="TCtoolbar" style=" height:25px;">
                        @*Ratin*@
                        <a id="btnAddTermsAndConditon" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true">Pick Term And Condition</a>
                        <a id="btnRemoveTermsAndCondition" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                        <a id="btnRefreshTermsAndCondition" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                    </div>
                </div>
                <div id="divPIPreview" title="PI Preview" style="padding:2px; margin-top:3px">
                    <fieldset>
                        <table border="0" cellspacing="2" cellpadding="2" style="width:100%">
                            <tr>
                                <td style="width:100%; text-align:center">
                                    <input type="text" style="width:100%;" id="txtSetupNote" readonly="readonly" />
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                    <fieldset>
                        <table border="0" cellspacing="2" cellpadding="2" style="width:100%">
                            <tr>
                                <td style="width:100%; text-align:center">
                                    <input type="text" style="width:100%;" id="txtPreface" readonly="readonly" />
                                </td>

                            </tr>
                        </table>
                    </fieldset>
                    <fieldset>
                        <table id="tblShipment" border="0" cellspacing="2" cellpadding="2" class="CaptionStyle" style="width:100%">
                            <tr>
                                <td style="width:15%; text-align:right">
                                    Part Shipment
                                </td>
                                <td style="width:30%; text-align:right">
                                    <input type="text" style="width:100%;" id="txtPartShipment" />
                                </td>
                                <td style="width:10%; text-align:right"></td>
                                <td style="width:15%; text-align:right">
                                    Shipment By
                                </td>
                                <td style="width:30%">
                                    <input type="text" style="width:100%;" id="txtShipmentBy" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width:15%; text-align:right">
                                    Place Of Shipment
                                </td>
                                <td style="width:30%">
                                    <input type="text" style="width:100%;" id="txtPlaceofShipment" />
                                </td>
                                <td style="width:10%; text-align:right"></td>
                                <td style="width:15%; text-align:right">
                                    Place Of Delivery
                                </td>
                                <td style="width:30%">
                                    <input type="text" style="width:100%;" id="txtPlaceofDelivery" />
                                </td>
                            </tr>
                        </table>
                    </fieldset>

                    <fieldset>
                        <table border="0" cellspacing="2" cellpadding="2" style="width:100%">
                            <tr>
                                <td style="width:48%; text-align:center">
                                    <input type="text" style="width:100%;" id="txtAcceptanceBy" />
                                </td>
                                <td style="width:4%"></td>
                                <td style="width:48%; text-align:center">
                                    <input type="text" style="width:100%;" id="txtFor" />
                                </td>

                            </tr>
                        </table>
                    </fieldset>
                </div>
            </div>
        </div>
        <fieldset>
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:10%;text-align:right;">
                        <a id="btnPrintPI" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print PI</a>

                    </td>
                    <td style="width:62%; text-align:right"></td>
                    <td style="width:18%;text-align:right;">
                        <label id="lblCreateReviseNo">Create New version?</label>  <input id="chkIsCreateReviseNo" type="checkbox" checked="checked" />
                    </td>
                    <td style="width:5%;text-align:right;">
                        <a id="btnCopy" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-copy" plain="true">Copy</a>
                        <a id="btnAcceptReviseExportPI" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save(Revise)</a>
                    </td>
                    <td style="width:5%;text-align:right;">
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-closed" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
    <div id="winExportPIDetailEdit" style="width:600px;" class="easyui-window" title="Edit Detail" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <legend style="font-weight:bold"> Detail info : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:20%;text-align:right">
                            Product:
                        </td>
                        <td style="width:80%;text-align:left">
                            <input type="text" id="txtProduct_Edit" style="width:75%" />
                            <a id="btnPickProduct" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                        </td>
                    </tr>


                </table>
                <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size: 11px; font-weight: bold">

                    <tr>
                        <td style="width: 20%; text-align: right">
                            Qty(<span class="lblMUnitOne"></span>):

                        </td>

                        <td style="width: 30%; text-align: left">
                            <input type="text" style="width: 80%; text-align:right" id="txtQtyInOne" />
                        </td>
                        <td style="width: 20%; text-align: right">
                            Qty(<span class="lblMUnitTwo"></span>):
                        </td>

                        <td style="width: 30%; text-align: left">
                            <input type="text" style="width:80%; text-align:right" id="txtQtyInTwo" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 20%; text-align: right">
                            Unit Price ($/<span class="lblMUnitOne"></span>):
                        </td>
                        <td style="width:30%; text-align: left">
                            <input type="text" style="width:80%; text-align:right" id="txtUnitPriceInOne" />
                        </td>
                        <td style="width: 20%; text-align: right">
                            Unit Price ($/<span class="lblMUnitTwo"></span>):
                        </td>
                        <td style="width: 30%; text-align: left">
                            <input type="text" style="width:80%; text-align:right" id="txtUnitPriceInTwo" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 20%; text-align: right">
                            Amount(USD):
                        </td>
                        <td style="width:30%; text-align: left">
                            <input type="text" style="width:80%; text-align:right" id="txtAmount" disabled="disabled" />
                        </td>
                        <td style="width: 20%; text-align: right"></td>
                        <td style="width: 30%; text-align: left"></td>
                    </tr>
                    <tr>
                        <td style="width: 20%; text-align: right">
                            Count/Buyer Ref
                        </td>
                        <td style="width: 30%;">
                            <input type="text" style="width: 100%;" id="txtBuyerReference" />
                        </td>
                        <td style="width: 20%; text-align: right">
                            Quality:
                        </td>
                        <td style="width: 30%">
                            <select style="width:100%" id="cboEQuality"></select>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 20%; text-align: right">
                            ColorInfo
                        </td>
                        <td style="width: 30%;">
                            <input type="text" style="width: 100%;" id="txtColorEdit" />
                        </td>
                        <td style="width: 20%; text-align: right">
                            Style No
                        </td>
                        <td style="width: 30%">
                            <input type="text" style="width: 100%;" id="txtStyleNo" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 20%; text-align: right">
                            Adj Qty(<span class="lblMUnitOne"></span>):
                        </td>
                        <td style="width: 30%; text-align: left">
                            <input type="text" style="width: 80%; text-align:right" id="txtAdjQty" />
                        </td>
                        <td style="width: 20%; text-align: right">
                            Adj Rate($/<span class="lblMUnitOne"></span>):
                        </td>
                        <td style="width: 30%; text-align: left">
                            <input type="text" style="width:80%; text-align:right" id="txtAdjRate" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 20%; text-align: right">
                            Doc. Charge($/<span class="lblMUnitOne"></span>):
                        </td>
                        <td style="width: 30%; text-align: left">
                            <input type="text" style="width: 80%; text-align:right" id="txtDocCharge" />
                        </td>
                        <td style="width: 20%; text-align: right">
                            Adj Amount(USD):
                        </td>
                        <td style="width: 30%; text-align: left">
                            <input type="text" style="width:80%; text-align:right" id="txtAdjAmount" disabled="disabled" />
                        </td>
                    </tr>
                    <tr>

                        <td style="width: 20%; text-align: right">
                            Com. Rate($/<span class="lblMUnitOne"></span>):
                        </td>
                        <td style="width: 30%; text-align: left">
                            <input type="text" style="width:80%; text-align:right" id="txtCRate" />
                        </td>
                        <td style="width: 20%; text-align: right">
                            Com. Amount(USD):
                        </td>
                        <td style="width: 30%; text-align: left">
                            <input type="text" style="width: 80%; text-align:right" id="txtCAmount" disabled="disabled" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:100%;text-align:right;">
                        <a id="btnUpdateEPIDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">OK</a>
                        <a id="btnCloseEPIDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>

                </tr>
            </table>
        </fieldset>
    </div>

    <div id="winDeliveryBill" class="easyui-window winstyle" title="Dyeing Bill Informations" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div id="tabDeliveryBill" class="easyui-tabs" style="width: 900px;height:360px;">
            <div title="Bill Info">
                <table id="tblSampleInvoices" title="" class="easyui-datagrid" style="width: 890px; height: 320px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" showfooter="true">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="SampleInvoiceNo" width="15%">
                                Bill/Invoice No
                            </th>
                            <th field="SampleInvoiceDateST" width="12%">
                                Issue Date
                            </th>
                            <th field="Amount" width="12%" align="right">
                                Amount($)
                            </th>
                            <th field="ContractorName" width="35%">
                                Contractor Name
                            </th>
                            <th field="ExportPINo" width="15%">
                                P/I No
                            </th>

                        </tr>
                    </thead>
                </table>
            </div>
            <div title="Bill Summary">
                <table id="tblDODetails" class="easyui-datagrid" style="width: 890px; height: 290px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                    <thead>
                        <tr>
                            <th field="ProductName" width="45%">
                                Product Name
                            </th>
                            <th data-options="field:'Qty'" width="15%" align="right">
                                Qty(<label id="lblMUnitOne2"></label>)
                            </th>
                            <th data-options="field:'UnitPrice'" width="15%" align="right">
                                Unit Price/ Qty(<label id="lblMUnitOneUP2"></label>)
                            </th>
                            <th field="Amount" formatter="formatPrice" width="15%" align="right">
                                Amount
                            </th>

                        </tr>
                    </thead>
                </table>
                <div style="text-align:right;float:right; margin-right:10px;">
                    <table style="width: 890px; height:25px">
                        <tr>
                            <td width="200"><label id="lblBillDetailSummary"></label>Total</td>

                            <td width="80" align="right"><label id="lblQty_Bill_MUOne"></label></td>
                            <td width="80" align="right"><label id="lblUP_Bill_MUOne"></label></td>
                            <td width="100" align="right"><label id="lblAmount_Bill_MUOne"></label></td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
        <fieldset class="actionfieldsetstyle">
            <legend>Actions : </legend>
            <table border="0" class="tbl">
                <tr>
                    <td class="tdAction">
                        <div class="divleft" style="width:80%">
                            <a id="btnGetPIBill" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Show PI Bill</a>
                            <a id="btnNewBillPI" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Gets New Bill</a>
                            <a id="btnRemovePIFromBill" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove PI From Bill</a>
                            <label id="lblTotalBalance" style="font-size:16px;margin-left:100px; font-weight:bold"></label>
                        </div>
                        <div class="divright" style="width:15%">
                            <a id="btnOkDeliveryBill" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">OK</a>
                            <a id="btnCloseDeliveryBill" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </div>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
<style type="text/css">
    .tdAction .divleft {
        float: left;
        width: 49%;
        margin-left: 1%;
        text-align: left;
    }

    .tdAction .divright {
        float: right;
        width: 49%;
        text-align: right;
    }
</style>

<script type="text/javascript">
    var _sBaseAddress = "";
    var _oExportPI=null;
    var _oProducts = [];
    var _oCurrencys = [];
    var _nQty = 0;
    var _nUnitPrice = 0;
    var _nQtyTwo = 0;
    var _nUnitPriceTwo = 0;
    var _sDescription = "";
    var _oExportPIDetails = [];
    var _oExportPITandCClauses = [];
    var _nActivePIPrintSetupID = 0;
    var _nTotalValue = 0.0000;
    var _oProduct = null;
    var _oOrderSheets = [];
    var _oOrderSheetDetails = [];
    var _bIsBuyer = true;
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oExportPI =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oExportPIDetails = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ExportPIDetails));
        var oPIPaymentTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PIPaymentTypes));
        var oBankBranchs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BankBranchs));
        var oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oLCTerms = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LCTerms));
        var oLIBORRates = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LIBORRates));
        var oBankFDDs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BankFDDs));
        var oMktPersons = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.MktPersons));
        var oShipmentTerms = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ShipmentTerms));
        var oDepthOfShades = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DepthOfShades));
        _oExportPITandCClauses = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ExportPITandCClauses));
        var oExportQualitys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ExportQualitys));
        var oBU = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BU));
        var oMeasurementUnitCon = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.MeasurementUnitCon));
        $(".lblBUSName").html("("+oBU.ShortName+")");
        debugger;
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent,#btnPrintPI,#btnCopy").hide();
        RefreshPIPrintSetup();
        $('#tabExportPITabs').tabs({ onSelect: function () {TabClick();} });
        $('#txtIssueDate').datebox('setValue',_oExportPI.IssueDateInString);
        $('#txtValidateDate').datebox('setValue',_oExportPI.ValidityDateInString);
        $('#txtLCOpenDate').datebox('setValue',_oExportPI.LCOpenDateInString);
        $('#txtDeliveryDate').datebox('setValue',_oExportPI.DeliveryDateInString);
        $('#tabExportPITabs').tabs({ onSelect: function () {TabClick();} });
        //Combo Load
        $("#cboMktPersons").icsLoadCombo({List: oMktPersons,OptionValue: "MarketingAccountID",DisplayText: "Name"});
        $("#cboPaymentType").icsLoadCombo({List: oPIPaymentTypes,OptionValue: "id",DisplayText: "Value"});
        $("#cboBank").icsLoadCombo({List: oBankBranchs,OptionValue: "BankBranchID",DisplayText: "BankBranchName"});
        $("#cboCurrency").icsLoadCombo({List: oCurrencys,OptionValue: "CurrencyID",DisplayText: "CurrencyName"});
        $("#cboEQuality").icsLoadCombo({List: oExportQualitys,OptionValue: "ExportQualityID",DisplayText: "Name"});
        $("#cboLCTerm").icsLoadCombo({List: oLCTerms,OptionValue: "LCTermID",DisplayText: "NameDaysInString"});
        $("#cboLiborRate").icsLoadCombo({List: oLIBORRates,OptionValue: "id",DisplayText: "Value",InitialValue: "Customize"});
        $("#cboBankFDD").icsLoadCombo({List: oBankFDDs,OptionValue: "id",DisplayText: "Value",InitialValue: "Customize"});
        $("#cboShipmentTermFDD").icsLoadCombo({List: oShipmentTerms,OptionValue: "Value",DisplayText: "Text",InitialValue: "Customize"});
        $("#cboShipmentTermFDD option[value='0']").remove();
        $("#cboDepthOfShade").icsLoadCombo({List: oDepthOfShades,OptionValue: "Value",DisplayText: "Value",InitialValue: "Customize"});
        $("#btnAcceptReviseExportPI").hide();
        $("#chkIsCreateReviseNo").hide();
        $("#lblCreateReviseNo").hide();
        $("#txtNoteTwo").val(_oExportPI.NoteTwo);
        //if(parseInt(_oExportPI.ExportPIID)>0)
        //{
        RefreshControl();
        //}
        $('#tblOrderSheets').datagrid({onSelect: function(rowIndex, rowData){ RowSelect(rowData);}});
        RefreshMunit(oMeasurementUnitCon);
        $('#tabExportPITabs').data('MeasurementUnitCon',oMeasurementUnitCon);

        $('#divExportPI').find('input, textarea, button, select').attr('disabled','disabled');
        $('#divTermsAndCondition').find('input, textarea, button, select').attr('disabled','disabled');

        

    });
    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }

    $('.changePIType').change(function(){
        debugger;
        DynamicRefreshList([], "tblExportPIDetail");
        RefreshTotalSummery();
        if(parseInt($('#cboPIType').val())==1)//Order Sheet
        {
            $("#btnProductPiker").hide();

        }else{
            $("#btnRemoveDetail,#btnProductPiker").show();
        }
    });

    // Pick Oreder Sheet
    $("#btnOkOrderSheetPicker").click(function () {
        debugger;
        var oOrderSheet = $('#tblOrderSheets').datagrid("getSelected");
        if(oOrderSheet==null|| parseInt(oOrderSheet.OrderSheetID)<=0)
        {
            alert("Please Select Order Sheet");
            return;
        }
        var oOrderSheetDetails = $('#tblOrderSheetDetail').datagrid("getRows");
        var oExportPIDetails = $('#tblExportPIDetail').datagrid("getRows");
        if(oOrderSheetDetails.length>0)
        {
            var nDLength = oOrderSheetDetails.length;
            for(var i = 0; i< nDLength;i++)
            {
                if(!ICS_IsExistForTwoProperty(oExportPIDetails,"OrderSheetDetailID",oOrderSheetDetails[i].OrderSheetDetailID,"ProductID",oOrderSheetDetails[i].ProductID))
                {
                    var   oExportPIDetail= {
                        ExportPIDetailID : 0,
                        ExportPIID: _oExportPI.ExportPIID,
                        ProductID: oOrderSheetDetails[i].ProductID,
                        OrderSheetDetailID:oOrderSheetDetails[i].OrderSheetDetailID,
                        ColorID: oOrderSheetDetails[i].ColorID,
                        StyleNo :oOrderSheetDetails[i].StyleDescription,
                        Measurement  : oOrderSheetDetails[i].Measurement,
                        Qty :oOrderSheetDetails[i].Qty,
                        UnitPrice:oOrderSheetDetails[i].UnitPrice,
                        AdjQty:0,
                        AdjRate:0,
                        DocCharge:0,
                        AdjValue:0,
                        CRate:0,
                        QtyTwo:0,
                        UnitPriceTwo:0,
                        BuyerReference:oOrderSheetDetails[i].BuyerRef,
                        ColorInfo :'',
                        ModelReferenceID :oOrderSheetDetails[i].ModelReferenceID,
                        MUnitID:oOrderSheetDetails[i].UnitID,
                        MUName:oOrderSheetDetails[i].UnitSymbol,
                        ProductCode:oOrderSheetDetails[i].ProductCode,
                        ProductName :oOrderSheetDetails[i].ProductName,
                        ModelReferenceName : oOrderSheetDetails[i].ModelReferenceName,
                        ColorName :oOrderSheetDetails[i].ColorName,
                        SizeName :oOrderSheetDetails[i].SizeName,
                        Amount:parseFloat(parseFloat(oOrderSheetDetails[i].Qty) * parseFloat(oOrderSheetDetails[i].UnitPrice))
                    };
                    $('#tblExportPIDetail').datagrid('appendRow',oExportPIDetail);
                    RefreshTotalSummery();
                }
            }
        }
        $("#winOrdersheetPicker").icsWindow("close");
    });

    $("#btnCloseOrderSheetPicker").click(function () {
        $("#winOrdersheetPicker").icsWindow("close");
    });

    function RowSelect(oOrderSheet)
    {
        debugger;
        var oOrderSheetDetails = [];
        for(var i = 0;i<_oOrderSheetDetails.length;i++)
        {
            if(parseInt(_oOrderSheetDetails[i].OrderSheetID) == parseInt(oOrderSheet.OrderSheetID) )
            {
                oOrderSheetDetails.push(_oOrderSheetDetails[i]);
            }
        }
        DynamicRefreshList(oOrderSheetDetails, "tblOrderSheetDetail");
    }
    function RefreshMunit(oMeasurementUnitCon)
    {
        $('#lblMUnitOne,#lblMUnitOne2,#lblMUnitOneUP,#lblMUnitOneUP2').html(oMeasurementUnitCon.FromMUnit);
        $('#lblMUnitTwo,#lblMUnitTwoUP').html(oMeasurementUnitCon.ToMUnit);
        $(".lblMUnitOne").html(oMeasurementUnitCon.FromMUnit);
        $(".lblMUnitTwo").html(oMeasurementUnitCon.ToMUnit);
    }

    function RefreshControl()
    {
        $("#txtContractorName,#txtBuyerName,#txtDeliveryToName").addClass("fontColorOfPickItem");
        $('#txtIssueDate').datebox('setValue', _oExportPI.IssueDateInString );
        $('#txtValidateDate').datebox('setValue', _oExportPI.ValidityDateInString );
        $('#txtLCOpenDate').datebox('setValue', _oExportPI.LCOpenDateInString );
        $('#txtDeliveryDate').datebox('setValue', _oExportPI.DeliveryDateInString );
        $("#cboMktPersons").val(_oExportPI.MKTEmpID);
        $("#cboCurrency").val(_oExportPI.CurrencyID);
        $("#cboPIType").val(_oExportPI.PIType);
        if(_oExportPI.PaymentTypeInInt>0)
        {
            $("#cboPaymentType").val(_oExportPI.PaymentTypeInInt);
        }
        else
        {
            $("#cboPaymentType").val(1);
        }
        $("#cboBank").val(_oExportPI.BankBranchID);
        LoadBankBranchAccounts(_oExportPI.BankBranchID,_oExportPI.BankAccountID);
        GetContactPerson(_oExportPI.ContractorID,false);
        GetContactPerson(_oExportPI.BuyerID,true);
        $("#cboLCTerm").val(_oExportPI.LCTermID);
        $("#cboShipmentTermFDD").val(_oExportPI.ShipmentTermInInt);
        if( _oExportPI.IsLIBORRate){$('#cboLiborRate').val(1);}else {$('#cboLiborRate').val(0);}
        if( _oExportPI.IsBBankFDD){$('#cboBankFDD').val(1);}else {$('#cboBankFDD').val(0);}
        if(_oExportPI.PIType==1)//Order Sheet
        {
            $("#btnProductPiker").hide();        }
        if(sessionStorage.getItem("ExportPIHeader") == "View Export PI")
        {
            $("#btnPrintPI,#btnCopy,#btnAddTermsAndConditon,#btnRemoveTermsAndCondition,#btnGetPIBill,#btnNewBillPI,#btnRemovePIFromBill,#btnOkDeliveryBill").hide();
            $("#btnProductPiker").prop('disabled', true);
        }
        if(sessionStorage.getItem("ExportPIHeader") == "Revise Export PI")
        {
            $("#btnCopy").hide();
            $("#btnAcceptReviseExportPI").show();
            $("#chkIsCreateReviseNo").show();
            $("#lblCreateReviseNo").show();
            $('#txtIssueDate').datebox('setValue',icsdateformat(new Date()));
            var date=new Date();
            $("#txtValidateDate").datebox("setValue", icsdateformat(new Date(date.getFullYear(), date.getMonth(), date.getDate()+7)));
        }
        if(sessionStorage.getItem("ExportPIHeader")=="Copy Export PI")
        {
            $("#btnCopy").show();
            _oExportPI.ExportPIID = 0;//Reset PIID
            var nLength =_oExportPIDetails.length;
            for(var i =0;i<nLength;i++)
            {
                _oExportPIDetails[i].ExportPIID = 0;
                _oExportPIDetails[i].ExportPIDetailID = 0;
            }
            var nLength =_oExportPITandCClauses.length;
            for(var i =0;i<nLength;i++)
            {
                _oExportPITandCClauses[i].ExportPIID = 0;
                _oExportPITandCClauses[i].ExportPITandCClauseID = 0;
            }
        }
        DynamicRefreshList(_oExportPIDetails, "tblExportPIDetail");
        RefreshTotalSummery();
        DynamicRefreshList(_oExportPITandCClauses, "tblPITandCClauses");
    }

    function TabClick()
    {
        debugger;
        var tab = $('#tabExportPITabs').tabs('getSelected');
        var index = $('#tabExportPITabs').tabs('getTabIndex', tab);
        if (parseInt(index)==2)
        {
            $('#btnCopy').hide();$('#btnPrintPI').show();
        }else
        {
            if(sessionStorage.getItem("ExportPIHeader") == "Copy Export PI")
            {
                $('#btnCopy').show();
            }
            if(sessionStorage.getItem("ExportPIHeader") == "Revise Export PI")
            {
                $("#btnAcceptReviseExportPI").show();
                $("#chkIsCreateReviseNo").show();
                $("#lblCreateReviseNo").show();
            }
            $('#btnPrintPI').hide();
        }
    }

    $("#btnCopy").click(function (e) {
        debugger;

        endEditing();
        endEditingTC();
        if (!ValidateInputExportPI()) return;
        var oExportPI = RefreshObjectExportPI();
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/ExportPI/Save",
            traditional: true,
            data:  JSON.stringify(oExportPI),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;

                oExportPI = jQuery.parseJSON(data);
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (oExportPI.ErrorMessage==null || oExportPI.ErrorMessage=="")
                {

                    alert("Data Saved successfully");
                    var oExportPIs = sessionStorage.getItem("ExportPIs");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oExportPIs != null) {
                        oExportPIs = jQuery.parseJSON(oExportPIs);
                    }
                    else {
                        oExportPIs = [];
                    }
                    if (nIndex != -1) {
                        oExportPIs[nIndex] = oExportPI;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oExportPIs.length);
                        oExportPIs.push(oExportPI);
                    }
                    sessionStorage.setItem("ExportPIs", JSON.stringify(oExportPIs));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oExportPI.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $("#btnRefreshPIDetail").click(function (e) {
        endEditing();
        var oPIDetails = $('#tblExportPIDetail').datagrid('getRows');
        DynamicRefreshList(oPIDetails, "tblExportPIDetail");
        RefreshTotalSummery();
    });

    $("#txtBuyerName").keydown(function (e) {
        if (e.keyCode === 13) // Enter Press
        {
            PickBuyerPI();
        }
        else if (e.keyCode === 08) {
            $("#txtBuyerName").removeClass("fontColorOfPickItem");
            _oExportPI.BuyerID = 0;
        }
    });

    $("#btnAddTermsAndConditon").click(function () {
        var oTermsAndCondition = {
            BUID: sessionStorage.getItem("BUID")
        };

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oTermsAndCondition,
            ControllerName: "ExportTermsAndCondition",
            ActionName: "Gets",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ExportTermsAndConditionID > 0) {
                    var tblColums = []; var oColumn = { field: "CaptionName", title: "Caption", width: 70, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Clause", title: "Terms & Condition Clause", width: 600, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ClauseTypeInString", title: "Clause Type", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "DocForInString", title: "Doc For", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winTermsAndCondition',
                        winclass: 'clsTermsAndCondition',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblTermsAndCondition',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'Clause',
                        windowTittle: 'Terms And Condition List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else {
                alert("Sorry, No Terms And Condition Found.");
            }
        });
    });

    $("#btnRefreshTermsAndCondition").click(function (e) {
        endEditingTC();
        var oPITermsConditions = $('#tblPITandCClauses').datagrid('getRows');
        DynamicRefreshList(oPITermsConditions, "tblPITandCClauses");
        CopyTermsAndCondition();
    });

    $("#btnRemoveTermsAndCondition").click(function (e) {
        endEditingTC();
        var oPITermsCondition = $('#tblPITandCClauses').datagrid('getSelected');
        if (oPITermsCondition == null) {
            alert("Please select an item!");
            return;
        }
        var SelectedRowIndex = $('#tblPITandCClauses').datagrid('getRowIndex', oPITermsCondition);
        if (!confirm("Confirm to Delete?")) return;
        $('#tblPITandCClauses').datagrid('deleteRow', SelectedRowIndex);
        CopyTermsAndCondition();
    });



    //$("#cboPaymentType").change(function () {
    //    if (parseInt($(this).val()) == 1) { //LC
    //        $("#cboBankAccount").prop("disabled", true);
    //    } else {
    //        $("#cboBankAccount").prop("disabled", false);
    //        $("#cboCurrency").val(1);
    //    }
    //});


    function LoadBankBranchAccounts(nBankBranchID, nSetValueInEditMode) {
        var oBankAccount = {
            BankBranchID: parseInt(nBankBranchID)
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBankAccount,
            ControllerName: "BankAccount",
            ActionName: "GetsByBranchAndAccount",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0)
            {
                $("#cboBankAccount").empty();
                $("#cboBankAccount").icsLoadCombo({
                    List: response.objs,
                    OptionValue: "BankAccountID",
                    DisplayText: "AccountNo"
                    //InitialValue: "Customize"
                });
                $("#cboBankAccount").val(nSetValueInEditMode);
            }
            else {
                $("#cboBankAccount").empty();
            }
        });
    }

    function RefreshPIPrintSetup() {
        var oPIPrintSetup = {
            SetupNo: "",
            BUID:sessionStorage.getItem("BUID")
        };

        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oPIPrintSetup,
            ControllerName: "ExportPIPrintSetup",
            ActionName: "GetActivePrintSetup",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.ExportPIPrintSetupID > 0) {
                    oPIPrintSetup = response.obj;
                    $('#txtSetupNote').val(oPIPrintSetup.Note);
                    $('#txtPreface').val(oPIPrintSetup.Preface);
                    $('#txtPartShipment').val(oPIPrintSetup.PartShipment);
                    $('#txtShipmentBy').val(oPIPrintSetup.ShipmentBy);
                    $('#txtPlaceofShipment').val(oPIPrintSetup.PlaceOfShipment);
                    $('#txtPlaceofDelivery').val(oPIPrintSetup.PlaceOfDelivery);
                    $('#txtAcceptanceBy').val(oPIPrintSetup.AcceptanceBy);
                    $('#txtFor').val(oPIPrintSetup.For);
                    _nActivePIPrintSetupID=oPIPrintSetup.ExportPIPrintSetupID;
                }
                else { alert(response.obj.ErrorMessage); _nActivePIPrintSetupID=0;}
            }
            else { alert("No information found."); _nActivePIPrintSetupID=0;}
        });
    }

    function PickBuyerPI() {
        var oContractor = {
            Params: '2' + '~' + $.trim($("#txtBuyerName").val()+'~'+sessionStorage.getItem("BUID"))
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = []; var oColumn = { field: "ContractorID", title: "Code", width: 70, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winBuyers',
                        winclass: 'clsBuyers',
                        winwidth: 500,
                        winheight: 460,
                        tableid: 'tblBuyers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Buyer List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }
            }
            else {
                alert("Sorry, No Buyer Found.");
            }
        });
    }

    function RefreshObjectExportPI() {
        var bIsLIBORRate =false; if( $('#cboLiborRate').val()==1){ bIsLIBORRate=true;}
        var bIsBBankFDD = false; if ($('#cboBankFDD').val() == 1) { bIsBBankFDD = true; }
        var oExportPI = {
            ExportPIID: (_oExportPI != null) ? _oExportPI.ExportPIID : 0,
            PINo: $("#txtPINo").val(),
            PIStatusInInt: _oExportPI.PIStatusInInt,
            IssueDate: $('#txtIssueDate').datebox('getValue'),
            ValidityDate: $('#txtValidateDate').datebox('getValue'),
            ContractorID: _oExportPI.ContractorID,
            ContractorContactPerson:$('#cboContractorContactPerson').val(),
            BuyerID: _oExportPI.BuyerID,
            BuyerContactPerson:$('#cboBuyerContactPerson').val(),
            DeliveryToID : _oExportPI.DeliveryToID,
            MKTEmpID: parseInt($("#cboMktPersons").val()),
            BankBranchID: $('#cboBank').val(),
            BankAccountID:  $('#cboBankAccount').val(),
            CurrencyID: $('#cboCurrency').val(),
            Qty: _oExportPI.Qty,
            Amount: _oExportPI.Amount,
            IsLIBORRate: bIsLIBORRate,
            IsBBankFDD: bIsBBankFDD,
            LCTermID: $('#cboLCTerm').val(),
            OverdueRate: $('#txtOverDueRate').val(),
            LCOpenDate: $('#txtLCOpenDate').datebox('getValue'),
            DeliveryDate: $('#txtDeliveryDate').datebox('getValue'),
            ApprovedBy: _oExportPI.ApprovedBy,
            ApprovedDate: _oExportPI.ApprovedDate,
            LCID: _oExportPI.LCID,
            ExportPIPrintSetupID: _nActivePIPrintSetupID,
            ShipmentTermInInt: parseInt($("#cboShipmentTermFDD").val()),
            Note: $("#txtNote").val(),
            NoteTwo: $("#txtNoteTwo").val(),
            ColorInfo: $("#txtColorInfo").val(),
            DepthOfShade: $("#cboDepthOfShade").val(),
            YarnCount: $("#txtYarnCount").val(),
            BUID:sessionStorage.getItem("BUID"),
            PIType:$('#cboPIType').val(),
            PaymentTypeInInt:$("#cboPaymentType").val(),
            ExportPIDetails:$('#tblExportPIDetail').datagrid('getRows'),
            ExportPITandCClauses: $('#tblPITandCClauses').datagrid('getRows'),
            IsCreateReviseNo:false,
            SampleInvoiceIDs: GetSampleInvoiveIDs()
        };
        return oExportPI;
    }

    //function CheckLCorNonLC()
    //{
    //    var nType = parseInt($("#cboPaymentType").val());
    //    if (nType == 1) {
    //        return true;
    //    }
    //    return false;
    //}

    function ValidateInputExportPI() {
        if (_nActivePIPrintSetupID<= 0) {
            alert("Please configure a PI print setup!");
            return false;
        }

        //if ($("#cboPaymentType").val() <= 0) {
        //    $('#tabExportPITabs').tabs('select', 0);
        //    alert("Please select Payment Type!"); $('#cboPaymentType').focus();
        //    $("#cboPaymentType").addClass("errorFieldBorder");
        //    return false;
        //} else { $("#cboPaymentType").removeClass("errorFieldBorder"); }

        if ($('#txtIssueDate').datebox('getValue') == null || $('#txtIssueDate').datebox('getValue') == "") {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select Issue Date!"); $('#txtIssueDate').focus();
            $("#txtIssueDate").addClass("errorFieldBorder");
            return false;
        } else { $("#txtIssueDate").removeClass("errorFieldBorder"); }

        if ($('#txtValidateDate').datebox('getValue') == null || $('#txtValidateDate').datebox('getValue') == "") {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select Validate Date!"); $('#txtValidateDate').focus();
            $("#txtValidateDate").addClass("errorFieldBorder");
            return false;
        } else { $("#txtValidateDate").removeClass("errorFieldBorder"); }

        if (_oExportPI.ContractorID <= 0) {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select Account Of!");
            
            return false;
        } else {  }

        if (parseInt($("#cboMktPersons").val()) <= 0) {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select a MKT Person!"); $('#cboMktPersons').focus();
            $("#cboMktPersons").addClass("errorFieldBorder");
            return false;
        } else {
            $("#cboMktPersons").removeClass("errorFieldBorder");
            _oExportPI.MKTEmpID = parseInt($("#cboMktPersons").val());
        }

        if ($("#cboBank").val() <= 0) {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select Bank Branch!"); $('#cboBank').focus();
            $("#cboBank").addClass("errorFieldBorder");
            return false;
        } else { $("#cboBank").removeClass("errorFieldBorder"); }

        if ($("#cboCurrency").val() <= 0) {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select Currency!"); $('#cboCurrency').focus();
            $("#cboCurrency").addClass("errorFieldBorder");
            return false;
        } else { $("#cboCurrency").removeClass("errorFieldBorder"); }

        if ($("#cboPaymentType").val() <= 0) {
            $('#tabExportPITabs').tabs('select', 0);
            alert("Please select Payment Type(L/C or Non L/C)!"); $('#cboPaymentType').focus();
            $("#cboPaymentType").addClass("errorFieldBorder");
            return false;
        } else { $("#cboCurrency").removeClass("errorFieldBorder"); }

        if ($("#cboLCTerm").val() <= 0) {
            $('#tabExportPITabs').tabs('select', 1);
            alert("Please select LC Term!"); $('#cboLCTerm').focus();
            $("#cboLCTerm").addClass("errorFieldBorder");
            return false;
        } else { $("#cboLCTerm").removeClass("errorFieldBorder"); }

        var oPIDetails = $('#tblExportPIDetail').datagrid('getRows');
        if(oPIDetails.length<=0)
        {
            alert("Please add at least one detail.");
            return false;
        }

        var ndLength = oPIDetails.length;
        for(var i =0;i<ndLength;i++)
        {
            if(parseFloat(oPIDetails[i].Qty)<=0)
            {
                alert("Qty Should be Greater thn 0");
                return false;
            }
            if(parseFloat(oPIDetails[i].UnitPrice)<=0)
            {
                alert("Unit Price Should be Greater thn 0");
                return false;
            }
        }

        var oTermsAndConditions = $('#tblPITandCClauses').datagrid('getRows');
        if(oTermsAndConditions.length<=0)
        {
            alert("Please add at least one Terms and Condition.");
            $('#tabExportPITabs').tabs('select',1);//Terms & Condition
            return false;
        }
        return true;
    }



    var editTCIndex = undefined;
    function endEditingTC() {
        if (editTCIndex == undefined) { return true }
        if ($('#tblPITandCClauses').datagrid('validateRow', editTCIndex)) {

            $('#tblPITandCClauses').datagrid('endEdit', editTCIndex);
            editTCIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRowTC(index) {

        if (editTCIndex != index) {
            if (endEditingTC()) {
                $('#tblPITandCClauses').datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                editTCIndex = index;
            }
            else {
                $('#tblPITandCClauses').datagrid('selectRow', editTCIndex);
            }
        }
    }


    //Product Pick
    $("#txtProduct_Edit").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtProduct_Edit').val()==null || $('#txtProduct_Edit').val()=="")
            {
                alert("Please Type Product and Press Enter.");
                $('#txtProduct_Edit').focus();
                return;
            }
            PickProductEdit($('#txtProduct_Edit').val());
        }
        if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtProduct_Edit").removeClass("fontColorOfPickItem");
            _oProduct= null;
        }
    });



    $("#btnProductPiker").click(function () {
        PickProduct("");
    });
    function PickProduct(sProductName)
    {
        var oProduct = { BUID:sessionStorage.getItem("BUID"),ProductName:sProductName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "Product",
            ActionName: "SearchByProductBUWise",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "MUnit", title: "Unit", width: 70, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }

    function PickProductEdit(sProductName)
    {
        var oProduct = { BUID:sessionStorage.getItem("BUID"),ProductName:sProductName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "Product",
            ActionName: "SearchByProductBUWise",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "MUnit", title: "Unit", width: 70, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPickerEdit',
                        winclass: 'clsProductPickerEdit',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPickerEdit',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }

    function IntializePickerbuttonPI(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            SetPickerValueAssignPI(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which === 13) {
                SetPickerValueAssignPI(oPickerobj);
            }
        });
    }

    function SetPickerValueAssignPI(oPickerobj) {
        var oreturnObj = null, oreturnObjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnObjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }

        if (oPickerobj.winid == 'winAccountOfs') {
            if (oreturnObj != null && oreturnObj.ContractorID > 0)
            {
                var oContractor = oreturnObj;
                $('#txtContractorName').val(oContractor.Name);
                $("#txtContractorName").addClass("fontColorOfPickItem");
                _oExportPI.ContractorID = oContractor.ContractorID;
                GetContactPerson(_oExportPI.ContractorID,false);
                ////$('#txtBuyerName').val(oContractor.Name);
                ////$("#txtBuyerName").addClass("fontColorOfPickItem");
                ////_oExportPI.BuyerID = oContractor.ContractorID;
                ////GetContactPerson(_oExportPI.BuyerID,true);
            }
            else
            {
                alert("Please select a contractor.");
                return false;
            }
        }

        else if (oPickerobj.winid == 'winBuyers') {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                var oContractor = oreturnObj;
                $('#txtBuyerName').val(oContractor.Name);
                $("#txtBuyerName").addClass("fontColorOfPickItem");
                _oExportPI.BuyerID = oContractor.ContractorID;
                GetContactPerson(_oExportPI.BuyerID,true);
            }
            else {
                alert("Please select a buyer.");
                return false;
            }
        }
        else if (oPickerobj.winid == 'winProductPickerEdit') {
            if (oreturnObj != null && oreturnObj.ProductID > 0) {
                _oProduct=oreturnObj;
                $('#txtProduct_Edit').val(_oProduct.ProductName);
                $("#txtProduct_Edit").addClass("fontColorOfPickItem");


            }
            else {
                alert("Please select a buyer.");
                return false;
            }
        }
        else if (oPickerobj.winid == 'winDeliveryTos') {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                var oContractor = oreturnObj;
                $('#txtDeliveryToName').val(oContractor.Name);
                $("#txtDeliveryToName").addClass("fontColorOfPickItem");
                _oExportPI.DeliveryToID = oContractor.ContractorID;
            }
            else {
                alert("Please select an item from.");
                return false;
            }
        }
        else if (oPickerobj.winid == 'winProductPicker')
        {
            if (oreturnObjs!= null && oreturnObjs.length> 0)
            {
                _oProducts  = oreturnObjs;
                var nPrdctLength = _oProducts.length;
                var oExportPIDetails = $('#tblExportPIDetail').datagrid('getRows');
                for(var i =0;i<nPrdctLength;i++)
                {
                    //if(!ICS_IsExist(oExportPIDetails,'ProductID',_oProducts[i].ProductID))
                    //{
                    var   oExportPIDetail= {
                        ExportPIDetailID : 0,
                        ExportPIID: _oExportPI.ExportPIID,
                        ProductID: _oProducts[i].ProductID,
                        StyleNo :'',
                        Qty :0,
                        UnitPrice:0,
                        AdjQty:0,
                        AdjRate:0,
                        DocCharge:0,
                        AdjValue:0,
                        CRate:0,
                        QtyTwo:0,
                        UnitPriceTwo:0,
                        BuyerReference:'',
                        ColorInfo :'',
                        MUnitID: _oProducts[i].MeasurementUnitID,
                        MUName:_oProducts[i].MUnit,
                        ProductCode :_oProducts[i].ProductCode,
                        ProductName :_oProducts[i].ProductName,
                        ModelReferenceID:_oProducts[i].ModelReferenceID,
                        ModelReferenceName:_oProducts[i].ModelReferenceName,
                        Amount:0
                    };
                    $('#tblExportPIDetail').datagrid('appendRow',oExportPIDetail);
                    //}
                }
                RefreshTotalSummery();
                ResetDetail();
            }
        }
        else if (oPickerobj.winid == 'winTermsAndCondition') {
            if (oreturnObjs != null && oreturnObjs.length > 0) {
                var oTermsAndConditions = oreturnObjs;
                if (oTermsAndConditions != null && oTermsAndConditions.length > 0) {
                    var oPITermsAndConditions = $('#tblPITandCClauses').datagrid('getRows');
                    if (oPITermsAndConditions.length > 0) {
                        var identify = 0;
                        for (var i = 0; i < oTermsAndConditions.length; i++) {
                            identify = 0;
                            for (var j = 0; j < oPITermsAndConditions.length; j++) {
                                if (oTermsAndConditions[i].Clause == oPITermsAndConditions[j].TermsAndCondition) {
                                    identify = 0;
                                    break;
                                } else {
                                    identify = 1;
                                }
                            }
                            if (identify == 1) {
                                var oPITAndC = {
                                    ExportPITandCClauseID: 0,
                                    ExportPIID: 0,
                                    DocFor:oTermsAndConditions[i].DocFor,
                                    CaptionName:oTermsAndConditions[i].CaptionName,
                                    ExportTnCCaptionID:oTermsAndConditions[i].ExportTnCCaptionID,
                                    TermsAndCondition: oTermsAndConditions[i].Clause
                                };

                                $('#tblPITandCClauses').datagrid('appendRow', oPITAndC);
                            }
                        }
                    }
                    else {
                        for (var i = 0; i < oTermsAndConditions.length; i++) {
                            var oPITAndC = {
                                ExportPITandCClauseID: 0,
                                ExportPIID: 0,
                                DocFor:oTermsAndConditions[i].DocFor,
                                TermsAndCondition: oTermsAndConditions[i].Clause,
                                CaptionName:oTermsAndConditions[i].CaptionName,
                                ExportTnCCaptionID:oTermsAndConditions[i].ExportTnCCaptionID
                            };

                            $('#tblPITandCClauses').datagrid('appendRow', oPITAndC);
                        }

                    }
                }
            }
            else {
                alert("Please select minimum one Terms And Condition.");
                return false;
            }
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }


    function ValidateInputDetail()
    {
        return true;
    }

    function ResetDetail(){
        _oProduct = null;

    }

    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    $("#btnRemoveDetail").click(function () {
        var oExportPIDetail = $("#tblExportPIDetail").datagrid("getSelected");
        if (oExportPIDetail == null) { alert("Please select an item from list!"); return false; }
        if (!confirm("Confirm to Delete?")) return false;
        var SelectedRowIndex=$('#tblExportPIDetail').datagrid('getRowIndex',oExportPIDetail);
        alert("Data Delete Successfully.");
        $('#tblExportPIDetail').datagrid('deleteRow', SelectedRowIndex);
        RefreshTotalSummery();
        editIndex = undefined;
    });

    function RefreshTotalSummery()
    {
        debugger;
        var nTotalQty = 0;
        var nTotalValue = 0;
        var nTotalAdjValue = 0;

        var oPIDetails = $('#tblExportPIDetail').datagrid('getRows');
        for (var i = 0; i < oPIDetails.length; i++) {
            nTotalQty = nTotalQty + parseFloat(oPIDetails[i].Qty);
            nTotalValue = nTotalValue + parseFloat(oPIDetails[i].UnitPrice * oPIDetails[i].Qty);
            nTotalAdjValue=nTotalAdjValue+ parseFloat(oPIDetails[i].AdjValue);
        }
        _nTotalValue = nTotalValue;
        var sCurrency = "";
        var nCurrency = $("#cboCurrency option:selected").val();
        if (nCurrency > 0) {
            sCurrency = $("#cboCurrency option:selected").text();
        }
        document.getElementById("lblTotalQty").innerHTML = PriceFormateInString(nTotalQty,4);
        document.getElementById("lblTotalValue").innerHTML = sCurrency + " " + PriceFormateInString(nTotalValue,4);
        document.getElementById("lblTotalAdjValue").innerHTML = PriceFormateInString(nTotalAdjValue,2);
    }


    function PriceFormateInString(nVal, nDigitAfterDot) {
        if (nVal == null) {
            nVal = 0.00;
        }
        nVal = parseFloat(nVal);
        var test = nVal.toFixed(nDigitAfterDot);
        var tests = addComma(test);
        return tests;
    }

    var editIndex = undefined;
    function endEditing() {

        if (editIndex == undefined) {
            return true;
        }

        if ($('#tblExportPIDetail').datagrid('validateRow', editIndex)) {
            $('#tblExportPIDetail').datagrid('endEdit', editIndex);
            $('#tblExportPIDetail').datagrid('selectRow', editIndex);

            var oPIDetail = $('#tblExportPIDetail').datagrid('getSelected');

            if (oPIDetail == null) {
                return;
            }
            oPIDetail.Amount = parseFloat(oPIDetail.Qty * oPIDetail.UnitPrice)
            oPIDetail.AmountSt = formatPrice(oPIDetail.Amount);
            debugger;
            if (parseFloat(oPIDetail.QtyTwo) != _nQtyTwo || parseFloat(oPIDetail.UnitPriceTwo) != _nUnitPriceTwo)
            {
                //oPIDetail.Qty = (oPIDetail.QtyTwo / 0.45359237).toFixed(8); //0.45359237001003542909395360718511
                    oPIDetail.Qty = (oPIDetail.QtyTwo/parseFloat($('#tabExportPITabs').data('MeasurementUnitCon').Value)).toFixed(8); //0.45359237001003542909395360718511
                    oPIDetail.UnitPrice = (oPIDetail.UnitPriceTwo*parseFloat($('#tabExportPITabs').data('MeasurementUnitCon').Value)).toFixed(8);
                    oPIDetail.Amount = oPIDetail.Qty * oPIDetail.UnitPrice;
                    oPIDetail.AmountSt =  formatPrice(oPIDetail.Amount);
                    //(AdjQty*(UnitPrice-AdjRate))+(Qty*AdjRate)
                    oPIDetail.AdjValue = parseFloat(oPIDetail.AdjQty) * parseFloat((parseFloat(oPIDetail.UnitPrice)- parseFloat(oPIDetail.AdjRate)))+ parseFloat((parseFloat(oPIDetail.Qty)*parseFloat(oPIDetail.AdjRate)));
                    oPIDetail.MUNameTwo = $('#tabExportPITabs').data('MeasurementUnitCon').ToMUnit;


            }
            else{
                oPIDetail.QtyTwo = (oPIDetail.Qty*parseFloat($('#tabExportPITabs').data('MeasurementUnitCon').Value)).toFixed(8); //0.45359237001003542909395360718511
                oPIDetail.UnitPriceTwo = (oPIDetail.UnitPrice/parseFloat($('#tabExportPITabs').data('MeasurementUnitCon').Value)).toFixed(8);
                oPIDetail.Amount = oPIDetail.Qty * oPIDetail.UnitPrice;
                oPIDetail.AmountSt =  formatPrice(oPIDetail.Amount);
                //(AdjQty*(UnitPrice-AdjRate))+(Qty*AdjRate)
                oPIDetail.AdjValue = parseFloat(oPIDetail.AdjQty) * parseFloat((parseFloat(oPIDetail.UnitPrice)- parseFloat(oPIDetail.AdjRate)))+ parseFloat((parseFloat(oPIDetail.Qty)*parseFloat(oPIDetail.AdjRate)));
                oPIDetail.MUNameTwo  = $('#tabExportPITabs').data('MeasurementUnitCon').ToMUnit;
            }


            $('#tblExportPIDetail').datagrid('updateRow', { index: editIndex, row: oPIDetail });
            RefreshTotalSummery();
            _nQty = 0;
            _nUnitPrice = 0;
            _nQtyTwo = 0;
            _nUnitPriceTwo = 0;
            _sDescription = "";
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    _nQty = 0;
    _nUnitPrice = 0;
    _nQtyTwo = 0;
    _nUnitPriceTwo = 0;
    _sDescription = "";
    function onClickRow(index) {
        if (editIndex != index) {
            if (sessionStorage.getItem("ExportPIHeader") != "View Export PI") {
                if (endEditing()) {
                    $('#tblExportPIDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                    var oExportPIDetail = $('#tblExportPIDetail').datagrid('getSelected');
                    _nQty = parseFloat(oExportPIDetail.Qty).toFixed(2);
                    _nUnitPrice = parseFloat(oExportPIDetail.UnitPrice).toFixed(2);
                    _nQtyTwo = parseFloat(oExportPIDetail.QtyTwo).toFixed(4);
                    _nUnitPriceTwo = parseFloat(oExportPIDetail.UnitPriceTwo).toFixed(4);
                    _sDescription = oExportPIDetail.Description;
                    editIndex = index;
                }
                else {
                    $('#tblExportPIDetail').datagrid('selectRow', editIndex);
                }
            }
            else {
                editIndex = index;
            }
        }
    }

    $("#btnPrintPI").click(function () {
        if (_oExportPI == null || _oExportPI.ExportPIID <= 0) {
            alert("Please select an item from list!");
            return;
        }
        window.open(_sBaseAddress + '/ExportPI/PrintoExportPIPreview?id=' + _oExportPI.ExportPIID + "&bPrintFormat=false&nTitleTypeInImg=1" , "_blank");//Defalult false
    });

    //Contact Person




    function GetContactPerson(nContractorID, bIsBuyer) {
        debugger;
        var oContractor = {ContractorID:nContractorID};
        $.ajax
           ({
               type: "POST",
               dataType: "json",
               url: _sBaseAddress + "/Contractor/GetContactPersonnels",
               traditional: true,
               data:  JSON.stringify(oContractor),
               contentType: "application/json; charset=utf-8",
               success: function (data) {
                   //debugger;
                   var _oContactPersonnels = jQuery.parseJSON(data);
                   if (_oContactPersonnels != null)
                   {
                       if(bIsBuyer)
                       {
                           $("#cboBuyerContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                           $('#cboBuyerContactPerson').val(_oExportPI.BuyerContactPerson);
                       }else{
                           $("#cboContractorContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                           $('#cboContractorContactPerson').val(_oExportPI.ContractorContactPerson);
                       }

                   }
                   else {
                       if(bIsBuyer)
                       {
                           $("#cboBuyerContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                       }else{
                           $("#cboContractorContactPerson").icsLoadCombo({List: _oContactPersonnels,OptionValue: "ContactPersonnelID",DisplayText: "Name"});
                       }
                   }
               },
               error: function (xhr, status, error) {
                   alert(error);
               }

           });

    }
    function formatPricePrice(val,row){
        //debugger;
        if(val==null)
        {
            val=0.00;
        }
        val=parseFloat(val);
        var test = val.toFixed(4);
        var tests = addComma(test);
        return tests;
    }

    function addComma(nStr)
    {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }


    $("#btnAcceptReviseExportPI").click(function (e) {
        debugger;
        endEditing();
        endEditingTC();
        if (!ValidateInputExportPI()) return;
        var oExportPI = RefreshObjectExportPI();
        if ($("#chkIsCreateReviseNo").is(':checked'))
        {
            oExportPI.IsCreateReviseNo=true;
            //alert("Confirm Change this P/I with ReviseNo ")
            if (!confirm("Confirm to Change this P/I with Revise No ?")) return false;
        }else{
            oExportPI.IsCreateReviseNo=false;
            if (!confirm("Confirm to Change this P/I without Revise No ?")) return false;
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/ExportPI/AcceptExportPIRevise",
            traditional: true,
            data:  JSON.stringify(oExportPI),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oExportPI = jQuery.parseJSON(data);
                if (oExportPI.ErrorMessage==null || oExportPI.ErrorMessage=="")
                {
                    //alert("Data Saved successfully");
                    var oExportPIs = sessionStorage.getItem("ExportPIs");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oExportPIs != null) {
                        oExportPIs = jQuery.parseJSON(oExportPIs);
                    }
                    else {
                        oExportPIs = [];
                    }
                    if (nIndex != -1) {
                        oExportPIs[nIndex] = oExportPI;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oExportPIs.length);
                        oExportPIs.push(oExportPI);
                    }
                    sessionStorage.setItem("ExportPIs", JSON.stringify(oExportPIs));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oExportPI.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $('#txtIssueDate').datebox({
        onSelect: function(date){

            $("#txtValidateDate").datebox("setValue", icsdateformat(new Date(date.getFullYear(), date.getMonth(), date.getDate()+7)));
        }
    });

    ////Quality
    $("#btnPickDetail").click(function () {
        debugger;
        _oProduct={ProductID:0,ProductName:"",ProductCode:""}
        $("#winExportPIDetailEdit input").val("");
        var oExportPIDetail = $('#tblExportPIDetail').datagrid('getSelected');
        if (oExportPIDetail ==null ) { alert("Please select an item from list."); return ; }
        //$('#txtProduct_Edit').prop('disabled',true);
        _oProduct.ProductID=oExportPIDetail.ProductID;
        _oProduct.ProductName=oExportPIDetail.ProductName;
        _oProduct.ProductCode=oExportPIDetail.ProductCode;
        $('#txtProduct_Edit').val(oExportPIDetail.ProductName);
        $("#cboEQuality").val(oExportPIDetail.ExportQualityID);

        $('#txtBuyerReference').val(oExportPIDetail.BuyerReference);
        $('#txtStyleNo').val(oExportPIDetail.StyleNo);
        $('#txtColorEdit').val(oExportPIDetail.ColorInfo);

        $('#txtAdjQty').val(parseFloat(oExportPIDetail.AdjQty).toFixed(4));
        $('#txtAdjRate').val(parseFloat(oExportPIDetail.AdjRate).toFixed(4));
        $('#txtDocCharge').val(parseFloat(oExportPIDetail.DocCharge).toFixed(4));
        $('#txtCRate').val(parseFloat(oExportPIDetail.CRate).toFixed(4));
        $('#txtAdjQty').val(parseFloat(oExportPIDetail.AdjQty).toFixed(4));
        $('#txtAmount').val("$"+oExportPIDetail.AmountSt);
        $('#txtAdjAmount').val("$"+parseFloat(oExportPIDetail.AdjValue.toFixed(4)));
        $('#txtCAmount').val("$"+parseFloat(oExportPIDetail.Qty*oExportPIDetail.CRate).toFixed(2));

        $('#txtQtyInOne').val(parseFloat(oExportPIDetail.Qty).toFixed(4));
        $('#txtUnitPriceInOne').val(parseFloat(oExportPIDetail.UnitPrice).toFixed(4));
        ConvertIntoKgs_UnitPrice();
        ConvertIntoKg_Qty();
        $("#winExportPIDetailEdit").icsWindow("open","Edit");
    });
    $("#btnUpdateEPIDetail").click(function () {
        debugger;
        var oExportPIDetail = $('#tblExportPIDetail').datagrid('getSelected');
        if (oExportPIDetail ==null ) { alert("Please select an item from list."); return ; }
        var nSelectedRowIndex=$('#tblExportPIDetail').datagrid('getRowIndex',oExportPIDetail);
        oExportPIDetail.ExportQualityID=$("#cboEQuality").val();

       var ncboQty = document.getElementById("cboEQuality");
        var selectedText = ncboQty.options[ncboQty.selectedIndex].text;
        oExportPIDetail.ExportQualityID=$("#cboEQuality").val();
        oExportPIDetail.ExportQuality=selectedText;
        oExportPIDetail.ProductID=_oProduct.ProductID;
        oExportPIDetail.ProductName=$.trim($('#txtProduct_Edit').val());
        oExportPIDetail.ProductCode=_oProduct.ProductCode;
        oExportPIDetail.Qty=parseFloat($('#txtQtyInOne').val()).toFixed(4);
        oExportPIDetail.UnitPrice=parseFloat($('#txtUnitPriceInOne').val()).toFixed(4);

        oExportPIDetail.AdjQty=parseFloat($('#txtAdjQty').val()).toFixed(4);
        oExportPIDetail.AdjRate=parseFloat($('#txtAdjRate').val()).toFixed(4);
        oExportPIDetail.DocCharge=parseFloat($('#txtDocCharge').val()).toFixed(4);
        oExportPIDetail.CRate=parseFloat($('#txtCRate').val()).toFixed(4);

        oExportPIDetail.BuyerReference=$.trim($('#txtBuyerReference').val());
        oExportPIDetail.StyleNo=$.trim($('#txtStyleNo').val());
        oExportPIDetail.ColorInfo=$.trim($('#txtColorEdit').val());

        //if(oExportPIDetail.ExportPIDetailID>0)
        //{
        //    var obj = {
        //        BaseAddress: _sBaseAddress,
        //        Object: oExportPIDetail,
        //        ObjectId: oExportPIDetail.ExportPIDetailID,
        //        ControllerName: "ExportDocSetup",
        //        ActionName: "UpdateQuality",
        //        TableId: "tblExportPIDetail",
        //        IsWinClose: false
        //    };
        //    $.icsSave(obj);
        //}
        $('#tblExportPIDetail').datagrid('updateRow', { index: nSelectedRowIndex, row: oExportPIDetail });
        endEditing();
        $("#winExportPIDetailEdit").icsWindow("close");
        editIndex = undefined;
    });
    $("#btnCloseEPIDetail").click(function () {
        debugger;
        $("#winExportPIDetailEdit").icsWindow("close");

    });

    //// Add Dyeing Bill
    $("#btnGetPIBill").click(function () {
        var oExportPI={ExportPIID:_oExportPI.ExportPIID,IsApproved:false,ContractorID: _oExportPI.ContractorID,BuyerID:_oExportPI.BuyerID};
        GetsDeliveryOrderBillByExportPI(oExportPI,false);
    });
    $("#btnNewBillPI").click(function () {
        var oExportPI={ExportPIID:_oExportPI.ExportPIID,IsApproved:true,ContractorID: _oExportPI.ContractorID,BuyerID:_oExportPI.BuyerID};
        GetsDeliveryOrderBillByExportPI(oExportPI,false);
    });
    $("#btnProductFormDeliveryBill").click(function () {

     debugger
        if (_oExportPI.ExportPIID > 0) {
            GetsDeliveryOrderBillByExportPI(_oExportPI,false);
        }
        else
        {
            if (_oExportPI.ContractorID <= 0) {
                $('#tabExportPITabs').tabs('select', 0);
                alert("Please select Account Of!"); $('#txtContractorName').focus();
                $("#txtContractorName").addClass("errorFieldBorder");
                return false;
            } else {
                $("#txtContractorName").removeClass("errorFieldBorder");
            }

            GetsDeliveryOrderBillByExportPI(_oExportPI,true);
        }
        //MakeFooterColumn('tblSampleInvoices','Amount');
    });
    function GetsDeliveryOrderBillByExportPI(oExportPI, IsWinOpen) {
        var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oExportPI,
                ControllerName: "ExportPI",
                ActionName: "GetSampleInvoices",
                IsWinClose: false
            };
        GetDUBillWithDetail(obj, IsWinOpen, true)
    }
    function ResetControllExportPIInfoToDeliveryBill() {
        //$("#btnOkDeliveryBill").hide();
        //$("#btnRemovePIFromBill").hide();
        //_oDUDBillDetails = [];
        DynamicRefreshList([], "tblSampleInvoices");
        DynamicRefreshList([], "tblDODetails");
        RefreshTotal_Bill();
    }
    function GetDUBillWithDetail(obj,IsWinOpen,IsAssociatedPI) {

        ResetControllExportPIInfoToDeliveryBill();
        $.icsDataGets(obj, function (response) {
             $("#winDeliveryBill").icsWindow("open", 'Product From Delivery Bill');
             $("#tabDeliveryBill").tabs("select", 0);
            if (response.status && response.objs.length > 0) {
                var oSampleInvoices = response.objs;
                if (oSampleInvoices != null && oSampleInvoices.length > 0 && oSampleInvoices[0].SampleInvoiceID > 0) {
                    DynamicRefreshList(oSampleInvoices, "tblSampleInvoices");
                   var _oSampleInvoiceDetails = oSampleInvoices[0].SampleInvoiceDetails;
                   if (_oSampleInvoiceDetails != null && _oSampleInvoiceDetails.length > 0) {
                       DynamicRefreshList(_oSampleInvoiceDetails, "tblDODetails");
                       RefreshTotal_Bill();
                       
                       MakeFooterColumn('tblSampleInvoices','Amount');
                       for(var j =0;j<oSampleInvoices.length;j++)
                       {
                           if(oSampleInvoices[j].ExportPIID>0)
                           {
                               $('#tblSampleInvoices').datagrid('checkRow', j);
                           }
                       }
                    }
                }
            }
            else {
                $("#btnRemovePIFromBill").hide();
            }
        });
    }
    $("#btnOkDeliveryBill").click(function () {

        var oSIs = $('#tblSampleInvoices').datagrid("getChecked");
        var bFlage=false;
        if (oSIs.length <= 0) {
            alert("No bill/Invoice info found to add");
            return;
        }
        if(_oExportPI.ExportPIID>0)
        {
            var oSampleInvoice={SampleInvoiceNo: GetSampleInvoiveIDs(),ExportPIID:_oExportPI.ExportPIID}
            var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oSampleInvoice,
                ControllerName: "SampleInvoice",
                ActionName: "BillForExportPI",
                TableId: "tblSampleInvoices",
                IsWinClose: false,
                Message: '',
            };
            $.icsSave(obj, function (response) {
                if (response.status && response.obj.ErrorMessage == "" || response.obj.ErrorMessage == undefined)
                {
                    alert("Data Saved");
                    DynamicRefreshList([], "tblDODetails");
                    $("#winDeliveryBill").icsWindow("close");
                }
                else
                {
                    alert(response.ErrorMessage);
                }
            });
        }
        GetsDOD();
        var oDUDBs = $('#tblDODetails').datagrid("getRows");
        if (oDUDBs.length <= 0) {
            alert("No bill/Invoice info found to add");
            return;
        }
        for(var i =0;i<oDUDBs.length;i++)
        {
            oDUDBs[i].ProductID=oDUDBs[0].ProductID;
        }
        var nPrdctLength = oDUDBs.length;
        var oExportPIDetails = $('#tblExportPIDetail').datagrid('getRows');
        if(oExportPIDetails.length<=0)
        {
            for(var i =0;i<oDUDBs.length;i++)
            {
                if(!ICS_IsExist(oExportPIDetails,'ProductID',oDUDBs[i].ProductID))
                {
                    var oExportPIDetail= {
                        ExportPIDetailID : 0,
                        ExportPIID: _oExportPI.ExportPIID,
                        ProductID: oDUDBs[i].ProductID,
                        StyleNo :'',
                        Qty :oDUDBs[i].Qty,
                        UnitPrice: parseFloat(oDUDBs[i].UnitPrice),
                        AdjQty:0,
                        AdjRate:0,
                        DocCharge:0,
                        AdjValue:0,
                        CRate:0,
                        QtyTwo:parseFloat(oDUDBs[i].Qty)*parseFloat($('#tabExportPITabs').data('MeasurementUnitCon').Value),
                        UnitPriceTwo:parseFloat(oDUDBs[i].UnitPrice/parseFloat($('#tabExportPITabs').data('MeasurementUnitCon').Value)),
                        BuyerReference:'',
                        ColorInfo :'',
                        MUnitID: $('#tabExportPITabs').data('MeasurementUnitCon').ToMUnitID,
                        MUName: $('#tabExportPITabs').data('MeasurementUnitCon').ToMUnit,
                        MUNameTwo: $('#tabExportPITabs').data('MeasurementUnitCon').FromMUnit,
                        ProductCode :oDUDBs[i].ProductCode,
                        ProductName :oDUDBs[i].ProductName,
                        ModelReferenceID:0,
                        ModelReferenceName:'',
                        Amount:oDUDBs[i].Amount
                    };
                    $('#tblExportPIDetail').datagrid('appendRow',oExportPIDetail);
                }
                else
                {
                    for(var j =0;j<oExportPIDetails.length;j++)
                    {
                        if(oDUDBs[i].ProductID==oExportPIDetails[j].ProductID)
                        {
                            oExportPIDetails[j].Qty=oDUDBs[i].Qty;
                            oExportPIDetails[j].QtyTwo=oDUDBs[i].Qty*parseFloat($('#tabExportPITabs').data('MeasurementUnitCon').Value);
                            UnitPriceTwo:parseFloat(oDUDBs[i].UnitPrice/parseFloat($('#tabExportPITabs').data('MeasurementUnitCon').Value)),
                            oExportPIDetails[j].Amount=oDUDBs[i].Amount;
                            var nSelectedRowIndex=$('#tblExportPIDetail').datagrid('getRowIndex',oExportPIDetails[i]);
                            $('#tblExportPIDetail').datagrid('updateRow', { index: nSelectedRowIndex, row:  oExportPIDetails[i] });
                        }
                    }
                }
            }
        }
        RefreshTotalSummery();
    });
    $("#btnRemovePIFromBill").click(function () {
        if (!confirm("Are you sure to remove bill?")) { return; }
        var oSampleInvoice = $('#tblSampleInvoices').datagrid('getSelected');
        if(oSampleInvoice.ExportPIID>0)
        {
            var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oSampleInvoice,
                ControllerName: "SampleInvoice",
                ActionName: "RemoveExportPIFromBill",
                TableId: "tblSampleInvoices",
                IsWinClose: false,
                Message: '',
            };
            $.icsDelete(obj, function (response) {
                if (response.status && response.Message == "deleted")
                {
                    DynamicRefreshList([], "tblDODetails");
                    GetsDOD();
                    //DeliveryOrderBillDetailSummery();
                }
            });
        }
        else{

            var SelectedRowIndex = $('#tblSampleInvoices').datagrid('getRowIndex', oSampleInvoice);
            $('#tblSampleInvoices').datagrid('deleteRow',SelectedRowIndex);
            GetsDOD();
            //  RefreshSummary();
        }

    });
    $("#btnCloseDeliveryBill").click(function () {
        $("#winDeliveryBill").icsWindow("close");
    });
    function GetSampleInvoiveIDs() {
        var sIDs = '';
        var oDUDBs = $('#tblSampleInvoices').datagrid("getChecked");
        //var oDUDBs = $('#tblSampleInvoices').datagrid("getRows");
        if (oDUDBs.length > 0) {
            for (var i = 0; i < oDUDBs.length; i++) {
                sIDs = sIDs + oDUDBs[i].SampleInvoiceID + ','
            }
            sIDs = sIDs.substring(0,sIDs.length-1);
        }
        return sIDs;
    }

    function GetsDOD()
    {
        var oSIs = $('#tblSampleInvoices').datagrid("getChecked");
        if (oSIs.length<=0) {return;}
        //var oSIs = $('#tblSampleInvoices').datagrid("getRows");
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oSIs,
            ControllerName: "ExportPI",
            ActionName: "GetDODetails",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0)
            {
                DynamicRefreshList(response.objs, "tblDODetails");
                RefreshTotal_Bill();
            }
        });
    }
    function RefreshTotal_Bill()
    {
        debugger;
        var nTotalQty = 0;
        var nTotalValue = 0;
        var nTotalUP = 0;

        var oDODetails = $('#tblDODetails').datagrid('getRows');
        for (var i = 0; i < oDODetails.length; i++) {
            nTotalQty = nTotalQty + parseFloat(oDODetails[i].Qty);
            nTotalValue = nTotalValue + parseFloat(oDODetails[i].Amount);

        }
        var sCurrency = "";
        var nCurrency = $("#cboCurrency option:selected").val();
        if (nCurrency > 0) {
            sCurrency = $("#cboCurrency option:selected").text();
        }
        if(nTotalQty>0)
        {
            nTotalUP=nTotalValue/nTotalQty;
        }
        document.getElementById("lblQty_Bill_MUOne").innerHTML = PriceFormateInString(nTotalQty,4);
        document.getElementById("lblUP_Bill_MUOne").innerHTML = sCurrency + " " + PriceFormateInString(nTotalUP,4);
        document.getElementById("lblAmount_Bill_MUOne").innerHTML =  sCurrency + " " +PriceFormateInString(nTotalValue,2);
    }

    //////Qty Change
    $("#txtQtyInOne").keyup(function (e){
        debugger;
        ConvertIntoKg_Qty();
    });
    $("#txtQtyInTwo").keyup(function (e){
        debugger;
        ConvertIntoLbs_Qty();
    });

    function ConvertIntoLbs_Qty()
    {
        var nQtyInTwo =$('#txtQtyInTwo').val();//icsRemoveComma($('#txtQtyInTwo').val());
        //var nQtyInOne= parseFloat(nQtyInTwo/0.45359237001003542909395360718511).toFixed(4);
        var nQtyInOne= parseFloat(nQtyInTwo/$('#tabExportPITabs').data('MeasurementUnitCon').Value).toFixed(4);
        $('#txtQtyInOne').val(nQtyInOne);
        $('#txtAmount').val("$"+nQtyInOne*parseFloat($('#txtUnitPriceInOne').val()).toFixed(4));
    }
    function ConvertIntoKg_Qty()
    {
        var nQtyInOne =$('#txtQtyInOne').val();  //icsRemoveComma($('#txtQtyInOne').val());
        var nQtyInTwo= parseFloat(nQtyInOne*$('#tabExportPITabs').data('MeasurementUnitCon').Value).toFixed(10);
        $('#txtQtyInTwo').val(nQtyInTwo);
        $('#txtAmount').val("$"+(nQtyInOne*parseFloat($('#txtUnitPriceInOne').val()).toFixed(4)));
    }

    $("#txtUnitPriceInOne").keyup(function (e){
        debugger;
        ConvertIntoKgs_UnitPrice();
    });
    $("#txtUnitPriceInTwo").keyup(function (e){
        debugger;
        ConvertIntoLbs_UnitPrice();
    });

    function ConvertIntoLbs_UnitPrice()
    {
        var nQtyInTwo =$('#txtUnitPriceInTwo').val();// icsRemoveComma($('#txtUnitPriceInTwo').val());
        var nQtyInOne= parseFloat(nQtyInTwo*$('#tabExportPITabs').data('MeasurementUnitCon').Value).toFixed(4);
        $('#txtUnitPriceInOne').val(nQtyInOne);
        $('#txtAmount').val("$"+(nQtyInOne*parseFloat($('#txtQtyInOne').val()).toFixed(4)));
    }
    function ConvertIntoKgs_UnitPrice()
    {
        var nQtyInOne =$('#txtUnitPriceInOne').val();//icsRemoveComma($('#txtUnitPriceInOne').val());
        var nQtyInTwo= parseFloat(nQtyInOne/$('#tabExportPITabs').data('MeasurementUnitCon').Value).toFixed(10);
        $('#txtUnitPriceInTwo').val(nQtyInTwo);
        $('#txtAmount').val("$"+(nQtyInOne*parseFloat($('#txtQtyInOne').val()).toFixed(4)));
    }
    $("#txtQtyInOne,#txtQtyInTwo,#txtUnitPriceInOne,#txtUnitPriceInTwo,#txtAdjQty,#txtAdjRate,#txtCRate,#txtDocCharge").keypress(function (e) {
        if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
            return false;
        }

    });

    $("#txtAdjQty,#txtAdjRate,#txtDocCharge").keyup(function (e)
    {
        var nAdjValue=0;
        nAdjValue = parseFloat($('#txtAdjQty').val()) * parseFloat((parseFloat($('#txtUnitPriceInOne').val())- parseFloat($('#txtAdjRate').val())-parseFloat($('#txtDocCharge').val())))+ parseFloat((parseFloat($('#txtQtyInOne').val())*parseFloat($('#txtAdjRate').val())))+ parseFloat((parseFloat($('#txtQtyInOne').val())*parseFloat($('#txtDocCharge').val())));
        $('#txtAdjAmount').val("$"+ parseFloat(nAdjValue).toFixed(4));
    });

    $("#txtCRate").keyup(function (e)
    {
        var nCAmount=0;
        nCAmount = (parseFloat($('#txtQtyInOne').val())- parseFloat($('#txtAdjQty').val()))*parseFloat($('#txtCRate').val());
        $('#txtCAmount').val("$"+ parseFloat(nCAmount).toFixed(4));
    });


    function MakeFooterColumn(tblSampleInvoices,Amount)
    {
        var FooterField=[];
        var obj=new Object();
        
        obj['SampleInvoiceDateST']="Total: ";
        obj['Amount']="$ " + GetSum('Amount',tblSampleInvoices);
     
        FooterField.push(obj);
        $('#'+tblSampleInvoices).datagrid('reloadFooter',FooterField);
        ShowBalance()
    }

    function GetSum(sFieldName,tblSampleInvoices)
    {
        debugger;
        var data=$('#tblSampleInvoices').datagrid('getRows').select(sFieldName);
        //var data=$('#tblSampleInvoices').datagrid('getChecked').select(sFieldName);
        var sum = 0;
        for (i = 0; i < data.length; i++)
        {
            sum+=parseFloat(data[i]);
        }
        return sum;
    }
    function ShowBalance()
    {
        var nBalance = _nTotalValue - GetSum('Amount',tblSampleInvoices);
        nBalance = nBalance.toFixed(2);
        $('#lblTotalBalance').text("Balance:  $" +nBalance);
    }
</script>


