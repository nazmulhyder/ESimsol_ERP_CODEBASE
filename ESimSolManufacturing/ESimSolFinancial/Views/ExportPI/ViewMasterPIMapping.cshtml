<html>
<head>
    @{
        ViewBag.Title = "Master PI Configure";
    } 
</head>
<body>
    @model ESimSol.BusinessObjects.ExportPI
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>

    <div class="menuMainCollectionTable">
        <div class="easyui-panel" title="" style="font-family:Tahoma; text-align:center; height:89%;">
                <div title="Master PI" style=" width:100%">
                    <fieldset>
                        <legend style="font-weight:bold">Master PI Information : </legend>
                        <table border="0" cellspacing="1" cellpadding="1" class="CaptionStyle" style="width:100%;text-align:left;">
                            <tr>
                                <td style="width:10%; text-align:right">
                                   Master PI No :
                                </td>
                                <td style="width:40%">
                                    @Html.TextBoxFor(model => model.PINo, new { style = "width:100%;", id = "txtPINo", disabled = "disabled" })
                                </td>
                                <td style="width:15%; text-align:right">
                                    Issue Date :
                                </td>
                                <td style="width:35%">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:30%">@Html.TextBoxFor(model => model.IssueDateInString, new { style = "width:100%;", id = "txtIssueDateInString", disabled = "disabled" })</td>
                                            <td style="width:30%;text-align:right;">Validate Date:</td>
                                            <td style="width:30%">@Html.TextBoxFor(model => model.ValidityDateInString, new { style = "width:100%;", id = "txtValidityDateInString", disabled = "disabled" })</td>    
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:10%; text-align:right">
                                    For Account Of :
                                </td>
                                <td style="width:40%;text-align:left">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:48%">@Html.TextBoxFor(model => model.ContractorName, new { style = "width:100%;", id = "txtContractorName", disabled = "disabled" })</td>
                                            <td style="width:14%;text-align:right;">C.Person: </td>
                                            <td style="width:38%">@Html.TextBoxFor(model => model.ContractorContactPersonName, new { style = "width:100%;", id = "txtContractorContactPersonName", disabled = "disabled" })</td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:15%; text-align:right">
                                    PI Bank :
                                </td>
                                <td style="width:35%">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:33%">@Html.TextBoxFor(model => model.BankName, new { style = "width:100%;", id = "txtBankName", disabled = "disabled" }) </td>
                                            <td style="width:34%;text-align:right;">Bank Account : </td>
                                            <td style="width:33%">@Html.TextBoxFor(model => model.BankAccountNo, new { style = "width:100%;", id = "txtAccountName", disabled = "disabled" }) </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:10%; text-align:right">
                                    Buyer Name :
                                </td>
                                <td style="width:40%;text-align:left">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:48%">@Html.TextBoxFor(model => model.BuyerName, new { style = "width:100%;", id = "txtBuyerName", disabled = "disabled" }) </td>
                                            <td style="width:14%;text-align:right;">C.Person: </td>
                                            <td style="width:38%">@Html.TextBoxFor(model => model.BuyerContactPersonName, new { style = "width:100%;", id = "txtBuyerContactPersonName", disabled = "disabled" })</td>
                                        </tr>
                                    </table>
                                </td>

                                <td style="width:15%; text-align:right">
                                    MKT Person :
                                </td>
                                <td style="width:35%">
                                    @Html.TextBoxFor(model => model.MKTPName, new { style = "width:100%;", id = "txtMKTPName", disabled = "disabled" })
                                </td>                        
                            </tr>
                            <tr>
                                <td style="width:10%; text-align:right">
                                    Delivery To :
                                </td>
                                <td style="width:40%;text-align:left">@Html.TextBoxFor(model => model.DeliveryToName, new { style = "width:100%;", id = "txtDeliveryToName", disabled = "disabled" }) </td>
                                            
                                <td style="width:15%; text-align:right">
                                    Currency :
                                </td>
                                <td style="width:35%">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:33%">@Html.TextBoxFor(model => model.Currency, new { style = "width:100%;", id = "txtCurrency", disabled = "disabled" }) </td>
                                            <td style="width:34%;text-align:right;">Amount : </td>
                                            <td style="width:33%">@Html.TextBoxFor(model => model.Amount, new { style = "width:100%; text-align:right", id = "txtAmount", disabled = "disabled" }) </td>
                                        </tr>
                                    </table>
                                </td>    
                            </tr>
                        </table>
                        </fieldset>
                     <table id="tblMasterPIMapping" title="Item Description" class="easyui-datagrid" style="width:100%;height:320px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarPIDetail" >
                        <thead >
                            <tr>
                                <th field="PINo" width="23%" align="left">PI No</th>
                                <th field="IssueDateInString" width="15%" align="left">Issue Date</th>
                                <th field="ValidityDateInString" width="13%" align="left">Validate Date</th>
                                <th field="AmountSt" width="15%" align="right">Amount</th>
                            </tr>
                        </thead>
                          
                        </table>
                        <div id="toolbarPIDetail">
                            <a id="btnPickMasterPIMapping" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pick" plain="true">Pick</a> 
                            <a id="btnRemoveMapping" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                            <a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a></td>    
                        </div>
                 
                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%;">
                        <tr>
                            <td style="width:28%;  text-align:right;font-weight:bold;">Total:</td>
                            <td style="width:36%; text-align:right; font-weight:bold;"><label id="lblCurrencySymbol"></label>&nbsp;<label id="lblTotalAmount">0.00</label> </td>
                            <td style="width:31%;  text-align:right;font-weight:bold;"> </td>
                        </tr>
                    </table>
                   
                </div>
         </div>  
            <fieldset style="height:8%">
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                        <tr>
                            <td style="width:83%; text-align:right"></td>
                            <td style="width:17%;text-align:right;">
                                <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                                <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-closed" plain="true" onclick="Close()" >Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
        </div>
</body>
</html>
<script type="text/javascript">
    var _sBaseAddress = "";
    var _oExportPI=null;
    var _oMasterPIMappings = [];
    var _nActivePIPrintSetupID = 0;
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oExportPI =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oMasterPIMappings = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.MasterPIMappings));
        debugger;
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
        if(parseInt(_oExportPI.ExportPIID)>0)
        {
            DynamicRefreshList(_oMasterPIMappings, "tblMasterPIMapping");
            SetTotal();
        }
    });

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }
    $("#btnPickMasterPIMapping").click(function () 
    {
        debugger;
        if(parseInt(_oExportPI.ExportPIID)<=0)
        {
            alert("Sorry Invalid Master PI. Please Select Valid Master PI.");
            return;
        }
        var oExportPI = {
            ContractorID:parseInt(_oExportPI.ContractorID),
            CurrencyID:parseInt(_oExportPI.CurrencyID),
            RateUnit : parseInt(_oExportPI.RateUnit),
            BUID:_oExportPI.BUID
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oExportPI,
            ControllerName: "ExportPI",
            ActionName: "GetMasterPIMappingList",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ExportPIID> 0) {
                    var tblColums = [];
                    var oColumn = { field:"PINo", title: "PI No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "IssueDateInString", title: "Issue Date", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ValidityDateInString", title: "Validate Date", width: 160, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "AmountSt", title: "Amount", width:120, align: "right" }; tblColums.push(oColumn);
                    
                    var oPickerParam = {
                        winid: 'winMasterPIMappingPicker',
                        winclass: 'clsMasterPIMappingPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblMasterPIMappingPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'PINo',
                        windowTittle: 'Master PI Mapping List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbuttonPI(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    });
    $("#btnRemoveMapping").click(function () {
        var oMasterPIMapping = $("#tblMasterPIMapping").datagrid("getSelected");
        if (oMasterPIMapping == null || parseInt(oMasterPIMapping.ExportPIID)<=0)
        {
            alert("Please select an item from list!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return false;
        var SelectedRowIndex=$('#tblMasterPIMapping').datagrid('getRowIndex',oMasterPIMapping); 
        alert("Data Delete Successfully.");
        $('#tblMasterPIMapping').datagrid('deleteRow', SelectedRowIndex);
        SetTotal();
    });
   
    $("#btnSave").click(function (e) {
        debugger;
      
        if (!ValidateInputExportPI()) return;
        var oExportPI = RefreshObjectExportPI();
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/ExportPI/SaveExpotPIMapping",
            traditional: true,
            data:  JSON.stringify(oExportPI),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oExportPI = jQuery.parseJSON(data);
                clearInterval(intervalID);
                $("#progressbarParent").hide();
                if (oExportPI.ErrorMessage==null || oExportPI.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    var oExportPIs = sessionStorage.getItem("ExportPIs");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oExportPIs != null) {
                        oExportPIs = jQuery.parseJSON(oExportPIs);
                    }
                    else {
                        oExportPIs = [];
                    }
                    if (nIndex != -1) {
                        oExportPIs[nIndex] = oExportPI;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oExportPIs.length);
                        oExportPIs.push(oExportPI);
                    }
                    sessionStorage.setItem("ExportPIs", JSON.stringify(oExportPIs));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oExportPI.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });
    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });
 
   function RefreshObjectExportPI()
    {
        var oExportPI = {
            ExportPIID:_oExportPI.ExportPIID,
            MasterPIMappings:$('#tblMasterPIMapping').datagrid('getRows')
        };
        return oExportPI;
    }
   function ValidateInputExportPI() {

        var oPIDetails = $('#tblMasterPIMapping').datagrid('getRows');
        if(oPIDetails.length<=0)
        {
            alert("Please add at least one Reference.");
            return false;
        }
        var ndLength = oPIDetails.length;
        for(var i =0;i<ndLength;i++)
        {
            if(parseFloat(oPIDetails[i].Amount)<=0)
            {
                alert("Amount Should be Greater thn 0");
                return false;
            }
          
        }
        var nTotalAmount = ICS_TotalCalculation(oPIDetails,'Amount');
        var nDiffAmount = (parseFloat(_oExportPI.Amount) - parseFloat(nTotalAmount));
        if(nDiffAmount<0)
        {
            nDiffAmount = (nDiffAmount * (-1));
        }
        if(parseFloat(nDiffAmount)>0.5)
        {
            alert("Reference PI Amount Should be equal Master PI Amount");
            return false;
        }
        //if(((parseFloat(_oExportPI.Amount)* 0.1)+parseFloat(_oExportPI.Amount))<parseFloat(nTotalAmount))
        //{
        //    alert("Reference PI Amount  Should be equal or 10% of total Master PI Amount");
        //    return false;
        //}
        return true;
    }

   function IntializePickerbuttonPI(oPickerobj)
   {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            SetPickerValueAssignPI(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which === 13) {
                SetPickerValueAssignPI(oPickerobj);
            }
        });
    }
    function SetPickerValueAssignPI(oPickerobj) {
        debugger;
        var oreturnObj = null, oreturnObjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnObjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }


        if(oPickerobj.winid=="winMasterPIMappingPicker")
        {
            debugger;
            if (oreturnObjs!= null && oreturnObjs.length> 0)
            {
                var oMasterPIMappings = $('#tblMasterPIMapping').datagrid("getRows");               
                for(var i = 0; i< oreturnObjs.length;i++)
                {
                    if(!ICS_IsExist(oMasterPIMappings,'ExportPIID',oreturnObjs[i].ExportPIID))
                    {
                        $('#tblMasterPIMapping').datagrid('appendRow',oreturnObjs[i]);
                    }
                }
                SetTotal();
            }
            else
            {
                alert("Please select atleast one item!");
                return;
            }
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }
    
    function SetTotal()
    {
        debugger;
        var oMasterPIMappings = $('#tblMasterPIMapping').datagrid('getRows');
        var nTotalValue = 0;
        var nTotalQty = 0;
        for(var i = 0;i<oMasterPIMappings.length;i++)
        {
            nTotalValue+=parseFloat(oMasterPIMappings[i].Amount);
          
            nTotalValue = parseFloat(nTotalValue);
          
        }
        $("#lblTotalQty").html(nTotalQty);
        $("#lblTotalAmount").html(formatPrice(nTotalValue,0));
    }
</script>