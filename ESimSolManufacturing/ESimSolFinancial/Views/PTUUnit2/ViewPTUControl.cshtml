<html>
<head>
    @{ViewBag.Title = "Production Tracking Unit Control";} 
</head>
<body>
    @model ESimSol.BusinessObjects.ExportSC
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div id="winGraceInfo" class="easyui-window" title="Update Grace Info" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <table border="0" cellpadding="1" cellspacing="1" style="width:99%">
            <tr>
                <td style="width:20%;text-align:right;">PI No:</td>
                <td style="width:30%">
                    <input type="text" id="txtPINo" style="width:100%; text-align:left;" disabled />
                </td>
                <td style="width:20%;text-align:right;">Product:</td>
                <td style="width:30%">
                    <input type="text" id="txtProductName" style="width:100%; text-align:left;" disabled />
                </td>
            </tr>
            <tr>
                <td style="width:20%;text-align:right;">Color Name:</td>
                <td style="width:30%">
                    <input type="text" id="txtColorName" style="width:100%; text-align:left;" disabled />
                </td>
                <td style="width:20%;text-align:right;">Buyer:</td>
                <td style="width:30%">
                    <input type="text" id="txtBuyerNameForGrace" style="width:100%; text-align:left;" disabled />
                </td>
            </tr>
           
            <tr>
                <td style="width:20%;text-align:right;">Already Grace:</td>
                <td style="width:80%" colspan="3"><input type="text" id="txtAlreadyGrace" style="width:100%;text-align:right;" disabled /></td>
            </tr>
            <tr>
                <td style="width:20%;text-align:right;">Grace:</td>
                <td style="width:80%" colspan="3"><input type="text" id="txtGraceQty" style="width:100%;text-align:right;" /></td>
            </tr>
            <tr>
                <td style="width:20%;text-align:right;">Total Grace:</td>
                <td style="width:80%" colspan="3"><input type="text" id="txtTotalGrace" style="width:100%;text-align:right;" disabled /></td>
            </tr>
        </table>
        <fieldset class="actionfieldsetstyle">
            <legend>Actions : </legend>
            <a id="btnSaveGraceQty" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
            <a id="btnCloseGracePicker" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
        </fieldset>
    </div>
    <div class="menuMainCollectionTable" id="divPS">
            <div class="easyui-panel" title="Production Tracking Control" style="font-family:Tahoma; text-align:center; height:98%;">
                <div style="width:100%;">
                    <fieldset>
                        <legend style="font-weight:bold">PI info: </legend>
                        <table style="width:100%" cellpadding="1" cellspacing="1">
                            <tr>
                                <td style="width: 10%; text-align: right">
                                    PI No:
                                </td>
                                <td style="width: 25%; text-align: left">
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td style="width:80%">@Html.TextBoxFor(model => model.PINo, new { style = "width: 100%;", id = "txtExportPINo", Placeholder = "Type PI No & Press Enter" })</td>
                                            <td style="width:20%"><a id="btnPickPI" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a></td>
                                        </tr>
                                    </table>

                                </td>
                                <td style="width: 10%; text-align:right;">
                                    Buyer :
                                </td>
                                <td style="width:30%; text-align:left;">@Html.TextBoxFor(model => model.BuyerName, new { style = "width: 100%;", id = "txtBuyerName", disabled = "disabled" })</td>
                                
                                <td style="width:10%; text-align: right">
                                    Issue Date:
                                </td>
                                <td style="width: 15%; text-align: left">@Html.TextBoxFor(model => model.IssueDateSt, new { style = "width:100%;", id = "txtIssueDateInString", disabled = "disabled" })</td>
                            </tr>
                            <tr>
                                <td style="width: 10%; text-align: right">
                                    For Account Of:
                                </td>
                                <td style="width: 25%; text-align: left">
                                    @Html.TextBoxFor(model => model.ContractorName, new { style = "width: 100%;", id = "txtContractorName", disabled = "disabled" })
                                </td>
                                <td style="width: 10%; text-align:right;">
                                    PI Type :
                                </td>
                                <td style="width:30%; text-align:left;">@Html.TextBoxFor(model => model.PITypeInString, new { style = "width: 100%;", id = "txtPITypeInString", disabled = "disabled" })</td>

                                <td style="width:10%; text-align: right">
                                    Validate Date:
                                </td>
                                <td style="width: 15%; text-align: left">@Html.TextBoxFor(model => model.ValidityDateInString, new { style = "width:100%;", id = "txtValidityDateInString", disabled = "disabled" })</td>
                            </tr>
                            <tr>
                                <td style="width: 10%; text-align: right">
                                    Delivery To:
                                </td>
                                <td style="width: 25%; text-align: left">
                                    @Html.TextBoxFor(model => model.DeliveryToName, new { style = "width: 100%;", id = "txtDeliveryToName", disabled = "disabled" })
                                </td>
                                <td style="width: 10%; text-align:right;">
                                    MKT Person :
                                </td>
                                <td style="width:30%; text-align:left;">@Html.TextBoxFor(model => model.MKTPName, new { style = "width: 100%;", id = "txtMKTPName", disabled = "disabled" })</td>

                                <td style="width:10%; text-align: right">
                                    Currency:
                                </td>
                                <td style="width: 15%; text-align: left">@Html.TextBoxFor(model => model.Currency, new { style = "width:100%;", id = "txtCurrency", disabled = "disabled" })</td>
                            </tr>
                            <tr>
                                <td style="width: 10%; text-align: right">
                                    PI Bank :
                                </td>
                                <td style="width: 25%; text-align: left">
                                    @Html.TextBoxFor(model => model.BankName, new { style = "width: 100%;", id = "txtBankName", disabled = "disabled" })
                                </td>
                                <td style="width: 10%; text-align:right;">
                                    Bank Account :
                                </td>
                                <td style="width:30%; text-align:left;">@Html.TextBoxFor(model => model.AccountName, new { style = "width: 100%;", id = "txtAccountName", disabled = "disabled" })</td>

                                <td style="width:10%; text-align: right">
                                    Note:
                                </td>
                                <td style="width: 15%;">@Html.TextBoxFor(model => model.Note, new { style = "width:100%;", id = "txtNote", disabled = "disabled" })</td>
                            </tr>
                        </table>
                    </fieldset>
                </div>
                <table id="tblPTUs" title="PTU Details" class="easyui-datagrid" style="height:380px; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
                    <thead data-options="frozen:true">
                        <tr>
                            <th field="ProductCode" width="8%" align="left">Code</th>
                            <th field="ProductName" width="15%" align="left">Product Name</th>
                            <th width="10%" align="left" field="ColorName">Color Name</th>
                            <th width="10%" align="left" field="SizeName">Size</th>
                            <th width="10%" align="left" field="Measurement">Measurement</th>
                            <th width="8%" align="left" field="UnitName">Unit</th>
                            <th width="6%" align="right" formatter="formatPrice" field="ExportSCQty">PI Qty</th>
                            <th width="6%" align="right" field="ProdOrderQtyInString" formatter="formatingQty">PO Qty</th>
                        </tr>
                      </thead>
                    <thead>
                        <tr>
                            <th width="10%" align="right" field="ProductionCapacity" formatter="formatPrice">Prod. Capacity</th>
                            <th width="6%" align="right" field="ProdPipeLineQtyInString" formatter="formatingQty">Pipe Line Qty</th>
                            <th width="8%" align="right" field="SubcontractQtyInString" formatter="formatingQty">Subcontract Qty</th>
                            <th width="8%" align="right" field="SubContractReadStockQty" formatter="formatPrice">SubC. Ready Stock</th>
                            <th width="9%" align="right" field="SubContractReceiveQtyInString" formatter="formatSubContractReceiveQty">Rcv Qty(Subcontract)</th>
                            <th width="7%" align="right" field="ActualFinishQtyQtyInString" formatter="formatingQty">Actual Finish</th>
                            <th width="7%" align="right" field="DOQtyInString" formatter="formatingQty">DO Qty</th>
                            <th width="7%" align="right" formatter="formatPrice" field="YetToDOQty">Yet to DO</th>
                            <th width="7%" align="right" field="ChallanQtyInString" formatter="formatingQty">Challan Qty</th>
                            <th width="7%" align="right" formatter="formatPrice" field="YetToChallanQty">Yet to Challan</th>
                            <th width="7%" align="right" field="GraceQtyInString" formatter="formatingQty">Grace Qty</th>
                            <th width="7%" align="right" formatter="formatPrice" field="ReturnQty">Return Qty</th>
                            <th width="7%" align="right" field="RejectQtyInString" formatter="formatingQty">Reject Qty</th>
                            <th width="7%" align="right" field="ReadyStockQtyInString" formatter="formatReadyStockQty">Ready Stock</th>
                            <th width="7%" align="right" formatter="formatPrice" field="AvialableStockQty">Avilable Stock</th>
                            <th width="10%" align="left" field="StyleNo">Style No</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbar">
                    <a id="btnAddProductionSheet" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Create Production Sheet</a>
                    <a id="btnAddGrace" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Grace</a>
                    <a id="btnReload" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                    <a id="btnPTUReceive" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-receive" plain="true">PTU ->PTU(Transfer)</a>
                    <a id="btnPTUReceiveInReadyeStock" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-receive" plain="true">Avilable->PTU(Transfer)</a>
                    <a id="btnPTUReceiveInAvilableStock" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-receive" plain="true">PTU ->Avilable(Transfer)</a>
                    <a id="btnSubContract" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">SubContract</a>
                    <a id="btnPTUReceiveSubContract" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-receive" plain="true">PTU Rcv(SubContract)</a>
                </div>
            </div>
        </div>
</body>
</html>
<style type="text/css">
       #winGraceInfo {
        width: 750px;
    }
</style>
<script type="text/javascript">
    var _sBaseAddress ="";
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oExportSC =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var nProductNature = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ProductNature));
        var nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
        var oPTUUnit2s = oExportSC.PTUUnit2s;
        sessionStorage.setItem("BUID",nBUID);
        sessionStorage.setItem("ProductNature",nProductNature);
        $('#txtGraceQty,#txtTotalGrace,#txtAlreadyGrace').icsCurrencyBox();
        $('#divPS').data('ExportSC',oExportSC);
        DynamicRefreshList(oPTUUnit2s, "tblPTUs");
        if(nProductNature==2)//Poly
        {
            $('#tblPTUs').datagrid('hideColumn', 'SizeName');
        }else{ //Hanger
            $('#tblPTUs').datagrid('hideColumn', 'Measurement');
        }
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
    });
    $('#txtGraceQty').keyup(function(){
        $('#txtTotalGrace').val(parseInt(icsRemoveComma($('#txtGraceQty').val())) + parseInt(icsRemoveComma($('#txtAlreadyGrace').val())));
    })
    $('#btnReload').click(function(){
        MakeURL($('#divPS').data('ExportSC').ExportSCID);
    });
    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }

    $("#txtExportPINo").keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtExportPINo').val())==null || $.trim($('#txtExportPINo').val())=="")
            {
                alert("Please Type PO No and Press Enter");
                return;
            }
            GetExportSC($.trim($('#txtExportPINo').val()));
        }else if(code==8)
        {
            $('#txtExportPINo').val('');
            MakeURL(0);
            $('#txtExportPINo').focus();
        }
    });

    $("#btnPickPI").click(function () {
        GetExportSC($.trim($('#txtExportPINo').val()));
    });

    function GetExportSC(sExportPINo)
    {
        var oExportSC = {PINo:sExportPINo, BUID:sessionStorage.getItem("BUID"),ProductNatureInInt:sessionStorage.getItem("ProductNature")};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oExportSC,
            ControllerName: "PTUUnit2",
            ActionName: "GetsExportSCForPTU",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ExportSCID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "PINo", title: "PI No", width:180, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorName", title: "Contractor", width: 230, align: "left" }; tblColums.push(oColumn);
                    
                    var oPickerParam = {
                        winid: 'winExportSCPicker',
                        winclass: 'clsExportSCPicker',
                        winwidth: 520,
                        winheight: 460,
                        tableid: 'tblExportSCPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'PINo',
                        windowTittle: 'Export PI List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }


    $("#btnSubContract").click(function (){
        var oPTUUnit2 = $('#tblPTUs').datagrid("getSelected");
        if(oPTUUnit2==null || oPTUUnit2.PTUUnit2ID<=0)
        {
            alert("Please Select a Item from List");
            return;
        }
        if(parseFloat(oPTUUnit2.ProductionCapacity)<=0)
        {
            alert("Please Select a Item from List, Which Production Capacity Greater than 0.");
            return;
        }
        var SelectedRowIndex=$('#tblPTUs').datagrid('getRowIndex',oPTUUnit2);
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("ProductionSheetHeader", "Add Sub Contract");
        sessionStorage.setItem("BackLink", window.location.href);
        sessionStorage.setItem("PTUUnit2", JSON.stringify($('#divPS').data('PTUUnit2')));
        window.location.href = _sBaseAddress+ "/Subcontract/ViewSubcontract?id=0&ptuid="+oPTUUnit2.PTUUnit2ID;
    });

    $("#btnAddProductionSheet").click(function (){

        var oPTUUnit2 = $('#tblPTUs').datagrid("getSelected");
        if(oPTUUnit2==null || oPTUUnit2.PTUUnit2ID<=0)
        {
            alert("Please Select a Item from List");
            return;
        }
        if(parseFloat(oPTUUnit2.ProductionCapacity)<=0)
        {
            alert("Please Select a Item from List, Which Production Capacity Greater than 0.");
            return;
        }
        var SelectedRowIndex=$('#tblPTUs').datagrid('getRowIndex',oPTUUnit2);
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("ProductionSheetHeader", "Add Production Sheet");
        sessionStorage.setItem("BackLink", window.location.href);
        sessionStorage.setItem("PTUUnit2", JSON.stringify($('#divPS').data('PTUUnit2')));
        //EnumBusinessUnitType{Dyeing = 0,Hanger = 1,Poly = 2}
        if(parseInt(oPTUUnit2.ProductNatureInInt)==1)//Hanger
        {
            window.location.href = _sBaseAddress+ "/ProductionSheet/ViewProductionSheet?id=0&PTUUnit2ID="+oPTUUnit2.PTUUnit2ID;
        }else if(parseInt(oPTUUnit2.ProductNatureInInt)==2)//Poly
        {
            window.location.href = _sBaseAddress+ "/ProductionSheet/ViewProductionSheetForPoly?id=0&PTUUnit2ID="+oPTUUnit2.PTUUnit2ID;
        }

    });

    $("#btnAddGrace").click(function (){

        var oPTUUnit2 = $('#tblPTUs').datagrid("getSelected");
        if(oPTUUnit2==null || oPTUUnit2.PTUUnit2ID<=0)
        {
            alert("Please Select a Item from List");
            return;
        }
        $('#divPS').data('PTUUnit2',oPTUUnit2);
        var SelectedRowIndex=$('#tblPTUs').datagrid('getRowIndex',oPTUUnit2);
        sessionStorage.setItem('SelectedIndex',SelectedRowIndex);
        $('#txtPINo').val(oPTUUnit2.ExportPINo);
        $('#txtProductName').val(oPTUUnit2.ProductName);
        $('#txtColorName').val(oPTUUnit2.ColorName);
        $('#txtBuyerNameForGrace').val(oPTUUnit2.BuyerName);
        $('#txtAlreadyGrace').val(oPTUUnit2.GraceQty);
        $('#txtGraceQty').val(0);
        $("#winGraceInfo").icsWindow("open", "Update Grace Quantity");
    });
    $("#btnPTUReceive").click(function ()
    {

        var oPTUUnit2 = $('#tblPTUs').datagrid("getSelected");
        if(oPTUUnit2==null || parseInt(oPTUUnit2.PTUUnit2ID)<=0)
        {
            alert("Please Select a Item from List");
            return;
        }
        var SelectedRowIndex=$('#tblPTUs').datagrid('getRowIndex',oPTUUnit2);
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("ProductionSheetHeader", "PTU Receive");
        sessionStorage.setItem("BackLink", window.location.href);
        sessionStorage.setItem("PTUUnit2", JSON.stringify($('#divPS').data('PTUUnit2')));
        window.location.href = _sBaseAddress+ "/PTUUnit2/ViewPTUReceive?nPTUUnit2ID="+oPTUUnit2.PTUUnit2ID;
    });
    $("#btnPTUReceiveInReadyeStock").click(function ()
    {
        var oPTUUnit2 = $('#tblPTUs').datagrid("getSelected");
        if(oPTUUnit2==null || parseInt(oPTUUnit2.PTUUnit2ID)<=0)
        {
            alert("Please Select a Item from List");
            return;
        }
        var SelectedRowIndex=$('#tblPTUs').datagrid('getRowIndex',oPTUUnit2);
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("ProductionSheetHeader", "PTU Receive");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href = _sBaseAddress+ "/PTUUnit2/ViewPTUReceiveInReadyStock?nPTUUnit2ID="+oPTUUnit2.PTUUnit2ID;
    });

    $("#btnPTUReceiveInAvilableStock").click(function ()
    {

        var oPTUUnit2 = $('#tblPTUs').datagrid("getSelected");
        if(oPTUUnit2==null || parseInt(oPTUUnit2.PTUUnit2ID)<=0)
        {
            alert("Please Select a Item from List");
            return;
        }
        var SelectedRowIndex=$('#tblPTUs').datagrid('getRowIndex',oPTUUnit2);
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("ProductionSheetHeader", "PTU Receive");
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href = _sBaseAddress+ "/PTUUnit2/ViewPTUReceiveInAvilableStock?nPTUUnit2ID="+oPTUUnit2.PTUUnit2ID;
    });

    $("#btnPTUReceiveSubContract").click(function ()
    {
        var oPTUUnit2 = $('#tblPTUs').datagrid("getSelected");
        if(oPTUUnit2==null || parseInt(oPTUUnit2.PTUUnit2ID)<=0)
        {
            alert("Please Select a Item from List");
            return;
        }
        var SelectedRowIndex=$('#tblPTUs').datagrid('getRowIndex',oPTUUnit2);
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("ProductionSheetHeader", "PTU Receive For SubContract");
        sessionStorage.setItem("BackLink", window.location.href);
        sessionStorage.setItem("PTUUnit2", JSON.stringify($('#divPS').data('PTUUnit2')));
        window.location.href = _sBaseAddress+ "/PTUUnit2/ViewSubContractReceive?nPTUUnit2ID="+oPTUUnit2.PTUUnit2ID+"&nExportSCDetailID="+oPTUUnit2.ExportSCDetailID;
    });

    $('#btnSaveGraceQty').click(function(){
        if(parseInt(icsRemoveComma($('#txtGraceQty').val()))<=0)
        {
            alert("Grace Qty Should Greater than 0.");
        }
        var oPTUUnit2 =  $('#divPS').data('PTUUnit2');
        oPTUUnit2.GraceQty = parseInt(icsRemoveComma($('#txtGraceQty').val()));
        var SelectedRowIndex = sessionStorage.getItem("SelectedIndex");
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/PTUUnit2/UpdateGraceQty",
            traditional: true,
            data:  JSON.stringify(oPTUUnit2),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //
                oPTUUnit2 = jQuery.parseJSON(data);
                if (oPTUUnit2.ErrorMessage==null || oPTUUnit2.ErrorMessage=="") {
                    alert("Successfully Updted Grace.");
                    $("#winGraceInfo").icsWindow("close");
                    $('#tblPTUs').datagrid('updateRow',{index:SelectedRowIndex,row:oPTUUnit2});
                }
                else {
                    alert(oPTUUnit2.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });
    $('#btnCloseGracePicker').click(function(){
        $("#winGraceInfo").icsWindow("close");
    });
    $("#txtRawMaterialName").keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if(parseFloat(icsRemoveComma($('#txtQuantity').val()))<=0)
            {
                alert('Sheet Quantity Should be Greater than 0.');
                return false;
            }

            if($.trim($('#txtRawMaterialName').val())==null || $.trim($('#txtRawMaterialName').val())=="")
            {
                alert("Type Raw Material Name and Press Enter.");
                $('#txtRawMaterialName').focus();
                return;
            }
            if(parseInt($('#cboQtyType').val())<=0)
            {
                alert("Please select Qty Type!");
                $('#cboQtyType').focus();
                return;
            }
            var sProductName = $.trim($('#txtRawMaterialName').val());
            GetRawMaterials(sProductName);
        }else if (code == 8) //backspace=8
        {
            //
            $("#txtRawMaterialName").removeClass("fontColorOfPickItem");
        }
    });
    $("#btnRefreshDetail").click(function (){
        endEditing();
    });

    function formatingQty(value)
    {
        var values=value.split("~");
        var nPTUUnit2ID=values[0];
        var nRefType=values[1];
        var nValue=values[2];
        var s = '<a  href="javascript:void(0)" id="idPO~'+nPTUUnit2ID+' value="'+nValue+'"  onclick = "PickerLoad('+nPTUUnit2ID+','+nRefType+')"">'+nValue+'</a>';
        return s;
    }
    function PickerLoad(nPTUUnit2ID,nRefType)
    {
        if(nPTUUnit2ID == null || parseInt(nPTUUnit2ID)<=0 || nRefType<=0)
        {
            alert("Sorry Click Again");
            return;
        }
        var oPTUUnit2Log  = {PTUUnit2ID:nPTUUnit2ID, PTUUnit2RefTypeInInt:nRefType};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oPTUUnit2Log,
            ControllerName: "PTUUnit2",
            ActionName: "GetsByPTUwithType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PTUUnit2LogID > 0) {
                    var tblColums = [];
                    var oColumn = "", sRefNoTitle = '', nWidth=600, sQtyTitle='Qty';
                    //1:Production Order; 2:Productio sheet; 3: DO;4:Challan;5:grace;6:QC/Lot
                    if(nRefType==1){sRefNoTitle='PO NO';}else if(nRefType==2||nRefType==7){sRefNoTitle='Sheet No'}else if(nRefType==3){sRefNoTitle='DO No'}else if(nRefType==4){sRefNoTitle='Challan No'}else if(nRefType==5){sRefNoTitle='Grace No'}else if(nRefType==6){sRefNoTitle='Lot No'}else if(nRefType==13){sRefNoTitle='SubContract No'}
                    oColumn = { field: "RefNo", title: sRefNoTitle, width: 100, align: "left" }; tblColums.push(oColumn);
                    if(nRefType==1)//PO
                    {
                        oColumn = { field: "PODateInString", title: "PO Date", width: 80, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "POApproveByName", title: "Approve By", width: 100, align: "left" }; tblColums.push(oColumn);
                    }
                    else if(nRefType==2)//pipe line qty
                    {
                        sQtyTitle = 'Sheet Qty';
                        oColumn = { field: "SheetWiseActualFinish", title: "Actual finish", formatter:formatPriceWithZeroDecimal, width: 90, align: "right" }; tblColums.push(oColumn);
                        oColumn = { field: "SheetWiseReject", title: "Reject", width: 70, formatter:formatPriceWithZeroDecimal, align: "right" }; tblColums.push(oColumn);
                        oColumn = { field: "PipeLineQtyInString", title: "Pipe Line", width: 100, align: "right" }; tblColums.push(oColumn);
                    }
                    else if(nRefType==3){//DO
                        oColumn = { field: "DeliveryDateInString", title: "Delivery Date",width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "DOApprovedByName", title: "Approved By",width: 100, align: "left" }; tblColums.push(oColumn);
                    }
                    else if(nRefType==4){//challan
                        oColumn = { field: "EntryPerson", title: "Challan By",width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "WorkingUnitName", title: "Store",width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "LotNo", title: "Lot No",width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "DBServerDateTimeInString", title: "Challan Time",width: 90, align: "left" }; tblColums.push(oColumn);
                    }else if(nRefType==5){//Grace

                        oColumn = { field: "EntryPerson", title: "Entry By",width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "DBServerDateTimeInString", title: "Execution Time",width:130, align: "left" }; tblColums.push(oColumn);
                    }else if(nRefType==6){//Actual finish
                        oColumn = { field: "EntryPerson", title: "QC By",width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "WorkingUnitName", title: "Store",width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "DBServerDateTimeInString", title: "Operation Time",width:130, align: "left" }; tblColums.push(oColumn);
                    }else if(nRefType==7){//Reject

                        oColumn = { field: "EntryPerson", title: "Operate By",width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "DBServerDateTimeInString", title: "Operation Time",width:130, align: "left" }; tblColums.push(oColumn);
                    }else if(nRefType==13){//Subcontract

                        oColumn = { field: "ContractBUName", title: "Send To",width:150, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ContractDateInstring", title: "Contract Date",width:70, align: "left" }; tblColums.push(oColumn);
                    }
                    oColumn = { field: "MUSymbol", title: "Unit", width:60, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Qty", title: sQtyTitle, formatter:formatPriceWithZeroDecimal, width: 100, align: "right" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winPTUUnit2Log',
                        winclass: 'clsPTUUnit2Log',
                        winwidth: nWidth,
                        winheight: 460,
                        tableid: 'tblPTUUnit2Log',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'RefNo',
                        windowTittle: 'History List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    function formatReadyStockQty(value)
    {
        var values=value.split("~");
        var nPTUUnit2ID=values[0];
        var nValue=values[1];
        var s = '<a  href="javascript:void(0)" id="idstock~'+nPTUUnit2ID+' value="'+nValue+'"  onclick = "ReadyStockHistory('+nPTUUnit2ID+')"">'+nValue+'</a>';
        return s;
    }
    function ReadyStockHistory(nPTUUnit2ID)
    {
        if(nPTUUnit2ID == null || parseInt(nPTUUnit2ID)<=0 )
        {
            alert("Sorry Click Again");
            return;
        }
        var oPTUUnit2Distribution  = {PTUUnit2ID:nPTUUnit2ID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oPTUUnit2Distribution,
            ControllerName: "PTUUnit2",
            ActionName: "GetsReadyStockHistory",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PTUUnit2DistributionID > 0) {
                    var tblColums = [];
                    var oColumn = "",  nWidth=750;
                    oColumn = { field: "LotNo", title: "Lot No", width:150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "WorkingUnitName", title: "Store", width:150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "MUName", title: "Unit", width:60, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Qty", title: "Ready Stok", formatter:formatPriceWithZeroDecimal, width: 100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "LotBalance", title: "Actula Stock", formatter:formatPriceWithZeroDecimal, width: 100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "MUName", title: "Stock M.Unit",  width: 200, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winPTUUnit2Distribution',
                        winclass: 'clsPTUUnit2Distribution',
                        winwidth: nWidth,
                        winheight: 460,
                        tableid: 'tblPTUUnit2Distribution',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'LotNo',
                        windowTittle: 'Stock History List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }

    function formatSubContractReceiveQty(value)
    {
        var values=value.split("~");
        var nPTUUnit2ID=values[0];
        var nValue=values[1];
        var s = '<a  href="javascript:void(0)" id="idSCR~'+nPTUUnit2ID+' value="'+nValue+'"  onclick = "SubContractReceiveHistory('+nPTUUnit2ID+')"">'+nValue+'</a>';
        return s;
    }
    
    function SubContractReceiveHistory(nPTUUnit2ID)
    {
        if(nPTUUnit2ID == null || parseInt(nPTUUnit2ID)<=0 )
        {
            alert("Sorry Click Again");
            return;
        }
        var oPTUUnit2Distribution  = {PTUUnit2ID:nPTUUnit2ID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oPTUUnit2Distribution,
            ControllerName: "PTUUnit2",
            ActionName: "GetsSubContrctReceiveHistory",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PTUUnit2DistributionID > 0) {
                    var tblColums = [];
                    var oColumn = "",  nWidth=550;
                    oColumn = { field: "LotNo", title: "Lot No", width:150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "WorkingUnitName", title: "Store", width:150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "MUName", title: "Unit", width:60, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Qty", title: "Qty", formatter:formatPriceWithZeroDecimal, width: 100, align: "right" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winPTUUnit2Distribution',
                        winclass: 'clsPTUUnit2Distribution',
                        winwidth: nWidth,
                        winheight: 460,
                        tableid: 'tblPTUUnit2Distribution',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'LotNo',
                        windowTittle: 'Stock History List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }

  
    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }
    function SetPickerValueAssign(oPickerobj) {

        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winExportSCPicker')
        {
            if (oreturnObj != null && oreturnObj.ExportSCID > 0)
            {
                MakeURL(oreturnObj.ExportSCID);
            }
        }
    }
    function MakeURL(nExportSCID)
    {
        var sTargetLink = "";
        var sLink = window.location.href;
        var sLinkArray =[];sLinkArray = sLink.split('?');sTargetLink = sLinkArray[0]+'?';
        var sAndArray = sLinkArray[1].split('&');sAndArray[0] = 'nExportSCID='+nExportSCID;
        sTargetLink+=sAndArray[0];
        for(var i =1;i<sAndArray.length;i++)
        {
            sTargetLink+="&"+sAndArray[i];
        }
        window.location.href = sTargetLink;
        $('#txtExportPINo').focus();
    }
</script>