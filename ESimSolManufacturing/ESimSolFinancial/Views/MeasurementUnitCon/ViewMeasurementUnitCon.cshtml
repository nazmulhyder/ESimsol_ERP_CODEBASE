@{
    ViewBag.Title = "Add Measurement Unit Convertion";
}
@model ESimSol.BusinessObjects.MeasurementUnitCon

<div style="padding-top:5px" ng-app="MeasurementUnitConAPP" ng-controller="MeasurementUnitConCtrl" class="form-horizontal regionMeasurementUnitCon">
    <fieldset>
        <legend>Measurement Unit Conver</legend>
        <div class="row col-md-12">
            <div class="col-md-2 text-right"><label class="control-label">From Unit:</label></div>
            <div class="col-md-3 text-left">
                <select id="cboOrderType" ng-model="MeasurementUnitCon.FromMUnitID" ng-options="obj.MeasurementUnitID as obj.UnitNameType for obj in MeasurementUnits" ng-disabled="disabled" class="form-control">
                    <option value="">--- Select Unit---</option>
                </select>
            </div>
            <div class="col-md-2 text-right"><label class="control-label">To Unit:</label></div>
            <div class="col-md-3 text-left">
                <select id="cboOrderType" ng-model="MeasurementUnitCon.ToMUnitID" ng-options="obj.MeasurementUnitID as obj.UnitNameType for obj in MeasurementUnits" ng-disabled="disabled" class="form-control">
                    <option value="">--- Select Unit---</option>
                </select>
            </div>
            <div class="col-md-2 text-right"><label class="control-label">Value:</label></div>
         
            <div class="col-md-3 text-left">
                <input ng-model="MeasurementUnitCon.Value" ng-disabled="disabled" class="form-control" required />       
            </div>
        </div>
        <div class="row col-md-12">
            <div class="gridGenration">
                <fieldset>
                    <legend>Bussiness Unit Selection</legend>
                     <div ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
                 </fieldset>
            </div>
        </div>
        
      
    </fieldset>
    
    <div style="padding:40px">

    </div>
   
    <fieldset>
        <legend>Action</legend>
        <div class="row col-md-12 text-right">
            <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="save_Revise()" ng-hide="hide_Revise"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Save(Revise)</span> </button>
            <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Approve()" ng-hide="hide_Approve"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Approve</span> </button>
            <button type="button" class="btn btn-sm btn-success" aria-label="Left Align" ng-click="save()" ng-hide="hide_Save"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true">Save</span> </button>
            <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
        </div>
    </fieldset>
    

 
</div>


<style type="text/css">

    .grid{
        width:90%; 
        height:300px;
        padding-right:5px;
        padding-left:5px;
    }
      .regionMeasurementUnitCon .gridGenration 
      {
          width:30%;
         float:right;
         padding-right:5px;
        padding-left:5px;

      }
    .regionMeasurementUnitCon .form-horizontal .control-label{
        padding-top:3px;
    }
    .regionMeasurementUnitCon .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .regionMeasurementUnitCon .col-md-12{
        width:100%;
        padding-right:5px;
        padding-left:5px;
        margin-bottom:5px;
    }
    .regionMeasurementUnitCon .col-md-2{
        width:13%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionMeasurementUnitCon .col-md-3{
        width:20%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionMeasurementUnitCon .col-md-4{
        width:28%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionMeasurementUnitCon .col-md-5{
        width:40%;
        padding-right:5px;
        padding-left:0px;
    }

     .regionMeasurementUnitCon .col-md-10{
        width:86%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionMeasurementUnitCon .btn-sm{
         padding:3px 10px;
     }
     .regionMeasurementUnitCon .input-group-addon{
         padding: 4px 8px;
     }
</style>

<script type="text/javascript">

    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oMeasurementUnitCon =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oMeasurementUnits =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.MeasurementUnits));
    var oBussinessUnits =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BussinessUnit));
    var oMeasurementUnitBUs = @Html.Raw(Json.Encode(Model.MeasurementUnitBUs));
    var MeasurementUnitConModule = angular.module('MeasurementUnitConAPP', ['ngAnimate', 'ui.bootstrap', 'ui.grid', 'ui.grid.selection','ui.grid.resizeColumns', 'ui.grid.edit','ms.service']);
    MeasurementUnitConModule.controller('MeasurementUnitConCtrl', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession) {
      
        $scope.MeasurementUnitBUs = oMeasurementUnitBUs;
        
        $scope.gridOptions ={
            enableRowHeaderSelection: false,
            enableRowSelection: true,
            enableFullRowSelection: true,
            multiSelect: true,
            enableColumnResizing: true,
           
            showColumnFooter: true,
            enableGridMenu: false,
            columnDefs: [
                 {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                { field: 'BUTypeSt', name: 'Bussiness Unit', width:'90%', enableCellEdit: false }
                

            ],
            data:[],
            onRegisterApi:function(gridApi) {
                debugger;
                $scope.gridApi = gridApi;
                $scope.loadBusinessUnit();
               
            }
        };


        $scope.loadBusinessUnit=function(){
            $scope.gridOptions.data=oBussinessUnits;
            $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
            angular.forEach($scope.MeasurementUnitBUs,function(item, index){
                angular.forEach(oBussinessUnits,function(oBU, iloc){
                    if(oBU.BusinessUnitID==item.BUID){
                        debugger;
                        $scope.gridApi.selection.selectRow(oBU);
                    }
                });
            });
        }

        var viewType = sessionStorage.getItem("Operation");
        if (viewType == 'View')
        {
            $scope.disabled= true;
            $scope.hide=true;

            $scope.hide_Revise=true;
            $scope.hide_Approve=true;
            $scope.hide_Save=true;
        }
        else  if (viewType == 'Approve')
        {
            $scope.disabled= true;
            $scope.hide=true;
            $scope.hide_Revise=true;
            $scope.hide_Approve=false;
            $scope.hide_Save=true;
        }

        else
        {
            $scope.disabled= false;
            $scope.hide=false;

            $scope.hide_Revise=true;
            $scope.hide_Approve=true;
            $scope.hide_Save=false;
        }
        $scope.MeasurementUnits=oMeasurementUnits;
        $scope.MeasurementUnitCon=oMeasurementUnitCon;

        $scope.save = function () {
            debugger;
          
         
            var datas=$scope.gridApi.selection.getSelectedRows();
            if(datas != null & datas.length >0)
            {
                $scope.MeasurementUnitCon.BusinessUnits =datas;
            }
           
            $http.post(_sBaseAddress+'/MeasurementUnitCon/Save',JSON.stringify($scope.MeasurementUnitCon)).then(
                             function (response) {
                                 var result=jQuery.parseJSON(response.data);
                                 if(result.MeasurementUnitConID>0)
                                 {
                                     debugger;
                                     $scope.MeasurementUnitCon=result;
                                     userSession.setData('MeasurementUnitCons',$scope.MeasurementUnitCon);
                                     userSession.previousPage();
                                     // msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                 }
                                 else
                                 {
                                     alert(result.ErrorMessage);
                                 }

                             },
                             function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                       );
        };
        $scope.Approve = function () {
            $scope.MeasurementUnitCon.ChallanDate = $scope.MeasurementUnitCon.ChallanDateSt;
            $scope.MeasurementUnitCon.MeasurementUnitConDetails = $scope.gridOptions.data;

            $http.post(_sBaseAddress+'/MeasurementUnitCon/Approved',JSON.stringify($scope.MeasurementUnitCon)).then(
                             function (response) {
                                 var result=jQuery.parseJSON(response.data);
                                 if(result.MeasurementUnitConID>0)
                                 {
                                     debugger;
                                     $scope.MeasurementUnitCon=result;
                                     userSession.setData('MeasurementUnitCons',$scope.MeasurementUnitCon);
                                     userSession.previousPage();
                                     // msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                 }

                             },
                             function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                       );
        };
        $scope.close = function () {
            userSession.previousPage();
        };
        $scope.Modal = function (obj, operation, url) {
            debugger;
            var modalInstance = $uibModal.open({
                //animation: $scope.animationsEnabled,
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'lg',
                templateUrl: 'MeasurementUnitConDeatailModal.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'MeasurementUnitConCtrl',
                resolve: {
                    obj: function () {
                        return { MeasurementUnitCon:$scope.MeasurementUnitCon, MeasurementUnitConDetail: obj, operation: operation };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                if(operation=='add'){
                    $scope.gridOptions.data.push(result);
                    if(result.MeasurementUnitCon.MeasurementUnitConID>0)
                    {
                        $scope.MeasurementUnitCon=result.MeasurementUnitCon;
                        userSession.setData('MeasurementUnitCons',$scope.MeasurementUnitCon);
                        $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                        $scope.gridApi.selection.selectRow($scope.gridOptions.data[0]);
                    }
                }
                else{
                    $scope.gridOptions.data[$scope.index]=result;
                    $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                    $scope.gridApi.selection.selectRow($scope.gridOptions.data[$scope.index]);
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

 });
        MeasurementUnitConModule.controller('ModalInstanceCtrl', function ($scope, $http, $uibModalInstance, msModal, obj) {
        debugger;
        $scope.operation=obj.operation;
        $scope.MeasurementUnitCon=obj.MeasurementUnitCon;

        if(obj.MeasurementUnitConDetail!=null){
            $scope.MeasurementUnitConDetail = obj.MeasurementUnitConDetail;
        }
        else{
            $scope.MeasurementUnitConDetail={
                MeasurementUnitConDetailID : 0,
                MeasurementUnitConID : $scope.MeasurementUnitCon.MeasurementUnitConID,
                ProductID : 0,
                ProductName : '',
                Type : 0,
                MUnitID : 0,
                UnitPrice : 0,
                LotID : 0,
                LotNo : '',
                StapleLength : '',
                BaleQty : 0,
                PartyGrossWeigth : 0,
                PartyPerBalePare : 0,
                ScaleGrossWeigth  : 0,
                ScalePerBalePare : 0,
                PartyTotalBalePare : 0,
                ScaleTotalBalePare : 0,
                PartyNetWeight : 0,
                ScaleNetWeight : 0,
                MeasurementUnitCon:null
            }
        }



    });

</script>


