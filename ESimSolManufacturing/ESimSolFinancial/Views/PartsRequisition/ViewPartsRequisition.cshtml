@{
    ViewBag.Title = "Requisition";
}
@model ESimSol.BusinessObjects.PartsRequisition

<div style="padding-top:5px; width:99.5%" ng-app="PartsRequisitionAPP" class="form-horizontal regionPartsRequisition menuMainCollectionTable">
    <div ng-controller="PartsRequisitionCtrl">
        @*Requisition INFO*@
        <div style="height:22%">  
            <fieldset style="height:100%">
                <legend>Requisition Info: </legend>
                <div class="row col-md-12">
                    <div class="col-md-1 text-right">
                        <label class="control-label">Type :</label>
                    </div>
                    <div class="col-md-6 text-left">
                        <select id="cboPRType" ng-model="PartsRequisition.PRTypeInt" ng-options="obj.id as obj.Value for obj in PRTypes" ng-disabled="disabled" class="form-control">
                            <option value="">--Select Type--</option>
                        </select>
                    </div>
                    @*<div class="col-md-1 text-right"><label class="control-label" ng-model="lblIssueStore">Disburse Store: </label></div>
                    <div class="col-md-3 text-left">
                        <select id="cboIssueStore" ng-model="PartsRequisition.StoreID" ng-change="ChangeStore()" ng-options="obj.WorkingUnitID as obj.OperationUnitName for obj in IssueStores" ng-disabled="disabled" class="form-control">
                            @*<option value="">--Select Store--</option>* @
                        </select>
                    </div>*@
                    <div class="col-md-1 text-right"><label class="control-label">Req. Date:</label></div>
                    <div class="col-md-3 text-left">
                        <div class="input-group date date-container">
                            <input type="text" class="form-control" ng-disabled="disabled" ng-model="PartsRequisition.IssueDateSt">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                        </div>
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="col-md-1 text-right">
                        <label class="control-label">Serivce Order:</label>
                    </div>
                    <div class="col-md-6 text-left">
                        <div class="input-group">
                            <input ng-model="PartsRequisition.ServiceOrderNo" class="form-control" ng-keydown="SearchKeyDownServiceOrder($event)" placeholder="Type Service Order No & Press Enter..." ng-disabled="PartsRequisition.PRTypeInt!=2 || disabled" required />
                            <span class="input-group-btn">
                                <button type="button" class="btn btn-sm" aria-label="left Align" ng-click="ClearVehicleRegistration()" ng-disabled="PartsRequisition.PRTypeInt!=2 || disabled"> <span class="glyphicon glyphicon-trash" aria-hidden="true"></span></button>
                                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PickRegOrOrder()" ng-disabled="PartsRequisition.PRTypeInt!=2 || disabled"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                            </span>
                        </div>
                    </div>
                    <div class="col-md-1 text-right"><label class="control-label">Chassis No/VIN:</label></div>
                    <div class="col-md-3 text-left">
                        <input ng-model="PartsRequisition.ChassisNo" class="form-control" disabled />
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="col-md-1 text-right">
                        <label class="control-label">Registration No:</label>
                    </div>
                    <div class="col-md-6 text-left">
                        <div class="input-group">
                            <input ng-model="PartsRequisition.VehicleRegNo" class="form-control" ng-keydown="SearchKeyDownVehicleRegistration($event)" placeholder="Type Vehicle Reg. No/ VIN & Press Enter..." ng-disabled="PartsRequisition.PRTypeInt!=1 || disabled" required />
                            <span class="input-group-btn">
                                <button type="button" class="btn btn-sm" aria-label="left Align" ng-click="ClearVehicleRegistration()" ng-disabled="PartsRequisition.PRTypeInt!=1 || disabled"> <span class="glyphicon glyphicon-trash" aria-hidden="true"></span></button>
                                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PickRegOrOrder()" ng-disabled="PartsRequisition.PRTypeInt!=1 || disabled"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                            </span>
                        </div>
                    </div>
                    <div class="col-md-1 text-right"><label class="control-label">Engine No:</label></div>
                    <div class="col-md-3 text-left">
                        <input ng-model="PartsRequisition.EngineNo" class="form-control" disabled />
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="col-md-1 text-right"><label class="control-label">Note:</label></div>
                    <div class="col-md-6 text-left">
                        <input ng-model="PartsRequisition.Note" ng-disabled="disabled" class="form-control" />
                    </div>
                    <div class="col-md-1 text-right"><label class="control-label">Req. By:</label></div>
                    <div class="col-md-3 text-left">
                        <input ng-model="PartsRequisition.RequisitionByName" class="form-control" disabled />
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="col-md-1 text-right"><label class="control-label">Remarks:</label></div>
                    <div class="col-md-10 text-left">
                        <input ng-model="PartsRequisition.Remarks" style="width:103%;" ng-disabled="disabled" class="form-control" />
                    </div>
                    
                </div>
            </fieldset>
        </div>

        @*DETAILS TABLE*@ 
        <div style="height:30%; width:97.5%">
            <fieldset style="height:100%">
                <legend>Details : </legend>
                <div class="row ui-grid-panel" >
                    <div class="container col-md-12">
                        <div class="form-inline">
                            <input class="form-control" ng-model="txtProductName" placeholder="Type Parts Name & Press Enter.." ng-disabled="disabled" ng-keydown="SearchKeyDownProduct($event)" style="width:20%; margin-left:5px" required />
                            <button type="button" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="PickProduct(2)" ng-disabled="disabled"><span aria-hidden="true"> Pick </span></button>
                            <button type="button" class="btn btn-danger btn-sm" aria-label="right Align" ng-click="RemoveProduct()" ng-disabled="disabled"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></button>
                            <input class="form-control" ng-model="txtLotNo" ng-keypress="BarCodeKeyPess($event)" placeholder="Type Bar Code & Press Enter.." ng-disabled="disabled" ng-keydown="SearchKeyDownLot($event)" style="width:125px" required />
                            <button type="button" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="PickLot()" ng-disabled="disabled"><span aria-hidden="true"> Pick </span></button>
                            <button type="button" class="btn btn-danger btn-sm" aria-label="right Align" ng-click="RemoveLot()" ng-disabled="disabled"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></button>
                            <select id="cboChargeType" ng-model="cboChargeType" ng-options="obj.id as obj.Value for obj in ChargeTypes" class="form-control">
                                <option value="">--Select Type--</option>
                            </select>
                            <input class="form-control number" ng-model="txtPQty" placeholder="Qty.." ng-disabled="disabled" style="width:60px;" required />      
                            <button type="button" class="btn btn-success btn-sm" aria-label="right Align" ng-click="AddProduct()" ng-disabled="disabled"><span class="glyphicon glyphicon-ok" aria-hidden="true"> Add</span></button>
                            <button type="button" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="RefreshDetail()" ng-disabled="disabled"><span class="glyphicon glyphicon-ok" aria-hidden="true"> Refresh</span></button>
                                              
                            @*<input class="form-control" ng-model="txtOrderNo" placeholder="Type Order & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownOrder($event)" style="width:210px; height:24px;" required />
                            <button type="button" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="PickOrder()" ng-disabled="disabled"><span aria-hidden="true"> Pick </span></button>*@
                            @*<button type="button" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="MakePartsRequisitionDetail()" ng-disabled="disabled"><span aria-hidden="true"> Refresh </span></button>*@
                            <button type="button" class="btn btn-danger btn-sm" aria-label="right Align" ng-click="RemoveDetail()" ng-disabled="disabled"><span aria-hidden="true"> Remove </span></button>
                        </div>
                      </div>
                </div>
                <div class="row col-lg-12">
                    <div ui-grid="gridOptionsPartsRequisitionDetail" ui-grid-selection ui-grid-resize-columns ui-grid-edit ui-grid-row-edit class="grid ui-grid-selectable"></div>
                </div> 
            </fieldset>
        </div>

        <div style="height:10%">
        <fieldset>
            <legend>Action</legend>
            <div class="row col-md-12 text-right">
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Save()" ng-show="hide_Save" > <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Save</span> </button>
                <button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="Revise()" ng-show="hide_Revise"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Revise</span> </button>
                <button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="Disburse()" ng-show="hide_Disburse"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Disburse</span> </button>
                <button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="Approve()" ng-show="hide_Approve"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Approve</span> </button>
                <button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="UndoApprove()" ng-show="hide_UndoApprove"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> UndoApprove</span> </button>
                <button type="button" class="btn btn-sm btn-primary" aria-label=" left align" ng-click="ReqForRevise()" ng-show="hide_ReqForRevise"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Req. For Approve</span> </button>
                <button type="button" class="btn btn-sm btn-danger"  aria-label=" left align" ng-click="Close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
            </div>
        </fieldset>
    </div>
    </div>
</div>

<style type="text/css">

    .grid{
        width:100%; 
        height:230px;
    }
     /*.ui-grid-panel {
        background: linear-gradient(to bottom,#EFF5FF 0,#E0ECFF 100%);
        height:35px;
    }*/
    .regionPartsRequisition .form-horizontal .control-label{
        padding-top:3px;
    }
    .regionPartsRequisition .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .regionPartsRequisition .col-md-12{
        width:100%;
        padding-right:5px;
        padding-left:5px;
        margin-bottom:5px;
    }
     
    .regionPartsRequisition .col-md-1{
        width:12.6%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionPartsRequisition .col-md-2{
        width:16.6%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionPartsRequisition .col-md-3{
        width:20%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionPartsRequisition .col-md-4{
        width:28%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionPartsRequisition .col-md-5{
        width:40%;
        padding-right:5px;
        padding-left:0px;
    }
     .regionPartsRequisition .col-md-6{
        width:52.7%;
        padding-right:5px;
        padding-left:5px;
    }
     .regionPartsRequisition .col-md-10{
        width:83%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionPartsRequisition .col-md-8{
        width:69%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionPartsRequisition .btn-sm{
         padding:3px 10px;
     }
     .regionPartsRequisition .input-group-addon{
         padding: 4px 8px;
     }
</style>

<script type="text/javascript">

    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oPartsRequisition =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oPRTypes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PRTypes));
    var oIssueStores =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Stores));
    var oChargeTypes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ChargeTypes));

    $('.date-container').datepicker({
        format: "dd M yyyy",
        calendarWeeks: true,
        autoclose: true,
        todayHighlight: true
    });

    var PartsRequisitionModule = angular.module('PartsRequisitionAPP', ['ngAnimate', 'ui.bootstrap', 'ui.grid', 'ui.grid.selection', 'ui.grid.edit','ui.grid.resizeColumns','ui.grid.cellNav','ms.service']);
    PartsRequisitionModule.controller('PartsRequisitionCtrl', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal,icsMethod, userSession,msGridControl) {
        debugger;
        var viewType = sessionStorage.getItem("Operation");
        $scope.BUID= parseInt(sessionStorage.getItem("BUID"));

        //if (viewType == 'View') //Default
        $scope.disabled=$scope.hide=$scope.hide_Revise=$scope.hide_Disburse=$scope.hide_Approve=$scope.hide_UndoApprove=$scope.hide_ReqForRevise=$scope.hide_Save=false;

        $scope.viewType=viewType;
        if (viewType == 'Approve')
        {
            $scope.disabled= $scope.hide=true;
            $scope.hide_Approve=true;
        }
        else if(viewType == 'ReqForRevise')
        {
            $scope.disabled= $scope.hide=$scope.hide_ReqForRevise=true;
        }
        else if(viewType == 'UndoApprove')
        {
            $scope.disabled= true;
            $scope.hide=true;
            $scope.hide_UndoApprove=true;
        }
        else  if (viewType == 'Revise')
        {
            $scope.disabled= false;
            $scope.hide=true;
            $scope.hide_Revise=true;
        }else  if (viewType == 'Disburse')
        {
            $scope.disabled= true;
            $scope.hide=true;
            $scope.hide_Disburse=true;
        }
        else if (viewType == 'Edit' || viewType == 'New')
        {
            $scope.hide_Save=true;
        }
        else if (viewType == 'View')
        {
            $scope.disabled= true;
            $scope.hide=true;
        }

        $scope.ChangeStore=function()
        {
            $scope.gridOptionsPartsRequisitionDetail.data=[];
            $scope.RemoveLot();
            $scope.RemoveProduct();
        }

        $scope.IssueStores=oIssueStores;
        $scope.ChargeTypes=oChargeTypes;
        $scope.PRTypes=oPRTypes;
        $scope.PartsRequisition=oPartsRequisition;
        //console.log(oPartsRequisition);
        $scope.PartsRequisition.BUID= parseInt(sessionStorage.getItem("BUID"));
        //Vechile Reg Or Service Order
        $scope.PickRegOrOrder=function()
        {
            if($scope.PartsRequisition.PRTypeInt==undefined ||$scope.PartsRequisition.PRTypeInt<=0)
            {
                alert("Please Select Requisition Type"); return;
            }

            if($scope.PartsRequisition.PRTypeInt==2)
            {
                $scope.PickServiceOrder();
            }
            else
                $scope.PickVehicleRegistration();
        }
        $scope.PickVehicleRegistration= function ()
        {
            debugger;
            var oVehicleModel = {
                VehicleRegNo: $.trim($scope.PartsRequisition.VehicleRegNo)
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/VehicleRegistration/GetsByNo',$.param(oVehicleModel), config).then(
                        function (response)
                        {
                            debugger;
                            var oColumns = [];
                            var oColumn = { field: 'VehicleRegNo', name: 'Registration No',width: '20%'  };oColumns.push(oColumn);
                            oColumn = { field: 'VehicleModelNo', name: 'Model No',width: '20%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'CustomerName', name: 'Customer',width: '20%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'VehicleTypeName', name: 'Type',width: '20%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'ChassisNo', name: 'ChassisNo',width: '20%', enableSorting: false  };oColumns.push(oColumn);
                            var results=jQuery.parseJSON(response.data);
                            var modalObj={
                                size:'lg',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Invoice List',
                                searchingbyfieldName:'RefNo',
                                columns:oColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                debugger;
                                $scope.PartsRequisition.VehicleRegNo=result.VehicleRegNo;
                                $scope.PartsRequisition.VehicleModelNo=result.VehicleModelNo;
                                $scope.PartsRequisition.VehicleRegID=result.VehicleRegistrationID;
                                $scope.PartsRequisition.ChassisNo=result.ChassisNo;
                                $scope.PartsRequisition.EngineNo=result.EngineNo;
                                $scope.PartsRequisition.CustomerID=result.CustomerID;
                                $scope.PartsRequisition.CustomerName=result.CustomerName;
                                //$scope.GetContactPersonel();
                                $scope.PartsRequisition.ContactPersonID=result.ContactPersonID;

                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { debugger; alert(response.statusText);}
                    );

        };
        $scope.PickServiceOrder= function ()
        {
            debugger;
            var oServiceOrder = {
                ServiceOrderNo: $.trim($scope.PartsRequisition.ServiceOrderNo)
            };

            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/ServiceOrder/GetsByRegOrOrderNo',$.param(oServiceOrder), config).then(
                        function (response)
                        {
                            debugger;
                            var oColumns = [];
                            var oColumn = { field: 'ServiceOrderNo', name: 'Order No',width: '15%'  };oColumns.push(oColumn);
                            var oColumn = { field: 'VehicleRegNo', name: 'Reg No',width: '30%'  };oColumns.push(oColumn);
                            oColumn = { field: 'VehicleModelNo', name: 'Model No',width: '15%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'CustomerName', name: 'Customer',width: '37%', enableSorting: false  };oColumns.push(oColumn);
                            var results=jQuery.parseJSON(response.data);
                            var modalObj={
                                size:'lg',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Order List',
                                searchingbyfieldName:'RefNo',
                                columns:oColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                debugger;
                                $scope.PartsRequisition.VehicleRegNo=result.VehicleRegNo;
                                $scope.PartsRequisition.ServiceOrderID=result.ServiceOrderID;
                                $scope.PartsRequisition.ServiceOrderNo=result.ServiceOrderNo;
                                $scope.PartsRequisition.VehicleModelNo=result.VehicleModelNo;
                                $scope.PartsRequisition.VehicleRegID=result.VehicleRegistrationID;
                                $scope.PartsRequisition.ChassisNo=result.ChassisNo;
                                $scope.PartsRequisition.EngineNo=result.EngineNo;
                                $scope.PartsRequisition.CustomerID=result.CustomerID;
                                $scope.PartsRequisition.ContactPersonID=result.ContactPersonID;
                                $scope.PartsRequisition.CustomerName=result.CustomerName;
                                $scope.PartsRequisition.KilometerReading=result.KilometerReading;
                                $scope.GetContactPersonel();
                                $scope.PartsRequisition.ContactPersonID=result.ContactPersonID;

                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(response.statusText);}
                    );

        };
        $scope.SearchKeyDownVehicleRegistration = function (e) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var RefNo = $.trim($scope.PartsRequisition.VehicleRegNo);
                if(RefNo=="" || RefNo==null)
                {
                    alert("Type Registration/Model No OR VIN and Press Enter");
                    return;
                }
                $scope.PickRegOrOrder();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.PartsRequisition.RefNo='';
                $scope.PartsRequisition.VehicleRefID=0;
                // GetVehicleRefImage(0);//Get Model Image
            }
        };
        $scope.SearchKeyDownServiceOrder = function (e) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var RefNo = $.trim($scope.PartsRequisition.ServiceOrderNo);
                if(RefNo=="" || RefNo==null)
                {
                    alert("Type Registration/Service Order No and Press Enter");
                    return;
                }
                $scope.PickServiceOrder();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.ClearVehicleRegistration();
                // GetVehicleRefImage(0);//Get Model Image
            }
        };
        $scope.ClearVehicleRegistration= function ()
        {
            $scope.PartsRequisition.VehicleRegNo="";
            $scope.PartsRequisition.ServiceOrderNo="";
            $scope.PartsRequisition.ModelNo="";
            $scope.PartsRequisition.VehicleIInvoiceID=0;
            $scope.PartsRequisition.ChassisNo="";
            $scope.PartsRequisition.EngineNo="";
            $scope.PartsRequisition.InteriorColorName="";
            $scope.PartsRequisition.ExteriorColorName="";
            $scope.PartsRequisition.CurrencyID="";
            $scope.PartsRequisition.ETAValueWithTypeSt="";
            $scope.PartsRequisition.PossibleDateSt="";
            $scope.PartsRequisition.Remarks="";
            $scope.PartsRequisition.Note="";
            $scope.PartsRequisition.ServiceSetupName="";
            $scope.gridOptionsPartsRequisitionDetail.data=[];
        }

        //Detail Object
        $scope.RefreshDetail=function()
        {
            $scope.PartsRequisitionDetail=new Object();
            $scope.PartsRequisitionDetail.LotID=0;
            $scope.PartsRequisitionDetail.LotNo="";
            $scope.PartsRequisitionDetail.ProductID=0;
            $scope.PartsRequisitionDetail.ProductName="";
            $scope.PartsRequisitionDetail.ProductCode="";
            $scope.PartsRequisitionDetail.Quantity=0;
            $scope.PartsRequisitionDetail.UnitPrice=0;
            $scope.PartsRequisitionDetail.ChargeType=0;
            $scope.txtLotNo='';
            $scope.txtProductName='';
            $scope.txtPorductNo='';
            $scope.txtPQty='';
        }
        $scope.RefreshDetail();
        //$scope.PartsRequisitionDetail=new Object();
        //$scope.PartsRequisitionDetail.LotID=0;
        //$scope.PartsRequisitionDetail.LotNo="";
        //$scope.PartsRequisitionDetail.ProductID=0;
        //$scope.PartsRequisitionDetail.ProductName="";
        //$scope.PartsRequisitionDetail.ProductCode="";
        //$scope.PartsRequisitionDetail.Quantity=0;
        //$scope.PartsRequisitionDetail.UnitPrice=0;

        $scope.BarCodeKeyPess=function(e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if($scope.txtLotNo.length>=5)
            {
                $scope.GetLotProduct();
            }
        }
        //PickLot
        $scope.PickLot= function ()
        {
            if($scope.PartsRequisitionDetail.ProductID<=0)
            {
                alert("Please Pick a Product And Try Again"); return;
            }
            //if($scope.PartsRequisition.StoreID<=0)
            //{
            //    alert("Please Select A Store And Try Again!");
            //    return;
            //}
            /*
             var oLot = { BUID : nBUID, ProductID : parseInt(oProduct.ProductID), WorkingUnitID : nStoreID, LotNo : sLotNo, StyleID : nStyleID };
            */
            var oDyeingPorduct= {
                ProductID:$scope.PartsRequisitionDetail.ProductID,
                BUID:$scope.BUID,
                LotNo:($scope.txtLotNo == undefined ? "" : $scope.txtLotNo)
                //WorkingUnitID:$scope.PartsRequisition.StoreID
            };
            $scope.txtLotNo ="";
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/PartsRequisition/SearchLots',$.param(oDyeingPorduct), config).then(
                        function (response)
                        {
                            debugger;
                            var oDetailColumns = [];
                            var oColumn = { field: 'LotNo', name:'Lot No', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn ={ field: 'Balance', name:'Qty', width:'15%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn ={ field: 'ReportUnitSymbol', name:'Unit', width:'15%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'WorkingUnitName', name:'Store', width:'25%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'ShelfWithRackNo', name:'Rack', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);

                            var results=jQuery.parseJSON(response.data);
                            if(results.length<=0)
                            {
                                alert("No Data Found!!"); return;
                            }else if(results[0].ErrorMessage!='')
                            {
                                alert(results[0].ErrorMessage); return;
                            }

                            var modalObj={
                                size:'lg',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Porduct List',
                                searchingbyfieldName:'DestinationLotNo',
                                columns:oDetailColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                if(result.LotID>0)
                                {
                                    $scope.PartsRequisitionDetail.LotID=result.LotID;
                                    $scope.PartsRequisitionDetail.LotNo=result.LotNo;
                                    $scope.txtLotNo=result.LotNo;
                                    $scope.PartsRequisitionDetail.WorkingUnitID=result.WorkingUnitID;
                                    $scope.PartsRequisitionDetail.WorkingUnitName=result.WorkingUnitName;
                                }
                                else
                                {
                                    $scope.PartsRequisitionDetail.LotID=0;
                                    $scope.PartsRequisitionDetail.LotNo="";
                                    $scope.txtLotNo="";
                                    $scope.PartsRequisitionDetail.WorkingUnitID=0;
                                    $scope.PartsRequisitionDetail.WorkingUnitName="";
                                }
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );
        //PickLot
        };
        $scope.SearchKeyDownLot = function (e){
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtLotNo = $.trim($scope.txtLotNo);
                if(txtLotNo=="" || txtLotNo==null)
                {
                    alert("Type Lot No and Press Enter");
                    return;
                }
                $scope.PickLot();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtPorductNo='';
            }
        };
        $scope.GetLotProduct= function ()
        {
            if($scope.PartsRequisitionDetail.ProductID>0)
            {
               return;
            }
            //if($scope.PartsRequisition.StoreID<=0)
            //{
            //    alert("Please Select A Store And Try Again!");
            //    return;
            //}
            /*
             var oLot = { BUID : nBUID, ProductID : parseInt(oProduct.ProductID), WorkingUnitID : nStoreID, LotNo : sLotNo, StyleID : nStyleID };
            */
            var oDyeingPorduct= {
                ProductID:0,
                BUID:$scope.BUID,
                LotNo:($scope.txtLotNo == undefined ? "" : $scope.txtLotNo)
                //WorkingUnitID:$scope.PartsRequisition.StoreID
            };
            $scope.RemoveLot();
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/PartsRequisition/GetLotByNo',$.param(oDyeingPorduct), config).then(
                        function (response)
                        {
                            debugger;
                            var result=jQuery.parseJSON(response.data);
                            if(result==null)
                            {
                                alert("No Lot Found!!"); return;
                            }
                            if(result.LotID>0 && result.ErrorMessage=='')
                            {
                                $scope.PartsRequisitionDetail.LotID=result.LotID;
                                $scope.PartsRequisitionDetail.LotNo=result.LotNo;
                                $scope.txtLotNo=result.LotNo;
                                $scope.PartsRequisitionDetail.ProductID=result.ProductID;
                                $scope.txtProductName=result.ProductName;
                                $scope.PartsRequisitionDetail.ProductCode=result.ProductCode;
                                $scope.PartsRequisitionDetail.ProductName=result.ProductName;
                                $scope.PartsRequisitionDetail.UnitName=result.MUName;
                                $scope.PartsRequisitionDetail.UnitID=result.MUnitID;
                                $scope.PartsRequisitionDetail.Quantity=1;
                                $scope.txtPQty=1;
                                $scope.AddProduct();
                            }else
                            {
                                alert (result.ErrorMessage);
                            }
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );
            //PickLot
        };
        $scope.RemoveLot=function()
        {
            $scope.PartsRequisitionDetail.LotID=0;
            $scope.PartsRequisitionDetail.LotNo="";
            $scope.txtLotNo="";
        }
        //Product
        $scope.PickProduct= function (ntype)
        {
            $scope.RemoveLot(); debugger;
            var oPorduct= {
                ProductName:($scope.txtProductName == undefined ? "" : $scope.txtProductName),
                BUID:$scope.BUID
            };
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };

            var url='/PartsRequisition/SearchProducts';
            //if($scope.PartsRequisition.PRTypeInt==2 && ntype==2)
            //{
            //    if($scope.PartsRequisition.ServiceOrderID<=0)
            //    {
            //        alert("Please Select an Order And Try again."); return;
            //    }

            //    url='/ServiceOrder/GetServiceOrderDetailsByOrderID';
            //    oPorduct= {
            //        ServiceOrderID:$scope.PartsRequisition.ServiceOrderID,
            //        BUID:$scope.BUID
            //    };
            //}

            $http.post(sessionStorage.getItem('BaseAddress')+url,$.param(oPorduct), config).then(
                        function (response)
                        {
                            var oDetailColumns = [];
                            var   oColumn = { field: 'ProductCode', name:'Part No', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'ProductName', name:'Porduct', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'ProductCategoryName', name:'Category', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);

                            var results=jQuery.parseJSON(response.data);
                            if(results==null)
                                results=response.data;

                            if(results.length<=0)
                            {
                                alert("No Data Found!!"); return;
                            }else if(results[0].ErrorMessage!='')
                            {
                                alert(results[0].ErrorMessage); return;
                            }
                            console.log(results);
                            var modalObj={
                                size:'md',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Porduct List',
                                searchingbyfieldName:'DestinationLotNo',
                                columns:oDetailColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                if(result.ProductID>0)
                                {
                                    $scope.PartsRequisitionDetail.ProductID=result.ProductID;
                                    $scope.txtProductName=result.ProductName;
                                    $scope.PartsRequisitionDetail.ProductCode=result.ProductCode;
                                    $scope.PartsRequisitionDetail.ProductName=result.ProductName;
                                    $scope.PartsRequisitionDetail.UnitName=result.MUnit;
                                    $scope.PartsRequisitionDetail.UnitID=result.MeasurementUnitID;
                                }
                                else
                                {
                                    $scope.PartsRequisitionDetail.ProductID=0;
                                    $scope.PartsRequisitionDetail.ProductName="";
                                    $scope.PartsRequisitionDetail.UnitName="";
                                    $scope.PartsRequisitionDetail.txtProductName="";
                                    $scope.PartsRequisitionDetail.UnitID==0;
                                }
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert((response.data).Message);}
                    );
        };
        $scope.SearchKeyDownProduct = function (e){
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtPorduct = $.trim($scope.txtProductName);
                if(txtPorduct=="" || txtPorduct==null)
                {
                    alert("Type Product Name and Press Enter");
                    return;
                }

                $scope.PickProduct();
            }else if (code == 8) //backspace=8
            {
                //debugger;
               $scope.PartsRequisitionDetail.ProductID=0;
               $scope.PartsRequisitionDetail.ProductName="";
               $scope.PartsRequisitionDetail.ProductCode="";
               $scope.PartsRequisitionDetail.UnitName="";
               $scope.PartsRequisitionDetail.txtProductName="";
               $scope.PartsRequisitionDetail.UnitID==0;
            }
        };
        $scope.RemoveProduct=function()
        {
            $scope.PartsRequisitionDetail.ProductID=0;
            $scope.PartsRequisitionDetail.ProductName="";
            $scope.PartsRequisitionDetail.ProductCode="";
            $scope.PartsRequisitionDetail.UnitName="";
            $scope.PartsRequisitionDetail.txtProductName="";
            $scope.PartsRequisitionDetail.UnitID==0;
        }
        //Add Detail
        $scope.AddProduct= function ()
        {
            debugger;
            var oDetails = $scope.gridOptionsPartsRequisitionDetail.data;
            //var data=$scope.gridApi.selection.getSelectedRows();
            if($scope.PartsRequisitionDetail.ProductID<=0)
            {
                alert("Please, Pick A Part!!");
                return;
            }
            if($scope.PartsRequisitionDetail.LotID<=0)
            {
                alert("Please, Pick A Lot!!");
                return;
            }
            if($scope.cboChargeType == 0)
            {
                alert("Please Select a Charge Type !!");
                return;
            }
            debugger;

            var isNotExist=true;
            if(oDetails!=null && oDetails.length>0)
            {
                for(var i=0; i<oDetails.length;i++)
                {
                    if(oDetails[i].ProductID==$scope.PartsRequisitionDetail.ProductID && oDetails[i].LotID==$scope.PartsRequisitionDetail.LotID)
                    {
                        isNotExist=false;
                        $scope.gridOptionsPartsRequisitionDetail.data[i].Quantity=parseFloat($scope.gridOptionsPartsRequisitionDetail.data[i].Quantity)+ parseFloat($scope.txtPQty);
                    }
                }
            }
            if(isNotExist)
            {
                $scope.PartsRequisitionDetail.Quantity=parseFloat($scope.txtPQty);
                $scope.PartsRequisitionDetail.ChargeType = parseFloat($scope.cboChargeType);
                $scope.PartsRequisitionDetail.ChargeTypeSt = $("#cboChargeType option:selected").text(),
                $scope.gridOptionsPartsRequisitionDetail.data.push($scope.PartsRequisitionDetail);
            }

            $scope.RefreshDetail();
            $scope.cboChargeType = 0;
        }
        $scope.RemoveDetail= function ()
        {
            var oDetail = $scope.gridDetailApi.selection.getSelectedRows()[0];
            //var data=$scope.gridApi.selection.getSelectedRows();
            if(oDetail==null)
            {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex=$scope.gridOptionsPartsRequisitionDetail.data.indexOf(oDetail);
            if (!confirm("Confirm to Remove?")) return ;
            $scope.gridOptionsPartsRequisitionDetail.data.splice(SelectedRowIndex,1);
        }
        $scope.Validation = function()
        {
            debugger;

            if($scope.PartsRequisition.PRTypeInt<=0)
            {
                alert("Please Select Requisition Type And Try Again.");
                angular.element('#cboPRType').trigger('focus');
                return false;
            }
            //if($scope.PartsRequisition.StoreID<=0)
            //{
            //    alert("Please Select Disburse Store And Try Again.");
            //    angular.element('#cboIssueStore').trigger('focus');
            //    return false;
            //}

            if($scope.gridOptionsPartsRequisitionDetail.data.length<=0)
            {
                alert("Please Select Details And Try Again.");
                return false;
            }

            return true;
        }
        $scope.Save = function () {

            if(!$scope.Validation()) return;
            var oPartsRequisition= $scope.PartsRequisition;
            oPartsRequisition.IssueDate = new Date($scope.PartsRequisition.IssueDateSt);
            oPartsRequisition.PartsRequisitionDetails=$scope.gridOptionsPartsRequisitionDetail.data;
            oPartsRequisition.PRType=$scope.PartsRequisition.PRTypeInt;

            debugger;
            $http.post(_sBaseAddress+'/PartsRequisition/Save',JSON.stringify(oPartsRequisition)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    if(result.PartsRequisitionID>0 && result.ErrorMessage=="")
                    {
                        debugger;
                        alert("Data Saved Successfully!!");
                        $scope.PartsRequisition=result;
                        userSession.setData('PartsRequisitions',$scope.PartsRequisition);
                        userSession.previousPage();
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        );
        };

        $scope.Approve = function () {
            if (!confirm("Confirm to Approve?")) return false;
            if(!$scope.Validation())
                return;

            var oPartsRequisition= $scope.PartsRequisition;
            oPartsRequisition.IssueDate = new Date($scope.PartsRequisition.IssueDateSt);
            oPartsRequisition.ImportLCDate = new Date($scope.PartsRequisition.ImportLCDateST);
            oPartsRequisition.ActionTypeExtra = "Approve";
            oPartsRequisition.ConsumptionRequisitionStatusInInt = 2;

            debugger;
            $http.post(_sBaseAddress+'/PartsRequisition/ChangeStatus',JSON.stringify(oPartsRequisition)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    if(result.PartsRequisitionID>0)
                    {
                        debugger;
                        alert("Approve Successfully!!");
                        $scope.PartsRequisition=result;
                        userSession.setData('PartsRequisitions',$scope.PartsRequisition);
                        userSession.previousPage();
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        );
        };
        $scope.UndoApprove = function () {

            if(!$scope.Validation())
                return;
            var oPartsRequisition= $scope.PartsRequisition;
            oPartsRequisition.IssueDate = new Date($scope.PartsRequisition.IssueDateSt);
            oPartsRequisition.ImportLCDate = new Date($scope.PartsRequisition.ImportLCDateST);

            debugger;
            $http.post(_sBaseAddress+'/PartsRequisition/UndoApprovePartsRequisition',JSON.stringify(oPartsRequisition)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    if(result.PartsRequisitionID>0)
                    {
                        debugger;
                        $scope.PartsRequisition=result;
                        userSession.setData('PartsRequisitions',$scope.PartsRequisition);
                        userSession.previousPage();
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        );
        };
        $scope.Revise = function ()
        {

            if(!$scope.Validation())
                return;

            if (!confirm("Confirm to Revise?")) return false;

            var oPartsRequisition= $scope.PartsRequisition;
            oPartsRequisition.IssueDate = new Date($scope.PartsRequisition.IssueDateSt);
            oPartsRequisition.ImportLCDate = new Date($scope.PartsRequisition.ImportLCDateST);

            debugger;
            $http.post(_sBaseAddress+'/PartsRequisition/AcceptPRRevise',JSON.stringify(oPartsRequisition)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    if(result.PartsRequisitionID>0)
                    {
                        debugger;
                        alert("Revise Successfully!!");
                        $scope.PartsRequisition=result;
                        userSession.setData('PartsRequisitions',$scope.PartsRequisition);
                        //sessionStorage.setItem('PartsRequisition',$scope.PartsRequisition);
                        userSession.previousPage();
                        // msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(response.statusText);}
        );
        };
        $scope.Disburse = function () {
            if(!$scope.Validation())
                return;
            if (!confirm("Confirm to Disburse?")) return false;

            var oPartsRequisition= $scope.PartsRequisition;
            oPartsRequisition.IssueDate = new Date($scope.PartsRequisition.IssueDateSt);
            oPartsRequisition.ImportLCDate = new Date($scope.PartsRequisition.ImportLCDateST);
            oPartsRequisition.ActionTypeExtra = "Disburse";
            debugger;
            $http.post(_sBaseAddress+'/PartsRequisition/ChangeStatus',JSON.stringify(oPartsRequisition)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    if(result.PartsRequisitionID>0 && result.ErrorMessage=='')
                    {
                        debugger;
                        alert("Disburse Successfully!!");
                        $scope.PartsRequisition=result;
                        userSession.setData('PartsRequisitions',$scope.PartsRequisition);
                        //sessionStorage.setItem('PartsRequisition',$scope.PartsRequisition);
                        userSession.previousPage();
                        // msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        );
        };

        $scope.MakePartsRequisitionDetail= function()
        {
            debugger;
            var oDetailColumns = [];
            var oColumn = { field: 'ProductCode', name:'Part No', width:'10%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn = { field: 'ProductName', name:'Part Name', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn = { field: 'LotNo', name:'Bar Code/Parts No', width:'15%',cellClass: 'text-left', enableCellEdit:false, };oDetailColumns.push(oColumn);
            oColumn = { field: 'ChargeTypeSt', name:'Charge Type', width:'15%',cellClass: 'text-left', enableCellEdit:false, };oDetailColumns.push(oColumn);
            oColumn = { field: 'WorkingUnitName', name:'Store', width:'15%',cellClass: 'text-left', enableCellEdit:false, };oDetailColumns.push(oColumn);
            oColumn ={ field: 'UnitName', name:'M. Unit', width:'10%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn ={ field: 'Quantity', name:'Qty', width:'15%',cellClass: 'text-right',aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right',enableCellEdit:true };oDetailColumns.push(oColumn);

            $scope.gridOptionsPartsRequisitionDetail = {
                enableRowSelection: true,
                enableRowHeaderSelection: false,
                multiSelect: false,
                enableColumnResizing: true,
                showColumnFooter: false,
                cellEditableCondition: function($scope)
                {
                    //if (viewType == 'Edit' || viewType == 'New')
                    //{
                    //    if($scope.row.entity.Qty<0 ||$scope.row.entity.Qty==undefined)
                    //        return false;
                    //    else
                    //    {
                    //        if($scope.row.entity.OrderQty==undefined)
                    //            $scope.row.entity.OrderQty=$scope.row.entity.Qty;
                    //        return true;
                    //    }
                    //}else
                    //    return false;
                    return true;
                },
                columnDefs:oDetailColumns,
                data:  $scope.PartsRequisition.PartsRequisitionDetails,
                onRegisterApi: function (gridApi)
                {
                    $scope.gridDetailApi = gridApi;

                    gridApi.edit.on.afterCellEdit($scope,
                     function (rowEntity, colDef, newValue, oldValue)
                     {
                         debugger;
                         rowEntity.Amount=rowEntity.Qty*rowEntity.UnitPrice;
                         //if(rowEntity.Qty > rowEntity.OrderQty)
                         //{
                         //    rowEntity.Qty=rowEntity.OrderQty;
                         //    alert("Requ. Qty Can Not Be Greater Than Order Qty!!");
                         //}
                         //else if(rowEntity.Qty<=0 )
                         //{
                         //    rowEntity.Qty=rowEntity.OrderQty;
                         //    alert("Requ. Qty Can Not Be Equal Or Less Then Zero!!");
                         //}
                         return rowEntity;
                     });
                }
            };

        }
        $scope.MakePartsRequisitionDetail();

        $scope.Close = function () {
            userSession.previousPage();
        };

    });
</script>


