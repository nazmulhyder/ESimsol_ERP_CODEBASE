@{
    ViewBag.Title = "Sales Statement";
}
@model IEnumerable <ESimSol.BusinessObjects.SalesStatement>

<div ng-app="SalesStatementApp" ng-controller="SalesStatementCntrl as MLCC">
    <section>
        <ul class="nav nav-tabs" style="background:#d6dbdf; color:white;">
            @*<li ng-class="{active:MLCC.IsSet(1)}">
                <a href="" ng-click="MLCC.SetTab(1)" style="color:black;">Unit Information</a>
            </li>*@
            <li ng-class="{active:MLCC.IsSet(2)}">
                <a href="" ng-click="MLCC.SetTab(2)" style="color:black;">Export  Status</a>
            </li>
            <li ng-class="{active:MLCC.IsSet(4)}">
                <a href="" ng-click="MLCC.SetTab(4)" style="color:black;">Maturity Bill</a>
            </li>
            <li ng-class="{active:MLCC.IsSet(3)}">
                <a href="" ng-click="MLCC.SetTab(3)" style="color:black;">Payment Receive</a>
            </li>
        </ul>

        @*<div ng-if="MLCC.IsSet(1)">
            <div class="col-md-12">
                <div class="form-inline">
                    <select style="" class="form-control" ng-model="cboBusinessUnit" ng-options="item.BusinessUnitID as item.ShortName for item in BusinessUnits" ng-disabled="cboDisabled">
                        <option value="">--Select Unit--</option>
                    </select>
                    <select style="" class="form-control" ng-model="cboDate" ng-change="DateChange()" ng-options="item.id as item.Value for item in CompareOperators"></select>
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-init="initializeDatepicker()" style="width:100px" ng-model="dtStart"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                    </div>
                    <span>to</span>
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-init="initializeDatepicker()" style="width:100px" ng-model="dtEnd" ng-disabled="EndDateDisabled"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                    </div>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Refresh(1)"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Refresh</button>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="print()" ng-hide="hide"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Print</button>

                </div>
                <div ui-grid="gridOptions1" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
            </div>
        </div>*@
        <div ng-if="MLCC.IsSet(2)">
            <div class="col-md-12">
                <div class="form-inline">
                    <select style="" class="form-control" ng-model="cboBusinessUnit" ng-options="item.BusinessUnitID as item.ShortName for item in BusinessUnits" ng-disabled="cboDisabled">
                        <option value="">--Select Unit--</option>
                    </select>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Refresh(2)"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Refresh</button>
                    
                    <select style="" class="form-control" ng-model="cboDate" ng-change="DateChange()" ng-options="item.id as item.Value for item in CompareOperators"></select>
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-init="initializeDatepicker()" style="width:100px" ng-model="dtStart"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                    </div>
                    <span>to</span>
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-init="initializeDatepicker()" style="width:100px" ng-model="dtEnd" ng-disabled="EndDateDisabled"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                    </div>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="print()" ng-hide="hide"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Print</button>

                    <select style="width:16%; " class="form-control" ng-model="cboReportType" ng-options="item.id as item.Value for item in States">
                        <option value="">--Select Report Type--</option>
                    </select>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="ExportToExcel()"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> Export To Excel</button>

                </div>
                <div ui-grid="gridOptions2" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
            </div>
        </div>
        <div ng-if="MLCC.IsSet(4)">
            <div class="col-md-12">
                <div class="form-inline">
                    <select style="" class="form-control" ng-model="cboBusinessUnit" ng-options="item.BusinessUnitID as item.ShortName for item in BusinessUnits" ng-disabled="cboDisabled">
                        <option value="">--Select Unit--</option>
                    </select>
                    <select style="" class="form-control" ng-model="cboDate" ng-change="DateChange()" ng-options="item.id as item.Value for item in CompareOperators"></select>
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-init="initializeDatepicker()" style="width:100px" ng-model="dtStart"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                    </div>
                    <span>to</span>
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-init="initializeDatepicker()" style="width:100px" ng-model="dtEnd" ng-disabled="EndDateDisabled"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                    </div>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Refresh(4)"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Refresh</button>

                </div>
                <div ui-grid="gridOptions4" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
            </div>
        </div>
        <div ng-if="MLCC.IsSet(3)">
            <div class="col-md-12">
                <div class="form-inline">
                    <select style="" class="form-control" ng-model="cboBusinessUnit" ng-options="item.BusinessUnitID as item.ShortName for item in BusinessUnits" ng-disabled="cboDisabled">
                        <option value="">--Select BusinessUnit--</option>
                    </select>
                    <select style="" class="form-control" ng-model="cboDate" ng-change="DateChange()" ng-options="item.id as item.Value for item in CompareOperators"></select>
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-init="initializeDatepicker()" style="width:100px" ng-model="dtStart"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                    </div>
                    <span>to</span>
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-init="initializeDatepicker()" style="width:100px" ng-model="dtEnd" ng-disabled="EndDateDisabled"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                    </div>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Refresh(3)"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Refresh</button>
                    
                </div>
                <div ui-grid="gridOptions3" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
            </div>
        </div>
</section>
</div>


<style>
    .form-control {
        height: 26px;
        padding: 0px 6px;
        font-size: 12px;
    }

    .ui-grid-top-panel .btn-sm, .input-group-addon {
        padding: 3px 10px;
    }

    .grid {
        height: 480px;
        width: 100%;
    }

    .custom-pagination {
        margin-top: -15px;
        margin-bottom: -15px;
    }

    .spacing {
        padding-bottom: 5px;
    }
   .ui-grid-cell.lightGrey {
           background-color: #B5DA69 !important ;  /*DCDCDC*/
           color: #000 !important;
            font-size:12px;
            font-weight:bold;
        }
   .ui-grid-cell.lightGreen {
        background-color:  #B5DA69!important ;  /*90EE90*/ /*8ab92d*/
        color: #000 !important;
        font-size:12px;
        font-weight:bold;
    }
   .ui-grid-cell.Color1 {
        background-color: #b3cefc !important ;  /*DCDCDC*/
        color: #000 !important;
        font-size:12px;
        font-weight:bold;
    }
   .ui-grid-cell.Color2 {
        background-color: #B5DA69 !important ;  /*DCDCDC*/
        color: #000 !important;
        font-size:12px;
        font-weight:bold;
    }
   .ui-grid-cell.Color3 {
        background-color:  #C5BE97!important ;  /*90EE90*/ /*8ab92d*/
        color: #000 !important;
        font-size:12px;
        font-weight:bold;
    }
    
   .my-button {
            /*padding-top:-15px;*/
            background:#B5DA69;
            display: none;
            position: relative;

        }
   .ui-grid-cell:hover .my-button {
            display: block;
            padding-top:-5px;
            width: 95%;
            background-color: #555;
            color: #fff;
            text-align: center;
            border-radius: 6px;
            /*padding: 5px 0;*/
            position: static;
            z-index: 1;
            /*bottom: 2%;
            left: 1%;*/
            /*margin-top: 5px;*/
            opacity: 10;
            transition: opacity 2s;
            overflow:visible;
            visibility:visible;
            font-size:8px;
            cursor:pointer;
        }
</style>

<script>
    debugger;
    var customizedCompareoperator = [];
    var BusinessUnitCustom = [];
    var _nBUID = 0;
    var _sBaseAddress = @Html.Raw(Json.Encode(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oCompareoperators =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    var oBusinessUnits =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
    var oBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Buid));
    var oSalesStatements = @Html.Raw(Json.Encode(Model));

    var SalesStatementApp = angular.module('SalesStatementApp',['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.resizeColumns','ui.grid.selection','ms.service']);
    SalesStatementApp.controller('SalesStatementCntrl', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession,icsMethod) {

        var v = 0;
        for(var i = 0 ; i < oBusinessUnits.length; i++) {
            if(oBusinessUnits[i].BusinessUnitID == oBUID) {
                BusinessUnitCustom[v] = oBusinessUnits[i];
                $scope.cboBusinessUnit = BusinessUnitCustom[v].BusinessUnitID;
                _nBUID = BusinessUnitCustom[v].BusinessUnitID;
                $scope.cboDisabled = true;
                break;
            }
        }

        var c = 0;
        for(var i = 0; i < oCompareoperators.length; i++) 
        {
            if(i == 0 || i == 1 || i == 5) {
                customizedCompareoperator[c] =oCompareoperators[i];
                c++;
            }
        }
        
        
        debugger;
        //var SearchStr = sessionStorage.getItem('SearchStr_Detail');
        oSalesStatements=(sessionStorage.getItem("SalesStatement")==null? oSalesStatements : JSON.parse(sessionStorage.getItem("SalesStatement")));
        $scope.BusinessUnits = oBusinessUnits;
        $scope.States= [
            {id:'0',Value:'BO In Hand'},     
            {id:'1',Value:'BO In Customer'}, 
            {id:'2',Value:'Accepted Bill'},
            {id:'3',Value:'Negotiation Transit'}, 
            {id:'4',Value:'Negotiated Bill'},
            {id:'51',Value:'Amount'},     
            {id:'52',Value:'Amount O Deu'}, 
        ];

        //$scope.gridOptions1 ={
        //    enableRowHeaderSelection: false,
        //    enableRowSelection: true,
        //    enableFullRowSelection: true,
        //    multiSelect: false,
        //    enableColumnResizing: true,
        //    showColumnFooter: true,
        //    noUnselect : true,
        //    enableGridMenu: true,
        //    rowHeight:45,
        //    columnDefs: [

        //       { field: 'Name', name: 'Criteria', width:'18%', enableCellEdit: false ,cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass1(row.entity,' text-left',col); },
        //       cellTemplate:  '<div ng-dblclick="grid.appScope.ShowDetail_Cell(row.entity,1)">{{row.entity.Name}} <span class="my-button">Double Click To View Details </span></div>' 
        //       },
        //       { field: 'Count', name: 'Count', width:'8%', enableCellEdit: false,
        //       cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass1(row.entity,' text-right',col); }, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
        //       { field: 'Qty', name: 'Qty', width:'12%', enableCellEdit: false
        //       ,cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass1(row.entity,' text-right',col); }, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
        //       { field: 'Amount', name: 'Amount', width:'12%', enableCellEdit: false
        //       ,cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass1(row.entity,' text-right',col); }, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
               
        //       { field: 'Name_R', name: '-Criteria', width:'18%', enableCellEdit: false ,cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass1(row.entity,' text-left',col); },
        //       cellTemplate:  '<div ng-dblclick="grid.appScope.ShowDetail_Cell(row.entity,2)">{{row.entity.Name_R}} <span class="my-button">Double Click To View Details </span></div>' 
        //       },
        //       { field: 'Count_R', name: '-Count', width:'8%', enableCellEdit: false,
        //       cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass1(row.entity,' text-right',col); }, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
        //       { field: 'Qty_R', name: '-Qty', width:'12%', enableCellEdit: false
        //       ,cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass1(row.entity,' text-right',col); }, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
        //       { field: 'Amount_R', name: '-Amount', width:'12%', enableCellEdit: false
        //       ,cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass1(row.entity,' text-right',col); }, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
               
               
        //       { field: 'Name_Y', name: 'Criteria-', width:'18%', enableCellEdit: false ,cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass1(row.entity,' text-left',col); },
        //       cellTemplate:  '<div ng-dblclick="grid.appScope.ShowDetail_Cell(row.entity,3)">{{row.entity.Name_Y}} <span class="my-button">Double Click To View Details </span></div>' 
        //       },
        //       { field: 'Count_Y', name: 'Count-', width:'8%', enableCellEdit: false,
        //       cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass1(row.entity,' text-right',col); }, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
        //       { field: 'Qty_Y', name: 'Qty-', width:'12%', enableCellEdit: false
        //       ,cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass1(row.entity,' text-right',col); }, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
        //       { field: 'Amount_Y', name: 'Amount-', width:'12%', enableCellEdit: false
        //       ,cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass1(row.entity,' text-right',col); }, 
        //       cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
               
        //    ],
        //    data:oSalesStatements,
        //    onRegisterApi:function(gridApri) {
        //        $scope.gridApi1 = gridApri;
        //    }
        //};

        $scope.gridOptions2 ={
            enableRowHeaderSelection: false,
            enableRowSelection: true,
            enableFullRowSelection: true,
            multiSelect: false,
            enableColumnResizing: true,
            showColumnFooter: true,
            noUnselect : true,
            rowHeight:50,
            enableGridMenu: true,
            columnDefs: [
                //BOinHand =0,BOInCusHand=1,AcceptadBill=2,NegoTransit =3,NegotiatedBill=4 ,Discounted =(7,12),PaymentDone =10,BFDDRecd=6
               {    field: 'BUName', name: 'Unit', width:'12%', enableCellEdit: false,
                   cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-left',true); },
               },
               { field: 'BankName', name: 'Bank', width:'12%', enableCellEdit: false,cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-left ',true); } },
               { field: 'Amount_LC', name: 'L/C in Hand', width:'12%', enableCellEdit: false, cellFilter:'number: 2',
               cellTemplate:  '<div style="padding-top:10px;" ng-dblclick="grid.appScope.ShowDetail_LCDetails(row.entity)">{{row.entity.Amount_LC | number:2}}<span class="my-button">Double Click To View Details </span></div>' 
                ,cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-right ',true); } 
               },
                
               { field: 'BOinHand', name: 'BOEinHand', width:'12%', enableCellEdit: false,
               cellTemplate:  '<div style="padding-top:10px;" ng-dblclick="grid.appScope.ShowDetail_State(row.entity,0)">{{row.entity.BOinHand | number:2}}<span class="my-button">Double Click To View Details </span></div>' 
                 , cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-right',true); }
               },
               { field: 'BOInCusHand', name: 'BOInCusHand', width:'12%', enableCellEdit: false,
               cellTemplate:  '<div style="padding-top:10px;" ng-dblclick="grid.appScope.ShowDetail_State(row.entity,1)">{{row.entity.BOInCusHand | number:2}} <span class="my-button">Double Click To View Details </span></div>' 
               , cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-right',true); }
               },
               { field: 'AcceptadBill', name: 'AcceptadBill', width:'12%', enableCellEdit: false,
               cellTemplate:  '<div style="padding-top:10px;" ng-dblclick="grid.appScope.ShowDetail_State(row.entity,2)">{{row.entity.AcceptadBill | number:2}} <span class="my-button">Double Click To View Details </span></div>' 
               , cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-right',true); }
               },
                { field: 'Amount_LCtoBill', name: 'Total', width:'12%', enableCellEdit: false,
                cellTemplate:  '<div style="padding-top:10px;" ng-dblclick="grid.appScope.ShowDetail_State(row.entity,102)">{{row.entity.Amount_LCtoBill | number:2}} <span class="my-button">Double Click To View Details </span></div>' 
               , cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-right',true); }
                },
               
               { field: 'NegoTransit', name: 'NegoTransit', width:'12%', enableCellEdit: false,
               cellTemplate:  '<div style="padding-top:10px;" ng-dblclick="grid.appScope.ShowDetail_State(row.entity,3)">{{row.entity.NegoTransit | number:2}} <span class="my-button">Double Click To View Details </span></div>' 
               , cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-right',true); }, },
               { field: 'NegotiatedBill', name: 'NegotiatedBill', width:'12%', enableCellEdit: false,
               cellTemplate:  '<div style="padding-top:10px;" ng-dblclick="grid.appScope.ShowDetail_State(row.entity,4)">{{row.entity.NegotiatedBill | number:2}} <span class="my-button">Double Click To View Details </span></div>' 
               , cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-right',true); }, },
               { field: 'Amount_Due', name: 'Amount_Due', width:'12%', enableCellEdit: false,
               cellTemplate:  '<div style="padding-top:10px;" ng-dblclick="grid.appScope.ShowDetail_State(row.entity,51)">{{row.entity.Amount_Due | number:2}} <span class="my-button">Double Click To View Details </span></div>' 
               , cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-right',true); }, },
               { field: 'Amount_ODue', name: 'Amount_ODue', width:'12%', enableCellEdit: false,
               cellTemplate:  '<div style="padding-top:10px;" ng-dblclick="grid.appScope.ShowDetail_State(row.entity,52)">{{row.entity.Amount_ODue | number:2}} <span class="my-button">Double Click To View Details </span></div>' 
               , cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-right',true); }, },
               
               { field: 'Discounted', name: 'Discounted', width:'12%', enableCellEdit: false,
               cellTemplate:  '<div style="padding-top:10px;" ng-dblclick="grid.appScope.ShowDetail_State(row.entity,7)">{{row.entity.Discounted | number:2}} <span class="my-button">Double Click To View Details </span></div>' 
                ,cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-right',true); }, },
               
               { field: 'PaymentDone', name: 'PaymentDone', width:'12%', enableCellEdit: false,
               cellTemplate:  '<div style="padding-top:10px;" ng-dblclick="grid.appScope.ShowDetail_State(row.entity,10)">{{row.entity.PaymentDone | number:2}} <span class="my-button">Double Click To View Details </span></div>' 
               , cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-right',true); }, },
               
               { field: 'BFDDRecd', name: 'BFDDRecd', width:'12%', enableCellEdit: false,
               cellTemplate:  '<div style="padding-top:10px;" ng-dblclick="grid.appScope.ShowDetail_State(row.entity,6)">{{row.entity.BFDDRecd | number:2}} <span class="my-button">Double Click To View Details </span></div>' 
               , cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-right',true); }, 
               }
            ],
            data:oSalesStatements,
            onRegisterApi:function(gridApri) {
                $scope.gridApi2 = gridApri;
            }
        };
        

        $scope.gridOptions3 ={
            enableRowHeaderSelection: false,
            enableRowSelection: true,
            enableFullRowSelection: true,
            multiSelect: false,
            enableColumnResizing: true,
            showColumnFooter: true,
            noUnselect : true,
            rowHeight:40,
            enableGridMenu: true,
            columnDefs: [
               { field: 'StartDateMonthStr', name: 'Month', width:'15%', enableCellEdit: false,
               cellTemplate:  '<div style="padding-top:5px;" ng-dblclick="grid.appScope.ShowDetail_Payment(row.entity)">{{row.entity.StartDateMonthStr}} <span class="my-button">Double Click To View Details </span></div>' 
               },
               { field: 'AmountWithCur', name: 'Amount', width:'15%', enableCellEdit: false,cellClass: 'text-right'},
               //{ field: 'AmountCashWithCur', name: 'Amount Cash', width:'15%', enableCellEdit: false,cellClass: 'text-right'}
            ],
            data:oSalesStatements,
            onRegisterApi:function(gridApri) {
                $scope.gridApi3 = gridApri;
            }
        };


        $scope.gridOptions4 ={
            enableRowHeaderSelection: false,
            enableRowSelection: true,
            enableFullRowSelection: true,
            multiSelect: false,
            rowHeight:40,
            enableColumnResizing: true,
            showColumnFooter: true,
            noUnselect : true,
            enableGridMenu: true,
            columnDefs: [
               { field: 'SDMStr', name: 'Month', width:'15%', enableCellEdit: false,
               cellTemplate:  '<div style="padding-top:5px;" ng-dblclick="grid.appScope.ShowDetail_Maturity(row.entity)">{{row.entity.SDMStr}} <span class="my-button">Double Click To View Details </span></div>' 
                   //, cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-left',true); }
               },
               { field: 'AmountWithCur', name: 'Amount', width:'15%', enableCellEdit: false,cellClass: 'text-right'
                   //, cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {return grid.appScope.GetClass(row.entity,' text-right',true); }
               },
               //{ field: 'AmountCashWithCur', name: 'Amount Cash', width:'15%', enableCellEdit: false,cellClass: 'text-right'}
               
            ],
            data:oSalesStatements,
            onRegisterApi:function(gridApri) {
                $scope.gridApi4 = gridApri;
            }
        };

        $scope.GetClass=function(row, algin, isBlank)
        {
            if(row.BUID==0)
                return 'lightGreen'+algin;
            else if(row.LCPaymentType==0)
                return 'lightGreen'+algin;
            else if(isBlank==true)
                return ''+algin;
            else
                return 'lightGreyE6'+algin;
        }

        $scope.Counter=1;
        $scope.GetClass1=function(row, algin, col)
        {
            debugger;
            if(col.field=="Name_R")
                $scope.Counter=2;   
            else if(col.field=="Name_Y")
                $scope.Counter=3;

            var ClassName="";
            if($scope.Counter==1)
                ClassName= 'Color1'+algin;
            else if($scope.Counter==2)
                ClassName= 'Color2'+algin;
            else if($scope.Counter==3)
                ClassName= 'Color3'+algin;
            else
                ClassName= ''+algin;

            if(col.field=="Amount_Y")
                $scope.Counter=1;

            return ClassName;
        }

        $scope.Refresh = function(tabId)
        {
            if(this.cboBusinessUnit == undefined || this.cboBusinessUnit == null) {
                this.cboBusinessUnit = 0;
            }
            _nBUID = this.cboBusinessUnit;
            debugger;
            if(tabId == 2) {
                var obj= {
                    nReportType:tabId,
                    Params:0 + '~' + icsdateformat(new Date()) + '~' + icsdateformat(new Date()) + '~' + this.cboBusinessUnit
                }
            }
            else{
                var obj= {
                    nReportType:tabId,
                    Params:this.cboDate+'~'+ this.dtStart +'~'+ this.dtEnd + '~' + this.cboBusinessUnit
                }
            }

            $http.post(_sBaseAddress + '/SalesStatement/GetsGridData',JSON.stringify(obj)).then(
                  function (response) {
                      debugger;
                      var results=JSON.parse(response.data);
                      if (results.length > 0) {
                          if(tabId ==1){
                              $scope.gridOptions1.data= results;
                          }
                          else if(tabId==2){
                              $scope.gridOptions2.data= results;
                          }

                          else if(tabId==3){
                              $scope.gridOptions3.data= results;
                          }
                          else if(tabId==4){
                              $scope.gridOptions4.data= results;
                          }
                      }
                      else {
                          msModal.Message({ headerTitle: '', bodyText: 'No Data Found !!', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });

                          return;
                      }
                  },
                  function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
            );
        }

        $scope.CompareOperators=customizedCompareoperator;

        $(document).ready(function(){

            $(".number-int").icsNumberField({ min: 0,precision: 0 });
            $(".number-precision").icsNumberField({ min: 0,precision: 2 });
        });

        $scope.initializeDatepicker  =function(){
            $('.date-container').datepicker({
                format: "dd M yyyy",
                calendarWeeks: true,
                autoclose: true,
                todayHighlight: true
            });
        };
        $scope.DateChange = function () {

            this.EndDateDisabled = icsMethod.IsDateBoxdisabled(this.cboDate);
        }

        $scope.ExportToExcel = function(){
            if($scope.cboDate ==1)
            {
                $scope.DateStart = $scope.DateEnd;
            }
            var data=$scope.gridApi2.selection.getSelectedRows()[0];

            var sCurrenctStates=this.cboReportType;
            debugger;
            if(sCurrenctStates==undefined)
            {
                alert("Please Select A Report Type!");return;
            }

            if(data==undefined)
            {
                alert("Please Select An Item And Try Again!");return;
            }

            var sPHeader= "";

            if(data.BUID>0 && data.BankBranchID>0)
            {
                if(data.BUID>0)
                    sPHeader+=" Unit: "+data.BUName;
                if(data.BankBranchID>0)
                    sPHeader+="~   Bank: "+data.BankName;
                else
                    sPHeader += '~';
                //if(data.sCurrenctStates>=0)
                //    sPHeader+="~   C. State: "+data.StateSt;
                //else
                    sPHeader += '~';
            }

            debugger;
            console.log(sCurrenctStates);
            //if(sCurrenctStates=='7')
            //    sCurrenctStates='7,12'
            //else if(sCurrenctStates=='51')
            //    sCurrenctStates='5,1'
            //else if(sCurrenctStates=='52')
            //    sCurrenctStates='5,2'
            //else if(sCurrenctStates=='102')
            //    sCurrenctStates='0,1,2'

            var sParams =
                    sCurrenctStates + "~" +
                    data.BankBranchID + "~" +
                    'StartDate'+ "~" +
                    this.cboDate + "~" +
                    this.dtStart + "~" +
                    this.dtEnd  + "~" +  
                    data.BUID+"~"+2;

            console.log(sParams);
            //window.open(_sBaseAddress + '/SalesStatement/Excel_ExportBillReport?BUID='+this.cboBusinessUnit+'&sParam=' + sParams + '&sPHeader='+sPHeader, "_blank")
            window.open(_sBaseAddress + '/SalesStatement/Excel_ExportBillReport?BUID='+_nBUID+'&sParam=' + sParams + '&sPHeader='+sPHeader, "_blank")
        };

        function BOE_ColConfiguration(nState) {
            var oLists = [];

            var oList = new Object();
            debugger;
            if(nState==4)
            {
                oList = new Object(); oList.FieldName = "ApplicantName";oList.Caption = "Party Name";oList.Width = "105"; oLists.push(oList);
                
            }
            else if(nState!='5,1' && nState!='5,2')
            {
                oList = new Object();oList.FieldName = "ExportBillNo";oList.Caption = "Bill No";oList.Width = "30";oLists.push(oList); 
            }
            
             
            oList = new Object();oList.FieldName = "ExportLCNo";oList.Caption = "LC No";oList.Width = "60";oLists.push(oList);

            if(nState!=4)
            {
                oList = new Object();oList.FieldName = "ApplicantName";oList.Caption = "Party Name";oList.Width = "100";oLists.push(oList);
            }

            //oList = new Object();
            //oList.FieldName = "BankName_Advice";
            //oList.Caption = "Advice Bank";
            //oLists.push(oList);

            //oList = new Object();
            //oList.FieldName = "BankName_Nego";
            //oList.Caption = "Negotiate Bank";
            //oList.Width = "50";
            //oLists.push(oList);

            if(nState=='3' || nState=='4')
            {
                oList = new Object();  oList.FieldName = "PINo";   oList.Caption = "PI No";  oList.Width = "30"; oLists.push(oList);
            } 

            if(nState=='4')
            {
                oList = new Object();
                oList.FieldName = "BankName_Issue";oList.Caption = "Issue Bank";oList.Width = "140";
                oLists.push(oList);
            }

            if(nState=='3' || nState=='4')
            {
                oList = new Object();
                oList.FieldName = "Qty_BillSt";oList.Caption = "Qty";oList.Width = "30";
                oLists.push(oList);
            }
           
            //oList = new Object();
            //oList.FieldName = "LDBCDateSt";
            //oList.Caption = "LDBC Date";
            //oLists.push(oList);

            //oList = new Object();
            //oList.FieldName = "LDBCNo";
            //oList.Caption = "LDBC No";
            //oLists.push(oList);

            oList = new Object();
            oList.FieldName = "AmountSt";
            oList.Caption = "Amount";
            oList.Width = "40";
            oLists.push(oList);

            if(nState=='4')
            {
                oList = new Object();
                oList.FieldName = "LDBCNo"; oList.Caption = "LDBC No";oList.Width = "60";
                oLists.push(oList);
                oList = new Object();
                oList.FieldName = "LDBCDateSt";oList.Caption = "LDBC Date";oList.Width = "50";
                oLists.push(oList);
                oList = new Object();
                oList.FieldName = "TimeLag14";oList.Caption = "Due Days";oList.Width = "20";
                oLists.push(oList);
            }
            else if(nState!='3')
            {
                oList = new Object();
                oList.FieldName = "PINo";
                oList.Caption = "PI No";
                oList.Width = "30";
                oLists.push(oList);
            }
            //oList = new Object();
            //oList.FieldName = "StateSt";
            //oList.Caption = "Current Status";
            //oList.Width = "50";
            //oLists.push(oList);

            if(nState!=4)
            {
                oList = new Object();
                oList.FieldName = "BankName_Issue";
                oList.Caption = "Issue Bank";
                oList.Width = "80";
                oLists.push(oList);
            }
            //oList = new Object();
            //oList.FieldName = "BBranchName_Issue";
            //oList.Caption = "Issue Bank Branch";
            //oLists.push(oList);

            //oList = new Object();
            //oList.FieldName = "LCOpeningDatest";
            //oList.Caption = "LC Open Date";
            //oLists.push(oList);

            if(nState=='5,1' || nState=='5,2')
            {
                oList = new Object();
                oList.FieldName = "LDBCNo"; oList.Caption = "LDBC No";oList.Width = "50";
                oLists.push(oList);

                oList = new Object();
                oList.FieldName = "MaturityReceivedDateSt";
                oList.Caption = "Maturity Red Date";oList.Width = "50";
                oLists.push(oList);

                oList = new Object();
                oList.FieldName = "MaturityDateSt";
                oList.Caption = "Maturity Date";oList.Width = "50";
                oLists.push(oList);

                oList = new Object();
                oList.FieldName = "DueDay";
                oList.Caption = "Due";oList.Width = "20";
                oLists.push(oList);
            }
            else if(nState!='4' && nState!='10' && nState!='6')
            {
                oList = new Object();
                oList.FieldName = "StartDateSt";
                oList.Caption = "Invoice Date";
                oList.Width = "50";
                oLists.push(oList);
            }
           
            if(nState=='0,1,2')
            {
                oList = new Object();
                oList.FieldName = "DueDay_Party";
                oList.Caption = "Due";oList.Width = "20";
                oLists.push(oList);
            }

            if(nState=='0')
            {
                oList = new Object();
                oList.FieldName = "DocPrepareDateSt";
                oList.Caption = "Doc Prepare Date";
                oList.Width = "50";
                oLists.push(oList);
            }
            
            if(nState=='1' || nState=='2' || nState=='0,1,2')
            {
                oList = new Object();
                oList.FieldName = "SendToPartySt";
                oList.Caption = "Send To Party";
                oList.Width = "50";
                oLists.push(oList);

               
            }

            if(nState=='0' || nState=='1' || nState=='2' || nState=='0,1,2')
            {
                oList = new Object();
                oList.FieldName = "ExpiryDateSt";
                oList.Caption = "Expiry Date";
                oList.Width = "50";
                oLists.push(oList);
               
            }

            if(nState=='3')
            {
                oList = new Object();
                oList.FieldName = "SendToBankDateSt";
                oList.Caption = "Send To Bank";
                oList.Width = "50";
                oLists.push(oList);

                oList = new Object();   oList.FieldName = "MKTPName";       oList.Caption = "MKT Person";   oList.Width = "50";     oLists.push(oList);
            }

            if(nState=='10' || nState=='6')
            {
                oList = new Object();   oList.FieldName = "MaturityDateSt"; oList.Caption = "Maturity Date";    oList.Width = "50"; oLists.push(oList);

                oList = new Object();
                oList.FieldName = "RelizationDateSt";
                oList.Caption = "Relization Date";   oList.Width = "50";
                oLists.push(oList);
            }

            
            if(nState=='6')
            {
                oList = new Object();
                oList.FieldName = "BankFDDRecDateSt";
                oList.Caption = "FDD Rec Date"; oList.Width = "50";
                oLists.push(oList);
            }

            if(nState=='2' || nState=='0,1,2')
            {
                oList = new Object(); oList.FieldName = "RecdFromPartySt";  oList.Caption = "Recd From Party"; oList.Width = "50";oLists.push(oList);
                oList = new Object();   oList.FieldName = "MKTPName";       oList.Caption = "MKT Person";   oList.Width = "50";     oLists.push(oList);
            }
            else 
            if(nState!=3)
            {
                oList = new Object();oList.FieldName = "MKTPName";oList.Caption = "MKT Person"; oList.Width = "50";oLists.push(oList);
            }
            
            //oList = new Object();
            //oList.FieldName = "RecedFromBankDateSt";
            //oList.Caption = "Recd From Bank";
            //oLists.push(oList);

            //oList = new Object();
            //oList.FieldName = "AcceptanceDateSt";
            //oList.Caption = "Submit To Party Bank";
            //oLists.push(oList);

            //oList = new Object();
            //oList.FieldName = "EncashmentDateSt";
            //oList.Caption = "Encashment Date";
            //oLists.push(oList);

            return oLists;
        }
        $scope.ShowDetail_Cell = function(data,tabID){
      
            var sHeader=data.Name;
            
            if(tabID==2)
                sHeader=data.Name_R;
            else if(tabID==3)
                sHeader=data.Name_Y;

            var sParams =
                    this.cboDate + "~" +
                    this.dtStart + "~" +
                    this.dtEnd  + "~" +  
                    data.Part+"~"+tabID+"~"+0;

            sessionStorage.removeItem('SearchStr');
            sessionStorage.setItem("SearchStr", sParams);
            sessionStorage.setItem("BackLink", window.location.href);
            sessionStorage.setItem("Header", sHeader);
            sessionStorage.setItem("SalesStatement", JSON.stringify($scope.gridOptions1.data));
            window.location.href=_sBaseAddress + '/SalesStatement/View_SalesStatementSummary?BUID='+this.cboBusinessUnit+'&sParam=' + sParams;
        };
        $scope.ShowDetail_State = function(data,sCurrenctStates){
            if($scope.cboDate ==1)
            {
                $scope.DateStart = $scope.DateEnd;
            }
     
            var sPHeader= "";
            if(data.BUID>0 && data.BankBranchID>0)
            {
                if(data.BUID>0)
                    sPHeader+=" Unit: "+data.BUName;
                if(data.BankBranchID>0)
                    sPHeader+="~   Bank: "+data.BankName;
                else
                    sPHeader += '~';
                if(data.sCurrenctStates>=0)
                    sPHeader+="~   C. State: "+data.StateSt;
                else
                    sPHeader += '~';
            }

            debugger;
            console.log(data);
            if(sCurrenctStates=='7')
                sCurrenctStates='7,12'
            else if(sCurrenctStates=='51')
                sCurrenctStates='5,1'
            else if(sCurrenctStates=='52')
                sCurrenctStates='5,2'
            else if(sCurrenctStates=='102')
                sCurrenctStates='0,1,2'

            //For LC: var sParam=data.BankBranchID +'~'+ this.cboDate + '~'+ this.dtStart + '~'+ this.dtEnd +'~'+ data.BUID +'~'+ 4 ;
            var sParams =
                    sCurrenctStates + "~" +
                    data.BankBranchID + "~" +
                    'StartDate'+ "~" +
                    this.cboDate + "~" +
                    this.dtStart + "~" +
                    this.dtEnd  + "~" +  
                    data.BUID+"~"+2;

            var oExportBillReportColumns=BOE_ColConfiguration(sCurrenctStates);
            var sFieldName = "";
            var sCaption = "";
            var sWidth = "";
            for (var i = 0; i < oExportBillReportColumns.length; i++) {
                sFieldName += oExportBillReportColumns[i].FieldName + ",";
                sCaption += oExportBillReportColumns[i].Caption + ",";
                sWidth += oExportBillReportColumns[i].Width + ",";
            }
            sFieldName = sFieldName.substring(0, sFieldName.length - 1);
            sCaption = sCaption.substring(0, sCaption.length - 1);
            var sExportBillFieldST = sFieldName + "~" + sCaption+'~'+sWidth;
            console.log(oExportBillReportColumns);
            //window.open(_sBaseAddress + '/SalesStatement/Print_ExportBillReport?BUID='+this.cboBusinessUnit+'&sParam=' + sParams + '&sPHeader='+sPHeader+'&sExportBillFieldST=' + sExportBillFieldST, "_blank")
            window.open(_sBaseAddress + '/SalesStatement/Print_ExportBillReport?BUID='+_nBUID+'&sParam=' + sParams + '&sPHeader='+sPHeader+'&sExportBillFieldST=' + sExportBillFieldST, "_blank")
        };
        
        function Maturity_ColConfiguration() {
            var oLists = [];
            var oList = new Object();
            oList = new Object();   oList.FieldName = "ExportLCNo";     oList.Caption = "LC No";        oList.Width = "60";     oLists.push(oList);
            oList = new Object();   oList.FieldName = "ApplicantName";  oList.Caption = "Party Name";   oList.Width = "100";    oLists.push(oList);
            oList = new Object();   oList.FieldName = "AmountSt";       oList.Caption = "Amount";       oList.Width = "40";     oLists.push(oList);
            oList = new Object();   oList.FieldName = "PINo";           oList.Caption = "PI No";        oList.Width = "30";     oLists.push(oList);
            oList = new Object();   oList.FieldName = "BankName_Issue"; oList.Caption = "Issue Bank";   oList.Width = "140";    oLists.push(oList);
            oList = new Object();   oList.FieldName = "LDBCNo";         oList.Caption = "LDBC No";      oList.Width = "50";     oLists.push(oList);
            oList = new Object();   oList.FieldName = "MaturityReceivedDateSt";oList.Caption = "Maturity Red Date";oList.Width = "50";oLists.push(oList);
            oList = new Object();   oList.FieldName = "MaturityDateSt"; oList.Caption = "Maturity Date";    oList.Width = "50"; oLists.push(oList);
            oList = new Object();   oList.FieldName = "MKTPName";       oList.Caption = "MKT Person";   oList.Width = "50";     oLists.push(oList);
            return oLists;
        }
        $scope.ShowDetail_Maturity = function(data,sCurrenctStates){
            if($scope.cboDate ==1)
            {
                $scope.DateStart = $scope.DateEnd;
            }
            console.log(data);
            var sPHeader= "";
            if(data.BUID>0 && data.BankBranchID>0)
            {
                if(data.BUID>0)
                    sPHeader+=" Unit: "+data.BUName;
                if(data.BankBranchID>0)
                    sPHeader+="~   Bank: "+data.BankName;
                else
                    sPHeader += '~';
                if(data.sCurrenctStates>=0)
                    sPHeader+="~   C. State: "+data.StateSt;
                else
                    sPHeader += '~';
            }

            
           
            sCurrenctStates='5,12,7';

            var sParams =
                    sCurrenctStates + "~" +
                    data.BankBranchID + "~" +
                    'MaturityDate'+ "~" +
                    this.cboDate + "~" +
                    '1 '+data.StartDateMonthStr + "~" +
                    this.dtEnd  + "~" +  
                    data.BUID+"~"+4;

            console.log(sParams);
            var oExportBillReportColumns=Maturity_ColConfiguration();
            var sFieldName = "";
            var sCaption = "";
            var sWidth = "";
            for (var i = 0; i < oExportBillReportColumns.length; i++) {
                sFieldName += oExportBillReportColumns[i].FieldName + ",";
                sCaption += oExportBillReportColumns[i].Caption + ",";
                sWidth += oExportBillReportColumns[i].Width + ",";
            }
            sFieldName = sFieldName.substring(0, sFieldName.length - 1);
            sCaption = sCaption.substring(0, sCaption.length - 1);
            var sExportBillFieldST = sFieldName + "~" + sCaption+'~'+sWidth;
            console.log(oExportBillReportColumns);
            //window.open(_sBaseAddress + '/SalesStatement/Print_ExportBillReport?BUID='+this.cboBusinessUnit+'&sParam=' + sParams + '&sPHeader='+sPHeader+'&sExportBillFieldST=' + sExportBillFieldST, "_blank")
            window.open(_sBaseAddress + '/SalesStatement/Print_ExportBillReport?BUID='+_nBUID+'&sParam=' + sParams + '&sPHeader='+sPHeader+'&sExportBillFieldST=' + sExportBillFieldST, "_blank")
        };
        
        function Payment_ColConfiguration() {
            var oLists = [];
            var oList = new Object();
            oList = new Object();   oList.FieldName = "ExportLCNo";     oList.Caption = "LC No";        oList.Width = "60";     oLists.push(oList);
            oList = new Object();   oList.FieldName = "ApplicantName";  oList.Caption = "Party Name";   oList.Width = "105";    oLists.push(oList);
            oList = new Object();   oList.FieldName = "AmountSt";       oList.Caption = "Amount";       oList.Width = "40";     oLists.push(oList);
            oList = new Object();   oList.FieldName = "PINo";           oList.Caption = "PI No";        oList.Width = "30";     oLists.push(oList);
            oList = new Object();   oList.FieldName = "BankName_Issue"; oList.Caption = "Issue Bank";   oList.Width = "140";    oLists.push(oList);
            oList = new Object();   oList.FieldName = "LDBCNo";         oList.Caption = "LDBC No";      oList.Width = "50";     oLists.push(oList);
            oList = new Object();   oList.FieldName = "BankFDDRecDateSt";oList.Caption = "FDD Rec Date";oList.Width = "50";     oLists.push(oList);
            oList = new Object();   oList.FieldName = "RelizationDateSt";oList.Caption = "Relization Date";   oList.Width = "50";  oLists.push(oList);
            oList = new Object();   oList.FieldName = "MKTPName";       oList.Caption = "MKT Person";   oList.Width = "50";     oLists.push(oList);
            return oLists;
        }
        $scope.ShowDetail_Payment = function(data,sCurrenctStates){
            if($scope.cboDate ==1)
            {
                $scope.DateStart = $scope.DateEnd;
            }
            console.log(data);
            var sPHeader= "";
            if(data.BUID>0 && data.BankBranchID>0)
            {
                if(data.BUID>0)
                    sPHeader+=" Unit: "+data.BUName;
                if(data.BankBranchID>0)
                    sPHeader+="~   Bank: "+data.BankName;
                else
                    sPHeader += '~';
                if(data.sCurrenctStates>=0)
                    sPHeader+="~   C. State: "+data.StateSt;
                else
                    sPHeader += '~';
            }

            sCurrenctStates='11';

            var sParams =
                    sCurrenctStates + "~" +
                    data.BankBranchID + "~" +
                    'RelizationDate'+ "~" +
                    this.cboDate + "~" +
                    '1 '+data.StartDateMonthStr + "~" +
                    this.dtEnd  + "~" +  
                    data.BUID+"~"+3;

            console.log(sParams);
            var oExportBillReportColumns=Payment_ColConfiguration(sCurrenctStates);
            var sFieldName = "";
            var sCaption = "";
            var sWidth = "";
            for (var i = 0; i < oExportBillReportColumns.length; i++) {
                sFieldName += oExportBillReportColumns[i].FieldName + ",";
                sCaption += oExportBillReportColumns[i].Caption + ",";
                sWidth += oExportBillReportColumns[i].Width + ",";
            }
            sFieldName = sFieldName.substring(0, sFieldName.length - 1);
            sCaption = sCaption.substring(0, sCaption.length - 1);
            var sExportBillFieldST = sFieldName + "~" + sCaption+'~'+sWidth;
            console.log(oExportBillReportColumns);
            //window.open(_sBaseAddress + '/SalesStatement/Print_ExportBillReport?BUID='+this.cboBusinessUnit+'&sParam=' + sParams + '&sPHeader='+sPHeader+'&sExportBillFieldST=' + sExportBillFieldST, "_blank")
            window.open(_sBaseAddress + '/SalesStatement/Print_ExportBillReport?BUID='+_nBUID+'&sParam=' + sParams + '&sPHeader='+sPHeader+'&sExportBillFieldST=' + sExportBillFieldST, "_blank")
        };
        
        
        $scope.ShowDetail_LCDetails=function(data)
        {
            var sParam=data.BankBranchID +'~'+ this.cboDate + '~'+ this.dtStart + '~'+ this.dtEnd +'~'+ data.BUID +'~'+ 4 ;////4-Paty,6-Product,9-bank
            window.open(_sBaseAddress+'/SalesStatement/PrintExportLCRegister?sParam='+sParam,"_blank");
        }
        
        $scope.print = function()
        {
            if(this.cboBusinessUnit == undefined || this.cboBusinessUnit == null) {
                this.cboBusinessUnit = 0;
            }
            if (this.cboDate == 0) {
                msModal.Message({ headerTitle: '', bodyText: 'Select Date Type', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                return ;
            }

            var nts=(new Date()).getTime()/1000;

            var sTempString =this.cboDate+'~'+ this.dtStart +'~'+ this.dtEnd + '~' + this.cboBusinessUnit;

            window.open(_sBaseAddress+ "/SalesStatement/PrintSalesStatementSummery?sTemp="+sTempString,"_blank");
        }

        //TAb selection
        this.tab = 2;
        this.SetTab = function (tabId)
        {
            this.tab = tabId;
        }
        this.IsSet = function (tabid)
        {
            return this.tab === tabid;
        }
        this.PINo =this.LCNo =this.LDBCNo = "";
        //$scope.sPINo =  this.PINo;

        $scope.reset = function () {
            debugger;
            this.cboDate =$scope.CompareOperators[0].id;
            this.EndDateDisabled = true;
            $scope.dtStart=$scope.dtEnd=icsdateformat(new Date());

            if(sessionStorage.getItem('SearchStr')!=null)
            {
                this.cboDate = parseInt(sessionStorage.getItem('SearchStr').split('~')[0]);
                $scope.dtStart=sessionStorage.getItem('SearchStr').split('~')[1];
                $scope.dtEnd=sessionStorage.getItem('SearchStr').split('~')[2];
            }
        }
        $scope.reset();

    });

</script>





                   

                        @*<div ng-app="SalesStatementApp" ng-controller="SalesStatementCntrl as MLCC">

                        <section>
                            <ul class="nav nav-tabs" style="background:#d6dbdf; color:white;">
                                <li ng-class="{active:MLCC.IsSet(1)}">
                                    <a href="" ng-click="MLCC.SetTab(1)" style="color:black;">Unit Information</a>
                                </li>
                                <li ng-class="{active:MLCC.IsSet(2)}">
                                    <a href="" ng-click="MLCC.SetTab(2)" style="color:black;">Export L/C Status</a>
                                </li>
                                <li ng-class="{active:MLCC.IsSet(3)}">
                                    <a href="" ng-click="MLCC.SetTab(3)" style="color:black;">Payment Receive</a>
                                </li>
                            </ul>

                            <div ng-if="MLCC.IsSet(1)">
                                <div class="col-md-12">
                                    <div class="form-inline">
                                        @*<input type="checkbox" ng-model="chkDate" class="form-control" />*@
                        @*<div class="input-group date date-container">
                            <input type="text" class="form-control" style="width:100px" ng-model="dtStart" ng-disabled="!chkDate"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                        </div>
                        <span>to</span>
                        <div class="input-group date date-container">
                            <input type="text" class="form-control" style="width:100px" ng-model="dtEnd" ng-disabled="!chkDate"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                        </div>*@

                        @*<div class="col-md-4 text-left">
                                    <select class="form-control" ng-model="cboDate" ng-change="DateChange()" ng-options="item.id as item.Value for item in CompareOperators"></select>

                                </div>
                                <div class="col-md-8 text-left">
                                    <div class="col-md-12">
                                        <div class="input-group date date-container" style="width:43%;float:left">
                                            <input type="text" class="form-control" ng-model="StartDate"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                                        </div>
                                        <div style="width:14%;float:inherit;">
                                            <span class="input-group-addon" style="height:26px;"><span class="label label-primary">To</span></span>
                                        </div>
                                        <div class="input-group date date-container" style="width:43%;float:left">
                                            <input type="text" class="form-control" ng-model="EndDate" ng-disabled="EndDateDisabled"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                                        </div>
                                    </div>
                                </div>

                                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Refresh1stTab()"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Refresh</button>
                                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="print()" ng-hide="hide"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Print</button>



                            </div>
                        </div>*@
                        @*<div class="col-md-12">
                                <div ui-grid="gridOptions1" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
                            </div>

                        </div>

                        <div ng-if="MLCC.IsSet(2)">
                            <div class="col-md-12">
                                <div class="form-inline">
                                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Refresh2ndTab()"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Refresh</button>
                                </div>
                            </div>
                            <div class="col-md-12">
                                @*<div ui-grid="gridOptions2" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>*@
                        @*</div>
                        </div>
                        <div ng-if="MLCC.IsSet(3)">
                            <div class="col-md-12">
                                <div class="form-inline">
                                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Refresh3rdTab()"> <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Refresh</button>
                                </div>
                            </div>
                            <div class="col-md-12">
                                @*<div ui-grid="gridOptions3" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>*@
                        @*</div>
                        </div>*@
                        @*</section>*@

                        @*</div>*@


                        @*<style type="text/css">
                            .form-control {
                                height: 26px;
                                padding: 0px 6px;
                                font-size: 12px;
                            }

                            .ui-grid-top-panel .btn-sm, .input-group-addon {
                                padding: 3px 10px;
                            }

                            .grid {
                                height: 480px;
                                width: 100%;
                            }

                            .custom-pagination {
                                margin-top: -15px;
                                margin-bottom: -15px;
                            }

                            .spacing {
                                padding-bottom: 5px;
                            }
                        </style>*@

                        @*<script type="text/javascript">

                            var _sBaseAddress = @Html.Raw(Json.Encode(HttpContext.Current.Session[SessionInfo.BaseAddress]));
                            var oSalesStatements = @Html.Raw(Json.Encode(Model));


                            var SalesStatementApp = angular.module('SalesStatementApp',['ngAnimate','tbICSIsNUmberModule', 'ui.bootstrap', 'ui.grid', 'ui.grid.resizeColumns','ui.grid.selection','ms.service']);
                            SalesStatementApp.controller('SalesStatementCntrl', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession, icsMethod) {


                                //$(document).on('mousemove', '.modal-body', function () {
                                //    $('.date-container').datepicker({
                                //        format: "dd M yyyy",
                                //        calendarWeeks: false,
                                //        autoclose: true,
                                //        todayHighlight: true
                                //    });
                                //});
                                //$scope.DateChange = function () {
                                //    $scope.EndDateDisabled = icsMethod.IsDateBoxdisabled($scope.cboDate);
                                //}

                                //$scope.print = function(){
                                //    var nts=(new Date()).getTime()/1000;
                                //    if(  $scope.chkDate == false||$scope.chkDate == undefined){
                                //        msModal.Message({ headerTitle: '', bodyText: 'Select Date Range!', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                                //        return;
                                //    }

                                //    var sTempString =  $scope.chkDate+'~'+ $scope.dtStart +'~'+ $scope.dtEnd ;


                                //    window.open(_sBaseAddress+ "/SalesStatement/PrintSalesStatementSummery?sTemp="+sTempString,"_blank");
                                //}


                                //$scope.gridOptions1 ={
                                //    enableRowHeaderSelection: false,
                                //    enableRowSelection: true,
                                //    enableFullRowSelection: true,
                                //    multiSelect: false,
                                //    enableColumnResizing: true,
                                //    noUnselect : true,
                                //    enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
                                //    columnDefs: [
                                //        {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},

                                //    ],

                                //    data:oSalesStatements,
                                //    onRegisterApi:function(gridApi1) {
                                //        $scope.gridApi1 = gridApi1;

                                //    }
                                //};

                                //$scope.Refresh1stTab = function() {
                                //    alert("Hi1");
                                //}


                                //$scope.Refresh2ndTab = function() {
                                //    alert("Hi2");
                                //}


                                //$scope.Refresh3rdTab = function() {
                                //    alert("Hi3");
                                //}


                                ////TAb selection
                                //this.tab = 1;
                                //this.SetTab = function (tabId)
                                //{

                                //    this.tab = tabId;
                                //}
                                //this.IsSet = function (tabid)
                                //{

                                //    return this.tab === tabid;
                                //}
                                //this.PINo =this.LCNo =this.LDBCNo = "";
                                ////$scope.sPINo =  this.PINo;


                            });


                        </script>*@

