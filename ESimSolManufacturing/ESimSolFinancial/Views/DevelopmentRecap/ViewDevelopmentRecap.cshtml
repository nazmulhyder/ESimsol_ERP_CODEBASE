@{
    ViewBag.Title = "Development Recap";
}
<html>

<body>
    @{var MenuID = HttpContext.Current.Session[SessionInfo.MenuID];}
    @model ESimSol.BusinessObjects.DevelopmentRecap
    <div id="winDevelopmentRecapDetail" class="easyui-window winClass" title="Color Size Ratio" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width:695px; float: left;">
            <fieldset style="width:684px;">
                <legend>Development Recap Detail Info:</legend>
                <table border="0" cellspacing="0" cellpadding="0" style="font-size: 11px; font-weight: bold">
                    <tr>
                        <td style="width:120px; text-align:right;">
                            <label class="asterixStyle">*</label>Factory Name:
                        </td>
                        <td style="width: 220px; text-align:left;">
                            <input type="text" id="txtFactoryID" style="width: 130px; display: none;" />
                            <input type="text" id="txtFactoryName" placeholder="Type Factory Name & Press Enter" style="width: 150px;" />
                            <a id="btnFactoryPicker" href="javascript:void(0)" style="width:55px;" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Pick</a>
                        </td>
                        <td style="width: 120px; text-align: right">
                            Seeking Date:
                        </td>
                        <td style="width: 220px;text-align:left;">
                            <input id="txtSeekingDate" type="text" style="width: 220px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 120px; text-align: right">
                            <label class="asterixStyle">*</label>Contact Persaon:
                        </td>
                        <td style="width: 220px;text-align:left;">
                            <select id="cboFactoryContactPersonnels" style="width: 155px; font-size: 12px;"></select>
                            <a id="btnConPersonnel" href="javascript:void(0)" class="easyui-linkbutton" style="width:55px;" iconcls="icon-add" plain="true">New</a>
                        </td>
                        <td style="width: 120px; text-align: right">
                            Received By:
                        </td>
                        <td style="width: 220px;text-align:left;">
                            <input type="text" id="txtReceivedByID" style="width: 155px; display: none;" />
                            <input type="text" id="txtRecivedBy" style="width: 155px;" placeholder="Type Employee & Press Enter" />
                            <a id="btnPickReceiveBy" href="javascript:void(0)" style="width:55px;" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Pick</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
            <div style="margin-top:5px; margin-left:2px;">
                <table id="tblDevelopmentRecapSizeColorRatio" title="Sample Development Factory Wise List" class="easyui-datagrid" style="width: 700px; height: 180px;" data-options="singleSelect: true,fitColumns:false,rownumbers:true,pagination:false,autoRowHeight:false,toolbar: '#toolbarDevDetail',showFooter: true,onClickRow:onClickRow"></table>
            </div>
            <div id="toolbarDevDetail">
                <label class="asterixStyle">*</label><a id="btnPickColor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Pick Color</a>
                <a id="btnDeleteColor" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                <label class="asterixStyle">*</label>Unit:<select id="cboUnits" style="width: 180px; font-size: 12px;"></select>
            </div>
            <table border="0" cellpadding="0" cellspacing="0" style="margin-top:3px;">
                <tr>
                    <td>
                        <div id="divTotalSummary" style="font-size:12; height:20px; width:695px; overflow:auto">
                            <b>Total : </b>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
        <fieldset style="width:685px;">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="1" cellpadding="1" style="font-size: 11px; font-weight: bold">
                <tr>
                    <td style="width: 585px; text-align: right"></td>
                    <td style="width: 50px">
                        <a id="btnSaveDevDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Ok</a>
                    </td>
                    <td style="width: 50px">
                        <a id="btnCloseDevDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
    <div class="menuMainCollectionTable" id="divDR">
        <div id="divParty" class="easyui-panel" title="Development Recap" style="font-family:Tahoma;width:101%;height:100%;">
            <div id="divDevelopmentRecap" class="easyui-tabs" style="width:100%;height:85.2%;">
                <div title="Development Recap Info" style="padding:10px; font-size:12px; font-style:normal;width:100%;height:100%">
                    <fieldset>
                        <legend style="font-weight:bold">Development Recap Informations : </legend>
                        <div style="width: 100%;">
                            <div style="width: 72%; float: left;">
                                <table border="0" cellspacing="3" cellpadding="0" style="font-size: 11px; font-weight: bold">
                                    <tr>
                                        <td style="width: 110px; text-align: right">
                                            Style No :
                                        </td>
                                        <td style="width: 185px">
                                            @Html.TextBoxFor(model => model.TechnicalSheetID, new { style = "width: 185px; display: none;", id = "txtTechnicalSheetID" })
                                            @Html.TextBoxFor(model => model.StyleNo, new { style = "width: 185px;", id = "txtStyleNo", disabled = "disabled" })
                                        </td>
                                        <td style="width: 110px; text-align: right">
                                            Recap No :
                                        </td>
                                        <td style="width: 250px">
                                            <table border="0" cellpadding="1" cellspacing="1" style="font-size: 11px; font-weight: bold">
                                                <tr>
                                                    <td style="width:65px">@Html.TextBoxFor(model => model.DevelopmentRecapNo, new { style = "width: 65px;", id = "txtDevelopmentRecapNo", disabled = "disabled" })</td>
                                                    <td style="width:85px; text-align:right">Seasons :</td>
                                                    <td style="width:100px">@Html.DropDownListFor(model => model.BusinessSessionID, Model.BusinessSessions.Select(x => new SelectListItem() { Text = x.SessionName, Value = x.BusinessSessionID.ToString() }), new { id = "cboSeasons", style = "width: 100px;" })</td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 110px; text-align: right">
                                            Buyer Name :
                                        </td>
                                        <td style="width: 185px">
                                            @Html.TextBoxFor(model => model.BuyerID, new { style = "width: 185px; display: none;", id = "txtBuyerID", disabled = "disabled" })
                                            @Html.TextBoxFor(model => model.BuyerName, new { style = "width: 185px;", id = "txtBuyerName", disabled = "disabled" })
                                        </td>
                                        <td style="width: 110px; text-align: right">
                                            B. Contact Person :
                                        </td>
                                        <td style="width: 250px">
                                            <select id="cboContactPersonnels" style="width:185px; font-size: 12px;" />
                                            <input type="button" id="btnReload" style="width:25px;" value="Load">
                                            <input type="button" style="width:33px;" onclick="BuyerConPersonnelPiker()" value="New"id="btnConPersonnel" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 110px; text-align: right">
                                            Product Name :
                                        </td>
                                        <td style="width: 185px">
                                            @Html.TextBoxFor(model => model.ProductID, new { style = "width: 185px; display: none;", id = "txtProductID" })
                                            @Html.TextBoxFor(model => model.ProductName, new { style = "width: 185px;", id = "txtProductName", disabled = "disabled" })
                                        </td>

                                        <td style="width: 110px; text-align: right">
                                            Brand :
                                        </td>
                                        <td style="width: 250px">
                                            <table border="0" cellpadding="1" cellspacing="1" style="font-size: 11px; font-weight: bold">
                                                <tr>
                                                    <td style="width:100px">@Html.TextBoxFor(model => model.BrandName, new { style = "width:100px;", id = "txtBrandName", disabled = "disabled" })</td>
                                                    <td style="width:65px; text-align:right">GG/GSM:</td>
                                                    <td style="width:85px">@Html.TextBoxFor(model => model.GG, new { style = "width: 85px;", id = "txtGG" })</td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 110px; text-align: right">
                                            Special Finish :
                                        </td>
                                        <td style="width: 185px">
                                            @Html.TextBoxFor(model => model.SpecialFinish, new { style = "width: 185px;", id = "txtSpecialFinish" })
                                        </td>
                                        <td style="width: 110px; text-align: right">
                                            Count :
                                        </td>
                                        <td style="width: 250px">
                                            <table border="0" cellpadding="1" cellspacing="1" style="font-size: 11px; font-weight: bold">
                                                <tr>
                                                    <td style="width:100px">@Html.TextBoxFor(model => model.Count, new { style = "width:100px;", id = "txtCount" })</td>
                                                    <td style="width:65px; text-align:right"> Weight :</td>
                                                    <td style="width:85px">@Html.TextBoxFor(model => model.Weight, new { style = "width: 85px;", id = "txtWeight" })</td>
                                                </tr>
                                            </table>

                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 110px; text-align: right">
                                            Inquiry Rcv Date :
                                        </td>
                                        <td style="width: 185px">
                                            <input id="txtInquiryReceivedDate" type="text" style="width: 140px;" class="easyui-datebox"
                                                   required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                            <input type="button" value="Up" id="btnInquiryReceivedDate" style="width: 47px" />
                                        </td>
                                        <td style="width: 140px; text-align: right">
                                            Collection Name :
                                        </td>
                                        <td style="width: 250px">
                                            @Html.TextBoxFor(model => model.CollectionName, new { style = "width: 250px;", id = "txtCollectionName" })
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 110px; text-align: right">
                                            Sample Rcv Date :
                                        </td>
                                        <td style="width: 185px">
                                            <input id="txtSampleReceivedDate" type="text" style="width: 140px;" class="easyui-datebox"
                                                   required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                            <input type="button" value="Up" id="btnSampleReceivedDate" style="width: 47px" />
                                        </td>
                                        <td style="width: 110px; text-align: right">
                                            Sending Date :
                                        </td>
                                        <td style="width: 250px">
                                            <input id="txtSampleSendingDate" type="text" style="width: 205px;" class="easyui-datebox"
                                                   required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                            <input type="button" value="Up" id="btnSampleSendingDate" style="width: 47px" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 110px; font-size:10px; text-align: right">
                                            <label class="asterixStyle">*</label>Development Type :
                                        </td>
                                        <td style="width: 185px">
                                            <select style="width:189px" id="cboDevelopmentType"> </select>
                                        </td>
                                        <td style="width: 110px; text-align: right">
                                            Sending Dead Line :
                                        </td>
                                        <td style="width: 250px">
                                            <input id="txtSendingDeadLine" type="text" style="width: 205px;" class="easyui-datebox"
                                                   required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                            <input type="button" value="Up" id="btnSendingDeadLine" style="width: 47px" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 110px; text-align: right">
                                            <label class="asterixStyle">*</label>Tranport Type :
                                        </td>
                                        <td style="width: 185px">
                                            <table border="0" cellpadding="0" cellspacing="0">
                                                <tr>
                                                    <td style=" font-size:12px;">@Html.DropDownList("TransportType", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumTransportType))), new { id = "cboTransportType", style = "width: 60px;" }) </td>
                                                    <td style="width: 65px; text-align: right;font-size:11px; font-weight:bold;">Awb No:</td>
                                                    <td style="width:50px; font-size:11px; text-align:left;">
                                                        @Html.TextBoxFor(model => model.AwbNo, new { style = "width: 70px;", id = "txtAwbNo" })
                                                    </td>
                                                </tr>
                                            </table>

                                        </td>
                                        <td style="width: 110px; text-align: right">
                                            <label class="asterixStyle">*</label>Merchandiser :
                                        </td>
                                        <td style="width: 250px;">
                                            <input id="txtMerChandiserName" type="text" style="width: 205px;" placeholder="Type Merchandiser Name & Press Enter" />
                                            <input type="button" style="width: 40px; float: right;" id="btnPickMerchandiser" value="Pick" />
                                            <input id="txtMerchandiserID" type="hidden" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 110px; text-align: right">
                                            Unit Price :
                                        </td>
                                        <td style="width: 185px">
                                            @Html.TextBoxFor(model => model.UnitPrice, new { style = "width: 85px;", id = "txtUnitPrice" })
                                            @Html.DropDownListFor(model => model.CurrencyID, Model.Currencys.Select(x => new SelectListItem() { Text = x.CurrencyName, Value = x.CurrencyID.ToString() }), new { id = "cboCurrency", style = "width:95px;" })
                                        </td>
                                        <td style="width: 110px; text-align: right">
                                            <label class="asterixStyle">*</label>Yarn/Fabric :
                                        </td>
                                        <td style="width: 250px">
                                            <input id="txtFabric" type="text" placeholder="Type yarn Name & Press Enter" style="width: 205px;" />
                                            <input id="txtFabricID" type="hidden" />
                                            <input type="button" style="width: 40px; float: right;" id="btnFabric" value="Pick" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td style="width: 110px; text-align: right">
                                            Remarks :
                                        </td>
                                        <td colspan="3" style="width: 545px">
                                            @Html.TextBoxFor(model => model.Remarks, new { style = "width: 585px;", id = "txtRemarks" })
                                        </td>                                        
                                    </tr>
                                </table>
                            </div>
                            <div style="width: 25%; float: left; margin-left: 10px;">
                                <div style="text-align: center; padding: 5px;">
                                    <div style="border: thin solid black;">
                                        <img src="@Url.Action("GetThumImage", "DevelopmentRecap", new { id = @Model.TechnicalSheetID })" alt="@Model.StyleNo" style="width:200px; height:210px" />
                                    </div>
                                    <table border="0" cellspacing="0" cellpadding="0" style="font-size: 11px; font-weight: bold;color: #000000;">
                                        <tr>
                                            <td style="width: 200px; text-decoration:bold; text-align: right; ">
                                                <ul>Fig: Style Image</ul>
                                            </td>

                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div title="Factory Wise Detail(s) & Yarn/Fabric Options(s)" style="padding:10px; font-size:12px; font-style:normal;width:95%;">
                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                        <tr>
                            <td style="width:69%">
                                <div style="width:100%; margin-left: 3px; margin-top: 20px; height: 300px;">
                                    <table id="tblDevelopmentRecapDetail" title="Sample Development Factory Wise List" class="easyui-datagrid" style="width:600px; height:95%;" fitcolumns="false" rownumbers="true" singleselect="true" autorowheight="false" toolbar="#toolbar1">
                                        <thead>
                                            <tr>
                                                <th field="FactoryName" width="100" align="left"> Factory Name </th>
                                                <th field="FactoryPersonName" width="120" align="left"> Factory C. Person </th>
                                                <th field="SeekingDateInString" width="100" align="left"> Seeking Date </th>
                                                <th field="ReceivedByName" width="100" align="left">Recive By </th>
                                                <th field="UnitName" width="70" align="center">Unit</th>
                                                <th field="SampleQty" width="80" align="right">Qty</th>
                                            </tr>
                                        </thead>
                                    </table>
                                    <div id="toolbar1">
                                        <label class="asterixStyle">*</label><a id="btnAddDevelopmentRecapDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                        <a id="btnEditDevelopmentRecapDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit </a>
                                        <a id="btnDeleteDevelopmentRecapDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="Delete()">Delete</a>
                                    </div>
                                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; color: #000000;">
                                        <tr>
                                            <td style="width: 420px; text-align: right;"> Total: </td>
                                            <td style="width:120px; text-align: right;"> <label id="lblTotalHistoryQty" style="font-size: 12px; text-align: right; font-weight: bold"> 0 </label> </td>
                                        </tr>
                                    </table>
                                </div>
                            </td>
                            <td style="width:29%">
                                <div style="width: 100%; margin-left: 1px;margin-top: 20px; height: 300px;">
                                    <table id="tblDevelopmentRecapYarnOption" title="Yarn/Fabric Options(s)" class="easyui-datagrid" style="width:400px; height:95%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
                                        <thead>
                                            <tr>
                                                <th field="ProductName" width="260" align="left">Yarn/Fabric Name</th>
                                                <th field="YarnPly" width="70" align="left">Yarn Ply</th>
                                            </tr>
                                        </thead>
                                    </table>
                                    <div id="toolbar" style="text-align: left">
                                        Yarn:<input type="text" style="width:130px" placeholder="Type yarn Name & Press Enter" id="txtProductNameList" />
                                        <a id="btnProduct" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true"></a>
                                        Ply :<input type="text" style="width:80px" id="txtYarnPly" />
                                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" id="btnAddYO" plain="true" onclick="AddDYO()"></a>
                                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" id="btnDeleteYO" plain="true" onclick="DeleteDYO()"></a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div style="width:100%; margin-top:6px; float: left;">
                <fieldset style="height:42px;">
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellspacing="0" cellpadding="0" style="font-size: 11px; font-weight: bold">
                        <tr>
                            <td style="width:90%; text-align: right">
                                <a id="btnNotApproved" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" plain="true" onclick="NotApprove()">Not Approve</a>
                                <a id="btnApproved" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" onclick="Approve()" plain="true">Approved</a>
                            </td>
                            <td style="width:5%">
                                <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            </td>
                            <td style="width: 5%;">
                                <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
    </div>
</body>
</html>

<script type="text/javascript">
    var _sBaseAddress="";
    
    $(document).ready(function () {
        debugger;
        var sOperationType= sessionStorage.getItem("DevHeader");
        var nTechnicalSheetID = sessionStorage.getItem("TSID");
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oDevelopmentTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DevelopmentTypes));        
        var oDevelopmentRecap = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oContactPersonnels = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ContactPersonnels));
        $('#txtUnitPrice').icsCurrencyBox();
        $('#divDR').data('DevelopmentRecap',oDevelopmentRecap);
        $('#divDR').data('DevelopmentRecapDetail',null);
        $('#divDR').data('SelectedYarn',null);
        $('#divDR').data('ContactPersonnels',oContactPersonnels);
        $('#divDR').data('TechnicalSheetSizes',[]);
        $('#divDR').data('Units',[]);
        $('#divDR').data('TotalColorSizeQty',0);
        $('#divDR').data('SelectedIndex',null);
        
        RefreshCboDevelopmentType(oDevelopmentTypes);
        if(nTechnicalSheetID==null )//for re call developmentRecaps
        {
            nTechnicalSheetID = 0;
            sessionStorage.getItem("TSID",0);
        }
        $("#cboContactPersonnels").icsLoadCombo({ List: oContactPersonnels, OptionValue: "ContactPersonnelID", DisplayText: "Name" });
        $('#cboContactPersonnels').val(oDevelopmentRecap.BuyerContactPersonID);
        DynamicRefreshList(oDevelopmentRecap.DevelopmentRecapDetails, "tblDevelopmentRecapDetail");
        DynamicRefreshList(oDevelopmentRecap.DevelopmentYarnOptions, "tblDevelopmentRecapYarnOption");
        RefreshLoadData();
        if (sOperationType == "Add DevelopmentRecap" || sOperationType =="View Development Recap")
        {
            document.getElementById("btnSendingDeadLine").disabled = true;
            document.getElementById("btnSampleSendingDate").disabled = true;
            document.getElementById("btnSampleReceivedDate").disabled = true;
            document.getElementById("btnInquiryReceivedDate").disabled = true;
        }
        
        if(sOperationType =="View Development Recap")
        {
            $('#btnProduct,#btnAddYO,#btnDeleteYO,#btnAddDevelopmentRecapDetail,#btnEditDevelopmentRecapDetail,#btnDeleteDevelopmentRecapDetail,#btnPickMerchandiser').hide();
            $('#btnSave,#btnApproved,#btnNotApproved,#btnFabric,#btnConPersonnel').hide();
            
        }
    });

    function RefreshCboDevelopmentType(oDevelopmentTypes) {
        $("#cboDevelopmentType").icsLoadCombo({
            List: oDevelopmentTypes,
            OptionValue: "DevelopmentTypeID",
            DisplayText: "Name"
            //InitialValue : "Customize"
        });
    }

    function Delete()
    {
        var oDRDetail= $('#tblDevelopmentRecapDetail').datagrid('getSelected');
        if(oDRDetail==null )
        {
            alert("Invalid Selection!!! please select a valid Item!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblDevelopmentRecapDetail').datagrid('getRowIndex',oDRDetail);
        $('#tblDevelopmentRecapDetail').datagrid('deleteRow',SelectedRowIndex);
        RefreshSummary();
    }

    function Approve()
    {
        var oDevelopmentRecap = $('#divDR').data('DevelopmentRecap');
        if(oDevelopmentRecap==null || oDevelopmentRecap.DevelopmentRecapID<=0)
        {
            alert("Sorry there is No Development Recap!");
            return;
        }
        if (!confirm("Confirm to Approved?")) return ;
        //oDevlopmentRecap.OperationBy=nUserID;
        oDevelopmentRecap.ActionTypeExtra = "ApproveDone";
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/DevelopmentRecap/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oDevelopmentRecap),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oDevlopmentRecap= jQuery.parseJSON(data);
                if (oDevlopmentRecap.ErrorMessage=="" && oDevlopmentRecap.DevelopmentStatus==2 )
                {
                    alert("Successfully Approved.");
                    var oDevelopmentRecaps = sessionStorage.getItem("DevelopmentRecaps");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oDevelopmentRecaps != null) {
                        oDevelopmentRecaps = jQuery.parseJSON(oDevelopmentRecaps);
                    }
                    else {
                        oDevelopmentRecaps = [];
                    }
                    if (nIndex != -1) {
                        oDevelopmentRecaps[nIndex] = oDevlopmentRecap;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oDevelopmentRecaps.length);
                        oDevelopmentRecaps.push(_oDevlopmentRecap);
                    }
                    if (parseInt(sessionStorage.getItem("TSID"))== 0) {
                        sessionStorage.setItem("DevelopmentRecaps", JSON.stringify(oDevelopmentRecaps));
                    } else {
                        sessionStorage.setItem("TSBack", "Yes");
                    }
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else
                {
                    alert(oDevlopmentRecap.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });



    }

    function NotApprove()
    {
        var oDevelopmentRecap = $('#divDR').data('DevelopmentRecap');
        if(oDevelopmentRecap==null || oDevelopmentRecap.DevelopmentRecapID<=0)
        {
            alert("Sorry there is No Development Recap!");
            return;
        }
        if (!confirm("Realy Do You Want Not Approve?")) return ;
        oDevelopmentRecap.ActionTypeExtra = "UndoRequest";
        oDevelopmentRecap.StatusExtra = 1;
        oDevelopmentRecap.Note = $("#txtRemarks").val();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/DevelopmentRecap/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oDevelopmentRecap),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oDevlopmentRecap= jQuery.parseJSON(data);
                if (oDevlopmentRecap.ErrorMessage=="" && parseInt(oDevlopmentRecap.DevelopmentStatus)==0 )
                {
                    alert("Successfully Send to Entry User!!");
                    var oDevelopmentRecaps = sessionStorage.getItem("DevelopmentRecaps");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oDevelopmentRecaps != null) {
                        oDevelopmentRecaps = jQuery.parseJSON(oDevelopmentRecaps);
                    }
                    else {
                        oDevelopmentRecaps = [];
                    }
                    if (nIndex != -1) {
                        oDevelopmentRecaps[nIndex] = oDevlopmentRecap;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oDevelopmentRecaps.length);
                        oDevelopmentRecaps.push(_oDevlopmentRecap);
                    }
                    if (parent(sessionStorage.getItem("TSID")) == 0) {
                        sessionStorage.setItem("DevelopmentRecaps", JSON.stringify(oDevelopmentRecaps));
                    } else {
                        sessionStorage.setItem("TSBack", "Yes");
                    }
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else
                {
                    alert(_oDevlopmentRecap.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }
    //Merchandiser Part
    $("#txtMerChandiserName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtMerChandiserName').val())==null || $('#txtMerChandiserName').val()=="")
            {
                alert("Please Type Merchandiser Name and Press Enter.");
                $('#txtMerChandiserName').focus();
                return;
            }
            GetEmployees();
        }else if (code == 8) //backspace=8
        {
            //debugger;
            var txtMerChandiserName = document.getElementById("txtMerChandiserName");
            txtMerChandiserName.style.color = "black";
            txtMerChandiserName.style.fontWeight = "normal";
            document.getElementById("txtMerchandiserID").value = 0;

        }
    });
    $("#btnPickMerchandiser").click(function () {
        GetEmployees();
    });
   
    function GetEmployees()
    {
        var oEmployee = { 
            Name : $('#txtMerChandiserName').val(),
            EmployeeTypeID : 23 //Here 23 Means EnumEmployeeType : Merchandiser = 23
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "EmployeeSearchByName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Merchandiser Name", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContactNo", title: "Contact No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "PresentAddress", title: "Address", width: 150, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winMerchandiserPicker',
                        winclass: 'clsMerchandiser',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblMerchandisersPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Merchandiser List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }
        });
    }

    //Fabric Part
    $("#txtFabric").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oFabric = { Parameter: document.getElementById('txtFabric').value + '~' + "4,5,6" };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oFabric,
                ControllerName: "Product",
                ActionName: "ProductSearchByNameCatetgory",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ProductID > 0) {
                        var tblColums = []; var oColumn = { field: "NameCode", title: "Fabric Name", width: 300, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winFabricPicker',
                            winclass: 'clsFabricPicker',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblFabricPicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'NameCode',
                            windowTittle: 'Fabric List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiple return
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                }
            });
        }
    });
    $("#btnFabric").click(function () {
        var oFabric = { Parameter: "" + '~' + "4,5,6" };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oFabric,
            ControllerName: "Product",
            ActionName: "ProductSearchByNameCatetgory",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = []; var oColumn = { field: "NameCode", title: "Fabric Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winFabricPicker',
                        winclass: 'clsFabricPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblFabricPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Fabric List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }
        });

    });
    $('#txtFabric').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            var txtFabric = document.getElementById("txtFabric");
            txtFabric.style.color = "black";
            txtFabric.style.fontWeight = "normal";
            document.getElementById("txtFabricID").value = 0;
        }
    });

    //Product Part
    $("#txtProductNameList").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtProductNameList').val())==null || $.trim($('#txtProductNameList').val())=="")
            {
                alert("Type Product Name and Press Enter");
                $('#txtProductNameList').focus();
                return;
            }
            GetYarns();
            
        }else if (code == 8) //backspace=8
        {
            //debugger;
            var txtProductNameList = document.getElementById("txtProductNameList");
            txtProductNameList.style.color = "black";
            txtProductNameList.style.fontWeight = "normal";
            $('#divDR').data('SelectedYarn',null);
        }
    });
    $("#btnProduct").click(function () {
        GetYarns();
    });
  
    function GetYarns()
    {
        var oProduct = { BUID: sessionStorage.getItem('BUID'),ProductName:$.trim($('#txtProductNameList').val())};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "DevelopmentRecap",
            ActionName: "GetYarnCategory",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = []; var oColumn = { field: "NameCode", title: "Product Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }
        });
    }


    $('#btnSampleReceivedDate').click(function (e) {
        //debugger;
        var dSampleReceivedDate = $('#txtSampleReceivedDate').datebox('getValue');
        if (dSampleReceivedDate == null || dSampleReceivedDate == "") {
            alert("Please Pick Sample Received Date!");
            $('#txtSampleReceivedDate').focus();
            return false;
        }
        var oDevelopmentRecap = $('#divDR').data('DevelopmentRecap');
        if (oDevelopmentRecap == null || parseInt(oDevelopmentRecap.DevelopmentRecapID) <= 0) {
            alert('Invalid Development Recap!');
            return false;
        }
        var oDevelopmentRecap = {
            DevelopmentRecapID: oDevelopmentRecap.DevelopmentRecapID,
            SampleReceivedDate: $('#txtSampleReceivedDate').datebox('getValue')
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/DevelopmentRecap/UpdateSampleReceivedDate",
            traditional: true,
            data: JSON.stringify(oDevelopmentRecap),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
               var oDevelopmentRecap = jQuery.parseJSON(data);
               if (oDevelopmentRecap.DevelopmentRecapID > 0) {
                   var oTempDevelopmentRecap = $('#divDR').data('DevelopmentRecap');
                   oTempDevelopmentRecap.SampleReceivedDate = oDevelopmentRecap.SampleReceivedDate;
                   oTempDevelopmentRecap.SampleReceivedDateInString = oDevelopmentRecap.SampleReceivedDateInString;
                   $('#divDR').data('DevelopmentRecap',oTempDevelopmentRecap);
                    alert("Update sucessfully");
                }
                else {
                    alert(oDevelopmentRecap.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });
    $('#btnSendingDeadLine').click(function (e) {
        //debugger;
        var dSampleSendingDate = $('#txtSendingDeadLine').datebox('getValue');
        if (dSampleSendingDate == null || dSampleSendingDate == "") {
            alert("Please Pick Sample Sending Date!");
            $('#txtSendingDeadLine').focus();
            return false;
        }
        var oDevelopmentRecap = $('#divDR').data('DevelopmentRecap');
        if (oDevelopmentRecap == null || parseInt(oDevelopmentRecap.DevelopmentRecapID) <= 0) {
            alert('Invalid Development Recap!');
            return false;
        }

        var oDevelopmentRecap = {
            DevelopmentRecapID: oDevelopmentRecap.DevelopmentRecapID,
            SendingDeadLine: $('#txtSendingDeadLine').datebox('getValue')
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/DevelopmentRecap/UpdateSendingDeadLine",
            traditional: true,
            data: JSON.stringify(oDevelopmentRecap),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
              var  oDevelopmentRecap = jQuery.parseJSON(data);
              if (oDevelopmentRecap.DevelopmentRecapID > 0) {
                  var oTempDevelopmentRecap = $('#divDR').data('DevelopmentRecap');
                  oTempDevelopmentRecap.SendingDeadLine = oDevelopmentRecap.SendingDeadLine;
                  oTempDevelopmentRecap.SendingDeadLineInString = oDevelopmentRecap.SendingDeadLineInString;
                  $('#divDR').data('DevelopmentRecap',oTempDevelopmentRecap);
                    alert("Update sucessfully");
                }
                else {
                    alert(oDevelopmentRecap.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });
    $('#btnSampleSendingDate').click(function (e) {
        //debugger;
        var dSampleSendingDate = $('#txtSampleSendingDate').datebox('getValue');
        if (dSampleSendingDate == null || dSampleSendingDate == "") {
            alert("Please Pick Sample Sending Date!");
            $('#txtSampleSendingDate').focus();
            return false;
        }
        var oDevelopmentRecap = $('#divDR').data('DevelopmentRecap');
        if (oDevelopmentRecap == null || parseInt(oDevelopmentRecap.DevelopmentRecapID) <= 0) {
            alert('Invalid Development Recap!');
            return false;
        }

        if (oDevelopmentRecap.SampleReceivedDateInString == null || oDevelopmentRecap.SampleReceivedDateInString == "") {
            alert("Please Update Sample Received Date Before Sample Sending!");
            $('#txtSampleReceivedDate').focus();
            return false;
        }
        var oDevelopmentRecap = {
            DevelopmentRecapID: oDevelopmentRecap.DevelopmentRecapID,
            SampleSendingDate: $('#txtSampleSendingDate').datebox('getValue')
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/DevelopmentRecap/UpdateSampleSendingDate",
            traditional: true,
            data: JSON.stringify(oDevelopmentRecap),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oDevelopmentRecap = jQuery.parseJSON(data);
                if (oDevelopmentRecap.DevelopmentRecapID > 0) {
                    var oTempDevelopmentRecap = $('#divDR').data('DevelopmentRecap');
                    oTempDevelopmentRecap.SampleSendingDate = oDevelopmentRecap.SampleSendingDate;
                    oTempDevelopmentRecap.SampleSendingDateInString = oDevelopmentRecap.SampleSendingDateInString;
                    $('#divDR').data('DevelopmentRecap',oTempDevelopmentRecap);
                    alert("Update sucessfully");
                }
                else {
                    alert(oDevelopmentRecap.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });
    $('#btnInquiryReceivedDate').click(function (e) {
        //debugger;
        var dInquiryReceivedDate = $('#txtInquiryReceivedDate').datebox('getValue');
        if (dInquiryReceivedDate == null || dInquiryReceivedDate == "") {
            alert("Please Pick Inquiry Received Date!");
            $('#txtInquiryReceivedDate').focus();
            return false;
        }
        var oDevelopmentRecap = $('#divDR').data('DevelopmentRecap');
        if (oDevelopmentRecap == null || parseInt(oDevelopmentRecap.DevelopmentRecapID) <= 0) {
            alert('Invalid Development Recap!');
            return false;
        }
        var oDevelopmentRecap = {
            DevelopmentRecapID: oDevelopmentRecap.DevelopmentRecapID,
            InquiryReceivedDate: $('#txtInquiryReceivedDate').datebox('getValue')
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/DevelopmentRecap/UpdateInquiryReceivedDate",
            traditional: true,
            data: JSON.stringify(oDevelopmentRecap),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oDevelopmentRecap = jQuery.parseJSON(data);
                if (oDevelopmentRecap.DevelopmentRecapID > 0) {
                    var oTempDevelopmentRecap = $('#divDR').data('DevelopmentRecap');
                    oTempDevelopmentRecap.InquiryReceivedDate = oDevelopmentRecap.InquiryReceivedDate;
                    oTempDevelopmentRecap.InquiryReceivedDateInString = oDevelopmentRecap.InquiryReceivedDateInString;
                    $('#divDR').data('DevelopmentRecap',oTempDevelopmentRecap);
                    alert("Update sucessfully");
                }
                else {
                    alert(oDevelopmentRecap.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    //Save Development Recap
    $('#btnSave').click(function (e) {
        debugger;
        if (!ValidateInput()) return;
        var oDevelopmentRecap = RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/DevelopmentRecap/Save",
            traditional: true,
            data: JSON.stringify(oDevelopmentRecap),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var oDevelopmentRecap = jQuery.parseJSON(data);
                if (oDevelopmentRecap != null) {
                    if (oDevelopmentRecap.ErrorMessage == "") {
                        alert("Data Saved sucessfully");
                        var oDevelopmentRecaps = sessionStorage.getItem("DevelopmentRecaps");
                        var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                        if (oDevelopmentRecaps != null) {
                            oDevelopmentRecaps = jQuery.parseJSON(oDevelopmentRecaps);
                        }
                        else {
                            oDevelopmentRecaps = [];
                        }
                        if (nIndex != -1) {
                            oDevelopmentRecaps[nIndex] = oDevelopmentRecap;
                        }
                        else {
                            sessionStorage.setItem("SelectedRowIndex", oDevelopmentRecaps.length);
                            oDevelopmentRecaps.push(oDevelopmentRecap);
                        }
                        if (parseInt(sessionStorage.getItem("TSID")) == 0) {
                            sessionStorage.setItem("DevelopmentRecaps", JSON.stringify(oDevelopmentRecaps));
                        } else {
                            sessionStorage.setItem("TSBack", "Yes");
                        }
                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                    else {
                        alert(oDevelopmentRecap.ErrorMessage);
                    }
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });

    });

    function IntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            PickerEvents(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                PickerEvents(oPickerobj);
            }
        });
    }
    function PickerEvents(oPickerobj)
    {
        var oreturnobj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winclass == 'clsMerchandiser') {
            if (oreturnobj != null && oreturnobj.EmployeeID > 0) {
                var txtMerchandiserName = document.getElementById("txtMerChandiserName");
                txtMerchandiserName.value = oreturnobj.Name;
                txtMerchandiserName.style.color = "blue";
                txtMerchandiserName.style.fontWeight = "bold";
                document.getElementById("txtMerchandiserID").value = oreturnobj.EmployeeID;
                $('#txtMerChandiserName').focus();
            }
        } else if (oPickerobj.winclass == 'clsFabricPicker') {
            //debugger;
            if (oreturnobj != null && oreturnobj.ProductID > 0) {
                var txtProductName = document.getElementById("txtFabric");
                txtProductName.value = oreturnobj.ProductName + '[' + oreturnobj.ProductCode + ']';
                txtProductName.style.color = "blue";
                txtProductName.style.fontWeight = "bold";
                document.getElementById("txtFabricID").value = oreturnobj.ProductID;
                $('#divDR').data('DevelopmentRecap').UnitID = oreturnobj.MesurementUnitID;
                $('#txtFabric').focus();
            }
        
        } else if (oPickerobj.winclass == 'clsProductPicker') {
            //debugger;
            if (oreturnobj != null && oreturnobj.ProductID > 0) {
                var txtProductName = document.getElementById("txtProductNameList");
                txtProductName.value = oreturnobj.ProductName;
                txtProductName.style.color = "blue";
                txtProductName.style.fontWeight = "bold";
                $('#divDR').data('SelectedYarn',oreturnobj);
                $('#txtProductNameList').focus();
            }
        
        }
    }

    function RefreshLoadData() {
        //debugger;
        var sOperationType = sessionStorage.getItem("DevHeader");
        if(sOperationType=="Approve Development Recap")
        {
            $('#btnApproved').show();
            $('#btnNotApproved').show();
            $('#btnSave').hide();
        }else{
            $('#btnSave').show();
            $('#btnApproved').hide();
            $('#btnNotApproved').hide();
        }
        var oDevelopmentRecap = $('#divDR').data('DevelopmentRecap');
        $('#txtUnitPrice').val(icsFormatPrice(parseFloat(oDevelopmentRecap.UnitPrice)));   
        $('#txtInquiryReceivedDate').datebox('setValue',oDevelopmentRecap.InquiryReceivedDateInString);
        $('#txtSampleReceivedDate').datebox('setValue',oDevelopmentRecap.SampleReceivedDateInString);
        $('#txtSampleSendingDate').datebox('setValue',oDevelopmentRecap.SampleSendingDateInString);
        $('#txtSendingDeadLine').datebox('setValue', oDevelopmentRecap.SendingDeadLineInString);
        document.getElementById("txtCount").value = oDevelopmentRecap.Count;
        document.getElementById("cboTransportType").selectedIndex = oDevelopmentRecap.TransportType;
        $('#cboDevelopmentType').val(oDevelopmentRecap.DevelopmentType);
        if (parseInt(oDevelopmentRecap.MerchandiserID) > 0) {
            var txtMerChandiserName = document.getElementById("txtMerChandiserName");
            txtMerChandiserName.value = oDevelopmentRecap.MerchandiserName;
            txtMerChandiserName.style.color = "blue";
            txtMerChandiserName.style.fontWeight = "bold";
            document.getElementById("txtMerchandiserID").value = oDevelopmentRecap.MerchandiserID;
        }
        if (parseInt(oDevelopmentRecap.YarnCategoryID) > 0) {
            var txtFabric = document.getElementById("txtFabric");
            txtFabric.value = oDevelopmentRecap.YarnName;
            txtFabric.style.color = "blue";
            txtFabric.style.fontWeight = "bold";
            document.getElementById("txtFabricID").value = oDevelopmentRecap.YarnCategoryID;
        }
        RefreshSummary();
    }

    function RefreshSummary()
    {
        var oDRD = $('#tblDevelopmentRecapDetail').datagrid('getRows');
        var nTotalQty = 0;
        for (var i = 0; i < oDRD.length; i++)
        {
            nTotalQty += parseFloat(oDRD[i].SampleQty);
            nTotalQty = parseFloat(nTotalQty);
        }
        document.getElementById("lblTotalHistoryQty").innerHTML = nTotalQty;
    }

    function ValidateInput() {
        if (document.getElementById("txtBuyerID").value == "") {
            alert("Invalid Development Recap! Please Try Again.");
            $('#divDevelopmentRecap').tabs('select',0);
            return false;
        }
        var cboSeasons = document.getElementById("cboSeasons");
        var sSeasons = cboSeasons.options[cboSeasons.selectedIndex].value;
        if (sSeasons == null || parseInt(sSeasons) <= 0) {
            alert('Please Select Seasons!');
            $('#cboSeasons').focus();
            $('#divDevelopmentRecap').tabs('select',0);
            return false;
        }
        var oDevelopmentRecap = $('#divDR').data('DevelopmentRecap');
        if (oDevelopmentRecap.TechnicalSheetID <= 0) {
            alert("Invalid Development Recap! Please Try Again.");
            $('#divDevelopmentRecap').tabs('select',0);
            return false;
        }
       

        if (document.getElementById("txtFabricID").value == 0 || document.getElementById("txtFabric").value == "") {
            alert("Please Pick Fabric !");
            $('#txtFabric').focus();
            $('#divDevelopmentRecap').tabs('select',0);
            return false;
        }    
        if (parseInt($('#cboDevelopmentType').val())<=0) {
            alert("Please select Development Type!");
            $('#divDevelopmentRecap').tabs('select',0);
            return false;
        }

        var cboTransportType = document.getElementById("cboTransportType");
        if (cboTransportType.options[cboTransportType.selectedIndex].text == "None") {
            alert("Please select Transport Type!");
            $('#divDevelopmentRecap').tabs('select',0);
            return false;
        }

        var cboContactPersonnels = document.getElementById("cboContactPersonnels");
        if (cboContactPersonnels.options[cboContactPersonnels.selectedIndex].value <= 0) {
            alert("Please select Contact Person!");
            $('#cboContactPersonnels').focus();
            $('#divDevelopmentRecap').tabs('select',0);
            return false;
        }
        if (document.getElementById("txtMerChandiserName").value == null || document.getElementById("txtMerChandiserName").value == "") {
            alert('Please Select a Merchandiser');
            $('#divDevelopmentRecap').tabs('select',0);
            return false;
        }

       
        var oDevelopmentRecaps = $('#tblDevelopmentRecapDetail').datagrid('getRows');
        if (oDevelopmentRecaps == null)
        {
            alert("Please pick at least one Development Recap Detail !.");
            $('#divDevelopmentRecap').tabs('select',1);
            return false;
        }
        if (oDevelopmentRecaps.length <= 0) {
            alert("Please pick at least one Development Recap Detail !.");
            $('#divDevelopmentRecap').tabs('select',1);
            return false;
        }

        if (sessionStorage.getItem("DevHeader")!= "Add DevelopmentRecap") {
            var sInquiryReceivedDate = $('#txtInquiryReceivedDate').datebox('getValue');
            if (sInquiryReceivedDate == null || sInquiryReceivedDate == "") {
                alert("Please Up InquiryReceivedDate!");
                $('#txtInquiryReceivedDate').focus();
                $('#divDevelopmentRecap').tabs('select',0);
                return false;
            }

            var sSendingDeadLine = $('#txtSendingDeadLine').datebox('getValue');
            var dInquiryReceivedDate = new Date(sInquiryReceivedDate);
            if (sSendingDeadLine != null || sSendingDeadLine != "") {
                var dSendingDeadLine = new Date(sSendingDeadLine);
                if (dSendingDeadLine <= dInquiryReceivedDate) {
                    alert("Sending Date Line Must be Grater Then Inquiry Received Date!");
                    $('#txtSendingDeadLine').focus();
                    $('#divDevelopmentRecap').tabs('select',0);
                    return false;
                }
            }

            if (oDevelopmentRecap.InquiryReceivedDateInString == null || oDevelopmentRecap.InquiryReceivedDateInString == "") {
                alert("Please Update Inquiry Received Date!");
                $('#txtSendingDeadLine').focus();
                return false;
            }

            var dSendingDeadLine = new Date(oDevelopmentRecap.SendingDeadLineInString);
            if (dSendingDeadLine <= dInquiryReceivedDate) {
                alert("Please Update Sending Dead Line!");
                $('#txtSendingDeadLine').focus();
                $('#divDevelopmentRecap').tabs('select',0);
                return false;
            }
            if ($('#cboCurrency').val() === null ||  parseInt($('#cboCurrency').val()) <=0) {
                alert("Please select Currency!");
                $('#cboCurrency').focus();
                return false;
            }
        }
        return true;
    }
    function RefreshObject() {

        var cboSeasons = document.getElementById("cboSeasons");
        var nBusinessSessionID = cboSeasons.options[cboSeasons.selectedIndex].value;
        var cboTransportTypes = document.getElementById("cboTransportType");
        var nTransPortTypeID = cboTransportTypes.options[cboTransportTypes.selectedIndex].value;
        var cboContactPersonnels = document.getElementById("cboContactPersonnels");
        var nBuyerContctPersonalID = cboContactPersonnels.options[cboContactPersonnels.selectedIndex].value
        var oDevelopmentRecap = $('#divDR').data('DevelopmentRecap');
        var oTempDevelopmentRecap = {
            DevelopmentRecapID: oDevelopmentRecap.DevelopmentRecapID,
            BusinessSessionID: nBusinessSessionID,
            DevelopmentRecapNo: oDevelopmentRecap.DevelopmentRecapNo,
            TechnicalSheetID: oDevelopmentRecap.TechnicalSheetID,
            DevelopmentStatusInInt:oDevelopmentRecap.DevelopmentStatusInInt,
            DevelopmentType : parseInt($('#cboDevelopmentType').val()),
            InquiryReceivedDate: $('#txtInquiryReceivedDate').datebox('getValue'),
            GG: $("#txtGG").val(),
            SampleQty: document.getElementById("lblTotalHistoryQty").innerHTML,
            SampleReceivedDate: $('#txtSampleReceivedDate').datebox('getValue'),
            SampleSendingDate: $('#txtSampleSendingDate').datebox('getValue'),
            SendingDeadLine: $('#txtSendingDeadLine').datebox('getValue'),
            SpecialFinish: $("#txtSpecialFinish").val(),
            MerchandiserID: $("#txtMerchandiserID").val(),
            TransportType: nTransPortTypeID,
            YarnCategoryID: $("#txtFabricID").val(),
            UnitID: oDevelopmentRecap.UnitID,
            BuyerContactPersonID: nBuyerContctPersonalID,
            AwbNo: $("#txtAwbNo").val(),
            Weight: $("#txtWeight").val(),
            CollectionName: $("#txtCollectionName").val(),
            Remarks: $("#txtRemarks").val(),
            Count: $("#txtCount").val(),
            UnitPrice: parseFloat(icsRemoveComma($('#txtUnitPrice').val())),
            CurrencyID : parseInt($('#cboCurrency').val()),
            BUID:sessionStorage.getItem("BUID"),
            DevelopmentRecapDetails: $('#tblDevelopmentRecapDetail').datagrid('getRows'),
            DevelopmentYarnOptions: $('#tblDevelopmentRecapYarnOption').datagrid('getRows')
        };
        return oTempDevelopmentRecap;
    }

    function ValidateInputForDYO() {
        var oSelectedYarn= $('#divDR').data('SelectedYarn');
        if (oSelectedYarn == null) 
        {
            alert("Please Select Yarn/Fabrics!.");
            return false;
        }

        if (oSelectedYarn.ProductID <= 0) {
            alert("Please Select Yarn/Fabrics!.");
            return false;
        }

        var oDevelopmentYarnOptions = $('#tblDevelopmentRecapYarnOption').datagrid('getRows');
        for (var i = 0; i < oDevelopmentYarnOptions.length; i++) {
            if (oDevelopmentYarnOptions[i].YarnCategoryID == oSelectedYarn.ProductID)
            {
                alert("Your selected Yarn/Fabric already exists!.");
                return false;
            }
        }

        return true;
    }
    function AddDYO() {
        //debugger;
        if (!ValidateInputForDYO()) return;
        var oDevelopmentYarnOption = RefreshObjectForDYO();
        var oDevelopmentYarnOptions = $('#tblDevelopmentRecapYarnOption').datagrid('getRows');
        oDevelopmentYarnOptions.push(oDevelopmentYarnOption);
        DynamicRefreshList(oDevelopmentYarnOptions, "tblDevelopmentRecapYarnOption");
        $('#divDR').data('SelectedYarn',null);
        var txtProductNameList = document.getElementById("txtProductNameList");
        txtProductNameList.style.color = "black";
        txtProductNameList.style.fontWeight = "normal";
        txtProductNameList.value = '';
        $("#txtYarnPly").val('');
        $('#txtProductNameList').focus();
    }
    function RefreshObjectForDYO() {
        var oDevelopmentYarnOption = {
            DevelopmentRecapDetailID: 0,
            DevelopmentRecapID:$('#divDR').data('DevelopmentRecap').DevelopmentRecapID,
            YarnCategoryID: $('#divDR').data('SelectedYarn').ProductID,
            Note: "",
            ProductName: $("#txtProductNameList").val(),
            YarnPly: $("#txtYarnPly").val()
        }

        return oDevelopmentYarnOption;
    }
    function DeleteDYO() {
        //debugger;
        var oDYO = $('#tblDevelopmentRecapYarnOption').datagrid('getSelected');
        if (!confirm("Confirm to Delete?")) return;

        if (oDYO == null || oDYO.YarnCategoryID <= 0) {
            alert("Invalid Selection!!! please select a valid Item!");
            return false;
        }
        var SelectedRowIndex = $('#tblDevelopmentRecapYarnOption').datagrid('getRowIndex', oDYO);
        $('#tblDevelopmentRecapYarnOption').datagrid('deleteRow', SelectedRowIndex);
    }
  
    function Close()
    {
        window.location.href = sessionStorage.getItem("BackLink");
    }

    //Development Recap detail Add
    $("#btnAddDevelopmentRecapDetail").click(function () {
        var oDevelopmentRecapDetail = RefreshNewDRDetail();
        $('#divDR').data('DevelopmentRecapDetail',oDevelopmentRecapDetail);
        $("#winDevelopmentRecapDetail").icsWindow('open', "Add Development Recap Detail");
        $("#winDevelopmentRecapDetail input").val("");
        $("#winDevelopmentRecapDetail select").val(0);
        GetSizeAndUnits('Add');
        RefreshControl(oDevelopmentRecapDetail,'Add');
    });
    $("#btnEditDevelopmentRecapDetail").click(function () {
        var oDevelopmentRecapDetail = $('#tblDevelopmentRecapDetail').datagrid('getSelected');
        if (oDevelopmentRecapDetail == null)
        {
            alert("Please select a valid Item!");
            return false;
        }
        var nSelectedIndex = $('#tblDevelopmentRecapDetail').datagrid('getRowIndex', oDevelopmentRecapDetail);
        $('#divDR').data('SelectedIndex',nSelectedIndex);
        $('#divDR').data('DevelopmentRecapDetail',oDevelopmentRecapDetail);
        $("#winDevelopmentRecapDetail").icsWindow('open', "Edit Development Recap Detail");
        $("#winDevelopmentRecapDetail input").val("");
        $("#winDevelopmentRecapDetail select").val(0);
        GetSizeAndUnits('Edit');
    });
    

    //Pick Factory
    $("#txtFactoryName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtFactoryName').val())==null || $.trim($('#txtFactoryName').val())=="")
            {
                alert("Type Buyer and Press enter");
                return;
            }
            GetFactorys();
        }else  if (code == 8) //backspace=8   
        {
            //debugger;
            var txtFactoryName = document.getElementById("txtFactoryName");
            txtFactoryName.style.color = "black";
            txtFactoryName.style.fontWeight = "normal";
            document.getElementById("txtFactoryID").value = 0;
            var nFactoryID = $('#txtFactoryID').val();
            GetContactPersonnel(nFactoryID);
        }
    });
    $("#btnFactoryPicker").click(function () {
        GetFactorys();
    });
   
    function GetFactorys()
    {
        var oContractor = { Params: '3' + '~' + $.trim($('#txtFactoryName').val())+'~'+sessionStorage.getItem("BUID")};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 150, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winFactorys',
                        winclass: 'clsFactory',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblFactorys',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Factory List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDetailPickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    //Pick Receive By
    $("#txtRecivedBy").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtRecivedBy').val())==null || $('#txtRecivedBy').val()=="")
            {
                alert("Please Type Receive By and Press Enter.");
                $('#txtRecivedBy').focus();
                return;
            }
            GetReceiveBy();
        }else  if (code == 8) //backspace=8   
        {
            //debugger;
            var txtRecivedBy = document.getElementById("txtRecivedBy");
            txtRecivedBy.style.color = "black";
            txtRecivedBy.style.fontWeight = "normal";
            document.getElementById("txtReceivedByID").value = 0;

        }
    });
    $("#btnPickReceiveBy").click(function () {
        GetReceiveBy();
    });
   
    function GetReceiveBy()
    {
        debugger;       
        var oEmployee = { 
            Name : $('#txtRecivedBy').val(),
            EmployeeTypeID : 23 //Here 23 Means EnumEmployeeType : Merchandiser = 23
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmployeeNameType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {
                    var tblColums = []; var oColumn = { field: "Name", title: "Employee Name", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ContactNo", title: "Contact No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "PresentAddress", title: "Address", width: 150, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winReceiveBy',
                        winclass: 'clsReceiveBy',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblReceiveBy',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Receive List List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDetailPickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }
        });
    }

    //Color Pick
    $("#btnPickColor").click(function () {
        var nTechnicalSheetID = document.getElementById("txtTechnicalSheetID").value;
        if (nTechnicalSheetID == null || parseInt(nTechnicalSheetID)<= 0) {
            alert("Please Select Style No");
            return;
        }
        var oTechnicalSheet = { TechnicalSheetID: nTechnicalSheetID };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oTechnicalSheet,
            ControllerName: "TechnicalSheet",
            ActionName: "GetTechnicalSheetColors",
            IsWinClose: false
        };
        $.icsDataGet(obj, function (response) {
            debugger;
            if (response.status && response.obj!=null) {
                if (response.obj.TechnicalSheetColors.length > 0) {
                    var tblColums = []; var oColumn = { field: "ColorName", title: "Color Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winTSColor',
                        winclass: 'clsTSColor',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblTSColor',
                        tablecolumns: tblColums,
                        datalist: response.obj.TechnicalSheetColors,
                        multiplereturn: true,
                        searchingbyfieldName: 'ColorName',
                        windowTittle: 'Technical Color List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDetailPickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });

    });
    //Delete Color
    $("#btnDeleteColor").click(function () {
        endEditing();
        var oDRCSR = $('#tblDevelopmentRecapSizeColorRatio').datagrid('getSelected');
        var SelectedRowIndex = 0;
        if (oDRCSR == null) {
            alert("Please select a item from list!");
            return;
        }
        else {
            SelectedRowIndex = $('#tblDevelopmentRecapSizeColorRatio').datagrid('getRowIndex', oDRCSR);
            if (!confirm("Confirm to Delete?")) return;
            $('#tblDevelopmentRecapSizeColorRatio').datagrid('deleteRow', SelectedRowIndex);
            alert("Delete Sucessfully");
        }
    });
    

    //Detail SAve 
    $("#btnSaveDevDetail").click(function () {
        debugger;
        endEditing();
        if (!ValidateColorSizeInput()) return;
        var oDevelopmentRecapDetail = RefreshDetailObject();
        if (!ExistDevRecapDetail(oDevelopmentRecapDetail))
        {
            $('#tblDevelopmentRecapDetail').datagrid('appendRow', oDevelopmentRecapDetail);
        } else {
            $('#tblDevelopmentRecapDetail').datagrid('updateRow', { index: parseInt($('#divDR').data('SelectedIndex')), row: oDevelopmentRecapDetail });
        }
        RefreshSummary();
        $("#winDevelopmentRecapDetail").icsWindow('close');
    });

    //Detail window close
    $("#btnCloseDevDetail").click(function () {
        $("#winDevelopmentRecapDetail").icsWindow("close");
        
    });

    function IntializeDetailPickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            DetailPickerEvents(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                DetailPickerEvents(oPickerobj);
            }
        });
    }
    function DetailPickerEvents(oPickerobj) {
        var oreturnobj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnobj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }

        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove(); 
        if (oPickerobj.winclass == 'clsFactory') {///Detail Part
            debugger;
            if (oreturnobj != null && oreturnobj.ContractorID > 0) {
                var txtFactoryName = document.getElementById("txtFactoryName");
                txtFactoryName.value = oreturnobj.Name;
                txtFactoryName.style.color = "blue";
                txtFactoryName.style.fontWeight = "bold";
                $("#txtFactoryID").val(oreturnobj.ContractorID);
                var nFactoryID = $('#txtFactoryID').val();
                GetContactPersonnel(nFactoryID);
                $('#txtFactoryName').focus();
            }

        } else if (oPickerobj.winclass == 'clsReceiveBy') {///Detail Part
            //debugger;
            if (oreturnobj != null && oreturnobj.EmployeeID > 0) {
                var txtRecivedBy = document.getElementById("txtRecivedBy");
                txtRecivedBy.value = oreturnobj.Name;
                txtRecivedBy.style.color = "blue";
                txtRecivedBy.style.fontWeight = "bold";
                $("#txtReceivedByID").val(oreturnobj.EmployeeID);
                $('#txtRecivedBy').focus();
            }

        } else if (oPickerobj.winclass == 'clsTSColor') {///Detail Part
            debugger;
            if (oreturnobjs != null && oreturnobjs[0].ColorCategoryID > 0)
            {
                var oColorSizeRatios = $('#tblDevelopmentRecapSizeColorRatio').datagrid('getRows');
                if (oColorSizeRatios == null)
                {
                    oColorSizeRatios = [];
                }
                var oColorSizeRatio=null;
                for(var i =0;i<oreturnobjs.length;i++)
                {
                    if(!IsExists(oreturnobjs[i].ColorCategoryID))
                    {
                        oColorSizeRatio={
                            ColorID   : oreturnobjs[i].ColorCategoryID,
                            ColorName : oreturnobjs[i].ColorName,
                            OrderObjectID1 :0, OrderQty1 : 0, OrderObjectID2 :0, OrderQty2 :0, 
                            OrderObjectID3 :0, OrderQty3 :0,  OrderObjectID4 :0, OrderQty4 :0,
                            OrderObjectID5 :0, OrderQty5 :0, OrderObjectID6 :0, OrderQty6 :0,
                            OrderObjectID7 :0, OrderQty7 :0, OrderObjectID8 :0,  OrderQty8 :0,
                            OrderObjectID9 :0, OrderQty9 :0, OrderObjectID10 :0, OrderQty10 :0,
                            OrderObjectID11 :0, OrderQty11 :0, OrderObjectID12 :0, OrderQty12 :0,
                            OrderObjectID13 :0, OrderQty13 :0, OrderObjectID14 :0, OrderQty14 :0,
                            OrderObjectID15 :0, OrderQty15 :0, OrderObjectID16 :0, OrderQty16 :0,
                            OrderObjectID17 :0, OrderQty17 :0, OrderObjectID18 :0, OrderQty18 :0,
                            OrderObjectID19 :0, OrderQty19 :0, OrderObjectID20 :0, OrderQty20 :0,ColorWiseTotal:0
                        };
                        oColorSizeRatios.push(oColorSizeRatio);
                    }
                }
                RefreshList(oColorSizeRatios);
            }
        
        }
    }

    function RefreshNewDRDetail()
    {
        var oDRD = {
            DevelopmentRecapDetailID: 0,
            DevelopmentRecapID:$('#divDR').data('DevelopmentRecap').DevelopmentRecapID,
            FactoryID : 0,
            FactoryPersonID : 0,
            SeekingDate : new Date(),
            SeekingDateInString:icsdateformat(new Date()),
            ReceivedBy :0,
            UnitID :0,
            SampleQty : 0,
            IsRawmaterialProvide:false,
            FactoryName : "",
            FactoryPersonName : "",
            UnitName : "",
            ReceivedByName : "",
            Note: "",
            ColorSizeRatios: []
        };
        return oDRD;
    }

    function RefreshControl(oDevelopmentRecaDetail,sParam)
    {
        $('#txtSeekingDate').datebox('setValue', oDevelopmentRecaDetail.SeekingDateInString);
        if (sParam=="Edit")
        {
            $('#txtFactoryID').val(oDevelopmentRecaDetail.FactoryID);
            $('#txtFactoryName').val(oDevelopmentRecaDetail.FactoryName);
            var txtFactoryName = document.getElementById("txtFactoryName");
            txtFactoryName.style.color = "blue";
            txtFactoryName.style.fontWeight = "bold";

            $('#txtReceivedByID').val(oDevelopmentRecaDetail.ReceivedBy);
            $('#txtRecivedBy').val(oDevelopmentRecaDetail.ReceivedByName);
            var txtRecivedBy = document.getElementById("txtRecivedBy");
            txtRecivedBy.style.color = "blue";
            txtRecivedBy.style.fontWeight = "bold";
            //DynamicRefreshList(oDevelopmentRecaDetail.ColorSizeRatios, "tblDevelopmentRecapSizeColorRatio");
            RefreshList(oDevelopmentRecaDetail.ColorSizeRatios)
            GetContactPersonnel(oDevelopmentRecaDetail.FactoryID);
        }
    }

    function ExistDevRecapDetail(oDevelopmentRecapDetail)
    {
        var oDevelopmentRecapDetails = $('#tblDevelopmentRecapDetail').datagrid('getRows');
        if (oDevelopmentRecapDetails.length > 0) {
            for (var i = 0; i < oDevelopmentRecapDetails.length; i++) {
                if (oDevelopmentRecapDetails[i].FactoryID == oDevelopmentRecapDetail.FactoryID && oDevelopmentRecapDetail.FactoryID != 0 && oDevelopmentRecapDetails[i].FactoryID != 0) {
                    return true;
                }
            }
        }
        return false;
    }
    function GetSizeAndUnits(sParam)
    {
        var nTechnicalSheetID = document.getElementById("txtTechnicalSheetID").value;
        var nProductID = document.getElementById("txtProductID").value;
        if (nTechnicalSheetID == null || parseInt(nTechnicalSheetID)<= 0) {
            alert("Please Select Style No");
            return;
        }
        if (nProductID == null || parseInt(nProductID)<= 0) {
            alert("Please Select Style No");
            return;
        }
        var oDevelopmentRecapDetail = { TechnicalSheetID: nTechnicalSheetID, ProductID: nProductID };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDevelopmentRecapDetail,
            ControllerName: "DevelopmentRecap",
            ActionName: "GetSizeAndUnits",
            IsWinClose: false
        };
        $.icsDataGet(obj, function (response) {
            debugger;
            if (response.status && response.obj !=null) {
                if (response.obj.TechnicalSheetSizes.length> 0)
                {
                    debugger;
                    var oTechnicalSheetSizes = response.obj.TechnicalSheetSizes;
                    $('#divDR').data('TechnicalSheetSizes',oTechnicalSheetSizes);
                    var oUnits = response.obj.Units;
                    $('#divDR').data('Units',oUnits);
                    MakeSizeColorRationTable(oTechnicalSheetSizes);
                    LoadUnits();
                    if(sParam=='Edit')
                    {
                        RefreshControl($('#divDR').data('DevelopmentRecapDetail'), 'Edit');
                    }
                }
                else {
                    alert(response.obj.ErrorMessage);
                }

            }
        });
    }
    function LoadUnits() {
        debugger;
        var listItems = "<option value='" + 0 + "'>" + "--Select Unit--" + "</option>";
        var oUnits = $('#divDR').data('Units');
        if (oUnits.length > 0) 
        {
            $("#cboUnits").icsLoadCombo({ List: oUnits, OptionValue: "MeasurementUnitID", DisplayText: "UnitName" });
            if (parseInt($('#divDR').data('DevelopmentRecap').UnitID) > 0)
            {
                $("#cboUnits").val($('#divDR').data('DevelopmentRecap').UnitID);
            }
            else {
                $("#cboUnits").val($('#divDR').data('DevelopmentRecapDetail').UnitID);
            }
        }
        else {
            $("#cboUnits").html(listItems);
        }

    }

    function MakeSizeColorRationTable(oTechnicalSheetSizes) {
        debugger;
        var tblColums = [];
        var oColumn = null;
        oColumn = { field: "ColorName", title: "Color Name", width: "120" };
        tblColums.push(oColumn);
        var count = 0;
        for (var i = 0; i < oTechnicalSheetSizes.length; i++) {
            count++;
            oColumn = {
                field: "OrderQty" + count,
                title: oTechnicalSheetSizes[i].SizeCategoryName,
                width: "60",
                align: "right",
                editor: { type: 'numberbox', options: { precision: 0 } }
            };
            tblColums.push(oColumn);

        }
        oColumn = { field: "ColorWiseTotal", title: "Total Qty", width: "100", align: "right" };
        tblColums.push(oColumn);
        $('#tblDevelopmentRecapSizeColorRatio').datagrid({ columns: [tblColums] });

    }
    function RefreshList(oTempColorSizeRatios)
    {
        data = oTempColorSizeRatios;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblDevelopmentRecapSizeColorRatio').datagrid('loadData', data);
        RefreshColorSizeSummary($('#divDR').data('TechnicalSheetSizes'));
    }

    function BuyerConPersonnelPiker()
    {
        var nBuyerID=$('#txtBuyerID').val();
        if(nTSID==null || parseInt(nTSID)<=0)
        {
            alert("Please select Style!");
            return;
        }
        if(parseInt(nBuyerID)<0){alert("Sorry, there is no Buyer.");return;}
        sessionStorage.setItem("ContractorBackTo", "");
        sessionStorage.setItem("SelectedRowIndex", 0);
        sessionStorage.setItem("ContractorHeader", "Add ContactPersonnel");
        window.open(_sBaseAddress+  "/Contractor/ViewContactPersonnel?id="+nBuyerID+"&buid="+sessionStorage.getItem("BUID"),"_blank");
    }
    $('#btnReload').click(function(e){
       var nBuyerID = parseInt($('#txtBuyerID').val());
        var tsv= (new Date().getTime())/1000;
        $.ajax ({
            type: "GET",
            dataType: "json",
            url : _sBaseAddress+  "/OrderRecap/GetContactPersonnel",
            data: {nBuyerID:nBuyerID, ts:tsv  },
            contentType: "application/json; charset=utf-8",
            success: function (data) 
            {
                var  oOrderRecap = jQuery.parseJSON(data);
               var  oContactPersonnels=oOrderRecap.ContactPersonnelList;
                if(oContactPersonnels.length>0)
                {
                    $("#cboContactPersonnels").icsLoadCombo({ List: oContactPersonnels, OptionValue: "ContactPersonnelID", DisplayText: "Name" });
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
        
    });

    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#tblDevelopmentRecapSizeColorRatio').datagrid('validateRow', editIndex)) {
            $('#tblDevelopmentRecapSizeColorRatio').datagrid('endEdit', editIndex);
            $('#tblDevelopmentRecapSizeColorRatio').datagrid('selectRow', editIndex);
            var oCSWRatio = $('#tblDevelopmentRecapSizeColorRatio').datagrid('getSelected');
            if (oCSWRatio != null) {
                oCSWRatio.ColorWiseTotal = parseInt(oCSWRatio.OrderQty1) + parseInt(oCSWRatio.OrderQty2) + parseInt(oCSWRatio.OrderQty3) + parseInt(oCSWRatio.OrderQty4) + parseInt(oCSWRatio.OrderQty5) + parseInt(oCSWRatio.OrderQty6) + parseInt(oCSWRatio.OrderQty7) + parseInt(oCSWRatio.OrderQty8) + parseInt(oCSWRatio.OrderQty9) + parseInt(oCSWRatio.OrderQty10) + parseInt(oCSWRatio.OrderQty11) + parseInt(oCSWRatio.OrderQty12) + parseInt(oCSWRatio.OrderQty13) + parseInt(oCSWRatio.OrderQty14) + parseInt(oCSWRatio.OrderQty15) + parseInt(oCSWRatio.OrderQty16) + parseInt(oCSWRatio.OrderQty17) + parseInt(oCSWRatio.OrderQty18) + parseInt(oCSWRatio.OrderQty19) + parseInt(oCSWRatio.OrderQty20);
                $('#tblDevelopmentRecapSizeColorRatio').datagrid('updateRow', { index: editIndex, row: oCSWRatio });
            }
            RefreshColorSizeSummary($('#divDR').data('TechnicalSheetSizes'));
            editIndex = undefined;
            return true;
        } else {
            return false;
        }
    }

    function onClickRow(index) {
        //debugger;
        if (editIndex != index) {
            if (endEditing()) {
                $('#tblDevelopmentRecapSizeColorRatio').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            } else {
                $('#tblDevelopmentRecapSizeColorRatio').datagrid('selectRow', editIndex);
            }
        }
    }

    function RefreshColorSizeSummary(oTechnicalSheetSizes)
    {
        debugger;
        var sInnerHTML = "<table border='0' cellspacing='2' cellpadding='2' style='font-size:11px; font-weight:bold'><tr>";
        sInnerHTML += "<td style='width:135px; text-align:right'> Total :</td>";
        var count = 0;
        if (oTechnicalSheetSizes != null)
        {
            for (var j = 0;j<oTechnicalSheetSizes.length; j++)
            {
                count++;
                sInnerHTML = sInnerHTML + "<td style='width:56px; text-align:right'>" + SizeWiseTotal(count) + "</td>";
            }
        }
        var nTotalQuantity = SizeWiseTotal(21);
        sInnerHTML += "<td style='width:100px; text-align:right'>" + nTotalQuantity + "</td>";
        sInnerHTML += "</tr></table>";
        //debugger;
        var divTotalSummary = document.getElementById('divTotalSummary');
        divTotalSummary.innerHTML = sInnerHTML;

    }

    function SizeWiseTotal(n) {
        var nSizeWiseTotal = 0;
        var oColorSizeWiseRatios = $('#tblDevelopmentRecapSizeColorRatio').datagrid('getRows');
        for (var i = 0; i < oColorSizeWiseRatios.length; i++) {
            if (n == 1) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty1); }
            else if (n == 1) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty1); }
            else if (n == 2) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty2); }
            else if (n == 3) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty3); }
            else if (n == 4) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty4); }
            else if (n == 5) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty5); }
            else if (n == 6) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty6); }
            else if (n == 7) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty7); }
            else if (n == 8) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty8); }
            else if (n == 9) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty9); }
            else if (n == 10) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty10); }
            else if (n == 11) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty11); }
            else if (n == 12) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty12); }
            else if (n == 13) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty13); }
            else if (n == 14) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty14); }
            else if (n == 15) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty15); }
            else if (n == 16) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty16); }
            else if (n == 17) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty17); }
            else if (n == 18) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty18); }
            else if (n == 19) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty19); }
            else if (n == 20) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].OrderQty20); }
            else if (n == 21) { nSizeWiseTotal = nSizeWiseTotal + parseInt(oColorSizeWiseRatios[i].ColorWiseTotal); }
        }
        return nSizeWiseTotal;
    }

    function IsExists(nColorID) {
        var oColorSizeWiseRatios = $('#tblDevelopmentRecapSizeColorRatio').datagrid('getRows');
        for (var i = 0; i < oColorSizeWiseRatios.length; i++) {
            if (oColorSizeWiseRatios[i].ColorID == nColorID) {
                return true;
            }
        }

        return false;

    }

    function ValidateColorSizeInput() {
        debugger;
        var sFactoryContactPersonID = 0;
        var scboFactoryContactPersonnels = document.getElementById("cboFactoryContactPersonnels");
        if (scboFactoryContactPersonnels.length > 0) {
            sFactoryContactPersonID = scboFactoryContactPersonnels.options[scboFactoryContactPersonnels.selectedIndex].value;
        }
        if (document.getElementById("txtFactoryName").value == null || document.getElementById("txtFactoryName").value == "") {
            if (sFactoryContactPersonID > 0) {
                alert("Without Factory, Contact Person can't Select.");
                return false;
            }
        } else {
            if (sFactoryContactPersonID <= 0) {
                alert("Please Select Factory Person ");
                return false;
            }

        }

        var scboUnits = document.getElementById("cboUnits");
        var nUnitID = scboUnits.options[scboUnits.selectedIndex].value;
        if (nUnitID <= 0) {
            alert("Please Select Unit!");
            $('#cboUnits').focus();
            return false;
        }

        var oDevelopmentRecapDetails = $('#tblDevelopmentRecapSizeColorRatio').datagrid('getRows');
        if (oDevelopmentRecapDetails.length <= 0) {
            alert("You can Not Insert without Color and Size Breakdown!.");
            return false;
        }

        if (oDevelopmentRecapDetails.length > 0)
        {
            
            var nTotalColorSizeQty = 0;
            for (var i = 0; i < oDevelopmentRecapDetails.length; i++)
            {
                if (oDevelopmentRecapDetails[i].ColorWiseTotal <= 0)
                {
                    nTotalColorSizeQty = 0;
                    alert('Please Insert a valid Quantity for  Color -' + oDevelopmentRecapDetails[i].ColorName + ' !!');
                    $('#tblDevelopmentRecapSizeColorRatio').datagrid('selectRow', i);
                    return false;
                }
                nTotalColorSizeQty += parseFloat(oDevelopmentRecapDetails[i].ColorWiseTotal);
                parseFloat(nTotalColorSizeQty);
            }
            $('#divDR').data('TotalColorSizeQty',nTotalColorSizeQty);
        }
        return true;
    }

    function RefreshDetailObject() {
        var nFactoryPersonID = 0;
        var sFactoryPersonName = "";
        var scboFactoryContactPersonnels = document.getElementById("cboFactoryContactPersonnels");
        if (scboFactoryContactPersonnels.length > 0) {
            nFactoryPersonID = scboFactoryContactPersonnels.options[scboFactoryContactPersonnels.selectedIndex].value;
            sFactoryPersonName = scboFactoryContactPersonnels.options[scboFactoryContactPersonnels.selectedIndex].text;

        }

        if (nFactoryPersonID == 0) {
            sFactoryPersonName = "";
        }
        var scboUnits = document.getElementById("cboUnits");
        var nUnitID = scboUnits.options[scboUnits.selectedIndex].value;
        var sUnitName = scboUnits.options[scboUnits.selectedIndex].text;

        var oDevelopmentRecapDetail = {
            DevelopmentRecapDetailID: $('#divDR').data('DevelopmentRecapDetail').DevelopmentRecapDetailID,
            DevelopmentRecapID: $('#divDR').data('DevelopmentRecapDetail').DevelopmentRecapID,
            FactoryID: $('#txtFactoryID').val(),
            FactoryPersonID: nFactoryPersonID,
            SeekingDate: $('#txtSeekingDate').datetimebox('getValue'),
            SeekingDateInString: $('#txtSeekingDate').datetimebox('getValue'),
            ReceivedBy: $('#txtReceivedByID').val(),
            UnitID: nUnitID,
            SampleQty: parseFloat($('#divDR').data('TotalColorSizeQty')),
            IsRawmaterialProvide: false,
            FactoryName: $('#txtFactoryName').val(),
            FactoryPersonName: sFactoryPersonName,
            UnitName: sUnitName,
            ReceivedByName: $('#txtRecivedBy').val(),
            ColorSizeRatios: $('#tblDevelopmentRecapSizeColorRatio').datagrid('getRows')
        };
        return oDevelopmentRecapDetail;
    }

    function GetContactPersonnel(nFactoryID) {
        debugger;
        var listItems = "<option value='" + 0 + "'>" + "--Select Contact Person--" + "</option>";
        var oContactPersonnel = {ContractorName:nFactoryID};
        $.ajax
             ({
                 type: "POST",
                 dataType: "json",
                 url: _sBaseAddress + "/ContractorPersonal/GetsByContractors",
                 traditional: true,
                 data: JSON.stringify(oContactPersonnel),
                 contentType: "application/json; charset=utf-8",
                 success: function (data) {
                     ///  debugger;
                     var oContactPersonnels = jQuery.parseJSON(data);
                     if (oContactPersonnels != null) {
                         if (oContactPersonnels.length > 0) {
                             for (i = 0; i < oContactPersonnels.length; i++) {
                                 listItems += "<option value='" + oContactPersonnels[i].ContactPersonnelID + "'>" + oContactPersonnels[i].Name + "</option>";
                             }
                             $("#cboFactoryContactPersonnels").html(listItems);
                             if (parseInt($('#divDR').data('DevelopmentRecapDetail').FactoryID) > 0) {
                                 $("#cboFactoryContactPersonnels").val($('#divDR').data('DevelopmentRecapDetail').FactoryPersonID);
                             }
                         }
                         else {
                             $("#cboFactoryContactPersonnels").html(listItems);
                         }
                     }
                     else {
                         $("#cboFactoryContactPersonnels").html(listItems);
                     }
                 },
                 error: function (xhr, status, error) {
                     alert(error);
                 }

             });

    }

</script>
