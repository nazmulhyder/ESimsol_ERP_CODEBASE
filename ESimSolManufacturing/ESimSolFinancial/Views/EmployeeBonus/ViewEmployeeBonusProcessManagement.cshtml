@{
    ViewBag.Title = "Employee Bonus Process";
}
<html>
<head>
    <title> Employee Bonus Process</title>
</head>

@{var MenuID = HttpContext.Current.Session[SessionInfo.MenuID];}
<body class="menuMainCollectionTable">
    @model ESimSol.BusinessObjects.EmployeeBonusProcess

    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>

    <div id="main-body" style="font-family: Tahoma;" class="menuMainCollectionTable">
        <fieldset style="width:98%;">
            <legend id="lblHeaderName" style="font-weight: bold"> New EmployeeBonus Process Management : </legend>
            <div style="width:100%; margin-bottom:30px;">
                BU:
                <select id="cboBUnit" style="width:11%;"></select>
                Location :
                <select id="cboLocation" style="width:11%;"></select>
                Salary Head: 
                <select id="cboSalaryHead" style="width:11%"></select>
                B. Month :
                <select id="cboProcessMonth_Collection"></select>
                B. Year:
                <select id="cboProcessYear_Collection"></select>
                Declaration Date :
                <input id="dtDeclaration" type="text" style="width: 10%;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                Note : <input id="txtNote" type="text" style="width:11%;" placeholder="Purpose" />
                <br />
                <input type="radio" name="rbEmpwise" value="1" onclick="hide(this);" />Employee Wise
                <input type="radio" name="rbEmpwise" value="0" checked="checked" onclick="show(this);" />BU, Location Wise

            </div>
            <div style="width:100%" id="EmployeeWise">
                <div style="width:90%;margin-left:30%; float:left;">
                    <fieldset style="height:100px;width:40%;">
                        <legend>Employee List</legend>
                        <input id="txtEmployee_Collection" style="width:70%; margin-top:5%;margin-left:5%;" type="text" placeholder="Type Code & Enter" />
                        <a id="btnEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                        <a id="btnCEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
                    </fieldset>
                    <div style="height:200px;"></div>
                </div>
            </div>
            <div style="width:100%" id="BuLocWise">
                <div style="width:30%;margin-left:2%; float:left;">
                    <table id="tblDepartments" title="Department List" class="easyui-datagrid" style="width:100%;height:300px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                        <thead>
                            <tr>
                                <th data-options="field:'Selected',checkbox:true"></th>
                                <th field="DepartmentName" width="230" align="left">Department</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div style="width:30%; margin-left:3%; float:left">
                    <table id="tblSalarySchemes" title="Salary Scheme List" class="easyui-datagrid" style="width:100%;height:300px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                        <thead>
                            <tr>
                                <th data-options="field:'Selected',checkbox:true"></th>
                                <th field="Name" width="230" align="left">Salary Scheme</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div style="width:30% ; margin-left:3%; float:left">
                    <table id="tblGroups" title="Group List" class="easyui-datagrid" style="width:100%;height:150px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                        <thead>
                            <tr>
                                <th data-options="field:'Selected',checkbox:true"></th>
                                <th field="Name" width="230" align="left">Group Name</th>
                            </tr>
                        </thead>
                    </table>
                    <table id="tblSalaryHeads" title="Salary Head List" class="easyui-datagrid" style="width:100%;height:150px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                        <thead>
                            <tr>
                                <th data-options="field:'Selected',checkbox:true"></th>
                                <th field="Name" width="230" align="left">Salary Head</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>

</fieldset>

        <fieldset style="width:98%;">
            <legend style="font-weight: bold">Action : </legend>
            <table id="Actiontable" border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%;">
                <tr class="Actiontable_tr">
                    <td style="width:100%; text-align: right">
                        <a id="btnBonusProcess" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Process</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true"
                           onclick="Close()">Close</a>
                    </td>

                </tr>
            </table>
        </fieldset>
        <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="width: 100%; font-family: Tahoma;">
                <div style="width: 47%; float: left;">
                    <table class="tbl-AdvSearch">
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Employee Name :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Code :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Present Address :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Permanent Address :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Authentication No :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                                <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Attendance Scheme :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                                <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                BU :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboBU" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Location :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Dept./Section :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Designation :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                                <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                                <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Employee Type :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeType" style="width:130px; float:left;" class="selection-search cboReset"></select>
                                &nbsp; Group:
                                <input id="txtEmployeeGroupAdv" style="width:90px;" type="text" />
                                <input id="btnEmployeeGroupPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                                <input id="btnEmployeeGroupResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Category:
                            </td>
                            <td class="td-AdvSearch-Level">
                                <div>
                                    <select id="cboCategory" style="width:130px; float:left;"></select>
                                    &nbsp; Gender :
                                    <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                        <option value="0">None</option>
                                        <option value="1">Male</option>
                                        <option value="2">Female</option>
                                    </select>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Current Shift :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboShift_EmpSearch" style="width:130px; float:left;" class="selection-search cboReset"></select>

                                &nbsp; Block:
                                <input id="txtEmployeeBlockAdv" style="width:90px;" type="text" />
                                <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                                <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Card Status :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Working Status :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Date Of Birth :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <select id="cboDateType" style="width: 75px" class="cboReset">
                                    <option value='0'>None</option>
                                    <option value='1'>Equal</option>
                                    <option value='2'>Between</option>
                                </select>
                                <span></span>
                                <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                                <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                                <span id="regionDateTo">
                                    <span>To</span>
                                    <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                    <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                                </span>

                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level">
                                Joining Date :
                            </td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                                <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                                <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkActive" class="chkReset" /> Active
                                <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                                <input type="checkbox" id="chkUser" class="chkReset" /> User
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                            </td>
                        </tr>
                        <tr>
                            <td class="td-AdvSearch-Level"></td>
                            <td class="td-AdvSearch-Input">
                                <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                                <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                            </td>
                        </tr>
                    </table>
                </div>
                <div style="width: 52%; float: right;">
                    <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 480px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                        <thead>
                            <tr>
                                <th data-options="field:'Selected',checkbox:true"></th>
                                <th field="Code" width="200"> Code</th>
                                <th field="Name" width="150">Employee Name</th>
                                <th field="DepartmentName" width="100">Department</th>
                                <th field="DesignationName" width="100">Designation</th>
                            </tr>
                        </thead>
                    </table>
                    <table style="width: 485px; font-size: 12px; font-weight: bold;">
                        <tr>
                            <td style="text-align: left">
                                <input id="chkRange" type="checkbox" />Range
                                <label id="lblRange1">
                                    <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                                </label>
                                <label id="lblRange2">
                                    <input id="txtTo" type="text" style="width:40px" />
                                </label>
                                <label id="lblcount"></label>
                            </td>
                            <td style="text-align: right">
                                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                                <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                                <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align: left"></td>
                            <td style="text-align: right"></td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>

        <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
                </div>
                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:400px; text-align:right"></td>

                            <td style="width:50px">
                                <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

        <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
                </div>

                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:400px; text-align:right"></td>

                            <td style="width:50px">
                                <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

        <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="locationtree" data-options="checkbox:false" singleselect="true"></ul>
                </div>

                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:400px; text-align:right"></td>

                            <td style="width:50px">
                                <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>


    </div>

</body>
</html>
<style>
    .tbl-AdvSearch {
            width: 100%;
            font-size: 11px;
            font-weight: bold;
            text-align: left;
            margin-left: 3px;
        }

        .td-AdvSearch-Level {
            text-align: right;
        }

        .td-AdvSearch-Input {
            text-align: left;
        }

        .txtfield-search {
            width: 312px;
            text-align: left;
            font-size: 11px;
        }

        .txtfield-picker {
            width: 265px;
            text-align: left;
            font-size: 11px;
        }

        .selection-search {
            width: 310px;
            text-align: left;
            font-size: 11px;
        }

        .pick-btn {
            width: 20px;
            text-align: center;
            font-size: 11px;
        }
</style>
<script type="text/javascript">

    var _oEmployeeBonusProcessManagement = null;
    var _sBaseAddress = "";
    var _nMenuid=0;
    var _sEmployeeBonusProcessManagementHeader="";
    var _oMonths=[];
    var _oLocations=[];
    var _oBUs=[];
    var _oBankAccounts=[];
    var _oPPMobjects=[];
    var _oEmployeeGroups=[];
    var _oSalaryHeads=[];
    var _sEmployeeIDs = "";
    var _sBlockNamesAdv="";
    var _sBlockIDsAdv="";
    var _sGroupNamesAdv="";
    var _sGroupIDsAdv="";
    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _oEmployee = null;
    var _sSalarySchemeIDs = "";

    var _sEmployeeIDs="";
    var _sAttendanceSchemeID ="";
    var _sBusinessUnitIds = "";
    var _sLocationID = "";
    var _sDepartmentNames = "";
    var _sDepartmentIds = "";
    var _sDesignationNames = "";
    var _sDesignationIds = "";
    var _sBlockNames="";

    $(document).ready(function() {
        debugger;
        _oEmployeeBonusProcessManagement = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oMonths= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Months));
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(MenuID));
        _oLocations = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Locations));
        _oBUs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.BusinessUnits));
        _oBankAccounts = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.BankAccounts));
        _oPPMobjects = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PPMobjects));
        _oEmployeeGroups= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeGroups));
        _oSalaryHeads= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.SalaryHeads));
        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        _sEmployeeBonusProcessManagementHeader=sessionStorage.getItem("EmployeeBonusProcessManagementHeader");
        debugger;
        //if(_oEmployeeBonusProcessManagement.ErrorMessage!="")
        //{
        //    alert(_oEmployeeBonusProcessManagement.ErrorMessage);
        //    _oEmployeeBonusProcessManagement.ErrorMessage=="";
        //}
        //DynamicRefreshList(_oEmployeeBonusProcessManagement.DepartmentRequirementPolicys,'tblDepartments');
        DynamicRefreshList(_oEmployeeBonusProcessManagement.SalarySchemes,'tblSalarySchemes');
        DynamicRefreshList(_oEmployeeBonusProcessManagement.SalaryHeads,'tblSalaryHeads');
        DynamicRefreshList(_oEmployeeBonusProcessManagement.EmployeeGroups,'tblGroups');
        $("#lblHeaderName").html(_sEmployeeBonusProcessManagementHeader);
        
        $('#EmployeeWise').hide();
        InitializeProcess();
        InitializeAdvSearch();
        debugger;
        //LoadLocation(_oLocations);
        
        LoadCateGory(oEmployeeCategorys);


        $('#dtDeclaration').datebox('setValue',icsdateformat(new Date()));
        $("#cboSalaryHead").icsLoadCombo({
            List: _oSalaryHeads,
            OptionValue: "SalaryHeadID",
            DisplayText: "Name"
        });
        $("#cboBonusMonth").icsLoadCombo({
            List:_oMonths,
            OptionValue: "Value",
            DisplayText: "Text",
            InitialValue:"--Select a month--"
        });
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
        LoadBU(_oBUs);


        if(_sEmployeeBonusProcessManagementHeader=="View EmployeeBonusProcessManagement")
        {
            

            document.getElementById('cboBUnit').disabled = true;
            document.getElementById('cboLocation').disabled = true;
            document.getElementById('dtDeclaration').disabled = true;
            document.getElementById('cboSalaryHead').disabled = true;
            debugger;
            // DynamicRefreshList(_oEmployeeBonusProcessManagement.DepartmentRequirementPolicys,'tblDepartments');
            $('#btnBonusProcess').hide();



            var nBUID =parseInt(_oEmployeeBonusProcessManagement.BUID);
            var nLocationID= parseInt(_oEmployeeBonusProcessManagement.LocationID);

            debugger;
            var oList =[];
            for(var i = 0; i<_oLocations.length; i++)
            {
                if( parseInt(_oLocations[i].BusinessUnitID) == parseInt(nBUID))
                {
                    oList.push(_oLocations[i]);
                }
            }
            LoadLocation(oList);
                   
            
            $('#cboBUnit').val(parseInt(_oEmployeeBonusProcessManagement.BUID));
            $('#cboLocation').val(parseInt(_oEmployeeBonusProcessManagement.LocationID));
            $('#cboSalaryMonth').val(parseInt(_oEmployeeBonusProcessManagement.MonthID));
            $("#cboSalaryHead").val(parseInt(_oEmployeeBonusProcessManagement.SalaryheadID));
            $("#txtNote").val(_oEmployeeBonusProcessManagement.Note);


            //Department
            debugger;
            if(nLocationID>0)
            {
                var oDepartmentRequirementPolicy={LocationID:nLocationID};
                var obj = {
                    BaseAddress: _sBaseAddress,
                    Object: oDepartmentRequirementPolicy,
                    ControllerName: "DepartmentRequirementPolicy",
                    ActionName: "GetDRPByLocations",
                    IsWinClose: false
                };
                $.icsDataGets(obj, function (response) {
                    if (response.status && response.objs.length > 0 && response.objs[0].ErrorMessage=="") {
                        debugger;

                        var oTempObj = [];
                        var counter = 0;
                        for(var i = 0; i < response.objs.length; i++){
                            for(var j = 0; j < _oPPMobjects.length; j++) {
                                if((_oPPMobjects[j].PPMID == _oEmployeeBonusProcessManagement.PPMID) && (_oPPMobjects[j].PPMObject == 1)) {
                                    if(response.objs[i].DepartmentID == _oPPMobjects[j].ObjectID) {
                                        oTempObj.push(response.objs[i]);
                                        counter++;
                                    }
                                }
                            }
                        }

                        DynamicRefreshList(oTempObj, "tblDepartments");

                    }
                    else { alert(response.objs[0].ErrorMessage);DynamicRefreshList([], "tblDepartments");}
                });
            }
            else{
                DynamicRefreshList([], "tblDepartments");
            }



            var oTempObjScheme = [];
            var counter = 0;
            for(var i = 0; i < _oEmployeeBonusProcessManagement.SalarySchemes.length; i++){
                for(var j = 0; j < _oPPMobjects.length; j++) {
                    if((_oPPMobjects[j].PPMID == _oEmployeeBonusProcessManagement.PPMID) && (_oPPMobjects[j].PPMObject == 2)) {
                        if(_oEmployeeBonusProcessManagement.SalarySchemes[i].SalarySchemeID == _oPPMobjects[j].ObjectID) {
                            oTempObjScheme.push(_oEmployeeBonusProcessManagement.SalarySchemes[i]);
                            counter++;
                        }
                    }
                }
            }

            DynamicRefreshList(oTempObjScheme, "tblSalarySchemes");

            debugger;
            var oTempObjGroup = [];
            var count = 0;
            for(var i = 0; i < _oEmployeeBonusProcessManagement.EmployeeGroups.length; i++){
                for(var j = 0; j < _oPPMobjects.length; j++) {
                    if((_oPPMobjects[j].PPMID == _oEmployeeBonusProcessManagement.PPMID) && (_oPPMobjects[j].PPMObject == 4)) {
                        if(_oEmployeeBonusProcessManagement.EmployeeGroups[i].EmployeeTypeID == _oPPMobjects[j].ObjectID) {
                            oTempObjGroup.push(_oEmployeeBonusProcessManagement.EmployeeGroups[i]);
                            count++;
                        }
                    }
                }
            }

            DynamicRefreshList(oTempObjGroup, "tblGroups");



        }

    });
    function InitializeProcess()
    {
        $("#cboSalaryHead").icsLoadCombo({
            List: _oSalaryHeads,
            OptionValue: "SalaryHeadID",
            DisplayText: "Name"
        });

        $("#cboProcessMonth,#cboProcessMonth_Collection").icsLoadCombo({
            List: _oMonths,
            OptionValue: "Value",
            DisplayText: "Text",
            InitialValue:'Month'
        });

        var oDate=new Date();
        oDate.setFullYear(2015);
        var sYear="";
        sYear +="<option value='0'>"+'Year'+"</option>";
        for(var i=0; i<=10; i++)
        {
            sYear += "<option value='" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"'>" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"</option>";
        }
        $('#cboProcessYear').html(sYear);
        $('#cboProcessYear_Collection').html(sYear);

        $('#txtPurpose').val("");
        $('#dtUptoDate').datebox('setValue', icsdateformat(new Date()));

        var oDate=new Date();
        $("#cboProcessMonth,#cboProcessMonth_Collection").val(oDate.getMonth()+1);
        $("#cboProcessYear,#cboProcessYear_Collection").val(oDate.getFullYear());
    }
    function LoadCateGory(oEmployeeCategorys)
    {
        var oList=[];
        for(var i=0; i<oEmployeeCategorys.length;i++)
        {
            if(oEmployeeCategorys[i].Value!=0 && oEmployeeCategorys[i].Value!=3 && oEmployeeCategorys[i].Value!=4)
            {
                oList.push(oEmployeeCategorys[i]);
            }
        }

        $("#cboCategory").icsLoadCombo({
            List: oList,
            OptionValue: "Value",
            DisplayText: "Text",
            InitialValue:"--Category--"
        });
    }
    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }
    $("#btnEmployeePickerOk").click(function () {
        var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
        if (oEmployees.length<=0) { alert("please select atleast one item");return; }
        var sEmpIDs="";
        var sEmpNames="";
        for(var i=0;i<oEmployees.length;i++)
        {
            sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
            sEmpNames=sEmpNames+oEmployees[i].Name+",";
        }
        _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
        sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
        $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
        $("#txtEmployee_Collection").val(sEmpNames);
        $("#winEmployeePicker").icsWindow('close');

    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });
    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
    }

    $("#btnEmployee").click(function () {
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });
    
    $("#btnLocationPicker").click(function(e){
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $('#txtLocation').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        }
    });

    $("#btnLocationPickerOk").click(function(e){
        var oLocation = $('#locationtree').tree('getSelected');
        if(oLocation!=null && oLocation.id>0){
            $("#winLocationPicker").icsWindow('close');
            $('#txtLocation').val(oLocation.text);
            _sLocationID= oLocation.id;
        }
        else{
            alert("Please select a location.");
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker").click(function(e){
        $('#txtLocation').val("");
        _sLocationID="";
    });
    /*---------------- emp Search Start keyprees----------------*/
    $('#txtEmployee_Collection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee_Collection").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
            SearchEmployeeByText(sCodeName);
        }
    });

    function SearchEmployeeByText(sEmpNameCode){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _sEmployeeIDs=oreturnObj.EmployeeID;
                    $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
                    $("#txtEmployee_Collection").val(oreturnObj.Name);
                    $("#winEmployeePicker").icsWindow('close');
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        _sEmployeeIDs=oreturnObj.EmployeeID;
                        $('#txtEmployee').data("EmployeeIDs",_sEmployeeIDs);
                        $("#txtEmployee_Collection").val(oreturnObj.Name);
                        $("#winEmployeePicker").icsWindow('close');
                    }
                }
            }
        });
    }

    $('#btnCEmployee').click(function (e)
    {
        document.getElementById("txtEmployee_Collection").value = "" ;
        $('#txtEmployeeName').data("EmployeeIDs","");
        _sEmployeeIDs = 0;
    });

    /*---------------- emp Search Start keyprees----------------*/
    function show(myRadio) {
        $('#EmployeeWise').hide();
        $('#BuLocWise').show();
    }
    function hide(myRadio) {
        $('#BuLocWise').hide();
        $('#EmployeeWise').show();
    }
    function LoadBU(oBUs)
    {
        $("#cboBUnit").icsLoadCombo({
            List:oBUs,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });
    }
    function updateProgress()
    {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 5);
            $('#progressbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds)
    {
        $("#progressbarParent").hide();
    }

    //$('#dtProcessTo').click(function (e)
    //{
    //    alert(1);
    //});

    function ValidateInput()
    {
        debugger;
        var getRadio = $('input[name=rbEmpwise]:checked').val();
        var isEmpwise = false;
        if(parseInt(getRadio)==1)
        {
            isEmpwise = true;
        }
        else {
            isEmpwise = false;
        }
        
        if(isEmpwise == false)
        {
            
            if($("#cboBUnit").val()==0)
            {
                alert("Please select a  Business Unit !");
                $('#cboBUnit').focus();
                return false;
            }
            if($("#cboLocation").val()==0)
            {
                alert("Please select a location !");
                $('#cboLocation').focus();
                return false;
            }
        }
        if($("#cboSalaryHead").val()==0)
        {
            alert("Please select a SalaryHead!");
            $('#cboSalaryHead').focus();
            return false;
        }
        if(isEmpwise==true) 
        {
            if(_sEmployeeIDs=="" || _sEmployeeIDs==null)
            {
                alert("Please select Some Employee!");
                return false;
            }
        }

        return true;
    }

    function RefreshObject()
    {
        var oDepartments=$('#tblDepartments').datagrid('getChecked');
        var oSalarySchemes=$('#tblSalarySchemes').datagrid('getChecked');
        var oSalaryHeads=$('#tblSalaryHeads').datagrid('getChecked');
        var oEmployeeGropus=$('#tblGroups').datagrid('getChecked');

        var getRadio = $('input[name=rbEmpwise]:checked').val();
        var isEmpwise = false;
        if(parseInt(getRadio)==1)
        {
            isEmpwise = true;
        }
        else {
            isEmpwise = false;
        }


        var oEmployeeBonusProcessManagement=
        {
            EBPID: _oEmployeeBonusProcessManagement.EBPID,
            BUID:$('#cboBUnit').val(),
            LocationID: $("#cboLocation").val(),
            BonusDeclarationDate:  $('#dtDeclaration').datebox('getValue'),
            MonthIDInt: $("#cboProcessMonth_Collection").val(),
            Year:$("#cboProcessYear_Collection").val(),
            Note:$('#txtNote').val(),
            DepartmentRequirementPolicys:oDepartments,
            SalaryHeadID:$('#cboSalaryHead').val(),
            EmployeeIDs:_sEmployeeIDs,
            IsEmployeeWise:isEmpwise,
            SalarySchemes:oSalarySchemes,
            SalaryHeads:oSalaryHeads,
            EmployeeGroups:oEmployeeGropus
        };
        return oEmployeeBonusProcessManagement;
    }

    $('#btnBonusProcess').click(function (e)
    {
        debugger;
        if (!ValidateInput()) return;
        var oEmployeeBonusProcessManagement = RefreshObject();

        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        $("#main-body").hide();
        var intervalID = setInterval(updateProgress, 250);
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployeeBonusProcessManagement,
            ObjectId: oEmployeeBonusProcessManagement.PPMID,
            ControllerName: "EmployeeBonus",
            ActionName: "ProcessEmployeeBonus",
            TableId: "",
            IsWinClose: false
        };

        $.icsSave(obj, function (response)
        {
            if (response.status && response.obj.EBPID > 0)
            {
                //alert("Data Saved sucessfully");
                var oEmployeeBonusProcessManagements =sessionStorage.getItem("EmployeeBonusProcessManagements");
                var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                if(oEmployeeBonusProcessManagements!=null)
                {
                    oEmployeeBonusProcessManagements = jQuery.parseJSON(oEmployeeBonusProcessManagements);
                }
                else
                {
                    oEmployeeBonusProcessManagements=[];
                }
                if(nIndex!=-1)
                {
                    oEmployeeBonusProcessManagements[nIndex]=response.obj;
                }
                else
                {
                    sessionStorage.setItem("SelectedRowIndex", oEmployeeBonusProcessManagements.length);
                    oEmployeeBonusProcessManagements.push(response.obj);
                }
                sessionStorage.setItem("EmployeeBonusProcessManagements", JSON.stringify(oEmployeeBonusProcessManagements));
                window.location.href = _sBaseAddress+ "/EmployeeBonus/ViewEmployeeBonusProcessManagements?menuid="+_nMenuid;
            }
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            $("#main-body").show();
        });

        //$.ajax({
        //    type: "POST",
        //    dataType: "json",
        //    url: _sBaseAddress + "/ProcessManagement/EmployeeBonusProcess_IUD",
        //    traditional: true,
        //    data: JSON.stringify(oEmployeeBonusProcessManagement),
        //    contentType: "application/json; charset=utf-8",

        //    success: function(data)
        //    {
        //        //debugger
        //        oEmployeeBonusProcessManagement = jQuery.parseJSON(data);
        //        if (oEmployeeBonusProcessManagement.ErrorMessage == "")
        //        {
        //            alert("Data Saved sucessfully");
        //            window.returnValue = oEmployeeBonusProcessManagement;
        //            window.close();
        //        }
        //        else
        //        {
        //            alert(oEmployeeBonusProcessManagement.ErrorMessage);
        //        }
        //    },

        //});
    });

    $("#cboLocation").change(function () {
        var nLocationID=$("#cboLocation").val();
        if(nLocationID>0)
        {
            var oDepartmentRequirementPolicy={LocationID:nLocationID};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oDepartmentRequirementPolicy,
                ControllerName: "DepartmentRequirementPolicy",
                ActionName: "GetDRPByLocations",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0 && response.objs[0].ErrorMessage=="") {
                    DynamicRefreshList(response.objs, "tblDepartments");
                }
                else { alert(response.objs[0].ErrorMessage);DynamicRefreshList([], "tblDepartments");}
            });
        }
        else{
            DynamicRefreshList([], "tblDepartments");
        }
    });

    function Close()
    {
        window.location.href = _sBaseAddress+ "/EmployeeBonus/ViewEmployeeBonusProcessManagements?menuid="+_nMenuid;
    }

    $('#cboBUnit').change(function(e)
    {
        var nBUID =$('#cboBUnit').val();
        var oList =[];
        for(var i = 0; i<_oLocations.length; i++)
        {
            if(_oLocations[i].BusinessUnitID == nBUID)
            {
                oList.push(_oLocations[i]);
            }
        }
        LoadLocation(oList);

        oList =[];
        for(var i = 0; i<_oBankAccounts.length; i++)
        {
            if(_oBankAccounts[i].BusinessUnitID == nBUID)
            {
                oList.push(_oBankAccounts[i]);
            }
        }
        LoadAccount(oList);
    });

    function LoadLocation(oLocations)
    {
        debugger;
        $("#cboLocation").icsLoadCombo({
            List:oLocations,
            OptionValue: "LocationID",
            DisplayText: "LocationName"
        });
    }

    function LoadAccount(oAccounts)
    {
        $("#cboAccount").icsLoadCombo({
            List:oAccounts,
            OptionValue: "BankAccountID",
            DisplayText: "AccountNo",
            InitialValue:"Default"
        });
        if(oAccounts.length>0)
            document.getElementById("cboAccount").selectedIndex=1;
    }
    /*------------EmployeeGroupAdv--------------*/

    $("#btnEmployeeGroupResetAdv").click(function(e){
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
    });

    $('#txtEmployeeGroupAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByGroup = $("#txtEmployeeGroupAdv").val();
            var sTempName = "";
            SearchEmployeeGroupAdv(txtSearchByGroup);
            $("#txtEmployeeGroupAdv").val('');
        }
    });


    $("#btnEmployeeGroupPickerAdv").click(function(e){
        SearchEmployeeGroupAdv("");
    });
    function SearchEmployeeGroupAdv(name) {
        $("#txtEmployeeGroupAdv").val("");
        _sGroupNamesAdv = "";
        _sGroupIDsAdv = "";
        var oGroup={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oGroup,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeGroupAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winGroup',
                        winclass:'clsGroup',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeGroupPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeGroupPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winGroup')
            {
                if(oGroups!=null && oGroups.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oGroups.length; i++)
                    {
                        _sGroupNamesAdv += oGroups[i].Name+",";
                        _sGroupIDsAdv += oGroups[i].EmployeeTypeID+",";

                    }
                    _sGroupNamesAdv=_sGroupNamesAdv.substring(0,_sGroupNamesAdv.length-1);
                    _sGroupIDsAdv=_sGroupIDsAdv.substring(0,_sGroupIDsAdv.length-1);
                    $("#txtEmployeeGroupAdv").val(_sGroupNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Group.");
                }
            }
        });
    }


    /*------------EmployeeBlockAdv--------------*/

    $('#txtEmployeeBlockAdv').keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var txtSearchByBlock = $("#txtEmployeeBlockAdv").val();
            var sTempName = "";
            SearchEmployeeBlockAdv(txtSearchByBlock);
            $("#txtEmployeeBlockAdv").val('');
        }
    });

    $("#btnEmployeeBlockPickerAdv").click(function(e){
        SearchEmployeeBlockAdv("");
    });
    function SearchEmployeeBlockAdv(name) {
        $("#txtEmployeeBlockAdv").val("");
        _sBlockNamesAdv = "";
        _sBlockIDsAdv = "";
        var oBlock={
            Name : name
        };
        debugger
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlock,
            ControllerName: "Employee",
            ActionName: "GetsEmployeeBlockAdvSrc",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeTypeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblBlock',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbuttonAdv(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oGroups=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNamesAdv += oBlocks[i].Name+",";
                        _sBlockIDsAdv += oBlocks[i].EmployeeTypeID+",";

                    }
                    _sBlockNamesAdv=_sBlockNamesAdv.substring(0,_sBlockNamesAdv.length-1);
                    _sBlockIDsAdv=_sBlockIDsAdv.substring(0,_sBlockIDsAdv.length-1);
                    $("#txtEmployeeBlockAdv").val(_sBlockNamesAdv);
                }
                else
                {
                    alert("Please select a Employee Block.");
                }
            }
        });
    }


    $("#btnEmployeeBlockResetAdv").click(function(e){
        debugger;
        _sBlockNamesAdv = "";
        $('#txtEmployeeBlockAdv').val("");
        _sBlockIDsAdv = "";
    });
    /*---------------- emp Search Start click----------------*/

    function InitializeAdvSearch(){
        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));
        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBUs,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                    {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                    {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    /*-------------Location Picker----------------*/
    var btnLocation="";
    $("#btnLocationPicker,#btnLocationPicker_Colection").click(function(e){
        btnLocation = $(this).attr("id");
        var sBusinessUnitIDs ="";
        var nBusinessUnitID=0;
        if(btnLocation=="btnLocationPicker")
        {
            nBusinessUnitID = $("#cboBU").val();
            sBusinessUnitIDs = String(nBusinessUnitID);
        }
        else{sBusinessUnitIDs=_sBusinessUnitIds;}
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    $("#btnLocationPickerOk").click(function(e){
        var oLocation = $('#locationtree').tree('getSelected');
        if(oLocation!=null && oLocation.id>0){
            $("#winLocationPicker").icsWindow('close');
            if(btnLocation=="btnLocationPicker")
            { $('#txtLocation').val(oLocation.text);} else{$('#txtLocation_Colection').val(oLocation.text);}
            _sLocationID= oLocation.id;
        }
        else{
            alert("Please select a location.");
        }
    });

    $('#txtLocation_Colection').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };
            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        }
    });

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker,#btnResetLocationPicker_Colection").click(function(e){
        $('#txtLocation').val("");
        $('#txtLocation_Colection').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    $("#btnDepartmentPicker").click(function(e){
        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    });

    $("#btnDepartmentPickerOk").click(function(e){
        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            $('#txtDepartment').val(oDepartment.text);
            _sDepartmentIds= oDepartment.id;
        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
    });

    $("#btnDepartmentPickerClose_Collection").click(function(e){
        $("#winDepartmentPicker_Collection").icsWindow('close');
    });

    $("#btnResetDepartmentPicker,#btnResetDepartmentPicker_Collection").click(function(e){
        $('#txtDepartment,#txtDepartment_Collection').val("");
        _sDepartmentIds="";
        _sDepartmentNames="";
    });

    /*-------------Designation Picker----------------*/
    var btnDesignation="";
    $("#btnDesignationPicker,#btnDesignationPicker_Collection").click(function(e){
        btnDesignation = $(this).attr("id");
        DesignationPicker();
    });

    $("#txtDesignation_Collection").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            btnDesignation ="btnDesignationPicker_Collection";
            DesignationPicker();
        }
    });

    function DesignationPicker()
    {
        var oDesignation={
            DesignationID:0,
            Params: _sBusinessUnitIds+'~'+_sLocationID+'~'+ _sDepartmentIds
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var bmultiplereturn=false;
                    if(btnDesignation=="btnDesignationPicker_Collection"){bmultiplereturn=true;}

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oDesignations=[];

            if(btnDesignation=="btnDesignationPicker_Collection")
            {
                oDesignations = $('#'+oPickerobj.tableid).datagrid('getChecked');
            }
            else
            {
                var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
                oDesignations.push(oDesignation);
            }

            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignations!=null && oDesignations.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames+=oDesignations[i].Name+",";
                        _sDesignationIds+=oDesignations[i].DesignationID+",";
                    }

                    _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                    _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
                    if(btnDesignation=="btnDesignationPicker_Collection")
                    {
                        $("#txtDesignation_Collection").val(_sDesignationNames);
                    }
                    else
                    {
                        $("#txtDesignation").val(_sDesignationNames);
                    }
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker,#btnResetDesignationPicker_Collection").click(function(e){
        $('#txtDesignation').val("");
        $('#txtDesignation_Collection').val("");
        _sDesignationIds="";
        _sDesignationNames = "";
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        AdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        AdvSearch();
    }

    function AdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;
        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }

        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }

        var nBusinessUnitID = $("#cboBU").val();
        var nCategory=$('#cboCategory').val();
        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();

        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
            nEmployeeTypeID==0 && sGender=="" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
            bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 
            && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBlockIDsAdv==""&& _sGroupIDsAdv=="")
        {
            alert("Please enter you selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                    sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                    bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                    sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                    +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBlockIDsAdv+"~"+_sGroupIDsAdv;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

</script>
