
<html>

<body>

    @model ESimSol.BusinessObjects.ChequeBook
    <div id="divChequeBook" class="easyui-panel" title="Add ChequeBook" style="font-family:Tahoma; height:100%; width:100%">
        <div style="width:100%; height:88%; text-align:center">
            <fieldset style="height:97%">
                <legend style="font-weight:bold;text-align:left;"> ChequeBook Informations : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:20%; text-align:right">
                            <br />Search Account :
                        </td>
                        <td style="width:15%;">
                            Account No<br />
                            @Html.TextBoxFor(model => model.AccountNo, new { style = "width: 165px;", placeholder = "Search by Account No", id = "txtAccountNo" })
                        </td>
                        <td style="width:15%;">
                            Business Unit<br />
                            @Html.TextBoxFor(model => model.BusinessUnitName, new { style = "width: 165px;", placeholder = "Search by Company Name", id = "txtBusinessUnitName" })
                        </td>
                        
                        <td style="width:20%; text-align:right">
                            <br />Book Code :
                        </td>
                        <td style="width:15%">
                            First Part<br />
                            @Html.TextBoxFor(model => model.BookCodePartOne, new { style = "width: 165px;", id = "txtBookCodePartOne", disabled = "disabled" })
                        </td>
                        <td style="width:15%">
                            Second Part<br />
                            @Html.TextBoxFor(model => model.BookCodePartTwo, new { style = "width: 165px;", id = "txtBookCodePartTwo", disabled = "disabled" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width:20%; text-align:right">
                            Account Name :
                        </td>
                        <td style="width:30%" colspan="2">
                            @Html.TextBoxFor(model => model.AccountName, new { style = "width: 340px;", id = "txtAccountName", disabled = "disabled" })
                        </td>
                        <td style="width:20%;  text-align:right">
                            First Cheque No :
                        </td>
                        <td style="width:30%" colspan="2">
                            @Html.TextBoxFor(model => model.FirstChequeNo, new { style = "width: 340px;", id = "txtFirstChequeNo" })
                        </td>
                    </tr>

                    <tr>
                        <td style="width:20%; text-align:right">
                            Bank Name :
                        </td>
                        <td style="width:30%" colspan="2">
                            @Html.TextBoxFor(model => model.BankName, new { style = "width: 340px;", id = "txtBankName", disabled = "disabled" })
                        </td>
                        <td style="width:20%; text-align:right">
                            Page Count :
                        </td>
                        <td style="width:30%" colspan="2">
                            <input type="text" class="easyui-numberbox" data-options="min:0,precision:0" style="width: 340px; text-align:right" id="txtPageCount" />
                        </td>
                    </tr>

                    <tr>
                        <td style="width:20%; text-align:right">
                            Bank Branch :
                        </td>
                        <td style="width:30%" colspan="2">
                            @Html.TextBoxFor(model => model.BankBranchName, new { style = "width: 340px;", id = "txtBankBranchName", disabled = "disabled" })
                        </td>
                        <td style="width:20%; text-align:right">
                            Note :
                        </td>
                        <td style="width:30%" colspan="2">
                            @Html.TextBoxFor(model => model.Note, new { style = "width: 340px;", id = "txtNote" })
                        </td>
                    </tr>
                </table>


                <fieldset style="height:7%;">
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:960px; text-align:right">
                                <a id="btnCreateChequeLeaves" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="CreateCheques()">Create Cheque Leaves</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
                <fieldset style="height:57%;">
                    <div style="font-family:Tahoma; height:100%;">
                        <table id="tblCheques" title="Cheque List" class="easyui-datagrid" fitcolumns="true" fit="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
                            <thead>
                                <tr>
                                    <th field="ChequeNo" width="150">Cheque No</th>
                                    <th field="ChequeDateInString" width="100">Cheque Date</th>
                                    <th field="ChequeStatusInString" width="150">Cheque Status</th>
                                    <th field="PaymentTypeInString" width="150">Payment Type</th>
                                    <th field="PartyName" width="280">Party Name</th>
                                    <th field="AmountInString" width="200">Amount</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </fieldset>
            </fieldset>
        </div>
        <div style="width:100%; height:10%">
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:860px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" >Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        </div>
</body>
</html>

<script type="text/javascript">
    var _oChequeBook;
    var _sBaseAddress="";
    var _nMenuid=null;
    var _sChequeBookHeader=null;
    var _obj;
    var _oBankAccount={ErrorMessage:""};
    var _bFromButton=false;
    var _bFromAccountNo=false;
    var _bFromCompanyName=false;
    var _oCheques=[]
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.MenuID]));
        

        _oChequeBook =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oCheques =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.Cheques));
        _sChequeBookHeader=sessionStorage.getItem("ChequeBookHeader");
        $('#divChequeBook').panel({ title:_sChequeBookHeader});
        if(_oChequeBook.BankAccountID>0 && _oChequeBook.AccountNo!=null ||_oChequeBook.AccountNo!='' ){
            $('#txtAccountNo').addClass('fontColorOfPickItem');
        }
        if(_oChequeBook.BusinessUnitID>0 && _oChequeBook.BusinessUnitName!=null ||_oChequeBook.BusinessUnitName!='' ){
            $('#txtBusinessUnitName').addClass('fontColorOfPickItem');
        }
        $('#txtAccountNo').icsAutoComplete({
            BaseAddress : sessionStorage.getItem('BaseAddress'),
            ControllerName: "BankAccount",
            ActionName: "Gets",
            Object: {AccountNo:''},
            PropertyName: "AccountNo",
            ParamName: "AccountNo",
            PreParam: "",
            PostParam:""},function(resp){
                _oBankAccount=resp.obj;
                $('#txtBusinessUnitName').val(resp.obj.BusinessUnitNameCode);
                $('#txtBusinessUnitName').addClass('fontColorOfPickItem');
                $('#txtAccountName').val(resp.obj.AccountName);

                $('#txtBookCodePartOne').val(resp.obj.BankShortName);
                $('#txtBankName').val(resp.obj.BankName);
                $('#txtBankBranchName').val(resp.obj.BranchName);

                
                $('#txtFirstChequeNo').focus();
            });
        $('#txtBusinessUnitName').icsAutoComplete({
            BaseAddress : sessionStorage.getItem('BaseAddress'),
            ControllerName: "BankAccount",
            ActionName: "Gets",
            Object: {BusinessUnitNameCode:''},
            PropertyName: "BusinessUnitNameCode",
            ParamName: "BusinessUnitNameCode",
            PreParam: "",
            PostParam:""},function(resp){
                _oBankAccount=resp.obj;
                $('#txtAccountNo').val(resp.obj.AccountNo);
                $('#txtAccountNo').addClass('fontColorOfPickItem');
                $('#txtAccountName').val(resp.obj.AccountName);

                $('#txtBookCodePartOne').val(resp.obj.BankShortName);
                $('#txtBankName').val(resp.obj.BankName);
                $('#txtBankBranchName').val(resp.obj.BranchName);

                
                $('#txtFirstChequeNo').focus();
            });
        RefreshLayout();
        RefreshControl();
    });
    function RefreshControl()
    {
        //this.RefreshCboPrintSetup();
        $('#txtPageCount').numberbox('setValue',_oChequeBook.PageCount);

        if (_oChequeBook.ChequeBookID > 0)
        {
            _oCheques = [];
            _oBankAccount ={BankAccountID:0,ErrorMessage:""};
            _oCheques = _oChequeBook.Cheques;
            _oBankAccount.BankAccountID = _oChequeBook.BankAccountID;

            

            DynamicRefreshList(_oCheques, 'tblCheques');
        }
    }
   



    function CreateCheques()
    {
        debugger;
        var nFirstChequeNo = 0, sStringFormat = "", nLength = 0, nSLNo = 0;

        if (_oBankAccount == null || _oBankAccount.BankAccountID==null|| _oBankAccount.BankAccountID <= 0)
        {
            alert("Please select a Bank Account!");
            $('#txtAccountNo').focus();
            return;
        }
        var txtFirstChequeNo=$('#txtFirstChequeNo').val();
        if (txtFirstChequeNo == ""||txtFirstChequeNo==null)
        {
            alert("Please enter First Cheque Number!");
            $('#txtFirstChequeNo').focus();
            return;
        }
        var nLeafCount = $('#txtPageCount').numberbox('getValue');
        if (nLeafCount==''||nLeafCount==null||nLeafCount<=0)
        {
            alert("Please Enter Leaf Count!");
            $('#txtPageCount').focus();
            return;
        }
        nFirstChequeNo = parseInt($('#txtFirstChequeNo').val());
        nLength = $('#txtFirstChequeNo').val().length;
        for (var i = 0; i < nLength; i++)
        {
            sStringFormat = sStringFormat + "0";
        }
        _oCheques = [];

        /////#region Map Cheque Object
        oCheque = {
            ChequeNo : icsCustomStringFormat(nFirstChequeNo,sStringFormat),
            ChequeDateInString: '',
            ChequeStatusInString:"In-Active",
            PaymentTypeInString:'None',
            PartyName:"",
            AmountInString:"-"
        };

        _oCheques.push(oCheque);


        for (var i = 2; i <= nLeafCount; i++)
        {
            nFirstChequeNo=nFirstChequeNo+1;
            /////#region Map Cheque Object
            oCheque = {
                ChequeNo : icsCustomStringFormat(nFirstChequeNo,sStringFormat),
                ChequeDateInString: '',
                ChequeStatusInString:"In-Active",
                PaymentTypeInString:'None',
                PartyName:"",
                AmountInString:"-"
            };
            _oCheques.push(oCheque);

        }
        RefreshChequeList();
    }

    function RefreshChequeList()
    {
        data = _oCheques;
        data={"total":""+data.length+"","rows":data};
        $('#tblCheques').datagrid('loadData',data);
    }
    function RefreshLayout()
    {
        //document.getElementById('txtCode').disabled = true;
        if(_sChequeBookHeader == 'View ChequeBook')
        {
            document.getElementById('txtAccountNo').disabled = true;
            document.getElementById('txtBusinessUnitName').disabled = true;
            document.getElementById('txtBookCodePartOne').disabled = true;
            document.getElementById('txtBookCodePartTwo').disabled = true;
            document.getElementById('txtAccountName').disabled = true;
            document.getElementById('txtFirstChequeNo').disabled = true;
            document.getElementById('txtBankName').disabled = true;
            document.getElementById('txtPageCount').disabled = true;
            document.getElementById('txtBankBranchName').disabled = true;
            document.getElementById('txtNote').disabled = true;

            document.getElementById('btnCreateChequeLeaves').style.display = 'none';



            document.getElementById('btnSave').style.display = 'none';
        }
    }

    function ValidateInput()
    {
        if (_oBankAccount == null || _oBankAccount.BankAccountID==null|| _oBankAccount.BankAccountID <= 0)
        {
            alert("Please select a Bank Account!");
            $('#txtAccountNo').focus();
            return false;
        }
        var txtFirstChequeNo=$('#txtFirstChequeNo').val();
        if (txtFirstChequeNo == ""||txtFirstChequeNo==null)
        {
            alert("Please enter First Cheque Number!");
            $('#txtFirstChequeNo').focus();
            return false;
        }
        var nLeafCount = $('#txtPageCount').numberbox('getValue');
        if (nLeafCount==''||nLeafCount==null||nLeafCount<=0)
        {
            alert("Please Enter Leaf Count!");
            $('#txtPageCount').focus();
            return false;
        }
        if (_oCheques==null|| _oCheques.length<=0)
        {
            alert("Please Confirm Cheque Preview!");
            $('#txtPageCount').focus();
            return false;
        }
        if (nLeafCount!= _oCheques.length)
        {
            alert("Please leaf count & number of cheque must be equal\nPlease Confirm Cheque Preview Again!");
            $('#btnCreateChequeLeaves').focus();
            return false;
        }
        var nFirstChequeNo=parseInt(txtFirstChequeNo);
        var nChequeNo=parseInt(_oCheques[0].ChequeNo);
        if ( nFirstChequeNo!=nChequeNo )
        {
            alert("Fist Cheque Number is Invalid!\nPlease Confirm Cheque Preview Again!");
            $('#btnCreateChequeLeaves').focus();
            return false;
        }

        return true;
    }


    function RefreshObject()
    {
        var oChequeBook= {
            ChequeBookID : _oChequeBook.ChequeBookID,
            BankAccountID:_oBankAccount.BankAccountID,
            BookCodePartOne:$('#txtBookCodePartOne').val(),
            BookCodePartTwo :$('#txtBookCodePartTwo').val(),
            FirstChequeNo:$('#txtFirstChequeNo').val(),
            PageCount :$('#txtPageCount').numberbox('getValue'),
            Note :$('#txtNote').val(),
            Cheques : _oCheques,
            IsActive : _oChequeBook.IsActive

        };
        return oChequeBook;
    }

    function Save()
    {
        debugger;
        if(!ValidateInput()) return;
        var oChequeBook=RefreshObject();

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/ChequeBook/Save",
            traditional: true,
            data:  JSON.stringify(oChequeBook),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                oChequeBook = jQuery.parseJSON(data);
                if (oChequeBook.ErrorMessage=="") {
                    alert("Data Saved sucessfully");
                    var oChequeBooks =sessionStorage.getItem("ChequeBooks");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oChequeBooks!=null)
                    {
                        oChequeBooks = jQuery.parseJSON(oChequeBooks);
                    }
                    else
                    {
                        oChequeBooks=[];
                    }
                    if(nIndex!=-1)
                    {
                        oChequeBooks[nIndex]=oChequeBook;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oChequeBooks.length);
                        oChequeBooks.push(oChequeBook);
                    }
                    sessionStorage.setItem("ChequeBooks", JSON.stringify(oChequeBooks));
                    window.location.href = _sBaseAddress+ "/ChequeBook/ViewChequeBooks?menuid="+_nMenuid;
                }
                else {
                    alert(oChequeBook.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }


    $("#btnClose").click(function(){
        window.location.href = _sBaseAddress+ "/ChequeBook/ViewChequeBooks?menuid="+_nMenuid;
    });

    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            window.location.href = _sBaseAddress+ "/ChequeBook/ViewChequeBooks?menuid="+_nMenuid;
        }
    });
</script>