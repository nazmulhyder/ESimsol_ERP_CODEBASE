@{
    ViewBag.Title = "Requisition";
}
@model ESimSol.BusinessObjects.DUProGuideLine

<div  ng-app="DUProGuideLineAPP" class="form-horizontal regionDUProGuideLine menuMainCollectionTable">
    <div ng-controller="DUProGuideLineCtrl" style="height:100%">
        @*Requisition INFO*@
        <div style=" height:27%">
        <fieldset style="height:100%">
            <legend>Invoice Info: </legend>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Order Type :</label></div>
                <div class="col-md-3 text-left">
                    <select id="cboOrderType" ng-model="DUProGuideLine.OrderType" ng-options="obj.OrderType as obj.OrderName for obj in OrderTypes" ng-disabled="orderDisabled" class="form-control">
                        <option value="">--Select Type--</option>
                    </select>
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Order No :</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group">
                        <input class="form-control" ng-model="DUProGuideLine.DyeingOrderNo" placeholder="Type Order & Press Enter" ng-disabled="orderDisabled" ng-keydown="SearchKeyDownOrder($event,1)" style="width:80%" />
                        <button type="button" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="PickOrder(1)" ng-disabled="orderDisabled" style="width:20%"><span aria-hidden="true"> Pick </span></button>
                    </div>
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Ref No :</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group">
                        <input class="form-control" ng-model="DUProGuideLine.RefNo" placeholder="Type Ref No & Press Enter" ng-disabled="orderDisabled" ng-keydown="SearchKeyDownOrder($event,2)" style="width:80%" />
                        <button type="button" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="PickOrder(2)" ng-disabled="orderDisabled" style="width:20%"><span aria-hidden="true"> Pick </span></button>
                    </div>
                </div>

            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right">
                    <select id="cboContractorType" style="text-align:right; font-weight:bold; padding-left:25%; width:97%" ng-model="DUProGuideLine.ContractorType" ng-options="obj.id as obj.Value for obj in ContractorTypes" ng-disabled="disabled" class="form-control"></select>
                </div>
                <div class="col-md-3 text-left">
                    <div class="input-group">
                        <input class="form-control" ng-model="DUProGuideLine.ContractorName" placeholder="Type Name & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownBuyer($event)" style="width:80%" />
                        <button type="button" class="btn btn-primary btn-sm" aria-label="center Align" ng-click="PickBuyer()" style="width:20%" ng-disabled="disabled"><span aria-hidden="true">Pick</span></button>
                    </div>
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Challan No:</label></div>
                <div class="col-md-3 text-left">
                    <input ng-model="DUProGuideLine.ChallanNo" class="form-control" ng-disabled="disabled" />
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Date :</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-disabled="disabled" ng-model="DUProGuideLine.IssueDateST">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                    </div>
                </div>
            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label"> Product Type</label></div>
                <div class="col-md-3 text-left">
                    <select id="cboProductType" ng-model="DUProGuideLine.ProductTypeInt" ng-options="obj.id as obj.Value for obj in ProductNatures" ng-disabled="disabled" class="form-control">
                        <option value="">--Select Type--</option>
                    </select>
                </div>
                <div class="col-md-2 text-right"><label class="control-label" ng-model="lblReceiveStore">Receive Store</label></div>
                <div class="col-md-3 text-left">
                    <select id="cboReceiveStore" ng-model="DUProGuideLine.WorkingUnitID" ng-change="cboStoreChange(1)" ng-options="obj.WorkingUnitID as obj.OperationUnitName for obj in ReceiveStores" ng-disabled="disabled" class="form-control">
                        <option value="">--Select Type--</option>
                    </select>
                </div>
                <div class="col-md-2 text-right"><label class="control-label"> SL No:</label></div>
                <div class="col-md-3 text-left">
                    <input ng-model="DUProGuideLine.SLNo" class="form-control" disabled />
                </div>
            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Note:</label></div>
                <div class="col-md-6 text-left">
                    <input ng-model="DUProGuideLine.Note" ng-disabled="disabled" class="form-control" />
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Receive From:</label></div>
                <div class="col-md-3 text-left">
                    <input ng-model="DUProGuideLine.ReceiveByName" class="form-control" ng-disabled="disabled" />
                </div>
            </div>
        </fieldset>
    </div>

        @*DETAILS TABLE*@ 
        <div style="height:61%; width:100%">
            <fieldset style="height:100%">
                <legend>Details : </legend>
                <div class="row ui-grid-panel" >
                    <div class="container col-md-12">
                        <div class="form-inline">
                            <button type="button" style="margin-left:5px" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="GetOrderDetails()" ng-disabled="disabled"><span aria-hidden="true"> Get Order Details </span></button>
                            <input class="form-control" ng-model="DUProGuideLine.txtProductName" placeholder="Type Product Name & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownProduct($event)" style="width:210px; height:24px;" required />
                            <button type="button" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="PickProduct()" ng-disabled="disabled"><span aria-hidden="true"> Pick </span></button>
                            <button type="button" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="CopyDetail()" ng-disabled="disabled"><span aria-hidden="true"> Copy </span></button>
                            <button type="button" class="btn btn-danger btn-sm" aria-label="right Align" style="float:right; margin-right:5%" ng-click="RemoveProduct()" ><span aria-hidden="true"> Remove </span></button>
                        </div>
                      </div>
                </div>
                <div class="row col-md-12">
                    <div style="height:275px" ui-grid="gridOptionsDUProGuideLineDetail" ui-grid-selection ui-grid-resize-columns ui-grid-edit class="grid"></div>
                </div> 
            </fieldset>
        </div>

        <div style="height:8%">
        <fieldset>
            <legend>Action</legend>
            <div class="row col-md-12 text-right">
                @*<button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Update()" > <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true">Update</span> </button>*@
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Save()" ng-show="hide_Save" > <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true">Save</span> </button>
                @*<button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Return()"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true">Return</span> </button>*@
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
            </div>
        </fieldset>
    </div>
    </div>

    <script type="text/ng-template" id="DUProGuideLine.html">
        <div class="modal-header">
            <h4 class="modal-title" id="modal-title">Lot No :</h4>
        </div>
        <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">Order Product:</label></div>
                    <div class="col-md-7 text-left">
                        <input ng-model="DUProGuideLineDetail.OrderProduct" class="form-control" disabled>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">Store:</label></div>
                    <div class="col-md-7 text-left">
                        <input type="text" class="form-control" ng-model="DUProGuideLineDetail.StoreName" disabled>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">Product:</label></div>
                    <div class="col-md-7 text-left">
                        <div class="form-inline">
                            <input class="form-control" ng-model="txtProductName" placeholder="Type Name & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownProduct($event)" style="width:80%;" required />
                            <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="PickProduct()" ng-disabled="disabled"><span aria-hidden="true"> Pick </span></button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right"><label class="control-label">LotNo:</label></div>
                    <div class="col-md-7 text-left">
                        <div class="form-inline">
                            <input class="form-control" ng-model="txtLotNo" placeholder="Type Lot No & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownLot($event)" style="width:80%;" required />
                            <button type="button" class="btn btn-default btn-sm" aria-label="right Align" ng-click="PickLot()" ng-disabled="disabled"><span aria-hidden="true"> Pick </span></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn-success btn-sm" aria-label="Left Align" ng-click="UpdateLot()" ng-disabled="disabled" ng-hide="hide"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> OK</button>
            <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
        </div>
    </script>
</div>

<style type="text/css">

    .grid{
        width:100%; 
        height:290px;
    }
     /*.ui-grid-panel {
        background: linear-gradient(to bottom,#EFF5FF 0,#E0ECFF 100%);
        height:35px;
    }*/
    .regionDUProGuideLine .form-horizontal .control-label{
        padding-top:3px;
    }
    .regionDUProGuideLine .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .regionDUProGuideLine .col-md-12{
        width:100%;
        padding-right:5px;
        padding-left:5px;
        margin-bottom:5px;
    }
    .regionDUProGuideLine .col-md-2{
        width:12%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionDUProGuideLine .col-md-3{
        width:21%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionDUProGuideLine .col-md-4{
        width:28%;
        padding-right:5px;
        padding-left:5px;
    }

    .regionDUProGuideLine .col-md-5{
        width:40%;
        padding-right:5px;
        padding-left:0px;
    }
     .regionDUProGuideLine .col-md-6{
        width:54.5%;
        padding-right:5px;
        padding-left:5px;
    }
     .regionDUProGuideLine .col-md-10{
        width:88%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionDUProGuideLine .col-md-7{
        width:54.6%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionDUProGuideLine .col-md-8{
        width:69%;
        padding-right:5px;
        padding-left:5px;
    }
    .regionDUProGuideLine .btn-sm{
         padding:3px 10px;
     }
     .regionDUProGuideLine .input-group-addon{
         padding: 4px 8px;
     }
</style>

<script type="text/javascript">

    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oDUProGuideLine =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oProductNatures =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ProductNatures));
    var oReceiveStores =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ReceivedStores));
    var oOrderTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DUOrderSetups));
    var oContractorTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ContractorTypes));

    $('.date-container').datepicker({
        format: "dd M yyyy",
        calendarWeeks: true,
        autoclose: true,
        todayHighlight: true
    });

    var DUProGuideLineModule = angular.module('DUProGuideLineAPP', ['ngAnimate', 'ui.bootstrap', 'ui.grid', 'ui.grid.selection', 'ui.grid.edit','ui.grid.resizeColumns','ui.grid.cellNav','ms.service']);
    DUProGuideLineModule.controller('DUProGuideLineCtrl', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal,icsMethod, userSession,msGridControl) {
        debugger;
        sessionStorage.setItem('BaseAddress',_sBaseAddress)
        var viewType = sessionStorage.getItem("Operation");

        //$scope.DUProGuideLine.IssueDateST = new Date($scope.DUProGuideLine.IssueDateST);
        //if (viewType == 'View') //Default
        $scope.disabled= true;
        $scope.hide_Save= true;
        $scope.orderDisabled= true;
        
        $scope.viewType=viewType;
       
        $scope.ContractorTypes=oContractorTypes;
        $scope.ReceiveStores=oReceiveStores;
        $scope.ProductNatures=oProductNatures;
        $scope.DUProGuideLine=oDUProGuideLine;
        $scope.OrderTypes =oOrderTypes;

        $scope.cboStoreChange= function(nSet)
        {
            for(var i=0; i< $scope.ReceiveStores.length; i++)
            {
                if($scope.ReceiveStores[i].WorkingUnitID==$scope.DUProGuideLine.WorkingUnitID)
                {
                    $scope.ReceiveStoreName=$scope.ReceiveStores[i].OperationUnitName;
                    break;
                }
            }
        }
        $scope.cboStoreChange(2);

        $scope.Validation = function()
        {
            //if($scope.DUProGuideLine.OrderType<=0 && viewType == 'Approve')
            //{
            //    alert("Please Select Order Type And Try Again.");
            //    angular.element('#cboOrderType').trigger('focus');
            //    return false;
            //}
            //if($scope.DUProGuideLine.DyeingOrderID<=0 && viewType == 'Approve')
            //{
            //    alert("Please Select Order And Try Again.");
            //    angular.element('#cboOrderType').trigger('focus');
            //    return false;
            //}
            if($scope.DUProGuideLine.ProductTypeInt<=0)
            {
                alert("Please Select Product Type And Try Again.");
                angular.element('#cboOrderType').trigger('focus');
                return false;
            }

            if($scope.DUProGuideLine.WorkingUnitID<=0)
            {
                alert("Please Select Receive Store And Try Again.");
                angular.element('#cboReceiveStore').trigger('focus');
                return false;
            }
            if($scope.DUProGuideLine.ContractorID<=0)
            {
                alert("Please Select Buyer!!");
                return;
            }
            $scope.DUProGuideLine.DUProGuideLineDetails=$scope.gridOptionsDUProGuideLineDetail.data;
            if($scope.DUProGuideLine.DUProGuideLineDetails.length<=0)
            {
                alert("Please Select Details And Try Again.");
                return false;
            }

            var oDUProGuideLineDetails =  $scope.gridOptionsDUProGuideLineDetail.data;
            for(var i=0; i<oDUProGuideLineDetails.length; i++)
            {
                oDUProGuideLineDetails[i].DUProGuideLineID = 0;
                oDUProGuideLineDetails[i].DUProGuideLineDetailID = 0;
                oDUProGuideLineDetails[i].Qty = oDUProGuideLineDetails[i].Qty_Return;
                if(oDUProGuideLineDetails[i].Qty<=0)
                {
                    alert("Please Set Qty(valid) For "+oDUProGuideLineDetails[i].ProductName+" And Try Again.");
                    return false;
                }
            }
            $scope.DUProGuideLineDetails = oDUProGuideLineDetails;

            //if (viewType == 'Return')
            //{
            //    var oDUProGuideLineDetails =  $scope.gridOptionsDUProGuideLineDetail.data;
            //    for(var i=0; i<oDUProGuideLineDetails.length; i++)
            //    {
            //        if(oDUProGuideLineDetails[i].LotID==0)
            //        {
            //            alert("Please Pick Lot For "+oDUProGuideLineDetails[i].ProductName+" And Try Again.");
            //            return false;
            //        }
            //    }
            //}
            return true;
        }

        /*============== SAVE FOR SRM TYPE ==============*/
        $scope.Save = function ()
        {
            if(!$scope.Validation()) return;
            var oDUProGuideLine= $scope.DUProGuideLine;
            oDUProGuideLine.DUProGuideLineID=0;
            oDUProGuideLine.InOutTypeInt=102;
            oDUProGuideLine.IssueDate = new Date($scope.DUProGuideLine.IssueDateST);
            //alert(oDUProGuideLine.ProductTypeInt);
            debugger;
            
            $scope.hide_Save= false;
            $http.post(_sBaseAddress+'/DUProGuideLine/Save',JSON.stringify(oDUProGuideLine)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    console.log(result);
                    if(result.DUProGuideLineID>0 && result.ErrorMessage=="")
                    {
                        debugger;
                        alert("Data Saved Successfully!!");
                        $scope.DUProGuideLine=result;
                        userSession.setData('DUProGuideLines',$scope.DUProGuideLine);
                        userSession.previousPage();
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                    
                    $scope.hide_Save= true;
                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        );
        };
        
        /*============== UPDATE RETURN QTY ==============*/
        $scope.Update = function ()
        {
            if(!$scope.Validation()) return;
            var oDUProGuideLine= $scope.DUProGuideLine;
            oDUProGuideLine.IssueDate = new Date($scope.DUProGuideLine.IssueDateST);
            //alert(oDUProGuideLine.ProductTypeInt);
            debugger;
            $http.post(_sBaseAddress+'/DUProGuideLine/UpdateReturnQty',JSON.stringify(oDUProGuideLine)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    console.log(result);
                    if(result.DUProGuideLineID>0 && result.ErrorMessage=="")
                    {
                        debugger;
                        alert("Data Saved Successfully!!");
                        $scope.DUProGuideLine=result;
                        userSession.setData('DUProGuideLines',$scope.DUProGuideLine);
                        userSession.previousPage();
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        );
        };
    
        /*============== RETURN OPERATION ==============*/
        $scope.Return = function ()
        {
            if(!$scope.Validation())
                return;
            var oDUProGuideLine= $scope.DUProGuideLine;
            oDUProGuideLine.IssueDate = new Date($scope.DUProGuideLine.IssueDateST);
            oDUProGuideLine.ReqDate = new Date($scope.DUProGuideLine.ReqDateST);
            oDUProGuideLine.ImportLCDate = new Date($scope.DUProGuideLine.ImportLCDateST);

            debugger;
            $http.post(_sBaseAddress+'/DUProGuideLine/ReturnDUProGuideLine',JSON.stringify(oDUProGuideLine)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    if(result.DUProGuideLineID>0)
                    {
                        debugger;
                        $scope.DUProGuideLine=result;
                        userSession.setData('DUProGuideLines',$scope.DUProGuideLine);
                        //sessionStorage.setItem('DUProGuideLine',$scope.DUProGuideLine);
                        userSession.previousPage();
                        // msModal.Message({headerTitle : '', bodyText:'Save Successfully.', sucessText : 'Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(jQuery.parseJSON(response.data).Message);}
        );
        };

        $scope.GetOrderDetails= function ()
        {
            debugger;
            var oDUProGuideLine= {
                DyeingOrderID:$scope.DUProGuideLine.DyeingOrderID
            };
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/DUProGuideLine/GetsDyeingOrderDetails',$.param(oDUProGuideLine), config).then(
                        function (response)
                        {
                            debugger;
                            var result=jQuery.parseJSON(response.data);
                            debugger;
                            if(result.length>0)
                            {
                                $scope.DUProGuideLine.DUProGuideLineDetails=result;
                                $scope.MakeDUProGuideLineDetail();
                            }else {alert("No Data Found!!");}
                        },
                            function (response) { alert(jQuery.parseJSON(response.data)[0].Message);}
                    );
        };
        $scope.PickBuyer= function ()
        {
            var oContractor= {
                Params: $scope.DUProGuideLine.ContractorType+'~'+(($scope.DUProGuideLine.ContractorName==undefined)? '':$scope.DUProGuideLine.ContractorName)
            };
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/Contractor/ContractorSearchByNameType',$.param(oContractor), config).then(
                        function (response)
                        {
                            var oDetailColumns = [];
                            var oColumn = { field: 'ContractorID', name:'Code', width:'8%',cellClass: 'text-right', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'Name', name:'Name', width:'92%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            var results=response.data;
                            if(results[0].ContractorID==0)
                            {
                                alert("No Order Found!!"); return;
                            }

                            var modalObj={
                                size:'md',
                                url:_sBaseAddress+'/Home/Modal',
                                modalcontroller:'',
                                appcontroller:'DUProGuideLineCtrl',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Buyer List',
                                searchingbyfieldName:'Name',
                                columns:oDetailColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            //var oDUProGuideLineDetails =  $scope.gridOptionsDUProGuideLineDetail.data;
                            modalInstance.result.then(function (result)
                            {
                                if(result.ContractorID>0)
                                {
                                    $scope.DUProGuideLine.ContractorName=result.Name;
                                    $scope.DUProGuideLine.ContractorID=result.ContractorID;
                                }else
                                {
                                    alert("No Data Selected!!");
                                }
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { debugger;  alert(response.statusText);}
                    );
        };
        $scope.SearchKeyDownBuyer = function (e){
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);

            if (code == 13)
            {
                var txtOrder = $.trim($scope.DUProGuideLine.ContractorName);
                if(txtOrder=="" || txtOrder==null)
                {
                    alert("Type Buyer Name and Press Enter");
                    return;
                }

                $scope.PickBuyer();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.DUProGuideLine.DyeingOrderNo='';
                $scope.DUProGuideLine.DyeingOrderID=0;
                $scope.DUProGuideLine.ContractorID=0;
            }
        };

        $scope.PickOrder= function (nBtn)
        {
            //if($scope.DUProGuideLine.OrderType<=0)
            //{
            //    alert("Please Select Order Type!!");
            //    return;
            //}
            var sOrderRefNo=(nBtn==2?$scope.DUProGuideLine.RefNo:$scope.DUProGuideLine.DyeingOrderNo);

            var oDyeingOrder= {
                OrderNo:(sOrderRefNo == undefined ? "" : sOrderRefNo),
                ContractorID:($scope.DUProGuideLine.ContractorID == undefined ? 0 :  $scope.DUProGuideLine.ContractorID),
                DyeingOrderType:($scope.DUProGuideLine.OrderType == undefined ? 0 :  $scope.DUProGuideLine.OrderType),
            };
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/DUProGuideLine/GetsDyeingOrder',$.param(oDyeingOrder), config).then(
                        function (response)
                        {
                            debugger;
                            var oDetailColumns = [];
                            var oColumn = { field: 'OrderNoFull', name:'Order No', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'ContractorName', name:'Buyer', width:'40%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'RefNo', name:'Ref No', width:'15%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'StyleNo', name:'Style No', width:'12%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn ={ field: 'Qty', name:'Qty', width:'12%',cellClass: 'text-left', cellFilter:'number:2',enableCellEdit:false };oDetailColumns.push(oColumn);
                            //oColumn = { field: 'MUnit', name:'Unit', width:'12%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            //oColumn ={ field: 'Qty_Preq', name:'Already Used', width:'14%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
                            var results=response.data;

                            if(results.length<=0)
                            {
                                alert("No Order Found!!"); return;
                            }

                            var modalObj={
                                size:'lg',
                                modalcontroller:'',
                                url:_sBaseAddress+'/Home/Modal',
                                appcontroller:'DUProGuideLineCtrl',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Order List',
                                searchingbyfieldName:'DestinationLotNo',
                                columns:oDetailColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            var oDUProGuideLineDetails =  $scope.gridOptionsDUProGuideLineDetail.data;

                            modalInstance.result.then(function (result)
                            {
                                $scope.DUProGuideLine.DyeingOrderID=result.DyeingOrderID;
                                $scope.DUProGuideLine.DyeingOrderNo=result.OrderNo;
                                $scope.DUProGuideLine.RefNo=result.RefNo;
                                $scope.DUProGuideLine.ContractorName=result.ContractorName;
                                $scope.DUProGuideLine.ContractorID=result.ContractorID;
                                $scope.DUProGuideLine.OrderType=result.DyeingOrderType;
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) {debugger; alert(response.statusText);}
                    );
        };
        $scope.SearchKeyDownOrder = function (e, nKey){
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var sOrderRefNo=(nKey==2?$scope.DUProGuideLine.RefNo:$scope.DUProGuideLine.DyeingOrderNo);

                var txtOrder = $.trim(sOrderRefNo);
                if(txtOrder=="" || txtOrder==null)
                {
                    alert("Type Order/Ref No and Press Enter");
                    return;
                }

                $scope.PickOrder(nKey);
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.DUProGuideLine.DyeingOrderNo='';
            }
        };

        $scope.PickProduct= function ()
        {
            $scope.txtLotNo="";
            var oPorduct= {
                ProductName:($scope.DUProGuideLine.txtProductName == undefined ? "" : $scope.DUProGuideLine.txtProductName),
                BUID:$scope.DUProGuideLine.BUID
            };
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/DUProGuideLine/GetProducts',$.param(oPorduct), config).then(
                        function (response)
                        {
                            debugger;
                            var oDetailColumns = [];
                            var   oColumn = { field: 'ProductCode', name:'Code', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'ProductName', name:'Porduct', width:'65%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'MUnit', name:'MUnit', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            var results=JSON.parse(response.data);
                            var modalObj={
                                size:'lg',
                                url:_sBaseAddress+'/Home/Modal',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Porduct List',
                                searchingbyfieldName:'DestinationLotNo',
                                columns:oDetailColumns
                            }
                            debugger;

                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                if(result.ProductID>0)
                                {
                                    $scope.DUProGuideLine.txtProductName="";
                                    var oProduct=
                                        {
                                            ProductID:result.ProductID,
                                            ProductName:result.ProductName,
                                            MUnit:result.MUnit,
                                            MUnitID:result.MeasurementUnitID,
                                            Qty:0,
                                            Qty_Order:0,
                                            Remarks:""
                                        }
                                    $scope.gridOptionsDUProGuideLineDetail.data.push(oProduct);
                                }
                                else
                                {
                                    $scope.DUProGuideLine.ProductID=0;
                                    $scope.DUProGuideLine.ProductName="";
                                    $scope.DUProGuideLine.MUnit="";
                                    $scope.txtProductName="";
                                }
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(response.statusText);}
                    );
        };
        $scope.SearchKeyDownProduct = function (e){
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtPorduct = $.trim($scope.DUProGuideLine.txtProductName);
                if(txtPorduct=="" || txtPorduct==null)
                {
                    alert("Type Product Name and Press Enter");
                    return;
                }

                $scope.PickProduct();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtPorductNo='';
            }
        };
        $scope.RemoveProduct= function ()
        {
            var oDetail = $scope.gridDetailApi.selection.getSelectedRows()[0];
            //var data=$scope.gridApi.selection.getSelectedRows();
            if(oDetail==null)
            {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex=$scope.gridOptionsDUProGuideLineDetail.data.indexOf(oDetail);
            if (!confirm("Confirm to Remove?")) return ;
            $scope.gridOptionsDUProGuideLineDetail.data.splice(SelectedRowIndex,1);
        }

        $scope.Modal = function (objSQ, operation) {
            debugger;
            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'DUProGuideLine.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'DUProGuideLineCtrl',
                resolve: {
                    obj: function () {
                        return { DUProGuideLineDetail:objSQ, Operation: operation  };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                debugger;
                if(result.ProductID>0)
                {
                    debugger;
                    var index=sessionStorage.getItem('SelectedLotIndex');
                    $scope.gridOptionsDUProGuideLineDetail.data[index]=result;
                    $scope.gridApi.selection.selectRow($scope.gridOptionsDUProGuideLineDetail.data[index]);
                    $scope.RowSelect(oDUProGuideLines[userSession.getRowIndex()]);
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };
        //$scope.OrderQty=0.0;
        $scope.OpenLotModal = function(id)
        {
            var oDUProGuideLine = $scope.gridDetailApi.selection.getSelectedRows()[0];
            if(oDUProGuideLine==undefined)
            {
                return;
            }
            debugger;
            if($scope.DUProGuideLine.ContractorID<=0)
            {
                alert("Select Buyer!!");
                return;
            }
            if($scope.DUProGuideLine.WorkingUnitID<=0)
            {
                alert("Select Store!!");
                return;
            }
            angular.forEach($scope.gridOptionsDUProGuideLineDetail.data,function(value,index){
                if(value.ProductID==oDUProGuideLine.ProductID)
                {
                    sessionStorage.setItem("SelectedLotIndex", index);
                }
            },$scope.gridOptionsDUProGuideLineDetail.data);

            oDUProGuideLine.BUID=$scope.DUProGuideLine.BUID;
            oDUProGuideLine.ReceiveStoreName=$scope.ReceiveStoreName;
            oDUProGuideLine.WorkingUnitID=$scope.DUProGuideLine.WorkingUnitID;
            oDUProGuideLine.ContractorID=$scope.DUProGuideLine.ContractorID;
            $scope.Modal( oDUProGuideLine, 'Edit');
        }
        $scope.MakeDUProGuideLineDetail= function()
        {
            debugger;
            var oDetailColumns = [];
            var oColumn =  {name: 'SL No',width:'6%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false};oDetailColumns.push(oColumn);
            oColumn = { field: 'ProductName', name:'Commodity', width:'15%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn = { field: 'Qty_Order', name:'Order Qty', width:'9%',cellClass: 'text-right', cellFilter:'number:2', enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn = { field: 'LotNo', name:'Lot No', width:'15%',cellClass: 'text-right', enableCellEdit:true, };oDetailColumns.push(oColumn);
                //cellTemplate:'<div>' +'<span> {{row.entity.LotNo}} </span><button style="align:right" ng-click="grid.appScope.OpenLotModal()">Pick</button>' +'</div>'};oDetailColumns.push(oColumn);
            oColumn ={ field: 'MUnit', name:'Unit', width:'8%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
            
            oColumn ={ field: 'Qty', name:'Rcv Qty', width:'8%',cellClass: 'text-right',aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right',enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn ={ field: 'Qty_LotParent', name:'Balance', width:'8%',cellClass: 'text-right',aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right',enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn ={ field: 'Qty_Return', name:'Return Qty', width:'10%',cellClass: 'text-right',aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right',enableCellEdit:true };oDetailColumns.push(oColumn);
           
            oColumn ={ field: 'Brand', name:'Brand', width:'8%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn ={ field: 'Note', name:'Remarks', width:'8%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);

            $scope.gridOptionsDUProGuideLineDetail = {
                enableRowSelection: true,
                enableRowHeaderSelection: false,
                multiSelect: false,
                enableColumnResizing: true,
                showColumnFooter: false,
                cellEditableCondition: function($scope)
                {
                    debugger;
                    if (viewType == 'Edit' || viewType == 'New' ||viewType == 'Return')
                    {
                        if($scope.row.entity.Qty<0 ||$scope.row.entity.Qty==undefined)
                            return false;
                        else
                        {
                            if($scope.row.entity.OrderQty==undefined)
                                $scope.row.entity.OrderQty=$scope.row.entity.Qty;
                            return true;
                        }
                    }else
                        return false;
                },
                columnDefs:oDetailColumns,
                data:  $scope.DUProGuideLine.DUProGuideLineDetails,
                onRegisterApi: function (gridApi)
                {
                    $scope.gridDetailApi = gridApi;

                    gridApi.edit.on.afterCellEdit($scope,
                     function (rowEntity, colDef, newValue, oldValue)
                     {
                         debugger;
                         //if(rowEntity.Qty > rowEntity.OrderQty)
                         //{
                         //    rowEntity.Qty=rowEntity.OrderQty;
                         //    alert("Requ. Qty Can Not Be Greater Than Order Qty!!");
                         //}
                         //else if(rowEntity.Qty<=0 )
                         //{
                         //    rowEntity.Qty=rowEntity.OrderQty;
                         //    alert("Requ. Qty Can Not Be Equal Or Less Then Zero!!");
                         //}
                         return rowEntity;
                     });
                }
            };

            //var oDUProGuideLineDetails=$scope.DUProGuideLine.DUProGuideLineDetails;
            // $scope.gridOptionsDUProGuideLineDetail.data=[];
            // $scope.gridOptionsDUProGuideLineDetail.data= $scope.DUProGuideLine.DUProGuideLineDetails;
        }
        $scope.MakeDUProGuideLineDetail();

        $scope.CopyDetail=function()
        {
            var oDetail=$scope.gridDetailApi.selection.getSelectedRows()[0];
            var oProduct=
                        {
                            ProductID:oDetail.ProductID,
                            ProductName:oDetail.ProductName,
                            MUnit:oDetail.MUnit,
                            MUnitID:oDetail.MeasurementUnitID,
                            Qty:0,
                            Qty_Order:oDetail.Qty_Order,
                            Remarks:""
                        }
            $scope.gridOptionsDUProGuideLineDetail.data.push(oProduct);
        }

        $scope.Close = function () {
            userSession.previousPage();
        };
    });


    DUProGuideLineModule.controller('ModalInstanceCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) {
        debugger;
        var viewType = sessionStorage.getItem("Operation");
        $scope.disabled= true;
        if (viewType == 'Edit' || viewType == 'New' || viewType == 'Receive')
        {
            $scope.disabled= false;
        }

        $scope.Operation=obj.Operation;
        $scope.DUProGuideLineDetail=obj.DUProGuideLineDetail;
        if(obj.DUProGuideLineDetail.ProductID==null || obj.DUProGuideLineDetail.ProductID<=0)
        {
            $scope.DUProGuideLineDetail={
                DUProGuideLineID : 0,
                BUID:sessionStorage.getItem('BUID'),
                Name : "",
                Activity : true
            }
        }
        else
        {
            $scope.DUProGuideLineDetail = obj.DUProGuideLineDetail;
            $scope.DUProGuideLineDetail.OrderProduct=obj.DUProGuideLineDetail.ProductName;
            $scope.DUProGuideLineDetail.StoreName=obj.DUProGuideLineDetail.ReceiveStoreName;
            $scope.txtProductName=obj.DUProGuideLineDetail.ProductName;

            if(obj.DUProGuideLineDetail.LotNo!="" && obj.DUProGuideLineDetail.LotNo!=undefined)
                $scope.txtLotNo=obj.DUProGuideLineDetail.LotNo+" [BL"+obj.DUProGuideLineDetail.LotQty+"]";
            $scope.DUProGuideLineDetail.LotProductID=obj.DUProGuideLineDetail.ProductID;
            $scope.DUProGuideLineDetail.ContractorID=obj.DUProGuideLineDetail.ContractorID;
            if(obj.DUProGuideLineDetail.LotID>0)
            {
                $scope.txtProductName=obj.DUProGuideLineDetail.LotProductName;
            }
            //$scope.DUProGuideLineDetail.LotNo="";
            //$scope.DUProGuideLineDetail.LotID=0;
        }

        $scope.PickLot= function ()
        {
            $scope.DUProGuideLineDetail.LotID=0;
            $scope.DUProGuideLineDetail.LotNo="";

            if($scope.DUProGuideLineDetail.LotProductID<=0)
            {
                alert("Please Pick a Product And Try Again"); return;
            }

            var oDyeingPorduct= {
                ContractorID:$scope.DUProGuideLineDetail.ContractorID,
                ProductID:$scope.DUProGuideLineDetail.LotProductID,
                BUID:$scope.DUProGuideLineDetail.BUID,
                LotNo:($scope.txtLotNo == undefined ? "" : $scope.txtLotNo),
                WorkingUnitID:$scope.DUProGuideLineDetail.WorkingUnitID
            };
            $scope.txtLotNo ="";
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/DUProGuideLine/GetsLot',$.param(oDyeingPorduct), config).then(
                        function (response)
                        {
                            debugger;
                            var oDetailColumns = [];
                            var oColumn = { field: 'LotNo', name:'Lot No', width:'10%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn ={ field: 'Balance', name:'Qty', width:'20%',cellClass: 'text-left', cellFilter:'number:2', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn ={ field: 'ReportUnitSymbol', name:'Unit', width:'20%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'LocationName', name:'Location', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'OperationUnitName', name:'Operation Unit', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);

                            var results=jQuery.parseJSON(response.data);
                            if(results.length<=0)
                            {
                                alert("No Data Found!!"); return;
                            }

                            var modalObj={
                                size:'lg',
                                url:_sBaseAddress+'/Home/Modal',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Porduct List',
                                searchingbyfieldName:'DestinationLotNo',
                                columns:oDetailColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                if(result.LotID>0)
                                {
                                    $scope.DUProGuideLineDetail.LotID=result.LotID;
                                    $scope.DUProGuideLineDetail.LotNo=result.LotNo;
                                    $scope.txtLotNo=result.LotNo+" [BL-"+result.Balance+"]";
                                }
                                else
                                {
                                    $scope.DUProGuideLineDetail.LotID=0;
                                    $scope.DUProGuideLineDetail.LotNo="";
                                    $scope.txtLotNo="";
                                }
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );
        };
        $scope.SearchKeyDownLot = function (e){
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtLotNo = $.trim($scope.txtLotNo);
                if(txtLotNo=="" || txtLotNo==null)
                {
                    alert("Type Lot No and Press Enter");
                    return;
                }
                $scope.PickLot();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtPorductNo='';
            }
        };
        $scope.PickProduct= function ()
        {
            debugger;
            $scope.DUProGuideLineDetail.LotProductID="";
            $scope.DUProGuideLineDetail.LotProductName="";
            $scope.DUProGuideLineDetail.LotID=0;
            $scope.DUProGuideLineDetail.LotNo="";
            $scope.txtLotNo="";
            var oPorduct= {
                ProductName:($scope.txtProductName == undefined ? "" : $scope.txtProductName),
                BUID:$scope.DUProGuideLineDetail.BUID
            };
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/DUProGuideLine/GetProducts',$.param(oPorduct), config).then(
                        function (response)
                        {
                            var oDetailColumns = [];
                            var   oColumn = { field: 'ProductCode', name:'Code', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'ProductName', name:'Porduct', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'ProductCategoryName', name:'Category', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            var results=jQuery.parseJSON(response.data);
                            var modalObj={
                                size:'md',
                                url:_sBaseAddress+'/Home/Modal',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Porduct List',
                                searchingbyfieldName:'DestinationLotNo',
                                columns:oDetailColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                if(result.ProductID>0)
                                {
                                    $scope.DUProGuideLineDetail.LotProductID=result.ProductID;
                                    $scope.DUProGuideLineDetail.LotProductName=result.ProductName;
                                    $scope.txtProductName=result.ProductName;
                                }
                                else
                                {
                                    $scope.DUProGuideLineDetail.ProductID=0;
                                    $scope.DUProGuideLineDetail.ProductName="";
                                    $scope.DUProGuideLineDetail.MUnit="";
                                    $scope.txtProductName="";
                                }
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );
        };
        $scope.SearchKeyDownProduct = function (e){
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtPorduct = $.trim($scope.txtProductName);
                if(txtPorduct=="" || txtPorduct==null)
                {
                    alert("Type Product Name and Press Enter");
                    return;
                }

                $scope.PickProduct();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtPorductNo='';
            }
        };

        $scope.Validation=function()
        {
            if($scope.DUProGuideLineDetail.Name == "" || $scope.DUProGuideLineDetail.Name == undefined){
                msModal.Message({headerTitle : '', bodyText:'Enter DyeingType Name.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }

            return  true;
        };

        $scope.UpdateLot= function ()
        {
            debugger;
            var oDUProGuideLineDetail= $scope.DUProGuideLineDetail;
            $uibModalInstance.close(jQuery.parseJSON(oDUProGuideLineDetail));
        };

        $scope.cancel= function () {
            debugger;
            $uibModalInstance.close();
        };

    });

</script>


