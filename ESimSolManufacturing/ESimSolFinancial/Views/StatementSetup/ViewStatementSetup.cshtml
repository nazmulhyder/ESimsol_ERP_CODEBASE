
@*<head>
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />

    <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>

    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
</head>*@
<body>
    @model ESimSol.BusinessObjects.StatementSetup
    @{
        ViewBag.Title = "Statement Setup Detail";
    }
    <div id="progbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progbar" style="width:100%;height:37px;"></div>
        </div>
    </div> 
    <div class="menuMainCollectionTable" style="width:100%;height:100%;">
        <div id="divstatementsetup" class="easyui-panel" title="Statement Setup" style="font-family:Tahoma; text-align:center; height:85%;">

        <fieldset style="width:97.5%;height:100%">
            <legend style="font-weight:bold"> </legend>
            <table border="0" cellpadding="0" cellspacing="0" style="margin-left: 0px; height: 100%; width:100%;">
                <tr>
                    <td style=" text-align:left; width:520px; vertical-align:top;">
                        <div title="Statement Setup" style="padding-left:3px; padding-top:5px; vertical-align:top; font-size:12px; font-style:normal;">
                            <fieldset>
                                <legend style="font-weight:bold">Statement Setup : </legend>
                                <table style="width:100%;font-family:Tahoma;font-size:12px;">
                                    <thead>
                                        <tr>
                                            <td style="width: 20%;text-align:right;">
                                                Statement Setup Name :
                                            </td>
                                            <td style="width:30%;text-align:right;">
                                                <input type="text" id="txtStatementSetupName" style="width:100%" />
                                            </td>
                                            <td style="width: 20%;text-align:right;">
                                                Usages Account Head :
                                            </td>
                                            <td style="width: 30%;text-align:left;">
                                                <select id="cboUsagesAccountHead" style="width:100%;"></select>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width: 20%;text-align:right;">
                                                Note :
                                            </td>
                                            <td colspan="3">
                                                <input type="text" id="txtNoteSt" style="width:100%" />
                                            </td>
                                        </tr>
                                    </thead>
                                </table>
                            </fieldset>
                            <div style="margin-left: 0px; height: 350px; width:700px; padding-left:2px;">
                                <table id="tblOperationCategory" title="Operation Category" class="easyui-datagrid" style="width:100%; height:350px;" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarOperationCategory">
                                    <thead>
                                        <tr>
                                            <th field="CategorySetupName" width="200">Category Setup Name</th>
                                            <th field="Note" width="140">Note</th>
                                            <th field="CounLedgerGroup" align="right" width="130">Count Ledger Group</th>
                                            <th field="DebitCreditInST" align="right" width="130">DebitCredit</th>
                                        </tr>
                                    </thead>
                                </table>
                                <div id="toolbarOperationCategory">
                                    DebitCredit:
                                    <select id="cboDebitCredit" style="width:100px;"></select>
                                    <input type="text" id="txtCategorySetupName" style="width:150px;" placeholder="Type Category Step Name" />
                                    &nbsp;Note:<input type="text" id="txtCategorySetupNote" style="width:120px;" />
                                    <a id="btnAddCategoryGroup" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                    <a id="btnRemoveCategoryGroup" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                                    <a id="btnLedgerGroup" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add Ledger Group</a>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td style=" text-align:left; width :280px;">
                        <div title="Effected Accounts" style="padding:2px; font-size:12px; font-style:normal;">
                            <div style="margin-left: 0px; height:420px; width:292px;">
                                <table id="tblEffectedAccounts" title="Effected Accounts" class="easyui-datagrid" style="width:292px; height:100%;" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarEffectedAccount">
                                    <thead>
                                        <tr>
                                            <th field="AccountHeadName" width="260">Account Head Name</th>
                                        </tr>
                                    </thead>
                                </table>
                                <div id="toolbarEffectedAccount">
                                  
                                    <select id="cboComponentTypeTwo"></select>
                                    <input type="text" placeholder="Account Head Name" id="txtAccountHeadNameTwo" style="width:40%" />
                                    <a id="btnAddAccountsTwo" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                    <a id="btnRemoveAccountsTwo" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            </table>
        </fieldset>


    </div>
        <fieldset style="height:10%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:1000px; text-align:right"></td>
                    <td style="width:100px; text-align:right">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    </td>
                    <td style="width:100px; text-align:right">
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
    <div id="winOperationCategory" class="easyui-window" title="Add Voucher Setup" style="width:900px; height:500px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset style="width:98%;height:350px">
                <legend style="font-weight:bold">Ledger Group Setup : </legend>
                    <table id="tblLedgerGroupSetups" title="Ledger Group Setup List" style="width:100%; height:350px;" class="easyui-datagrid" fit="true" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
                        <thead>
                            <tr>
                                <th field="LedgerGroupSetupName" width="68%">Ledger Group Setup Name</th>
                                <th field="Note" width="30%">Note</th>
                            </tr>
                        </thead>
                    </table>
            </fieldset>
            <div id="toolbar">
                <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
                <a id="btnView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
                <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
            </div>

        </div>
        <fieldset style="height:50px; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:7%;text-align:right;">
                        <a id="btnSaveOperationCategory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnCloseOperationCategory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>

                </tr>
            </table>
        </fieldset>
    </div>
    <div id="winLedgerGroupSetup" class="easyui-window" title="Add Voucher Setup" style="width:900px; height:550px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width:885px; height:440px">
            <fieldset>
                <legend style="font-weight:bold">Ledger Group Setup : </legend>
                <table style="width:100%;font-family:Tahoma;font-size:12px;">
                    <thead>
                        <tr>
                            <td style="width:250px;text-align:right;">
                                Ledger Group Setup Name :
                            </td>
                            <td>
                                <input type="text" id="txtLedgerGroupSetupName" style="width:250px;" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 250px;text-align:right;">
                                Note :
                            </td>
                            <td>
                                <input type="text" id="txtNote" style="width:250px;" />
                            </td>
                        </tr>
                    </thead>
                </table>
            </fieldset>
            <div style="margin-left: 0px; height: 360px; width:100%; padding-left:0px;">
                <table id="tblLedgerBreakDown" title="Ledger BreakDown" class="easyui-datagrid" style="width:100%; height:360px;" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarLedgerGroupSetup">
                    <thead>
                        <tr>
                            <th field="AccountHeadName" width="90%">Account HeadName</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbarLedgerGroupSetup">
                    <select id="cboComponentType"></select>
                    <input type="text" placeholder="Account Head Name" id="txtAccountHeadName" style="width:40%" />
                    <a id="btnAddAccounts" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                    <a id="btnRemoveAccounts" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                    <input type="checkbox" name="chkIsDebit" id="chkIsDebit" /> Is Debit
                </div>
            </div>

        </div>
        <fieldset style="height:50px; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:7%;text-align:right;">
                        <a id="btnSaveLedgerGroupSetup" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnCloseLedgerGroupSetup" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>

                </tr>
            </table>
        </fieldset>
    </div>
  
</body>



<script type="text/javascript">
    var _oStatementSetup= null;
    var _obj = window.dialogArguments;
    var _oOperationCategorySetups = [];
    var _oAccountTypeObjs=[];
    $(document).ready(function ()
    {
        debugger;
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oStatementSetup=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oAccountTypeObjs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.AccountTypeObjs));
        var oAccountsHeadDefineNatureObjs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.AccountsHeadDefineNatureObjs));
        var oDebitCredit = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DebitCredit));
        $("#cboComponentType").icsLoadCombo({
            List: _oAccountTypeObjs,
            OptionValue: "id",
            DisplayText: "Value"
        });
        $("#cboComponentType").val(4);
         
        $("#cboComponentTypeTwo").icsLoadCombo({
            List: _oAccountTypeObjs,
            OptionValue: "id",
            DisplayText: "Value"
        });
        $("#cboUsagesAccountHead").icsLoadCombo({
            List: oAccountsHeadDefineNatureObjs,
            OptionValue: "id",
            DisplayText: "Value"
        });
        $("#cboDebitCredit").icsLoadCombo({
            List: oDebitCredit,
            OptionValue: "id",
            DisplayText: "Value"
        });
        $("#cboComponentTypeTwo").val(4);
      

        _oOperationCategorySetups = _oStatementSetup.OperationCategorySetups;
        RefreshList_OperationCategorySetups(_oOperationCategorySetups);
        RefreshListForEffectedAccounts(_oStatementSetup.LedgerBreakDowns);
        $("#txtStatementSetupName").val(_oStatementSetup.StatementSetupName);
        $("#cboUsagesAccountHead").val(_oStatementSetup.AccountsHeadDefineNature);
        $("#txtNoteSt").val(_oStatementSetup.Note);
        var sStatementSetupHeader = sessionStorage.getItem("StatementSetupHeader");
        $('#divstatementsetup').panel('setTitle',{ title : sStatementSetupHeader });
        if(sStatementSetupHeader=="View Statement Setup")
        {
            $("#btnSave").hide();
                $("#btnAddCategoryGroup").hide();
                $("#btnRemoveCategoryGroup").hide();
                $("#btnLedgerGroup").hide();
                $("#btnRemoveAccounts").hide();
                $("#btnAddAccounts").hide();
        
                $("#txtStatementSetupName").prop('disabled', true);
                $("#txtCategorySetupName").prop('disabled', true);
                $("#txtCategorySetupNote").prop('disabled', true);
                $("#txtNote").prop('disabled', true);
            $("#divstatementsetup :input").prop('disabled', true);
        }        
        
       

     
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").hide();
    });







   
 
    function ValidateInput()
    {
        debugger;
        if(parseInt($("#cboUsagesAccountHead").val())<=0)
        {
            alert("Please Select One Account Define Head Nature");
            return false;
        }
        if($("#txtStatementSetupName").val() == "")
        {
            alert("Please Give Statement Setup Name.");
            return false;
        }
        if(parseInt($("#cboUsagesAccountHead").val())==1)

        {
            var oOperationCategorys = $('#tblOperationCategory').datagrid('getRows');
            for(var i = 0;i<oOperationCategorys.length;i++)
            {
                if(parseInt( oOperationCategorys[i].LedgerGroupSetups.length)<=0)
                {
                    alert("Please Add Least one Ledger Group");
                    return false;
                }
            }
        }
       

        if($('#tblOperationCategory').datagrid('getRows').length == 0)
        {
            alert("Please Select at least One Operation Category");
            return false;
        }
        if($('#tblEffectedAccounts').datagrid('getRows').length == 0)
        {
            alert("Please Select at least One Effected Accounts");
            return false;
        }
        return true;
    }


    function RefreshObject()
    {
        var oStatementSetup= {
                                StatementSetupID : _oStatementSetup.StatementSetupID,
                                StatementSetupName : $("#txtStatementSetupName").val(),
                                AccountsHeadDefineNature:parseInt($("#cboUsagesAccountHead").val()),
                                Note : $("#txtNoteSt").val(),
                                OperationCategorySetups: $('#tblOperationCategory').datagrid('getRows'),
                                LedgerBreakDowns : $('#tblEffectedAccounts').datagrid('getRows')
                            };
        return oStatementSetup;
    }

    $("#btnSave").click(function(){
        if(!ValidateInput()) return;
        var oStatementSetup=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/StatementSetup/Save",
            traditional: true,
            data:  JSON.stringify(oStatementSetup),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oStatementSetup = jQuery.parseJSON(data);
                if (oStatementSetup.ErrorMessage==null || oStatementSetup.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    var oStatementSetups = sessionStorage.getItem("StatementSetups");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedStatementSetupRowIndex"));
                    if (oStatementSetups != null) {
                        oStatementSetups = jQuery.parseJSON(oStatementSetups);
                    }
                    else {
                        oStatementSetups = [];
                    }
                    if (nIndex != -1) {
                        oStatementSetups[nIndex] = oStatementSetup;
                    }
                    else {
                        sessionStorage.setItem("SelectedStatementSetupRowIndex", oStatementSetups.length);
                        oStatementSetups.push(oStatementSetup);
                    }
                    sessionStorage.setItem("StatementSetups", JSON.stringify(oStatementSetups));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oStatementSetup.ErrorMessage);
                }

            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    function RefreshList_OperationCategorySetups(oOperationCategorySetups)
    {
        var data=oOperationCategorySetups;
        data={"total":""+data.length+"","rows":data};
        $('#tblOperationCategory').datagrid('loadData',data);
    }

    function RefreshListForEffectedAccounts(oLedgerBreakDowns)
    {
        var data=oLedgerBreakDowns;
        data={"total":""+data.length+"","rows":data};
        $('#tblEffectedAccounts').datagrid('loadData',data);
    }
    $("#btnClose").click(function(){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    ////////////


    //Start

    $("#btnAddCategoryGroup").click(function(){
        var sCategoryName = $('#txtCategorySetupName').val();
        sCategoryName = sCategoryName.trim();
        if(sCategoryName == "")
        {
            alert("Please Type Operation Category Name");
            return ;
        }
        if(parseInt($("#cboDebitCredit").val())<=0)
        {
            alert("Please Select One Type Of DebitCredit");
            return;
        }
        if(!Exist($('#txtCategorySetupName').val()))
        {
            var oOperationCategorySetUp = {
                OperationCategorySetupID: 0,
                StatementSetupID:_oStatementSetup.StatementSetupID,
                CategorySetupName:  $('#txtCategorySetupName').val().trim(),
                DebitCredit:parseInt($("#cboDebitCredit").val()),
                DebitCreditInST:$("#cboDebitCredit option:selected" ).text(),
                Note : $('#txtCategorySetupNote').val(),
                CounLedgerGroup: 0,
                LedgerGroupSetups: []
            };
            $('#tblOperationCategory').datagrid('appendRow',oOperationCategorySetUp );
            var oOperationCategorySetUps = $('#tblOperationCategory').datagrid('getRows');
            var nIndex=oOperationCategorySetUps.length;
            $('#tblOperationCategory').datagrid('selectRow', nIndex);

            $('#txtCategorySetupName').val('');
            $('#txtCategorySetupNote').val('');
        }else
        {
            alert("Already Exist. Please Try New Operation Category Name");
            return;
        }
    });
    function Exist(sCategoryName)
    {
        var oOperationCategories= $('#tblOperationCategory').datagrid('getRows');
        for(var i=0; i < oOperationCategories.length;i++)
        {
            if(oOperationCategories[i].CategorySetupName.trim() == sCategoryName.trim())
            {
                return true;
            }
        }
        return false;
    }
    $("#btnRemoveCategoryGroup").click(function(){
        var oOpertionCategory= $('#tblOperationCategory').datagrid('getSelected');
        if(oOpertionCategory == null)
        {
            alert("Please select an item.");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblOperationCategory').datagrid('getRowIndex',oOpertionCategory);
        $('#tblOperationCategory').datagrid('deleteRow',SelectedRowIndex);
    });


    /////////////
    $('#btnLedgerGroup').click(function(){

        var oOperationCategorySetup= $('#tblOperationCategory').datagrid('getSelected');
        if(oOperationCategorySetup == null)
        {
            alert("Please select an item.");
            return;
        }
        var SelectedRowIndex=$('#tblOperationCategory').datagrid('getRowIndex',oOperationCategorySetup);

        $("#winOperationCategory").data('selectedIndex', -1);
        $("#winOperationCategory").icsWindow('open', "Add Voucher Setup");
        $("#winOperationCategory :input").not("input[type='button']").val("");
        $("#winOperationCategory").data('OperationCategorySetup', oOperationCategorySetup);

        DynamicRefreshList(oOperationCategorySetup.LedgerGroupSetups, "tblLedgerGroupSetups");
        
    });

    

    $('#btnCloseDetail').click(function(){
        $("#winOperationCategory").icsWindow('close');
        $("#winOperationCategory :input").not("input[type='button']").val("");
    });

    ///// LedgerGroupSetups One
    $("#btnAdd").click(function(){

      
        var oLedgerGroupSetup={
            LedgerGroupSetupID: 0,
            OCSID :0,
            Note :"",
            LedgerGroupSetupName:"",          
            ErrorMessage : "",
            IsDr : false,
            LedgerBreakDowns:[]
        };

        RefreshList_LedgerBreakDown(oLedgerGroupSetup.LedgerBreakDowns);
        $("#winLedgerGroupSetup").data('selectedIndex', -1);
        $("#winLedgerGroupSetup").icsWindow('open', "Add  Setup");
        $("#winLedgerGroupSetup :input").not("input[type='button']").val("");
        $("#winLedgerGroupSetup").data('LedgerGroupSetup', oLedgerGroupSetup);
     
    });
    $("#btnEdit").click(function(){

        var oLedgerGroupSetup= $('#tblLedgerGroupSetups').datagrid('getSelected');
        if(oLedgerGroupSetup== null )
        {
            alert("Please select an item.");
            return;
        }
        var SelectedRowIndex=$('#tblLedgerGroupSetups').datagrid('getRowIndex',oLedgerGroupSetup);
      
        RefreshList_LedgerBreakDown(oLedgerGroupSetup.LedgerBreakDowns);
        $("#winLedgerGroupSetup").data('selectedIndex', -1);
        $("#winLedgerGroupSetup").icsWindow('open', "Add  Setup");
        $("#winLedgerGroupSetup :input").not("input[type='button']").val("");
        $("#txtLedgerGroupSetupName").val(oLedgerGroupSetup.LedgerGroupSetupName);
        $("#txtNote").val(oLedgerGroupSetup.Note);
        $("#winLedgerGroupSetup").data('LedgerGroupSetup', oLedgerGroupSetup);

    });
    $("#btnDelete").click(function(){
        var oLedgerGroupSetup= $('#tblLedgerGroupSetups').datagrid('getSelected');
        if(oLedgerGroupSetup==null)
        {
            alert("Please select an item.");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblLedgerGroupSetups').datagrid('getRowIndex',oLedgerGroupSetup);
        alert("Delete sucessfully");
        $('#tblLedgerGroupSetups').datagrid('deleteRow',SelectedRowIndex);
    });

    $("#btnView").click(function(){
        var oLedgerGroupSetup= $('#tblLedgerGroupSetups').datagrid('getSelected');
        if(oLedgerGroupSetup == null)
        {
            alert("Please select an item.");
            return;
        }
        var oParameter = new Object();
        oParameter.Name = "View Ledger Group Setup";
        oParameter.LedgerGroupSetup = oLedgerGroupSetup;
        var tsv=((new Date()).getTime())/1000;
        var url =_sBaseAddress+ "/StatementSetup/ViewLedgerGroupSetup?ts="+tsv;
        var oLedgerGroupSetup = window.showModalDialog(url, oParameter, 'dialogHeight:570px;dialogWidth:530px;dialogLeft:380;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');
    });

    function RefreshList_LedgerBreakDown(oLedgerGroupSetupDetails)
    {
        var data=oLedgerGroupSetupDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblLedgerBreakDown').datagrid('loadData',data);
    }



    function RefreshList(oLedgerGroupSetups)
    {
        var data=oLedgerGroupSetups;
        data={"total":""+data.length+"","rows":data};
        $('#tblLedgerGroupSetups').datagrid('loadData',data);
    }

    function RefreshObject_LedgerGroupSetups()
    {
        debugger;
        var oLDgroups = $('#tblLedgerGroupSetups').datagrid('getRows');
        if(oLDgroups.length<=0)
        {
            alert("Please Add atleast One Ledger Group SetUp");
            return ;
        }
        var oOperationCategorySetup= {
            LedgerGroupSetups :  $('#tblLedgerGroupSetups').datagrid('getRows')
        };
        return oOperationCategorySetup;
    }

    $("#btnSaveOperationCategory").click(function(){
        debugger;

        var oOperationCategorySetup= $('#tblOperationCategory').datagrid('getSelected');
        if(oOperationCategorySetup == null)
        {
            alert("Please select an item.");
            return;
        }
        var SelectedRowIndex=$('#tblOperationCategory').datagrid('getRowIndex',oOperationCategorySetup);
  
        oOperationCategorySetup.LedgerGroupSetups = $('#tblLedgerGroupSetups').datagrid('getRows')
        $("#winOperationCategory").data('OperationCategorySetup', oOperationCategorySetup);
        $("#winOperationCategory").icsWindow('close');
        $("#winOperationCategory :input").not("input[type='button']").val("");

        if(oOperationCategorySetup!=null)
        {
           
            $('#tblOperationCategory').datagrid('updateRow',{index: SelectedRowIndex,	row: oOperationCategorySetup});
            $('#tblOperationCategory').datagrid('selectRow', nIndex);
        }


    });
    $('#btnCloseOperationCategory').click(function(){
        $("#winOperationCategory").icsWindow('close');
        $("#winOperationCategory :input").not("input[type='button']").val("");
    });
 


    /////AddLeadgerGroupSetup
    function ValidateInput_LeadgerGroupSetup()
    {
        if($("#txtLedgerGroupSetupName").val()=="")
        {
            alert("Please Give Ledger Group Setup Name.");
            return false;
        }
        if($('#tblLedgerBreakDown').datagrid('getRows').length == 0)
        {
            alert("Please Add minimum Single Ledger BreaKDown.");
            return false;
        }
        return true;
    }
    function RefreshObject_LeadgerGroupSetup()
    {
        var oLedgerGroupSetup = $('#winLedgerGroupSetup').data('LedgerGroupSetup');
        var oLedgerGroupSetup= {
            LedgerGroupSetupID :oLedgerGroupSetup.LedgerGroupSetupID,
            OCSID:0,
            LedgerGroupSetupName : $("#txtLedgerGroupSetupName").val(),
            Note : $("#txtNote").val(),
            LedgerBreakDowns :  $('#tblLedgerBreakDown').datagrid('getRows'),
            IsDr : $("#chkIsDebit").is(':checked')
        };
        return oLedgerGroupSetup;
    }

    $("#btnSaveLedgerGroupSetup").click(function(){
        //if(!ValidateInput())return;
        //var oLedgerGroupSetup=RefreshObject();
        var oLedgerGroupSetup1= $('#tblLedgerGroupSetups').datagrid('getSelected');
        var SelectedRowIndex=$('#tblLedgerGroupSetups').datagrid('getRowIndex',oLedgerGroupSetup1);
        debugger;
        if(!ValidateInput_LeadgerGroupSetup()) return;
        var oLedgerGroupSetup = RefreshObject_LeadgerGroupSetup();
        $("#winLedgerGroupSetup").data('LedgerGroupSetup', oLedgerGroupSetup);
     
        $("#winLedgerGroupSetup").icsWindow('close');
        $("#winLedgerGroupSetup :input").not("input[type='button']").val("");

        if(oLedgerGroupSetup!=null)
        {
            if(oLedgerGroupSetup.LedgerGroupSetupID>0)
            {
              
                $('#tblLedgerGroupSetups').datagrid('updateRow',{index: SelectedRowIndex,	row: oLedgerGroupSetup});
                $('#tblLedgerGroupSetups').datagrid('selectRow', nIndex);
            }
            else{
                var oLedgerGroupSetups = $('#tblLedgerGroupSetups').datagrid('getRows');
                var nIndex=oLedgerGroupSetups.length;
                $('#tblLedgerGroupSetups').datagrid('appendRow',oLedgerGroupSetup);
                $('#tblLedgerGroupSetups').datagrid('selectRow', nIndex);
            }
        }
      
    });
    $('#btnCloseLedgerGroupSetup').click(function(){
        $("#winLedgerGroupSetup").icsWindow('close');
        $("#winLedgerGroupSetup :input").not("input[type='button']").val("");
    });
    ////endLeadgerGrop Setup

    ///////////// Pick Account Head////////

    $("#btnAddAccounts").click(function(){

        var sAccountHeadName="";
        if(parseInt($("#cboComponentType").val())<=0)
        {
            alert("Please enter account Type!");
            $('#cboComponentType').focus();
            return;
        }
        var oChatOfAccount = {
            AccountHeadName : sAccountHeadName,
            AccountTypeInInt :  parseInt($("#cboComponentType").val())
        }
        PickAccountHeads(oChatOfAccount);

    });


    $("#txtAccountHeadName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sAccountHeadName = $.trim($('#txtAccountHeadName').val())
            if(sAccountHeadName === null || sAccountHeadName === "")
            {
                alert("Please enter account head Name!");
                $('#txtAccountHeadName').focus();
                return;
            }

            if(parseInt($("#cboComponentType").val())<=0)
            {
                alert("Please enter account Type!");
                $('#cboComponentType').focus();
                return;
            }
            var oChatOfAccount = {
                AccountHeadName : sAccountHeadName,
                AccountTypeInInt :  parseInt($("#cboComponentType").val())
            }
            PickAccountHeads(oChatOfAccount);
        }
    });
    function PickAccountHeads(oChatOfAccount)
    {
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oChatOfAccount,
            ControllerName: "ChartsOfAccount",
            ActionName: "GetsbyAccountTypeWithName",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AccountHeadID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "AccountCode", title: "Account Code", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "AccountHeadName", title: "Account Name", width: 220, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ParentHeadName", title: "Category Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winAccountHead',
                        winclass: 'clsAccountHead',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblAccountHeads',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'AccountHeadName',
                        windowTittle: 'Account Head List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
                return;
            }
        });
    }
    $("#btnAddAccountsTwo").click(function(){

        var sAccountHeadName="";
        if(parseInt($("#cboComponentTypeTwo").val())<=0)
        {
            alert("Please enter account Type!");
            $('#cboComponentTypeTwo').focus();
            return;
        }
        var oChatOfAccount = {
            AccountHeadName : sAccountHeadName,
            AccountTypeInInt :  parseInt($("#cboComponentTypeTwo").val())
        }
        PickAccountHeadsTwo(oChatOfAccount);

    });

    $("#txtAccountHeadNameTwo").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sAccountHeadName = $.trim($('#txtAccountHeadNameTwo').val())
            if(sAccountHeadName === null || sAccountHeadName === "")
            {
                alert("Please enter account head Name!");
                $('#txtAccountHeadNameTwo').focus();
                return;
            }

            if(parseInt($("#cboComponentTypeTwo").val())<=0)
            {
                alert("Please enter account Type!");
                $('#cboComponentTypeTwo').focus();
                return;
            }
            var oChatOfAccount = {
                AccountHeadName : sAccountHeadName,
                AccountTypeInInt :  parseInt($("#cboComponentTypeTwo").val())
            }
            PickAccountHeadsTwo(oChatOfAccount);
        }
    });



    function PickAccountHeadsTwo(oChatOfAccount)
    {
        var obj = {
            BaseAddress: sessionStorage.getItem("BaseAddress"),
            Object: oChatOfAccount,
            ControllerName: "ChartsOfAccount",
            ActionName: "GetsbyAccountTypeWithName",
            IsWinClose: false
        };
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AccountHeadID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "AccountCode", title: "Account Code", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "AccountHeadName", title: "Account Name", width: 220, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ParentHeadName", title: "Category Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winAccountHeadTwo',
                        winclass: 'clsAccountHeadTwo',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblAccountHeadsTwo',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'AccountHeadName',
                        windowTittle: 'Account Head List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
                return;
            }
        });
    }

    //End AccountHead Picker

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid === 'winAccountHead')
        {
            if (oreturnobjs.length>0)
            {
                for(var i=0;i<oreturnobjs.length;i++)
                {
                    if(!IsExistAccountHead(oreturnobjs[i].AccountHeadID))
                    {
                        
                        var oLedgerGroupSetup = $('#winLedgerGroupSetup').data('LedgerGroupSetup');

                        var oLedgerBrekDown = {
                            LedgerBreakDownID:0,
                            ReferenceID:oLedgerGroupSetup.LedgerGroupSetupID,
                            IsEffectedAccounts : false,
                            AccountHeadID :oreturnobjs[i].AccountHeadID,
                            AccountCode :oreturnobjs[i].AccountCode,
                            AccountHeadName :oreturnobjs[i].AccountHeadName,
                            Note : "N/A"
                        };
                        $('#tblLedgerBreakDown').datagrid('appendRow',oLedgerBrekDown);
                    }

                }

            }
        }
        if (oPickerobj.winid === 'winAccountHeadTwo')
        {
            if (oreturnobjs.length>0)
            {
                for(var i=0;i<oreturnobjs.length;i++)
                {
                    if(!IsExistAccountHead(oreturnobjs[i].AccountHeadID))
                    {
                        var oLedgerBrekDown = {
                            LedgerBreakDownID:0,
                            ReferenceID:_oStatementSetup.StatementSetupID,
                            IsEffectedAccounts : true,
                            AccountHeadID :oreturnobjs[i].AccountHeadID,
                            AccountCode :oreturnobjs[i].AccountCode,
                            AccountHeadName :oreturnobjs[i].AccountHeadName,
                            Note : "N/A"
                        };
                        $('#tblEffectedAccounts').datagrid('appendRow',oLedgerBrekDown);
                    }

                }

            }
        }
    }
    function IsExistAccountHead(nAccountHeadID)
    {
        var oAccountHeads = $('#tblLedgerBreakDown').datagrid('getRows');
        for(var j=0;j<oAccountHeads.length;j++)
        {
            if(parseInt(oAccountHeads[j].AccountHeadID)== parseInt(nAccountHeadID))
            {
                return true;
            }
        }
        return false;
    }

    $("#btnRemoveAccounts").click(function(){
        var oLedgerBrekDown= $('#tblLedgerBreakDown').datagrid('getSelected');
        if(oLedgerBrekDown == null)
        {
            alert("Please select an item.");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblLedgerBreakDown').datagrid('getRowIndex',oLedgerBrekDown);
        $('#tblLedgerBreakDown').datagrid('deleteRow',SelectedRowIndex);
    });
   
     $("#btnRemoveAccountsTwo").click(function(){
        var oLedgerBrekDown= $('#tblEffectedAccounts').datagrid('getSelected');
        if(oLedgerBrekDown == null)
        {
            alert("Please select an item.");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblEffectedAccounts').datagrid('getRowIndex',oLedgerBrekDown);
        $('#tblEffectedAccounts').datagrid('deleteRow',SelectedRowIndex);
    });

    ////////end AccountHead

    function updateProgress() {
        var value =$('#progbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds) {
        $("#progbarParent").hide();
    }

</script>
