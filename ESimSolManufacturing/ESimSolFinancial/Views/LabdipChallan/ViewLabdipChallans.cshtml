@{
    ViewBag.Title = "Lab Dip Challan List";
}

@model IEnumerable <ESimSol.BusinessObjects.LabdipChallan>

<div ng-app="LabdipChallanModule">
    <div ng-controller="LabdipChallanController">
        <div class="row ui-grid-top-panel">
            <div class="container">
                <div class="form-inline">
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="AdvanceSearch()" ng-hide="btnAdvSearch"> <span class="glyphicon glyphicon-search" aria-hidden="true"> Adv.Search</span></button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="add()" ng-hide="btnAdd"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> New</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="edit()" ng-hide="btnEdit"> <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="delete()" ng-hide="btnDelete"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Delete</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="view()" ng-hide="btnView"> <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span> View</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PrintPreview()" > <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Preview</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="UpdateStatus(1)" ng-hide="btnForwardToHO"> <span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span> Forward To HO</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="UpdateStatus(2)" ng-hide="btnForwardToBuyer"> <span class="glyphicon glyphicon-user" aria-hidden="true"></span> Forward To Buyer</button>
                </div>
            </div>
        </div>
        <div class="row" style="margin:2px; padding:0;">
            <div style="width:100%" ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav class="grid ui-grid-selectable"></div>
        </div>
        
    </div>

</div>

<style type="text/css">

     .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .grid {
        height: 450px;
        width: 100%;
    }

    .custom-pagination {
        margin-top: -15px;
        margin-bottom: -15px;
    }

    .spacing {
        padding-bottom: 5px;
    }
</style>

<script type="text/javascript">

    var pager =[];
    var _nBUID=0;
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oLabdipChallans =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oRequisitionTypes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.RequisitionTypes));
    _nBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    _nOptType =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.OptType));

    var oIssueStores =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.IssueStores));
    var oReceiveStores =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ReceivedStores));

    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    var oOrderTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DUOrderSetups));
    sessionStorage.setItem("BUID",_nBUID);
    debugger;
    var  LabdipChallanModule = angular.module('LabdipChallanModule', ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.cellNav','ui.grid.resizeColumns','ms.service']);
    LabdipChallanModule.controller('LabdipChallanController', function ($scope, $http, $uibModal,$interval,$timeout,  $log, uiGridConstants, msModal, advanceSearch, userSession) {
        debugger;
        oLabdipChallans= (userSession.getData('LabdipChallans').length>0)? userSession.getData('LabdipChallans'):oLabdipChallans;
        $scope.CompareOperators= oCompareOperators;
        $scope.IssueStores=oIssueStores;
        $scope.ReceiveStores=oReceiveStores;
        $scope.RequisitionTypes=oRequisitionTypes;
        $scope.BUID=_nBUID;
        $scope.OptType=_nOptType;
        $scope.btnAdd = $scope.btnEdit = $scope.btnDelete = $scope.btnApprove= $scope.btnIssue =$scope.btnReceive = $scope.btnUndoApprove =false;

        $scope.gridOptions ={
            enableSorting: true,
            enableFullRowSelection: true,
            //enableRowHeaderSelection: false,
            enableSelectAll: false,
            multiSelect:false,
            enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                { field: 'ChallanNoFull', name: 'Challan No', width: '10%' },
                { field: 'ChallanDateST', name: 'Challan Date', width:'10%', enableCellEdit: false },
                { field: 'ColorCount', name: 'ColorCount', width: '9%' , cellFilter:'number:0', cellClass:"text-right"},
                { field: 'ContractorName', name: 'ContractorName', width: '30%' },
                { field: 'StatusST', name: 'Status', width: '14%' },
                { field: 'PrepareBy', name: 'Prepare By', width: '10%' },
            ],

            data:oLabdipChallans,

            onRegisterApi:function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                debugger;
                if(oLabdipChallans.length>0 && userSession.getRowIndex()>=0)
                {
                    $scope.gridApi.grid.modifyRows(oLabdipChallans);
                    $scope.gridApi.selection.selectRow(oLabdipChallans[userSession.getRowIndex()]);
                    //$scope.RowSelect(oLabdipChallans[userSession.getRowIndex()]);
                }
                //$scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                //    $scope.RowSelect(row.entity ); });
                userSession.clear();
            }
        };
      
        $scope.singleFilter=function(renderableRows){

            var matcherName = new RegExp(angular.uppercase($scope.Name));
            var matcherOperationTypeST = new RegExp(angular.uppercase($scope.OperationTypeST));
            renderableRows.forEach( function( row ) {
                debugger;
                var match = false;
                if (angular.uppercase(row.entity['Name']).match(matcherName) && angular.uppercase(row.entity['OperationTypeST']).match(matcherOperationTypeST)){
                    match = true;
                }
                if ( !match ){
                    row.visible = false;
                }
            });
            return renderableRows;
        };

        $scope.UpdateStatus = function (nStatus) {
            var oLabdipChallan=$scope.gridApi.selection.getSelectedRows()[0];

            if(oLabdipChallan==null || oLabdipChallan.LabdipChallanID<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }

            if(oLabdipChallan.Status==2)
            {
                alert("Select Item Is Already Forwarded To Head Office");return;
            }

            var sMsg="Head Office";
            if(nStatus==2)
                sMsg="Buyer";

            if(oLabdipChallan.Status==nStatus)
            {
                alert("Select Item Is Already Forwarded To "+sMsg+" !");return;
            }

            if (!confirm("Confirm Sending To "+sMsg+"?")) return ;

            oLabdipChallan.Status=nStatus;
            var SelectedIndex=$scope.gridOptions.data.indexOf(oLabdipChallan);

            $http.post(_sBaseAddress+'/LabdipChallan/UpdateStatus',JSON.stringify(oLabdipChallan)).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    console.log(result);
                    if(result.LabdipChallanID>0 && result.ErrorMessage=="")
                    {
                        debugger;
                        alert("Successfully Send To "+sMsg+"!!");
                        $scope.gridOptions.data[SelectedIndex]=result;

                        $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                        $scope.gridApi.selection.selectRow(SelectedIndex);
                        //$timeout(function () {
                        //    $scope.gridApi.selection.selectRow(SelectedIndex);
                        //},200)
                        //$scope.gridApi.selection.clearSelectedRows();
                        //$scope.gridApi.core.refresh();
                        //$scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                        //$scope.gridApi.selection.selectRow(SelectedIndex);
                    }
                    else
                    {
                        alert(result.ErrorMessage);
                    }
                },
                function (response) { alert(response.statusText);}
        );
        };

        $scope.add = function () {
            sessionStorage.setItem("Operation", "New");
            sessionStorage.removeItem("SelectedRowIndex");
            sessionStorage.setItem("SelectedRowIndex",-1);
            sessionStorage.setItem("LabdipChallanHeader", "Add LabdipChallan");
            sessionStorage.setItem("LabdipChallans", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("LabdipChallan", JSON.stringify([]));
            sessionStorage.setItem("BackLink", window.location.href);

            var tsv=((new Date()).getTime())/1000;
            window.location.href = _sBaseAddress+ "/LabdipChallan/ViewLabdipChallan?id=0";
        };
        $scope.edit = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data.length<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            if(data[0].Status!=0)
            {
                alert("Sorry, Your Selected Item Is Already Forwarded!");  return;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.LabdipChallanID==data[0].LabdipChallanID){

                    sessionStorage.setItem("Operation", "Edit");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("LabdipChallanHeader", "Edit LabdipChallan");
                    sessionStorage.setItem("LabdipChallans", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("LabdipChallan", JSON.stringify($scope.gridOptions.data[index]));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/LabdipChallan/ViewLabdipChallan?id="+value.LabdipChallanID;
                }
            },$scope.gridOptions.data);
        };
        $scope.view = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            angular.forEach($scope.gridOptions.data,function(value,index){
                if(value.LabdipChallanID==data[0].LabdipChallanID){
                    sessionStorage.setItem("Operation", "View");
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("LabdipChallanHeader", "View LabdipChallan");
                    sessionStorage.setItem("LabdipChallans", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("LabdipChallan", JSON.stringify($scope.gridOptions.data[index]));
                    sessionStorage.setItem("BackLink", window.location.href);
                    var tsv=((new Date()).getTime())/1000;
                    window.location.href = _sBaseAddress+ "/LabdipChallan/ViewLabdipChallan?id="+value.LabdipChallanID;
                }
            },$scope.gridOptions.data);
        };
        $scope.delete = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }

            if(data[0].Status!=0)
            {
                alert("Sorry, Your Selected Item Is Already Forwarded!");  return;
            }

            if (!confirm("Confirm to Delete?")) return ;

            $http.post(_sBaseAddress+ '/LabdipChallan/Delete',JSON.stringify(data[0])).then(
                            function (response) {
                                if(jQuery.parseJSON(response.data)=='Deleted'){
                                    angular.forEach($scope.gridOptions.data,function(value,index){
                                        if(value.LabdipChallanID==data[0].LabdipChallanID){
                                            $scope.gridOptions.data.splice(index,1);
                                        }
                                    },$scope.gridOptions.data);
                                    alert("Delete Successfully.");
                                }
                                else{
                                    alert(jQuery.parseJSON(response.data));
                                }
                            },
                            function (response) {alert(jQuery.parseJSON(response.data));}
                        );

        };

        $scope.PrintPreview = function ()
        {
            var data = $scope.gridApi.selection.getSelectedRows();
            var oLabdipChallan = data[0];
            if(oLabdipChallan==null || oLabdipChallan.LabdipChallanID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress + '/LabdipChallan/PrintLabDipChallan?nLDCID='+oLabdipChallan.LabdipChallanID+"&nBUID="+$scope.BUID);
        };

        $scope.AdvanceSearch=function()
        {
            // obj:{ProductName:'@@ContractorID',BUID: sessionStorage.getItem('BUID')},
           // objName:'ProductName',
            var paramObj_Contractor={
                obj:{Params: '2,3' + '~' +'@@ContractorID'+'~'+sessionStorage.getItem('BUID')},
                objName:'Params',
                url:_sBaseAddress+'/Contractor/ContractorSearchByNameType',
                title:'Contractor List',
                multiSelect:true,
                columns:[{ field: 'Name', name: 'Contractor Name' },{ field: 'Address', name: 'Contractor Address' }]
            }
            var oElementList = [{ DisplayName: "Challan No",  BOField: "ChallanNo",      InputType: 'text' },
                                { DisplayName: "Order No",    BOField: "LabdipNo",       InputType: 'text' },
                                { DisplayName: "Color No",    BOField: "ColorNo",        InputType: 'text' },
                                { DisplayName: "Challan Date",BOField: "ChallanDate",    InputType: 'date' },
                                { DisplayName: "Contractor",  BOField: "ContractorID",   InputType: 'picker', PickerObject:paramObj_Contractor },
                                { DisplayName: ["Yet To Forward (HO)","Yet To Forward (Buyer)"],  BOField: ["YetToHO","YetToBuyer"],   InputType: 'bool'},
                                //{ DisplayName: "SomeType",    BOField: "SomeType",       InputType: 'select', OptionList:[{id:2,Value:"KisuNai"}]},

            ];
            var modalObj={
                size:'md',
                title:"Advance Search",
                url:_sBaseAddress+'/Home/AdvanceSearch',
                modalController:'ContractorModalCtrl',appController:'LabdipChallanCtrl',
                CompareOperators:oCompareOperators,
                HtmlElements:oElementList,
                isAdvanceSearch:true, // if TRUE: 'urlAdvanceSearch' should be define
                urlAdvanceSearch:_sBaseAddress + '/LabdipChallan/AdvSearch'
            }

            var modalInstance=advanceSearch.Instance(modalObj);
            modalInstance.result.then(function (result) 
            {
                console.log(result);
                $scope.gridOptions.data=result;
            }, function () 
            {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };
        //button hide
        //$scope.btnAdd = $scope.btnEdit = $scope.btnView = $scope.btnDelete = $scope.btnApprove= $scope.btnIssue =$scope.btnReceive = $scope.btnUndoApprove = $scope.btnAdvSearch = true ;
        ////button show
        //if(PermissionChecker('Add','LabdipChallan',oAuthorizationRolesMapping)){$scope.btnAdd = false; }
        //if(PermissionChecker('Edit','LabdipChallan',oAuthorizationRolesMapping)){$scope.btnEdit = false;}
        //if(PermissionChecker('View','LabdipChallan',oAuthorizationRolesMapping)){$scope.btnView = false;}
        //if(PermissionChecker('Approved','LabdipChallan',oAuthorizationRolesMapping)){$scope.btnApprove = false;}
        //if(PermissionChecker('Issued','LabdipChallan',oAuthorizationRolesMapping)){$scope.btnIssue = false;}
        //if(PermissionChecker('Received','LabdipChallan',oAuthorizationRolesMapping)){$scope.btnReceive = false;}
        //if(PermissionChecker('UndoRequest','LabdipChallan',oAuthorizationRolesMapping)){$scope.btnUndoApprove = false;}
        //if(PermissionChecker('AdvSearch','LabdipChallan',oAuthorizationRolesMapping)){$scope.btnAdvSearch = false;}

        //function CheckControll()
        //{
        //    debugger;
        //    if($scope.btnAdd == false  && !PermissionChecker('Add','LabdipChallan',oAuthorizationRolesMapping))
        //    {$scope.btnAdd = true; }
        //    if($scope.btnEdit == false && !PermissionChecker('Edit','LabdipChallan',oAuthorizationRolesMapping))
        //    {$scope.btnEdit = true;}
        //    if($scope.btnView == false && !PermissionChecker('View','LabdipChallan',oAuthorizationRolesMapping))
        //    {$scope.btnView = true;}
        //    if($scope.btnApprove == false && !PermissionChecker('Approved','LabdipChallan',oAuthorizationRolesMapping))
        //    {$scope.btnApprove = true;}
        //    if($scope.btnDelete == false && !PermissionChecker('Delete','LabdipChallan',oAuthorizationRolesMapping))
        //    {$scope.btnDelete = true;}
        //    if($scope.btnIssue == false && !PermissionChecker('Issued','LabdipChallan',oAuthorizationRolesMapping))
        //    {$scope.btnIssue = true;}
        //    if($scope.btnReceive == false && !PermissionChecker('Received','LabdipChallan',oAuthorizationRolesMapping))
        //    {$scope.btnReceive = true;}
        //    if($scope.btnUndoApprove == false && !PermissionChecker('UndoRequest','LabdipChallan',oAuthorizationRolesMapping))
        //    {$scope.btnUndoApprove = true;}
        //    if($scope.btnAdvSearch == false && !PermissionChecker('AdvSearch','LabdipChallan',oAuthorizationRolesMapping))
        //    {$scope.btnAdvSearch = true;}
        //}

    });
</script>
                       

              
