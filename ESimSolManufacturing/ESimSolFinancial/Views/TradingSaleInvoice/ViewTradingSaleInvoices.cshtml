@{
    ViewBag.Title = "Sale Invoice List";
}
@model IEnumerable<ESimSol.BusinessObjects.TradingSaleInvoice>
    <div id="progbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable">
        <div style="margin-left:0px; height:100%; width:100%; font-family:Tahoma">
            <table id="tblTradingSaleInvoices" title="Sale Invoice List" class="easyui-datagrid" fit="true" fitcolumns="true" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbar">
                <thead>
                    <tr>
                        <th field="SalesTypeSt" width="90">SalesType</th>
                        <th field="InvoiceNo" width="90">Invoice No</th>
                        <th field="TradingSaleInvoiceStatusSt" width="90">Status</th>
                        <th field="InvoiceDateInString" width="90">Invoice Date</th>
                        <th field="BuyerName" width="130">Buyer</th>
                        <th field="ContactPersonName" width="120">Contact Person</th>
                        <th field="ApprovedByName" width="120">Approved By</th>
                        <th field="CurrencyName" width="60">Currency</th>
                        <th field="GrossAmount" width="100" formatter="formatPrice" align="right">Gross Amount</th>
                        <th field="DiscountAmount" width="100" formatter="formatPrice" align="right">Discount Amount</th>
                        <th field="VatAmount" width="100" formatter="formatPrice" align="right">Vat Amount</th>
                        <th field="ServiceCharge" width="100" formatter="formatPrice" align="right">Service Charge</th>
                        <th field="NetAmount" width="100" formatter="formatPrice" align="right">Net Amount</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbar">
                <input type="text" id="txtSearchByInvoiceNo" placeholder="Search by Invoice No/Buyer Name" style="width:210px" />
                <a id="btnAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Adv Search</a>
                <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
                <a id="btnView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
                <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                <a id="btnWaitForApproved" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Wait for Approved</a>
                <a id="btnUndoApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" plain="true" onclick="UndoApprove()">Undo App</a>
                <a id="btnApproved" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Approved</a>
                <a id="btnPreview" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview</a>
                <a id="btnPOSPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">POS Print</a>
                <a id="btnProfitLoss" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Profit/Loss</a>
                <a id="btnPrintList" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print List</a>
                <a id="btnWaitForChallan" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Wait for Challan</a>
                <a id="btnMakeChallan" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Make Challan</a>
                <a id="btnReqForRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-redo" plain="true">Req For Revise</a>
                <a id="btnAcceptRevise" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true" onclick="AcceptRevise()">Accept Revise</a>
                <a id="btnReviseHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">Revise History</a>
            </div>
        </div>
        <div id="winReviseRequest" class="easyui-window" title="Request For Revise" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <fieldset style="margin-top:3px">
                    <table border="0" style="font-size:12px">
                        <tr>
                            <td style="width:150px; text-align:right">Request To:</td>
                            <td style="width:250px; text-align:left"><select id="cboReviseRequestTo" style="width:225px;font-size:12px;" /></td>
                        </tr>
                        <tr>
                            <td style="width:150px; text-align:right">Note :</td>
                            <td style="width:250px; text-align:left">
                                <input type="text" id="txtReviseRequestNote" style="width:220px" />
                            </td>
                        </tr>
                    </table>
                </fieldset>

                <fieldset style="margin-bottom:3px">
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; width:400px">
                        <tr>
                            <td style="width:300px; text-align:right"></td>
                            <td style="width:50px">
                                <a id="btnReviseRequestConfirm" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Confirm</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnReviseRequestClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
        <div id="winReviseHistory" class="easyui-window" title="Revise History" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <table id="tblReviseHistory" class="easyui-datagrid" style="width: 900px; height: 350px; margin: 0;" data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbarReviseHistory' ">
                <thead>
                    <tr>
                        <th field="SalesTypeSt" width="90">SalesType</th>
                        <th field="InvoiceNo" width="90">Invoice No</th>
                        <th field="TradingSaleInvoiceStatusSt" width="90">Status</th>
                        <th field="InvoiceDateInString" width="90">Invoice Date</th>
                        <th field="BuyerName" width="130">Buyer</th>
                        <th field="ContactPersonName" width="120">Contact Person</th>
                        <th field="ApprovedByName" width="120">Approved By</th>
                        <th field="CurrencyName" width="60">Currency</th>
                        <th field="GrossAmount" width="100" formatter="formatPrice" align="right">Gross Amount</th>
                        <th field="DiscountAmount" width="100" formatter="formatPrice" align="right">Discount Amount</th>
                        <th field="VatAmount" width="100" formatter="formatPrice" align="right">Vat Amount</th>
                        <th field="ServiceCharge" width="100" formatter="formatPrice" align="right">Service Charge</th>
                        <th field="NetAmount" width="100" formatter="formatPrice" align="right">Net Amount</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarReviseHistory">
                <a id="btnPrintReviseHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
            </div>
            <fieldset class="actionfieldsetstyle">
                <legend>Actions : </legend>
                <a id="btnCloseReviseHistory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
            </fieldset>
        </div>
        <div id="winAdvanceSearch" class="easyui-window" title="Advance Search" style="width:535px;height:345px;padding:2px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div>
                <fieldset>
                    <legend style="font-weight:bold"> Searching Criteria : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:170px; text-align:right">
                                Sales Type :
                            </td>
                            <td style="width:370px">
                                <select style="width:375px" id="cboSalesType"></select>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:170px; text-align:right">
                                Invocie No :
                            </td>
                            <td style="width:370px">
                                <input type="text" style="width: 370px;" id="txtInvocieNo" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width:170px; text-align:right">
                                Invocie Date :
                            </td>
                            <td style="width:370px">
                                <table border="0" cellpadding="0" cellspacing="0" style="font-size: 12px">
                                    <tr>
                                        <td style="width: 120px; font-size: 12px; text-align: left">
                                            <select id="cboInvoiceDate" style="width:120px"></select>
                                        </td>
                                        <td style="width: 120px; font-size: 12px">
                                            <input id="txtInvoiceStartDate" type="text" style="width: 120px;" class="easyui-datebox" disabled="disabled" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                        </td>
                                        <td style="width: 10px; font-size: 12px">
                                            To
                                        </td>
                                        <td style="width: 120px; font-size: 12px">
                                            <input id="txtInvoiceEndDate" type="text" style="width: 120px;" class="easyui-datebox" disabled="disabled" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:170px; text-align:right">
                                Invocie Amount :
                            </td>
                            <td style="width:370px">
                                <table border="0" cellpadding="0" cellspacing="0" style="font-size: 12px">
                                    <tr>
                                        <td style="width: 120px; font-size: 12px; text-align: left">
                                            <select id="cboInvoiceAmount" style="width:120px"></select>
                                        </td>
                                        <td style="width: 120px; font-size: 12px">
                                            <input id="txtInvoiceAmountStart" style="width:114px" />
                                        </td>
                                        <td style="width: 10px; font-size: 12px">
                                            To
                                        </td>
                                        <td style="width: 120px; font-size: 12px">
                                            <input id="txtInvoiceAmountEnd" style="width:114px" />
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:170px; text-align:right">
                                Approved By :
                            </td>
                            <td style="width:370px">
                                <select id="cboApprovedBy" style="width:375px"></select>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:170px; text-align:right">
                                Buyer(s) :
                            </td>
                            <td style="width:370px">
                                <input type="text" style="width: 282px;" id="txtBuyerName" placeholder="Press enter with Buyer name/code" />
                                <input type="button" style="width: 30px;" id="btnBuyerClear" value="C" />
                                <input type="button" style="width: 50px;" id="btnBuyerPicker" value="Pick" />
                            </td>
                        </tr>
                        <tr>
                            <td style="width:170px; text-align:right">
                                Product(s) :
                            </td>
                            <td style="width:370px">
                                <input type="text" style="width: 282px;" id="txtProductName" placeholder="Press enter with product name/code" />
                                <input type="button" style="width: 30px;" id="btnProductClear" value="C" />
                                <input type="button" style="width: 50px;" id="btnProductPicker" value="Pick" />
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
            <fieldset style="width:99%; vertical-align:top;">
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                    <tr>
                        <td style="width:100px;text-align:right">
                            <a id="btnAdvSearchReset" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"> Reset</a>
                        </td>
                        <td style="width:408px;text-align:right;">
                            <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Search</a>
                            <a id="btnAdvSearchClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <script type="text/javascript">
     
        $(document).ready(function () {
            debugger;
        var nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
        var oApprovalUsers=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ApprovalUsers));
        var oDateCompareOperatorObjs =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DateCompareOperatorObjs));
        var oAmountCompareOperatorObjs =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.AmountCompareOperatorObjs));
        var oSalesTypeObjs =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.SalesTypeObjs));
        var oTradingSaleInvoices =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oAURolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
            var oTempTradingSaleInvoices =sessionStorage.getItem("TradingSaleInvoices");

            if(oTempTradingSaleInvoices!=null)
            {
                oTradingSaleInvoices = jQuery.parseJSON(oTempTradingSaleInvoices);
            }
            RefreshList(oTradingSaleInvoices);
            RefreshControlLayout(oAURolesMapping);
            sessionStorage.setItem("BUID", nBUID);
            $("#progbar").progressbar({ value: 0 });
            $("#progbarParent").hide();
            $('#txtBuyerName').data('Buyers', []);
            $('#txtProductName').data('Products', []);
            $('#cboApprovedBy').data('ApprovalUsers', oApprovalUsers);
            $('#cboInvoiceDate').data('DateCompareOperatorObjs', oDateCompareOperatorObjs);
            $('#cboInvoiceAmount').data('AmountCompareOperatorObj', oAmountCompareOperatorObjs);
            $('#cboSalesType').data('SalesTypeObjs', oSalesTypeObjs)
            $('#tblTradingSaleInvoices').data('TradingSaleInvoices', oTradingSaleInvoices);
            $('#txtInvoiceAmountStart,#txtInvoiceAmountEnd').icsCurrencyBox();
        });
        function UndoApprove()
        {
            debugger;
            // alert(HttpContext.Current.Session[SessionInfo.currentUserID]);

            var oTradingSaleInvoice = $('#tblTradingSaleInvoices').datagrid('getSelected');
        
            if(oTradingSaleInvoice==null || oTradingSaleInvoice.TradingSaleInvoiceID<=0)
            {
                alert("Please select an item from list!");
                return;
            }
            if(oTradingSaleInvoice.IsChallanExist==true){
                alert("It's Already Made Challan");
                return;
            }
            if(parseInt(oTradingSaleInvoice.ApprovedBy)==0)
            {
                alert("Your selected Sale invoice Not already approved!");
                return;


            }
            StatusChange(oTradingSaleInvoice);
        }


        function StatusChange(oTradingSaleInvoice)
        {
            debugger;
            var SelectedRowIndex=$('#tblTradingSaleInvoices').datagrid('getRowIndex',oTradingSaleInvoice);
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/TradingSaleInvoice/UndoApproved",
                traditional: true,
                data:  JSON.stringify(oTradingSaleInvoice),
                contentType: "application/json; charset=utf-8",
                success: function (data) {


                    var oTradingSaleInvoice= jQuery.parseJSON(data);
                    if (parseInt(oTradingSaleInvoice.TradingSaleInvoiceID)>0) {
                        alert("Successfully Undo");
                        $('#tblTradingSaleInvoices').datagrid('updateRow',{index: SelectedRowIndex,	row: oTradingSaleInvoice});
                    }
                    else
                    {
                        alert(_oTradingSaleInvoice.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });


        }


        $('#btnWaitForApproved').click(function (e) {
            var oTradingSaleInvoice = {
                TradingSaleInvoiceID : 0,
                BUID : parseInt(sessionStorage.getItem("BUID"))
            };

            $.ajax({
                type: "POST",
                dataType: "JSON",
                url: sessionStorage.getItem("BaseAddress")+  "/TradingSaleInvoice/WaitForApproval",
                data:  JSON.stringify(oTradingSaleInvoice),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var  oTradingSaleInvoices = jQuery.parseJSON(data);
                    if (oTradingSaleInvoices != null) {
                        if(oTradingSaleInvoices.length>0)
                        {
                            if(oTradingSaleInvoices[0].ErrorMessage=="")
                            {
                                RefreshList(oTradingSaleInvoices);
                                $('#tblTradingSaleInvoices').data('TradingSaleInvoices', oTradingSaleInvoices);
                            }
                            else
                            {
                                alert(oTradingSaleInvoices[0].ErrorMessage);
                            }
                        }
                        else
                        {
                            alert("Data not found!!");
                        }
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        });

        $('#btnWaitForChallan').click(function (e) {
            var oTradingSaleInvoice = {
                TradingSaleInvoiceID : 0,
                BUID : parseInt(sessionStorage.getItem("BUID"))
            };

            $.ajax({
                type: "POST",
                dataType: "JSON",
                url: sessionStorage.getItem("BaseAddress")+  "/TradingSaleInvoice/WaitForChallan",
                data:  JSON.stringify(oTradingSaleInvoice),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var  oTradingSaleInvoices = jQuery.parseJSON(data);
                    if (oTradingSaleInvoices != null) {
                        if(oTradingSaleInvoices.length>0)
                        {
                            if(oTradingSaleInvoices[0].ErrorMessage=="")
                            {
                                RefreshList(oTradingSaleInvoices);
                                $('#tblTradingSaleInvoices').data('TradingSaleInvoices', oTradingSaleInvoices);
                            }
                            else
                            {
                                alert(oTradingSaleInvoices[0].ErrorMessage);
                            }
                        }
                        else
                        {
                            alert("Data not found!!");
                        }
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        });

        $('#btnAdd').click(function (e) {
            var oTradingSaleInvoices= $('#tblTradingSaleInvoices').datagrid('getRows');
            sessionStorage.setItem("TradingSaleInvoices", JSON.stringify(oTradingSaleInvoices));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("TradingSaleInvoiceHeader", "Add Sale Invoice");
            sessionStorage.setItem("BackLink", window.location.href);
            var tsv=((new Date()).getTime())/1000;
            window.location.href = sessionStorage.getItem("BaseAddress")+ "/TradingSaleInvoice/ViewTradingSaleInvoice?id=0&sOID=0&ts="+tsv;
        });

        $('#btnEdit').click(function (e) {
            var oTradingSaleInvoice= $('#tblTradingSaleInvoices').datagrid('getSelected');
            if(oTradingSaleInvoice==null || oTradingSaleInvoice.TradingSaleInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(parseInt(oTradingSaleInvoice.ApprovedBy)!=0)
            {
                alert("Your selected Invaoice already approved!");
                return;
            }
            var tsv=((new Date()).getTime())/1000;
            var SelectedRowIndex=$('#tblTradingSaleInvoices').datagrid('getRowIndex',oTradingSaleInvoice);
            var oTradingSaleInvoices= $('#tblTradingSaleInvoices').datagrid('getRows');
            sessionStorage.setItem("TradingSaleInvoices", JSON.stringify(oTradingSaleInvoices));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("TradingSaleInvoiceHeader", "Edit Sale Invoice");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = sessionStorage.getItem("BaseAddress")+  "/TradingSaleInvoice/ViewTradingSaleInvoice?id="+oTradingSaleInvoice.TradingSaleInvoiceID+"&sOID=0&ts="+tsv;
        });

        $("#btnView").click(function(){
            var oTradingSaleInvoice= $('#tblTradingSaleInvoices').datagrid('getSelected');
            if(oTradingSaleInvoice==null || oTradingSaleInvoice.TradingSaleInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var tsv=((new Date()).getTime())/1000;
            var SelectedRowIndex=$('#tblTradingSaleInvoices').datagrid('getRowIndex',oTradingSaleInvoice);
            var oTradingSaleInvoices= $('#tblTradingSaleInvoices').datagrid('getRows');
            sessionStorage.setItem("TradingSaleInvoices", JSON.stringify(oTradingSaleInvoices));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("TradingSaleInvoiceHeader", "View Sale Invoice");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = sessionStorage.getItem("BaseAddress")+  "/TradingSaleInvoice/ViewTradingSaleInvoice?id="+oTradingSaleInvoice.TradingSaleInvoiceID+"&sOID=0&ts="+tsv;
        });

        $('#btnDelete').click(function (e) {
            var oTradingSaleInvoice = $('#tblTradingSaleInvoices').datagrid('getSelected');
            if(oTradingSaleInvoice==null || oTradingSaleInvoice.TradingSaleInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(parseInt(oTradingSaleInvoice.ApprovedBy)!=0)
            {
                alert("Please selected Sale invoice already approved!");
                return;
            }
            if (!confirm("Confirm to Delete?")) return ;
            var SelectedRowIndex=$('#tblTradingSaleInvoices').datagrid('getRowIndex',oTradingSaleInvoice);
            $.ajax({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress")+ "/TradingSaleInvoice/Delete",
                traditional: true,
                data:  JSON.stringify(oTradingSaleInvoice),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Data delete successfully")
                    {
                        alert("Delete sucessfully");
                        $('#tblTradingSaleInvoices').datagrid('deleteRow',SelectedRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        });

        $('#btnApproved').click(function (e) {
            var oTradingSaleInvoice = $('#tblTradingSaleInvoices').datagrid('getSelected');
            if(oTradingSaleInvoice==null || parseInt(oTradingSaleInvoice.TradingSaleInvoiceID)<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(parseInt(oTradingSaleInvoice.ApprovedBy)!=0)
            {
                alert("Please selected Sale invoice already approved!");
                return;
            }
            if (!confirm("Confirm to Approved?")) return ;
            var SelectedRowIndex=$('#tblTradingSaleInvoices').datagrid('getRowIndex',oTradingSaleInvoice);
            $.ajax({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress")+ "/TradingSaleInvoice/Approved",
                traditional: true,
                data:  JSON.stringify(oTradingSaleInvoice),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    oTradingSaleInvoice = jQuery.parseJSON(data);
                    if (parseInt(oTradingSaleInvoice.TradingSaleInvoiceID)>0) {
                        alert("Approved Successfully");
                        $('#tblTradingSaleInvoices').datagrid('updateRow',{index: SelectedRowIndex,	row: oTradingSaleInvoice});
                    }
                    else {
                        alert(oTradingSaleInvoice.ErrorMessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        });

        $('#btnMakeChallan').click(function (e) {
            var oTradingSaleInvoice = $('#tblTradingSaleInvoices').datagrid('getSelected');
            if(oTradingSaleInvoice==null || parseInt(oTradingSaleInvoice.TradingSaleInvoiceID)<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(parseInt(oTradingSaleInvoice.ApprovedBy)==0)
            {
                alert("Please select an approved Sale invoice!");
                return;
            }
            var SelectedRowIndex=$('#tblTradingSaleInvoices').datagrid('getRowIndex',oTradingSaleInvoice);
            var oTradingSaleInvoices= $('#tblTradingSaleInvoices').datagrid('getRows');
            sessionStorage.setItem("TradingSaleInvoices", JSON.stringify(oTradingSaleInvoices));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("TradingDeliveryChallanHeader", "Add Delivery Challan");
            
            sessionStorage.setItem("BackLink", window.location.href);
            var tsv=((new Date()).getTime())/1000;
            window.location.href = sessionStorage.getItem("BaseAddress")+ "/TradingDeliveryChallan/ViewTradingDeliveryChallan?id=0&siid="+parseInt(oTradingSaleInvoice.TradingSaleInvoiceID)+"&ts="+tsv;
        });

        function RefreshList(oTradingSaleInvoices)
        {
            data = oTradingSaleInvoices;
            data={"total":""+data.length+"","rows":data};
            $('#tblTradingSaleInvoices').datagrid('loadData',data);
            var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
            $('#tblTradingSaleInvoices').datagrid('selectRow',nIndex);
        }

        $('#btnPreview').click(function (e) {
            debugger;
            var oTradingSaleInvoice = $('#tblTradingSaleInvoices').datagrid('getSelected');
            if(oTradingSaleInvoice==null || oTradingSaleInvoice.TradingSaleInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var tsv = ((new Date()).getTime())/1000;
            window.open(sessionStorage.getItem("BaseAddress")+'/TradingSaleInvoice/PrintTradingSaleInvoice?id='+oTradingSaleInvoice.TradingSaleInvoiceID+"&ts="+tsv, "_blank")
        });

        $('#btnPOSPrint').click(function (e) {
            debugger;
            var oTradingSaleInvoice = $('#tblTradingSaleInvoices').datagrid('getSelected');
            if(oTradingSaleInvoice==null || oTradingSaleInvoice.TradingSaleInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var tsv = ((new Date()).getTime())/1000;
            window.open(sessionStorage.getItem("BaseAddress")+'/TradingSaleInvoice/POSPrint?id='+oTradingSaleInvoice.TradingSaleInvoiceID+"&ts="+tsv, "_blank")
        });

        $('#btnProfitLoss').click(function (e) {
            debugger;
            var oTradingSaleInvoice = $('#tblTradingSaleInvoices').datagrid('getSelected');
            if(oTradingSaleInvoice==null || oTradingSaleInvoice.TradingSaleInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var tsv = ((new Date()).getTime())/1000;
            window.open(sessionStorage.getItem("BaseAddress")+'/TradingSaleInvoice/ProfitLoss?id='+oTradingSaleInvoice.TradingSaleInvoiceID+"&ts="+tsv, "_blank")
        });

        $('#btnPrintList').click(function (e) {
            var oTradingSaleInvoices= $('#tblTradingSaleInvoices').datagrid('getRows');
            var ids ="";
            if(oTradingSaleInvoices.length >0)
            {
                for(var i =0;i<oTradingSaleInvoices.length;i++)
                {
                    ids =ids+oTradingSaleInvoices[i].TradingSaleInvoiceID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else{
                return;
            }
            var tsv = ((new Date()).getTime())/1000;
            window.open(sessionStorage.getItem("BaseAddress") + '/TradingSaleInvoice/PrintTradingSaleInvoices?ids='+ids+"&ts="+tsv, "_blank");
        });

        //Start Search
        function RefreshComboBoxControls()
        {
            var oApprovalUsers = $('#cboApprovedBy').data('ApprovalUsers');
            var oDateCompareOperatorObjs = $('#cboInvoiceDate').data('DateCompareOperatorObjs');
            var oAmountCompareOperatorObjs = $('#cboInvoiceAmount').data('AmountCompareOperatorObj');
            var oSalesTypeObjs = $('#cboSalesType').data('SalesTypeObjs');
            $("#cboApprovedBy").icsLoadCombo({ List: oApprovalUsers, OptionValue: "UserID", DisplayText: "UserName" });
            $("#cboInvoiceDate").icsLoadCombo({ List: oDateCompareOperatorObjs, OptionValue: "id", DisplayText: "Value" });
            $("#cboInvoiceAmount").icsLoadCombo({ List: oAmountCompareOperatorObjs, OptionValue: "id", DisplayText: "Value" });
            $("#cboSalesType").icsLoadCombo({ List: oSalesTypeObjs, OptionValue: "Id", DisplayText: "Value" });
        }

        function ValidateSearch()
        {
            var nSalesType =$.trim($('#cboSalesType').val());
            var sInvocieNo =$.trim($('#txtInvocieNo').val());
            var nInvoiceDate = parseInt($('#cboInvoiceDate').val());
            if(nInvoiceDate===1 || nInvoiceDate===2 || nInvoiceDate===3 || nInvoiceDate===4)
            {
                var sInvoiceStartDate   = $('#txtInvoiceStartDate').datebox('getValue');
                if(sInvoiceStartDate===null || sInvoiceStartDate==="")
                {
                    alert("Please select invoice start date!");
                    $('#txtInvoiceStartDate').focus();
                    return false;
                }
            }
            if(nInvoiceDate===5 || nInvoiceDate===6)
            {
                var sInvoiceStartDate   = $('#txtInvoiceStartDate').datebox('getValue');
                var sInvoiceEndDate   = $('#txtInvoiceEndDate').datebox('getValue');
                if(sInvoiceStartDate===null || sInvoiceStartDate==="")
                {
                    alert("Please select invoice start date!");
                    $('#txtInvoiceStartDate').focus();
                    return false;
                }
                if(sInvoiceEndDate===null || sInvoiceEndDate==="")
                {
                    alert("Please select invoice end date!");
                    $('#txtInvoiceEndDate').focus();
                    return false;
                }
                if(new Date(sInvoiceStartDate) > new Date(sInvoiceEndDate))
                {
                    alert("Start date must be smallar than or equal end date!");
                    $('#txtInvoiceStartDate').focus();
                    return false;
                }
            }

            var nInvoiceAmount = parseInt($('#cboInvoiceAmount').val());
            if(nInvoiceAmount===1 || nInvoiceAmount===2 || nInvoiceAmount===3 || nInvoiceAmount===4)
            {
                var sInvoiceAmountStart   = $.trim($('#txtInvoiceAmountStart').val());
                if(sInvoiceAmountStart===null || sInvoiceAmountStart==="")
                {
                    alert("Please enter invoice start Amount!");
                    $('#txtInvoiceAmountStart').focus();
                    return false;
                }
                if(icsRemoveComma(sInvoiceAmountStart)<=0)
                {
                    alert("Please enter invoice start Amount!");
                    $('#txtInvoiceAmountStart').focus();
                    return false;
                }
            }
            if(nInvoiceAmount===5 || nInvoiceAmount===6)
            {
                var sInvoiceAmountStart = $.trim($('#txtInvoiceAmountStart').val());
                if(sInvoiceAmountStart===null || sInvoiceAmountStart==="")
                {
                    alert("Please enter invoice start Amount!");
                    $('#txtInvoiceAmountStart').focus();
                    return false;
                }
                if(icsRemoveComma(sInvoiceAmountStart)<=0)
                {
                    alert("Please enter invoice start Amount!");
                    $('#txtInvoiceAmountStart').focus();
                    return false;
                }

                var sInvoiceAmountEnd = $.trim($('#txtInvoiceAmountEnd').val());
                if(sInvoiceAmountEnd===null || sInvoiceAmountEnd==="")
                {
                    alert("Please enter invoice end Amount!");
                    $('#txtInvoiceAmountEnd').focus();
                    return false;
                }
                if(icsRemoveComma(sInvoiceAmountEnd)<=0)
                {
                    alert("Please enter invoice end Amount!");
                    $('#txtInvoiceAmountEnd').focus();
                    return false;
                }
                if(icsRemoveComma(sInvoiceAmountStart) >= icsRemoveComma(sInvoiceAmountEnd))
                {
                    alert("Start amount must be smallar than end amount!");
                    $('#txtInvoiceAmountStart').focus();
                    return false;
                }
            }

            var nApprovedBy = parseInt($('#cboApprovedBy').val());
            var oBuyers = $('#txtBuyerName').data('Buyers');
            var oProducts = $('#txtProductName').data('Products');

            if(nSalesType===0 && sInvocieNo==="" && nInvoiceDate===0 && nInvoiceAmount===0 && nApprovedBy===0 && oBuyers.length<=0 && oProducts.length<=0)
            {
                alert("Please select atleast one searching criteriea!");
                return false;
            }
            return true;
        }

        $('#btnAdvSearch').click(function(e){
            $("#winAdvanceSearch").icsWindow('open', "Advance Search");
            $("#winAdvanceSearch input").not("input[type='button']").val("");
            $('#txtInvoiceStartDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtInvoiceEndDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtInvoiceAmountStart').val('0.00');
            $('#txtInvoiceAmountEnd').val('0.00');
            $('#txtInvoiceAmountStart').prop("disabled", true);
            $('#txtInvoiceAmountEnd').prop("disabled", true);
            $('#txtBuyerName').data('Buyers', []);
            $('#txtProductName').data('Products', []);
            RefreshComboBoxControls();
        });

        $('#btnAdvSearchClose').click(function(e){
            $("#winAdvanceSearch").icsWindow('close');
        });

        $('#cboInvoiceDate').change(function(e){
            //EqualTo = 1, NotEqualTo = 2, GreaterThen = 3, SmallerThen = 4, Between = 5, NotBetween = 6
            var nCompareOperator =   parseInt($('#cboInvoiceDate').val());
            if(nCompareOperator===0)
            {
                $('#txtInvoiceStartDate').datebox({ disabled : true });
                $('#txtInvoiceEndDate').datebox({ disabled : true });
            }
            else if (nCompareOperator===1 || nCompareOperator===2 || nCompareOperator===3 || nCompareOperator===4)
            {
                $('#txtInvoiceStartDate').datebox({ disabled : false });
                $('#txtInvoiceEndDate').datebox({ disabled : true });
            }
            else
            {
                $('#txtInvoiceStartDate').datebox({ disabled : false });
                $('#txtInvoiceEndDate').datebox({ disabled : false });
            }
            $('#txtInvoiceStartDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtInvoiceEndDate').datebox('setValue', icsdateformat(new Date()));
        });

        $('#cboInvoiceAmount').change(function(e){
            //EqualTo = 1, NotEqualTo = 2, GreaterThen = 3, SmallerThen = 4, Between = 5, NotBetween = 6
            var nCompareOperator =   parseInt($('#cboInvoiceAmount').val());
            if(nCompareOperator===0)
            {
                $('#txtInvoiceAmountStart').prop("disabled", true);
                $('#txtInvoiceAmountEnd').prop("disabled", true);
            }
            else if (nCompareOperator===1 || nCompareOperator===2 || nCompareOperator===3 || nCompareOperator===4)
            {
                $('#txtInvoiceAmountStart').prop("disabled", false);
                $('#txtInvoiceAmountEnd').prop("disabled", true);
            }
            else
            {
                $('#txtInvoiceAmountStart').prop("disabled", false);
                $('#txtInvoiceAmountEnd').prop("disabled", false);
            }
            $('#txtInvoiceAmountStart').val('0.00');
            $('#txtInvoiceAmountEnd').val('0.00');
        });

        $('#btnAdvSearchReset').click(function(e){
            $("#winAdvanceSearch input").not("input[type='button']").val("");
            $('#cboInvoiceDate').val(0);
            $('#txtInvoiceStartDate').datebox({ disabled : true });
            $('#txtInvoiceEndDate').datebox({ disabled : true });
            $('#txtInvoiceStartDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtInvoiceEndDate').datebox('setValue', icsdateformat(new Date()));

            $('#cboInvoiceAmount').val(0);
            $('#txtInvoiceAmountStart').prop("disabled", true);
            $('#txtInvoiceAmountEnd').prop("disabled", true);
            $('#txtInvoiceAmountStart').val('0.00');
            $('#txtInvoiceAmountEnd').val('0.00');

            $('#cboApprovedBy').val(0);
            $('#txtBuyerName').data('Buyers', []);
            $("#txtBuyerName").removeClass("fontColorOfPickItem");
            $('#txtProductName').data('Products', []);
            $("#txtProductName").removeClass("fontColorOfPickItem");
        });

        $('#btnSearch').click(function(e){
            if(!ValidateSearch()) return;

            var nSalesType =$.trim($('#cboSalesType').val());
            var sInvocieNo =$.trim($('#txtInvocieNo').val());

            var nInvoiceDate = parseInt($('#cboInvoiceDate').val());
            var sInvoiceStartDate   = $('#txtInvoiceStartDate').datebox('getValue');
            var sInvoiceEndDate   = $('#txtInvoiceEndDate').datebox('getValue');

            var nInvoiceAmount = parseInt($('#cboInvoiceAmount').val());
            var sInvoiceAmountStart = icsRemoveComma($.trim($('#txtInvoiceAmountStart').val()));
            var sInvoiceAmountEnd = icsRemoveComma($.trim($('#txtInvoiceAmountEnd').val()));

            var nApprovedBy = parseInt($('#cboApprovedBy').val());
            var oBuyers = $('#txtBuyerName').data('Buyers');
            var oProducts = $('#txtProductName').data('Products');

            if(oBuyers===null) {oBuyers = []; }
            if(oProducts===null) {oProducts = []; }
            var sBuyerIDs =""; var sProductIDs ="";

            for(var i=0; i<oBuyers.length; i++)
            {
                sBuyerIDs  = sBuyerIDs + oBuyers[i].ContractorID+ ",";
            }
            if(sBuyerIDs.length>0)
            {
                sBuyerIDs=sBuyerIDs.substring(0, sBuyerIDs.length-1);
            }
            for(var i=0; i<oProducts.length; i++)
            {
                sProductIDs  = sProductIDs + oProducts[i].ProductID+ ",";
            }
            if(sProductIDs.length>0)
            {
                sProductIDs=sProductIDs.substring(0, sProductIDs.length-1);
            }

            var sSearchingData  =  nSalesType+'~';
            sSearchingData = sSearchingData + sInvocieNo+'~';
            sSearchingData = sSearchingData + nInvoiceDate+'~';
            sSearchingData = sSearchingData + sInvoiceStartDate+'~';
            sSearchingData = sSearchingData + sInvoiceEndDate+'~';
            sSearchingData = sSearchingData + nInvoiceAmount+'~';
            sSearchingData = sSearchingData + sInvoiceAmountStart+'~';
            sSearchingData = sSearchingData + sInvoiceAmountEnd+'~';
            sSearchingData = sSearchingData + nApprovedBy+'~';
            sSearchingData = sSearchingData + sBuyerIDs +'~';
            sSearchingData = sSearchingData + sProductIDs;

            var oTradingSaleInvoice = {
                Note : sSearchingData,
                BUID : parseInt(sessionStorage.getItem("BUID"))
            };

            $.ajax({
                type: "POST",
                dataType: "JSON",
                url: sessionStorage.getItem("BaseAddress")+  "/TradingSaleInvoice/AdvanceSearch",
                data:  JSON.stringify(oTradingSaleInvoice),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var  oTradingSaleInvoices = jQuery.parseJSON(data);
                    if (oTradingSaleInvoices != null) {
                        if(oTradingSaleInvoices.length>0)
                        {
                            if(oTradingSaleInvoices[0].ErrorMessage=="")
                            {
                                RefreshList(oTradingSaleInvoices);
                                $('#tblTradingSaleInvoices').data('TradingSaleInvoices', oTradingSaleInvoices);
                                $("#winAdvanceSearch").icsWindow('close');
                            }
                            else
                            {
                                alert(oTradingSaleInvoices[0].ErrorMessage);
                            }
                        }
                        else
                        {
                            alert("Data not found!!");
                        }
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        });

        $("#txtSearchByInvoiceNo").keyup(function (e) {
            if (e.keyCode == 13) {
                if($.trim($('#txtSearchByInvoiceNo').val())===null || $.trim($('#txtSearchByInvoiceNo').val())==="")
                {
                    alert("Press enter with Invoice No/Buyer Name!");
                    return;
                }
                var nBUID = parseInt(sessionStorage.getItem('BUID'));
                if(nBUID<=0)
                {
                    alert("Invalid Business Unit!");
                    return;
                }

                var oTradingSaleInvoice = {
                    InvoiceNo : $("#txtSearchByInvoiceNo").val(),
                    BUID : nBUID
                };

                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: sessionStorage.getItem('BaseAddress') + "/TradingSaleInvoice/GetsByInvoiceNo",
                    traditional: true,
                    data: JSON.stringify(oTradingSaleInvoice),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        var oTradingSaleInvoices = jQuery.parseJSON(data);
                        if (oTradingSaleInvoices != null) {
                            if (oTradingSaleInvoices.length > 0) {
                                DynamicRefreshList(oTradingSaleInvoices, "tblTradingSaleInvoices");
                            }
                            else {
                                //alert("There is no Data!");
                                DynamicRefreshList([], "tblTradingSaleInvoices");
                            }
                        } else {
                            //alert("There is no Data!");
                            DynamicRefreshList([], "tblTradingSaleInvoices");
                        }
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            }
        });


        $('#').keyup(function (e) {
            //
            var c = String.fromCharCode(e.which);
            var txtSearchByName = document.getElementById('txtSearchByInvoiceNo').value;

            var oSearchedTradingSaleInvoices = [];  var sTempName="";
            var oTradingSaleInvoiceList = $('#tblTradingSaleInvoices').datagrid('getRows');
            if (e.which == 8)
            {
                oTradingSaleInvoiceList = $('#tblTradingSaleInvoices').data('TradingSaleInvoices');
            }
            for(i=0;i<oTradingSaleInvoiceList.length;++i){
                sTempName=oTradingSaleInvoiceList[i].InvoiceNo;
                n=sTempName.toUpperCase().indexOf(txtSearchByName.toUpperCase())
                if(n!=-1)
                {
                    oSearchedTradingSaleInvoices.push(oTradingSaleInvoiceList[i]);
                }
            }
            RefreshList(oSearchedTradingSaleInvoices);
        });

        ///Buyer Pick
        $("#txtBuyerName").keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) // Enter Press
            {
                var nBUID = parseInt(sessionStorage.getItem("BUID"));
                var oContractor = { Params: 2 + '~' + $.trim($('#txtBuyerName').val())+'~'+ nBUID };//here 2 is Buyer
                var obj = {
                    BaseAddress: sessionStorage.getItem("BaseAddress"),
                    Object: oContractor,
                    ControllerName: "Contractor",
                    ActionName: "ContractorSearchByNameType",
                    IsWinClose: false
                };
                $("#progbar").progressbar({ value: 0 });
                $("#progbarParent").show();
                var intervalID = setInterval(updateProgress, 250);
                $.icsDataGets(obj, function (response) {
                    clearInterval(intervalID);
                    $("#progbarParent").hide();
                    if (response.status && response.objs.length > 0) {
                        if (response.objs[0].ContractorID > 0) {
                            var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                            oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                            oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                            oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                            var oPickerParam = {
                                winid: 'winBuyers',
                                winclass: 'clsBuyer',
                                winwidth: 600,
                                winheight: 460,
                                tableid: 'tblBuyers',
                                tablecolumns: tblColums,
                                datalist: response.objs,
                                multiplereturn: true,
                                searchingbyfieldName: 'Name',
                                windowTittle: 'Buyer List'
                            };
                            $.icsPicker(oPickerParam);
                            IntializePickerbutton(oPickerParam);
                        }
                        else { alert(response.objs[0].ErrorMessage); }
                    }else{
                        alert("Data Not Found.");
                        return;
                    }
                });
            }
        });
        $("#btnBuyerPicker").click(function () {
            var nBUID = parseInt(sessionStorage.getItem("BUID"));
            var oContractor = { Params: "2~~"+nBUID };//here 2 Is Buyer
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $("#progbar").progressbar({ value: 0 });
            $("#progbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            $.icsDataGets(obj, function (response) {
                clearInterval(intervalID);
                $("#progbarParent").hide();
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {
                        var tblColums = []; var oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Address", title: "Address", width: 120, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Email", title: "Email", width: 90, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winBuyers',
                            winclass: 'clsBuyer',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblBuyers',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Buyer List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Found.");
                }
            });

        });
        $('#txtBuyerName').keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 8) //backspace=8
            {
                $("#txtBuyerName").removeClass("fontColorOfPickItem");
                $('#txtBuyerName').data('BuyerID', 0);
            }
        });
        $('#btnBuyerClear').click(function(e){
            $("#txtBuyerName").val("");
            $('#txtBuyerName').data('Buyers', []);
            $("#txtBuyerName").removeClass("fontColorOfPickItem");
        });
        //End Buyer Picker

        //Product Pick
        $("#txtProductName").keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) // Enter Press
            {
                if($('#txtProductName').val()==null || $('#txtProductName').val()=="")
                {
                    alert("Please Type Product and Press Enter.");
                    $('#txtProductName').focus();
                    return;
                }
                var nBUID = parseInt(sessionStorage.getItem("BUID"));
                var oProduct = { BUID: nBUID, ProductName: $.trim($('#txtProductName').val())};
                var obj = {
                    BaseAddress: sessionStorage.getItem("BaseAddress"),
                    Object: oProduct,
                    ControllerName: "Product",
                    ActionName: "SearchByProductBUWise",
                    IsWinClose: false
                };
                $.icsDataGets(obj, function (response) {
                    debugger;
                    if (response.status && response.objs.length > 0) {
                        if (response.objs[0].ProductID > 0) {
                            var tblColums = [];
                            var oColumn = { field: "ProductCode", title: "Product Code", width: 80, align: "left" }; tblColums.push(oColumn);
                            oColumn = { field: "ProductName", title: "Product Name", width: 300, align: "left" }; tblColums.push(oColumn);
                            oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                            oColumn = { field: "ProductCategoryName", title: "Category", width: 100, align: "left" }; tblColums.push(oColumn);
                            var oPickerParam = {
                                winid: 'winProductPicker',
                                winclass: 'clsProductPicker',
                                winwidth: 600,
                                winheight: 460,
                                tableid: 'tblProductPicker',
                                tablecolumns: tblColums,
                                datalist: response.objs,
                                multiplereturn: true,
                                searchingbyfieldName: 'NameCode',
                                windowTittle: 'Product List'
                            };
                            $.icsPicker(oPickerParam);
                            IntializePickerbutton(oPickerParam);
                        }
                        else {
                            alert(response.objs[0].ErrorMessage);
                        }

                    }else{
                        alert("Data Not Found.");
                    }
                });
            }
        });
        $("#btnProductPicker").click(function () {
            var nBUID = parseInt(sessionStorage.getItem("BUID"));
            var oProduct = { BUID: nBUID};
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oProduct,
                ControllerName: "Product",
                ActionName: "SearchByProductBUWise",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ProductID > 0) {
                        var tblColums = [];
                        var oColumn = { field: "ProductCode", title: "Product Code", width: 80, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Product Name", width: 300, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductCategoryName", title: "Category", width: 100, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winProductPicker',
                            winclass: 'clsProductPicker',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblProductPicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'NameCode',
                            windowTittle: 'Product List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                }else{
                    alert("Data Not Found.");
                }
            });

        });
        $('#txtProductName').keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 8) //backspace=8
            {
                $("#txtProductName").removeClass("fontColorOfPickItem");
                $('#txtProductName').data('Product', null);
            }
        });
        $('#btnProductClear').click(function(e){
            $("#txtProductName").val("");
            $('#txtProductName').data('Products', []);
            $("#txtProductName").removeClass("fontColorOfPickItem");
        });
        //End Product

        function IntializePickerbutton(oPickerobj) {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                //for Single Select
                SetPickerValueAssign(oPickerobj);
            });
            $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
                if (e.which == 13)//enter=13
                {
                    SetPickerValueAssign(oPickerobj);
                }
            });
        }

        function SetPickerValueAssign(oPickerobj) {
            var oreturnObj = null, oreturnobjs = [];
            if (oPickerobj.multiplereturn) {
                oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
            } else {
                oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
            }
            $("#" + oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();

            if (oPickerobj.winid === 'winBuyers')
            {
                if (oreturnobjs != null && oreturnobjs.length > 0) {
                    $('#txtBuyerName').val(oreturnobjs.length+"'s Buyers seleted");
                    $('#txtBuyerName').addClass('fontColorOfPickItem');
                    $('#txtBuyerName').data('Buyers', oreturnobjs);
                    $('#txtBuyerName').focus();
                }
            }
            else if (oPickerobj.winid == 'winProductPicker')
            {
                if (oreturnobjs != null && oreturnobjs.length > 0)
                {
                    $('#txtProductName').val(oreturnobjs.length+"'s products seleted");
                    $('#txtProductName').addClass('fontColorOfPickItem');
                    $('#txtProductName').data('Products', oreturnobjs);
                }
            }
        }


        $('#btnReqForRevise').click(function(e){
            var oTradingSaleInvoice = $('#tblTradingSaleInvoices').datagrid('getSelected');
            if(oTradingSaleInvoice==null || oTradingSaleInvoice.TradingSaleInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            else if(parseInt(oTradingSaleInvoice.TradingSaleInvoiceStatus)!=2)
            {
                alert("Only Approved Item can Request for Revise!");
                return;
            }
            var SelectedRowIndex=$('#tblTradingSaleInvoices').datagrid('getRowIndex', oTradingSaleInvoice);
            var oEmployee = { DesignationName : '9,2' };
            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+"/User/GetsRequestedUsers",
                traditional: true,
                data:  JSON.stringify(oEmployee),
                contentType: "application/json; charset=utf-8",
                success: function (data) {                    
                    var oUsers = jQuery.parseJSON(data);          
                    if(oUsers===null){ oUsers=[]; }                    
                    $("#cboReviseRequestTo").icsLoadCombo({ List: oUsers, OptionValue: "UserID", DisplayText: "UserName" });
                    $("#winReviseRequest").icsWindow('open', "Revise Request");
                    $("#winReviseRequest input").not("input[type='button']").val("");
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        });


        $('#btnReviseRequestClose').click(function(e){
            $("#winReviseRequest").icsWindow('close');
        });

        $('#btnReviseRequestConfirm').click(function(e){
            var oTradingSaleInvoice = $('#tblTradingSaleInvoices').datagrid('getSelected');
            if(oTradingSaleInvoice==null || oTradingSaleInvoice.TradingSaleInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(parseInt($('#cboReviseRequestTo').val())==0)
            {
                alert('Please Select User');
                $('#cboReviseRequestTo').focus();
                return false;
            }
            var oReviseRequest= { 
                ReviseRequestID :0,
                OperationObjectID : parseInt(oTradingSaleInvoice.TradingSaleInvoiceID),
                RequestTo : parseInt($('#cboReviseRequestTo').val()),
                Note :$.trim($("#txtReviseRequestNote").val())
          
            };

            var oTempTradingSaleInvoice = {
                TradingSaleInvoiceID : parseInt(oTradingSaleInvoice.TradingSaleInvoiceID),
                ReviseRequest : oReviseRequest
            }
            var SelectedRowIndex=$('#tblTradingSaleInvoices').datagrid('getRowIndex', oTradingSaleInvoice);        
            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+"/TradingSaleInvoice/RequestRevise",
                traditional: true,
                data:  JSON.stringify(oTempTradingSaleInvoice),
                contentType: "application/json; charset=utf-8",
                success: function (data) {                    
                    var oTradingSaleInvoice = jQuery.parseJSON(data);          
                    if(oTradingSaleInvoice!=null)
                    {
                        if(oTradingSaleInvoice.ErrorMessage=="" || oTradingSaleInvoice.ErrorMessage == null)
                        {
                            alert("Order Sheet Revise Request  Successfully.");
                            $('#tblTradingSaleInvoices').datagrid('updateRow',{index: SelectedRowIndex,	row: oTradingSaleInvoice});
                            $("#winReviseRequest").icsWindow('close');
                        }
                        else
                        {
                            alert(oTradingSaleInvoice.ErrorMessage);
                        }
                    }
                    else
                    {
                        alert("Invalid Operation!");
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        });

        function AcceptRevise()
        {
            debugger;
            var oTradingSaleInvoice = $('#tblTradingSaleInvoices').datagrid('getSelected');
            if(oTradingSaleInvoice==null || oTradingSaleInvoice.TradingSaleInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(parseInt(oTradingSaleInvoice.TradingSaleInvoiceStatus)!=3 )
            {
                alert("Please select Only Request for Revise Item From List");
                return;
            }
            var SelectedRowIndex=$('#tblTradingSaleInvoices').datagrid('getRowIndex',oTradingSaleInvoice);
            var tsv=((new Date()).getTime())/1000;
            var oTradingSaleInvoices= $('#tblTradingSaleInvoices').datagrid('getRows');
            sessionStorage.setItem("TradingSaleInvoices", JSON.stringify(oTradingSaleInvoices));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("TradingSaleInvoiceHeader", "Trading Sale Invoice Revise");
            var oBackLink = window.location.href;
            sessionStorage.setItem("BackLink", oBackLink);
            window.location.href = sessionStorage.getItem("BaseAddress")+  "/TradingSaleInvoice/ViewTradingSaleInvoiceRevise?id="+oTradingSaleInvoice.TradingSaleInvoiceID+"&sOID=0&ts="+tsv;
        }


        $("#btnReviseHistory").click(function () {
            var oTradingSaleInvoice = $("#tblTradingSaleInvoices").datagrid("getSelected");
            if (oTradingSaleInvoice == null || oTradingSaleInvoice.TradingSaleInvoiceID <= 0) {
                alert("Please select an item from list.");
                return false;
            }
            $("#winReviseHistory").icsWindow("open", "Revise History of Invoice No : " + oTradingSaleInvoice.InvoiceNo);
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/TradingSaleInvoice/GetReviseHistory",
                traditional: true,
                data: JSON.stringify(oTradingSaleInvoice),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oTradingSaleInvoices = jQuery.parseJSON(data);
                    if(oTradingSaleInvoices!=null){
                        if(oTradingSaleInvoices.length>0){
                            DynamicRefreshList(oTradingSaleInvoices,"tblReviseHistory");
                        }
                        else{
                            DynamicRefreshList([],"tblReviseHistory");
                        }
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        });
        $("#btnCloseReviseHistory").click(function () {
            $("#winReviseHistory").icsWindow("close");
        });
        $("#btnPrintReviseHistory").click(function () {
            var oTradingSaleInvoiceLog = $("#tblReviseHistory").datagrid("getSelected");
            if (oTradingSaleInvoiceLog == null || oTradingSaleInvoiceLog.TradingSaleInvoiceLogID <= 0) {
                alert("Please select an item from list.");
                return false;
            }
            var tsv = ((new Date()).getTime())/1000;
            window.open(sessionStorage.getItem("BaseAddress")+'/TradingSaleInvoice/PrintTradingSaleInvoiceLog?id='+oTradingSaleInvoiceLog.TradingSaleInvoiceLogID+"&ts="+tsv, "_blank")
        });

        function updateProgress() {
            var value =$('#progbar').progressbar('getValue');
            if (value < 96){
                value += Math.floor(Math.random() * 10);
                $('#progbar').progressbar('setValue', value);
            }
        }

        function hideShow(miliseconds) {
            $("#progbarParent").hide();
        }

        function RefreshControlLayout(oAURolesMapping)
        {
            $("#btnAdvSearch").hide();
            $("#btnAdd").hide();
            $("#btnEdit").hide();
            $("#btnView").hide();
            $("#btnDelete").hide();
            $("#btnWaitForApproved").hide();
            $("#btnApproved").hide();
            $("#btnMakeChallan").hide();
            $("#btnPreview").hide();
            $("#btnPrintList").hide();
            $("#btnWaitForChallan").hide();
            $("#btnMakeChallan").hide();

            if(PermissionChecker('AdvSearch','TradingSaleInvoice',oAURolesMapping)){$("#btnAdvSearch").show();}
            if(PermissionChecker('Add','TradingSaleInvoice',oAURolesMapping)){$("#btnAdd").show();}
            if(PermissionChecker('Edit','TradingSaleInvoice',oAURolesMapping)){$("#btnEdit").show();}
            if(PermissionChecker('View','TradingSaleInvoice',oAURolesMapping)){$("#btnView").show();}
            if(PermissionChecker('Delete','TradingSaleInvoice', oAURolesMapping)){$("#btnDelete").show();}
            if(PermissionChecker('Approved','TradingSaleInvoice',oAURolesMapping)){$("#btnApproved").show();}
            if(PermissionChecker('Approved','TradingSaleInvoice',oAURolesMapping)){$("#btnWaitForApproved").show();}
            if(PermissionChecker('Preview','TradingSaleInvoice',oAURolesMapping)){$("#btnPreview").show();}
            if(PermissionChecker('PrintList','TradingSaleInvoice',oAURolesMapping)){$("#btnPrintList").show();}
            if(PermissionChecker('Add','TradingDeliveryChallan',oAURolesMapping)){$("#btnWaitForChallan").show();}
            if(PermissionChecker('Add','TradingDeliveryChallan',oAURolesMapping)){$("#btnMakeChallan").show();}
        }
    </script>
