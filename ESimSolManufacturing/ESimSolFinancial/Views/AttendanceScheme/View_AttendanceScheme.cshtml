@model ESimSol.BusinessObjects.AttendanceScheme
<html>

<body>
    <div class="menuMainCollectionTable">
        <div style="width:45%; height:95%; float:left; margin:1%;">
            <fieldset style="height:100%;">
                <table class="tbl">
                    <tr>
                        <td class="tdSchema">
                            <input id="btnCopy" class="CopyStyler" value="Copy Plan from other Scheme " type="button" />
                        </td>
                    </tr>
                    <tr>
                        <td class="tdSchema">
                            <div class="divLabel">
                                <label>Schema Name :</label>
                            </div>
                            <div class="divInput">
                                <input id="txtSchemaName" class="resetfield" type="text" placeholder="Schema Name" />
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="tdSchema">
                            <div class="divLabel">
                                <label>Attendance Calendar :</label>
                            </div>
                            <div class="divInput">
                                <select id="cboAttendenceCalendar"></select>
                            </div>
                        </td>
                    </tr>

                </table>

                <table class="tbl">
                    <tr></tr>
                    <tr>
                        <td class="tdSchema">
                            <div class="divRegion">
                                <span>Roster Plan :</span>
                                <select id="cboRosterPlan"></select>
                            </div>

                        </td>
                    </tr>
                    <tr>
                        <td class="tdSchema">
                            <table id="tblRosterPlan" class="easyui-datagrid" style="width:450px; height:100px" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                                <thead>
                                    <tr>
                                        <th field="Shift" style="width: 48%;"> Shift </th>
                                        <th field="NextShift" style="width: 48%;"> Next Shift</th>
                                    </tr>
                                </thead>
                            </table>
                        </td>
                    </tr>
                    
                    <tr>
                        <td colspan="2">

                            <table id="tblHolidays" title="Holiday List" class="easyui-datagrid" style="width:450px; height:240px;margin-top:20px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarHoliday">
                                <thead>
                                    <tr>
                                        <th field="DescriptionWithDayOfMonth" width="95%">Holiday</th>
                                    </tr>
                                </thead>
                            </table>
                            <div id="toolbarHoliday">
                                <div>
                                    <a id="btnAddHoliday" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                    <a id="btnDeleteHoliday" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr></tr>
                </table>
            </fieldset>
        </div>

        <div style="width:50%; height:95%; float:left; margin:1%;">
            <fieldset style="height:100%;">
                <table class="tbl">
                    <tr>
                        <td class="tdSchema">

                            <div style="width:49%;float:left;">
                                <fieldset>
                                    <legend>Day Off</legend>
                                    <div>
                                        @*<input type="radio" id="rdbtnDayOffContinous" name="DayOff" />Continous
                                        <input type="radio" id="rdbtnDayOffAlternate" name="DayOff" />Alternate
                                        <input type="radio" id="rdbtnDayOffRandom" name="DayOff" />Random*@
                                        <select id="cboDayOffType" onchange="cboDayOffTypeChange()" style="width:100%;"></select>
                                    </div>
                                    <div>
                                        <select id="cboWeekDay" style="width:100%"></select>
                                        <label id="lbl-RandomDayOff">Day Off/Month</label>
                                        <span>
                                            <input type="text" id="txtRandomDayOff" class="cls-number" style="width:40%; font-size:11px; " />
                                        </span>
                                        <span id="ldlHalfDay">
                                            Start Time<input id="txtInTime" class="easyui-timespinner" style="width: 28%;" requird="required"
                                                             data-options="showSeconds:false" />

                                            End Time
                                            <input id="txtOutTime" class="easyui-timespinner" style="width:28%;" requird="required"
                                                   data-options="showSeconds:false" />
                                        </span>
                                        <input type="checkbox" id="chkFirstWeek" /><label id="lbl-AlternateDayOff">Start From First Week</label>
                                    </div>

                                    <div id="dayofftoolbar">
                                        <a id="btnAddDayOff" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"></a>
                                        <a id="btnRemoveDayOff" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true"></a>
                                    </div>
                                    <div>
                                        <table id="tblDayOff" class="easyui-datagrid" style="width:100%; height:130px" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#dayofftoolbar">
                                            <thead>
                                                <tr>
                                                    <th field="DayOffInfo" style="width: 90%;"> Day Off </th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </fieldset>
                            </div>
                        </td>
                    </tr>
                </table>

                <table class="tbl">
                    <tr>
                        <td class="tdLeaveHead" colspan="2">
                            <u><b>Leave Head Schema:</b></u>
                        </td>
                    </tr>
                    <tr>
                        <td class="tdLeaveHead">
                            <div class="divLabel">
                                <label>Leave Head :</label>
                            </div>
                            <div class="divInputLeaveHead">
                                <select id="cboLeaveHead"></select>
                            </div>
                        </td>
                        <td class="tdLeaveHead">
                            <div class="divLabel">
                                <label>Max. Allowed Days :</label>
                            </div>
                            <div class="divInputLeaveHead">
                                <input id="txtTotalLeave" class="number-field" type="text" />
                            </div>
                        </td>

                    </tr>

                    <tr>
                        <td class="tdLeaveHead">
                            <div class="divLabel">
                                <label>Activation After :</label>
                            </div>
                            <div class="divInputLeaveHead">
                                <input id="txtDeferredDay" class="number-field" type="text" />

                            </div>
                        </td>
                        <td class="tdLeaveHead">
                            <div class="divLabel">
                                <label>Days Of :</label>
                            </div>
                            <div class="divInputLeaveHead">
                                <select id="cboActivationState" class="RecruitmentEvent"></select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="tdLeaveHead" colspan="2">
                            <div class="divChkLevel-LH">
                                <input id="chkEarnLeave" type="checkbox" />
                                <span> Acquire Leave By The Presence of At Least  </span>
                            </div>
                            <div class="divInput-Conditional-LH">
                                <input id="txtPresenceDay" class="number-field" type="text" />
                                <span>Days</span>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="tdLeaveHead" colspan="2">
                            <div class="divChkLevel-LH">
                                <input id="chkCarryForward" type="checkbox" />
                                <span> Leave Carry Forward To The Next Cycle For Maximum </span>
                            </div>
                            <div class="divInput-Conditional-LH">
                                <input id="txtMaxYearToCarry" class="number-field" type="text" />
                                <span>Years</span>
                            </div>
                        </td>
                    </tr>

                    <tr>
                        <td class="tdLeaveHead" colspan="2">
                            <div class="divChkLevel-LH">
                                <input id="chkIsComp" type="checkbox" />
                                <span> Applicable for compliance </span>
                            </div>
                        </td>
                    </tr>

                    <tr>
                        <td class="tdLeaveHead" colspan="2">
                            <div class="divRegion-LeaveHead">

                            </div>
                        </td>
                    </tr>

                    <tr>
                        <td class="tdSchema" colspan="2">
                            <table id="tblLeaveHead" class="easyui-datagrid" style="width:600px; height:140px" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarLeaveHEad">
                                <thead>
                                    <tr>
                                        <th field="LeaveName" style="width:18%;"> Leave Head</th>
                                        <th field="TotalDay" width="12%" align="right">Total Day</th>
                                        @*<th field="DeferredDay" style="width:12%;" align="right"> Deferred</th>
                                        <th field="CarryForward" style="width:7%;"> CF</th>
                                        <th field="YearsToCarry" style="width: 9%;" align="right"> Years</th>
                                        <th field="PresenceEarnLeave" style="width: 7%;"> EL </th>
                                        <th field="PresencePerLeave" style="width: 12%;" align="right"> Presence</th>
                                        <th field="ActivationAfterInString" style="width: 20%;" align="left">State</th>*@
                                        <th field="ActivationStatus" style="width: 20%;" align="left">Activation After</th>
                                        <th field="EarnLeaveStatus" style="width: 20%;" align="left">Leave Earn</th>
                                        <th field="CarryForwardStatus" style="width: 20%;" align="left">Carry Forward</th>
                                        <th field="IsCompInStr" style="width: 15%;" align="left">Compliance</th>

                                    </tr>
                                </thead>
                            </table>
                            <div id="toolbarLeaveHEad">
                                <div>
                                    <a id="btnAddLeaveHead" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                    @*<a id="btnEditLeaveHead" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>*@
                                    <a id="btnDeleteLeaveHead" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right" colspan="2">

                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            <a id="btnBack" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-back" plain="true">Back</a>

                        </td>
                      
            </tr>
            </table>
            </fieldset>
        </div>

      

        
    </div>
    <div id="winAdvSearch" class="easyui-window" title="Adv Search" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div class="searchCriteria">
            <table class="tbl">
                <tr>
                    <td class="tdAdvSearch">
                        <div class="AdvSearchLabel">
                            <label>Schema Name  :</label>
                        </div>
                        <div class="AdvSearchInput">
                            <input id="txtSchemaName" class="resetfield" type="text" placeholder="Attendance Schema Name" />
                        </div>
                    </td>

                </tr>
                <tr>
                    <td class="tdAdvSearch">
                        <div class="AdvSearchLabel">
                            <label>Attendance Calendar :</label>
                        </div>
                        <div class="AdvSearchInput">
                            <select id="cboAttendenceCalendarAdvSearch" class="combo"></select>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdAdvSearch">
                        <div class="AdvSearchLabel">
                            <label>Roster Plan :</label>
                        </div>
                        <div class="AdvSearchInput">
                            <select id="cboRosterPlanAdvSearch" class="combo"></select>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="tdAdvSearch">
                        <a id="btnReset" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Reset</a>
                        <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Search</a>

                    </td>
                </tr>
            </table>
        </div>
        <div class="searchData">
            <table id="tblAttendanceSchemesAdvSearchList" title="Attendance Scheme List" class="easyui-datagrid" style="width: 440px; height: 280px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                <thead>
                    <tr>
                        <th field="Name" width="150"> Scheme</th>
                        <th field="RosterPlanDescription" width="124">Roster Plan</th>
                        <th field="DayOff" width="124">DayOff</th>
                    </tr>
                </thead>
            </table>
            <div class="region-AdvSearchSelect">
                <a id="btnOkASAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                <a id="btnCancel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Cancel</a>
            </div>
        </div>
    </div>
</body>
</html>

<style type="text/css">
    .tbl-RosterPlan {
        width: 100%;
        height: 120px;
    }

    .tdSchema {
        width: 100%;
        font-size: 11px;
    }

        .tdSchema .CopyStyler {
            float: right;
            text-align: left;
            width: 64%;
            font-size: 11px;
        }

        .tdSchema .divLabel {
            float: left;
            width: 35%;
            text-align: right;
            margin-right: 1%;
            font-size: 11px;
        }

    .divInput input {
        float: left;
        width: 62.5%;
        font-size: 11px;
    }

    .divInput .number-field {
        float: left;
        width: 60px;
        font-size: 11px;
    }

    .divInput select {
        float: left;
        width: 64%;
        font-size: 11px;
    }

    .divPickOption input {
        float: left;
        width: 52.7%;
        text-align: left;
        margin-right: .3%;
        font-size: 11px;
    }

    .divPickOption .pick-button {
        margin-top: -1px;
        float: left;
        width: 4.5%;
        font-size: 11px;
    }

    .divRegion {
        float: left;
        text-align: left;
        font-size: 12px;
        padding-top: 5px;
        width: 100%;
    }

        .divRegion span {
            float: left;
            text-align: left;
            font-size: 12px;
        }

        .divRegion #cboRosterPlan {
            float: left;
            width: 83.6%;
            text-align: left;
            margin-right: 1%;
            font-size: 11px;
        }

    .tdSchema .divChkLevel {
        float: left;
        width: 46%;
        text-align: left;
        margin-right: 1%;
        font-size: 11px;
    }

    .tdSchema .divInput-Conditional {
        float: left;
        width: 53%;
        font-size: 11px;
    }


    .divInput-Conditional input {
        float: left;
        width: 25%;
        text-align: left;
        margin-right: 1%;
        font-size: 11px;
    }

    .divInput-Conditional .number-field {
        float: left;
        width: 60px;
        text-align: left;
        margin-right: 1%;
        font-size: 11px;
    }

    .divInput-Conditional span {
        float: left;
        text-align: left;
        margin-left: 3px;
        margin-right: 3px;
    }

    .divInput-Conditional select {
        float: left;
        width: 47%;
        text-align: left;
        margin-right: 1%;
        font-size: 11px;
    }


    .tdLeaveHead {
        width: 50%;
        font-size: 11px;
    }

        .tdLeaveHead .divLabel {
            float: left;
            width: 45%;
            text-align: right;
            margin-right: 1%;
            font-size: 11px;
        }

    .divInputLeaveHead input {
        float: left;
        width: 55%;
        font-size: 11px;
    }

    .divInputLeaveHead select {
        float: left;
        width: 54%;
        font-size: 11px;
    }

    .divInputLeaveHead .radio-btn {
        float: left;
        width: auto;
        font-size: 11px;
    }

    .divInputLeaveHead span {
        float: left;
        width: 8%;
        font-size: 11px;
    }

    .divInputLeaveHead .number-field {
        float: left;
        width: 125px;
        font-size: 11px;
    }

    .tdLeaveHead .divChkLevel-LH {
        float: left;
        width: 72%;
        text-align: left;
        margin-right: 1%;
        font-size: 11px;
    }

    .tdLeaveHead .divInput-Conditional-LH {
        float: left;
        width: 26%;
        font-size: 11px;
    }


    /*.divInput-Conditional-LH .number-field{
        float: left;
        width: 25%;
        text-align: left;
        margin-right: 1%;
        font-size: 11px;
    }*/
    .divInput-Conditional-LH .number-field {
        float: left;
        width: 60px;
        text-align: left;
        margin-right: 1%;
        font-size: 11px;
    }

    .divInput-Conditional-LH span {
        float: left;
        text-align: left;
        margin-left: 3px;
        margin-right: 3px;
    }

    .divRegion-LeaveHead {
        float: right;
        text-align: right;
    }

    /*picker search*/

    #winAdvSearch {
        width: 750px;
        font-size: 11px;
    }

    .searchCriteria {
        float: left;
        width: 40%;
    }

    .searchData {
        float: left;
        width: 60%;
    }

    .tdAdvSearch {
        width: 100%;
        font-size: 11px;
        text-align: right;
    }

        .tdAdvSearch .AdvSearchLabel {
            float: left;
            width: 45%;
            text-align: right;
            margin-right: 1%;
            font-size: 11px;
        }

    .AdvSearchInput input {
        float: left;
        width: 50%;
        font-size: 11px;
    }

    .AdvSearchInput select {
        float: left;
        width: 51%;
        font-size: 11px;
    }

    .region-AdvSearchSelect {
        float: right;
        text-align: right;
        margin-top: 5px;
        margin-bottom: 5px;
        margin-right: 10px;
    }


    .cls-overtime-region {
        height: 30px;
    }

    .cls-overtime {
        padding-bottom: 3px;
    }

        .cls-overtime .cls-number {
            font-size: 11px;
            width: 38px;
        }

    .cls-region-overtime-lbl {
        width: 38%;
        text-align: right;
        float: left;
        margin-right: 2px;
        padding-bottom: 3px;
    }

    .cls-region-overtime-input {
        width: 61%;
        text-align: left;
        float: left;
        padding-bottom: 3px;
    }
</style>

<script type="text/javascript">

    var _oAttendanceScheme=null;
    var _sBaseAddress="";
    var _oRosterPlanDetails = [];
    var _oRosterPlans = [];
    var _oAttendanceSchemeDayOffs = [];
    var _oAttendanceSchemeHoliDays = [];
    var _oAttendanceSchemeLeaves = [];
    var _oDepartmentRequirementPolicys = [];
    var _oAttendancecalenders=[];
    var _oLeaveHeads=[];
    var _oPaymentCycles=[];
    var _oRecruitmentEvents=[];
    var _oDayOffType=[];
    var _sOperation='';
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oAttendanceScheme = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oAttendancecalenders= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.AttendanceCalendars));
        _oRosterPlanDetails=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.RosterPlanDetails));
        _oRosterPlans=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.RosterPlans));
        _oAttendanceSchemeDayOffs=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.AttendanceSchemeDayOffs));
        _oAttendanceSchemeHoliDays=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.AttendanceSchemeHolidays));
        _oAttendanceSchemeLeaves=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.AttendanceSchemeLeaves));
        _oLeaveHeads=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.LeaveHeads));
        _oPaymentCycles=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.PaymentCycles));
        _oRecruitmentEvents=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.RecruitmentEvents));
        _oDayOffType=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.DayOffType));

        $('.cls-number').icsCurrencyBox();
        $('.cls-number').val("0.00");
        $('#rdbtnOverTimeDisAllow').prop('checked',true);
        ResetOvertime(true);
        $('#rdbtnDayOffContinous').prop('checked',true);
        EnableDayOffContinous();

        _sOperation= (sessionStorage.length>0)?sessionStorage.getItem('Operation'):'New';
        $('.number-field').numberbox({ min:0, precision:0});
        Initialization();
        var oDays = [{ DayName: "Saturday", DayID :1 },{ DayName: "Sunday", DayID: 2 }, { DayName: "Monday", DayID: 3 },{ DayName: "Tuesday",DayID: 4},{ DayName: "Wednesday",DayID: 5 }, { DayName: "Thursday", DayID: 6 },{ DayName: "Friday", DayID: 7 }];
        $("#cboWeekDay").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "DayName",
            InitialValue:"----Select Day----"
        });
        cboDayOffTypeChange();
    });



    $('#rdbtnOverTimeAllow').click(function(e){
        ResetOvertime(false);
    });

    $('#rdbtnOverTimeDisAllow').click(function(e){
        ResetOvertime(true);
    });



    function ResetOvertime(bIsDisAllow){
        $('.cls-overtime').find('.cls-number').val("0.00");
        $('.cls-overtime').find('select').val(0);
        $('.cls-overtime').find('.cls-number,select').prop('disabled',bIsDisAllow);
        $('.cls-overtime').find('#rdbtnShiftStart').prop('checked',!bIsDisAllow);
        $('.cls-overtime').find('#rdbtnShiftArrival').prop('checked',bIsDisAllow);
        $('.cls-overtime').find('#rdbtnShiftStart,#rdbtnShiftArrival').prop('disabled',bIsDisAllow);
    }

    function ResetDayOff(){
        $('#cboWeekDay').val(0);
        $('#chkFirstWeek').prop('checked',false);
        $('#txtRandomDayOff').val("");
    }

    function EnableDayOffContinous(){
        ResetDayOff();
        $('#cboWeekDay').show();
        $('#chkFirstWeek,#lbl-AlternateDayOff').prop('disabled',true);
        $('#lbl-RandomDayOff,#txtRandomDayOff').hide();
    }

    function cboDayOffTypeChange()
    {
        var nDayOffType=parseInt($("#cboDayOffType").val());


        //Continous = 1,   Alternate = 2,  HalfDay = 3,   Random = 4

        $('#lbl-RandomDayOff,#txtRandomDayOff,#chkFirstWeek,#lbl-AlternateDayOff,#txtRandomDayOff,#lbl-RandomDayOff,#cboWeekDay').hide();


        //ldlHalfDay
        $('#ldlHalfDay').hide();
        if(nDayOffType===1)
        {
            EnableDayOffContinous();
        }
        else  if(nDayOffType===2)
        {
            ResetDayOff();
            $('#chkFirstWeek,#lbl-AlternateDayOff').prop('disabled',false);
            $('#cboWeekDay,#chkFirstWeek,#lbl-AlternateDayOff').show();
            $('#lbl-RandomDayOff,#txtRandomDayOff').hide();
        }
        else  if(nDayOffType===3)
        {
            ResetDayOff();
            $('#chkFirstWeek,#lbl-AlternateDayOff').prop('disabled',true);
            $('#cboWeekDay').show();
            $('#lbl-RandomDayOff,#txtRandomDayOff,#chkFirstWeek,#lbl-AlternateDayOff').hide();
            $('#ldlHalfDay').hide();
        }

        else  if(nDayOffType===4)
        {
            ResetDayOff();
            $('#chkFirstWeek,#lbl-AlternateDayOff').prop('disabled',true);
            $('#cboWeekDay').hide();
            $('#lbl-RandomDayOff,#txtRandomDayOff').show();
        }
    }

    $('#rdbtnDayOffContinous').click(function(e){
        EnableDayOffContinous();
    });

    $('#rdbtnDayOffAlternate').click(function(e){
        ResetDayOff();
        $('#chkFirstWeek,#lbl-AlternateDayOff').prop('disabled',false);
        $('#cboWeekDay,#chkFirstWeek,#lbl-AlternateDayOff').show();
        $('#lbl-RandomDayOff,#txtRandomDayOff').hide();
    });

    $('#rdbtnDayOffRandom').click(function(e){
        ResetDayOff();
        $('#chkFirstWeek,#lbl-AlternateDayOff').prop('disabled',true);
        $('#cboWeekDay').hide();
        $('#lbl-RandomDayOff,#txtRandomDayOff').show();
    });


    function validationDayOff(){
        debugger;
        var oASDOs=$('#tblDayOff').datagrid('getRows');

        var nDayOffType=parseInt($("#cboDayOffType").val());
        if(nDayOffType===0)
        {
            alert("Please select a Day Off Type");
            return false;
        }
        if(nDayOffType===1)
        {
            if(oASDOs.length>0){

                if(oASDOs[0].NoOfRandomDayOff>0){
                    alert("In previous, Already Random Day Off Added.\nTo Add Continous, Remove First.");
                    return false;
                }
            }

            if($('#cboWeekDay').val()<=0){
                $('#cboWeekDay').focus();
                $('#cboWeekDay').addClass("errorFieldBorder");
                alert('Please select a day.');
                return false;
            }
            else{
                $('#cboWeekDay').removeClass("errorFieldBorder");
            }
        }
        else if(nDayOffType===2)
        {
            if(oASDOs.length>0){

                if(oASDOs[0].NoOfRandomDayOff>0){
                    alert("In previous, Already Random Day Off Added.\nTo Add Alternate, Remove First.");
                    return false;
                }
            }
            if($('#cboWeekDay').val()<=0){
                $('#cboWeekDay').focus();
                $('#cboWeekDay').addClass("errorFieldBorder");
                alert('Please select a day.');
                return false;
            }
            else{
                $('#cboWeekDay').removeClass("errorFieldBorder");
            }
        }
        else if (nDayOffType===4)
        {
            if(oASDOs.length>0){
                if(oASDOs[0].DayOffType===2 && oASDOs[0].NoOfRandomDayOff<=0){
                    alert("In previous, Already Continous Day Off Added.\nTo Add Random, Remove First.");
                    return false;
                }
                else if(oASDOs[0].DayOffType===2){
                    alert("In previous, Already Alternate Day Off Added.\nTo Add Random, Remove First.");
                    return false;
                }
            }
            if($('#cboWeekDay').val()>=0){
                $('#cboWeekDay').val(0);
            }
            if($.trim($('#txtRandomDayOff').val().toString())==""){
                $('#txtRandomDayOff').focus();
                $('#txtRandomDayOff').addClass("errorFieldBorder");
                alert('Please enter no of random day in a month.');
                return false;
            }
            else{
                $('#txtRandomDayOff').removeClass("errorFieldBorder");
            }
            if(parseFloat(icsRemoveComma($('#txtRandomDayOff').val()))<=0){
                $('#txtRandomDayOff').focus();
                $('#txtRandomDayOff').addClass("errorFieldBorder");
                alert('Please enter no of random day in a month.');
                return false;
            }
            else{
                $('#txtRandomDayOff').removeClass("errorFieldBorder");
            }
        }

        return true;
    }

    $('#btnAddDayOff').click(function(e)
    {
        if(!validationDayOff()) return false;
        $('#tblDayOff').datagrid('appendRow',RefreshObjectDayOff());
    });

    $('#btnRemoveDayOff').click(function(e)
    {
        var oASDO=$('#tblDayOff').datagrid('getSelected');
        if (oASDO == null) { alert("Please select an item from list!"); return false; }
        if(oASDO.AttendanceSchemeDayOffID>0){
            if (!confirm("Confirm to Delete?")) return;
            var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oASDO,
                ControllerName: "AttendanceScheme",
                ActionName: "ASH_Delete",
                TableId: "tblDayOff",
                IsWinClose: false
            };
            $.icsDelete(obj);
        }
        else{
            var nIndex=$('#tblDayOff').datagrid('getRowIndex',oASDO);
            $('#tblDayOff').datagrid('deleteRow',nIndex);
        }

    });

    function RefreshObjectDayOff(){
        debugger;
        var sDayOffInfo="";
        var nDayOffType=parseInt($("#cboDayOffType").val());
        if(nDayOffType===1)
        {
            sDayOffInfo= $('#cboWeekDay option:selected').text()+' - Continous';
        }
        else if(nDayOffType===2)
        {
            sDayOffInfo= $('#cboWeekDay option:selected').text()+' - Alt.'+(($('#chkFirstWeek').is(':checked'))?' First Week':' Second Week');
        }
        else if(nDayOffType===4)
        {
            sDayOffInfo= 'Any '+ icsRemoveComma($('#txtRandomDayOff').val()) + 'Days/ Month';
        }
        else if(nDayOffType===3)
        {
            //sDayOffInfo= 'Day Off from  '+ $('#txtInTime').timespinner('getValue') + ' To' +$('#txtOutTime').timespinner('getValue');
            sDayOffInfo= $('#cboWeekDay option:selected').text()+' - Half Day';
        }

        //if($('#rdbtnDayOffContinous').is(':checked')){
        //    sDayOffInfo= $('#cboWeekDay option:selected').text()+' - Continous';
        //}
        //else if($('#rdbtnDayOffAlternate').is(':checked')){
        //    sDayOffInfo= $('#cboWeekDay option:selected').text()+' - Alt.'+(($('#chkFirstWeek').is(':checked'))?' First Week':' Second Week');
        //}
        //else if($('#rdbtnDayOffRandom').is(':checked')){
        //    sDayOffInfo= 'Any '+ icsRemoveComma($('#txtRandomDayOff').val()) + 'Days/ Month';
        //}

        var oASDO={
            AttendanceSchemeDayOffID:0,
            AttendanceSchemeID: (_oAttendanceScheme!=null && _oAttendanceScheme.AttendanceSchemeID>0)?_oAttendanceScheme.AttendanceSchemeID:0,
            WeekDay: ($('#cboWeekDay').val()>0)?$('#cboWeekDay option:selected').text():"",
            //IsAlternate: $('#rdbtnDayOffAlternate').is(':checked'),
            DayOffType:nDayOffType,
            InTime:$('#txtInTime').timespinner('getValue'),
            OutTime:$('#txtOutTime').timespinner('getValue'),
            IsAlternateFromFirstWeek:$('#chkFirstWeek').is(':checked'),
            NoOfRandomDayOff:($('#txtRandomDayOff').val()=="")?0: parseInt(icsRemoveComma($('#txtRandomDayOff').val())),
            DayOffInfo:sDayOffInfo
        };
        return oASDO;
    }




    function Initialization(){


        $("#cboAttendenceCalendar,#cboAttendenceCalendarAdvSearch").icsLoadCombo({
            List: _oAttendancecalenders,
            OptionValue: "AttendanceCalendarID",
            DisplayText: "Name"
        });

        $("#cboRosterPlan,#cboRosterPlanAdvSearch").icsLoadCombo({
            List: _oRosterPlans,
            OptionValue: "RosterPlanID",
            DisplayText: "Description"
        });
        $(".RecruitmentEvent, #cboActivation").icsLoadCombo({
            List: _oRecruitmentEvents,
            OptionValue: "Value",
            DisplayText: "Text",
            InitialValue:""
        });
        $("#cboLeaveHead").icsLoadCombo({
            List: _oLeaveHeads,
            OptionValue: "LeaveHeadID",
            DisplayText: "Name"
        });
        $("#cboDayOffType").icsLoadCombo({
            List: _oDayOffType,
            OptionValue: "Value",
            DisplayText: "Text"
            //InitialValue:""
        });
        $(".RecruitmentEvent").not("#cboActivationState").prop('disabled', true);
        //$("#rdbtnEarnOnPresenceNo,#rdbtnCarryForwardNo").prop('checked','checked');
        $('.number-field').numberbox('setValue',"");
        $("#txtDaysRoster,#txtAccomodationActivationAfter,#txtPresenceDay,#txtMaxYearToCarry").numberbox({disabled:true});

        if(_oAttendanceScheme.AttendanceSchemeID>0){
            $('#btnCopy,#cboAttendenceCalendar').prop('disabled', true);
            RefreshControll(_oAttendanceScheme);
        }
        else{
            $('#btnCopy,#cboAttendenceCalendar').prop('disabled', false);
        }

        if(_sOperation=="View"){
            $("input,select").prop('disabled',true);
            $("#btnSave,#dayofftoolbar,#toolbarHoliday,#toolbarLeaveHEad").hide();
        }
        //cboDayOffTypeChange();
    }

    function RefreshControll(oAttendanceScheme) {

        $("#txtSchemaName").val(oAttendanceScheme.Name);
        $('#cboAttendenceCalendar').val(oAttendanceScheme.AttendanceCalenderID);


        $('#cboRosterPlan').val(oAttendanceScheme.RosterPlanID),
        GetRosterPlans($("#cboRosterPlan").val());

        //$("#chkEnforceClosing").prop('checked', oAttendanceScheme.EnforceMonthClosingRoster);

        //$("#chkAccomodationActivationAfter").prop('checked', oAttendanceScheme.Accomodation);
        //$('#cboAccomodationActivationAfter').val(oAttendanceScheme.AccommodationActivationAfter);
        //$("#txtAccomodationActivationAfter").numberbox('setValue',oAttendanceScheme.AccommodationDeferredDay);
        //EnableRecruitmentEvent('cboAccomodationActivationAfter','txtAccomodationActivationAfter',oAttendanceScheme.AlternativeDayOff);


        //if(oAttendanceScheme.OverTime){
        //    ResetOvertime(false);
        //    $("#rdbtnOverTimeAllow").prop('checked', oAttendanceScheme.OverTime);
        //}
        //else{
        //    ResetOvertime(true);
        //    $("#rdbtnOverTimeDisAllow").prop('checked', true);
        //}

        //$("#txtActivationAfterDays").val(oAttendanceScheme.OverTimeDeferredDay);
        //$('#cboActivation').val(oAttendanceScheme.OverTimeActivationAfter);
        //$('#textOTCalAfter').val((oAttendanceScheme.OvertimeCalculateInMinuteAfter>0)? oAttendanceScheme.OvertimeCalculateInHourAfter:0);
        //if(oAttendanceScheme.IsOTCalTimeStartFromShiftStart){
        //    $("#rdbtnShiftStart").prop('checked', oAttendanceScheme.IsOTCalTimeStartFromShiftStart);
        //}
        //else{
        //    $("#rdbtnShiftArrival").prop('checked', true);
        //}
        //$("#rdbtnShiftStart").prop('checked', oAttendanceScheme.IsOTCalTimeStartFromShiftStart);
        //$("#textMaxOTInHourPerDay").val((oAttendanceScheme.MaxOTInMinutePerDay>0)? oAttendanceScheme.MaxOTInHourPerDay:0);
        //$("#textBreakageTime").val( oAttendanceScheme.BreakageTimeInMinute);
        DynamicRefreshList(_oAttendanceSchemeDayOffs, "tblDayOff");
        DynamicRefreshList(_oAttendanceSchemeHoliDays, "tblHolidays");
        DynamicRefreshList(_oAttendanceSchemeLeaves, "tblLeaveHead");

    }


    $("#cboRosterPlan").change(function(e) {
        GetRosterPlans($("#cboRosterPlan").val());
    });

    function GetRosterPlans(nRosterPlanID){
        var oRPDetails=[];
        for(var i=0;i<_oRosterPlanDetails.length;i++)
        {
            if (nRosterPlanID == _oRosterPlanDetails[i].RosterPlanID) {
                oRPDetails.push(_oRosterPlanDetails[i]);
            }
        }

        for (var j=0;j<_oRosterPlans.length;j++)
        {
            if (nRosterPlanID==_oRosterPlans[j].RosterPlanID)
            {
                $('#txtDaysRoster').numberbox('setValue',_oRosterPlans[j].RosterCycle);
            }
        }

        DynamicRefreshList(oRPDetails, "tblRosterPlan");
    }

    function EnableRecruitmentEvent(selectorID,numSelectID,IsChecked){
        if(IsChecked){
            $("#"+selectorID).prop('disabled', false);
            $("#"+numSelectID).numberbox({disabled:false});
        }else{
            $("#"+selectorID).prop('disabled', true);
            $("#"+numSelectID).numberbox({disabled:true});
        }

    }


    $('#chkAccomodationActivationAfter').click(function(e){

        if($("#chkAccomodationActivationAfter").is(':checked')){
            EnableRecruitmentEvent('cboAccomodationActivationAfter','txtAccomodationActivationAfter',true);
        }
        else{
            EnableRecruitmentEvent('cboAccomodationActivationAfter','txtAccomodationActivationAfter',false);
        }
    });



    $('#chkEarnLeave').click(function(e){
        if($("#chkEarnLeave").is(':checked')){
            $("#txtPresenceDay").numberbox({disabled:false});
        }
        else{
            $("#txtPresenceDay").numberbox({disabled:true});
            $("#txtPresenceDay").numberbox('setValue',"");
        }
    });

    $('#chkCarryForward').click(function(e){
        if($("#chkCarryForward").is(':checked')){
            $("#txtMaxYearToCarry").numberbox({disabled:false});
        }
        else{
            $("#txtMaxYearToCarry").numberbox({disabled:true});
            $("#txtMaxYearToCarry").numberbox('setValue',"");
        }
    });



    /*------------ Holiday Add & Remove-------------*/


    function RefreshObjectForHoliDay(oHoliDay) {
        var oAttendanceSchemeHoliday = {
            HoliDayName: oHoliDay.Description,
            HolidayID: oHoliDay.HolidayID,
            DescriptionWithDayOfMonth : oHoliDay.DescriptionWithDayOfMonth

        };
        return oAttendanceSchemeHoliday;
    }

    $('#btnDeleteHoliday').click(function(e){
        var oASH = $('#tblHolidays').datagrid('getSelected');
        if (oASH == null) { alert("Please select an item from holiday list."); return false;}
        var nIndex = $('#tblHolidays').datagrid('getRowIndex', oASH);
        if (_oAttendanceScheme.AttendanceSchemeID>0)
        {
            if (!confirm("Confirm to Delete?")) return;
            var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oASH,
                ControllerName: "AttendanceScheme",
                ActionName: "ASH_Delete",
                TableId: "tblHolidays",
                IsWinClose: false
            };
            $.icsDelete(obj);
        }
        else { $('#tblHolidays').datagrid('deleteRow',nIndex);}
    });

    $('#btnAddHoliday').click(function(e){
        if($('#cboAttendenceCalendar').val()<=0){ alert("Please select attendance calender."); return; }
        var oHoliday= {
            HolidayID:0,
            AttendanceCalendarID: $('#cboAttendenceCalendar').val()
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oHoliday,
            ControllerName: "Holiday",
            ActionName: "GetsHoliday",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].HolidayID > 0) {
                    var oHolidays=[];
                    if($('#tblHolidays').datagrid('getRows').length<=0){
                        oHolidays=response.objs;
                    }
                    else{
                        var oTempHolidays=$('#tblHolidays').datagrid('getRows');
                        for(var i=0;i<response.objs.length;i++){
                            var bExists=false;
                            for(var j=0;j<oTempHolidays.length;j++){
                                if(oTempHolidays[j].HolidayID==response.objs[i].HolidayID){
                                    bExists=true;
                                    break;
                                }
                            }
                            if(!bExists){oHolidays.push(response.objs[i]);}
                        }

                    }
                    debugger;
                    var tblColums = [];var oColumn = { field: "Description", title: "Description", width: 220, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "TypeOfHolidayInString", title: "Type Of Holiday", width: 110, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winHolidayPicker',
                        winclass:'clsHolidayPicker',
                        winwidth: 450,
                        winheight: 460,
                        tableid: 'tblHolidayPicker',
                        tablecolumns: tblColums,
                        datalist: oHolidays,
                        multiplereturn: true,
                        searchingbyfieldName:'Description',
                        windowTittle: 'Holiday List'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeHolidayPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert("No holiday found."); }
            }
            else { alert("No holiday found."); }
        });
    });

    function IntializeHolidayPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oHolidays = $('#'+oPickerobj.tableid).datagrid('getChecked');
            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winHolidayPicker')
            {
                for (var i = 0; i < oHolidays.length; i++) {
                    var oAttendenceSchemeHoliDay = RefreshObjectForHoliDay(oHolidays[i]);
                    _oAttendanceSchemeHoliDays.push(oAttendenceSchemeHoliDay);
                }
                DynamicRefreshList(_oAttendanceSchemeHoliDays, "tblHolidays");
            }
        });
    }

    /*------------ Leave Head Schema -------------*/

    function ResetLeaveHeadSchema(){
        $("#txtTotalLeave,#txtDeferredDay,#txtPresenceDay,#txtMaxYearToCarry").numberbox('setValue',0);
        $('#cboActivationState').val(0);
        $(".radio-btn").prop("checked", false);
        // $("#rdbtnEarnOnPresenceNo,#rdbtnCarryForwardNo").prop('checked','checked');
    }

    $("#cboLeaveHead").change(function(e) {
        ResetLeaveHeadSchema();
        var nLeaveHeadID = $("#cboLeaveHead").val();
        if(nLeaveHeadID>0){
            for(var i=0;i<_oLeaveHeads.length;i++)
            {
                if (nLeaveHeadID == _oLeaveHeads[i].LeaveHeadID) {
                    $("#txtTotalLeave").numberbox('setValue',_oLeaveHeads[i].TotalDay);
                    break;
                }
            }
        }

    });


    function RefreshObjectAttendanceSchemeLeaveHead() {

        var oAttendanceSchemeLeaveHead = {
            LeaveName: $("#cboLeaveHead option:selected").text(),
            LeaveID: $("#cboLeaveHead").val(),
            AttendanceSchemeLeaveID: 0,
            AttendanceSchemeID: 0,
            TotalDay: $("#txtTotalLeave").numberbox('getValue'),
            DeferredDay: $("#txtDeferredDay").numberbox('getValue'),
            IsLeaveOnPresence: ($("#chkEarnLeave").is(':checked'))? true:false,
            PresenceEarnLeave: ($("#chkEarnLeave").is(':checked'))? "Yes":"No",
            PresencePerLeave: ($("#chkEarnLeave").is(':checked'))? ($("#txtPresenceDay").numberbox('getValue')):0,
            IsCarryForward: ($("#chkCarryForward").is(':checked'))? true:false,
            CarryForward: ($("#chkCarryForward").is(':checked'))? "Yes":"No",
            YearsToCarry: ($("#chkCarryForward").is(':checked'))? ($("#txtMaxYearToCarry").numberbox('getValue')):0,
            MaxCarryDays: ($("#chkCarryForward").is(':checked'))? 360*($("#txtMaxYearToCarry").numberbox('getValue')):0,
            ActivationAfter:$("#cboActivationState").val(),
            ActivationAfterInString: $("#cboActivationState option:selected").text(),
            EarnLeaveStatus: ($("#chkEarnLeave").is(':checked'))? "By "+($("#txtPresenceDay").numberbox('getValue')) + " days of presence":"",
            CarryForwardStatus: ($("#chkCarryForward").is(':checked'))? "Max. "+($("#txtMaxYearToCarry").numberbox('getValue')) + " years":"",
            ActivationStatus: ($("#cboActivationState").val()>0)? ($("#txtDeferredDay").numberbox('getValue')+" days of "+$("#cboActivationState option:selected").text()):"",
            IsComp:($("#chkIsComp").is(':checked'))? true:false,
            IsCompInStr : ($("#chkIsComp").is(':checked'))? "Yes":"No"
        };
        return oAttendanceSchemeLeaveHead;
    }

    $('#btnAddLeaveHead').click(function(e) {


        if($("#cboLeaveHead").val()<=0){
            alert("Please select a leave head."); return false;
        }
        else if(parseInt($("#txtTotalLeave").numberbox('getValue'))<0){
            alert("Enter Valid day."); return false;
        }
        else if($("#chkEarnLeave").is(':checked') && parseInt($("#txtPresenceDay").numberbox('getValue'))<=0){
            alert("Enter presence day. Because earn on presence is active."); return false;
        }
        else if($("#chkCarryForward").is(':checked') && parseInt($("#txtMaxYearToCarry").numberbox('getValue'))<=0){
            alert("Enter max carry forward year. Because carry forward is active."); return false;
        }

        var oLeaveHeads=$('#tblLeaveHead').datagrid('getRows');
        var oASLH=RefreshObjectAttendanceSchemeLeaveHead();
        if(oLeaveHeads.length>0){

            for(var i=0;i<oLeaveHeads.length;i++){
                if(oLeaveHeads[i].LeaveID==oASLH.LeaveID){
                    alert("Already exists in the list. Please try with another."); return false;

                }
            }
        }
        oLeaveHeads.push(oASLH);
        DynamicRefreshList(oLeaveHeads, "tblLeaveHead");

    });

    $('#btnDeleteLeaveHead').click(function(e){

        var oASL = $('#tblLeaveHead').datagrid('getSelected');
        if (oASL == null) { alert("Please select an item from leave head schema."); return false;}
        var nIndex = $('#tblLeaveHead').datagrid('getRowIndex', oASL);
        if (_oAttendanceScheme.AttendanceSchemeID>0)
        {
            if (!confirm("Confirm to Delete?")) return;
            var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oASL,
                ControllerName: "AttendanceScheme",
                ActionName: "ASL_Delete",
                TableId: "tblLeaveHead",
                IsWinClose: false
            };
            $.icsDelete(obj);
        }
        else { $('#tblLeaveHead').datagrid('deleteRow',nIndex);}
    });

    /*------------ Attendance Scheme -------------*/
    function ValidationAttendanceScheme(){
        if ($.trim($("#txtSchemaName").val())=='') {
            alert("Please enter a schema name.");
            $('#txtSchemaName').focus();
            $('#txtSchemaName').val("");
            $('#txtSchemaName').addClass("errorFieldBorder");
            return false;
        } else { $('#txtSchemaName').removeClass("errorFieldBorder"); }

        if ($("#cboAttendenceCalendar").val() <= 0) {
            alert("Please select attendance calendar.");
            $('#cboAttendenceCalendar').focus();
            $('#cboAttendenceCalendar').addClass("errorFieldBorder");
            return false;
        } else { $('#cboAttendenceCalendar').removeClass("errorFieldBorder"); }



        if ($("#cboRosterPlan").val() <= 0) {
            alert("Please select roster plan.");
            $('#cboRosterPlan').focus();
            $('#cboRosterPlan').addClass("errorFieldBorder");
            return false;
        } else { $('#cboRosterPlan').removeClass("errorFieldBorder"); }

        if($('#tblHolidays').datagrid('getRows').length<=0){ alert("Please add holidays."); return false; }
        if($('#tblLeaveHead').datagrid('getRows').length<=0){ alert("Please add leave scheme."); return false; }

        return true;
    }


    $('#btnSave').click(function(e){
        if (!ValidationAttendanceScheme()) return false;
        var oAttendanceScheme = RefreshObjectAttendanceScheme();
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ObjectId: oAttendanceScheme.AttendanceSchemeID,
            ControllerName: "AttendanceScheme",
            ActionName: "AttendanceScheme_IU",
            TableId: "",
            IsWinClose: false,
            Message: (oAttendanceScheme.AttendanceSchemeID>0)?"Update Successfully." : "Save Successfully."
        };
        $.icsSave(obj, function (response) {
            debugger;
            if (response.status && response.obj != null) {
                if (response.obj.AttendanceSchemeID > 0) {
                    window.location.href = sessionStorage.getItem("BackLink");
                }
            }
        });

    });

    function RefreshObjectAttendanceScheme() {

        var oAttendanceScheme = {
            AttendanceSchemeID: _oAttendanceScheme.AttendanceSchemeID,
            Name: $.trim($("#txtSchemaName").val()),
            AttendanceCalenderID: $('#cboAttendenceCalendar').val(),
            RosterPlanID:$('#cboRosterPlan').val(),

            //Accomodation: $("#chkAccomodationActivationAfter").is(':checked'),
            //AccommodationActivationAfter: $('#cboAccomodationActivationAfter').val(),
            //AccommodationDeferredDay:$("#txtAccomodationActivationAfter").numberbox('getValue'),
            //EnforceMonthClosingRoster: $("#chkEnforceClosing").is(':checked'),

            //OvertimeCalculateInMinuteAfter:parseFloat(icsRemoveComma($('#textOTCalAfter').val()))*60,
            //OverTime: $("#rdbtnOverTimeAllow").is(':checked'),
            //OverTimeActivationAfter: $('#cboActivation').val(),
            //OverTimeDeferredDay:parseFloat(icsRemoveComma($("#txtActivationAfterDays").val())),

            //IsOTCalTimeStartFromShiftStart:$('#rdbtnShiftStart').is(':checked'),
            //MaxOTInMinutePerDay:parseFloat(icsRemoveComma($("#textMaxOTInHourPerDay").val()))*60,
            //BreakageTimeInMinute:parseFloat(icsRemoveComma($("#textBreakageTime").val())),

            AttendanceSchemeDayOffs : $('#tblDayOff').datagrid('getRows'),
            AttendanceSchemeHolidays: $('#tblHolidays').datagrid('getRows'),
            AttendanceSchemeLeaves: $('#tblLeaveHead').datagrid('getRows'),
            IsActive:(_oAttendanceScheme.AttendanceSchemeID>0)?_oAttendanceScheme.IsActive: true
        };

        return oAttendanceScheme;
    }


    $('#btnBack').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    /*------------Copy  Attendance Scheme -------------*/

    $('#btnCopy').click(function(e) {
        AdvSearchResetControll();
        $("#winAdvSearch").icsWindow('open');
    });


    function AdvSearchResetControll(){
        $("#txtSchemaName").val("");
        $(".combo").val(0);
        DynamicRefreshList([], "tblAttendanceSchemesAdvSearchList");

    }

    $("#btnReset").click(function(e) {
        AdvSearchResetControll();
    });

    $("#btnSearch").click(function(e) {
        var oAttendanceScheme = {
            Params: $.trim($("#txtSchemaName").val()) + "~" + $("#cboAttendenceCalendarAdvSearch").val()  + "~" +$("#cboRosterPlanAdvSearch").val()
        };
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceScheme",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs != null) {
                if (response.objs.length > 0) {
                    if(response.objs[0].AttendanceSchemeID>0){DynamicRefreshListForMultipleSelection(response.objs, "tblAttendanceSchemesAdvSearchList");}
                    else{DynamicRefreshListForMultipleSelection([], "tblAttendanceSchemesAdvSearchList"); alert(response.objs[0].ErrorMessage);}
                }
                else { DynamicRefreshListForMultipleSelection([], "tblAttendanceSchemesAdvSearchList"); alert("No schema found."); }
            }
        });
    });

    $("#btnCancel").click(function(e) {
        $("#winAdvSearch").icsWindow('close');
    });

    $("#btnOkASAdvSearch").click(function(e) {
        debugger;
        var oAttendanceScheme=$('#tblAttendanceSchemesAdvSearchList').icsGetSelectedItem();
        if(oAttendanceScheme.AttendanceSchemeID>0){
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oAttendanceScheme,
                ControllerName: "AttendanceScheme",
                ActionName: "AttendanceScheme_Copy",
                TableId: "",
                IsWinClose: false
            };
            $.icsDataGet(obj, function (response) {
                debugger;
                if (response.status && response.obj != null) {
                    if (response.obj.AttendanceSchemeID > 0) {
                        _oAttendanceScheme = response.obj;
                        _oAttendanceScheme.AttendanceSchemeID=0;
                        _oAttendanceSchemeDayOffs=response.obj.AttendanceSchemeDayOffs;
                        _oAttendanceSchemeHoliDays=response.obj.AttendanceSchemeHolidays;
                        _oAttendanceSchemeLeaves=response.obj.AttendanceSchemeLeaves;
                        RefreshControll(_oAttendanceScheme);
                    }
                }
            });
        }
    });

</script>
