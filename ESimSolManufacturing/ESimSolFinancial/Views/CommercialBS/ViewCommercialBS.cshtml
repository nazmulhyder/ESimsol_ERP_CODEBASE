@{
    ViewBag.Title = "Commercial Bank Submission";
}
<html>

<body>
    @model ESimSol.BusinessObjects.CommercialBS
    <div id="progbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div id="divCommercialBS" class="easyui-panel menuMainCollectionTable" title="Add Bank Submission" style="font-family:Tahoma; height:100%; width:100%;overflow:hidden;">
        <div style="height:88%;width:100%;overflow:hidden;">
            <div style="width:100%;height:22%;">
                <fieldset>
                    <legend style="text-align:left; font-weight:bold;"> CommercialBS Informations : </legend>
                    <table  style="width: 100%;" cellspacing="1" cellpadding="1" >
                        <tr>
                            <td style="width:10%; text-align:right">
                                <label>
                                    Ref. No 
                                </label>
                            </td>
                            <td style="width:25%; text-align:left">
                                @Html.TextBoxFor(model => model.RefNo, new { id = "txtRefNo", style = "width:100%;", disabled = "disabled" })
                            </td>

                            <td style="width:10%; text-align:right">
                                <label>
                                    Issue Date
                                </label>
                            </td>
                            <td style="width:20%; text-align:left">
                                <input type="text" style="width:100%;" id="txtIssueDate" class="easyui-datebox"  data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>
                            <td style="width:10%; text-align:right;">
                                <label>
                                    Master LC:
                                </label>
                            </td>
                            <td style="width:25%; text-align:left">
                             <table border="0" cellpadding="0" cellspacing="0">
                                 <tr>
                                     <td style="width:90%">@Html.TextBoxFor(model => model.MasterLCNo, new { id = "txtMasterLCNo", style = "width:100%;", placeholder = "Type LC & press Enter" })</td>
                                     <td><a id="btnLCPick" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="LCPick()">Pick</a></td>
                                 </tr>
                             </table>
                            </td>
                        </tr>
                       
                        <tr>
                            <td style="width:10%; text-align:right">
                                <label>
                                    Buyer:
                                </label>
                            </td>
                            <td style="width:25%; text-align:left">
                                @Html.TextBoxFor(model => model.BuyerName, new { id = "txtBuyerName", style = "width:100%;", disabled = "disabled" })
                            </td>
                            
                            <td style="width:10%; text-align:right">
                                <label>
                                    Bank name
                                </label>
                            </td>
                            <td style="width:20%; text-align:left;">
                                @Html.TextBoxFor(model => model.BankName, new { id = "txtBankName", style = "width:100%;", disabled = "disabled" })
                            </td>
                            
                            <td style="width:10%; text-align:right">
                                <label>
                                    Remarks
                                </label>
                            </td>
                            <td style="width:25%; text-align:left;">
                                @Html.TextBoxFor(model => model.Remarks, new { id = "txtRemarks", style = "width:100%;" })
                            </td>
                        </tr>
                      
                    </table>
                </fieldset>
            </div>
            <div style="width:100%">
                <table id="tblCommercialBSDetails" title="Bank Submission Detail" class="easyui-datagrid" style="width:100%;height:350px;" showfooter="true"
                       data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false,  autoRowHeight:false, toolbar: '#toolbarCommercialBSDetail',onClickRow:onClickRow ">
                    <thead>
                        <tr>
                            <th field="InvoiceNo" width="10%" align="left">Invoice No</th>
                            <th field="ShipmentModeST" width="25%" align="left">Shipment Mode</th>
                            <th width="12%" align="left" data-options="field:'Remarks',editor:{type:'text',options:{precision:0}}">Remarks</th>
                            <th width="10%" field="InvoiceQtyST" align="right">Invoice Qty</th>
                            <th width="10%" field="InvoiceAmount" align="right" formatter="formatPrice">Amount</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbarCommercialBSDetail">
                    <label >Invoice:</label>
                    <input type="text" id="txtInvoiceNo" placeholder="Type Invoice No & Press Enter" style="width:180px;" /><a id="btnInvoicePick" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Pick</a>
                    <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                    <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a>
                </div>
            </div>
        </div>
        <div style="width:100%; height:8%">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:75%; text-align:right"></td>
                        <td style="width:25%;text-align:right">
                            @*<a id="btnPrintPreview" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Preview</a>*@
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

</body>
</html>
<style>
    td,th{
        padding:2px;
    }
</style>
<script type="text/javascript">
    var _oCommercialBS=null;
    var _sBaseAddress="";
    var _sCommercialBSHeader="";
    var _nMenuid=0;
    var _oPriortyLevels = [];
    var _nBOQ_Qty=0;
    var _nDeliveryFromStoreQty=0;
    var _oClientOperationSetting =  null;
    var _sDepartmentName = "";
    var _oDepts = [];
    $(document).ready(function () {
        debugger;
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.MenuID]));
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oCommercialBS =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sCommercialBSHeader=sessionStorage.getItem("CommercialBSHeader");
        if(_sCommercialBSHeader=="View Commercial BS")
        {
            $('#btnSave').hide();
            $('#btnDelete').hide();
        }
        
        $('#txtIssueDate').datebox('setValue',_oCommercialBS.IssueDateInString);   
        RefreshControl();
        RefreshSummary();
        $("#progbar").progressbar({ value: 0 });
        $("#progbarParent").hide();
    });



    $("#txtMasterLCNo").keypress(function(e){
        if (e.which == 13)//enter=13
        {
            //DepartmentPicker();
            LCPick($("#txtMasterLCNo").val());
        }
    });
    function LCPick()
    {
        debugger;
        var oMasterLC={BUID:sessionStorage.getItem('BUID'), MasterLCNo:$("#txtMasterLCNo").val()};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oMasterLC,
            ControllerName: "CommercialBS",
            ActionName: "GetMasterLCs",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].MasterLCID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "MasterLCNo", title: "LC No", width:150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "MasterLCDateSt", title: "LC Date", width:90, align: "left"};tblColums.push(oColumn);
                    oColumn = { field: "ApplicantName", title: "Buyer", width:150, align: "left"};tblColums.push(oColumn);
                    oColumn = { field: "LCValue", title: "LC Value", width:120, align: "right"  };tblColums.push(oColumn);
                    var bmultiplereturn=false;

                    var oPickerParam = {
                        winid: 'winMLC',
                        winclass:'clsMasterLC',
                        winwidth:600,
                        winheight:500,
                        tableid: 'tblMasterLC',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Master LC List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function ValidateInput()
    {
       
        if(_oCommercialBS.MasterLCID <=0) {
            alert("Please Select Master LC");
            return false;
        }
        if(_oCommercialBS.BankID<=0)
        {
            alert("Sorry, there is No Bank.");
            return false;
        }
        var oCommercialBSDetails=$("#tblCommercialBSDetails").datagrid('getRows');
        if (!oCommercialBSDetails || oCommercialBSDetails.length<=0) {
            alert("Please Add Bank Submission Details.");
            return false;
        }
        for(var i = 0;i<oCommercialBSDetails.length;i++)
        {
            if(parseFloat(oCommercialBSDetails[i].InvoiceAmount)<=0 )
            {
                alert("Amount Should be Greater than 0 for Inoice ["+oCommercialBSDetails[i].InvoiceNo+"]");
                return false;
            }
        }

        return true;
    }
    function RefreshObject()
    {
        debugger;
        var oCommercialBS= {
            CommercialBSID :_oCommercialBS.CommercialBSID,
            RefNo :$('#txtRefNo').val(),
            IssueDate: $('#txtIssueDate').datebox('getValue'),
            Note : $("#txtNote").val(),
            MasterLCID:_oCommercialBS.MasterLCID,
            BUID:sessionStorage.getItem('BUID'),
            BankID:_oCommercialBS.BankID,
            BuyerID:_oCommercialBS.BuyerID,
            BSAmount : ICS_TotalCalculation($("#tblCommercialBSDetails").datagrid('getRows'),'InvoiceAmount'),
            Remarks:$('#txtRemarks').val(),
            CommercialBSDetails:$("#tblCommercialBSDetails").datagrid('getRows')
        };
        return oCommercialBS;
    }
    $("#btnSave").click(function(){
        debugger;
        endEditing();
        if(!ValidateInput()) return false;
        var oCommercialBS=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/CommercialBS/Save",
            traditional: true,
            data:  JSON.stringify(oCommercialBS),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oCommercialBS = jQuery.parseJSON(data);
                if (oCommercialBS.ErrorMessage==null || oCommercialBS.ErrorMessage=="")
                {
                    alert("Data Saved successfully");
                   
                    var oCommercialBSs = sessionStorage.getItem("CommercialBSs");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oCommercialBSs != null) {

                        oCommercialBSs = jQuery.parseJSON(oCommercialBSs);
                    }
                    else {
                        oCommercialBSs = [];
                    }
                    if (nIndex != -1) {
                        oCommercialBSs[nIndex] = oCommercialBS;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oCommercialBSs.length);
                        oCommercialBSs.push(oCommercialBS);
                    }
                    sessionStorage.setItem("CommercialBSs", JSON.stringify(oCommercialBSs));
                    window.location.href = sessionStorage.getItem("BackLink");
                    }
                   
                else {
                    alert(oCommercialBS.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });

    });
    $("#btnClose").click(function(){
        window.location.href =sessionStorage.getItem("BackLink");
    });
    function RefreshControl()
    {
       
        if(_oCommercialBS.CommercialBSDetails!=null)
        {
            DynamicRefreshList(_oCommercialBS.CommercialBSDetails, 'tblCommercialBSDetails');
        }
        //debugger;
    }

    $("#btnPrintPreview").click(function() {

        if(_oCommercialBS==null || _oCommercialBS.CommercialBSID<=0)
        {
            alert("No Data!!! please add Data!");
            return false;
        }

        window.open(_sBaseAddress+ '/CommercialBS/PrintoCommercialBS?id=' + _oCommercialBS.CommercialBSID, "_blank");

    });
  

    //// Detail ////
    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#tblCommercialBSDetails').datagrid('validateRow', editIndex)) {
            $('#tblCommercialBSDetails').datagrid('endEdit', editIndex);
            $('#tblCommercialBSDetails').datagrid('selectRow', editIndex);
            var oCommercialBS = $('#tblCommercialBSDetails').datagrid('getSelected');

            debugger;
            if (oCommercialBS == null)
            {
                return;
            }

            if (oCommercialBS.Qty<=0)
            {
                oCommercialBS.Qty=0;
            }
            $('#tblCommercialBSDetails').datagrid('updateRow', { index: editIndex, row: oCommercialBS });
            RefreshSummary();
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRow(index) {

        if (editIndex != index) {
            if (endEditing()) {
                $('#tblCommercialBSDetails').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oCommercialBS= $('#tblCommercialBSDetails').datagrid('getSelected');
                editIndex = index;
            }
            else {
                $('#tblCommercialBSDetails').datagrid('selectRow', editIndex);
            }
        }
    }


    function ValidateInputCommercialBSDetail()
    {
        if (parseInt(_oCommercialBSDetail.ProductID) <= 0)
        {
            alert("Please select Product"); $('#txtProductName').focus();
            $('#txtProductName').css("border", "1px solid #c00"); return false;
        }

        if (parseFloat($('#txtUnitPrice').numberbox('getValue')) <= 0)
        {
            alert("Unit Price should be Greater than Zero");
            $('#txtUnitPrice').focus();
            $('#txtUnitPrice').css("border", "1px solid #c00"); return false;
        }
        if (parseFloat($('#txtQty').numberbox('getValue')) <= 0)
        {
            alert("Quantity should be Greater than Zero");
            $('#txtQty').focus();
            $('#txtQty').css("border", "1px solid #c00"); return false;
        }
        return true;
    }
    function IsExist(nCommercialInvoiceID)
    {
        var oCommercialBSDetails = $('#tblCommercialBSDetails').datagrid('getRows');
        for (var i = 0; i < oCommercialBSDetails.length; i++)
        {
            if (parseInt(oCommercialBSDetails[i].CommercialInvoiceID) == parseInt(nCommercialInvoiceID))
           {
                    return true;
            }
        }
        return false;
    }
    
    function updateProgress() {
        var value =$('#progbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progbar').progressbar('setValue', value);
        }
    }

    function hideShow(miliseconds) {
        $("#progbarParent").hide();
    }

    $('#btnInvoicePick').click(function()
    {
        GetInvoices("");
    });
    $("#txtInvoiceNo").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($.trim($('#txtInvoiceNo').val())==null || $.trim($('#txtInvoiceNo').val())=="")
            {
                alert("Type Invoice No and Press Enter");
                $('#txtInvoiceNo').focus();
                return;
            }
            GetInvoices($.trim($('#txtInvoiceNo').val()));
        }else if(code==8)//Backspace
        {
            $("#txtInvoiceNo").removeClass('fontColorOfPickItem');
            $('#txtInvoiceNo').data('OrderRecap',null);
        }
    });

    function GetInvoices(txtInvoiceNo)
    {
        var oCommercialBS =  {MasterLCID:_oCommercialBS.MasterLCID};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oCommercialBS,
            ControllerName: "CommercialBS",
            ActionName: "GetCommercialBSDetails",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].CommercialInvoiceID > 0) {
                    var tblColums = []; var oColumn = { field: "InvoiceNo", title: "Invoice No", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ShipmentModeST", title: "Ship.Mode", width: 90, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "InvoiceQtyST", title: "Qty", width: 120, align: "right" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winInvoices',
                        winclass: 'clsInvoice',
                        winwidth: 500,
                        winheight: 500,
                        tableid: 'tblInvoices',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'InvoiceNo',
                        searchingbyfieldCaption:'Search By Invoice No',
                        windowTittle: 'Invoice List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function ()
        {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }
    function SetPickerValueAssign(oPickerobj)
    {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid === 'winInvoices')
        {
            for(var i=0;i<oreturnobjs.length;i++)
            {
                if(!IsExist(oreturnobjs[i].CommercialInvoiceID))
                {
                    $('#tblCommercialBSDetails').datagrid('appendRow',oreturnobjs[i]);
                }
            }
            $("#txtInvoiceNo").val('');
        }
        else if (oPickerobj.winid=='winMLC')
        {
            if(parseInt(oreturnObj.MasterLCID)>0)
            {
                $('#txtMasterLCNo').val(oreturnObj.MasterLCNo);
                $('#txtBuyerName').val(oreturnObj.ApplicantName);
                $('#txtBankName').val(oreturnObj.ActualAdvBankName);
                _oCommercialBS.MasterLCID = oreturnObj.MasterLCID;
                _oCommercialBS.BuyerID = oreturnObj.Applicant;
                _oCommercialBS.BankID = oreturnObj.ActualAdvBankID;
                $("#txtMasterLCNo").addClass('fontColorOfPickItem');
                $("#txtMasterLCNo").focus();
            }
        }
    }
    
    function RefreshSummary()
    {
        var oCommercialBSs = $('#tblCommercialBSDetails').datagrid('getRows');
        var nTotalQty = 0;
        for(var i = 0; i<oCommercialBSs.length;i++)
        {
            nTotalQty+=parseFloat(oCommercialBSs[i].Qty);
        }
        
    }

    $("#btnDelete").click(function () {
        var olCommercialBSDetail = $('#tblCommercialBSDetails').datagrid('getSelected');
        if (olCommercialBSDetail == null) {
            alert("Invalid Selection!!! please select a valid Item!");
            return false;
        }
        if (!confirm("Confirm to Remove?")) return;
        var SelectedRowIndex = $('#tblCommercialBSDetails').datagrid('getRowIndex', olCommercialBSDetail);
        $('#tblCommercialBSDetails').datagrid('deleteRow',SelectedRowIndex);
        RefreshSummary();
        alert("Removed sucessfully");
        editIndex = undefined;
    });

    
    $("#btnRefresh").click(function () {
        endEditing();
        var oCommercialBSDetails = $('#tblCommercialBSDetails').datagrid('getRows');
        DynamicRefreshList(oCommercialBSDetails, 'tblCommercialBSDetails');
    });

</script>