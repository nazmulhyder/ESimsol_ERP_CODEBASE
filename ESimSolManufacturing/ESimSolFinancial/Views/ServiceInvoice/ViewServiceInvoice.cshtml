<html>
@{
    ViewBag.Title = "Service Invoice Entry";
}
<body>
    @model ESimSol.BusinessObjects.ServiceInvoice
    <script src="~/Views/VehicleChassis/VehicleChassiss.js"></script>
    <script src="~/Views/VehicleEngine/VehicleEngine.js"></script>

    <div class="menuMainCollectionTable" ng-app="ServiceInvoiceApp" ng-controller="ServiceInvoiceController as SODC" style="height:100%; width:100%; overflow:hidden" id="divServiceInvoice">
        <div style="font-family:Tahoma;text-align:center;height:90%;width:100%;overflow:hidden;" class="regionVR">
            <section>
                <ul class="nav nav-tabs" style="background:#EFF5FF; color:white;">
                    <li ng-class="{active:SODC.IsSet(1)}">
                        <a href="" ng-click="SODC.SetTab(1)" style="color:black;">Service Invoice</a>
                    </li>
                    <li id="liTC" ng-class="{active:SODC.IsSet(2)}">
                        <a href="" ng-click="SODC.SetTab(2)" style="color:black;">Terms & Condition</a>
                    </li>
                </ul>

                <div ng-show="SODC.IsSet(1)">
                    <div style="font-family:Tahoma;text-align:center;height:100%;width:100%">
                            <fieldset style="height:160px; border:hidden">
                                <div class="col-md-12">
                                    <div class="col-md-1 text-right">
                                        <label class="control-label">Invoice No:</label>
                                    </div>
                                    <div class="col-md-2 text-left">
                                        <input type="text" ng-model="ServiceInvoice.ServiceInvoiceNo" class="form-control" disabled />
                                    </div>
                                    <div class="col-md-1 text-right">
                                        <label class="control-label">Invoice Type:</label>
                                    </div>
                                    <div class="col-md-2">
                                        <select class="form-control" ng-model="ServiceInvoice.ServiceInvoiceType" ng-options="oItem.id as oItem.Value for oItem in ServiceInvoiceTypes" ng-change="cboServiceType()" ng-disabled="disabled">
                                            <option value="0">---Select Type---</option>
                                        </select>
                                    </div>
                                    <div class="col-md-1" style="text-align:right;">
                                        <label class="control-label">Service Date:</label>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="input-group date date-container">
                                            <input type="text" class="form-control" ng-model="ServiceInvoice.ServiceInvoiceDateSt"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                                        </div>
                                    </div>
                                    <div class="col-md-1" style="text-align:right;">
                                        <label class="control-label">Order No:</label>
                                    </div>
                                    <div class="col-md-2">
                                        <input type="text" class="form-control" ng-model="ServiceInvoice.ServiceOrderNo" placeholder="Service Order No" disabled>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-1 text-right">
                                        <label class="control-label">Reg No:</label>
                                    </div>
                                    <div class="col-md-5 text-left">
                                        <div class="input-group">
                                            <input type="text" ng-model="ServiceInvoice.VehicleRegNo" class="form-control" ng-keydown="SearchKeyDownVehicleRegistration($event)" placeholder="{{pHolderRegOrOrder}}" required />
                                            <span class="input-group-btn">
                                                <button style="margin-left:3px" type="button" class="btn btn-sm" aria-label="left Align" ng-click="ClearVehicleRegistration()"> C </button>
                                                <button style="margin-left:3px" type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PickRegOrOrder()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                                            </span>
                                        </div>
                                    </div>
                                    <div class="col-md-1 text-right">
                                        <label class="control-label" style="font-size:10px">Chassis No/VIN:</label>
                                    </div>
                                    <div class="col-md-5 text-left">
                                        <input ng-model="ServiceInvoice.ChassisNo" class="form-control" placeholder="Chassis No" disabled />
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-1 text-right">
                                        <label class="control-label">Model No:</label>
                                    </div>
                                    <div class="col-md-2 text-left">
                                        <input type="text" ng-model="ServiceInvoice.VehicleModelNo" class="form-control" placeholder="Model No" disabled />
                                    </div>
                                    <div class="col-md-1 text-right">
                                        <label class="control-label">Vehicle Type:</label>
                                    </div>
                                    <div class="col-md-2 text-left">
                                        <input type="text" ng-model="ServiceInvoice.VehicleTypeName" class="form-control" placeholder="Vehicle Type" disabled />
                                    </div>

                                    <div class="col-md-1 text-right">
                                        <label class="control-label">Engine No:</label>
                                    </div>
                                    <div class="col-md-5 text-left">
                                        <input type="text" ng-model="ServiceInvoice.EngineNo" class="form-control" placeholder="Engine No" disabled />
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-1 text-right">
                                        <label class="control-label">Customer:</label>
                                    </div>
                                    <div class="col-md-5 text-left">
                                        <div class="input-group">
                                            <input ng-model="ServiceInvoice.CustomerName" class="form-control input-group-sm" ng-disabled="disabled_OrderBy" ng-keydown="SearchKeyDownCustomer($event)" placeholder="Type Customer Name & Press Enter" required />
                                            <span class="input-group-btn">
                                                <button type="button" class="btn btn-sm" aria-label="left Align" ng-click="ClearCustomer()" ng-disabled="disabled" ng-disabled="disabled_OrderBy">
                                                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                                                </button>
                                                <span style="margin-left:0px;"></span>
                                                <button type="button" class="btn btn-sm" aria-label="left Align" ng-click="PickCustomer('')" ng-disabled="disabled_OrderBy">
                                                    <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                    <div class="col-md-1 text-right">
                                        <label class="control-label">Contact P:</label>
                                    </div>
                                    <div class="col-md-5 text-left">
                                        <div class="input-group">
                                            <select class="form-control" ng-model="ServiceInvoice.ContactPersonID" ng-options="oItem.ContactPersonnelID as oItem.Name for oItem in ContactPersonnels" ng-disabled="disabled_OrderBy">
                                                <option value="">---Select Type---</option>
                                            </select>
                                            <span class="input-group-btn">
                                                <button type="button" class="btn btn-sm" aria-label="left Align" ng-click="NewContactPerson()" ng-disabled="disabled_OrderBy">
                                                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                                </button>
                                                <button type="button" class="btn btn-sm" aria-label="left Align" ng-click="GetContactPersonel()" ng-disabled="disabled_OrderBy">
                                                    <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span>
                                                </button>
                                                <span style="margin-left:2px;"></span>

                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-1 text-right">
                                        <label class="control-label">KM Reading:</label>
                                    </div>
                                    <div class="col-md-5 text-left">
                                        <input type="text" ng-model="ServiceInvoice.KilometerReading" class="form-control" placeholder="Kilomerter Reading" ng-disabled="disabled_OrderBy" />
                                    </div>
                                    <div class="col-md-1 text-right">
                                        <label class="control-label">W. Order By:</label>
                                    </div>
                                    <div class="col-md-5 text-left">
                                        <select class="form-control" ng-model="ServiceInvoice.WorkOrderByID" ng-options="oItem.EmployeeID as oItem.Name for oItem in ServiceEmployees" ng-disabled="disabled">
                                            <option value="">---Select Type---</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-1 text-right">
                                        <label class="control-label">Currency:</label>
                                    </div>
                                    <div class="col-md-5 text-left">
                                        <select class="form-control" id="cboCurrency" ng-model="ServiceInvoice.CurrencyID" ng-options="oItem.CurrencyID as oItem.CurrencyName for oItem in Currencys" ng-disabled="disabled">
                                            <option value="">---Select Currency---</option>
                                        </select>
                                    </div>
                                    <div class="col-md-1 text-right">
                                        <label class="control-label">Cust. Remarks:</label>
                                    </div>
                                    @*<div class="col-md-5 text-left">
                            <input ng-model="ServiceInvoice.Remarks" class="form-control" placeholder=" Remarks / Notes" />
                        </div>*@
                                    <div class="col-md-2">
                                        <input type="text" ng-model="ServiceInvoice.CustomerRemarks" style="width: 70%" class="form-control" placeholder=" Customer Remarks" />
                                    </div>
                                    <div class="col-md-1" style="text-align:right;">
                                        <label class="control-label">Office Remarks:</label>
                                    </div>
                                    <div class="col-md-2">
                                        <input type="text" ng-model="ServiceInvoice.OfficeRemarks" class="form-control" placeholder=" Office Remarks" />
                                    </div>
                                </div>
                            </fieldset>
                        @*-----------WORK----------------*@
                        <div style="height:310px; width:100%; overflow:scroll">
                            <div>
                                <p style="text-decoration:underline; text-align:left; font-weight:bold; font-size:13px; margin-bottom:-.3px">Product/Parts Details: </p>
                                <div class="ui-grid-panel col-md-12" style="text-align:left; width:100%">
                                    <div class="form-inline" style="margin-left:5px">
                                        <input ng-model="txtParts" placeholder="Type Name/Code & Enter" ng-keydown="SearchKeyDownParts($event)" style="width:150px;" required />
                                        <button type="button" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="PickParts()"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                                        <select style="width:80px;height:22px;" ng-model="MUnitID" ng-options="oItem.MeasurementUnitID as oItem.UnitName for oItem in MUnits" ng-disabled="disabled">
                                            <option value="">---M.Unit---</option>
                                        </select>
                                        <input type="text" ng-model="txtPartsNo" placeholder="Type Part No" style="width:120px;" required />
                                        <div class="input-group date date-container" style="width:105px">
                                            <input type="text" class="form-control" ng-model="txtDateDetail"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                                        </div>
                                        <select style="width:100px;height:22px;" ng-model="LaborChargeType_Work" ng-options="oItem.id as oItem.Value for oItem in PartsChargeTypes" ng-disabled="disabled">
                                            <option value="">--Charge Type--</option>
                                        </select>
                                        <input type="text" id="PQty" ng-model="txtPartsQty" placeholder="Type Qty.." style="width:70px;" required />
                                        <input type="text" id="PUP" ng-model="txtPartsUP" placeholder="Type Unit Price.." style="width:78px;" required />
                                        <button type="button" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="AddParts()"><span class="glyphicon glyphicon-ok" aria-hidden="true"> Add</span></button>
                                        <button type="button" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="RefreshDetail()"><span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                                        <button type="button" class="btn btn-danger btn-sm" aria-label="right Align" ng-click="RemoveDetail(1)"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Remove</span></button>
                                    </div>
                                </div>
                                <div style="height:200px; width:99.5%" class="col-md-12" ui-grid="gridSIDetail" ui-grid-selection ui-grid-edit></div>
                            </div>
                            <div>
                                <p class="text-left" style="text-decoration:underline; text-align:left; font-size:13px; font-weight:bold; margin-bottom:-.3px">Labor Charge: </p>
                                <div class="ui-grid-panel col-md-12" style="text-align:left; width:100%">
                                    <input type="text" ng-model="txtLaborCharge" placeholder="Type Labor Charge & Press Enter" ng-keydown="SearchKeyLC($event)" style="width:160px; height:22px;" required />
                                    <select style="width:120px;height:22px;" ng-model="LaborChargeType" ng-options="oItem.id as oItem.Value for oItem in LaborChargeTypes" ng-disabled="disabled">
                                        <option value="">--Charge Type--</option>
                                    </select>
                                    <input type="text" ng-model="txtChargeDescription" placeholder="Write Charge Description.." style="width:240px; height:22px;" required />
                                    <input type="text" id="PQty" ng-model="txtWorkingHour" placeholder="Type Hour.." style="width:80px;" required />
                                    <input type="text" id="PUP" ng-model="txtWorkingCost" placeholder="Type Price/Hour.." style="width:88px;" required />
                                    <button type="button" class="btn btn-primary btn-xs" aria-label="right Align" ng-click="AddService(2)"><span class="glyphicon glyphicon-ok" aria-hidden="true"> Add</span></button>
                                    <button type="button" class="btn btn-primary btn-xs" aria-label="right Align" ng-click="RefreshDetail(2)"><span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                                    <button type="button" class="btn btn-danger btn-xs" aria-label="right Align" ng-click="RemoveDetail(2)"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Remove</span></button>

                                </div>
                                <div style="height:200px; width:99.5%" class="col-md-12" ui-grid="gridSILCDetail" ui-grid-selection ui-grid-edit></div>
                            </div>

                            <div class="col-md-12">
                                <div class="col-md-1 text-right"></div>
                                <div class="col-md-1 text-left"></div>
                                <div class="col-md-5 text-right">
                                    <label class="control-label" style="font-size:12px">Total Amount:</label>
                                </div>
                                <div class="col-md-5 text-left">
                                    <input ng-model="ServiceInvoice.NetAmount_Total" class="form-control text-right number|2" style="height:25px;" disabled />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-1 text-right"></div>
                                <div class="col-md-1 text-left"></div>
                                <div class="col-md-5 text-right">
                                    <label class="control-label" style="font-size:12px">Discount From Parts:</label>
                                </div>
                                <div class="col-md-5 text-left">
                                    <div class="col-md-2 text-left" style="margin-left:-2px">
                                        <input type="text"  id="DisPercent_Parts" ng-model="ServiceInvoice.DiscountRate_Parts" class="form-control  text-right" ng-change="ChangeDiscount_Parts(1)" style="height:25px;" ng-disabled="disabled" />
                                    </div>
                                    <div class="col-md-10 text-left" style="width:84%">
                                        <input type="text" id="DisAmount_Parts" ng-model="ServiceInvoice.DiscountAmount_Parts" class="form-control  text-right " ng-change="ChangeDiscount_Parts(2)" style="height:25px;width:105%" ng-disabled="disabled" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-1 text-right"></div>
                                <div class="col-md-1 text-left"></div>
                                <div class="col-md-5 text-right">
                                    <label class="control-label" style="font-size:12px">Vat On Parts Charge:</label>
                                </div>
                                <div class="col-md-5 text-left">
                                    <div class="col-md-2 text-left" style="margin-left:-2px">
                                        <input type="text"  ng-model="ServiceInvoice.PartsCharge_Vat" class="form-control  text-right" ng-change="ChangePartsVat(1)" style="height:25px;" ng-disabled="disabled" />
                                    </div>
                                    <div class="col-md-10 text-left" style="width:84%">
                                        <input type="text" ng-model="ServiceInvoice.PartsCharge_VatAmount" class="form-control  text-right |number:2" ng-change="ChangePartsVat(2)" style="height:25px;width:105%" ng-disabled="disabled" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-1 text-right"></div>
                                <div class="col-md-1 text-left"></div>
                                <div class="col-md-5 text-right">
                                    <label class="control-label" style="font-size:12px">Net Parts Charge:</label>
                                </div>
                                <div class="col-md-5 text-left">
                                    <input type="text" ng-model="ServiceInvoice.PartsCharge_Net" class="form-control  text-right |number:2" style="height:25px;" disabled />
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="col-md-1 text-right"></div>
                                <div class="col-md-1 text-left"></div>
                                <div class="col-md-5 text-right">
                                    <label class="control-label" style="font-size:12px">Discount From Labor Charge:</label>
                                </div>
                                <div class="col-md-5 text-left">
                                    <div class="col-md-2 text-left" style="margin-left:-2px">
                                        <input type="text"  id="DisPercent" ng-model="ServiceInvoice.LaborCharge_DiscountPercent" class="form-control  text-right" ng-change="ChangeDiscount(1)" style="height:25px;" ng-disabled="disabled" />
                                    </div>
                                    <div class="col-md-10 text-left" style="width:84%">
                                        <input type="text" id="DisAmount" ng-model="ServiceInvoice.LaborCharge_Discount" class="form-control  text-right " ng-change="ChangeDiscount(2)" style="height:25px;width:105%" ng-disabled="disabled" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-1 text-right"></div>
                                <div class="col-md-1 text-left"></div>
                                <div class="col-md-5 text-right">
                                    <label class="control-label" style="font-size:12px">Vat On Labor Charge:</label>
                                </div>
                                <div class="col-md-5 text-left">
                                    <div class="col-md-2 text-left" style="margin-left:-2px">
                                        <input type="text" id="VatPercent" ng-model="ServiceInvoice.LaborCharge_Vat" class="form-control  text-right" ng-change="ChangeVat(1)" style="height:25px;" ng-disabled="disabled" />
                                    </div>
                                    <div class="col-md-10 text-left" style="width:84%">
                                        <input type="text" id="VatAmount" ng-model="ServiceInvoice.LaborCharge_VatAmount" class="form-control  text-right |number:2" ng-change="ChangeVat(2)" style="height:25px;width:105%" ng-disabled="disabled" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-1 text-right"></div>
                                <div class="col-md-1 text-left"></div>
                                <div class="col-md-5 text-right">
                                    <label class="control-label" style="font-size:12px">Net Labor Charge:</label>
                                </div>
                                <div class="col-md-5 text-left">
                                    <input type="text" ng-model="ServiceInvoice.LaborCharge_Net" class="form-control  text-right |number:2" style="height:25px;" disabled />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-1 text-right"></div>
                                <div class="col-md-1 text-left"></div>
                                <div class="col-md-5 text-right">
                                    <label class="control-label" style="font-size:12px">Net Payable Amount:</label>
                                </div>
                                <div class="col-md-5 text-left">
                                    <input type="text" ng-model="ServiceInvoice.NetAmount_Payble" class="form-control  text-right |number:2" style="height:25px;" disabled />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div ng-show="SODC.IsSet(2)" id="divTC">
                    <div class="ui-grid-top-panel" style="text-align:left;">
                        <button type="button" id="btnAddTermsAndConditon" class="btn btn-default btn-sm" aria-label="right Align" ng-click="AddTermsAndCondition()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Terms And Condition</span></button>
                        <button type="button" id="btnRemoveTermsAndCondition" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RemoveTermsAndCondition()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Remove</span></button>
                        <button type="button" id="btnRefreshTermsAndCondition" class="btn btn-default btn-sm" aria-label="right Align" ng-click="RefreshTermsAndCondition()"><span class="glyphicon glyphicon-refresh" aria-hidden="true"> Refresh</span></button>
                    </div>
                    <div style="width:1000px; height:450px;" ui-grid="gridOptionsTermsAndCondition" ui-grid-selection ui-grid-edit ui-grid-row-edit ui-grid-cellnav></div>
                </div>
            </section>
        </div>
        @*----ACTION-----*@
        <div class="row" style="width:100%; height:6%">
            <fieldset style="height:54px; margin:10px 0 0 20px">
                <legend>Action</legend>
                <div class="row col-md-12 text-right">
                    <button type="button" class="btn btn-success btn-xs" aria-label="Left Align" ng-hide="btnSave" ng-click="Save()"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> <label id="lblSave">Save</label></span> </button>
                    <button type="button" class="btn btn-success btn-xs" aria-label="Left Align" ng-hide="btnRevise" ng-click="Revise()"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"> Revise</span> </button>
                    <button type="button" id="btnclose" class="btn btn-danger btn-xs" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
                </div>
            </fieldset>
        </div>
    </div>
</body>
</html>
<style type="text/css">
    .regionVR .form-horizontal .control-label {
        padding-top: 1px;
    }

    .regionVR .form-control {
        height: 22px;
        padding: 0px 6px;
        font-size: 12px;
    }
    .regionVR regionVROT .form-control {
        height: 10px;
        padding: 0px 6px;
        font-size: 12px;
    }
    .regionVR .col-md-12 {
        width: 100%;
        padding-right: 2px;
        padding-left: 1px;
        margin-bottom: 3px;
    }
    .regionVR .col-md-11 {
        width: 91.66%;
        padding-right: 5px;
        padding-left: 5px;
        margin-bottom: 3px;
    }
    .regionVR .col-md-7 {
        width: 58.33%;
        padding-right: 5px;
        padding-left: 5px;
    }
    .regionVR .col-md-2 {
        width: 16%;
        padding-right: 2px;
        padding-left: 2px;
    }
    .regionVR .col-md-1 {
        width: 8.8%;
        padding-right: 2px;
        padding-left: 2px;
    }
     .regionVR .col-md-4 {
        width: 33.33%;
        padding-right: 5px;
        padding-left: 5px;
    }
    
    .regionVR .col-md-6 {
        width: 50%;
        padding-right: 5px;
        padding-left: 5px;
    }
 
    .regionVR .col-md-5 {
        width: 41%;
        padding-right: 2px;
        padding-left: 2px;
    }
     .regionVR .col-md-3 {
        width: 25%;
        padding-right:3px;
        padding-left:3px;
    }
     
    .regionVR .btn-sm {
        padding: 2px 8px;
    }

    .regionVR .input-group-addon {
        padding: 2px 5px;
    }
    .ui-grid-top-panel {
        background: linear-gradient(to bottom,#EFF5FF 0,#E0ECFF 100%);
    } 
    .ui-grid-panel {
        background: linear-gradient(to bottom,#EFF5FF 0,#E0ECFF 100%);
    }
</style>
<script type="text/javascript">
    var oServiceInvoice =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oServiceEmployees = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ServiceEmployees));
    var oServiceInvoiceTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ServiceInvoiceTypes));
    var oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CurrencyList));
    var oMUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.MUnits));
    var oLaborChargeTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LaborChargeTypes));
    var oPartsChargeTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.PartsChargeTypes));
    var nInvoiceType = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.InvoiceType));

    $('#PQty').icsCurrencyBox();
    $('#PUP').icsCurrencyBox();
    $('#DisAmount').icsCurrencyBox();
    $('#DisPercent').icsCurrencyBox();
    $('#VatAmount').icsCurrencyBox();
    $('#VatPercent').icsCurrencyBox();
    $('#CAmount').icsCurrencyBox();

    var ServiceInvoiceApp = angular.module('ServiceInvoiceApp', ['ngAnimate', 'ui.bootstrap','ui.grid', 'ui.grid.selection','ui.grid.rowEdit', 'ui.grid.edit', 'ms.service','chassis.service','engine.service']);
    ServiceInvoiceApp.controller('ServiceInvoiceController', function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession,icsMethod,msGridControl, chassisservice, engineservice) {

        $('#txtRcvDate').datetimebox('setValue', icsdatetimeformat(new Date(oServiceInvoice.RcvDateTimeSt)));
        $('#txtDelDate').datetimebox('setValue', icsdatetimeformat(new Date(oServiceInvoice.DelDateTimeSt)));

        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });

        $scope.btnSave = false;
        $scope.btnRevise = false;
        if(sessionStorage.getItem("ServiceInvoiceHeader") == "Revise Service Invoice") {
            $scope.btnSave = true;
        }
        else {
            $scope.btnRevise = true;
        }


        $scope.ServiceInvoice=oServiceInvoice;
        //$scope.lblRegOrOrder="Reg. No:";
        if($scope.ServiceInvoice.ServiceInvoiceID<=0)
            $scope.pHolderRegOrOrder="Type Reg/Model/Chassis No And Press Enter..";
        else
            $scope.pHolderRegOrOrder= $scope.ServiceInvoice.VehicleRegNo;

        if($scope.ServiceInvoice.ServiceInvoiceType==2)
        {
            $scope.disabled_OrderBy=true;
        }
        

        $scope.ServiceInvoice.BUID=sessionStorage.getItem('BUID');
        $scope.ServiceInvoice.InvoiceTypeInt = nInvoiceType;
        $scope.ServiceInvoiceDetails=oServiceInvoice.ServiceInvoiceDetails;
        $scope.ServiceILaborChargeDetails=oServiceInvoice.ServiceILaborChargeDetails;
        $scope.ServiceInvoiceTermsList = oServiceInvoice.ServiceInvoiceTermsList;
        $scope.ServiceInvoiceTypes = oServiceInvoiceTypes;
        $scope.ServiceEmployees=oServiceEmployees;
        $scope.Currencys=oCurrencys;
        $scope.MUnits=oMUnits;
        $scope.LaborChargeTypes=oLaborChargeTypes;
        $scope.PartsChargeTypes=oPartsChargeTypes;
        $scope.CurrencySymbol="";
        $scope.txtWorkingHour = 0;
        $scope.txtWorkingCost = 0;
        debugger;
        //$scope.txtDateDetail= new Date();
        if($scope.ServiceInvoice.InvoiceTypeInt==0)
        {
            //
            $('#liTC').hide();//hide List
            $('#divTC').hide();//hide TC
        }
        $scope.cboServiceType= function()
        {
            debugger;
            $scope.ServiceInvoice.VehicleRegistrationID=0;
            $scope.ServiceInvoice.VehicleRegNo="";
            $scope.ServiceInvoice.VehicleOrderID=0;
            $scope.ServiceInvoice.VehicleOrderNo="";
            //if($scope.ServiceInvoice.ServiceInvoiceType==2)
            //{
            //    $scope.lblRegOrOrder="Order No:";
            //    $scope.pHolderRegOrOrder="Type Order No And Press Enter..";
            //    $scope.disabled_OrderBy=true;
            //}else
            //{
            //    $scope.lblRegOrOrder="Reg No:";
            //    $scope.pHolderRegOrOrder="Type Reg No And Press Enter..";
            //    $scope.disabled_OrderBy=false;
            //}
        }
        //$scope.cboServiceType();
        //SetTotal
        $scope.GetGridTotal=function(oGriddata,sProperty)
        {
            var nTotal = 0;
            if(oGriddata.length>0)
            {
                for(var i =0;i<oGriddata.length;i++)
                {
                    nTotal+= parseFloat(oGriddata[i][sProperty],0);
                }
            }
            return nTotal;
        }
        $scope.SetTotal= function(nSet)
        {
            debugger;
            $scope.ServiceInvoice.NetAmount_Parts=$scope.GetGridTotal($scope.gridSIDetail.data,'Amount');
            $scope.ServiceInvoice.LaborCharge_Total=$scope.GetGridTotal($scope.gridSILCDetail.data,'ChargeAmount');
            $scope.ServiceInvoice.NetAmount_Total=(parseFloat($scope.ServiceInvoice.NetAmount_Parts)+ parseFloat($scope.ServiceInvoice.LaborCharge_Total)).toFixed(2);

            if(nSet==1)
            {
                if($scope.ServiceInvoice.LaborCharge_Total!=0)
                    $scope.ServiceInvoice.LaborCharge_DiscountPercent= (($scope.ServiceInvoice.LaborCharge_Discount/$scope.ServiceInvoice.LaborCharge_Total)*100).toFixed(2);
                if($scope.ServiceInvoice.DiscountAmount_Parts!=0)
                    $scope.ServiceInvoice.DiscountRate_Parts= (($scope.ServiceInvoice.DiscountAmount_Parts/$scope.ServiceInvoice.NetAmount_Parts)*100).toFixed(2);

                $scope.ServiceInvoice.LaborCharge_VatAmount= ((parseFloat($scope.ServiceInvoice.LaborCharge_Total)-parseFloat($scope.ServiceInvoice.LaborCharge_Discount))*($scope.ServiceInvoice.LaborCharge_Vat/100)).toFixed(2);
                $scope.ServiceInvoice.PartsCharge_VatAmount= ((parseFloat($scope.ServiceInvoice.NetAmount_Parts)-parseFloat($scope.ServiceInvoice.DiscountAmount_Parts))*($scope.ServiceInvoice.PartsCharge_Vat/100)).toFixed(2);
            }

            $scope.ServiceInvoice.PartsCharge_Net= (parseFloat($scope.ServiceInvoice.NetAmount_Parts)- parseFloat($scope.ServiceInvoice.DiscountAmount_Parts)+ parseFloat($scope.ServiceInvoice.PartsCharge_VatAmount)).toFixed(2);
            $scope.ServiceInvoice.LaborCharge_Net= (parseFloat($scope.ServiceInvoice.LaborCharge_Total)- parseFloat($scope.ServiceInvoice.LaborCharge_Discount)+ parseFloat($scope.ServiceInvoice.LaborCharge_VatAmount)).toFixed(2);
            //$scope.ServiceInvoice.NetAmount_Payble= (parseFloat($scope.ServiceInvoice.NetAmount_Parts) + parseFloat($scope.ServiceInvoice.LaborCharge_Net)
            //                                        - ( isNaN(parseFloat($scope.ServiceInvoice.DiscountAmount_Parts))?0 : parseFloat($scope.ServiceInvoice.DiscountAmount_Parts)) ).toFixed(2);

            $scope.ServiceInvoice.NetAmount_Payble= (parseFloat($scope.ServiceInvoice.PartsCharge_Net) + parseFloat($scope.ServiceInvoice.LaborCharge_Net)).toFixed(2);
        }
        $scope.ChangeDiscount= function(nSet)
        {
            debugger;
            if(isNaN(parseFloat($scope.ServiceInvoice.LaborCharge_Discount)))$scope.ServiceInvoice.LaborCharge_Discount=0;
            if(isNaN(parseFloat($scope.ServiceInvoice.LaborCharge_DiscountPercent)))$scope.ServiceInvoice.LaborCharge_DiscountPercent=0;

            if(nSet==1)
                $scope.ServiceInvoice.LaborCharge_Discount= parseFloat($scope.ServiceInvoice.LaborCharge_Total*($scope.ServiceInvoice.LaborCharge_DiscountPercent/100)).toFixed(2);
            else if(nSet==2 && $scope.ServiceInvoice.LaborCharge_Total!=0)
                $scope.ServiceInvoice.LaborCharge_DiscountPercent= (($scope.ServiceInvoice.LaborCharge_Discount/$scope.ServiceInvoice.LaborCharge_Total)*100).toFixed(2);

            $scope.ChangeVat(nSet);
            $scope.SetTotal(2);
        }
        $scope.ChangeDiscount_Parts= function(nSet)
        {
            debugger;
            if(isNaN(parseFloat($scope.ServiceInvoice.DiscountAmount_Parts)))$scope.ServiceInvoice.DiscountAmount_Parts=0;
            if(isNaN(parseFloat($scope.ServiceInvoice.DiscountRate_Parts)))$scope.ServiceInvoice.DiscountRate_Parts=0;

            if(nSet==1)
                $scope.ServiceInvoice.DiscountAmount_Parts= parseFloat($scope.ServiceInvoice.NetAmount_Parts*($scope.ServiceInvoice.DiscountRate_Parts/100)).toFixed(2);
            else if(nSet==2 && $scope.ServiceInvoice.DiscountAmount_Parts!=0)
                $scope.ServiceInvoice.DiscountRate_Parts= (($scope.ServiceInvoice.DiscountAmount_Parts/$scope.ServiceInvoice.NetAmount_Parts)*100).toFixed(2);

            //$scope.ChangeVat(nSet);
            $scope.SetTotal(2);
        }
        $scope.ChangeVat= function(nSet)
        {
            debugger;

            if(isNaN(parseFloat($scope.ServiceInvoice.LaborCharge_VatAmount)))$scope.ServiceInvoice.LaborCharge_VatAmount=0;
            if(isNaN(parseFloat($scope.ServiceInvoice.LaborCharge_Vat)))$scope.ServiceInvoice.LaborCharge_Vat=0;

            $scope.ServiceInvoice.LaborCharge_Total=$scope.GetGridTotal($scope.gridSILCDetail.data,'ChargeAmount');
            if(parseFloat($scope.ServiceInvoice.LaborCharge_Total)>0)
            {
                if(nSet==1)
                    $scope.ServiceInvoice.LaborCharge_VatAmount= ((parseFloat($scope.ServiceInvoice.LaborCharge_Total)-parseFloat($scope.ServiceInvoice.LaborCharge_Discount))*($scope.ServiceInvoice.LaborCharge_Vat/100)).toFixed(2);
                else if(nSet==2 && $scope.ServiceInvoice.LaborCharge_Total!=0)
                    $scope.ServiceInvoice.LaborCharge_Vat= (($scope.ServiceInvoice.LaborCharge_VatAmount/(parseFloat($scope.ServiceInvoice.LaborCharge_Total)-parseFloat($scope.ServiceInvoice.LaborCharge_Discount)))*100).toFixed(2);
            }else
            {
                $scope.ServiceInvoice.LaborCharge_Discount=$scope.ServiceInvoice.LaborCharge_Vat=$scope.ServiceInvoice.LaborCharge_VatAmount=0;
            }

            $scope.SetTotal(2);
        }
        

        $scope.ChangePartsVat= function(nSet)
        {
            debugger;

            if(isNaN(parseFloat($scope.ServiceInvoice.PartsCharge_VatAmount)))$scope.ServiceInvoice.PartsCharge_VatAmount=0;
            if(isNaN(parseFloat($scope.ServiceInvoice.PartsCharge_Vat)))$scope.ServiceInvoice.PartsCharge_Vat=0;

            $scope.ServiceInvoice.NetAmount_Parts = $scope.GetGridTotal($scope.gridSIDetail.data,'Amount');
            if(parseFloat($scope.ServiceInvoice.NetAmount_Parts)>0)
            {
                if(nSet==1)
                    $scope.ServiceInvoice.PartsCharge_VatAmount= ((parseFloat($scope.ServiceInvoice.NetAmount_Parts)-parseFloat($scope.ServiceInvoice.DiscountAmount_Parts))*($scope.ServiceInvoice.PartsCharge_Vat/100)).toFixed(2);
                else if(nSet==2 && $scope.ServiceInvoice.NetAmount_Parts !=0)
                    $scope.ServiceInvoice.PartsCharge_Vat= (($scope.ServiceInvoice.PartsCharge_VatAmount/(parseFloat($scope.ServiceInvoice.NetAmount_Parts)-parseFloat($scope.ServiceInvoice.DiscountAmount_Parts)))*100).toFixed(2);
            }else
            {
                $scope.ServiceInvoice.DiscountAmount_Parts=$scope.ServiceInvoice.PartsCharge_Vat=$scope.ServiceInvoice.PartsCharge_VatAmount=0;
            }

            $scope.SetTotal(2);
        }

        //Customer
        $scope.SearchKeyDownCustomer = function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var CustomerName = $.trim($scope.ServiceInvoice.CustomerName);
                if (CustomerName == "" || CustomerName == null) {
                    alert("Type Customer Name and Press Enter");
                    return;
                }
                $scope.PickCustomer(CustomerName);
            } else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.ServiceInvoice.CustomerName = '';
                $scope.ServiceInvoice.Customer = 0;
            }
        };
        $scope.PickCustomer = function (CustomerName) {
            debugger;
            var oContractor = {
                Params: '2' + '~' + CustomerName + '~' + 0
            };
            $.icsProgressBar(true);
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress') + '/Contractor/ContractorSearchByNameType', $.param(oContractor), config).then(
                                function (response) {
                                    debugger;
                                    $.icsProgressBar(false);
                                    var oColumns = [];
                                    var oColumn = { field: 'ContractorID', name: 'Code', width: '20%' }; oColumns.push(oColumn);
                                    oColumn = { field: 'Name', name: 'Customer Name', width: '50%', enableSorting: false }; oColumns.push(oColumn);
                                    oColumn = { field: 'Address', name: 'Address', width: '30%', enableSorting: false }; oColumns.push(oColumn);
                                    var results = response.data;
                                    var modalObj = {
                                        size: 'md',
                                        modalcontroller: 'ModalCc',
                                        appcontroller: 'CCategoryController',
                                        objs: results,
                                        multiSelect: false,
                                        pickertitle: 'Customer List',
                                        searchingbyfieldName: 'Name',
                                        columns: oColumns
                                    }
                                    var modalInstance = msModal.Instance(modalObj);
                                    modalInstance.result.then(function (result) {
                                        debugger;
                                        $scope.ServiceInvoice.CustomerID = result.ContractorID;
                                        $scope.GetContactPersonel();
                                        $scope.ServiceInvoice.CustomerName = result.Name;

                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message); }
                            );
        };
        $scope.ClearCustomer = function () {
            debugger;
            $scope.ContactPersonnels = [];
            $scope.ServiceInvoice.CustomerName = "";
            $scope.ServiceInvoice.CustomerID = 0;
        };
        //ContactPerson
        $scope.GetContactPersonel = function ()
        {
            $scope.ContactPersonnels = [];
            debugger;
            var oContractor = {
                ContractorID: $scope.ServiceInvoice.CustomerID
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress') + '/Contractor/GetContactPersonnels', $.param(oContractor), config).then(
                                function (response) {
                                    debugger;
                                    result = JSON.parse(response.data);
                                    $scope.ContactPersonnels = result;
                                }, function () {
                                    $log.info('GetVehicleInvoiceDetails Dismissed at: ' + new Date());
                                });
        }
        $scope.GetContactPersonel();
        $scope.NewContactPerson= function NewContactPerson(nConType)
        {
            if($scope.ServiceInvoice.CustomerID<=0)
            {
                alert("Please Pick A Customer And Try Again!");
                return;
            }
            sessionStorage.setItem("ContractorBackTo", "");
            sessionStorage.setItem("SelectedRowIndex", 0);
            sessionStorage.setItem("ContractorHeader", "Add Contact Personnel");
            window.open(_sBaseAddress+"/Contractor/ViewContactPersonnel?id="+$scope.ServiceInvoice.CustomerID,"_blank");
        }
        //Grid
        $scope.MakeServiceInvoiceDetail= function()
        {
            var oDetailColumns = [];
            var oColumn = { field: 'PartsCode', name:'Code', width:'10%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn ={ field: 'PartsName', name:'Name', width:'14%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn ={ field: 'PartsNo', name:'Part No', width:'14%',cellClass: 'text-left',enableCellEdit:true };oDetailColumns.push(oColumn);
            oColumn ={ field: 'WorkDateSt', name:'W. Date', width:'10%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn ={ field: 'WorkChargeTypeSt', name: 'Charge Type', width: '10%', cellClass: 'text-center',enableSorting: true ,enableCellEdit:false};oDetailColumns.push(oColumn);
            oColumn ={ field: 'MUName', name:'M.Unit', width:'8%',cellClass: 'text-left',enableCellEdit:true };oDetailColumns.push(oColumn);
            oColumn ={ field: 'Qty', name:'Qty', width:'8%',cellClass: 'number|2',enableCellEdit:true,aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' };oDetailColumns.push(oColumn);
            oColumn ={ field: 'UnitPrice', name:'Unit Price', width:'8%',cellClass: 'number|2',enableCellEdit:true };oDetailColumns.push(oColumn);
            oColumn ={ field: 'Amount', name:'Amount', width:'10%',cellClass: 'number|2',enableCellEdit:true,aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' };oDetailColumns.push(oColumn);
            oColumn ={ field: 'Remarks', name: 'Note', width: '12%', cellClass: 'text-center',enableSorting: false ,enableCellEdit:true};oDetailColumns.push(oColumn);

            $scope.gridSIDetail = {
                showColumnFooter: true,
                multiSelect: false,
                enableFullRowSelection: true,
                enableSelectAll: false,
                columnDefs:oDetailColumns,
                data:$scope.ServiceInvoiceDetails,
                onRegisterApi: function (gridApi) {
                    $scope.gridSIDetailApi = gridApi;
                    gridApi.edit.on.afterCellEdit($scope,
                     function (rowEntity, colDef, newValue, oldValue)
                     {
                         if(rowEntity.WorkChargeType==2 && rowEntity.UnitPrice!=0)
                         {
                             rowEntity.UnitPrice=0;
                             alert("Sorry, Unit Price Is Not Applicable!"); rowEntity.Amount=0; return rowEntity;
                         }
                         rowEntity.Amount=parseFloat(rowEntity.Qty*rowEntity.UnitPrice);
                         $scope.SetTotal(1);
                         return rowEntity;
                     });
                }
            };


            var oDetailColumns = [];
            var oColumn = { field: 'ServiceCode', name:'Code', width:'12%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn ={ field: 'ServiceName', name:'Labor Charge Head', width:'25%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
            oColumn ={ field: 'LaborChargeTypeSt', name: 'Charge Type', width: '10%', cellClass: 'text-center',enableSorting: true ,enableCellEdit:false};oDetailColumns.push(oColumn);
            oColumn ={ field: 'ChargeDescription', name: 'Description', width: '15%', cellClass: 'text-center',enableSorting: true ,enableCellEdit:true};oDetailColumns.push(oColumn);
            oColumn ={ field: 'WorkingHour', name:'Hour', width:'8%',cellClass: 'number|2',enableCellEdit:true,aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' };oDetailColumns.push(oColumn);
            oColumn ={ field: 'WorkingCost', name:'Cost/Hour', width:'8%',cellClass: 'number|2',enableCellEdit:true };oDetailColumns.push(oColumn);
            oColumn ={ field: 'ChargeAmount', name: 'Amount', width: '12%', cellClass: 'text-right number|2',enableSorting: true,aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' };oDetailColumns.push(oColumn);

            $scope.gridSILCDetail = {
                showColumnFooter: true,
                multiSelect: false,
                enableFullRowSelection: true,
                enableSelectAll: false,
                columnDefs:oDetailColumns,
                data:$scope.ServiceILaborChargeDetails,
                onRegisterApi: function (gridApi) {
                    $scope.gridSILCDetailApi = gridApi;
                    gridApi.edit.on.afterCellEdit($scope,
                     function (rowEntity, colDef, newValue, oldValue)
                     {
                         debugger;
                         // rowEntity.IsAuthorized = $scope.AuthorizedList.filter(function(obj){return obj.Authorize== rowEntity.Authorize;})[0].IsAuthorized;
                         if(rowEntity.LaborChargeType==2)
                         {
                             rowEntity.WorkingHour=0; rowEntity.WorkingCost=0; rowEntity.ChargeAmount=0;
                             alert("Sorry, Charge Amount Is Not Applicable!"); $scope.txtChargeAmount=""; return rowEntity;
                         }

                         if(colDef.field=='ChargeAmount')
                         {
                             rowEntity.WorkingHour=0; rowEntity.WorkingCost=0;
                         }
                         else {
                             var nCAmount=parseFloat(rowEntity.WorkingHour*rowEntity.WorkingCost);
                             rowEntity.ChargeAmount= isNaN(nCAmount)?0 : nCAmount;
                         }

                         $scope.SetTotal(1);
                         return rowEntity;
                     });
                }
            };
        }
        $scope.MakeServiceInvoiceDetail();
        //Vechile Reg Or Service Order
        $scope.PickRegOrOrder=function()
        {
            if($scope.ServiceInvoice.ServiceInvoiceType==undefined ||$scope.ServiceInvoice.ServiceInvoiceType<=0)
            {
                alert("Please Select Invoice Type"); return;
            }

            if($scope.ServiceInvoice.ServiceInvoiceType==2)
            {
                $scope.PickServiceOrder();
            }
            else
                $scope.PickVehicleRegistration();
        }
        $scope.PickVehicleRegistration= function ()
        {
            debugger;
            var oVehicleModel = {
                VehicleRegNo: $.trim($scope.ServiceInvoice.VehicleRegNo)
            };
            $.icsProgressBar(true);
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/VehicleRegistration/GetsByNo',$.param(oVehicleModel), config).then(
                        function (response)
                        {
                            debugger;
                            $.icsProgressBar(false);
                            var oColumns = [];
                            var oColumn = { field: 'VehicleRegNo', name: 'Code/Ref No',width: '28%'  };oColumns.push(oColumn);
                            oColumn = { field: 'VehicleModelNo', name: 'Model No',width: '15%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'CustomerName', name: 'Customer',width: '30%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'VehicleTypeName', name: 'Type',width: '25%', enableSorting: false  };oColumns.push(oColumn);
                            var results=jQuery.parseJSON(response.data);
                            var modalObj={
                                size:'lg',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Invoice List',
                                searchingbyfieldName:'VehicleRegNo',
                                columns:oColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                debugger;
                                $scope.ServiceInvoice.VehicleRegNo=result.VehicleRegNo;
                                $scope.ServiceInvoice.VehicleModelNo=result.VehicleModelNo;
                                $scope.ServiceInvoice.VehicleRegistrationID=result.VehicleRegistrationID;
                                $scope.ServiceInvoice.ChassisNo=result.ChassisNo;
                                $scope.ServiceInvoice.EngineNo=result.EngineNo;
                                $scope.ServiceInvoice.CustomerID=result.CustomerID;
                                $scope.ServiceInvoice.CustomerName=result.CustomerName;
                                $scope.GetContactPersonel();
                                $scope.ServiceInvoice.ContactPersonID=result.ContactPersonID;

                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { debugger; alert(response.statusText);}
                    );

        };
        $scope.PickServiceOrder= function ()
        {
            debugger;
            var oServiceOrder = {
                ServiceOrderNo: $.trim($scope.ServiceInvoice.VehicleRegNo)
            };
            $.icsProgressBar(true);
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/ServiceOrder/GetsByRegOrOrderNo',$.param(oServiceOrder), config).then(
                        function (response)
                        {
                            debugger;
                            $.icsProgressBar(false);
                            var oColumns = [];
                            var oColumn = { field: 'ServiceOrderNo', name: 'Order No',width: '10%'  };oColumns.push(oColumn);
                            oColumn = { field: 'IssueDateSt', name: 'Issue Date',width: '13%'  };oColumns.push(oColumn);
                            oColumn = { field: 'VehicleRegNo', name: 'Code/Ref No',width: '27%'  };oColumns.push(oColumn);
                            oColumn = { field: 'VehicleModelNo', name: 'Model No',width: '13%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'CustomerName', name: 'Customer',width: '35%', enableSorting: false  };oColumns.push(oColumn);
                            var results=jQuery.parseJSON(response.data);
                            var modalObj={
                                size:'lg',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Order List',
                                searchingbyfieldName:'ServiceOrderNo',
                                columns:oColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                debugger;
                                //$scope.lblRegOrOrder="Reg No:";
                                $scope.ServiceInvoice.VehicleRegNo=result.VehicleRegNo;
                                $scope.ServiceInvoice.ServiceOrderID=result.ServiceOrderID;
                                $scope.ServiceInvoice.ServiceOrderNo=result.ServiceOrderNo;
                                $scope.ServiceInvoice.VehicleModelNo=result.VehicleModelNo;
                                $scope.ServiceInvoice.VehicleRegistrationID=result.VehicleRegistrationID;
                                $scope.ServiceInvoice.ChassisNo=result.ChassisNo;
                                $scope.ServiceInvoice.EngineNo=result.EngineNo;
                                $scope.ServiceInvoice.CustomerID=result.CustomerID;
                                $scope.ServiceInvoice.ContactPersonID=result.ContactPersonID;
                                $scope.ServiceInvoice.CustomerName=result.CustomerName;
                                $scope.ServiceInvoice.KilometerReading=result.KilometerReading;
                                $scope.GetContactPersonel();
                                $scope.ServiceInvoice.ContactPersonID=result.ContactPersonID;

                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );

        };
        $scope.SearchKeyDownVehicleRegistration = function (e) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var RefNo = $.trim($scope.ServiceInvoice.VehicleRegNo);
                if(RefNo=="" || RefNo==null)
                {
                    alert("Type Registration/Order No and Press Enter");
                    return;
                }
                $scope.PickRegOrOrder();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.ServiceInvoice.RefNo='';
                $scope.ServiceInvoice.VehicleRefID=0;
                // GetVehicleRefImage(0);//Get Model Image
            }
        };
        $scope.ClearVehicleRegistration= function ()
        {
            $scope.ServiceInvoice.VehicleRegNo="";
            $scope.ServiceInvoice.ModelNo="";
            $scope.ServiceInvoice.VehicleIInvoiceID=0;
            $scope.ServiceInvoice.ChassisNo="";
            $scope.ServiceInvoice.EngineNo="";
            $scope.ServiceInvoice.InteriorColorName="";
            $scope.ServiceInvoice.ExteriorColorName="";
            $scope.ServiceInvoice.CurrencyID="";
            $scope.ServiceInvoice.ETAValueWithTypeSt="";
            $scope.ServiceInvoice.PossibleDateSt="";
            $scope.ServiceInvoice.Remarks="";
            $scope.ServiceInvoice.CustomerRemarks="";
            $scope.ServiceInvoice.OfficeRemarks="";
            $scope.ServiceInvoice.ServiceSetupName="";
            $scope.gridOptionsServiceInvoiceDetail.data=[];
        }

        //Vechile Parts
        $scope.PickParts= function ()
        {
            var sPartsName =  $.trim($scope.txtParts);
            if($scope.ServiceInvoice.ServiceInvoiceType!=undefined && $scope.ServiceInvoice.ServiceInvoiceType==2)
            {
                if($scope.ServiceInvoice.ServiceOrderID<=0)
                {
                    alert("Please Pick Service Order."); return;
                }
            }
            var nBUID = parseInt(sessionStorage.getItem("BUID"));
            var oProduct = { BUID: nBUID, ProductName: sPartsName, Params:$scope.ServiceInvoice.ServiceOrderID};
            debugger;
            $.icsProgressBar(true);
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/ServiceInvoice/GetProducts',$.param(oProduct), config).then(
                        function (response)
                        {
                            $.icsProgressBar(false);
                            debugger;
                            var oColumns = [];
                            var oColumn = { field: 'ProductCode', name: 'Code',width: '25%'  };oColumns.push(oColumn);
                            oColumn = { field: 'ProductName', name: 'Name',width: '35%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'ProductCategoryName', name: 'Category',width: '20%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'SalePrice', name: 'Unit Price',width: '15%', cellClass: 'text-right number|2', enableSorting: false  };oColumns.push(oColumn);

                            var results=(response.data);
                            var modalObj={
                                size:'md',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Parts List',
                                searchingbyfieldName:'ProductName',
                                columns:oColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                $scope.txtParts = result.ProductName;
                                $scope.VehiclePartsID = result.ProductID;
                                $scope.PartsName=result.ProductName;
                                $scope.PartsCode=result.ProductCode;
                                $scope.txtPartsNo=result.ProductCode;
                                $scope.MUnitID=result.MeasurementUnitID;
                                $scope.txtPartsUP=result.SalePrice;
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );

        };
        $scope.SearchKeyDownParts = function (e) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var Parts = $.trim($scope.txtParts);
                if(Parts=="" || Parts==null)
                {
                    alert("Type Parts Name/Code and Press Enter");
                    return;
                }
                $scope.PickOpenParts();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtParts = '';
                $scope.VehiclePartsID = 0;
                $scope.PartsName = "";
                $scope.PartsCode = "";
            }
        }
        $scope.PickOpenParts= function ()
        {
            var sPartsName =  $.trim($scope.txtParts);
            if($scope.ServiceInvoice.ServiceInvoiceType!=undefined && $scope.ServiceInvoice.ServiceInvoiceType==2)
            {
                if($scope.ServiceInvoice.ServiceOrderID<=0)
                {
                    alert("Please Pick Service Order."); return;
                }
            }
            var nBUID = parseInt(sessionStorage.getItem("BUID"));
            var oProduct = { BUID: nBUID, ProductName: sPartsName, Params:$scope.ServiceInvoice.ServiceOrderID};
            debugger;
            $.icsProgressBar(true);
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/ServiceInvoice/GetOpenProducts',$.param(oProduct), config).then(
                        function (response)
                        {
                            $.icsProgressBar(false);
                            debugger;
                            var oColumns = [];
                            var oColumn = { field: 'ProductCode', name: 'Code',width: '25%'  };oColumns.push(oColumn);
                            oColumn = { field: 'ProductName', name: 'Name',width: '35%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'ProductCategoryName', name: 'Category',width: '20%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'SalePrice', name: 'Unit Price',width: '15%', cellClass: 'text-right number|2', enableSorting: false  };oColumns.push(oColumn);

                            var results=(response.data);
                            var modalObj={
                                size:'md',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Parts List',
                                searchingbyfieldName:'PartsName',
                                columns:oColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                $scope.txtParts = result.ProductName;
                                $scope.VehiclePartsID = result.ProductID;
                                $scope.PartsName=result.ProductName;
                                $scope.PartsCode=result.ProductCode;
                                $scope.txtPartsNo=result.ProductCode;
                                $scope.MUnitID=result.MeasurementUnitID;
                                $scope.txtPartsUP=result.SalePrice;
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );

        };
        //LaborCharge
        $scope.PickService= function (nType)
        {
            var txtWork=$scope.txtLaborcharge;

            var oServiceWork = {
                ServiceName: $.trim(txtWork),
                ServiceType:nType
            };
            $.icsProgressBar(true);
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/ServiceWork/SearchService',$.param(oServiceWork), config).then(
                        function (response)
                        {
                            $.icsProgressBar(false);
                            debugger;
                            var oColumns = [];
                            var oColumn = { field: 'ServiceCode', name: 'Code',width: '30%'  };oColumns.push(oColumn);
                            oColumn = { field: 'ServiceName', name: 'Name',width: '40%', enableSorting: false  };oColumns.push(oColumn);
                            oColumn = { field: 'ServiceTypeST', name: 'Type',width: '30%', enableSorting: false  };oColumns.push(oColumn);
                            var results=jQuery.parseJSON(response.data);
                            var modalObj={
                                size:'md',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Service List',
                                searchingbyfieldName:'ServiceName',
                                columns:oColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                $scope.txtLaborCharge=result.ServiceName;
                                $scope.ServiceCode=result.ServiceCode;
                                $scope.ServiceWorkID=result.ServiceWorkID;
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { debugger; alert(response.statusText);}
                    );
        };
        $scope.IsExist=function(oServiceInvoiceDetails,sProperty,nPropertyID)
        {
            for(var i=0;i<oServiceInvoiceDetails.length;i++)
            {
                if(oServiceInvoiceDetails[i][sProperty]==nPropertyID)
                {
                    return true;
                }
            }
            return false;
        }
        $scope.SearchKeyLC = function (e,nType) {
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var txtServiceName =$.trim($scope.txtLaborCharge);

                if(txtServiceName=="" || txtServiceName==null)
                {
                    alert("Type Labor Charge And Press Enter!");
                    return;
                }
                $scope.PickService(3);//ServiceWorkType: 3 [LaborCharge]
            }else if (code == 8) //backspace=8
            {
                //debugger;
                if(nType==1)
                    $scope.txtServiceName='';
            }
        };
        $scope.RemoveDetail = function (nType)
        {
            var oSODDetail =[];
            debugger;
            if(nType==1)
            {
                oSODDetail = $scope.gridSIDetailApi.selection.getSelectedRows()[0];
            }
            else
            {
                oSODDetail = $scope.gridSILCDetailApi.selection.getSelectedRows()[0];
            }
            if(oSODDetail==null)
            {
                alert("Select At least One item !");
                return;
            }

            if (!confirm("Confirm to Delete?")) return ;

            if(nType==1)
            {
                var SelectedRowIndex=$scope.gridSIDetail.data.indexOf(oSODDetail);
                $scope.gridSIDetail.data.splice(SelectedRowIndex,1);
            }
            else
            {
                var SelectedRowIndex=$scope.gridSILCDetail.data.indexOf(oSODDetail);
                $scope.gridSILCDetail.data.splice(SelectedRowIndex,1);
            }
            $scope.RefreshDetail();
        };
        //-----ADD Details-------------
        $scope.AddParts= function()
        {
            if($scope.VehiclePartsID==undefined || $scope.VehiclePartsID<=0)
            {
                alert("Invalid Parts!"); return;
            }
            if($scope.txtPartsNo==undefined || $scope.txtPartsNo=="")
            {
                alert("Please Type Parts No!"); return;
            }
            var cSymbol="";
            if($scope.MUnitID<=0)
            {
                alert("Please Select Measurement Unit!"); return;
            }
            else
            {
                for(var i=0; i<oMUnits.length;i++){
                    if(oMUnits[i].MeasurementUnitID==$scope.MUnitID)
                    {
                        cSymbol=oMUnits[i].Symbol;
                        break;
                    }
                }
            }


            if($scope.txtPartsQty==undefined || $scope.txtPartsQty<=0)
            {
                alert("Please Type Product Qty!"); return;
            }

            if($scope.LaborChargeType_Work==undefined|| $scope.LaborChargeType_Work<=0)
            {
                alert("Please Select Charge Type!"); return;
            }
            else if(($scope.LaborChargeType_Work==1 && ($scope.txtPartsUP==undefined || parseFloat($scope.txtPartsUP)<=0)) || ($scope.LaborChargeType_Work==5 && ($scope.txtPartsUP==undefined || parseFloat($scope.txtPartsUP)<=0)))
            {
                alert("Please Type Unit Price!"); return;
            }
            else if(($scope.LaborChargeType_Work==2 && parseFloat($scope.txtPartsUP)>0) || ($scope.LaborChargeType_Work==3 && parseFloat($scope.txtPartsUP)>0))
            {
                alert("Sorry, Unit Price Is Not Applicable!"); $scope.txtPartsUP=0; return;
            }
            for(var i=0; i<$scope.PartsChargeTypes.length;i++){
                if($scope.PartsChargeTypes[i].id==$scope.LaborChargeType_Work)
                {
                    sLCType=$scope.PartsChargeTypes[i].Value;
                    break;
                }
            }
            var oSIDetail={
                ServiceInvoiceDetailID : 0,
                ServiceInvoiceID : $scope.ServiceInvoice.ServiceInvoiceID,
                VehiclePartsID : $scope.VehiclePartsID,
                WorkChargeType : $scope.LaborChargeType_Work,
                WorkChargeTypeSt : sLCType,
                MUnitID:$scope.MUnitID,
                MUName:cSymbol,
                PartsNo:$scope.txtPartsNo,
                PartsName:$scope.PartsName,
                PartsCode:$scope.PartsCode,
                WorkDateSt:$scope.txtDateDetail,
                WorkDate:new Date($scope.txtDateDetail),
                Qty : $scope.txtPartsQty,
                UnitPrice : $scope.txtPartsUP,
                Amount : (isNaN(parseFloat($scope.txtPartsUP)) ? 0 : parseFloat($scope.txtPartsUP)) * parseFloat($scope.txtPartsQty),
                Remarks : ""
            };

            var oServiceInvoiceDetails = $scope.gridSIDetail.data;
            if(!$scope.IsExist(oServiceInvoiceDetails,'VehiclePartsID',oSIDetail.VehiclePartsID))
            {
                $scope.gridSIDetail.data.push(oSIDetail);
                $scope.SetTotal(1);
                $scope.VehiclePartsID=$scope.MUnitID=0;
                $scope.txtDateDetail=$scope.txtParts =$scope.txtPartsQty=$scope.txtPartsUP=$scope.txtPartsNo=$scope.PartsName=$scope.PartsCode="";
            }
            else
            {
                alert("Duplicate Entry!" );
            }
        }
        $scope.AddService= function()
        {
            var sLCType="";
            debugger;
            //Paying = 1,Non_Paying = 2,Complementary=3
            if($scope.LaborChargeType==undefined|| $scope.LaborChargeType<=0)
            {
                alert("Please Select Charge Type!"); return;
            }
            else if(($scope.LaborChargeType==1 && ($scope.txtWorkingCost==undefined || parseFloat($scope.txtWorkingCost)<=0)) || ($scope.LaborChargeType==5 && ($scope.txtWorkingCost==undefined || parseFloat($scope.txtWorkingCost)<=0)))
            {
                alert("Please Type Charge Amount!"); return;
            }
            else if(($scope.LaborChargeType==2 && parseFloat($scope.txtWorkingCost)>0) || ($scope.LaborChargeType==4 && parseFloat($scope.txtWorkingCost)>0))
            {
                alert("Sorry, Charge Amount Is Not Applicable!"); $scope.txtWorkingCost=0; return;
            }
            for(var i=0; i<$scope.LaborChargeTypes.length;i++){
                if($scope.LaborChargeTypes[i].id==$scope.LaborChargeType)
                {
                    sLCType=$scope.LaborChargeTypes[i].Value;
                    break;
                }
            }

            var nLCAmount=$scope.txtWorkingCost*$scope.txtWorkingHour;
            var oSILCDetail={
                ServiceInvoiceDetailID : 0,
                ServiceInvoiceID : $scope.ServiceInvoice.ServiceInvoiceID,
                ServiceWorkID : $scope.ServiceWorkID,
                ChargeDescription:$scope.txtChargeDescription,
                LaborChargeType:$scope.LaborChargeType,
                LaborChargeTypeSt:sLCType,
                WorkingHour:$scope.txtWorkingHour,
                WorkingCost:$scope.txtWorkingCost,
                ServiceName:$scope.txtLaborCharge,
                ServiceCode:$scope.ServiceCode,
                ChargeAmount : isNaN(nLCAmount)?0:nLCAmount
            };


            var oServiceInvoiceDetails = $scope.gridSILCDetail.data;
            $scope.gridSILCDetail.data.push(oSILCDetail);
            $scope.SetTotal(1);
            $scope.ServiceWorkID=$scope.LaborChargeType=$scope.txtChargeAmount="";
            $scope.txtPartsNo=$scope.txtLaborCharge=$scope.txtChargeDescription=$scope.ServiceCode="";

            //if(!$scope.IsExist(oServiceInvoiceDetails,'ServiceWorkID',oSILCDetail.ServiceWorkID))
            //{
            //    $scope.gridSILCDetail.data.push(oSILCDetail);
            //    $scope.SetTotal(1);
            //    $scope.ServiceWorkID=$scope.LaborChargeType=$scope.txtChargeAmount="";
            //    $scope.txtPartsNo=$scope.txtLaborCharge=$scope.txtChargeDescription=$scope.ServiceCode="";
            //}
            //else
            //{
            //    alert("Duplicate Entry!" );
            //}
            //$scope.txtWorkingHour = 0;
            $scope.txtWorkingCost = 0;
        }
        $scope.Save = function ()
        {
            debugger;
            //alert( $('#txtRcvDate').datebox('getValue'));
            if(!$scope.ValidateInput()) return;
            var oServiceInvoice= $scope.ServiceInvoice;
            oServiceInvoice.IssueDate = new Date($scope.ServiceInvoice.IssueDateSt);
            oServiceInvoice.ServiceInvoiceDate = new Date($scope.ServiceInvoice.ServiceInvoiceDateSt);

            oServiceInvoice.InvoiceStatusInt = 1;//intialize
            oServiceInvoice.ServiceInvoiceDetails=$scope.gridSIDetail.data;
            oServiceInvoice.ServiceILaborChargeDetails=$scope.gridSILCDetail.data;
            if($scope.ServiceInvoice.InvoiceTypeInt!=0)//Estimated invoice
            {
                oServiceInvoice.ServiceInvoiceTermsList = $scope.gridOptionsTermsAndCondition.data;
            }
            $http.post(sessionStorage.getItem('BaseAddress')+'/ServiceInvoice/Save',oServiceInvoice).then(
                        function (response)
                        {
                            var oServiceInvoice= jQuery.parseJSON(response.data);
                            if (oServiceInvoice.ErrorMessage=="" || oServiceInvoice.ErrorMessage==null)
                            {
                                debugger;
                                alert("Data Saved Successfully!!");
                                userSession.setData('ServiceInvoiceList',oServiceInvoice);
                                userSession.previousPage();
                                window.location.href = sessionStorage.getItem("BackLink");
                            }
                            else
                            {
                                alert(oServiceInvoice.ErrorMessage);
                            }

                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);$scope.MeasurementUnits=[];}
                    );

        };
        $scope.Revise = function () {
            debugger;
            if(!$scope.ValidateInput()) return;
            var oServiceInvoice = $scope.ServiceInvoice;
            oServiceInvoice.IssueDate = new Date($scope.ServiceInvoice.IssueDateSt);
            oServiceInvoice.ServiceInvoiceDate = new Date($scope.ServiceInvoice.ServiceInvoiceDateSt);

            oServiceInvoice.InvoiceStatusInt = 1;//intialize
            oServiceInvoice.ServiceInvoiceDetails = $scope.gridSIDetail.data;
            oServiceInvoice.ServiceILaborChargeDetails = $scope.gridSILCDetail.data;

            $http.post(sessionStorage.getItem('BaseAddress')+'/ServiceInvoice/Revise',oServiceInvoice).then(
                function (response) {
                    var oServiceInvoice = jQuery.parseJSON(response.data);
                    if (oServiceInvoice.ErrorMessage =="" || oServiceInvoice.ErrorMessage == null) {
                        debugger;
                        alert("Revised Successfully!!");
                        userSession.setData('ServiceInvoiceList', oServiceInvoice);
                        userSession.previousPage();
                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                    else {
                        alert(oServiceInvoice.ErrorMessage);
                    }
                },
                function (response) {
                    alert(jQuery.parseJSON(response.data).Message);
                    $scope.MeasurementUnits=[];
                });
        };
        $scope.ValidateInput =  function ()
        {
            debugger;

            if($scope.ServiceInvoice.VehicleRegistrationID==0)
            {
                alert('Please Pick Registration No.');
                return false;
            }
            if($scope.ServiceInvoice.CurrencyID=="" || $scope.ServiceInvoice.CurrencyID==null)
            {
                alert('Please Select Currency.');$('#cboCurrency').focus();
                return false;
            }
            //if($scope.gridOptionsServiceInvoiceDetail.data.length <=0){alert("Please Add Vechicle Invoice Detail");  return false;}

            return true;
        };
        $scope.SetTotal(1);

        

        //Terms and condition
        $scope.gridOptionsTermsAndCondition = {
            multiSelect: false,
            enableRowSelection: true,
            multiSelect: false,
            //enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
            columnDefs: [
              { field: 'Terms', name:'Terms and condition', width:'95%',enableCellEdit:true  }
            ],
            data:$scope.ServiceInvoiceTermsList,
            onRegisterApi: function (gridApi) {
                $scope.gridApiTermsAndCondition = gridApi;
            }
        };
        $scope.AddTermsAndCondition= function ()
        {
            debugger;
            var oServiceInvoiceTerms ={
                ServiceInvoiceTermsID:0,
                ServiceInvoiceID : $scope.ServiceInvoice.ServiceInvoiceID,
                Terms:""
            };
            $scope.gridOptionsTermsAndCondition.data.push(oServiceInvoiceTerms);

        };
        $scope.RemoveTermsAndCondition=  function ()
        {
            debugger;
            //$scope.gridApi.selection.getSelectedRows()[0];
            var oServiceInvoiceTerms=$scope.gridApiTermsAndCondition.selection.getSelectedRows()[0];
            if(oServiceInvoiceTerms==null)
            {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex= $scope.gridOptionsTermsAndCondition.data.indexOf(oServiceInvoiceTerms);
            if (!confirm("Confirm to Delete?")) return ;
            $scope.gridOptionsTermsAndCondition.data.splice(SelectedRowIndex,1);
        };
        $scope.RefreshTermsAndCondition = function ()
        {
            $scope.gridOptionsTermsAndCondition.data =  $scope.gridOptionsTermsAndCondition.data;
        };


        if(sessionStorage.getItem("ServiceInvoiceHeader")=="View Service Invoice")
        {
            $("#divServiceInvoice :input").prop('disabled', true);
            $('#btnclose').prop('disabled', false);
            $scope.disabled=true;
            $scope.disabled_OrderBy=true;
        }

        $scope.Close=function ()
        {
            debugger;
            window.location.href = sessionStorage.getItem("BackLink");
        };

        //TAb selection
        this.tab = 1;
        this.SetTab = function (tabId)
        {
            this.tab = tabId;
        }
        this.IsSet = function (tabid)
        {
            return this.tab === tabid;
        }
    });

</script>