<html>
@{
    ViewBag.Title = "Service Invoice";
}

<body>
    @model IEnumerable<ESimSol.BusinessObjects.ServiceInvoice>
    <script src="~/Views/CommonModal/CommonHistoryModal.js"></script>
<div class="menuMainCollectionTable" ng-app="ServiceInvoiceApp">
    <div ng-controller="ServiceInvoiceController" title="Recycle Process">
        <div style="margin-bottom:2px; display:block" class="form-inline ui-grid-top-panel regionInvoice">
            @*<input class="easyui-datetimebox" label="Select DateTime:" labelposition="top" style="width:100%;">*@
            <input type="text" class="form-control" ng-model="RegNo" ng-keydown="searchByRegNo($event)" ng-keyup="searchByRegNo($event)" placeholder="Type Reg No & Press Enter">
            <button type="button" ng-show="btnView" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="AdvanceSearch()"><span class="glyphicon glyphicon-search" aria-hidden="true"> Advance Search</span></button>
            <button type="button" ng-show="btnAdd" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Add()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>
            <button type="button" ng-show="btnEdit" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Edit()"><span class="glyphicon glyphicon-edit" aria-hidden="true"> Edit</span></button>
            <button type="button" ng-show="btnView" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="View()"><span class="glyphicon glyphicon-th" aria-hidden="true"> View</span></button>
            <button type="button" ng-show="btnDelete" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Delete()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Delete</span></button>
            <button type="button" ng-show="btnApprove" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Approve()"><span class="glyphicon glyphicon-save-file" aria-hidden="true"> Approve</span></button>
            <button type="button" ng-show="btnRevise" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Revise()"><span class="glyphicon glyphicon-save-file" aria-hidden="true"> Revise</span></button>
            <button type="button" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="ReviseHistory()"><span class="glyphicon glyphicon-save-file" aria-hidden="true"> Revise History</span></button>
            <button type="button" ng-show="btnPriview" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Comments()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Comments</span></button>
            <button type="button" ng-show="btnPriview" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PrintPreview()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Priview</span></button>
            <button type="button" ng-show="btnPriview" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PrintPreviewChallan()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Challan</span></button>
        </div>
        <div ui-grid="gridOptions" ui-grid-pinning ui-grid-selection style="width:99%; height:525px;"></div>
    </div>

    <script type="text/ng-template" id="ServiceInvoiceStatus.html" >
        <div class="modal-header">
            <h4 class="modal-title" id="modal-title" ng-model="HeaderStatus">Update Service Status</h4>
        </div>
        <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-2 text-right"><label class="control-label">Invoice No:</label></div>
                    <div class="col-md-4 text-left">
                        <input type="text" ng-model="ServiceInvoice.ServiceInvoiceNo" class="form-control">
                    </div>
                    <div class="col-md-2 text-right"><label class="control-label">V Type:</label></div>
                    <div class="col-md-4 text-left">
                        <input type="text" ng-model="ServiceInvoice.VehicleTypeName" class="form-control">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-2 text-right"><label class="control-label">Reg. No:</label></div>
                    <div class="col-md-4 text-left">
                        <input type="text" ng-model="ServiceInvoice.VehicleRegNo" class="form-control">
                    </div>
                    <div class="col-md-2 text-right"><label class="control-label">VIN No:</label></div>
                    <div class="col-md-4 text-left">
                        <input type="text" ng-model="ServiceInvoice.ChassisNo" class="form-control">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-2 text-right"><label class="control-label">Model No:</label></div>
                    <div class="col-md-4 text-left">
                        <input type="text" ng-model="ServiceInvoice.VehicleModelNo" class="form-control">
                    </div>
                    <div class="col-md-2 text-right"><label class="control-label">Engine No:</label></div>
                    <div class="col-md-4 text-left">
                        <input type="text" ng-model="ServiceInvoice.EngineNo" class="form-control">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-2 text-right"><label class="control-label">Customer:</label></div>
                    <div class="col-md-4 text-left">
                        <input type="text" ng-model="ServiceInvoice.CustomerName" class="form-control">
                    </div>
                    <div class="col-md-2 text-right"><label class="control-label">Customer Phone:</label></div>
                    <div class="col-md-4 text-left">
                        <input type="text" ng-model="ServiceInvoice.CustomerPhone" class="form-control">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-2 text-right"><label class="control-label">Contact Person:</label></div>
                    <div class="col-md-4 text-left">
                        <input type="text" ng-model="ServiceInvoice.ContactPerson" class="form-control">
                    </div>
                    <div class="col-md-2 text-right"><label class="control-label">Contact P. Phone:</label></div>
                    <div class="col-md-4 text-left">
                        <input type="text" ng-model="ServiceInvoice.ContactPersonPhone" class="form-control">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-2 text-right"><label class="control-label"> {{lblDateTime}}</label></div>
                    <div class="col-md-4 text-left">
                        <div class="input-group date date-container">
                            <input type="text" class="form-control" data-format="dd/MM/yyyy hh:mm:ss" ng-model="SalesQuotation.QuotationDateInString"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                        </div>
                    </div>
                    <div class="col-md-2 text-right"><label class="control-label">Serive Advisor:</label></div>
                    <div class="col-md-4 text-left">
                        <input type="text" ng-model="ServiceInvoice.AdvisorName" class="form-control">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-2 text-right"><label class="control-label">Comments:</label></div>
                    <div class="col-md-10 text-left">
                        <input type="text" ng-model="ServiceInvoice.Comments" class="form-control" placeholder="Write a comment..">
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn-primary btn-sm" ng-show="btnApprove" aria-label="Left Align" ng-click="Approve()"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Approve</button>
            <button type="button" class="btn-primary btn-sm" ng-show="btnReceive" aria-label="Left Align" ng-click="Receive()"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Receive</button>
            <button type="button" class="btn-primary btn-sm" ng-show="btnDelivered" aria-label="Left Align" ng-click="Delivered()"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Delivered</button>
            <button type="button" class="btn-warning btn-sm" ng-show="btnCancel" aria-label="Left Align" ng-click="Cancel()"> <span class="glyphicon glyphicon-stop" aria-hidden="true"></span> Cancel</button>
            <button type="button" class="btn-danger btn-sm"  aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Close</button>
        </div>
    </script>
</div>
<style type="text/css">
    .regionInvoice .form-control {
        height: 26px;
        width: 15%;
        padding: 0px 6px;
        font-size: 12px;
    }
</style>
<script type="text/javascript">
    var oServiceInvoiceList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var _nBUID =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    var oInvoiceTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DUInvoiceSetups));
    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    var nInvoiceType = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.InvoiceType));

    debugger;
    var CInvoiceapp= angular.module('ServiceInvoiceApp',   ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.cellNav','ms.service','ui.grid.pinning','CommonHistory.service']);
    CInvoiceapp.controller('ServiceInvoiceController',  function ($scope, $http, $uibModal,$interval,$timeout,  $log, uiGridConstants, msModal, userSession,advanceSearch, commonhistoryservice)  {
        oServiceInvoiceList= (userSession.getData('ServiceInvoiceList').length>0)? userSession.getData('ServiceInvoiceList'):oServiceInvoiceList;

        sessionStorage.setItem("BackLink", window.location.href);
        $scope.gridOptions =
            {
            enableRowSelection: true,
            enableSelectAll: true,
            multiSelect: false,
            enableFullRowSelection: true,
            columnDefs: [
                 {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false,pinnedLeft:true },
                { field: 'ServiceInvoiceNo', name:'Invoice No', width:'12%',pinnedLeft:true },
                { field: 'ServiceInvoiceDateSt', name:'Invoice Date', width:'10%' },
                { field: 'ServiceInvoiceTypeSt', name:'Type', width:'10%' },
                { field: 'InvoiceStatusSt', name:'Status', width:'10%' },
                { field: 'CustomerName', name:'Customer', width:'25%' },
                { field: 'ServiceOrderNo', name:'Service Order', width:'10%' },

                { field: 'VehicleRegNo', name:'Reg No', width:'15%' },
                { field: 'VehicleModelNo', name:'Model No', width:'14%' },
                { field: 'ChassisNo', name:'Chassis No', width:'14%' },
                { field: 'EngineNo', name:'Engine No', width:'14%' },
                { field: 'VehicleTypeName', name:'Vehicle TypeName', width:'12%' },
                { field: 'Remarks', name: 'Remarks', width: '10%' },
                { field: 'PrepaireByName', name: 'Prepaire By', width: '10%' }
            ],
            data: oServiceInvoiceList,
            onRegisterApi : function(gridApi)
            {
                debugger;
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                debugger;
                if(oServiceInvoiceList.length>0 && userSession.getRowIndex()>=0)
                {
                    $scope.gridApi.grid.modifyRows(oServiceInvoiceList);
                    $scope.gridApi.selection.selectRow(oServiceInvoiceList[userSession.getRowIndex()]);
                    $scope.RowSelect(oServiceInvoiceList[userSession.getRowIndex()]);
                }
                $scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                    $scope.RowSelect(row.entity ); });
                userSession.clear();
            }
        };

        $scope.RowSelect =  function (entity){

            $scope.btnAdd = $scope.btnEdit = $scope.btnDetails = $scope.btnDelete = $scope.btnImage=  $scope.btnPrintList= $scope.btnPriview = $scope.btnApprove = $scope.btnRevise = false;
            debugger;

            if(entity.InvoiceStatusInt==2){ //ApproveOnly
                $scope.btnApprove=false;
                $scope.btnRevise = true;
                $scope.btnEdit=false;
                $scope.btnDelete=false;
                $scope.btnDeliver=false;
                $scope.btnReceive=true;
                $scope.btnCancel=false;
                $scope.CheckControll();
            }
            else if(entity.InvoiceStatusInt==3)//Received
            {
                $scope.btnApprove=false;
                $scope.btnRevise = false;
                $scope.btnEdit=false;
                $scope.btnDelete=false;
                $scope.btnReceive=false;
                $scope.btnDeliver=true;
                $scope.btnCancel=false;
                $scope.CheckControll();
            }
            else if(entity.InvoiceStatusInt==4)//Delivered
            {
                $scope.btnApprove=false;
                $scope.btnRevise = false;
                $scope.btnEdit=false;
                $scope.btnDelete=false;
                $scope.btnReceive=false;
                $scope.btnDeliver=false;
                $scope.btnCancel=false;
                $scope.CheckControll();
            }
            else
            {
                $scope.btnReceive=false;
                $scope.btnDeliver=false;
                $scope.btnApprove=true;
                $scope.btnRevise = false;
                $scope.btnEdit=true;
                $scope.btnCancel=true;
                $scope.btnDelete=true;
                $scope.CheckControll();
            }
        }


        $scope.AdvanceSearch=function()
        {
            //var oColumns = [];
            //var oColumn = { field: 'ModelNo', name: 'ModelNo',width: '30%'  };oColumns.push(oColumn);
            //oColumn = { field: 'CategoryName', name: 'CategoryName',width: '40%', enableSorting: false  };oColumns.push(oColumn);

            //var paramObj_Model={
            //    obj:{ModelNo: '@@VehicleModelID'},
            //    objName:'ModelNo',
            //    url:_sBaseAddress+'/VehicleModel/GetVehicleModels',
            //    title:'Model List',
            //    multiSelect:true,
            //    columns:oColumns
            //}

            var oColumns = [];
            var oColumn = { field: 'VehicleRegNo', name: 'Code/Ref No',width: '20%'  };oColumns.push(oColumn);
            oColumn = { field: 'VehicleModelNo', name: 'Model No',width: '20%', enableSorting: false  };oColumns.push(oColumn);
            oColumn = { field: 'CustomerName', name: 'Customer',width: '15%', enableSorting: false  };oColumns.push(oColumn);
            oColumn = { field: 'VehicleTypeName', name: 'Type',width: '15%', enableSorting: false  };oColumns.push(oColumn);

            var paramObj_Reg={
                obj:{VehicleRegNo: '@@VehicleRegistrationID'},
                objName:'VehicleRegNo',
                url:_sBaseAddress+'/VehicleRegistration/GetsByNo',
                title:'Registration List',
                multiSelect:true,
                columns:oColumns
            }

            oColumns = [];
            var oColumn = { field: 'Name', name: 'Applicant Name',width: '70%', enableSorting: false  };oColumns.push(oColumn);
            oColumn = { field: 'Address', name: 'Address',width: '30%', enableSorting: false  };oColumns.push(oColumn);

            var paramObj_Contractor={
                obj:{Params: '2' + '~' +'@@ContractorID'+'~'+sessionStorage.getItem('BUID')},
                objName:'Params',
                url:_sBaseAddress+'/Contractor/ContractorSearchByNameType',
                title:'Contractor List',
                multiSelect:true,
                columns:oColumns
            }

            var oElementList = [{ DisplayName: "Invoice No",           BOField: "InvoiceNo",          InputType: 'text' },
                                { DisplayName: "Service Date",    BOField: "ServiceDate",   InputType: 'date' },
                                { DisplayName: "Reg No",          BOField: "VehicleRegistrationID",  InputType: 'picker', PickerObject:paramObj_Reg },
                                { DisplayName: "Customer ",         BOField: "ContractorID",    InputType: 'picker', PickerObject:paramObj_Contractor },
                                { Value: nInvoiceType,           BOField: "InvoiceType",          InputType: 'HIDDEN' }
                                //{ DisplayName: ["Yet To Forward (HO)","Yet To Forward (Buyer)"],  BOField: ["YetToHO","YetToBuyer"],   InputType: 'bool'},
                                //{ DisplayName: "SomeType",    BOField: "SomeType",       InputType: 'select', OptionList:[{id:2,Value:"KisuNai"}]},
            ];
            var modalObj={
                size:'md',
                title:"Advance Search",
                url:_sBaseAddress+'/Home/AdvanceSearch',
                CompareOperators:oCompareOperators,
                HtmlElements:oElementList,
                InvoiceTypeInt:nInvoiceType,
                isAdvanceSearch:true, // if TRUE: 'urlAdvanceSearch' should be define
                urlAdvanceSearch:_sBaseAddress + '/ServiceInvoice/AdvSearch'
            }

            var modalInstance=advanceSearch.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                console.log(result);
                $scope.gridOptions.data=result;
            }, function ()
            {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };


        $scope.Approve = function()
        {
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice==null || oServiceInvoice.ServiceInvoiceID<=0)
            {
                alert("Please Select An Invoice!");
                return;
            }
            if(oServiceInvoice.InvoiceStatusInt!=1)
            {
                alert("Please Select Initialized Invoice!");
                return;
            }
            //$scope.Modal( oServiceInvoice, 'Approve');
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.ServiceInvoiceID == oServiceInvoice.ServiceInvoiceID)
                {
                    sessionStorage.setItem("ServiceInvoiceList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("Operation", "Approve");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/ServiceInvoice/ViewServiceInvoice_Update?id="+oServiceInvoice.ServiceInvoiceID;
                }
            }, $scope.gridOptions.data);
        }
        $scope.Revise =  function () {
            debugger;
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice == null || oServiceInvoice.ServiceInvoiceID <= 0) {
                alert("Please Select an item from list");
                return;
            }
            var SelectedRowIndex = $scope.gridOptions.data.indexOf(oServiceInvoice);
            sessionStorage.setItem("ServiceInvoiceList", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("ServiceInvoiceHeader", "Revise Service Invoice");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = sessionStorage.getItem('BaseAddress')+"/ServiceInvoice/ViewServiceInvoice?id="+oServiceInvoice.ServiceInvoiceID+"&InvoiceType="+nInvoiceType;
        };

        $scope.ReviseHistory = function () {
            debugger;
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice == null || oServiceInvoice.ServiceInvoiceID <= 0) {
                alert("Please Select an item from list");
                return;
            }
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/ServiceInvoice/GetsServiceInvoiceLog',$.param(oServiceInvoice), config).then(
                function (response) {
                    debugger;
                    var results = jQuery.parseJSON(response.data);
                    var oColumns = [{ field: 'ServiceInvoiceNo', name:'Invoice No', width:'12%',pinnedLeft:true },
                                    { field: 'ServiceInvoiceDateSt', name:'Invoice Date', width:'10%' },
                                    { field: 'ServiceInvoiceTypeSt', name:'Type', width:'10%' },
                                    { field: 'InvoiceStatusSt', name:'Status', width:'10%' },
                                    { field: 'CustomerName', name:'Customer', width:'25%' },
                                    { field: 'ServiceOrderNo', name:'Service Order', width:'10%' },
                                    { field: 'VehicleRegNo', name:'Reg No', width:'15%' },
                                    { field: 'VehicleModelNo', name:'Model No', width:'14%' },
                                    { field: 'ChassisNo', name:'Chassis No', width:'14%' },
                                    { field: 'EngineNo', name:'Engine No', width:'14%' },
                                    { field: 'VehicleTypeName', name:'Vehicle TypeName', width:'12%' },
                                    { field: 'Remarks', name: 'Remarks', width: '10%' }];

                    var modalObj = {
                        size : 'lg',
                        appcontroller : 'ServiceInvoiceController',
                        result : results,
                        multiSelect : false,
                        showColumnFooter : false,
                        pickertitle : 'SI Revise History List',
                        objectFieldName : 'ServiceInvoiceLogID',
                        controllerName : 'ServiceInvoice',
                        controlleractionName : 'PrintSILogPreview',
                        columnDefs : oColumns
                    };
                    var modalInstance = commonhistoryservice.Instance(modalObj);
                },
                function (response) {
                    alert(jQuery.parseJSON(response.data[0]).Message);
                });
        };

        $scope.Receive = function()
        {
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice==null || oServiceInvoice.ServiceInvoiceID<=0)
            {
                alert("Please Select An Invoice!");
                return;
            }
            if(oServiceInvoice==null || oServiceInvoice.InvoiceStatusInt!=2)
            {
                alert("Sorry! Yet Not Approved!");
                return;
            }
            //$scope.Modal( oServiceInvoice, 'Receive');
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.ServiceInvoiceID == oServiceInvoice.ServiceInvoiceID)
                {
                    sessionStorage.setItem("ServiceInvoiceList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("Operation", "Receive");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/ServiceInvoice/ViewServiceInvoice_Update?id="+oServiceInvoice.ServiceInvoiceID;
                }
            }, $scope.gridOptions.data);
        }
        $scope.Deliver = function()
        {
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice==null || oServiceInvoice.ServiceInvoiceID<=0)
            {
                alert("Please Select An Invoice!");
                return;
            }
            if(oServiceInvoice.InvoiceStatusInt!=3)
            {
                alert("Sorry! Yet Not Received!");
                return;
            }
            //$scope.Modal( oServiceInvoice, 'Delivered');
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.ServiceInvoiceID == oServiceInvoice.ServiceInvoiceID)
                {
                    sessionStorage.setItem("ServiceInvoiceList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("Operation", "Deliver");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/ServiceInvoice/ViewServiceInvoice_Update?id="+oServiceInvoice.ServiceInvoiceID;
                }
            }, $scope.gridOptions.data);
        }
        $scope.Cancel = function()
        {
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice==null || oServiceInvoice.ServiceInvoiceID<=0)
            {
                alert("Please Select An Invoice!");
                return;
            }
            if(oServiceInvoice.InvoiceStatusInt==2)
            {
                alert("Sorry! Service Invoice Is Approved!");
                return;
            }
            //$scope.Modal( oServiceInvoice, 'Cancel');
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.ServiceInvoiceID == oServiceInvoice.ServiceInvoiceID)
                {
                    sessionStorage.setItem("ServiceInvoiceList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("Operation", "Cancel");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/ServiceInvoice/ViewServiceInvoice_Update?id="+oServiceInvoice.ServiceInvoiceID;
                }
            }, $scope.gridOptions.data);
        }
        $scope.Modal = function (objSQ, operation) {

            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'lg',
                templateUrl: 'ServiceInvoiceStatus.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'ServiceInvoiceController',
                resolve: {
                    obj: function () {

                        return { ServiceInvoice:objSQ, Operation: operation  };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                debugger;
                if(result.ServiceInvoiceID>0)
                {
                    if(operation=='add'){
                        $scope.gridOptions.data.push(result);
                        $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                        $scope.gridApi.selection.selectRow(result);
                    }
                    else
                    {
                        $scope.gridOptions.data[$scope.index]=result;
                        $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                        $scope.gridApi.selection.selectRow($scope.gridOptions.data[$scope.index]);
                    }
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        $scope.GetsByRegNoOrInvoiceNo = function(sServiceInvoiceNo)
        {
            debugger;
            var oServiceInvoice = {
                ServiceInvoiceNo:sServiceInvoiceNo
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/ServiceInvoice/GetsByRegOrInvoiceNo',$.param(oServiceInvoice), config).then(
                                function (response) {
                                    debugger;
                                    $scope.gridOptions.data=[];
                                    result=jQuery.parseJSON(response.data);
                                    $scope.gridOptions.data=(result);
                                }, function () {
                                    $log.info('GetServiceInvoice Dismissed at: ' + new Date());
                                });
        }
        $scope.searchByRegNo = function(e)
        {
            debugger;
            var RegNo="";
            RegNo = $scope.RegNo;
            var oServiceInvoices = oServiceInvoiceList;
            var sTempName="";
            var oSearchedList = [];
            var oCurrentList = $scope.gridOptions.data;
            if (e.which == 8)
            {
                oCurrentList = oServiceInvoices;
            }
            if(e.which==13)
            {
                $scope.GetsByRegNoOrInvoiceNo(RegNo);
            }
        }
        $scope.Add  = function ()
        {
            debugger;
            sessionStorage.setItem("ServiceInvoiceList", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("ServiceInvoiceHeader", "Add Service Invoice");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href =sessionStorage.getItem('BaseAddress')+"/ServiceInvoice/ViewServiceInvoice?id=0&InvoiceType="+nInvoiceType;
        }
        $scope.Edit =  function ()
        {
            debugger;
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice==null || oServiceInvoice.ServiceInvoiceID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.ServiceInvoiceID == oServiceInvoice.ServiceInvoiceID)
                {
                    sessionStorage.setItem("ServiceInvoiceList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("ServiceInvoiceHeader", "Edit Service Invoice");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/ServiceInvoice/ViewServiceInvoice?id="+oServiceInvoice.ServiceInvoiceID+"&InvoiceType="+nInvoiceType;
                }
            }, $scope.gridOptions.data);
        }
        $scope.View =  function ()
        {
            //debugger;
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice==null || oServiceInvoice.ServiceInvoiceID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.ServiceInvoiceID == oServiceInvoice.ServiceInvoiceID)
                {
                    sessionStorage.setItem("ServiceInvoiceList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("ServiceInvoiceHeader", "View Service Invoice");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/ServiceInvoice/ViewServiceInvoice?id="+oServiceInvoice.ServiceInvoiceID+"&InvoiceType="+nInvoiceType;
                }
            }, $scope.gridOptions.data);
        }
        $scope.Copy =  function ()
        {
            debugger;
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice==null || oServiceInvoice.ServiceInvoiceID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.ServiceInvoiceID == oServiceInvoice.ServiceInvoiceID)
                {
                    sessionStorage.setItem("ServiceInvoiceList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("ServiceInvoiceHeader", "Copy Service Invoice");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/ServiceInvoice/ViewServiceInvoice?id="+oServiceInvoice.ServiceInvoiceID+"&InvoiceType="+nInvoiceType;
                }
            }, $scope.gridOptions.data);
        }
        $scope.PrintPreview = function ()
        {
            debugger;
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice==null || oServiceInvoice.ServiceInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/ServiceInvoice/PrintServiceInvoicePreview?id='+oServiceInvoice.ServiceInvoiceID);
        };
        $scope.PrintPreviewChallan = function ()
        {
            debugger;
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice==null || oServiceInvoice.ServiceInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/ServiceInvoice/PrintServiceInvoiceChallan?id='+oServiceInvoice.ServiceInvoiceID);
        };


        $scope.PrintPreviewXL = function ()
        {
            debugger;
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice==null || oServiceInvoice.ServiceInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            //window.open(sessionStorage.getItem('BaseAddress') + '/ServiceInvoice/PrintServiceInvoicePreview?id='+oServiceInvoice.ServiceInvoiceID);
            window.open(sessionStorage.getItem('BaseAddress') + '/ServiceInvoice/PrintServiceInvoiceXL?id='+oServiceInvoice.ServiceInvoiceID);
        };
        $scope.PrintList = function ()
        {
            var oServiceInvoices=  $scope.gridOptions.data;//$('#tblServiceInvoice').datagrid('getRows');
            var ids ="";
            if(oServiceInvoices.length >0)
            {
                for(var i =0;i<oServiceInvoices.length;i++)
                {
                    ids =ids+oServiceInvoices[i].ServiceInvoiceID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else
            {
                alert("Data not found ");
                return;
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/ServiceInvoice/PrintList?buid='+ _nBUID );
        };
        $scope.Delete= function ()
        {
            debugger;
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice==null || oServiceInvoice.ServiceInvoiceID<=0)
            {
                alert("Please Select an item from list");
                return;
            }

            if (!confirm("Confirm to Delete?")) return ;
            $http.post(sessionStorage.getItem('BaseAddress')+'/ServiceInvoice/Delete', JSON.stringify(oServiceInvoice)).then(
                            function (response) {
                                if (jQuery.parseJSON(response.data) == 'Deleted') {
                                    angular.forEach($scope.gridOptions.data, function (value, index)
                                    {
                                        if (value.ServiceInvoiceID == oServiceInvoice.ServiceInvoiceID)
                                        {
                                            alert("Successfully Deleted.");
                                            $scope.gridOptions.data.splice(index, 1);
                                        }
                                    }, $scope.gridOptions.data);
                                }
                                else {
                                    alert(jQuery.parseJSON(response.data));
                                }
                            },
                            function (response) { alert(jQuery.parseJSON(response.data)); }
                        );

        };
        $scope.PrintListXL = function ()
        {
            debugger;
            //var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            //if(oServiceInvoice==null || oServiceInvoice.ServiceInvoiceID<=0)
            //{
            //    alert("Please select a item from list!");
            //    return;
            //}
            //window.open(sessionStorage.getItem('BaseAddress') + '/ServiceInvoice/PrintServiceInvoicePreview?id='+oServiceInvoice.ServiceInvoiceID);
            window.open(sessionStorage.getItem('BaseAddress') + '/ServiceInvoice/PrintServiceInvoiceListXL');
        }

        $scope.Comments =  function ()
        {
            //debugger;
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice==null || oServiceInvoice.ServiceInvoiceID<=0)
            {
                alert("Please Select an item from list");
                return;
            }

            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.ServiceInvoiceID == oServiceInvoice.ServiceInvoiceID)
                {
                    sessionStorage.setItem("ServiceInvoiceList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/CommentsHistory/ViewCommentsHistory?nModuleID=164&nModuleObjID="+oServiceInvoice.ServiceInvoiceID+"&sTitle=Reg. No:"+oServiceInvoice.VehicleRegNo+"|| Invoice No:"+oServiceInvoice.ServiceInvoiceNo;
                }
            }, $scope.gridOptions.data);

        }

        $scope.Attachment = function ()
        {
            var oServiceInvoice = $scope.gridApi.selection.getSelectedRows()[0];
            if(oServiceInvoice==null || oServiceInvoice.ServiceInvoiceID<=0)
            {
                alert("Please select a item from list!");
                return;
            }

            window.open(_sBaseAddress + '/AttachDocument/Attachment?id='+oServiceInvoice.ServiceInvoiceID+'&RefType=20&OperationInfo= Attachment of Invoice No : '+oServiceInvoice.ServiceInvoiceNo, '_blank');
        }
        $scope.close = function()
        {
            window.location.href =sessionStorage.getItem("BackLink");
        }

        //button hide
        $scope.btnAdd = $scope.btnEdit = $scope.btnDetails = $scope.btnDelete = $scope.btnImage=  $scope.btnPrintList= $scope.btnPriview = $scope.btnApprove = $scope.btnRevise = false;
        //button show

        $scope.CheckControll=function ()
        {
            debugger;
            if($scope.btnAdd == true  && !PermissionChecker('Add','ServiceInvoice',oAuthorizationRolesMapping))
            {$scope.btnAdd = false; }
            if($scope.btnEdit == true && !PermissionChecker('Edit','ServiceInvoice',oAuthorizationRolesMapping))
            {$scope.btnEdit = false;$scope.btnUpdate = true;}
            if($scope.btnView == true && !PermissionChecker('View','ServiceInvoice',oAuthorizationRolesMapping))
            {$scope.btnView = false;}
            if($scope.btnApprove == true && !PermissionChecker('Approved','ServiceInvoice',oAuthorizationRolesMapping))
            {$scope.btnApprove = false;}
            if($scope.btnRevise == true && !PermissionChecker('Revise','ServiceInvoice',oAuthorizationRolesMapping))
            {$scope.btnRevise = false;}
            if($scope.btnDelete == true && !PermissionChecker('Delete','ServiceInvoice',oAuthorizationRolesMapping))
            {$scope.btnDelete = false;}
            if($scope.btnIssue == true && !PermissionChecker('Issued','ServiceInvoice',oAuthorizationRolesMapping))
            {$scope.btnIssue = false;}
            if($scope.btnReceive == true && !PermissionChecker('Received','ServiceInvoice',oAuthorizationRolesMapping))
            {$scope.btnReceive = false;}
            if($scope.btnDelivered == true && !PermissionChecker('Received','ServiceInvoice',oAuthorizationRolesMapping))
            {$scope.btnReceive = false;}
            if($scope.btnUndoApprove == true && !PermissionChecker('UndoRequest','ServiceInvoice',oAuthorizationRolesMapping))
            {$scope.btnUndoApprove = false;}
            if($scope.btnCancel == true && !PermissionChecker('Cancel','ServiceInvoice',oAuthorizationRolesMapping))
            {$scope.btnCancel = false;}

            if(PermissionChecker('Add','ServiceInvoice',oAuthorizationRolesMapping)){$scope.btnAdd =$scope.btnImage = true; }
            if(PermissionChecker('Preview','ServiceInvoice',oAuthorizationRolesMapping)){$scope.btnPriview = true;}
            if(PermissionChecker('Print','ServiceInvoice',oAuthorizationRolesMapping)){$scope.btnPrintList = true;}
        }

        if(PermissionChecker('Add','ServiceInvoice',oAuthorizationRolesMapping)){$scope.btnAdd =$scope.btnImage = true; }
        if(PermissionChecker('Edit','ServiceInvoice',oAuthorizationRolesMapping)){$scope.btnEdit = true;}
        if(PermissionChecker('View','ServiceInvoice',oAuthorizationRolesMapping)){$scope.btnView = true;}
        if(PermissionChecker('Delete','ServiceInvoice',oAuthorizationRolesMapping)){$scope.btnDelete = true;}
        if(PermissionChecker('Preview','ServiceInvoice',oAuthorizationRolesMapping)){$scope.btnPriview = true;}
        if(PermissionChecker('Print','ServiceInvoice',oAuthorizationRolesMapping)){$scope.btnPrintList = true;}
        if(PermissionChecker('Print','ServiceInvoice',oAuthorizationRolesMapping)){$scope.btnXLList = true;}
        if(PermissionChecker('Edit','ServiceInvoice',oAuthorizationRolesMapping)){$scope.btnAttachment = true;}
        if(PermissionChecker('Approve','ServiceInvoice',oAuthorizationRolesMapping)){$scope.btnApprove = true;}
        if(PermissionChecker('Revise','ServiceInvoice',oAuthorizationRolesMapping)){$scope.btnRevise = true;}

    });

    CInvoiceapp.controller('ModalInstanceCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) {

        $(document).ready(function()
        {
            $('.date-container').datepicker({
                format: "dd M yyyy",
                calendarWeeks: true,
                autoclose: true,
                todayHighlight: true
            });
        });

        $scope.Operation=obj.Operation;
        debugger;
        $scope.btnApprove= $scope.btnDelivered = $scope.btnReceive= $scope.btnCancel= false;
        if($scope.Operation=="Approve")
        {
            $scope.btnApprove=true;
            $scope.lblDateTime="Rcv Date: ";
            $scope.Date_disabled= true;
            //angular.element('#txtDateTime').datetimebox('setValue', icsdatetimeformat(new Date()));
        }
        else if($scope.Operation=="Receive")
        {
            $scope.btnReceive=true;
            $scope.lblDateTime="Receive Date: ";
            var DateTIme= document.getElementById('txtDateTime');//angular.element('#txtDateTime');
            //DateTIme.datetimebox('setValue', icsdatetimeformat(new Date()));
        }
        else if($scope.Operation=="Delivered")
        {
            $scope.lblDateTime="Delivered Date: ";
            $scope.btnDelivered =true;
        }
        else if($scope.Operation=="Cencel")
        {
            $scope.lblDateTime="Rcv Date: ";
            $scope.btnCancel= true;
            $scope.Date_disabled= true;
            //$('#txtDateTime').datetimebox('setValue', icsdatetimeformat(new Date(obj.ServiceInvoice.RcvDateTimeSt)));
        }
        $scope.ServiceInvoice = obj.ServiceInvoice;

        $scope.Approve= function () {

            var oServiceInvoice=$scope.ServiceInvoice;
            oServiceInvoice.nRequest=1; // 1: Approve
            oServiceInvoice.Remarks=$scope.ServiceInvoice.Comments;

            $http.post(sessionStorage.getItem('BaseAddress')+'/ServiceInvoice/UpdateStatus', JSON.stringify(oServiceInvoice)).then(
                            function (response) {
                                if (jQuery.parseJSON(response.data) == 'Approved')
                                {
                                            alert("Successfully Approved.");
                                            $scope.ServiceInvoice.InvoiceStatus=2;
                                            $scope.ServiceInvoice.InvoiceStatusSt="Approved";
                                            $uibModalInstance.close($scope.ServiceInvoice);
                                }
                                else
                                {
                                    alert(jQuery.parseJSON(response.data));
                                }
                            },
                            function (response) { alert(jQuery.parseJSON(response.data)); }
                        );
        };

        $scope.Close= function () {
            $uibModalInstance.close($scope.ServiceInvoice);
        };

    });

    </script>
