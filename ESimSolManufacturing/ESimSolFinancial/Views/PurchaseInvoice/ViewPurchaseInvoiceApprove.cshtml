<html>
@{
    ViewBag.Title = "View Purchase Invoice";
}
<body>
    @model ESimSol.BusinessObjects.PurchaseInvoice
    <div class="menuMainCollectionTable" id="divPurchaseInvoice" class="easyui-panel" title="Add  Invoice" style="font-family:Tahoma; height:100%; width:100%">
        <div style="width:100%; height:35%;text-align:center">
            <fieldset style="height:90%">
                <legend style="font-weight: bold"> Invoice Informations : </legend>
                <table border="0" cellspacing="1" cellpadding="1" style="font-size:11px; font-weight:bold" width="100%">
                    <tr>
                        <td style="width:10%; text-align:right">
                            Invoice Type
                        </td>
                        <td style="width:13%; text-align:left;">
                            <select id="cboInvoiceType" onchange="InvoiceTypeChange();" style=" width:100%;"></select>
                        </td>
                        <td style="width:7%; text-align:right;">
                            Reference
                        </td>
                        <td style="width:13%; text-align:left;">
                            <select id="cboReferenceType" onchange="ReferenceChange();" style=" width:98%;"></select>
                        </td>
                        <td style="width:9%; text-align:right;">
                            Invoice Date
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:96%;" id="txtInvoiceDate" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                        <td style="width:10%; text-align:right;">
                            <input type="text" id="txtBusinessUnit" placeholder="B Unit" style="width:50%;" />&nbsp;
                        </td>
                        <td style="width:25%;">
                            <table border="0" cellspacing="0" cellpadding="0" style="width:98%">
                                <tr>
                                    <td style="width:25%">
                                        <input type="text" id="txtArea" placeholder="Area" style="width:99%;" />
                                    </td>
                                    <td style="width:25%">
                                        <input type="text" id="txtZone" placeholder="Zone" style="width:99%;" />
                                    </td>
                                    <td style="width:25%">
                                        <input type="text" id="txtSite" placeholder="Site" style="width:99%;" />
                                    </td>
                                    <td style="width:25%">
                                        <input type="text" id="txtDept" placeholder="Dept" style="width:99%;" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right">
                            Vendor Name
                        </td>
                        <td colspan="3" style="width:33%; text-align:left;">
                            <input type="text" style="width:82%; text-align:left" id="txtVendorName" />
                            <input type="button" value="Pick" style="width:15%" id="btnPickVendor" />
                        </td>
                        <td style="width:9%; text-align:right;">
                            C. Person
                        </td>
                        <td style="width:13%; text-align:left;">
                            <select id="cboSCPerson" style="width:98%;"></select>
                        </td>
                        <td style="width:10%; text-align:right;">
                            Product Name
                        </td>
                        <td style="width:25%;">
                            <input type="text" id="txtProductName" placeholder="Product" style="width:97.5%;" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right">
                            PO No
                        </td>
                        <td colspan="3" style="width:33%; text-align:left;">
                            <input type="text" style="width:82%; text-align:left" id="txtPONo" />
                            <input type="button" value="Pick" style="width:15%" id="btnPickPO" />
                        </td>
                        <td style="width:9%; text-align:right;">
                            PO Date
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:96%;" id="txtPODate" class="easyui-datebox" disabled="disabled" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                        <td style="width:10%; text-align:right;">
                            PO Amount
                        </td>
                        <td style="width:25%;">
                            <table border="0" cellspacing="0" cellpadding="0" style="width:98%">
                                <tr>
                                    <td style="width:35%">
                                        <input type="text" style="width:90%; text-align:right" id="txtPOAmount" disabled="disabled" />
                                    </td>
                                    <td style="width:30%; text-align:right">
                                        Bill Amount
                                    </td>
                                    <td style="width:35%">
                                        <input type="text" style="width:98%; text-align:right" id="txtBillAmount" />
                                    </td>
                                </tr>
                            </table>

                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right">
                            Invoice No
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:95%; text-align:left" id="txtInvoiceNo" disabled="disabled" />
                        </td>
                        <td style="width:7%; text-align:right;">
                            Bill NO
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:94%; text-align:left" id="txtBILLNo" />
                        </td>
                        <td style="width:9%; text-align:right;">
                            Bill  Date
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:96%;" id="txtBillDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                        <td style="width:10%; text-align:right;">
                            Currency
                        </td>
                        <td style="width:25%;">
                            <table border="0" cellspacing="0" cellpadding="0" style="width:98%">
                                <tr>
                                    <td style="width:35%">
                                        <select id="cboCurrency" style="width:99%;" onchange="CurrencyChange(true);"></select>
                                    </td>
                                    <td style="width:30%; text-align:right">
                                        C. Rate
                                    </td>
                                    <td style="width:35%">
                                        <input type="text" style="width:98%; text-align:left" id="txtConvertionRate" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right">
                            Payment Term
                        </td>
                        <td colspan="3" style="width:33%; text-align:left;">
                            <input type="text" style="width:71%; text-align:left" id="txtPaymentTerm" />
                            <input type="button" id="btnCPTerm" onclick="CleanPaymentTerm()" value="C" style="width:10%" />
                            <input type="button" value="Pick" style="width:15%" id="btnPickPaymentTerm" />
                        </td>
                        <td style="width:9%; text-align:right;">
                            Maturity Date
                        </td>
                        <td style="width:13%; text-align:left;">
                            <input type="text" style="width:99%;" id="txtMaturityDate" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                        <td style="width:10%; text-align:right;">
                            Batch No
                        </td>
                        <td style="width:25%;">
                            <select id="cboBatchNo" style="width:99.5%;"></select>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right">
                            Remarks
                        </td>
                        <td colspan="5" style="width:55%; text-align:left;">
                            <input type="text" style="width:98%; text-align:left" id="txtNote" />
                        </td>
                        <td style="width:10%; text-align:right;">
                            User Name
                        </td>
                        <td style="width:25%;">
                            <input type="text" style="width:98%; text-align:left" id="txtUserName" disabled="disabled" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

        <div style="width:100%;height:54%;" class="easyui-tabs" id="tabPurchaseInvoice">
            <div title="Item Description" style="height:95%;">
                <table id="tblPurchaseInvoiceDetail" class="easyui-datagrid" style="width:100%;height:90%;" fitcolumns="true" singleselect="true" rownumbers="true" pagination="false" autorowheight="false"
                       data-options="toolbar: '#toolbarPurchaseOrderDetail'"></table>
                <div id="toolbarPurchaseOrderDetail">
                    <input type="text" id="txtProduct_Item" style="width:180px;" placeholder="Type name & Press enter" />&nbsp;
                    <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                    <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                    <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh </a>
                </div>
                <table border="0" cellpadding="0" cellspacing="0">
                    <tr>
                        <td style="width:780px;  text-align:right;font-weight:bold;"></td>
                        <td style="width:100px;  text-align:right;font-weight:bold;">Total:</td>
                        <td style="width:120px; text-align:right; font-weight:bold;"><label id="lblTotalValue">0</label>  </td>
                    </tr>
                </table>
            </div>
            <div title="Distribution" style="width:100%; height:92%">
                <div style="width:116%; margin-top:4px">
                    <table id="tblVoucherDetailHeader" class="tablebordaer" cellpadding="0" cellspacing="0" style="width:100%">
                        <tr>
                            <td style="width:3%; text-align:left">Del</td>
                            <td style="width:3%; text-align:center">Dr/Cr</td>
                            <td style="width:5%; text-align:center">Busi Code</td>
                            <td style="width:5%; text-align:center">Area Code</td>
                            <td style="width:5%; text-align:center">Zonal Code</td>
                            <td style="width:5%; text-align:center">Site Code</td>
                            <td style="width:6%; text-align:center">Product Code</td>
                            <td style="width:5%; text-align:center">Dept Code</td>
                            <td style="width:5%; text-align:center">Ledger Code</td>
                            <td style="width:5%; text-align:center">Sub Ledger</td>
                            <td style="width:13%; text-align:center">Accounts</td>
                            <td style="width:12%; text-align:center">Narrations</td>
                            <td style="width:7%; text-align:right">Debit<span class="lblCurrency"></span></td>
                            <td style="width:7%; text-align:right">Credit<span class="lblCurrency"></span></td>
                            <td style="width:7%; text-align:right">Debit<span class="lblBaseCurrency"></span></td>
                            <td style="width:7%; text-align:right">Credit<span class="lblBaseCurrency"></span></td>
                        </tr>
                    </table>

                    <div class="tablebordaer" id="divVoucherDetails" style="height:150px; width:99.80%; overflow:auto">
                        <table class="tablebordaer" id="tblVoucherDetail" border="0" cellpadding="0" cellspacing="0"></table>
                    </div>
                    <div style="width:100%">
                        <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                            <tr>
                                <td style="width:72%; text-align:right; font-size:12px; font-weight:bold"></td>
                                <td colspan="4" style="width:28%; text-align:right; font-size:12px; font-weight:bold"><hr /></td>
                            </tr>
                            <tr>
                                <td style="width:72%; text-align:left; font-size:10px; font-weight:bold"></td>
                                <td style="width:7%; text-align:right; font-size:11px; font-weight:bold"><span style="margin-right:2px;"></span><label id="lblTotalDebitAmount">0.00</label></td>
                                <td style="width:7%; text-align:right; font-size:11px; font-weight:bold"><span style="margin-right:2px;"></span><label id="lblTotalCreditAmount"> 0.00</label>&nbsp;&nbsp;</td>
                                <td style="width:7%; text-align:right; font-size:11px; font-weight:bold"><span style="margin-right:2px;"></span><label id="lblBCTotalDebitAmount">0.00</label></td>
                                <td style="width:7%; text-align:right; font-size:11px; font-weight:bold"><span style="margin-right:2px;"></span><label id="lblBCTotalCreditAmount"> 0.00</label>&nbsp;&nbsp;</td>
                            </tr>
                            <tr>
                                <td style="width:72%; text-align:right; font-size:12px; font-weight:bold"></td>
                                <td colspan="4" style="width:28%; text-align:right; font-size:12px; font-weight:bold"><hr /><hr /></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
            <div title="Landing Cost" style="height:95%;">
                <table id="tblLandingCost" class="easyui-datagrid" style="width:100%;height:90%;" fitcolumns="true" singleselect="true" rownumbers="true" pagination="false" autorowheight="false" data-options="toolbar: '#toolbarLandingCost'">
                    <thead>
                        <tr>
                            <th field="LCNo" width="120" align="left"> LC No </th>
                            <th field="ShipmentDateSt" width="100" align="left">Shipment Date</th>
                            <th field="InvoiceNo" width="120" align="left">Invoice No</th>
                            <th field="InvoiceDateSt" width="100" align="left">Invoice Date</th>
                            <th field="CostHeadCode" width="80" align="left">Code</th>
                            <th field="CostHeadName" width="150" align="left">Cost Head</th>
                            <th field="Remarks" width="150" align="left">Remarks</th>
                            <th field="AmountInString" width="120" align="right">Amount</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbarLandingCost">
                    <input id="txtLCNo" type="text" style="width:120px; margin-top:2px" placeholder="LC No" />&nbsp;<input id="txtLandingInvoiceNo" type="text" style="width:120px; margin-top:2px" placeholder="Invoice No" />&nbsp;<input id="txtCostHead" type="text" style="width:150px; margin-top:2px" placeholder="Cost Head" /> <input id="txtRemarks" type="text" style="width:150px; margin-top:2px" placeholder="Remarks" /> Amount : <input id="txtCostHeadAmount" type="text" style="width:100px; margin-top:2px; text-align:right" />                    
                    <a id="btnLandingCostRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh </a>
                </div>
                <table border="0" cellpadding="0" cellspacing="0">
                    <tr>
                        <td style="width:780px;  text-align:right;font-weight:bold;"></td>
                        <td style="width:100px;  text-align:right;font-weight:bold;">Total:</td>
                        <td style="width:120px; text-align:right; font-weight:bold;"><label id="lblLandingCost">0</label>  </td>
                    </tr>
                </table>
            </div>
        </div>

        <div style="width:100%; height:8%">
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="0" cellpadding="0" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:60%; text-align:right">
                            <div style="width: 95%;margin: 0 auto;text-align: center;font-size: 15px; float: left;">
                                <span class="lblToolTip"></span>
                            </div>
                        </td>
                        <td style="width: 15%;text-align:right;">
                            <a id="btnViewVoucher" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View Voucher</a>
                        </td>
                        <td style="width: 15%;text-align:right;">
                            <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true">Approve</a>
                        </td>
                        <td style="width: 10%;text-align:right;">
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

</body>
</html>


<style type="text/css">
    .tablebordaer {
        border: 1px solid black;
    }

    #tblVoucherDetail td {
        border-left: 1px solid #D8D8D8;
        border-bottom: 1px solid #D8D8D8;
    }

    #tblVoucherDetailHeader td {
        border-left: 1px solid black;
    }

    .highlight {
        background-color: #CFB53B !important;
        color: white !important;
    }

    .textboxstyle {
        background-color: black !important;
        color: white !important;
        border: none !important;
        font-weight: bold !important;
    }

    .textboxstyle2 {
        background-color: #CFB53B !important;
        color: white !important;
        border: none !important;
    }

    .delClass, .debitcreditclass, .bcodeclass, .acodeclass, .zcodeclass, .scodeclass, .pcodeclass, .dcodeclass, .ahcodeclass, .cccodeclass, .accountcodeclass, .narrationclass {
        border: none !important;
    }

    .debitclass, .creditclass, .bcdebitclass, .bccreditclass {
        border: none !important;
        text-align: right !important;
    }

    .tableclass tr td {
        background-color: white !important;
    }

    .tableclass tr:hover td {
        background-color: #CFB53B !important;
        color: white !important;
    }
</style>



<script type="text/javascript">
    var _oPurchaseInvoice=null;
    var _sBaseAddress="";
    var _sPurchaseInvoiceHeader="";
    var _oPIInvoiceTypeObjs = [];
    var _oInvoiceReferenceTypeObj=[];
    var _oCurrencys = [];
    var _oVoucherBatchs = [];
    var _nQty=0;
    var _nMenuid=0;
    var _nInputBoxIndex=-1;
    var _sInputBoxClass='';
    var _sInvoiceBackToLink="";
    var _oPurchaseLC =null;
    var _oInvoice =null;
    var _oLandingCostHead= null;
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.MenuID]));
        _oPurchaseInvoice =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oPIInvoiceTypeObjs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.PIInvoiceTypeObjs));
        _oCurrencys= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        @*_oVoucherBatchs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.VoucherBatchs));*@
        _oInvoiceReferenceTypeObj= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.InvoiceReferenceTypeObj));
        var oCompany= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));
        var oVouchers=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.Vouchers));
        sessionStorage.setItem("Vouchers",JSON.stringify(oVouchers));

        $('#txtBillAmount').icsCurrencyBox();
        $('#txtConvertionRate').icsCurrencyBox();
        $('#txtCostHeadAmount').icsCurrencyBox();

        $('#cboCurrency').data('Currencys', _oCurrencys);
        $('#divPurchaseInvoice').data('Company', oCompany);
                
        _sPurchaseInvoiceHeader=sessionStorage.getItem("PurchaseInvoiceHeader");
        $('#divPurchaseInvoice').panel({ title:_sPurchaseInvoiceHeader});
        document.getElementById('btnApprove').style.display = 'none';        
        InitializeEvent();
        RemakeGrid(_oPurchaseInvoice.VDObjs);
        RefreshSummery();
        InitializeDistributionEvent();
        RefreshControl();
        _sInvoiceBackToLink=sessionStorage.getItem("InvoiceBackTo");
        $('#divPurchaseInvoice input,select').prop('disabled',true);
    });

    function MakeInvoiceDetailTable(nReferenceType,nInvoiceType)
    {
        //InvoiceType: Standard = 1, Advance = 2, Recurring = 3
        //ReferenceType : Open = 1, PO = 2, Import = 3
        var tblColums=[];
        var oColumn=null;

        if((nInvoiceType === 1 && nReferenceType===1) || (nInvoiceType === 2 && nReferenceType===1))
        {
            $("#txtBillAmount" ).prop( "disabled", false );
            oColumn= { field :"ProductCode", title:"Item Code", width:"100"}; tblColums.push(oColumn);
            oColumn= { field :"ProductName", title:"Item Name", width:"500"}; tblColums.push(oColumn);
            oColumn= { field :"Qty", title:"Bill Qty", width:"120", align: "right", editor: {type:'numberbox',options:{ precision:2}},  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"UnitPrice", title:"Rate", width:"120", align: "right", editor: {type:'numberbox',options:{ precision:2}},  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"Amount", title:"Amount", width:"120", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
        }
        else if(nInvoiceType === 1 && nReferenceType===2)
        {
            $("#txtBillAmount" ).prop( "disabled", true );
            oColumn= { field :"ProductCode", title:"Item Code", width:"70"}; tblColums.push(oColumn);
            oColumn= { field :"ProductName", title:"Item Name", width:"120"}; tblColums.push(oColumn);
            oColumn= { field :"PODQty", title:"PO Qty", width:"60", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"YetToInvoiceQty", title:"Invoice Yet", width:"80", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"PODRate", title:"PO Rate", width:"60", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"PODAmount", title:"PO Amount", width:"80", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"AdvInvoice", title:"Advance", width:"60", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"GRNValue", title:"GRN", width:"60", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"Prevoius_InvoiceValue", title:"Alredy Invoice", width:"80", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"Qty", title:"Bill Qty", width:"70", align: "right", editor: {type:'numberbox',options:{ precision:2}},  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"UnitPrice", title:"Rate", width:"70", align: "right", editor: {type:'numberbox',options:{ precision:2}},  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"PayableAmount", title:"Payable Amt", width:"80", align: "right",editor: {type:'numberbox',options:{ precision:2}},  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"AdvanceSettle", title:"Adv Settle", width:"80", align: "right",editor: {type:'numberbox',options:{ precision:2}},  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"Amount", title:"Amount", width:"80", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
        }
        else if(nInvoiceType === 2 && nReferenceType===2)
        {
            $("#txtBillAmount" ).prop( "disabled", false );
            oColumn= { field :"ProductCode", title:"Item Code", width:"100"}; tblColums.push(oColumn);
            oColumn= { field :"ProductName", title:"Item Name", width:"400"}; tblColums.push(oColumn);
            oColumn= { field :"PODQty", title:"PO Qty", width:"100", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"PODRate", title:"PO Rate", width:"100", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"PODAmount", title:"PO Amount", width:"100", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"Prevoius_InvoiceValue", title:"Alredy Invoice", width:"120", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
            oColumn= { field :"Amount", title:"Amount", width:"120", align: "right",  formatter: function(value,row,index){ return formatPrice(value, null); }}; tblColums.push(oColumn);
        }
        $('#tblPurchaseInvoiceDetail').datagrid({ columns:[tblColums]});
    }

    function ReferenceChange(bIsComboChange)
    {
        var nReferenceType=parseInt($("#cboReferenceType").val());
        var nInvoiceType=parseInt($("#cboInvoiceType").val());
        if(nReferenceType===0 || nReferenceType===1)
        {
            $("#txtProductName" ).prop( "disabled", false );
            $("#txtBusinessUnit" ).prop( "disabled", false );
            $("#txtArea" ).prop( "disabled", false );
            $("#txtSite" ).prop( "disabled", false );
            $("#txtZone" ).prop( "disabled", false );
            $("#txtDept" ).prop( "disabled", false );
            $("#txtPONo" ).prop( "disabled", true );
            $("#btnPickPO" ).prop( "disabled", true );
            $("#btnAdd" ).show();
            $("#txtProduct_Item" ).show();

            $('#tabPurchaseInvoice').tabs('enableTab', 0);
            $('#tabPurchaseInvoice').tabs('enableTab', 1);
            $('#tabPurchaseInvoice').tabs('disableTab', 2);
            $('#tabPurchaseInvoice').tabs('select', 0);
        }
        else  if(nReferenceType===2)
        {
            $("#txtProductName" ).prop( "disabled", true );
            $("#txtBusinessUnit" ).prop( "disabled", true );
            $("#txtArea" ).prop( "disabled", true );
            $("#txtSite" ).prop( "disabled", true );
            $("#txtZone" ).prop( "disabled", true );
            $("#txtDept" ).prop( "disabled", true );
            $("#txtPONo" ).prop( "disabled", false);
            $("#btnPickPO" ).prop( "disabled", false );
            $("#txtVendorName" ).prop( "disabled", false );
            $("#txtPaymentTerm" ).prop( "disabled", false );
            $("#cboCurrency" ).prop( "disabled", false );
            $("#cboBatchNo" ).prop( "disabled", false );
            $("#txtNote" ).prop( "disabled", false );
            $("#cboSCPerson" ).prop( "disabled", false );
            $("#txtConvertionRate" ).prop( "disabled", false );
            $("#btnCPTerm" ).prop( "disabled", false );
            $("#btnAdd" ).hide();
            $("#txtProduct_Item" ).hide();            

            $('#tabPurchaseInvoice').tabs('enableTab', 0);
            $('#tabPurchaseInvoice').tabs('enableTab', 1);
            $('#tabPurchaseInvoice').tabs('disableTab', 2);
            $('#tabPurchaseInvoice').tabs('select', 0);
        }
        else if(nReferenceType===3)
        {
            $("#txtProductName" ).prop( "disabled", false );
            $("#txtBusinessUnit" ).prop( "disabled", false );
            $("#txtArea" ).prop( "disabled", false );
            $("#txtSite" ).prop( "disabled", false );
            $("#txtZone" ).prop( "disabled", false );
            $("#txtDept" ).prop( "disabled", false );

            $('#tabPurchaseInvoice').tabs('disableTab', 0);
            $('#tabPurchaseInvoice').tabs('disableTab', 1);
            $('#tabPurchaseInvoice').tabs('enableTab', 2);
            $('#tabPurchaseInvoice').tabs('select', 2);

            $("#txtBillAmount").prop( "disabled", true);
            $("#txtPONo" ).prop( "disabled", true);
            $("#btnPickPO" ).prop( "disabled", true);
        }

        if(bIsComboChange===true)
        {
            $("#txtPONo" ).val("");
            $("#txtPODate" ).val("");
            $("#txtPOAmount" ).val("");
        }

        _oPurchaseInvoice.InvoiceType=nInvoiceType;
        MakeInvoiceDetailTable(nReferenceType,nInvoiceType);
        RefreshList([]);
        editIndex=undefined;
    }

    function InvoiceTypeChange()
    {
        ReferenceChange();
    }

    $("#txtConvertionRate").keyup(function (e){
        ResetConversionRate();
    });

    function ResetConversionRate()
    {
        if($('#txtConvertionRate').val()===null || $('#txtConvertionRate').val()==="")
        {
            $('#txtConvertionRate').val(0);
        }
        var nCID = parseInt($('#cboCurrency').val());
        var nCRate = parseFloat($('#txtConvertionRate').val());
        var oVDObjs= $('#tblVoucherDetail').data('rows');
        if(oVDObjs!=null)
        {
            var nCRate = parseFloat($('#txtConvertionRate').val());
            for(var i=0; i<oVDObjs.length; i++)
            {
                oVDObjs[i].CID = nCID;
                oVDObjs[i].CRate = nCRate;
                oVDObjs[i].Amount = (oVDObjs[i].CAmount * nCRate)
                oVDObjs[i].BCDrAmount = (oVDObjs[i].DrAmount * nCRate)
                oVDObjs[i].BCCrAmount = (oVDObjs[i].CrAmount * nCRate)
            }
            RemakeGrid(oVDObjs);
            RefreshSummery();
        }
    }

    function CurrencyChange(bIsComboChange)
    {
        var oCompany= $('#divPurchaseInvoice').data('Company');
        var nCurrencyID = $("#cboCurrency").val();
        for(var i=0;i<_oCurrencys.length;i++)
        {
            if(parseInt(_oCurrencys[i].CurrencyID) == parseInt(nCurrencyID))
            {
                _oPurchaseInvoice.CurrencySymbol = _oCurrencys[i].Symbol;
                $(".lblCurrency").html("("+_oPurchaseInvoice.CurrencySymbol+")");
                if(parseInt(_oCurrencys[i].CurrencyID) === parseInt(oCompany.BaseCurrencyID))
                {
                    $('#txtConvertionRate').val(1);
                    $("#txtConvertionRate" ).prop( "disabled", true );
                }else{
                    if(bIsComboChange)
                    {
                        $('#txtConvertionRate').val(0.00);
                        $("#txtConvertionRate" ).prop( "disabled", false);
                    }
                }
                RefreshTotalAmount(false);
                break;
            }
        }
        ResetConversionRate();
    }

    function RefreshTooltip()
    {
        $('#txtBusinessUnit').tooltip({position: 'bottom',content: _oPurchaseInvoice.BUName,showEvent:'mouseenter'});
        $('#txtArea').tooltip({position: 'bottom',content: _oPurchaseInvoice.AreaName,showEvent:'mouseenter'});
        $('#txtZone').tooltip({position: 'bottom',content: _oPurchaseInvoice.ZoneName,showEvent:'mouseenter'});
        $('#txtSite').tooltip({position: 'bottom',content: _oPurchaseInvoice.SiteName,showEvent:'mouseenter'});
        $('#txtDept').tooltip({position: 'bottom',content: _oPurchaseInvoice.DeptName,showEvent:'mouseenter'});
    }

    function RefreshControl()
    {
        $('#txtInvoiceDate').datebox('setValue', _oPurchaseInvoice.DateofInvoiceSt);
        $('#txtMaturityDate').datebox('setValue', _oPurchaseInvoice.DateofMaturitySt);
        $('#txtBillDate').datebox('setValue', _oPurchaseInvoice.DateofBillSt);
        $('#txtBillAmount').val(formatPrice(_oPurchaseInvoice.Amount,2));
        $('#txtConvertionRate').val(formatPrice(_oPurchaseInvoice.ConvertionRate,2));

        $("#cboInvoiceType").icsLoadCombo({List: _oPIInvoiceTypeObjs,OptionValue: "Id",DisplayText: "Value"});
        $("#cboReferenceType").icsLoadCombo({List: _oInvoiceReferenceTypeObj,OptionValue: "id",DisplayText: "Value"});
        $("#cboCurrency").icsLoadCombo({List: _oCurrencys,OptionValue: "CurrencyID",DisplayText: "CurrencyName"});
        $("#cboBatchNo").icsLoadCombo({List: _oVoucherBatchs,OptionValue: "VoucherBatchID",DisplayText: "BatchNO"});

        if(_oPurchaseInvoice.BUID>0)
        {
            var txtBusinessUnit = document.getElementById("txtBusinessUnit");
            txtBusinessUnit.value = _oPurchaseInvoice.BUCode;
            txtBusinessUnit.style.color = "blue";
            txtBusinessUnit.style.fontWeight = "bold";
        }
        if(_oPurchaseInvoice.AreaID>0)
        {
            var txtArea = document.getElementById("txtArea");
            txtArea.value = _oPurchaseInvoice.AreaCode;
            txtArea.style.color = "blue";
            txtArea.style.fontWeight = "bold";
        }
        if(_oPurchaseInvoice.ZoneID>0)
        {
            var txtZone = document.getElementById("txtZone");
            txtZone.value = _oPurchaseInvoice.ZoneCode;
            txtZone.style.color = "blue";
            txtZone.style.fontWeight = "bold";
        }
        if(_oPurchaseInvoice.SiteID>0)
        {
            var txtSite = document.getElementById("txtSite");
            txtSite.value = _oPurchaseInvoice.SiteCode;
            txtSite.style.color = "blue";
            txtSite.style.fontWeight = "bold";
        }

        if(parseInt(_oPurchaseInvoice.DeptID)>0)
        {
            var txtDept = document.getElementById("txtDept");
            txtDept.value = _oPurchaseInvoice.DeptCode;
            txtDept.style.color = "blue";
            txtDept.style.fontWeight = "bold";
        }

        var txtProductName = document.getElementById("txtProductName");
        txtProductName.value = _oPurchaseInvoice.ProductName;
        txtProductName.style.color = "blue";
        txtProductName.style.fontWeight = "bold";

        var txtVendorName = document.getElementById("txtVendorName");
        txtVendorName.value = _oPurchaseInvoice.ContractorName;
        txtVendorName.style.color = "blue";
        txtVendorName.style.fontWeight = "bold";

        var txtPaymentTerm = document.getElementById("txtPaymentTerm");
        txtPaymentTerm.value = _oPurchaseInvoice.PaymentTermName;
        txtPaymentTerm.style.color = "blue";
        txtPaymentTerm.style.fontWeight = "bold";

        $("#txtPONo" ).val(_oPurchaseInvoice.PONo);
        $('#txtPODate').datebox('setValue', _oPurchaseInvoice.DateOfPOST);
        $("#txtPOAmount" ).val(_oPurchaseInvoice.POAmountSt);

        var oCompany= $('#divPurchaseInvoice').data('Company');
        $('#txtInvoiceNo').val(_oPurchaseInvoice.PurchaseInvoiceNo);
        $('#txtBILLNo').val(_oPurchaseInvoice.BillNo);
        $('#txtNote').val(_oPurchaseInvoice.Note);
        $('#cboInvoiceType').val(_oPurchaseInvoice.InvoiceTypeInInt);
        $('#cboReferenceType').val(_oPurchaseInvoice.RefTypeInt);


        MakeInvoiceDetailTable(_oPurchaseInvoice.RefTypeInt,_oPurchaseInvoice.InvoiceType);
        LoadContractPersonals(_oPurchaseInvoice.ContractorID);
        $('#cboCurrency').val(_oPurchaseInvoice.CurrencyID);
        $(".lblCurrency").html("("+_oPurchaseInvoice.CurrencySymbol+")");
        $(".lblBaseCurrency").html("("+oCompany.CurrencySymbol+")");
        $('#cboBatchNo').val(_oPurchaseInvoice.BatchID);
        // $("#txtBillAmount" ).prop( "disabled", true );
        if(_oPurchaseInvoice.PurchaseInvoiceDetails==null)
        {
            _oPurchaseInvoice.PurchaseInvoiceDetails=[];
        }
        if(_oPurchaseInvoice.RefTypeInt<1)
        {
            $("#btnAdd" ).show();
            $("#txtProduct_Item").show();
        }

        else if(_oPurchaseInvoice.RefTypeInt==1)
        {
            $("#btnAdd" ).show();
            $("#txtProduct_Item").show();
        }
        else if(_oPurchaseInvoice.RefTypeInt==2)
        {
            $("#btnAdd" ).hide();
            $("#txtProduct_Item" ).hide();
        }

        if(_sPurchaseInvoiceHeader=='View Invoice')
        {
            $("#txtBusinessUnit" ).prop( "disabled", true );
            $("#txtArea" ).prop( "disabled", true );
            $("#txtSite" ).prop( "disabled", true );
            $("#txtDept" ).prop( "disabled", true );
            $("#txtZone" ).prop( "disabled", true );
            $("#txtProductName" ).prop( "disabled", true );
            $("#txtVendorName" ).prop( "disabled", true );
            $("#txtPaymentTerm" ).prop( "disabled", true );
            $("#txtBILLNo" ).prop( "disabled", true );
            $("#cboInvoiceType" ).prop( "disabled", true );
            $("#cboReferenceType" ).prop( "disabled", true );
            $("#cboCurrency" ).prop( "disabled", true );
            $("#cboBatchNo" ).prop( "disabled", true );
            $("#txtNote" ).prop( "disabled", true );
            $("#cboSCPerson" ).prop( "disabled", true );
            $("#txtConvertionRate" ).prop( "disabled", true );
            $("#btnCPTerm" ).prop( "disabled", true );
            $("#btnPickPaymentTerm" ).prop( "disabled", true );
            $("#btnPickVendor" ).prop( "disabled", true );
            $("#btnAdd" ).hide();
            $("#btnDelete" ).hide();
            $("#btnRefresh" ).hide();            
            $("#btnApprove" ).hide();
        }
        else if(_sPurchaseInvoiceHeader=='Approve Invoice')
        {            
            $("#btnApprove" ).show();
        }
        if(_sPurchaseInvoiceHeader==='View Invoice' || _sPurchaseInvoiceHeader==='Approve Invoice')
        {
            var oVDObjs = $("#tblVoucherDetail").data('rows');
            if(oVDObjs!=null)
            {
                for(var nRowIndex=0; nRowIndex<oVDObjs.length; nRowIndex++)
                {
                    $(".delClass").eq(nRowIndex).prop('readonly', true);
                    $(".debitcreditclass").eq(nRowIndex).prop('readonly', true);
                    $(".bcodeclass").eq(nRowIndex).prop('readonly', true);
                    $(".acodeclass").eq(nRowIndex).prop('readonly', true);
                    $(".zcodeclass").eq(nRowIndex).prop('readonly', true);
                    $(".scodeclass").eq(nRowIndex).prop('readonly', true);
                    $(".pcodeclass").eq(nRowIndex).prop('readonly', true);
                    $(".dcodeclass").eq(nRowIndex).prop('readonly', true);
                    $(".ahcodeclass").eq(nRowIndex).prop('readonly', true);
                    $(".cccodeclass").eq(nRowIndex).prop('readonly', true);
                    $(".accountcodeclass").eq(nRowIndex).prop('readonly', true);
                    $(".narrationclass").eq(nRowIndex).prop('readonly', true);
                    $(".debitclass").eq(nRowIndex).prop('readonly', true);
                    $(".creditclass").eq(nRowIndex).prop('readonly', true);
                }
            }
        }
        CurrencyChange(false);
        ReferenceChange();
        if(parseInt(_oPurchaseInvoice.RefTypeInt)===3)
        {
            RefreshList([]);
            RefreshLandingCostList(_oPurchaseInvoice.PurchaseInvoiceDetails);
            RefreshLandingCostAmount();
        }
        else
        {
            RefreshList(_oPurchaseInvoice.PurchaseInvoiceDetails);
            RefreshLandingCostList([]);
            RefreshTotalAmount(false);
        }
        editIndex=undefined;
    }

    function ValidateInput(bIsApproved)
    {
        var nInvoiceType= parseInt($('#cboInvoiceType').val());
        if(nInvoiceType<=0)
        {
            alert("Please Select Invoice Type");
            $('#cboInvoiceType').focus();
            return false;
        }

        var nReferenceType=parseInt($('#cboReferenceType').val());
        if(nReferenceType<=0)
        {
            alert("Please Select Reference Type");
            $('#cboReferenceType').focus();
            return false;
        }

        if(nInvoiceType==2 && nReferenceType==1)
        {
            alert("Advance and Open invoice not possible");
            $('#cboReferenceType').focus();
            return false;
        }
        if(_oPurchaseInvoice.BUID<=0)
        {
            alert("Please Select Business Unit.(Invoice)");
            $('#txtBusinessUnit').focus();
            return false;
        }

        if($("#txtBillNo").val()=="")
        {
            alert("Please enter Bill No!");
            $('#txtBillNo').focus();
            return false;
        }

        if(parseInt(_oPurchaseInvoice.ContractorID) <=0)
        {
            alert("Please select Vendor!");
            $('#txtVendorName').focus();
            return false;
        }

        //if(parseInt($('#cboSCPerson').val()) <=0)
        //{
        //    alert("Please select Contact Person!");
        //    $('#cboSCPerson').focus();
        //    return false;
        //}

        var sBillDate = $('#txtBillDate').datebox('getValue');
        if(sBillDate === null || sBillDate ==="")
        {
            alert("Please select Bill Date!");
            $('#txtBillDate').focus();
            return false;
        }

        if(parseInt($('#cboCurrency').val()) <=0)
        {
            alert("Please select Currency!");
            $('#cboCurrency').focus();
            return false;
        }

        var sConvertionRate =  $('#txtConvertionRate').val();
        if(sConvertionRate===null || sConvertionRate=== "")
        {
            alert("Please Enter Conversion Rate!");
            $('#txtConvertionRate').focus();
            return false;
        }

        var nConvertionRate = icsRemoveComma(sConvertionRate);
        if(nConvertionRate<=0)
        {
            alert("Please Enter Conversion Rate!");
            $('#txtConvertionRate').focus();
            return false;
        }

        if(parseInt(_oPurchaseInvoice.PaymentTermID) <=0)
        {
            alert("Please Select Payment Term!");
            $('#txtPaymentTerm').focus();
            return false;
        }

        if(parseInt($('#cboBatchNo').val()) <=0)
        {
            alert("Please select Voucher Batch!");
            $('#cboBatchNo').focus();
            return false;
        }

        var sMaturityDate = $('#txtMaturityDate').datebox('getValue');
        if(sMaturityDate === null || sMaturityDate ==="")
        {
            alert("Please select Maturity Date!");
            $('#txtMaturityDate').focus();
            return false;
        }

        if(nReferenceType===2 && parseInt(_oPurchaseInvoice.POID)<=0)
        {
            alert("Invalid Order, please try again!");
            return false;
        }
        var sBillAmount =  $('#txtBillAmount').val();
        if(sBillAmount===null || sBillAmount === "")
        {
            alert("Please Enter Bill Amount!");
            $('#txtBillAmount').focus();
            return false;
        }
        var nBillAmount = parseFloat(icsRemoveComma(sBillAmount));
        if(nBillAmount<=0)
        {
            alert("Please Enter Bill Amount!");
            $('#txtBillAmount').focus();
            return false;
        }

        var oVDObjs=[];
        var oPIDetails = $('#tblPurchaseInvoiceDetail').datagrid('getRows');
        var oTempVDObjs= $("#tblVoucherDetail").data('rows');
        var oLandingLosts = $('#tblLandingCost').datagrid('getRows');
        if(oTempVDObjs!=null)
        {
            for(var i=0; i<oTempVDObjs.length;i++)
            {
                if(parseInt(oTempVDObjs[i].AHID)>0)
                {
                    oVDObjs.push(oTempVDObjs[i])
                }
            }
        }

        if(nReferenceType===3)
        {
            if(oLandingLosts.length<=0)
            {
                alert("Please Add Landing Cost");
                return false;
            }
            if(oPIDetails.length>0)
            {
                alert("Item Not Allow for Import Invoice!");
                return false;
            }
            if(oVDObjs.length>0)
            {
                alert("distribution not allow!");
                return false;
            }
        }
        else if(nReferenceType===2)
        {
            if(oPIDetails.length<=0)
            {
                alert("Please Add Invoice Detail!");
                return false;
            }
            if(oVDObjs.length>0)
            {
                alert("At a time distribution & item not allow!");
                return false;
            }
        }
        else
        {
            if(oPIDetails.length>0 && oVDObjs.length>0)
            {
                alert("At a time distribution & item not allow!");
                return false;
            }
            if(oPIDetails.length<=0 &&  oVDObjs.length<=0)
            {
                alert("Please enter item wise description or distribution!");
                return false;
            }
        }
            
        nBillAmount = parseFloat(nBillAmount.toFixed(2));
        if(oPIDetails.length>0)
        {
            var nTotalItemAmount=0;
            for(var i = 0;i<oPIDetails.length;i++)
            {
                if(nInvoiceType!=2){
                    if(parseFloat(oPIDetails[i].Qty)<=0)
                    {
                        alert("Qty should be Greater than 0 for "+oPIDetails[i].ProductName);
                        return false;
                    }
                    if(_oPurchaseInvoice.RefTypeInt==2 && parseFloat(oPIDetails[i].Qty)>parseFloat(oPIDetails[i].PODQty))
                    {
                        alert("Qty should be Less than  or Equla to Purchase Order Detail Qty for "+oPIDetails[i].ProductName);
                        return false;
                    }
                    if(_oPurchaseInvoice.RefTypeInt==2 && parseFloat(oPIDetails[i].UnitPrice)>parseFloat(oPIDetails[i].PODRate))
                    {
                        alert("Rate should be less than or equal to PO Rate for "+oPIDetails[i].ProductName);
                        return false;
                    }
                    if(parseFloat(oPIDetails[i].UnitPrice)<=0)
                    {
                        alert("Rate should be Greater than 0 for "+oPIDetails[i].ProductName);
                        return false;
                    }
                    nTotalItemAmount = nTotalItemAmount + (parseFloat(oPIDetails[i].UnitPrice)* parseFloat(oPIDetails[i].Qty));
                }else if(nInvoiceType===2){
                    if(parseFloat(oPIDetails[i].Amount)<=0)
                    {
                        alert("Amount should be Greater than 0 for "+oPIDetails[i].ProductName);
                        return false;
                    }
                    if(parseFloat(oPIDetails[i].Amount)>parseFloat(oPIDetails[i].PODAmount))
                    {
                        alert("Amount should be less than PO Amount: "+oPIDetails[i].PODAmount+" for "+oPIDetails[i].ProductName);
                        return false;
                    }
                    nTotalItemAmount = nTotalItemAmount + parseFloat(oPIDetails[i].Amount);
                }
            }
                        
            nTotalItemAmount = parseFloat(nTotalItemAmount.toFixed(2));
            var nGapAmount = parseFloat(nBillAmount) - parseFloat(nTotalItemAmount);
            nGapAmount = parseFloat(nGapAmount.toFixed(2));
            if(nGapAmount<0)
            {
                nGapAmount=nGapAmount*(-1);
            }
            if(nGapAmount>0.01)
            {
                alert("Item Wise Total Amount & Bill Amount must be equal!");
                return false;
            }        
        }

        if(oLandingLosts.length>0)
        {
            var nTotalLandingCost =0;
            for(var i = 0;i<oLandingLosts.length;i++)
            {
                if(parseFloat(oLandingLosts[i].Amount)<=0)
                {
                    alert("Invalid Amount for "+oPIDetails[i].CostHeadName);
                    return false;
                }
                nTotalLandingCost =nTotalLandingCost + parseFloat(oLandingLosts[i].Amount); 
            }

            nTotalLandingCost = parseFloat(nTotalLandingCost.toFixed(2));
            var nGapAmount = parseFloat(nBillAmount) - parseFloat(nTotalLandingCost);
            nGapAmount = parseFloat(nGapAmount.toFixed(2));
            if(nGapAmount<0)
            {
                nGapAmount=nGapAmount*(-1);
            }
            if(nGapAmount>0.01)
            {
                alert("Costhead Wise Total Amount & Bill Amount must be equal!");
                return false;
            }    
        }

        if(oVDObjs.length>0)
        {            
            var nDistributionAmount=0;
            for(var i=0; i<oVDObjs.length; i++)
            {
                if(oVDObjs[i].IsCCAply)
                {
                    if(parseInt(oVDObjs[i].CCID) <=0)
                    {
                        alert("Sub Ledger missing for "+oVDObjs[i].BName +": " +oVDObjs[i].AHName+"["+oVDObjs[i].AHCode+"]");
                        return false;
                    }
                }
                nDistributionAmount=nDistributionAmount+ parseFloat(oVDObjs[i].DrAmount)
            }

            nDistributionAmount = parseFloat(nDistributionAmount.toFixed(2));
            var nGapAmount = parseFloat(nBillAmount) - parseFloat(nDistributionAmount);
            nGapAmount = parseFloat(nGapAmount.toFixed(2));
            if(nGapAmount<0)
            {
                nGapAmount=nGapAmount*(-1);
            }

            if(nGapAmount>0.01)
            {
                alert("Distribution Amount & Debit Amount must be equal!");
                return false;
            }
        }
        return true;
    }

    function RefreshObject()
    {
        var oPurchaseInvoiceDetails =[];
        if(parseInt($('#cboReferenceType').val())===3)
        {
            oPurchaseInvoiceDetails = $('#tblLandingCost').datagrid('getRows');
        }
        else
        {
            oPurchaseInvoiceDetails = $('#tblPurchaseInvoiceDetail').datagrid('getRows');
        }

        var nBillAmount = icsRemoveComma($('#txtBillAmount').val());
        var oPurchaseInvoice= {
            PurchaseInvoiceID: _oPurchaseInvoice.PurchaseInvoiceID,
            PurchaseInvoiceNo: $('#txtInvoiceNo').val(),
            ContractorID: _oPurchaseInvoice.ContractorID,
            BillNo:$('#txtBILLNo').val(),
            DateofInvoice:$('#txtInvoiceDate').datebox('getValue'),
            DateofBill:$('#txtBillDate').datebox('getValue'),
            InvoiceTypeInInt:$('#cboInvoiceType').val(),
            RefTypeInt:$('#cboReferenceType').val(),
            POID:_oPurchaseInvoice.POID,
            CurrencyID:$('#cboCurrency').val(),
            DateofMaturity:$('#txtMaturityDate').datebox('getValue'),
            Note:$('#txtNote').val(),
            PaymentTermID:_oPurchaseInvoice.PaymentTermID,
            BUID:_oPurchaseInvoice.BUID,
            AreaID:_oPurchaseInvoice.AreaID,
            ZoneID:_oPurchaseInvoice.ZoneID,
            SiteID:_oPurchaseInvoice.SiteID,
            DeptID : _oPurchaseInvoice.DeptID,
            ProductID:_oPurchaseInvoice.ProductID,
            IsInventoryProduct:_oPurchaseInvoice.IsInventoryProduct,
            ContractorPersonalID:$('#cboSCPerson').val(),
            ConvertionRate:$('#txtConvertionRate').val(),
            Amount: nBillAmount,
            BatchID:$('#cboBatchNo').val(),
            PurchaseInvoiceDetails : oPurchaseInvoiceDetails,
            VoucherID :_oPurchaseInvoice.VoucherID,
            VDObjs : $("#tblVoucherDetail").data('rows'),
            Vouchers:_oPurchaseInvoice.Vouchers
        };
        return oPurchaseInvoice;
    }

    $("#btnViewVoucher").click(function (){
        var oVouchers=jQuery.parseJSON(sessionStorage.getItem("Vouchers"));
        if(!oVouchers || oVouchers.length<=0){return false;}
        else if(parseInt(oVouchers.length)===1){
            var oParam={
                OperationName:'View Voucher',
                Voucher:oVouchers[oVouchers.length-1]
            }
            var url =_sBaseAddress+ "/Voucher/ViewAutoVoucherDetails";
            var oVoucher = window.showModalDialog(url, oParam, 'dialogHeight:515px;dialogWidth:1000px;dialogLeft:230;dialogTop:70;center:yes;resizable:no;status:no;scroll:no');
        }
        else{
            var oParam={
                OperationName:'Auto Voucher List',
                Vouchers:oVouchers
            }
            var url =_sBaseAddress+ "/Voucher/ViewAutoVouchers";
            window.showModalDialog(url, oParam, 'dialogHeight:515px;dialogWidth:1000px;dialogLeft:230;dialogTop:70;center:yes;resizable:no;status:no;scroll:no');
        }
    });

    $("#btnApprove").click(function(){
        if(!ValidateInput(true)) return;
        var oPurchaseInvoice=RefreshObject();
        if(oPurchaseInvoice==null || oPurchaseInvoice.PurchaseInvoiceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        if(parseInt(oPurchaseInvoice.VoucherID)>0)
        {
            alert("Already Voucher Commit!");
            return;
        }
        if (!confirm("Confirm to Approve?")) return;
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/PurchaseInvoice/Approved",
            traditional: true,
            data:  JSON.stringify(oPurchaseInvoice),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                _oPurchaseInvoice = jQuery.parseJSON(data);
                if (_oPurchaseInvoice.ErrorMessage=="" ||_oPurchaseInvoice.ErrorMessage==null)
                {
                    alert("Data Saved sucessfully");
                    var oPurchaseInvoices =sessionStorage.getItem("PurchaseInvoices");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oPurchaseInvoices!=null)
                    {
                        oPurchaseInvoices = jQuery.parseJSON(oPurchaseInvoices);
                    }
                    else
                    {
                        oPurchaseInvoices=[];
                    }
                    if(nIndex!=-1)
                    {
                        oPurchaseInvoices[nIndex]=_oPurchaseInvoice;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oPurchaseInvoices.length);
                        oPurchaseInvoices.push(_oPurchaseInvoice);
                    }
                    sessionStorage.setItem("PurchaseInvoices", JSON.stringify(oPurchaseInvoices));
                    window.location.href = _sInvoiceBackToLink;//_sBaseAddress+  "/PurchaseInvoice/ViewPurchaseInvoicesApprove?menuid="+_nMenuid;

                }
                else {
                    alert(_oPurchaseInvoice.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });
        
    $("#btnClose").click(function(){
        window.location.href =_sInvoiceBackToLink;
    });

    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            window.location.href =_sInvoiceBackToLink;
        }
    });

    function LandingCostValidation()
    {
        if(_oPurchaseLC===null || parseInt(_oPurchaseLC.PurchaseLCID)<=0)
        {
            alert("Please Select an LC!");
            $('#txtLCNo').focus();
            return false;
        }
        if(_oLandingCostHead===null || parseInt(_oLandingCostHead.ACCostCenterID)<=0)
        {
            alert("Please Select an Cost Head!");
            $('#txtCostHead').focus();
            return false;
        }
        var stxtCostHeadAmount =  $('#txtCostHeadAmount').val();
        if( stxtCostHeadAmount===null || stxtCostHeadAmount==="")
        {
            alert("Please enter Amount!");
            $('#txtCostHeadAmount').focus();
            return false;
        }
        var nCostHeadAmount = parseFloat(icsRemoveComma(stxtCostHeadAmount));
        if( nCostHeadAmount<=0)
        {
            alert("Please enter Amount!");
            $('#txtCostHeadAmount').focus();
            return false;
        }
        var nInvoiceID = 0;
        if(_oInvoice!=null)
        {
            nInvoiceID = parseInt(_oInvoice.PurchaseInvoiceLCID);
        }
        var oLandingCosts = $('#tblLandingCost').datagrid('getRows');
        for(var i=0; i<oLandingCosts.length; i++)
        {
            if(parseInt(oLandingCosts[i].InvoiceID)=== parseInt(nInvoiceID) && parseInt(oLandingCosts[i].LandingCostHeadID)=== parseInt(_oLandingCostHead.ACCostCenterID))
            {
                alert("Your selected Cost Head Already Exists!");
                $('#txtCostHead').focus();
                return false;
            }
        }
        return true;
    }

    function RefreshLandingCostObject()
    {
        var stxtCostHeadAmount =  $('#txtCostHeadAmount').val();
        var nCostHeadAmount = parseFloat(icsRemoveComma(stxtCostHeadAmount));
        var nInvoiceID =0, sInvoiceNo='', sInvoiceDateSt='';

        if(_oInvoice!=null)
        {
            nInvoiceID = parseInt(_oInvoice.PurchaseInvoiceLCID);
            sInvoiceNo = _oInvoice.PurchaseInvoiceLCNo;
            sInvoiceDateSt = _oInvoice.PLCDateInString;
        }

        var oPurchaseInvoiceDetail = {
            PurchaseInvoiceDetailID : 0,
            PurchaseInvoiceID : parseInt(_oPurchaseInvoice.PurchaseInvoiceID),
            Amount : parseFloat(nCostHeadAmount),
            AmountInString : stxtCostHeadAmount,
            LCID : parseInt(_oPurchaseLC.PurchaseLCID),
            InvoiceID : parseInt(nInvoiceID),
            LandingCostHeadID : parseInt(_oLandingCostHead.ACCostCenterID),
            Remarks : $('#txtRemarks').val(),
            CostHeadCode : _oLandingCostHead.Code,
            CostHeadName : _oLandingCostHead.Name,
            LCNo : _oPurchaseLC.PurchaseLCNO,
            ShipmentDateSt : _oPurchaseLC.PurchaseLCDateInString,
            InvoiceNo : sInvoiceNo,
            InvoiceDateSt : sInvoiceDateSt
        };
        return oPurchaseInvoiceDetail;
    }

    function RefreshLandingCostAmount()
    {
        var oPIDetails = $('#tblLandingCost').datagrid('getRows');
        var nTotalValue= 0;
        for(var i = 0; i<oPIDetails.length;i++)
        {
            nTotalValue+=parseFloat(oPIDetails[i].Amount);
        }
        document.getElementById('lblLandingCost').innerHTML = formatPrice(nTotalValue,0);
        _oPurchaseInvoice.Amount = nTotalValue;

        $('#txtBillAmount').val(formatPrice(nTotalValue,0));
    }

    $("#btnLandingCostRefresh").click(function(){
        var oPIDetails= $("#tblLandingCost").datagrid("getRows");
        RefreshLandingCostList(oPIDetails);
    });

    function RefreshLandingCostList(oPIDetails)
    {
        var data = oPIDetails;
        data = { "total": "" + data.length + "", "rows": data };
        $("#tblLandingCost").datagrid("loadData", data);

    }

    //Pick LC
    $("#txtLCNo").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtLCNo').val()===null || $('#txtLCNo').val()==="")
            {
                alert("Please enter with LC No!");
                return;
            }

            var oPurchaseLC = { PurchaseLCNO: $('#txtLCNo').val() };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oPurchaseLC,
                ControllerName: "PurchaseLC",
                ActionName: "GetsByLCNo",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].PurchaseLCID > 0) {
                        var tblColums = []; var oColumn = { field: "PurchaseLCNO", title: "LC No", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "SupplierName", title: "Vendor Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "PurchaseLCDateInString", title: "LC Date", width: 100, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winLC',
                            winclass: 'clsLC',
                            winwidth: 420,
                            winheight: 460,
                            tableid: 'tblLC',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'PurchaseLCNO',
                            windowTittle: 'Purchase LC(s)'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
        if (code == 8) //backspace=8
        {
            var txtLCNo = document.getElementById("txtLCNo");
            txtLCNo.style.color = "black";
            txtLCNo.style.fontWeight = "normal";
            _oPurchaseLC=null;
        }
    });

    //Pick Invoice
    $("#txtLandingInvoiceNo").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtLandingInvoiceNo').val()===null || $('#txtLandingInvoiceNo').val()==="")
            {
                alert("Please enter with Invoice No!");
                return;
            }

            var oPurchaseInvoiceLC = { PurchaseInvoiceLCNo: $('#txtLandingInvoiceNo').val() };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oPurchaseInvoiceLC,
                ControllerName: "PurchaseInvoiceLC",
                ActionName: "GetsByInvoiceNo",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].PurchaseInvoiceLCID > 0) {
                        var tblColums = []; var oColumn = { field: "PurchaseInvoiceLCNo", title: "Invoice No", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "SupplierName", title: "Vendor Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "PLCDateInString", title: "Invoice Date", width: 100, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winInvoice',
                            winclass: 'clsInvoice',
                            winwidth: 420,
                            winheight: 460,
                            tableid: 'tblInvoice',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'PurchaseInvoiceLCNo',
                            windowTittle: 'Import Invoice(s)'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
        if (code == 8) //backspace=8
        {
            var txtLandingInvoiceNo = document.getElementById("txtLandingInvoiceNo");
            txtLandingInvoiceNo.style.color = "black";
            txtLandingInvoiceNo.style.fontWeight = "normal";
            _oInvoice=null;
        }
    });

    //Pick CostHead
    $("#txtCostHead").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtCostHead').val()===null || $('#txtCostHead').val()==="")
            {
                alert("Please enter with Cost Head!");
                return;
            }

            var oACCostCenter = { AccountHeadID :0, NameCode : $('#txtCostHead').val() };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oACCostCenter,
                ControllerName: "ACCostCenter",
                ActionName: "GetsByName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ACCostCenterID > 0) {
                        var tblColums = []; var oColumn = { field: "Code", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Cost Head Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Description", title: "Remarks", width: 100, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winCostHead',
                            winclass: 'clsCostHead',
                            winwidth: 420,
                            winheight: 460,
                            tableid: 'tblCostHead',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'NameCode',
                            windowTittle: 'Landing Cost Head(s)'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
        if (code == 8) //backspace=8
        {
            var txtCostHead = document.getElementById("txtCostHead");
            txtCostHead.style.color = "black";
            txtCostHead.style.fontWeight = "normal";
            _oLandingCostHead=null;
        }
    });


    ////VProduct
    $("#txtVProducts").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var VProduct = { NameCode: $('#txtVProducts').val() };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: VProduct,
                ControllerName: "VProduct",
                ActionName: "GetsByCodeOrName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].VProductID > 0) {
                        var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width: 80, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Product Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winVProducts',
                            winclass: 'clsVProduct',
                            winwidth: 300,
                            winheight: 460,
                            tableid: 'tblVProducts',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'ProductName',
                            windowTittle: 'Product List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
    });

    $('#txtVProducts').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtProductName = document.getElementById("txtVProducts");
            txtProductName.value = '';
            txtProductName.style.color = "black";
            txtProductName.style.fontWeight = "normal";
            //_oPurchaseRequisitionDetail.ProductID = 0;
            //_oPurchaseRequisitionDetail.ProductCode = "";
            //_oPurchaseRequisitionDetail.ProductName = "";

        }
    });

    //Pick Business Unit
    $("#txtBusinessUnit").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oBusinessUnit = { NameCode: $('#txtBusinessUnit').val() };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oBusinessUnit,
                ControllerName: "BusinessUnit",
                ActionName: "GetsBUByCodeOrName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].BusinessUnitID > 0) {
                        var tblColums = []; var oColumn = { field: "Code", title: "Code", width: 60, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winBusinessUnit',
                            winclass: 'clsBusinessUnit',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblBusinessUnit',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'Business Unit List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
    });
    $('#txtBusinessUnit').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtBusinessUnit = document.getElementById("txtBusinessUnit");
            txtBusinessUnit.color = "black";
            txtBusinessUnit.style.fontWeight = "normal";
            _oPurchaseInvoice.BUID = 0;
            RefreshTooltip();
            _oPurchaseInvoice.BUName = '';
            _oPurchaseInvoice.BUCode = '';
        }
    });

    //Pick area
    $("#txtArea").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if(_oPurchaseInvoice.BUID<=0){alert("Please Select Business Unit");$('#txtBusinessUnit').focus();return;}
            var oLocation = { ParentID:1,LocCode:$('#txtArea').val(),BusinessUnitID:_oPurchaseInvoice.BUID};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsByParentID",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].LocationID > 0) {
                        var tblColums = []; var oColumn = { field: "LocCode", title: "Code", width: 60, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winArea',
                            winclass: 'clsArea',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblAreas',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Code',
                            windowTittle: 'Area List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
    });
    $('#txtArea').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtArea = document.getElementById("txtArea");
            txtArea.color = "black";
            txtArea.style.fontWeight = "normal";
            _oPurchaseInvoice.AreaID = 0;
            _oPurchaseInvoice.AreaName = '';
            _oPurchaseInvoice.AreaCode = '';
            RefreshTooltip();

        }
    });
    //Pick Zone
    $("#txtZone").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if(_oPurchaseInvoice.AreaID<=0){alert("Please Pick Area");$('#txtArea').focus();return;}
            var oLocation = { ParentID:_oPurchaseInvoice.AreaID,LocCode:$('#txtZone').val()};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsByParentID",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].LocationID > 0) {
                        var tblColums = []; var oColumn = { field: "LocCode", title: "Code", width: 60, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winZone',
                            winclass: 'clsZone',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblZones',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Code',
                            windowTittle: 'Zone List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
    });
    $('#txtZone').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtZone = document.getElementById("txtZone");
            txtZone.color = "black";
            txtZone.style.fontWeight = "normal";
            _oPurchaseInvoice.ZoneID = 0;
            RefreshTooltip();
            _oPurchaseInvoice.ZoneName = '';
            _oPurchaseInvoice.ZoneCode = '';
        }
    });

    //Pick Site
    $("#txtSite").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if(_oPurchaseInvoice.ZoneID<=0){alert("Please Pick Zone");$('#txtZone').focus();return;}
            var oLocation = { ParentID:_oPurchaseInvoice.ZoneID,LocCode:$('#txtSite').val()};
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsByParentID",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].LocationID > 0) {
                        var tblColums = []; var oColumn = { field: "LocCode", title: "Code", width: 60, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 90, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winSite',
                            winclass: 'clsSite',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblSites',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Code',
                            windowTittle: 'Site List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
    });
    $('#txtSite').keydown(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtSite = document.getElementById("txtSite");
            txtSite.color = "black";
            txtSite.style.fontWeight = "normal";
            _oPurchaseInvoice.SiteID = 0;
            RefreshTooltip();
            _oPurchaseInvoice.SiteName = '';
            _oPurchaseInvoice.SiteCode = '';
        }
    });

    //Pick Dept
    $("#txtDept").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var txtDept = $('#txtDept').val();
            if(txtDept===null || txtDept==="")
            {
                alert("Please Press Enter With Department Code OR Name!");
                return false;
            }
            var oDepartment = {
                NameCode : txtDept
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oDepartment,
                ControllerName: "Department",
                ActionName: "GetsByCodeOrName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (parseInt(response.objs[0].DepartmentID) > 0) {
                        var tblColums = []; var oColumn = { field: "Code", title: "Code", width: 60, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Department Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winDepartment',
                            winclass: 'clsDepartment',
                            winwidth: 500,
                            winheight: 420,
                            tableid: 'tblDepartment',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'NameCode',
                            windowTittle: 'Department List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else
                {
                    alert("Data Not Found!");
                }
            });
        }
    });

    $('#txtDept').keydown(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtDept = document.getElementById("txtDept");
            txtDept.color = "black";
            txtDept.style.fontWeight = "normal";
            _oPurchaseInvoice.DeptID = 0;
            _oPurchaseInvoice.DeptName = '';
            _oPurchaseInvoice.DeptCode = '';
            RefreshTooltip();

        }
    });

    $("#txtProductName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {

            var VProduct = { NameCode: $('#txtProductName').val() };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: VProduct,
                ControllerName: "VProduct",
                ActionName: "GetsByCodeOrName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].VProductID > 0) {
                        var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width: 80, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Product Name", width: 200, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winVProductPicker',
                            winclass: 'clsProductPicker',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblProductPicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'NameCode',
                            windowTittle: 'Product List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiple return
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                }
            });
        }
    });
    $('#txtProductName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtProductName = document.getElementById("txtProductName");
            txtProductName.value = '';
            txtProductName.style.color = "black";
            txtProductName.style.fontWeight = "normal";
            _oPurchaseInvoiceDetail.ProductID = 0;
            _oPurchaseInvoiceDetail.ProductCode = "";
            _oPurchaseInvoiceDetail.ProductName = "";
            var oMUnits = [];
            $("#cboUnitName").icsLoadCombo({
                List: oMUnits,
                OptionValue: "MeasurementUnitID",
                DisplayText: "UnitName"
            });
        }
    });

    //Supplier Part
    $("#txtVendorName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var TextBox=$(this);
            var oContractor = { Param: 2 + '~' + document.getElementById('txtVendorName').value };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oContractor,
                ControllerName: "Contractor",
                ActionName: "ContractorSearchByNameType",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ContractorID > 0) {
                        var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "ContractorTypeInString", title: "Type", width: 150, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winContractors',
                            winclass:'clsSupplier',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblSuppliers',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Vendor List',
                            TextBox:TextBox
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }
    });
    $("#btnPickVendor").click(function () {
        var oContractor = { Param:"2"};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "GetsByContractorType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContractorID > 0) {
                    var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ContractorTypeInString", title: "Type", width: 150, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winContractors',
                        winclass: 'clsSupplier',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblSuppliers',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Supplier List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });

    });
    $('#txtVendorName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtVendorName = document.getElementById("txtVendorName");
            txtVendorName.value = '';
            txtVendorName.style.color = "black";
            txtVendorName.style.fontWeight = "normal";
            _oPurchaseInvoice.SupplierID = 0;
            //_oPurchaseInvoice.
            _oSCPersons = [];
            $("#cboSCPerson").icsLoadCombo({
                List: _oSCPersons,
                OptionValue: "ContactPersonnelID",
                DisplayText: "Name"
            });
        }
    });
    //Pick PR Part

    $("#txtPRNo").keydown(function (e) {
        if(parseInt(_oPurchaseInvoice.ContractorID)<=0)
        {
            alert("Please Select Vendor");
            return;
        }

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if ($.trim($("#txtPRNo").val()) == 0)
            {
                alert("Please enter PO No.");
                $("#txtPRNo").addClass("errorFieldBorder");
                $("#txtPRNo").focus();
                return ;
            }

            var oPR = { PRNo: $.trim($("#txtPRNo").val()), ContractorID:_oPurchaseInvoice.ContractorID };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oPR,
                ControllerName: "PurchaseRequisition",
                ActionName: "GetPurchaseRequsitionForPO",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].PRID > 0) {
                        var tblColums = [];var oColumn = { field: "PONo", title: "PONo", width: 150, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "PODateInString", title: "Date", width: 120, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Product", width: 180, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winPR',
                            winclass:'clsPR',
                            winwidth: 450,
                            winheight: 460,
                            tableid: 'tblPRs',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'PO List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }
    });
    $("#btnPickPR").click(function () {
        debugger;
        if(parseInt(_oPurchaseInvoice.ContractorID)<=0)
        {
            alert("Please Select Vendor");
            return;
        }
        var oPurchaseRequisition = { PRNo:'', ContractorID:_oPurchaseInvoice.ContractorID };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oPurchaseRequisition,
            ControllerName: "PurchaseRequisition",
            ActionName: "GetPurchaseRequsitionForPO",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PRID > 0) {
                    var tblColums = [];var oColumn = { field: "PRNo", title: "PR No", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "PODateSt", title: "Date", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ContractorName", title: "Supplier", width: 180, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPR',
                        winclass: 'clsPR',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblPRs',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'PR List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });

    });
    $('#txtPRNo').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtPRNo = document.getElementById("txtPRNo");
            txtPRNo.value = '';
            txtPRNo.style.color = "black";
            txtPRNo.style.fontWeight = "normal";
            _oPurchaseInvoice.POID = 0;

        }
    });

    ///PICk PO Part
    $("#txtPONo").keydown(function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if(parseInt(_oPurchaseInvoice.ContractorID)<=0)
            {
                alert("Please Select Vendor");
                return;
            }

            if ($.trim($("#txtPONo").val()) == '')
            {
                alert("Please enter PO No.");
                $("#txtPONo").addClass("errorFieldBorder");
                $("#txtPONo").focus();
                return ;
            }
            else
            {
                $("#txtPONo").removeClass("errorFieldBorder");
            }

            var oPO = { PONo: $.trim($("#txtPONo").val()), ContractorID:_oPurchaseInvoice.ContractorID };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oPO,
                ControllerName: "PurchaseOrder",
                ActionName: "GetsPOForInvoice",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].POID > 0) {
                        var tblColums = [];var oColumn = { field: "PONo", title: "PONo", width: 150, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "PODateSt", title: "Date", width: 120, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Product", width: 180, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winPO',
                            winclass:'clsPO',
                            winwidth: 450,
                            winheight: 460,
                            tableid: 'tblPOs',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'PO List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }
    });
    $("#btnPickPO").click(function () {
        if(parseInt(_oPurchaseInvoice.ContractorID)<=0)
        {
            alert("Please Select Vendor");
            return;
        }
        var oPO = { PONo:"", ContractorID:_oPurchaseInvoice.ContractorID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oPO,
            ControllerName: "PurchaseOrder",
            ActionName: "GetsPOForInvoice",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0)
            {
                if (response.objs[0].POID > 0) {
                    var tblColums = [];var oColumn = { field: "PONo", title: "PONo", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "PODateSt", title: "Date", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ContractorName", title: "Supplier", width: 180, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPO',
                        winclass: 'clsPO',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblPOs',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'PO List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else { alert("Data not Found"); }
        });

    });
    $('#txtPONo').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtPONo = document.getElementById("txtPONo");
            txtPONo.value = '';
            txtPONo.style.color = "black";
            txtPONo.style.fontWeight = "normal";
            _oPurchaseInvoice.POID = 0;

        }
    });

    $("#txtPaymentTerm").keydown(function (e){
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {

            var oPaymentTermPO = { POID:_oPurchaseInvoice.POID,  TermText:$('#txtPaymentTerm').val(),  InvoiceRefType:parseInt($('#cboReferenceType').val())};

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oPaymentTermPO,
                ControllerName: "PaymentTerm",
                ActionName: "GetPaymentTermsForInvoice",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].PaymentTermID> 0) {

                        var tblColums = []; var oColumn = { field: "FullTerm", title: "Name", width: 520, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winPaymentTerms',
                            winclass: 'clsPaymentTerm',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblPaymentTerms',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'NameDaysInString',
                            windowTittle: 'Payment Term List'

                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
        if (code == 8) //backspace=8
        {
            var txtPaymentTerm = document.getElementById("txtPaymentTerm");
            txtPaymentTerm.value = '';
            txtPaymentTerm.style.color = "black";
            txtPaymentTerm.style.fontWeight = "normal";
            _oPurchaseInvoice.PaymentTermID = 0;

        }
    });
    $("#btnCPTerm").click(function () {
        var txtPaymentTerm = document.getElementById("txtPaymentTerm");
        txtPaymentTerm.value = '';
        txtPaymentTerm.style.color = "black";
        txtPaymentTerm.style.fontWeight = "normal";
        _oPurchaseInvoice.PaymentTermID = 0;
    });
    $("#btnPickPaymentTerm").click(function () {
        debugger;
        var oPaymentTermPO = { POID:_oPurchaseInvoice.POID,  TermText:$('#txtPaymentTerm').val(),  InvoiceRefType:parseInt($('#cboReferenceType').val())};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oPaymentTermPO,
            ControllerName: "PaymentTerm",
            ActionName: "GetPaymentTermsForInvoice",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PaymentTermID> 0) {
                    var tblColums = []; var oColumn = { field: "FullTerm", title: "Name", width: 520, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPaymentTerms',
                        winclass: 'clsPaymentTerm',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblPaymentTerms',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameDaysInString',
                        windowTittle: 'Payment Term List'

                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });

    });

    function CleanPaymentTerm()
    {
        var txtPaymentTerm = document.getElementById("txtPaymentTerm");
        txtPaymentTerm.value = '';
        txtPaymentTerm.style.color = "black";
        txtPaymentTerm.style.fontWeight = "normal";
        _oPurchaseInvoice.PaymentTermID = 0;
    }

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winContractors') {
            if (oreturnObj != null && oreturnObj.ContractorID > 0) {
                var txtVendorName = document.getElementById("txtVendorName");
                txtVendorName.value = oreturnObj.Name;
                txtVendorName.style.color = "blue";
                txtVendorName.style.fontWeight = "bold";
                _oPurchaseInvoice.ContractorID = oreturnObj.ContractorID;
                LoadContractPersonals(_oPurchaseInvoice.ContractorID);
                $('#txtVendorName').focus();
            }
        } else if (oPickerobj.winid == 'winBusinessUnit') {
            if (oreturnObj != null && oreturnObj.BusinessUnitID > 0) {
                var txtBusinessUnit = document.getElementById("txtBusinessUnit");
                txtBusinessUnit.value = oreturnObj.Code;
                txtBusinessUnit.style.color = "blue";
                txtBusinessUnit.style.fontWeight = "bold";
                _oPurchaseInvoice.BUID = oreturnObj.BusinessUnitID;
                _oPurchaseInvoice.BUName= oreturnObj.Name;
                _oPurchaseInvoice.BUCode = oreturnObj.Code;
                RefreshTooltip();
                $('#txtArea').focus();
            }
        }else if (oPickerobj.winid == 'winArea') {
            if (oreturnObj != null && oreturnObj.LocationID > 0) {
                var txtArea = document.getElementById("txtArea");
                txtArea.value = oreturnObj.LocCode;
                txtArea.style.color = "blue";
                txtArea.style.fontWeight = "bold";
                _oPurchaseInvoice.AreaID = oreturnObj.LocationID;
                _oPurchaseInvoice.AreaName = oreturnObj.Name;
                _oPurchaseInvoice.AreaCode = oreturnObj.LocCode;
                RefreshTooltip();
                $('#txtZone').focus();
            }
        }else if (oPickerobj.winid == 'winZone') {
            if (oreturnObj != null && oreturnObj.LocationID > 0) {
                var txtZone = document.getElementById("txtZone");
                txtZone.value = oreturnObj.LocCode;
                txtZone.style.color = "blue";
                txtZone.style.fontWeight = "bold";
                _oPurchaseInvoice.ZoneID = oreturnObj.LocationID;
                _oPurchaseInvoice.ZoneName = oreturnObj.Name;
                RefreshTooltip();
                $('#txtSite').focus();
            }
        } else if (oPickerobj.winid == 'winSite') {
            if (oreturnObj != null && oreturnObj.LocationID > 0) {
                var txtSite = document.getElementById("txtSite");
                txtSite.value = oreturnObj.LocCode;
                txtSite.style.color = "blue";
                txtSite.style.fontWeight = "bold";
                _oPurchaseInvoice.SiteID = oreturnObj.LocationID;
                _oPurchaseInvoice.SiteName = oreturnObj.Name;
                _oPurchaseInvoice.SiteCode = oreturnObj.LocCode;
                RefreshTooltip();
                $('#txtDept').focus();
            }
        }else if (oPickerobj.winid == 'winDepartment') {
            if (oreturnObj != null && parseInt(oreturnObj.DepartmentID) > 0) {
                var txtDept = document.getElementById("txtDept");
                txtDept.value = oreturnObj.Code;
                txtDept.style.color = "blue";
                txtDept.style.fontWeight = "bold";
                _oPurchaseInvoice.DeptID = oreturnObj.DepartmentID;
                _oPurchaseInvoice.DeptName = oreturnObj.Name;
                _oPurchaseInvoice.DeptCode = oreturnObj.Code;
                RefreshTooltip();
                $('#txtVendorName').focus();
            }
        } else if (oPickerobj.winid == 'winVProductPicker') {
            if (oreturnObj != null && oreturnObj.VProductID > 0) {
                var txtProductName = document.getElementById("txtProductName");
                txtProductName.value = oreturnObj.ProductName;
                txtProductName.style.color = "blue";
                txtProductName.style.fontWeight = "bold";
                _oPurchaseInvoice.ProductID = oreturnObj.VProductID;
                _oPurchaseInvoice.ProductCode = oreturnObj.ProductCode;
                $('#txtProductName').focus();
            }
        }
        else if (oPickerobj.winid == 'winPO')//Contractor region
        {
            debugger;
            if (oreturnObj != null && oreturnObj.POID > 0)
            {
                _oPurchaseInvoice.PONo = oreturnObj.PONo;
                _oPurchaseInvoice.POID = oreturnObj.POID;
                _oPurchaseInvoice.RefID = oreturnObj.POID;
                _oPurchaseInvoice.ContractorID = oreturnObj.ContractorID;
                _oPurchaseInvoice.DateOfPO= oreturnObj.PODateSt;
                _oPurchaseInvoice.ContractorName= oreturnObj.ContractorName;
                _oPurchaseInvoice.CurrencyID = oreturnObj.CurrencyID;
                _oPurchaseInvoice.BUID = oreturnObj.BUID;
                _oPurchaseInvoice.BUCode = oreturnObj.BUCode;
                _oPurchaseInvoice.BUName = oreturnObj.BUName;
                _oPurchaseInvoice.AreaID = oreturnObj.AreaID;
                _oPurchaseInvoice.AreaCode = oreturnObj.AreaCode;
                _oPurchaseInvoice.AreaName = oreturnObj.AreaName;
                _oPurchaseInvoice.ZoneID = oreturnObj.ZoneID;
                _oPurchaseInvoice.ZoneCode = oreturnObj.ZoneCode;
                _oPurchaseInvoice.ZoneName = oreturnObj.ZoneName;
                _oPurchaseInvoice.SiteID = oreturnObj.SiteID;
                _oPurchaseInvoice.SiteCode = oreturnObj.SiteCode;
                _oPurchaseInvoice.SiteName = oreturnObj.SiteName;
                _oPurchaseInvoice.DeptID = oreturnObj.DeptID;
                _oPurchaseInvoice.DeptCode = oreturnObj.DeptCode;
                _oPurchaseInvoice.DeptName = oreturnObj.DeptName;
                _oPurchaseInvoice.ProductID = oreturnObj.ProductID;
                _oPurchaseInvoice.ProductName = oreturnObj.ProductName;
                _oPurchaseInvoice.DateOfPOST= oreturnObj.PODateSt;
                _oPurchaseInvoice.CurrencyID= oreturnObj.CurrencyID;
                _oPurchaseInvoice.Amount= oreturnObj.Amount;
                _oPurchaseInvoice.CurrencyName= oreturnObj.Currency;
                _oPurchaseInvoice.CurrencySymbol = oreturnObj.Currency;
                _oPurchaseInvoice.RefTypeInt=2;
                _oPurchaseInvoice.InvoiceTypeInInt=$('#cboInvoiceType').val();
                RefreshControl();

                var txtPONo = document.getElementById("txtPONo");
                txtPONo.value = oreturnObj.PONo;
                txtPONo.style.color = "blue";
                txtPONo.style.fontWeight = "bold";
                //$('#txtPODate').val(oreturnObj.PODateSt);
                $('#txtPOAmount').val(formatPrice(oreturnObj.Amount));
                $('#cboCurrency').val(oreturnObj.CurrencyID);
                if(oreturnObj.Currency=="TK")
                {
                    $('txtConvertionRate').val(1);
                    $( "#txtConvertionRate" ).prop( "disabled", true );
                }
                GetInvoiceDetails(_oPurchaseInvoice.POID);
                $('#txtPONo').focus();
            }

        }
        else if (oPickerobj.winid =='winPaymentTerms')
        {
            if (oreturnObj != null && oreturnObj.PaymentTermID > 0) {
                var txtPaymentTerm = document.getElementById("txtPaymentTerm");
                txtPaymentTerm.value = oreturnObj.FullTerm;
                txtPaymentTerm.style.color = "blue";
                txtPaymentTerm.style.fontWeight = "bold";
                _oPurchaseInvoice.PaymentTermID = oreturnObj.PaymentTermID;
                $('#txtPaymentTerm').focus();
            }
        }
        else if (oPickerobj.winid=='winProduct_ItemPicker')
        {
            var txtProduct_Item = document.getElementById("txtProduct_Item");
            txtProduct_Item.style.color = "blue";
            txtProduct_Item.style.fontWeight = "bold";
            if(oPickerobj.multiplereturn)
            {
                if (oreturnobjs.length > 0)
                {
                    txtProduct_Item.value = oreturnobjs.length>1 ? oreturnobjs.length+" Item(s) Selected":oreturnobjs[0].ProductName;
                    SetInvoiceDetial(oreturnobjs);
                    $('#txtProduct_Item').focus();
                }
            }
        }
        else if (oPickerobj.winid=='winLC')
        {
            if(oreturnObj!=null && parseInt(oreturnObj.PurchaseLCID)>0)
            {
                _oPurchaseLC= oreturnObj;
                var txtLCNo = document.getElementById("txtLCNo");
                txtLCNo.style.color = "blue";
                txtLCNo.style.fontWeight = "bold";
                $('#txtLCNo').val(oreturnObj.PurchaseLCNO);
                $('#txtLandingInvoiceNo').focus();
            }
        }
        else if (oPickerobj.winid=='winInvoice')
        {
            if(oreturnObj!=null && parseInt(oreturnObj.PurchaseInvoiceLCID)>0)
            {
                _oInvoice= oreturnObj;
                _oPurchaseLC ={
                    PurchaseLCID : oreturnObj.PurchaseLCID,
                    PurchaseLCNO : oreturnObj.LCNo,
                    PurchaseLCDateInString  : oreturnObj.PLCDateInString
                };
                var txtLandingInvoiceNo = document.getElementById("txtLandingInvoiceNo");
                txtLandingInvoiceNo.style.color = "blue";
                txtLandingInvoiceNo.style.fontWeight = "bold";
                $('#txtLandingInvoiceNo').val(oreturnObj.PurchaseInvoiceLCNo);

                var txtLCNo = document.getElementById("txtLCNo");
                txtLCNo.style.color = "blue";
                txtLCNo.style.fontWeight = "bold";
                $('#txtLCNo').val(oreturnObj.LCNo);
                $('#txtCostHead').focus();
            }
        }
        else if (oPickerobj.winid=='winCostHead')
        {
            if(oreturnObj!=null && parseInt(oreturnObj.ACCostCenterID)>0)
            {
                _oLandingCostHead = oreturnObj;
                var txtCostHead = document.getElementById("txtCostHead");
                txtCostHead.style.color = "blue";
                txtCostHead.style.fontWeight = "bold";
                $('#txtCostHead').val(oreturnObj.Name);
                $('#txtRemarks').focus();
            }
        }
    }

    function SetInvoiceDetial(oProducts)
    {
        var oPurchaseInvoiceDetails=[];
        var oPInvoiceDetail=null;

        for (i=0; i<oProducts.length;i++)
        {
            oPInvoiceDetail={ PurchaseInvoiceDetailID: 0,
                ProductID:oProducts[i].ProductID,
                ProductCode :oProducts[i].ProductCode,
                ProductName:oProducts[i].FullName,
                ProductSpec:oProducts[i].ShortName,
                MUnitID :oProducts[i].MeasurementUnitID,
                ApplyInventory:oProducts[i].ApplyInventory,
                PODQty:0,
                PODRate:0,
                Qty : 0,
                UnitPrice : 0,
                Amount : 0
            };
            oPurchaseInvoiceDetails.push(oPInvoiceDetail);
        }

        RefreshList(oPurchaseInvoiceDetails);
        editIndex=undefined;
        RefreshTotalAmount(false);

    }

    function LoadContractPersonals(nContractorID) {
        var oContractor = { ContractorID: nContractorID };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "GetContactPersonnels",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ContactPersonnelID > 0) { _oSCPersons = response.objs; }
                $("#cboSCPerson").icsLoadCombo({
                    List: _oSCPersons,
                    OptionValue: "ContactPersonnelID",
                    DisplayText: "Name"
                });
                $("#cboSCPerson").val(_oPurchaseInvoice.ContractorPersonalID);
            }
        });
    }

    //Load for button click
    $("#btnRefresh").click(function () {

        endEditing();

    });

    //Add Product If Open
    $("#btnAdd").click(function () {
        var oProduct = { ProductID: document.getElementById('txtProductName').value+'~'+"4,5,6" };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "Product",
            ActionName: "Gets",
            IsWinClose: false
        };


        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0)
            {
                if (response.objs[0].ProductID > 0) {

                    var tblColums = [];var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "FullName", title: "Item Name", width: 400, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winProduct_ItemPicker',
                        winclass: 'clsProduct_ItemPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProduct_ItemPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'ProductName',
                        windowTittle: 'Item list'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiple return
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }
            else
            {
                alert("Data not found");
            }
        });

    });

    //PInvoiceDetail Part
    $("#txtProduct_Item").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {


            var oProduct = { ProductID:0,
                NameCode: document.getElementById('txtProduct_Item').value};

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProduct,
                ControllerName: "Product",
                ActionName: "GetsByCodeOrName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ProductID > 0) {
                        var tblColums = [];var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "FullName", title: "Full Name", width: 400, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winProduct_ItemPicker',
                            winclass: 'clsProduct_ItemPicker',
                            winwidth: 600,
                            winheight: 460,
                            tableid: 'tblProduct_ItemPicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'ProductName',
                            windowTittle: 'Item list'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiple return
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                }
            });
        }
    });

    $('#txtProduct_Item').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            var txtProduct_Item = document.getElementById("txtProduct_Item");
            txtProduct_Item.value = '';
            txtProduct_Item.style.color = "black";
            txtProduct_Item.style.fontWeight = "normal";

        }
    });

    function GetInvoiceDetails(nPOID)
    {
        debugger;
        _oPurchaseInvoice.InvoiceTypeInInt=$('#cboInvoiceType').val();
        var oPurchaseInvoice = {POID:nPOID,InvoiceTypeInInt:_oPurchaseInvoice.InvoiceTypeInInt};
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/PurchaseInvoice/GetPurchaseInvoiceDetails",
            traditional: true,
            data:  JSON.stringify(oPurchaseInvoice),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var  oPurchaseInvoiceDetails= jQuery.parseJSON(data);
                if (oPurchaseInvoiceDetails.length>0)
                {
                    RefreshList(oPurchaseInvoiceDetails);
                    editIndex=undefined;
                    RefreshTotalAmount(false);
                }
                else
                {
                    alert("Data not Found");
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });

    }

    function GetInvoiceDetailsFromRequisition(_oPurchaseInvoice)
    {
        debugger;
        var oPurchaseInvoice = {RefID:_oPurchaseInvoice.RefID};
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/PurchaseInvoice/MakeInvoiceDetailFromRequsition",
            traditional: true,
            data:  JSON.stringify(oPurchaseInvoice),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var  oPurchaseInvoiceDetails= jQuery.parseJSON(data);
                if (oPurchaseInvoiceDetails.length>0)
                {
                    RefreshList(oPurchaseInvoiceDetails);
                    editIndex=undefined;
                    RefreshTotalAmount(false);
                }
                else
                {
                    alert("Data not Found");
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });

    }

    var editIndex,_nQty,_nUnitPrice = undefined;
    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#tblPurchaseInvoiceDetail').datagrid('validateRow', editIndex)) {
            $('#tblPurchaseInvoiceDetail').datagrid('endEdit', editIndex);
            $('#tblPurchaseInvoiceDetail').datagrid('selectRow', editIndex);
            var oPurchaseInvoiceDetail = $('#tblPurchaseInvoiceDetail').datagrid('getSelected');

            if(parseInt($('#cboInvoiceType').val())===1 && parseInt($('#cboReferenceType').val())===2)
            {
                if(oPurchaseInvoiceDetail.YetToInvoiceQty<oPurchaseInvoiceDetail.Qty){
                    oPurchaseInvoiceDetail.Qty=oPurchaseInvoiceDetail.YetToInvoiceQty;
                }
                if(oPurchaseInvoiceDetail.PODRate<oPurchaseInvoiceDetail.UnitPrice){
                    oPurchaseInvoiceDetail.UnitPrice=oPurchaseInvoiceDetail.PODRate;
                }
            }
            if(parseInt($('#cboInvoiceType').val())!=2){
                oPurchaseInvoiceDetail.Amount = parseFloat(parseFloat(oPurchaseInvoiceDetail.Qty) * parseFloat(oPurchaseInvoiceDetail.UnitPrice));
            }else if(parseInt($('#cboInvoiceType').val())===2){
                if(oPurchaseInvoiceDetail.PODAmount<oPurchaseInvoiceDetail.Amount){
                    oPurchaseInvoiceDetail.Amount=oPurchaseInvoiceDetail.PODAmount;

                }
            }
            if(parseFloat(oPurchaseInvoiceDetail.AdvanceSettle)> parseFloat(oPurchaseInvoiceDetail.AdvInvoice))
            {
                oPurchaseInvoiceDetail.AdvanceSettle=parseFloat(oPurchaseInvoiceDetail.AdvInvoice);
            }
            oPurchaseInvoiceDetail.PayableAmount = parseFloat(oPurchaseInvoiceDetail.Amount)-parseFloat(oPurchaseInvoiceDetail.AdvanceSettle);
            $('#tblPurchaseInvoiceDetail').datagrid('updateRow', { index: editIndex, row: oPurchaseInvoiceDetail });
            RefreshTotalAmount(false);

            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRow(index) {

        if (editIndex != index) {
            if (endEditing()) {
                $('#tblPurchaseInvoiceDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oPurchaseInvoiceDetail= $('#tblPurchaseInvoiceDetail').datagrid('getSelected');
                editIndex = index;
                _nQty=oPurchaseInvoiceDetail.Qty;
                _nUnitPrice=oPurchaseInvoiceDetail.UnitPrice;
            }
            else {
                $('#tblPurchaseInvoiceDetail').datagrid('selectRow', editIndex);
            }
        }
    }

    function RefreshTotalAmount(bIsBillAmount)
    {
        var oPIDetails = $('#tblPurchaseInvoiceDetail').datagrid('getRows');
        var nTotalValue= 0, nTotalAdvSettelment =0;
        var sCurrency="";
        sCurrency=_oPurchaseInvoice.CurrencySymbol;
        for(var i = 0; i<oPIDetails.length;i++)
        {
            nTotalValue+=parseFloat(oPIDetails[i].Amount);
            nTotalAdvSettelment+=parseFloat(oPIDetails[i].AdvanceSettle);
        }
        document.getElementById('lblTotalValue').innerHTML = sCurrency+""+formatPrice(nTotalValue,0);
        $('#lblTotalCreditAmount').html(formatPrice(parseFloat(nTotalValue), null));
        $('#lblBCTotalCreditAmount').html(formatPrice((parseFloat(nTotalValue)*parseFloat($('#txtConvertionRate').val())), null));
        if(nTotalValue===0)
        {
            nTotalValue= parseFloat(_oPurchaseInvoice.Amount);
        }
        if(bIsBillAmount===false){
            $('#txtBillAmount').val(formatPrice(nTotalValue,0));
        }

        var nInvoiceType = parseInt($('#cboInvoiceType').val());
        var nReferenceType = parseInt($('#cboReferenceType').val());
        if(nInvoiceType===1 && nReferenceType===1)
        {
            if(oPIDetails.length>0)
            {
                $("#txtBillAmount" ).prop( "disabled", true );
            }
            else
            {
                $("#txtBillAmount" ).prop( "disabled", false );
            }
        }
    }

    function RefreshList(oPurchaseInvoiceDetails)
    {
        var data = oPurchaseInvoiceDetails;
        data = { "total": "" + data.length + "", "rows": data };
        $("#tblPurchaseInvoiceDetail").datagrid("loadData", data);
    }

    $("#btnDelete").click(function () {
        var oPIDetails = $('#tblPurchaseInvoiceDetail').datagrid('getSelected');
        if (oPIDetails == null) {
            alert("Invalid Selection!!! please select a valid Item!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return;
        var SelectedRowIndex = $('#tblPurchaseInvoiceDetail').datagrid('getRowIndex', oPIDetails);
        $('#tblPurchaseInvoiceDetail').datagrid('deleteRow',SelectedRowIndex);
        alert("Delete sucessfully");
        editIndex = undefined;
        RefreshTotalAmount(false);
    });

    //Start Distribution Part
    function GetSymbol()
    {
        var nCurrencyID = parseInt($('#cboCurrency').val());
        var oCurrencys =$('#cboCurrency').data('Currencys');
        for(var i=0; i<oCurrencys.length; i++)
        {
            if(parseInt(oCurrencys[i].CurrencyID) === nCurrencyID)
            {
                return oCurrencys[i].Symbol;
            }
        }
        return "";
    }

    function InitializeDistributionEvent()
    {
        var oVDObjs = $("#tblVoucherDetail").data('rows');
        if(oVDObjs=='undefined'  || oVDObjs==null || oVDObjs.length<=0)
        {
            var oVDObj=NewObject(0);
            AddVoucherDetail(oVDObj);
        }
        var nNextRowIndex = 0;
        $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
        ResetAllInputBox(0, '.debitcreditclass');
        RefreshSummery();
        InitializeKeyDownEvent(".debitcreditclass"); return;
    }

    function isNumber(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
    }

    function SplitCurrencyAndAmount(nRowIndex,userInput)
    {
        var editOrNewEntry = "";
        var currency = "";
        var amountInString = "";
        var result = "";
        var count = 0;
        var nAmountInCurrency = 0;
        var nBaseCurrencyAmount = 0;
        var nConversionRate=0;

        for(var i=0;i<userInput.length;i++)
        {
            var char = userInput.charAt(i);
            var charForCheck = char;
            char = char.match(/\d+/g);
            if(char == null && count==0)
            {
                currency = currency + userInput.charAt(i);
            }
            else if(char != null)
            {
                amountInString = amountInString + userInput.charAt(i);
                count=1;
            }
            else if(charForCheck == ",")
            {
                continue;
            }
            else if(charForCheck == ".")
            {
                amountInString = amountInString + userInput.charAt(i);
            }
            else
            {
                result = "WrongInput" + "," + "Please Give Valid Amount.";
                break;
            }
        }

        if(amountInString.length == 0 || parseFloat(amountInString) == 0)
        {
            result = "WrongInput" + "," + "Please Give Amount.";
        }
        if(result == "")
        {
            var userInputAmount = parseFloat(icsRemoveComma(amountInString));
            var checkAmount = isNumber(userInputAmount);
            if(checkAmount == false)
            {
                result = "WrongInput" + "," + "Please Give Valid Amount.";
            }
            else
            {
                result = userInputAmount + ", Valid Input";
            }
        }
        result = result.split(",");
        return result;
    }

    function IntializePickerbuttonForDistribution(oPickerobj) {

        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            SetPickerValueAssignForDistribution(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssignForDistribution(oPickerobj);

            }
        });
    }

    function SetPickerValueAssignForDistribution(oPickerobj)
    {

        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid == 'winBusinessUnit') {
            if (oreturnObj != null && parseInt(oreturnObj.BusinessUnitID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var bcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var bcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.bcodeclass');
                $(bcodeControll).val(oreturnObj.Code);
                $(bcodeControll).removeClass("textboxstyle");
                $(bcodeControll).addClass("highlight");
                $(bcodeControll).addClass("textboxstyle2");
                $("#tblVoucherDetail").data('rows')[nRowIndex].BUID=parseInt(oreturnObj.BusinessUnitID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].BCode=oreturnObj.Code;
                $("#tblVoucherDetail").data('rows')[nRowIndex].BName=oreturnObj.Name;
                $("#tblVoucherDetail").data('rows')[nRowIndex].BSName=oreturnObj.ShortName;
                $("#tblVoucherDetail").data('rows')[nRowIndex].IsAEfct=oreturnObj.IsAreaEffect;
                $("#tblVoucherDetail").data('rows')[nRowIndex].IsZEfct=oreturnObj.IsZoneEffect;
                $("#tblVoucherDetail").data('rows')[nRowIndex].IsSEfct=oreturnObj.IsSiteEffect;
                var oVDobj = $("#tblVoucherDetail").data('rows')[nRowIndex];
                EnableDisableControl(nRowIndex, oVDobj);
                var sClassName = ".acodeclass";
                if(!oreturnObj.IsAreaEffect)
                {
                    sClassName =".pcodeclass";
                }
                var nInputBoxIndex=$('.bcodeclass').index(bcodeControll);
                ResetAllInputBox(nInputBoxIndex, sClassName);
                ResetAccountCode(nRowIndex);
                InitializeKeyDownEvent(sClassName); return;
            }
        }
        else if (oPickerobj.winid == 'winArea') {
            if (oreturnObj != null && parseInt(oreturnObj.LocationID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var acodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var acodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.acodeclass');
                $(acodeControll).val(oreturnObj.LocCode);
                $(acodeControll).removeClass("textboxstyle");
                $(acodeControll).addClass("highlight");
                $(acodeControll).addClass("textboxstyle2");
                $("#tblVoucherDetail").data('rows')[nRowIndex].AID=parseInt(oreturnObj.LocationID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].ACode=oreturnObj.LocCode;
                $("#tblVoucherDetail").data('rows')[nRowIndex].AName=oreturnObj.Name;
                $("#tblVoucherDetail").data('rows')[nRowIndex].ASName=oreturnObj.ShortName;
                var bIsZoneEnable = $("#tblVoucherDetail").data('rows')[nRowIndex].IsZEfct;
                var sClassName = ".zcodeclass";
                if(!bIsZoneEnable)
                {
                    sClassName =".pcodeclass";
                }

                var nInputBoxIndex=$('.acodeclass').index(acodeControll);
                ResetAllInputBox(nInputBoxIndex, sClassName);
                ResetAccountCode(nRowIndex);
                InitializeKeyDownEvent(sClassName); return;
            }
        }
        else if (oPickerobj.winid == 'winZone') {
            if (oreturnObj != null && parseInt(oreturnObj.LocationID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var zcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var zcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.zcodeclass');
                $(zcodeControll).val(oreturnObj.LocCode);
                $(zcodeControll).removeClass("textboxstyle");
                $(zcodeControll).addClass("highlight");
                $(zcodeControll).addClass("textboxstyle2");
                $("#tblVoucherDetail").data('rows')[nRowIndex].ZID=parseInt(oreturnObj.LocationID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].ZCode=oreturnObj.LocCode;
                $("#tblVoucherDetail").data('rows')[nRowIndex].ZName=oreturnObj.Name;
                $("#tblVoucherDetail").data('rows')[nRowIndex].ZSName=oreturnObj.ShortName;
                var bIsSiteEnable = $("#tblVoucherDetail").data('rows')[nRowIndex].IsSEfct;
                var sClassName = ".scodeclass";
                if(!bIsSiteEnable)
                {
                    sClassName =".pcodeclass";
                }
                var nInputBoxIndex=$('.zcodeclass').index(zcodeControll);
                ResetAllInputBox(nInputBoxIndex, sClassName);
                ResetAccountCode(nRowIndex);
                InitializeKeyDownEvent(sClassName); return;
            }
        }
        else if (oPickerobj.winid == 'winSite') {
            if (oreturnObj != null && parseInt(oreturnObj.LocationID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var scodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var scodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.scodeclass');
                $(scodeControll).val(oreturnObj.LocCode);
                $(scodeControll).removeClass("textboxstyle");
                $(scodeControll).addClass("highlight");
                $(scodeControll).addClass("textboxstyle2");
                var nInputBoxIndex=$('.scodeclass').index(scodeControll);
                ResetAllInputBox(nInputBoxIndex, '.pcodeclass');
                $("#tblVoucherDetail").data('rows')[nRowIndex].SID=parseInt(oreturnObj.LocationID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].SCode=oreturnObj.LocCode;
                $("#tblVoucherDetail").data('rows')[nRowIndex].SName=oreturnObj.Name;
                $("#tblVoucherDetail").data('rows')[nRowIndex].SSName=oreturnObj.ShortName;
                ResetAccountCode(nRowIndex);
                InitializeKeyDownEvent(".pcodeclass"); return;
            }
        }
        else if (oPickerobj.winid == 'winProduct') {

            if (oreturnObj != null && parseInt(oreturnObj.VProductID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var pcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var pcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.pcodeclass');
                $(pcodeControll).val(oreturnObj.ProductCode);
                $(pcodeControll).removeClass("textboxstyle");
                $(pcodeControll).addClass("highlight");
                $(pcodeControll).addClass("textboxstyle2");
                var nInputBoxIndex=$('.pcodeclass').index(pcodeControll);
                ResetAllInputBox(nInputBoxIndex, '.dcodeclass');
                $("#tblVoucherDetail").data('rows')[nRowIndex].PID=parseInt(oreturnObj.VProductID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].PCode=oreturnObj.ProductCode;
                $("#tblVoucherDetail").data('rows')[nRowIndex].PName=oreturnObj.ProductName;
                $("#tblVoucherDetail").data('rows')[nRowIndex].PSName=oreturnObj.ShortName;
                ResetAccountCode(nRowIndex);
                InitializeKeyDownEvent(".dcodeclass"); return;
            }
        }
        else if (oPickerobj.winid == 'winDepartment') {
            if (oreturnObj != null && parseInt(oreturnObj.DepartmentID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var dcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var dcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.dcodeclass');
                $(dcodeControll).val(oreturnObj.Code);
                $(dcodeControll).removeClass("textboxstyle");
                $(dcodeControll).addClass("highlight");
                $(dcodeControll).addClass("textboxstyle2");
                var nInputBoxIndex=$('.dcodeclass').index(dcodeControll);
                ResetAllInputBox(nInputBoxIndex, '.ahcodeclass');
                $("#tblVoucherDetail").data('rows')[nRowIndex].DptID=parseInt(oreturnObj.DepartmentID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].DCode=oreturnObj.Code;
                $("#tblVoucherDetail").data('rows')[nRowIndex].DName=oreturnObj.Name;
                $("#tblVoucherDetail").data('rows')[nRowIndex].DSName=oreturnObj.ShortName;
                ResetAccountCode(nRowIndex);
                InitializeKeyDownEvent(".ahcodeclass"); return;
            }
        }
        else if (oPickerobj.winid == 'winChartsOfAccount') {
            if (oreturnObj != null && parseInt(oreturnObj.AccountHeadID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var ahcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var ahcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.ahcodeclass');
                $(ahcodeControll).val(oreturnObj.AccountCode);
                $(ahcodeControll).removeClass("textboxstyle");
                $(ahcodeControll).addClass("highlight");
                $(ahcodeControll).addClass("textboxstyle2");
                $("#tblVoucherDetail").data('rows')[nRowIndex].AHID=parseInt(oreturnObj.AccountHeadID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].AHCode=oreturnObj.AccountCode;
                $("#tblVoucherDetail").data('rows')[nRowIndex].AHName=oreturnObj.AccountHeadName;
                $("#tblVoucherDetail").data('rows')[nRowIndex].IsCCAply=oreturnObj.IsCostCenterApply;
                var oVDobj = $("#tblVoucherDetail").data('rows')[nRowIndex];
                EnableDisableControl(nRowIndex, oVDobj);
                var sClassName = ".cccodeclass";
                if(!oreturnObj.IsCostCenterApply)
                {
                    sClassName =".narrationclass";
                }
                var nInputBoxIndex=$('.ahcodeclass').index(ahcodeControll);
                ResetAllInputBox(nInputBoxIndex, sClassName);
                ResetAccountCode(nRowIndex);
                InitializeKeyDownEvent(sClassName); return;
            }
        }
        else if (oPickerobj.winid == 'winCostCenter') {
            if (oreturnObj != null && parseInt(oreturnObj.ACCostCenterID) > 0) {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var cccodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var cccodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.cccodeclass');
                $(cccodeControll).val(oreturnObj.Code);
                $(cccodeControll).removeClass("textboxstyle");
                $(cccodeControll).addClass("highlight");
                $(cccodeControll).addClass("textboxstyle2");
                var nInputBoxIndex=$('.cccodeclass').index(cccodeControll);
                ResetAllInputBox(nInputBoxIndex, '.narrationclass');
                $("#tblVoucherDetail").data('rows')[nRowIndex].CCID=parseInt(oreturnObj.ACCostCenterID);
                $("#tblVoucherDetail").data('rows')[nRowIndex].CCCode=oreturnObj.Code;
                $("#tblVoucherDetail").data('rows')[nRowIndex].CCName=oreturnObj.Name;
                ResetAccountCode(nRowIndex);
                InitializeKeyDownEvent(".narrationclass"); return;
            }
        }
    }

    function ResetAccountCode(nRowIndex)
    {
        var oDVObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        var sNewAccountCode = MakeAccountCode(oDVObj);
        $("#tblVoucherDetail").data('rows')[nRowIndex].AccountCode=sNewAccountCode;
        var accountcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountcodeclass');
        $(accountcodeControll).val(sNewAccountCode);
    }

    function InitializeKeyDownEvent(classname)
    {
        $('.delClass').unbind("keydown");
        $('.debitcreditclass').unbind("keydown");
        $('.bcodeclass').unbind("keydown");
        $('.acodeclass').unbind("keydown");
        $('.zcodeclass').unbind("keydown");
        $('.scodeclass').unbind("keydown");
        $('.pcodeclass').unbind("keydown");
        $('.dcodeclass').unbind("keydown");
        $('.ahcodeclass').unbind("keydown");
        $('.cccodeclass').unbind("keydown");
        $('.accountcodeclass').unbind("keydown");
        $('.narrationclass').unbind("keydown");
        $('.debitclass').unbind("keydown");
        $('.creditclass').unbind("keydown");

        if(classname===".debitcreditclass")
        {
            $('.debitcreditclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var sDebitCredit=$.trim($(this).val());
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    if(sDebitCredit==""||sDebitCredit==null)
                    {
                        if(ChequeDebitAmount())
                        {
                            var oVDObjs=[];
                            var oTempVDObjs = $("#tblVoucherDetail").data('rows');
                            for(var i=0; i<oTempVDObjs.length-1; i++)
                            {
                                oVDObjs.push(oTempVDObjs[i]);
                            }
                            $('#tblVoucherDetail').data('rows', oVDObjs);
                            document.getElementById("tblVoucherDetail").deleteRow(nRowIndex);                            
                        }
                        else
                        {
                            alert("Please enter debit amount!");
                            return false;
                        }
                    }
                    else
                    {
                        if(sDebitCredit=="Debit")
                        {
                            $("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR="Debit";
                            $("#tblVoucherDetail").data('rows')[nRowIndex].IsDr=true;
                        }
                        else if(sDebitCredit=="Credit")
                        {
                            $("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR="Credit";
                            $("#tblVoucherDetail").data('rows')[nRowIndex].IsDr=false;
                        }
                        else
                        {
                            alert("Invalid Voucher Detail");
                            return false;
                        }
                        var index = $('.debitcreditclass').index(this);
                        ResetAllInputBox(index, '.bcodeclass');

                        var oVDObjs= $("#tblVoucherDetail").data('rows');
                        var nTotalDebitAmount=0; var nTotalCreditAmount=0;
                        var nBalanceAmount=0; var nTempBalanceAmount=0;
                        for(var i=0;i<oVDObjs.length;i++)
                        {
                            nTotalDebitAmount = parseFloat(nTotalDebitAmount)+ parseFloat(oVDObjs[i].DrAmount);
                            nTotalCreditAmount = parseFloat(nTotalCreditAmount)+ parseFloat(oVDObjs[i].CrAmount);
                        }

                        if($("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR == "Debit")
                        {
                            nBalanceAmount = nTotalCreditAmount - nTotalDebitAmount;
                        }
                        else
                        {
                            nBalanceAmount = nTotalDebitAmount - nTotalCreditAmount;
                        }
                        if(nBalanceAmount<0)
                        {
                            nBalanceAmount=0;
                        }
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR == "Debit")
                        {
                            nTempBalanceAmount= parseFloat(icsRemoveComma($(".debitclass").eq(index).val()));
                            if(nTempBalanceAmount>0)
                            {
                                nBalanceAmount = nTempBalanceAmount;
                            }

                            $(".debitclass").eq(index).val(formatPrice(nBalanceAmount,null));
                            $(".creditclass").eq(index).val(formatPrice(0.00,null));
                            $(".bccreditclass").eq(index).val(formatPrice(0.00,null));
                            $(".creditclass").eq(index).prop('disabled', true);
                            $(".debitclass").eq(index).prop('disabled', false);

                            $("#tblVoucherDetail").data('rows')[nRowIndex].DrAmount=parseFloat(nBalanceAmount);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].CrAmount=parseFloat(0.00);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].BCDrAmount=parseFloat(0.00);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].BCCrAmount=parseFloat(0.00);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=parseFloat(0.00);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].IsDr=true;
                        }
                        else
                        {
                            nTempBalanceAmount= parseFloat(icsRemoveComma($(".creditclass").eq(index).val()));
                            if(nTempBalanceAmount>0)
                            {
                                nBalanceAmount = nTempBalanceAmount;
                            }
                            $(".creditclass").eq(index).val(formatPrice(nBalanceAmount,null));
                            $(".debitclass").eq(index).val(formatPrice(0.00,null));
                            $(".bcdebitclass").eq(index).val(formatPrice(0.00,null));
                            $(".debitclass").eq(index).prop('disabled', true);
                            $(".creditclass").eq(index).prop('disabled', false);

                            $("#tblVoucherDetail").data('rows')[nRowIndex].DrAmount=0.00;
                            $("#tblVoucherDetail").data('rows')[nRowIndex].CrAmount=parseFloat(nBalanceAmount);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].BCDrAmount=parseFloat(0.00);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].BCCrAmount=parseFloat(0.00);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=parseFloat(0.00);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].IsDr=false;
                        }
                        RefreshSummery();
                        InitializeKeyDownEvent(".bcodeclass"); return;
                    }
                }
            });
        }
        else if(classname===".bcodeclass")
        {
            $('.bcodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.bcodeclass').index(this);
                    var txtbusinesscode = $(this).val();
                    if(txtbusinesscode===null || txtbusinesscode==="")
                    {
                        alert("Please Press Enter With Business Code OR Name!");
                        return false;
                    }

                    var oBusinessUnit = {
                        NameCode : txtbusinesscode
                    };
                    var obj = {
                        BaseAddress: _sBaseAddress,
                        Object: oBusinessUnit,
                        ControllerName: "BusinessUnit",
                        ActionName: "GetsBUByCodeOrName",
                        IsWinClose: false
                    };
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].BusinessUnitID) > 0) {
                                var tblColums = []; var oColumn = { field: "Code", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "Name", title: "Business Unit Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winBusinessUnit',
                                    winclass: 'clsBusinessUnit',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblBusinessUunit',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'NameCode',
                                    windowTittle: 'Business Unit List'
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbuttonForDistribution(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".acodeclass")
        {
            $('.acodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {

                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.acodeclass').index(this);
                    var txtareacode = $(this).val();
                    if(txtareacode===null || txtareacode==="")
                    {
                        alert("Please Press Enter With Area Code OR Name!");
                        return false;
                    }

                    if(txtareacode==="00")
                    {
                        SkipBusinessLayer(".acodeclass");
                        return false;
                    }

                    var nBUsinessUnitID = parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].BUID);
                    if(nBUsinessUnitID===null || nBUsinessUnitID<=0)
                    {
                        alert("Please Press Enter With Business Code!");
                        return false;
                    }

                    var oLocation = {
                        BusinessUnitID : nBUsinessUnitID,
                        ParentID : 1,
                        LocationNameCode : txtareacode
                    };
                    var obj = {
                        BaseAddress: _sBaseAddress,
                        Object: oLocation,
                        ControllerName: "Location",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].LocationID) > 0) {
                                var tblColums = []; var oColumn = { field: "LocCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "Name", title: "Area Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winArea',
                                    winclass: 'clsArea',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblArea',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'LocationNameCode',
                                    windowTittle: 'Area List'
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbuttonForDistribution(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".zcodeclass")
        {
            $('.zcodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.zcodeclass').index(this);
                    var txtzonecode = $(this).val();
                    if(txtzonecode===null || txtzonecode==="")
                    {
                        alert("Please Press Enter With Zone Code OR Name!");
                        return false;
                    }

                    if(txtzonecode==="00")
                    {
                        SkipBusinessLayer(".zcodeclass");
                        return false;
                    }

                    var nBUsinessUnitID = parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].BUID);
                    if(nBUsinessUnitID===null || nBUsinessUnitID<=0)
                    {
                        alert("Please Press Enter With Business Code!");
                        return false;
                    }
                    var nAreaID = parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].AID);
                    if(nAreaID===null || nAreaID<=0)
                    {
                        alert("Please Press Enter With Area Code!");
                        return false;
                    }

                    var oLocation = {
                        BusinessUnitID : nBUsinessUnitID,
                        ParentID : nAreaID,
                        LocationNameCode : txtzonecode
                    };
                    var obj = {
                        BaseAddress: _sBaseAddress,
                        Object: oLocation,
                        ControllerName: "Location",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].LocationID) > 0) {
                                var tblColums = []; var oColumn = { field: "LocCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "Name", title: "Area Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winZone',
                                    winclass: 'clsZone',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblZone',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'LocationNameCode',
                                    windowTittle: 'Zone List'
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbuttonForDistribution(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".scodeclass")
        {
            $('.scodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {

                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.scodeclass').index(this);
                    var txtsitecode = $(this).val();
                    if(txtsitecode===null || txtsitecode==="")
                    {
                        alert("Please Press Enter With Site Code OR Name!");
                        return false;
                    }

                    if(txtsitecode==="0000")
                    {
                        SkipBusinessLayer(".scodeclass");
                        return false;
                    }

                    var nBUsinessUnitID = parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].BUID);
                    if(nBUsinessUnitID===null || nBUsinessUnitID<=0)
                    {
                        alert("Please Press Enter With Business Code!");
                        return false;
                    }
                    var nZoneID = parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ZID);
                    if(nZoneID===null || nZoneID<=0)
                    {
                        alert("Please Press Enter With Zone Code!");
                        return false;
                    }

                    var oLocation = {
                        BusinessUnitID : nBUsinessUnitID,
                        ParentID : nZoneID,
                        LocationNameCode : txtsitecode
                    };
                    var obj = {
                        BaseAddress: _sBaseAddress,
                        Object: oLocation,
                        ControllerName: "Location",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].LocationID) > 0) {
                                var tblColums = []; var oColumn = { field: "LocCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "Name", title: "Area Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winSite',
                                    winclass: 'clsSite',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblSite',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'LocationNameCode',
                                    windowTittle: 'Site List'
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbuttonForDistribution(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".pcodeclass")
        {
            $('.pcodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.pcodeclass').index(this);
                    var txtproductcode = $(this).val();
                    if(txtproductcode===null || txtproductcode==="")
                    {
                        alert("Please Press Enter With Product Code OR Name!");
                        return false;
                    }

                    if(txtproductcode==="00000")
                    {
                        SkipBusinessLayer(".pcodeclass");
                        return false;
                    }

                    var oVProduct = {
                        NameCode : txtproductcode
                    };
                    var obj = {
                        BaseAddress: _sBaseAddress,
                        Object: oVProduct,
                        ControllerName: "VProduct",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].VProductID) > 0) {
                                var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ProductName", title: "Product Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winProduct',
                                    winclass: 'clsProduct',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblProduct',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'NameCode',
                                    windowTittle: 'Product List'
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbuttonForDistribution(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".dcodeclass")
        {
            $('.dcodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.dcodeclass').index(this);
                    var txtdeptcode = $(this).val();
                    if(txtdeptcode===null || txtdeptcode==="")
                    {
                        alert("Please Press Enter With Department Code OR Name!");
                        return false;
                    }

                    if(txtdeptcode==="00")
                    {
                        SkipBusinessLayer(".dcodeclass");
                        return false;
                    }

                    var oDepartment = {
                        NameCode : txtdeptcode
                    };
                    var obj = {
                        BaseAddress: _sBaseAddress,
                        Object: oDepartment,
                        ControllerName: "Department",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].DepartmentID) > 0) {
                                var tblColums = []; var oColumn = { field: "Code", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "Name", title: "Department Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winDepartment',
                                    winclass: 'clsDepartment',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblDepartment',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'NameCode',
                                    windowTittle: 'Department List'
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbuttonForDistribution(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".ahcodeclass")
        {
            $('.ahcodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.ahcodeclass').index(this);
                    var txtahcode = $(this).val();
                    if(txtahcode===null || txtahcode==="" || txtahcode==="0000000")
                    {
                        alert("Please Press Enter With ledger Code OR Name!");
                        return false;
                    }
                    var oChartsOfAccount = {
                        AccountHeadCodeName : txtahcode
                    };
                    var obj = {
                        BaseAddress: _sBaseAddress,
                        Object: oChartsOfAccount,
                        ControllerName: "ChartsOfAccount",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].AccountHeadID) > 0) {
                                var tblColums = []; var oColumn = { field: "AccountCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "AccountHeadName", title: "Ledger Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "ComponentType", title: "Ledger Type", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winChartsOfAccount',
                                    winclass: 'clsChartsOfAccount',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblChartsOfAccount',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'AccountHeadCodeName',
                                    windowTittle: 'Ledger List'
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbuttonForDistribution(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".cccodeclass")
        {
            $('.cccodeclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.cccodeclass').index(this);
                    var txtcccode = $(this).val();
                    if(txtcccode===null || txtcccode==="")
                    {
                        alert("Please Press Enter With Subledger/Costcenter Code OR Name!");
                        return false;
                    }

                    var bIsCostCenterApply =$("#tblVoucherDetail").data('rows')[nRowIndex].IsCCAply;
                    if(bIsCostCenterApply)
                    {
                        if(txtcccode==="0000")
                        {
                            //SkipBusinessLayer(".cccodeclass");
                            alert("Please Press Enter With Subledger/Costcenter Code OR Name!");
                            return false;
                        }
                    }
                    else
                    {
                        SkipBusinessLayer(".cccodeclass");
                        return false;
                    }

                    var nAccountHeadID =parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].AHID);
                    if(nAccountHeadID===0)
                    {
                        alert("Please select an Account Head!");
                        return false;
                    }


                    var oACCostCenter = {
                        NameCode : txtcccode,
                        AccountHeadID : nAccountHeadID
                    };
                    var obj = {
                        BaseAddress: _sBaseAddress,
                        Object: oACCostCenter,
                        ControllerName: "ACCostCenter",
                        ActionName: "GetsByCodeOrName",
                        IsWinClose: false
                    };
                    $.icsDataGets(obj, function (response) {
                        if (response.status && response.objs.length > 0) {
                            if (parseInt(response.objs[0].ACCostCenterID) > 0) {
                                var tblColums = []; var oColumn = { field: "Code", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "Name", title: "Product Name", width: 200, align: "left" }; tblColums.push(oColumn);
                                oColumn = { field: "CategoryName", title: "Category", width: 100, align: "left" }; tblColums.push(oColumn);
                                var oPickerParam = {
                                    winid: 'winCostCenter',
                                    winclass: 'clsCostCenter',
                                    winwidth: 500,
                                    winheight: 420,
                                    tableid: 'tblCostCenter',
                                    tablecolumns: tblColums,
                                    datalist: response.objs,
                                    multiplereturn: false,
                                    searchingbyfieldName: 'NameCode',
                                    windowTittle: 'Subledger/CostCenter List'
                                };
                                $.icsPicker(oPickerParam);
                                IntializePickerbuttonForDistribution(oPickerParam);
                            }
                            else { alert(response.objs[0].ErrorMessage); }
                        }
                        else
                        {
                            alert("Data Not Found!");
                        }
                    });
                }
            });
        }
        else if(classname===".narrationclass")
        {
            $('.narrationclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var sClassName="";
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    $("#tblVoucherDetail").data('rows')[nRowIndex].Detail = $(this).val();
                    var index = $('.narrationclass').index(this);
                    if($("#tblVoucherDetail").data('rows')[nRowIndex].IsDr)
                    {
                        ResetAllInputBox(index, '.debitclass');
                        sClassName=".debitclass";
                    }
                    else
                    {
                        ResetAllInputBox(index, '.creditclass');
                        sClassName=".creditclass";
                    }
                    InitializeKeyDownEvent(sClassName); return;
                }
            });
        }
        else if(classname===".debitclass")
        {
            $('.debitclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var sAmount=$(this).val();
                    var editOrNewEntry="";

                    var nAccountHeadID = $("#tblVoucherDetail").data('rows')[nRowIndex].AHID;
                    if(parseInt(nAccountHeadID) <= 0)
                    {
                        alert("Please Select an Ledger.");
                        return false;
                    }
                    var splitCurrencyAmount = SplitCurrencyAndAmount(nRowIndex,sAmount);
                    if(splitCurrencyAmount[0] == "WrongInput")
                    {
                        alert(splitCurrencyAmount[1]);
                        return false;
                    }
                    if($('#txtConvertionRate').val()==null || $('#txtConvertionRate').val()=="" || parseFloat($('#txtConvertionRate').val())<=0)
                    {
                        alert("Please Enter Conversion Rate!");
                        return false;
                    }

                    var bcdebitclasscontroll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.bcdebitclass');
                    var nAmountInCurrency = parseFloat(splitCurrencyAmount[0]).toFixed(2);
                    var nAmountInBaseCurrency = (parseFloat(nAmountInCurrency)*parseFloat($('#txtConvertionRate').val()));

                    $(this).val(formatPrice(nAmountInCurrency,null));
                    $(bcdebitclasscontroll).val(formatPrice(nAmountInBaseCurrency,null));

                    $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount = parseFloat(nAmountInCurrency);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].DrAmount=parseFloat(nAmountInCurrency);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CrAmount=parseFloat(0.00);

                    $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=nAmountInBaseCurrency;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].BCDrAmount=parseFloat(nAmountInBaseCurrency);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].BCCrAmount=parseFloat(0.00);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CID = parseInt($('#cboCurrency').val());
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CRate = parseFloat($('#txtConvertionRate').val());
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CSymbol = GetSymbol();
                    RefreshSummery();
                    //GridStyleVoucherDetail(this);
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
        else if(classname===".creditclass")
        {
            $('.creditclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {

                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var sAmount=$(this).val();

                    var nAccountHeadID = $("#tblVoucherDetail").data('rows')[nRowIndex].AHID;
                    if(parseInt(nAccountHeadID) <= 0)
                    {
                        alert("Please Select an Ledger.");
                        return false;
                    }
                    var splitCurrencyAmount = SplitCurrencyAndAmount(nRowIndex,sAmount);
                    if(splitCurrencyAmount[0] == "WrongInput")
                    {
                        alert(splitCurrencyAmount[1]);
                        return false;
                    }
                    if($('#txtConvertionRate').val()==null || $('#txtConvertionRate').val()=="" || parseFloat($('#txtConvertionRate').val())<=0)
                    {
                        alert("Please Enter Conversion Rate!");
                        return false;
                    }
                    var bccreditclasscontroll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.bccreditclass');
                    var nAmountInCurrency = parseFloat(splitCurrencyAmount[0]).toFixed(2);
                    var nAmountInBaseCurrency = (parseFloat(nAmountInCurrency)*parseFloat($('#txtConvertionRate').val()));

                    $(this).val(formatPrice(nAmountInCurrency,null));
                    $(bccreditclasscontroll).val(formatPrice(nAmountInBaseCurrency,null));

                    $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount = parseFloat(nAmountInCurrency);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].DrAmount=parseFloat(0.00);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CrAmount=parseFloat(nAmountInCurrency);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=nAmountInBaseCurrency;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].BCDrAmount=parseFloat(0.00);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].BCCrAmount=parseFloat(nAmountInBaseCurrency);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CID = parseInt($('#cboCurrency').val());
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CRate = parseFloat($('#txtConvertionRate').val());
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CSymbol = GetSymbol();
                    RefreshSummery();
                    //GridStyleVoucherDetail(this);
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
    }

    function SkipBusinessLayer(classname)
    {
        if(classname===".acodeclass")
        {
            var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
            var acodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
            var acodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.acodeclass');
            $(acodeControll).val("00");
            $(acodeControll).removeClass("textboxstyle");
            $(acodeControll).addClass("highlight");
            $(acodeControll).addClass("textboxstyle2");
            var nInputBoxIndex=$('.acodeclass').index(acodeControll);
            ResetAllInputBox(nInputBoxIndex, '.pcodeclass');
            $("#tblVoucherDetail").data('rows')[nRowIndex].AID=0;
            $("#tblVoucherDetail").data('rows')[nRowIndex].ACode="00";
            $("#tblVoucherDetail").data('rows')[nRowIndex].AName="";
            $("#tblVoucherDetail").data('rows')[nRowIndex].ASName="";
            var oDVObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
            var sNewAccountCode = MakeAccountCode(oDVObj);
            $("#tblVoucherDetail").data('rows')[nRowIndex].AccountCode=sNewAccountCode;
            var accountcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountcodeclass');
            $(accountcodeControll).val(sNewAccountCode);
            InitializeKeyDownEvent(".pcodeclass"); return;
        }
        else if(classname===".zcodeclass")
        {
            var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
            var zcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
            var zcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.zcodeclass');
            $(zcodeControll).val("00");
            $(zcodeControll).removeClass("textboxstyle");
            $(zcodeControll).addClass("highlight");
            $(zcodeControll).addClass("textboxstyle2");
            var nInputBoxIndex=$('.zcodeclass').index(zcodeControll);
            ResetAllInputBox(nInputBoxIndex, '.pcodeclass');
            $("#tblVoucherDetail").data('rows')[nRowIndex].ZID=0;
            $("#tblVoucherDetail").data('rows')[nRowIndex].ZCode="00";
            $("#tblVoucherDetail").data('rows')[nRowIndex].ZName="";
            $("#tblVoucherDetail").data('rows')[nRowIndex].ZSName="";
            var oDVObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
            var sNewAccountCode = MakeAccountCode(oDVObj);
            $("#tblVoucherDetail").data('rows')[nRowIndex].AccountCode=sNewAccountCode;
            var accountcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountcodeclass');
            $(accountcodeControll).val(sNewAccountCode);
            InitializeKeyDownEvent(".pcodeclass"); return;
        }
        else if(classname===".scodeclass")
        {
            var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
            var scodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
            var scodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.scodeclass');
            $(scodeControll).val("0000");
            $(scodeControll).removeClass("textboxstyle");
            $(scodeControll).addClass("highlight");
            $(scodeControll).addClass("textboxstyle2");
            var nInputBoxIndex=$('.scodeclass').index(scodeControll);
            ResetAllInputBox(nInputBoxIndex, '.pcodeclass');
            $("#tblVoucherDetail").data('rows')[nRowIndex].SID=0;
            $("#tblVoucherDetail").data('rows')[nRowIndex].SCode="0000";
            $("#tblVoucherDetail").data('rows')[nRowIndex].SName="";
            $("#tblVoucherDetail").data('rows')[nRowIndex].SSName="";
            var oDVObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
            var sNewAccountCode = MakeAccountCode(oDVObj);
            $("#tblVoucherDetail").data('rows')[nRowIndex].AccountCode=sNewAccountCode;
            var accountcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountcodeclass');
            $(accountcodeControll).val(sNewAccountCode);
            InitializeKeyDownEvent(".pcodeclass"); return;
        }
        else if(classname===".pcodeclass")
        {
            var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
            var pcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
            var pcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.pcodeclass');
            $(pcodeControll).val("00000");
            $(pcodeControll).removeClass("textboxstyle");
            $(pcodeControll).addClass("highlight");
            $(pcodeControll).addClass("textboxstyle2");
            var nInputBoxIndex=$('.pcodeclass').index(pcodeControll);
            ResetAllInputBox(nInputBoxIndex, '.dcodeclass');
            $("#tblVoucherDetail").data('rows')[nRowIndex].PID=0;
            $("#tblVoucherDetail").data('rows')[nRowIndex].PCode="00000";
            $("#tblVoucherDetail").data('rows')[nRowIndex].PName="";
            $("#tblVoucherDetail").data('rows')[nRowIndex].PSName="";
            var oDVObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
            var sNewAccountCode = MakeAccountCode(oDVObj);
            $("#tblVoucherDetail").data('rows')[nRowIndex].AccountCode=sNewAccountCode;
            var accountcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountcodeclass');
            $(accountcodeControll).val(sNewAccountCode);
            InitializeKeyDownEvent(".dcodeclass"); return;
        }
        else if(classname===".dcodeclass")
        {
            var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
            var dcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
            var dcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.dcodeclass');
            $(dcodeControll).val("00");
            $(dcodeControll).removeClass("textboxstyle");
            $(dcodeControll).addClass("highlight");
            $(dcodeControll).addClass("textboxstyle2");
            var nInputBoxIndex=$('.dcodeclass').index(dcodeControll);
            ResetAllInputBox(nInputBoxIndex, '.ahcodeclass');
            $("#tblVoucherDetail").data('rows')[nRowIndex].DptID=0;
            $("#tblVoucherDetail").data('rows')[nRowIndex].DCode="00";
            $("#tblVoucherDetail").data('rows')[nRowIndex].DName="";
            $("#tblVoucherDetail").data('rows')[nRowIndex].DSName="";
            var oDVObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
            var sNewAccountCode = MakeAccountCode(oDVObj);
            $("#tblVoucherDetail").data('rows')[nRowIndex].AccountCode=sNewAccountCode;
            var accountcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountcodeclass');
            $(accountcodeControll).val(sNewAccountCode);
            InitializeKeyDownEvent(".ahcodeclass"); return;
        }
        else if(classname===".cccodeclass")
        {
            var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
            var cccodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
            var cccodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.cccodeclass');
            $(cccodeControll).val("0000");
            $(cccodeControll).removeClass("textboxstyle");
            $(cccodeControll).addClass("highlight");
            $(cccodeControll).addClass("textboxstyle2");
            var nInputBoxIndex=$('.cccodeclass').index(cccodeControll);
            ResetAllInputBox(nInputBoxIndex, '.narrationclass');
            $("#tblVoucherDetail").data('rows')[nRowIndex].CCID=0;
            $("#tblVoucherDetail").data('rows')[nRowIndex].CCCode="0000";
            $("#tblVoucherDetail").data('rows')[nRowIndex].CCName="";
            var oDVObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
            var sNewAccountCode = MakeAccountCode(oDVObj);
            $("#tblVoucherDetail").data('rows')[nRowIndex].AccountCode=sNewAccountCode;
            var accountcodeControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountcodeclass');
            $(accountcodeControll).val(sNewAccountCode);
            InitializeKeyDownEvent(".narrationclass"); return;
        }
    }

    function IdentifyConfiguration(nRowIndex,InputControl)
    {
        var nRowCount=$("#tblVoucherDetail").data('rows').length;
        if(nRowIndex==nRowCount-1)
        {
            var oVDObjs = PushObject(nRowIndex, 0);
            RemakeGrid(oVDObjs);
        }
        ResetAllRows();
        GridStyleVoucherDetail(InputControl);
    }

    function PushObject(nCurrentRowIndex, nExplationType)
    {
        var oVDObjs=[];
        var oTempVDObjs= $("#tblVoucherDetail").data('rows');
        for(var i=0; i<oTempVDObjs.length; i++)
        {
            oVDObjs.push(oTempVDObjs[i]);
            if(i==nCurrentRowIndex)
            {
                var oVDObj=NewObject(nExplationType);
                oVDObjs.push(oVDObj);
            }
        }
        return oVDObjs;
    }

    function GridStyleVoucherDetail(InputControl)
    {
        var nCurrentRowIndex =parseInt(InputControl.attributes["rowIndex"].value);
        var nNextRowIndex =nCurrentRowIndex+1;
        $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
        var nDebitCreditIndex= $('.debitcreditclass').index($('#tblVoucherDetail tr').eq(nNextRowIndex).find('input.debitcreditclass'));
        ResetAllInputBox(nDebitCreditIndex, '.debitcreditclass');
        RefreshSummery();
        InitializeKeyDownEvent(".debitcreditclass"); return;
    }

    function InitializeEvent()
    {
        $("#tblVoucherDetail tr").click(function() {
            ResetAllRows();
            $(this).addClass("highlight");
            $(this).find('input').addClass("textboxstyle2");
            $("#tblVoucherDetail").data("selectedIndex", this.rowIndex);
            ResetAllInputBox(_nInputBoxIndex, _sInputBoxClass);
        });

        $('.debitcreditclass').keyup(function (e) {
            if (e.which == 68) {
                $(this).val("Debit");
            }
            else if (e.which == 67) {
                $(this).val("");
            }
        });

        $('.debitcreditclass').click(function (e) {
            _nInputBoxIndex = $('.debitcreditclass').index(this);
            _sInputBoxClass='.debitcreditclass';
            InitializeKeyDownEvent(".debitcreditclass"); return;
        });

        $('.bcodeclass').click(function (e) {
            _nInputBoxIndex = $('.bcodeclass').index(this);
            _sInputBoxClass='.bcodeclass';
            InitializeKeyDownEvent(".bcodeclass"); return;
        });

        $('.acodeclass').click(function (e) {
            _nInputBoxIndex = $('.acodeclass').index(this);
            _sInputBoxClass='.acodeclass';
            InitializeKeyDownEvent(".acodeclass"); return;
        });

        $('.zcodeclass').click(function (e) {
            _nInputBoxIndex = $('.zcodeclass').index(this);
            _sInputBoxClass='.zcodeclass';
            InitializeKeyDownEvent(".zcodeclass"); return;
        });

        $('.scodeclass').click(function (e) {
            _nInputBoxIndex = $('.scodeclass').index(this);
            _sInputBoxClass='.scodeclass';
            InitializeKeyDownEvent(".scodeclass"); return;
        });

        $('.pcodeclass').click(function (e) {
            _nInputBoxIndex = $('.pcodeclass').index(this);
            _sInputBoxClass='.pcodeclass';
            InitializeKeyDownEvent(".pcodeclass"); return;
        });

        $('.dcodeclass').click(function (e) {
            _nInputBoxIndex = $('.dcodeclass').index(this);
            _sInputBoxClass='.dcodeclass';
            InitializeKeyDownEvent(".dcodeclass"); return;
        });

        $('.ahcodeclass').click(function (e) {
            _nInputBoxIndex = $('.ahcodeclass').index(this);
            _sInputBoxClass='.ahcodeclass';
            InitializeKeyDownEvent(".ahcodeclass"); return;
        });

        $('.cccodeclass').click(function (e) {
            _nInputBoxIndex = $('.cccodeclass').index(this);
            _sInputBoxClass='.cccodeclass';
            InitializeKeyDownEvent(".cccodeclass"); return;
        });

        $('.accountcodeclass').click(function (e) {
            _nInputBoxIndex = $('.accountcodeclass').index(this);
            _sInputBoxClass='.accountcodeclass';
            InitializeKeyDownEvent(".accountcodeclass"); return;
        });

        $('.narrationclass').click(function (e) {
            _nInputBoxIndex = $('.narrationclass').index(this);
            _sInputBoxClass='.narrationclass';
            InitializeKeyDownEvent(".narrationclass"); return;
        });

        $('.debitclass').click(function (e) {
            _nInputBoxIndex = $('.debitclass').index(this);
            _sInputBoxClass='.debitclass';
            InitializeKeyDownEvent(".debitclass"); return;
        });

        $('.creditclass').click(function (e) {
            _nInputBoxIndex = $('.creditclass').index(this);
            _sInputBoxClass='.creditclass';
            InitializeKeyDownEvent(".creditclass"); return;
        });

        ////number allow only numeric value
        $(".debitclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".creditclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });
    }

    function ResetAllRows()
    {
        var tblVoucherDetail=document.getElementById("tblVoucherDetail");
        if(tblVoucherDetail.rows!=null)
        {
            for(var i=0; i<tblVoucherDetail.rows.length; i++)
            {
                $('#tblVoucherDetail tr').eq(i).removeClass("highlight");
                $('#tblVoucherDetail tr').eq(i).find('input').removeClass("textboxstyle2");
            }
        }
    }

    function ResetAllInputBox(index, sClass)
    {
        for(var i=0; i<$('.debitcreditclass').length; i++)
        {
            $('.delClass').eq(i).removeClass("highlight");
            $('.delClass').eq(i).removeClass("textboxstyle");

            $('.debitcreditclass').eq(i).removeClass("highlight");
            $('.debitcreditclass').eq(i).removeClass("textboxstyle");

            $('.bcodeclass').eq(i).removeClass("highlight");
            $('.bcodeclass').eq(i).removeClass("textboxstyle");

            $('.acodeclass').eq(i).removeClass("highlight");
            $('.acodeclass').eq(i).removeClass("textboxstyle");

            $('.zcodeclass').eq(i).removeClass("highlight");
            $('.zcodeclass').eq(i).removeClass("textboxstyle");

            $('.scodeclass').eq(i).removeClass("highlight");
            $('.scodeclass').eq(i).removeClass("textboxstyle");

            $('.pcodeclass').eq(i).removeClass("highlight");
            $('.pcodeclass').eq(i).removeClass("textboxstyle");

            $('.dcodeclass').eq(i).removeClass("highlight");
            $('.dcodeclass').eq(i).removeClass("textboxstyle");

            $('.ahcodeclass').eq(i).removeClass("highlight");
            $('.ahcodeclass').eq(i).removeClass("textboxstyle");

            $('.cccodeclass').eq(i).removeClass("highlight");
            $('.cccodeclass').eq(i).removeClass("textboxstyle");

            $('.accountcodeclass').eq(i).removeClass("highlight");
            $('.accountcodeclass').eq(i).removeClass("textboxstyle");

            $('.narrationclass').eq(i).removeClass("highlight");
            $('.narrationclass').eq(i).removeClass("textboxstyle");

            $('.debitclass').eq(i).removeClass("highlight");
            $('.debitclass').eq(i).removeClass("textboxstyle");

            $('.creditclass').eq(i).removeClass("highlight");
            $('.creditclass').eq(i).removeClass("textboxstyle");

            $('.bcdebitclass').eq(i).removeClass("highlight");
            $('.bcdebitclass').eq(i).removeClass("textboxstyle");

            $('.bccreditclass').eq(i).removeClass("highlight");
            $('.bccreditclass').eq(i).removeClass("textboxstyle");
        }

        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('input').addClass("highlight");
        $(sClass).eq(index).removeClass("textboxstyle2");
        $(sClass).eq(index).addClass("textboxstyle");
        $(sClass).eq(index).show();
        $(sClass).eq(index).focus();
        $(sClass).eq(index).select();
    }

    function RefreshSummery()
    {
        RefreshTotalAmount();
        var nTotalDebitAmount=0; var nTotalCreditAmount=0;
        var nBCTotalDebitAmount=0; var nBCTotalCreditAmount=0;
        var oVDObjs= $("#tblVoucherDetail").data('rows');
        if(oVDObjs==null)oVDObjs=[];
        for(var i=0; i<oVDObjs.length; i++)
        {
            nTotalDebitAmount=nTotalDebitAmount+ parseFloat(oVDObjs[i].DrAmount)
            nTotalCreditAmount=nTotalCreditAmount+parseFloat(oVDObjs[i].CrAmount);
            nBCTotalDebitAmount=nBCTotalDebitAmount+parseFloat(oVDObjs[i].BCDrAmount);
            nBCTotalCreditAmount=nBCTotalCreditAmount+parseFloat(oVDObjs[i].BCCrAmount);
        }
        $('#lblTotalDebitAmount').html(formatPrice(nTotalDebitAmount, null));
        $('#lblBCTotalDebitAmount').html(formatPrice(nBCTotalDebitAmount, null));
    }

    function NewObject(nObjType)
    {
        var sBCode="00";
        var sBName="";
        var sBSName="";
        var sACode="00";
        var sAName="";
        var sASName="";
        var sZCode="00";
        var sZName="";
        var sZSName="";
        var sSCode="0000";
        var sSName="";
        var sSSName="";
        var sPCode="00000";
        var sPName="";
        var sPSName="";
        var sDCode="00";
        var sDName="";
        var sDSName="";

        if(parseInt(_oPurchaseInvoice.BUID)>0)
        {
            sBCode= _oPurchaseInvoice.BUCode;
            sBName= _oPurchaseInvoice.BUName;
        }
        if(parseInt(_oPurchaseInvoice.AreaID)>0)
        {
            sACode = _oPurchaseInvoice.AreaCode;
            sAName = _oPurchaseInvoice.AreaName;
        }
        if(parseInt(_oPurchaseInvoice.ZoneID)>0)
        {
            sZCode = _oPurchaseInvoice.ZoneCode;
            sZName = _oPurchaseInvoice.ZoneName;
        }
        if(parseInt(_oPurchaseInvoice.SiteID)>0)
        {
            sSCode = _oPurchaseInvoice.SiteCode;
            sSName = _oPurchaseInvoice.SiteName;
        }
        if(parseInt(_oPurchaseInvoice.ProductID)>0)
        {
            sPCode = _oPurchaseInvoice.ProductCode;
            sPName = _oPurchaseInvoice.ProductName;
        }
        if(parseInt(_oPurchaseInvoice.DeptID)>0)
        {
            sDCode = _oPurchaseInvoice.DeptCode;
            sDName = _oPurchaseInvoice.DeptName;
        }

        var oVDObj = {
            VDObjID:0,
            DR_CR:"Debit",
            BUID: _oPurchaseInvoice.BUID,
            AID: _oPurchaseInvoice.AreaID,
            ZID: _oPurchaseInvoice.ZoneID,
            SID: _oPurchaseInvoice.SiteID,
            PID: _oPurchaseInvoice.ProductID,
            DptID: _oPurchaseInvoice.DeptID,
            AHID:0,
            CCID:0,
            CID:0,
            CAmount:0,
            CRate:0,
            Amount :0,
            IsDr :false,
            Detail:"",
            AHCode:"0000000",
            AHName:"",
            CName:"",
            CSymbol:"",
            BCode: sBCode,
            BName: sBName,
            BSName: sBSName,
            ACode: sACode,
            AName: sAName,
            ASName: sASName,
            ZCode: sZCode,
            ZName: sZName,
            ZSName: sZSName,
            SCode: sSCode,
            SName: sSName,
            SSName: sSSName,
            PCode: sPCode,
            PName: sPName,
            PSName: sPSName,
            DCode: sDCode,
            DName: sDName,
            DSName: sDSName,
            CCCode: "0000",
            CCName:"",
            DrAmount:0,
            CrAmount:0,
            BCDrAmount:0,
            BCCrAmount:0,
            IsAEfct : false,
            IsZEfct : false,
            IsSEfct : false,
            IsCCAply : false,
            AccountCode : "00.00.00.0000.00000.00.0000000.0000"
        };
        return oVDObj;
    }

    function RemakeGrid(oVDObjs)
    {
        $("#tblVoucherDetail").find("tr").remove();
        $('#tblVoucherDetail').data('rows', []);
        for(var i=0; i<oVDObjs.length;i++)
        {
            AddVoucherDetail(oVDObjs[i]);
        }
    }

    function AddVoucherDetail(oVDObj)
    {
        var nRowIndex=0;
        var oVDObjs = $('#tblVoucherDetail').data('rows');
        if(oVDObjs=='undefined' || oVDObjs==null||oVDObjs.length<=0)
        {
            nRowIndex=0;
            oVDObjs =[];
        }
        else
        {
            nRowIndex=oVDObjs.length;
        }
        oVDObjs.push(oVDObj);
        $('#tblVoucherDetail').data('rows', oVDObjs);
        var table = document.getElementById('tblVoucherDetail');
        var row = table.insertRow(nRowIndex);

        var cellDel = row.insertCell(0);
        cellDel.width= "3%";
        cellDel.innerHTML = '<label id="delClass'+nRowIndex+'" rowIndex="'+nRowIndex+'"onclick="DeleteRow('+nRowIndex+');"  class="delClass" style="width:96%;color:#c00;cursor:pointer;" >X</label>';

        var cellDebitCredit = row.insertCell(1);
        cellDebitCredit.width= "3%";
        cellDebitCredit.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+ oVDObj.DR_CR +'" class="debitcreditclass" style="width:96%""/>';

        var cellBCode = row.insertCell(2);
        cellBCode.width= "5%";
        cellBCode.innerHTML = '<input onmouseover="bcodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.BCode+'" class="bcodeclass" style="width:96%" />';

        var cellACode = row.insertCell(3);
        cellACode.width= "5%";
        cellACode.innerHTML = '<input onmouseover="acodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.ACode+'" class="acodeclass" style="width:96%" />';

        var cellZCode = row.insertCell(4);
        cellZCode.width= "5%";
        cellZCode.innerHTML = '<input onmouseover="zcodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.ZCode+'" class="zcodeclass" style="width:96%" />';

        var cellSCode = row.insertCell(5);
        cellSCode.width= "5%";
        cellSCode.innerHTML = '<input onmouseover="scodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.SCode+'" class="scodeclass" style="width:96%" />';

        var cellPCode = row.insertCell(6);
        cellPCode.width= "6%";
        cellPCode.innerHTML = '<input onmouseover="pcodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.PCode+'" class="pcodeclass" style="width:96%" />';

        var cellDCode = row.insertCell(7);
        cellDCode.width= "5%";
        cellDCode.innerHTML = '<input onmouseover="dcodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.DCode+'" class="dcodeclass" style="width:96%" />';

        var cellAHCode = row.insertCell(8);
        cellAHCode.width= "5%";
        cellAHCode.innerHTML = '<input onmouseover="ahcodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.AHCode+'" class="ahcodeclass" style="width:96%" />';

        var cellCCCode = row.insertCell(9);
        cellCCCode.width= "5%";
        cellCCCode.innerHTML = '<input onmouseover="cccodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.CCCode+'" class="cccodeclass" style="width:96%" />';

        var cellAccountCode = row.insertCell(10);
        cellAccountCode.width= "13%";
        cellAccountCode.innerHTML = '<input onmouseover="accountcodetooltip('+nRowIndex+');" type="text" rowIndex="'+nRowIndex+'" value="'+MakeAccountCode(oVDObj)+'" class="accountcodeclass" style="width:97%" readonly="readonly" />';

        var cellNarration = row.insertCell(11);
        cellNarration.width= "12%";
        cellNarration.innerHTML = '<input onmouseover="narrationtooltip('+nRowIndex+');"  type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.Detail+'" class="narrationclass" style="width:97%" />';

        var cellDebitAmount = row.insertCell(12);
        cellDebitAmount.width= "7%";
        cellDebitAmount.innerHTML = '<input type="text" id="debitclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.DrAmount,null)+'" class="debitclass" style="width:97%" />';

        var cellCreditAmount = row.insertCell(13);
        cellCreditAmount.width= "7%";
        cellCreditAmount.innerHTML = '<input type="text" id="creditclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.CrAmount,null)+'" class="creditclass" style="width:97%" />';

        var cellBCDebitAmount = row.insertCell(14);
        cellBCDebitAmount.width= "7%";
        cellBCDebitAmount.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.BCDrAmount,null)+'" class="bcdebitclass" style="width:97%" disabled="disabled"/>';

        var cellBCCreditAmount = row.insertCell(15);
        cellBCCreditAmount.width= "7%";
        cellBCCreditAmount.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.BCCrAmount,null)+'" class="bccreditclass" style="width:97%" disabled="disabled"/>';

        if(oVDObj.IsDr===true)
        {
            $(".debitclass").eq(nRowIndex).prop('disabled', false);
            $(".creditclass").eq(nRowIndex).prop('disabled', true);
        }
        else
        {
            $(".debitclass").eq(nRowIndex).prop('disabled', true);
            $(".creditclass").eq(nRowIndex).prop('disabled', false);
        }
        $(".delClass").parent().css("text-align","center");
        EnableDisableControl(nRowIndex, oVDObj);
        InitializeEvent();
    }

    function EnableDisableControl(nRowIndex, oVDObj)
    {
        $(".acodeclass").eq(nRowIndex).prop('disabled', !oVDObj.IsAEfct);
        $(".zcodeclass").eq(nRowIndex).prop('disabled', !oVDObj.IsZEfct);
        $(".scodeclass").eq(nRowIndex).prop('disabled', !oVDObj.IsSEfct);
        $(".cccodeclass").eq(nRowIndex).prop('disabled', !oVDObj.IsCCAply);
    }

    function bcodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ "+oVDObj.BCode+" : "+oVDObj.BName+" ]");
    }

    function acodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ "+oVDObj.ACode+" : "+oVDObj.AName+" ]");
    }

    function zcodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ "+oVDObj.ZCode+" : "+oVDObj.ZName+" ]");
    }

    function scodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ "+oVDObj.SCode+" : "+oVDObj.SName+" ]");
    }

    function pcodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ "+oVDObj.PCode+" : "+oVDObj.PName+" ]");
    }

    function dcodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ "+oVDObj.DCode+" : "+oVDObj.DName+" ]");
    }

    function ahcodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ "+oVDObj.AHCode+" : "+oVDObj.AHName+" ]");
    }

    function cccodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ "+oVDObj.CCCode+" : "+oVDObj.CCName+" ]");
    }

    function accountcodetooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ Account Code : "+oVDObj.AccountCode+" ]");
    }

    function narrationtooltip(nRowIndex)
    {
        var oVDObj= $("#tblVoucherDetail").data('rows')[nRowIndex];
        $(".lblToolTip").html("[ Narration : "+oVDObj.Detail+" ]");
    }

    $('#tblVoucherDetail').mouseout(function() {
        $(".lblToolTip").html("");
    });

    function MakeAccountCode(oVDObj)
    {
        var sAccountCode ="";
        if(oVDObj!=null)
        {
            sAccountCode = oVDObj.BCode +"."+oVDObj.ACode +"." +oVDObj.ZCode +"." + oVDObj.SCode + "." +oVDObj.PCode +"."+oVDObj.DCode +"."+oVDObj.AHCode +"."+oVDObj.CCCode;
        }
        return sAccountCode;
    }

    function ChequeDebitAmount()
    {
        var nTotalDebitAmount=0; var nTotalCreditAmount=0;
        var oVDObjs= $("#tblVoucherDetail").data('rows');
        for(var i=0; i<oVDObjs.length; i++)
        {
            nTotalDebitAmount=nTotalDebitAmount+ parseFloat(oVDObjs[i].DrAmount)
            nTotalCreditAmount=nTotalCreditAmount+parseFloat(oVDObjs[i].CrAmount);
        }
        if(parseFloat(nTotalDebitAmount)<=0)
        {
            return false;
        }
        return true;
    }

    function DeleteRow(nRowIndex)
    {
        if(!confirm("Confirm to delete?")) return false;
        var oTempVDObjs= $("#tblVoucherDetail").data('rows');
        var oVDObjs =[];

        for(var i=0; i< oTempVDObjs.length; i++)
        {
            if(i!=nRowIndex)
            {
                oVDObjs.push(oTempVDObjs[i]);
            }
        }
        if(oVDObjs==null || oVDObjs.length<1)
        {
            var oVDObj=NewObject(0);
            oVDObjs.push(oVDObj);
        }
        RemakeGrid(oVDObjs);
        if(nRowIndex<=0)
        {
            nRowIndex=0;
        }
        else
        {
            nRowIndex=nRowIndex-1;
        }
        var sSelectedClass= ".debitcreditclass";
        $('#tblVoucherDetail').data('rows', oVDObjs);
        $("#tblVoucherDetail").data("selectedIndex", nRowIndex);
        $('#tblVoucherDetail tr').eq(nRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('input').addClass("highlight");
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).removeClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).addClass("textboxstyle");
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).show();
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).focus();
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).select();
        InitializeKeyDownEvent(sSelectedClass);
        RefreshSummery();
    }

    $("#txtBillAmount").keyup(function (e){
        var sBillAmount =  $('#txtBillAmount').val();
        var oPIDetails = $('#tblPurchaseInvoiceDetail').datagrid('getRows');
        var  nTotalValue= 0;
        for(var i = 0; i<oPIDetails.length;i++)
        {
            nTotalValue+=parseFloat(oPIDetails[i].PODQty*oPIDetails[i].PODRate);
        }

        for(var i = 0; i<oPIDetails.length;i++)
        {
            oPIDetails[i].UnitPrice=parseFloat(oPIDetails[i].PODRate);
            oPIDetails[i].Amount=(parseFloat(oPIDetails[i].PODQty*oPIDetails[i].PODRate)*sBillAmount)/nTotalValue;

            oPIDetails[i].PayableAmount=oPIDetails[i].Amount;

            oPIDetails[i].Qty=parseFloat(oPIDetails[i].Amount/oPIDetails[i].UnitPrice);
        }
        RefreshList(oPIDetails);
        editIndex=undefined;
        RefreshTotalAmount(true);
    });
</script>