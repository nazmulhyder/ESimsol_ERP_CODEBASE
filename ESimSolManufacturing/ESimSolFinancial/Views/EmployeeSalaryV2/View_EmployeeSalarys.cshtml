@model IEnumerable<ESimSol.BusinessObjects.EmployeeSalaryV2>
    @{
        ViewBag.Title = "Employee Salary";//V2
    }
    <div style="margin-left:0px; width:1030px; height:500px" class="menuMainCollectionTable">
        <table id="tblEmployeeSalary" title="Employee Salary  List" class="easyui-datagrid" style="width:100%;height:510px" fitcolumns="false" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbar">
            <thead>
                <tr>
                    <th data-options="field:'Selected',checkbox:true"></th>
                    <th field="EmployeeCode" width="10%" align="left">Code</th>
                    <th field="EmployeeName" width="13%" align="left">Name</th>
                    <th field="DepartmentName" width="13%" align="left">Department</th>
                    <th field="DesignationName" width="13%" align="left">Designation</th>
                    <th field="GrossAmount" width="10%" align="right" formatter="formatPrice">Gross Salary</th>
                    <th field="DeriveNetAmount" width="10%" align="right" formatter="formatPrice">Net Salary</th>
                    <th field="SalaryDateInString" width="10%" align="center">Process Date</th>
                    <th field="SalaryForInString" width="17%" align="left">Salary For</th>
                </tr>
            </thead>
        </table>


        <div id="toolbar" style="height:auto;">
            <table border="0" cellpadding="2" cellspacing="1" style="border-collapse:separate">
                <tr>
                    <td >
                        <input id="txtBusinessUnit_Collection" type="text" style="width:14%;" placeholder="Pick Business Unit" />
                        <a id="btnBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                        <a id="btnResetBusinessUnitPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

                        <input id="txtLocation_Colection" style="width:110px;" placeholder="Pick Location" type="text" />
                        <a id="btnLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                        <a id="btnResetLocationPicker_Colection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

                        <input id="txtDepartment_Collection" style="width:100px;" type="text" placeholder="Pick Department" />
                        <a id="btnDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                        <a id="btnResetDepartmentPicker_Collection" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>

                        <input id="txtEmployee_Collection" style="width:110px;" type="text" placeholder="Type Code & Enter" />
                        <a id="btnEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-pick"></a>
                        <a id="btnCEmployee" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-clear"></a>
                        </td>
                    <td style="width:200px; border:1px solid black; text-align:center">
                        <input type="button" id="btnAdvSearch" style="width:60%" value="Adv Search" />
                        <input type="button" id="btnAdvSearchClear" style="width:35%" value="Rest" />
                    </td>
                  
                    </tr>
                <tr>
                    <td colspan="2">
                        Start Date:
                            <input id="txtSalaryStartDate" type="text" style="width: 100px;display:none" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            to
                            <input id="txtSalaryEndDate" type="text" style="width: 100px;display:none" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                       
                        
                       
                        
                        <select id="cboGroupBySerial" style="width:150px;">
                            <option value="0">--Select Group By/Serial--</option>
                            <option value="1">Group By Dept</option>
                            <option value="2">By Serial</option>
                            <option value="3">Serial Continue</option>
                        </select>
                      
                        <a id="btnSearchByDepartmentAndDateRange" href="javascript:void(0)" class="easyui-linkbutton" plain="true" iconcls="icon-search" onclick="SearchByDepartmentAndDateRangeWithPasignation()"></a>
                        <input id="chkRound" type="checkbox" /> <label id="lblRound" for="chkRound">Round</label>
                        <input id="chkIsOT" type="checkbox" /> <label id="lblRound" for="chkIsOT">OT</label>
                        <select id="cboPrintFormat" style="width:13%;"></select>
                        <select id="cboSalaryFieldSetup" style="width:13%;"></select>
                        <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" ></a>
                        <a id="btnExcelSalarySheet" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true"></a>

                    </td>
                </tr>
                </table>

        </div>

        
        <div id="winPrintBanKSheet" class="easyui-window winstyle" title="Select Column" style="width:700px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div style="float:left">
                    <fieldset style="width:250px">
                        <legend style="font-weight: bold">Select Column</legend>
                        @* table1 start*@
                        <table id="tblPrintColumns" class="easyui-datagrid" style="width: 230px; height: 310px; font-size: 11px;font-weight: normal;" fitcolumns="false" rownumbers="false" pagination="false" singleselect="false" autorowheight="true">
                            <thead>
                                <tr>
                                    <th data-options="field:'Selected',checkbox:true"></th>
                                    <th field="ColumnName" width="180" align="left">
                                        Column Name
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </fieldset>
                </div>
                <div style="float:right">
                    <fieldset style="width:420px; float:right; height:320px">
                        <legend style="font-weight: bold">Letter Information</legend>
                        <table border="0" cellpadding="2" width="400" style="margin-top:40px">
                            <tr>
                                <td style="width:30%; text-align: right"><label style="font-weight:bold">Date :</label></td>
                                <td width="65%">
                                    <input id="dLetterInformationDate" type="text" style="width:120px;" class="easyui-datebox"
                                           data-options="formatter:icsdateformat,parser:icsdateparser" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width:30%; text-align: right"><label style="font-weight:bold">Account No :</label></td>
                                <td width="65%">
                                    <input type="text" id="txtBankAccountNo" style="width:75%" />
                                    <button id="btnBankAccountCancel">C</button>
                                    <button id="btnBancAccountPick">P</button>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:30%; text-align: right"><label style="font-weight:bold">Bank Name :</label></td>
                                <td width="65%">
                                    <input type="text" id="txtBankName" style="width:100%" disabled="disabled" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width:30%; text-align: right"><label style="font-weight:bold">Branch Name :</label></td>
                                <td width="65%">
                                    <input type="text" id="txtBankBranchName" style="width:100%" disabled="disabled" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width:30%; text-align: right"><label style="font-weight:bold" hidden="hidden">Address :</label></td>
                                <td width="65%">
                                    <input type="text" id="txtBankBranchAddress" style="width:100%" disabled="disabled" hidden="hidden" />
                                </td>
                            </tr>
                            <tr>
                                <td style="width:30%; text-align: right"><label style="font-weight:bold">Paper Type :</label></td>
                                <td width="65%">
                                    <select style="width:100%" id="cboPaperType">
                                        <option value="PrintWithBlankPaper">Print With Blank Paper</option>
                                        <option value="PrintWithPad">Print With Pad</option>
                                    </select>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:30%; text-align: right"><label style="font-weight: bold">Header(Inch):</label></td>
                                <td width="65%">
                                    <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                        <tr>
                                            <td style="width:30%">
                                                <input type="text" id="txtHeaderHeightInch" style="width:100%" />
                                            </td>
                                            <td style="width:40%; text-align:right"><label style="font-weight:bold">Footer(Inch) :</label></td>
                                            <td style="width:30%">
                                                <input type="text" id="txtFooterHeightInch" style="width:100%" />
                                            </td>
                                        </tr>
                                    </table>

                                </td>
                            </tr>
                            <tr>
                                <td width="30%"></td>
                                <td width="65%">
                                    <label style="font-weight:bold"> <input type="checkbox" id="chkSearchByBank" /> Search By Bank </label>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </div>
                <div style="float:left">
                    <fieldset style="width:680px">
                        <legend style="font-weight: bold">Action</legend>
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;">
                            <tr>
                                <td style="width: 630px; text-align: right;">
                                    <a id="btnPrintSelectedCols" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="printSelectedColumns()">Ok</a>
                                    <a id="btnCancel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Cancel</a>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </div>
            </div>
        </div>


        <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="locationtree" data-options="checkbox:true" singleselect="false"></ul>
                </div>

                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:400px; text-align:right"></td>

                            <td style="width:50px">
                                <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
        <div id="winAdvSearch" class="easyui-window winClass" style="width:650px;height:430px" title="Adv. Search" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <fieldset style="margin-bottom: 0px;">
                <legend>Searching Criteria</legend>
                <table style="width:100%;text-align:right;">
                    <tr>
                        <td style=" width:25%;text-align:right;">
                            <label>Employee Designation :</label>
                        </td>
                        <td colspan="3" style=" width:75%;text-align:left;">
                            <input id="txtDesignation" class="reset-text" placeholder="Enter Designation" style="width:80%" />
                            <a id="btnPickDesignation" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnResetDesignation" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>
                    </tr>

                    <tr>
                        <td style=" width:25%;text-align:right;">
                            <label>Salary Scheme:</label>
                        </td>
                        <td colspan="3" style=" width:75%;text-align:left;">
                            <input id="txtSalaryScheme" class="reset-text" placeholder="Enter Salary Scheme" style="width:80%" />
                            <a id="btnPickSalaryScheme" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnResetSalaryScheme" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>
                    </tr>
                    <tr>
                        <td style=" width:25%;text-align:right;">
                            <label>Attendance Scheme:</label>
                        </td>
                        <td colspan="3" style=" width:75%;text-align:left;">
                            <input id="txtAttendanceScheme" class="reset-text" placeholder="" disabled="disabled" style="width:80%" />
                            <a id="btnPickAttendanceScheme" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnResetAttendanceScheme" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>
                    </tr>
                    <tr>
                        <td style=" width:25%;text-align:right;">
                            <label>Employee Group :</label>
                        </td>
                        <td colspan="3" style=" width:75%;text-align:left;">
                            <input id="txtEmployeeGroup" style="width:80%;" type="text" placeholder="Enter Group" />
                            <a id="btnEmployeeGroupPicker" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnEmployeeGroupPickerReset" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>
                    </tr>

                    <tr>
                        <td style=" width:25%;text-align:right;">
                            <label>Employee Block :</label>
                        </td>
                        <td colspan="3" style=" width:75%;text-align:left;">
                            <input id="txtEmployeeBlock" style="width:80%;" type="text" placeholder="Enter Block" />
                            <a id="btnEmployeeBlockPicker" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnEmployeeBlockReset" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>
                    </tr>

                    <tr>
                        <td style=" width:25%;text-align:right;">
                            <label>Employee Type :</label>
                        </td>
                        <td colspan="3" style=" width:75%;text-align:left;">
                            <input id="txtEmployeeType" class="reset-text" placeholder="Enter Employee Type" style="width:80%" />
                            <a id="btnPickEmployeeType" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnResetEmployeeType" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>
                    </tr>
                    <tr>
                        <td style=" width:25%;text-align:right;">
                            <label>Employee Shift :</label>
                        </td>
                        <td colspan="3" style=" width:75%;text-align:left;">
                            <input id="txtShift" class="reset-text" placeholder="Enter Shift" style="width:80%" />
                            <a id="btnPickShift" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                            <a id="btnResetShift" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                        </td>
                    </tr>
                    <tr>

                        <td style=" width:25%;text-align:right;">
                            <label> S. Range :</label>
                        </td>

                        <td colspan="3" style=" width:75%;text-align:right;">
                            <table style=" width:100%;text-align:left;">
                                <tr>
                                    <td style=" width:40%;text-align:left;">

                                        <input id="txtStartSalaryRange" type="text" style="width:135px" /> 
                                    </td>
                                    <td style="width:10%">To</td>
                                    <td style=" width:40%;text-align:left;">

                                        <input id="txtEndSalaryRange" type="text" style="width:135px" />
                                    </td>
                                    <td style="width:10%"></td>
                                </tr>
                            </table>
                        </td>


                    </tr>
                    <tr>
                        <td style=" width:25%;text-align:right;">
                            <label>Joining Date:</label>
                        </td>
                        <td colspan="3" style=" width:75%;text-align:right;">
                            <table style=" width:100%;text-align:left;">
                                <tr>
                                    <td style=" width:40%;text-align:left;">
                                        <input type="checkbox" id="chkJoiningDate" />
                                        <input id="txtJoiningStartDate" type="text" style="width: 120px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    </td>
                                    <td style="width:10%">To</td>
                                    <td style=" width:40%;text-align:left;">

                                        <input id="txtJoiningEndDate" type="text" style="width: 137px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    </td>
                                    <td style="width:10%"></td>
                                    
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style=" width:25%;text-align:right;">
                            <label>Employee Category:</label>
                        </td>
                        <td style=" width:25%;text-align:left;">
                            <select id="cboEmpCategory" style="width:90%;"></select>
                        </td>
                        <td style=" width:50%;text-align:left;" colspan="2">
                            <label>Payment Type:</label>
                            <select id="cboPaymentType">
                                <option value="0">--Payment Type--</option>
                                <option value="1">Bank</option>
                                <option value="2">Cash</option>
                            </select>
                        </td>

                    </tr>
                   
                    <tr>
                        <td style=" width:25%;text-align:right;">
                            <label> Authentication No :</label>
                        </td>
                        <td style=" width:25%;text-align:left;">
                            <input id="txtAuthenticationNo" style="width:90%;" type="text" />
                        </td>
                       
                        <td style=" width:20%;text-align:right">
                           
                        </td>
                        <td style=" width:30%;text-align:left;">
                            <input id="chkNewJoin" type="checkbox" />
                            <label id="lblNewJoin" for="chkNewJoin">New Join</label>
                        </td>

                    </tr>

                </table>
            </fieldset>

            <fieldset>
                <legend>Actions : </legend>
                <table style="width:100%;text-align:right;">
                    <tr>
                        <td style="width:20%;text-align:right;"></td>
                        <td style="width:80%;text-align:right;">
                            <a id="btnOkAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                            <a id="btnCloseAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>  

        <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div style="font-family:Tahoma">
                <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                    <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
                </div>
                <fieldset>
                    <legend style="font-weight:bold"> Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                        <tr>
                            <td style="width:400px; text-align:right"></td>

                            <td style="width:50px">
                                <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>

    </div>


    <style type="text/css">
        .lblStar {
            color: #ff0000;
            font-weight: bold;
        }

        .tbl-AdvSearch {
            width: 100%;
            font-size: 11px;
            font-weight: bold;
            text-align: left;
            margin-left: 3px;
        }

        .td-AdvSearch-Level {
            text-align: right;
        }

        .td-AdvSearch-Input {
            text-align: left;
        }

        .txtfield-search {
            width: 312px;
            text-align: left;
            font-size: 11px;
        }

        .txtfield-picker {
            width: 265px;
            text-align: left;
            font-size: 11px;
        }

        .selection-search {
            width: 310px;
            text-align: left;
            font-size: 11px;
        }

        .pick-btn {
            width: 20px;
            text-align: center;
            font-size: 11px;
        }
    </style>
    <script type="text/javascript">



    $(document).ready(function ()
    {
        var oAURolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        var oSalarySheetFormats= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.SalarySheetFormats));
        var oSalaryFieldSetups=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.SalaryFieldSetups));

            $("#cboPrintFormat").data("SalarySheetFormats",oSalarySheetFormats);
            $("#cboEmpCategory").data("EmployeeCategorys",oEmployeeCategorys);
            $("#cboSalaryFieldSetup").data("SalaryFieldSetups",oSalaryFieldSetups);
            RefreshAdvSearch();
            RefreshControl();

        });
        function RefreshControl()
        {
            $('#txtHeaderHeightInch').icsCurrencyBox(null, null, 2);
            $('#txtFooterHeightInch').icsCurrencyBox(null, null, 2);
            $("#txtLocation_Colection").data("LocationIDs","");
            $("#txtDepartment_Collection").data("DepartmentIDs","");
            $("#txtEmployee_Collection").data("EmployeeIDs","");
            $("#txtBusinessUnit_Collection").data("BusinessUnitIDs","");
            $("#cboSalaryFieldSetup").hide();
            var startDate=new Date();
            $('#txtSalaryStartDate').datebox('setValue',icsdateformat(new Date(startDate.getFullYear(),startDate.getMonth(),1)));
            $('#txtStartSalaryRange,#txtEndSalaryRange').icsCurrencyBox(null, null, 2);
            var TotalDaysInMonth=new Date(startDate.getFullYear(), startDate.getMonth()+1, 0).getDate();
            var EndDate=new Date($('#txtSalaryStartDate').datebox('getValue'));
            EndDate.setDate(TotalDaysInMonth);
            $('#txtSalaryEndDate').datebox('setValue', icsdateformat(EndDate));
            LoadComboTimeCard();
        }
        $('#txtSalaryStartDate').datebox({
            onSelect: function(date){
                debugger;
                var startDate=new Date($('#txtSalaryStartDate').datebox('getValue'));
                var TotalDaysInMonth=new Date(startDate.getFullYear(), startDate.getMonth()+1, 0).getDate();
                $('#txtSalaryEndDate').datebox('setValue', icsdateformat(new Date(startDate.getFullYear(),startDate.getMonth(),TotalDaysInMonth)));
            }
        });

        function LoadComboTimeCard()
        {
            debugger;

            var oSalarySheetFormats=$("#cboPrintFormat").data("SalarySheetFormats");
            var oSalaryFieldSetups= $("#cboSalaryFieldSetup").data("SalaryFieldSetups");
            $("#cboPrintFormat").icsLoadCombo({
                List: oSalarySheetFormats,
                OptionValue: "id",
                DisplayText: "Value",
                InitialValue:"--Print Layout--"
            });
           
            $("#cboSalaryFieldSetup").icsLoadCombo({
                List: oSalaryFieldSetups,
                OptionValue: "SalaryFieldSetupID",
                DisplayText: "SalaryFieldSetupName",
                InitialValue:"--Salary Field--"
            });
            if(oSalaryFieldSetups.length==1)
            {
                $("#cboSalaryFieldSetup").val(oSalaryFieldSetups[0].SalaryFieldSetupID);
            }
        }

        $('#cboPrintFormat').change(function() {
            if(parseInt($("#cboPrintFormat").val())==2 ||parseInt($("#cboPrintFormat").val())==3)
            {
                $("#cboSalaryFieldSetup").show();
            }
            else
            {
                $("#cboSalaryFieldSetup").hide();
            }
          
        });

        /*-------------Location Picker----------------*/
        var btnLocation="";
        $("#btnLocationPicker_Colection").click(function(e){
            btnLocation = $(this).attr("id");
            var sBusinessUnitIDs ="";

            sBusinessUnitIDs=$("#txtBusinessUnit_Collection").data("BusinessUnitIDs");
            $("#winLocationPicker").icsWindow('open');
            var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oLocation,
                ControllerName: "Location",
                ActionName: "GetsLocationMenuTree",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {
                if (response.status && response.obj!=null) {
                    if (response.obj.TLocation.id > 0) {
                        $('#locationtree').tree({ data: [response.obj.TLocation] });
                    }
                }
            });
        });


        $('#txtLocation_Colection').keypress(function (e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                btnLocation = $(this).attr("id");
                var sBusinessUnitIDs ="";

                sBusinessUnitIDs=$("#txtBusinessUnit_Collection").data("BusinessUnitIDs");
                $("#winLocationPicker").icsWindow('open');
                var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
                var obj = {
                    BaseAddress: sessionStorage.getItem("BaseAddress"),
                    Object: oLocation,
                    ControllerName: "Location",
                    ActionName: "GetsLocationMenuTree",
                    IsWinClose: false
                };
                $.icsDataGet(obj, function (response) {

                    if (response.status && response.obj!=null) {
                        if (response.obj.TLocation.id > 0) {
                            $('#locationtree').tree({ data: [response.obj.TLocation] });
                        }
                    }
                });
            }
        });

        $("#btnLocationPickerClose").click(function(e){
            $("#winLocationPicker").icsWindow('close');
        });
        $("#btnResetLocationPicker_Colection").click(function(e){
            $('#txtLocation_Colection').val("");
            $("#txtLocation_Colection").data("LocationIDs","");
            $("#txtLocation_Colection").removeClass("fontColorOfPickItem");
        });


        $("#btnLocationPickerOk").click(function(e){
            if(btnLocation=="btnLocationPicker")
            {
                var oLocation = $('#locationtree').tree('getSelected');
                var sLocationIDs="";
                if(oLocation!=null && oLocation.id>0){
                    $("#winLocationPicker").icsWindow('close');
                    sLocationIDs+=oLocation.id;
                    $("#txtLocation_Colection").data("LocationIDs",sLocationIDs);
                    $('#txtLocation').val(oLocation.text);
                }
                else{
                    alert("Please select a location.");
                }
            }
            else
            {
                var oLocations = $('#locationtree').tree('getChecked');
                if(oLocations!=null && oLocations.length>0)
                {
                    var LocationName="";
                    var sLocationIDs="";
                    for(var i=0; i<oLocations.length; i++)
                    {
                        if(oLocations[i].id !=1)
                        {
                            LocationName+=oLocations[i].text+",";
                            sLocationIDs+=oLocations[i].id+",";
                        }
                    }

                    LocationName=LocationName.substring(0,LocationName.length-1);
                    sLocationIDs=sLocationIDs.substring(0,sLocationIDs.length-1);
                    $("#txtLocation_Colection").data("LocationIDs",sLocationIDs);
                    $("#winLocationPicker").icsWindow('close');
                    $('#txtLocation_Colection').val(LocationName);
                    $("#txtLocation_Colection").addClass("fontColorOfPickItem");
                }
                else
                {
                    alert("Please select a location.");
                }
            }
        });

        /*-------------Department Picker----------------*/


        $("#btnDepartmentPickerClose_Collection").click(function(e){
            $("#winDepartmentPicker_Collection").icsWindow('close');
            $("#txtDepartment_Collection").data("DepartmentIDs","");
            $("#txtDepartment_Collection").removeClass("fontColorOfPickItem");
        });

        $("#btnResetDepartmentPicker_Collection").click(function(e){
            $('#txtDepartment_Collection').val("");
            $("#txtDepartment_Collection").data("DepartmentIDs","");
            $("#txtDepartment_Collection").removeClass("fontColorOfPickItem");
        });

        /*---------------- emp Search Start keyprees----------------*/
        $('#txtEmployee_Collection').keypress(function (e)
        {
            debugger
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                var sCodeName = $.trim($("#txtEmployee_Collection").val());
                if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
                SearchEmployeeByText(sCodeName);
            }
        });

        function SearchEmployeeByText(sEmpNameCode){
            debugger;
            var oEmployee = { Params: sEmpNameCode +'~'+ 0};
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oEmployee,
                ControllerName: "Employee",
                ActionName: "GetsByEmpCode",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].EmployeeID > 0) {

                        var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winEmployeePickerTextSearch',
                            winclass:'clsEmployeePickerTextSearch',
                            winwidth: 455,
                            winheight: 460,
                            tableid: 'tblEmployeePickerTextSearch',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Employee list'
                        };

                        $.icsPicker(oPickerParam);
                        IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeEmployeePickerTextSearch(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                if (oPickerobj.winid == 'winEmployeePickerTextSearch')
                {
                    if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                    {
                        $("#txtEmployee_Collection").data("EmployeeIDs",oreturnObj.EmployeeID);
                        $("#txtEmployee_Collection").val(oreturnObj.Name);
                        $("#txtEmployee_Collection").addClass("fontColorOfPickItem");
                        $("#winEmployeePicker").icsWindow('close');
                    }
                }
            });

            $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
                if (e.which == 13)//enter=13
                {
                    var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                    if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                    {
                        if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                        {
                            $("#txtEmployee_Collection").data("EmployeeIDs",oreturnObj.EmployeeID);
                            $("#txtEmployee_Collection").val(oreturnObj.Name);
                            $("#txtEmployee_Collection").addClass("fontColorOfPickItem");
                            $("#winEmployeePicker").icsWindow('close');
                        }
                    }
                }
            });
        }
        $("#btnEmployee").click(function () {
            var sCodeName = $.trim($("#txtEmployee_Collection").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
            SearchEmployeeByText(sCodeName);
        });
        $('#btnCEmployee').click(function (e)
        {
            document.getElementById("txtEmployee_Collection").value = "" ;
            $("#txtEmployee_Collection").data("EmployeeIDs","");
            $("#txtEmployee_Collection").removeClass("fontColorOfPickItem");
        });

        /*-------------Department Picker start Collection----------------*/
        $("#btnDepartmentPicker_Collection").click(function(e){
            DepartmentPicker();
        });

        $("#txtDepartment_Collection").keypress(function(e){
            if (e.which == 13)//enter=13
            {
                DepartmentPicker();
            }
        });

        function DepartmentPicker()
        {
            $("#winDepartmentPicker_Collection").icsWindow('open');
            var sLocationIDs=$("#txtLocation_Colection").data("LocationIDs");
            var oDepartment={DepartmentID:0,BusinessUnitIDs:$("#txtBusinessUnit_Collection").data("BusinessUnitIDs"),LocationIDs:sLocationIDs};
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oDepartment,
                ControllerName: "Department",
                ActionName: "GetsDepartments",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {
                if (response.status && response.obj!=null) {
                    if (response.obj.id > 0) {
                        $('#departmenttree_Collection').tree({ data: [response.obj] });
                    }
                }
            });
        }

        $("#btnDepartmentPickerOk_Collection").click(function(e){
            var oDepartments = $('#departmenttree_Collection').tree('getChecked');
            if(oDepartments!=null && oDepartments.length>0){
                $("#winDepartmentPicker_Collection").icsWindow('close');
                var sDepartmentIds="";
                for(var i=0; i<oDepartments.length; i++)
                {
                    sDepartmentIds+=oDepartments[i].id+",";
                }

                sDepartmentIds=sDepartmentIds.substring(0,sDepartmentIds.length-1);
                $("#txtDepartment_Collection").data("DepartmentIDs",sDepartmentIds);
                $("#txtDepartment_Collection").val(oDepartments.length+" 's Department Selected");
                $("#txtDepartment_Collection").addClass("fontColorOfPickItem");
            }
            else{
                alert("Please select a department.");
            }
        });

        function RefreshObject()
        {
            var oHCMSearchObj={
                BUIDs : $("#txtBusinessUnit_Collection").data("BusinessUnitIDs"),
                EmployeeIDs : $("#txtEmployee_Collection").data("EmployeeIDs"),
                LocationIDs : $("#txtLocation_Colection").data("LocationIDs"),
                DepartmentIDs : $("#txtDepartment_Collection").data("DepartmentIDs"),
                BlockIDs:$("#txtEmployeeBlock").data("BlockIDs"),
                GroupIDs:$("#txtEmployeeGroup").data("GroupIDs"),
                PaymentTypeID:parseInt($("#cboPaymentType").val()),
                IsMultipleMonth:$("#chkIsMultipleMonth").is(':checked'),
                PrintFormatInt:parseInt($("#cboPrintFormat").val()),
                StartSalaryRange:parseFloat(icsRemoveComma($("#txtStartSalaryRange").val())),
                EndSalaryRange:parseFloat(icsRemoveComma($("#txtEndSalaryRange").val())),
                SalarySchemeIDs:$("#txtSalaryScheme").data("SalarySchemeIDs"),
                AttendanceSchemeIDs:$("#txtAttendanceScheme").data("AttendanceSchemeIDs"),
                ShiftIDs: $("#txtShift").data("ShiftIDs"),
                EmployeeTypeIDs: $("#txtEmployeeType").data("EmployeeTypeIDs"),
                DesignationIDs:$("#txtDesignation").data("DesignationIDs"),
                IsJoiningDate:$("#chkJoiningDate").is(':checked'),
                JoiningStartDate:$('#txtJoiningStartDate').datebox('getValue'),
                JoiningEndDate:$('#txtJoiningEndDate').datebox('getValue'),
                AuthenticationNo:$.trim($('#txtAuthenticationNo').val()),
                CategoryID:parseInt($("#cboEmpCategory").val()),
                IsNewJoin:$("#chkNewJoin").is(':checked'),
                IsRound:$("#chkRound").is(':checked'),
                IsOT:$("#chkIsOT").is(':checked'),
                SalaryStartDate:$('#txtSalaryStartDate').datebox('getValue'),
                SalaryEndDate:$('#txtSalaryEndDate').datebox('getValue'),
                GroupBySerialID:parseInt($('#cboGroupBySerial').val()),
                SalaryFieldSetupID:parseInt($("#cboSalaryFieldSetup").val())


            }
            return oHCMSearchObj;
        }

        function BankSheet(IsXL)
        {
            debugger;
            $("#dLetterInformationDate").data("ISXL",IsXL);
            var sEmployeeSalaryIDs = "";

            SelectingColumns();
            $('#dLetterInformationDate').datebox('setValue',icsdateformat(new Date()));
            $('#winPrintBanKSheet').icsWindow('open');
            
        }

        function printSelectedColumns()
        {
            var oSelectedCols = $('#tblPrintColumns').datagrid('getChecked');
            var sSelectedColNames = "";
            if(oSelectedCols.length>0)
            {
                for(var i =0; i<oSelectedCols.length;i++)
                {
                    sSelectedColNames += oSelectedCols[i].ColumnName +",";
                }
                sSelectedColNames = sSelectedColNames.substring(0,sSelectedColNames.length-1);
            }
            if(sSelectedColNames=="")
            {
                alert("Please Pick the Field Name");
                return;
            }
            var sDateTime=$('#dLetterInformationDate').datebox('getValue');
            var sBankAccID= parseInt($('#txtBankAccountNo').data("BankAccountID"));
            var bSearchByBank=$('#chkSearchByBank').is(":checked");
            var sPrintHeader=$('#cboPaperType').val();
            var HeaderHeightInch=parseFloat(icsRemoveComma($('#txtHeaderHeightInch').val(),2));
            var FooterHeightInch=parseFloat(icsRemoveComma($('#txtFooterHeightInch').val(),2));
            var oHCMSearchObj=RefreshObject();
            var oBankSheet={
                SelectedColNames:sSelectedColNames,
                IsSearchByBank:bSearchByBank,
                PrintHeaderType:sPrintHeader,
                HeaderHeightInch:HeaderHeightInch,
                FooterHeightInch:FooterHeightInch,
                BankAccountID:sBankAccID,
                LetterInformationDate:sDateTime

            }

            oHCMSearchObj.SelectedColNames=oBankSheet.SelectedColNames;
            oHCMSearchObj.IsSearchByBank=oBankSheet.IsSearchByBank;
            oHCMSearchObj.PrintHeaderType=oBankSheet.PrintHeaderType;
            oHCMSearchObj.HeaderHeightInch=oBankSheet.HeaderHeightInch;
            oHCMSearchObj.FooterHeightInch=oBankSheet.FooterHeightInch;
            oHCMSearchObj.BankAccountID=oBankSheet.BankAccountID;
            oHCMSearchObj.LetterInformationDate=oBankSheet.LetterInformationDate;
            var IsXL=$("#dLetterInformationDate").data("ISXL");
            if(IsXL==true)
            {
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url : sessionStorage.getItem("BaseAddress")+  "/EmployeeSalaryV2/SetSessionSearchCriteria",
                    traditional: true,
                    data:  JSON.stringify(oHCMSearchObj),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        var sFeedBackMessage = jQuery.parseJSON(data);
                        if (sFeedBackMessage==="Successful") {
                            var tsv=((new Date()).getTime())/1000;
                            window.open(sessionStorage.getItem("BaseAddress")+'/EmployeeSalaryV2/ExportToExcelSalarySheet?ts='+tsv,"_blank");
                            $('#winPrintCV').icsWindow('close');
                        }
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            }
            else
            {
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url : sessionStorage.getItem("BaseAddress")+  "/EmployeeSalaryV2/SetSessionSearchCriteria",
                    traditional: true,
                    data:  JSON.stringify(oHCMSearchObj),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        var sFeedBackMessage = jQuery.parseJSON(data);
                        if (sFeedBackMessage==="Successful") {
                            var tsv=((new Date()).getTime())/1000;
                            window.open(sessionStorage.getItem("BaseAddress")+'/EmployeeSalaryV2/PrintSalarySheet?ts='+tsv,"_blank");
                            $('#winPrintCV').icsWindow('close');
                        }
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            
            }
          
        }

        $('#btnCancel').click(function (e)
        {
            $('#txtBankAccountNo').data("BankAccountID",0);
            $('#txtBankAccountNo').val("");
            $('#txtBankName').val("");
            $('#txtBankBranchName').val("");
            $('#txtBankBranchAddress').val("");
            $('#winPrintCV').icsWindow('close');
            DynamicRefreshList([], "tblPrintColumns");
        });

        function SelectingColumns()
        {
            debugger;
            var oList = new Object();
            var oLists = [];
            oList.ColumnName = "EmployeeCode";
            oList.ID = 1;
            oLists.push(oList);

            var oList = new Object();
            oList.ColumnName = "EmployeeName";
            oList.ID = 2;
            oLists.push(oList);

            var oList = new Object();
            oList.ColumnName = "DepartmentName";
            oList.ID = 3;
            oLists.push(oList);

            var oList = new Object();
            oList.ColumnName = "DesignationName";
            oList.ID = 4;
            oLists.push(oList);

            var oList = new Object();
            oList.ColumnName = "JoiningDate";
            oList.ID = 5;
            oLists.push(oList);

            var oList = new Object();
            oList.ColumnName = "AccountNo";
            oList.ID = 6;
            oLists.push(oList);
            
            var oList = new Object();
            oList.ColumnName = "Amount";
            oList.ID = 7;
            oLists.push(oList);
            
            var oList = new Object();
            oList.ColumnName = "ContactNo";
            oList.ID = 8;
            oLists.push(oList);

            DynamicRefreshList(oLists, "tblPrintColumns");
        }

        function ClearSearchingPicker()
        {
            $('#txtBankAccountNo').data("BankAccountID",0);
            $('#txtBankAccountNo').val("");
            $('#txtBankName').val("");
            $('#txtBankBranchName').val("");
            $('#txtBankBranchAddress').val("");
            $("#chkSearchByBank").prop("checked", false);
            $('#winPrintCV').icsWindow('close');
            DynamicRefreshList([], "tblPrintColumns");
        }

        $('#btnPrint').click(function (e)
        {
            debugger;

            if(parseInt($("#cboPrintFormat").val())==4|| parseInt($("#cboPrintFormat").val())==5)
            {
                alert("Please see the Excel For this Format");
                return false;
            }
            if(!ValidateInput())return;
            var nPFormat=parseInt($("#cboPrintFormat").val());
        
            if(nPFormat==0)
            {
                alert("Please select one Print Format!");
                return;
            }
            if(parseInt($("#cboPrintFormat").val())==2||parseInt($("#cboPrintFormat").val())==3)
            {
                if($('#cboSalaryFieldSetup').val()==null||parseInt($('#cboSalaryFieldSetup').val())<=0)
                {
                    alert("Please Select One Salary Field");
                    return;
                }
            }
           
            if(nPFormat==7)
            {
                ClearSearchingPicker();
                 BankSheet(false);
            }

            else
            {
                var oHCMSearchObj=RefreshObject();
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url : sessionStorage.getItem("BaseAddress")+  "/EmployeeSalaryV2/SetSessionSearchCriteria",
                    traditional: true,
                    data:  JSON.stringify(oHCMSearchObj),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        var sFeedBackMessage = jQuery.parseJSON(data);
                        if (sFeedBackMessage==="Successful") {
                            var tsv=((new Date()).getTime())/1000;
                            window.open(sessionStorage.getItem("BaseAddress")+'/EmployeeSalaryV2/PrintSalarySheet?ts='+tsv,"_blank");
                        }
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            }




        });


        //----------------------------Bank Account------------------------------------
        $('#txtBankAccountNo').keypress(function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            var sSSName = document.getElementById("txtBankAccountNo").value;
            if (code == 13)//Enter key-13
            {
                PickerBankAccount(sSSName);
            }
        });
        $('#btnBancAccountPick').click(function (e)
        {
            debugger;
            var sSSName ="";
            PickerBankAccount(sSSName);
        });
        function PickerBankAccount(sSSName)
        {
            debugger;
            var oBankAccount = {
                AccountNo : sSSName
            };
            debugger;
            var obj = {
                BaseAddress:sessionStorage.getItem("BaseAddress"),
                Object: (oBankAccount) ,
                ControllerName: "BankAccount", //Product
                ActionName: "Gets",//SearchByProductBUWise
                IsWinClose: false
            };
            var tblColums = []; 
            var oColumn = { field: "AccountNo", title: "Account No", width: 250, align: "left" }; tblColums.push(oColumn);
            oColumn = { field: "AccountName", title: "Account Name", width: 150, align: "left" }; tblColums.push(oColumn);
            oColumn = { field: "BankName", title: "Bank Name", width: 150, align: "left" }; tblColums.push(oColumn);
            oColumn = { field: "BranchName", title: "Branch Name", width: 150, align: "left" }; tblColums.push(oColumn);
            DynamicPiker('Bank',obj,tblColums,false,'AccountNo','BankAccountID',720); //pickerName(unique),obj,table,multiReturn,SearchingField, pkID
        }
        function DynamicPiker(pickerName,obj,pTblColums,pMultiReturn,pSearchField,pID,nWidth)
        {
            debugger;
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0][pID] > 0) {
                        debugger;
                        var tblColums = pTblColums;
                        var oPickerParam = {
                            winid: 'win'+pickerName,
                            winclass: 'cls'+pickerName,
                            winwidth: nWidth,
                            winheight: 460,
                            tableid: 'tbl'+pickerName+'s',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: pSearchField,
                            windowTittle: pickerName+' List',
                            colsable:true
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbuttonBankAccount(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }
                }
                else{
                    alert("Data Not Found.");
                    return;
                }
            });
        }
        function IntializePickerbuttonBankAccount(oPickerobj) {
            debugger;
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                debugger;
                //for Single Select
                SetPickerValueAssignBankAccount(oPickerobj);
            });
            $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
                if (e.which == 13)//enter=13
                {
                    SetPickerValueAssignBankAccount(oPickerobj);
                }
            });
        }
        function SetPickerValueAssignBankAccount(oPickerobj)
        {
            debugger;
            var oResult;
            if (oPickerobj.multiplereturn)
            {
                oResult = $('#'+oPickerobj.tableid).datagrid('getChecked');
            }
            else
            {
                oResult = $('#'+oPickerobj.tableid).datagrid('getSelected');
            }

            if (oPickerobj.winid == 'winBank')
            {
                SetAccount(oResult);
            }
            $("#" + oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
        }
        function SetAccount(oSelectedStyle) {
            debugger;
            $('#txtBankAccountNo').val(oSelectedStyle.AccountNo);
            $('#txtBankName').val(oSelectedStyle.BankName);
            $('#txtBankBranchName').val(oSelectedStyle.BranchName);
            $('#txtBankAccountNo').data("BankAccountID",oSelectedStyle.BankAccountID);
            $('#txtBankBranchAddress').val("");
        }
        $('#btnBankAccountCancel').click(function (e)
        {
            $('#txtBankAccountNo').data("BankAccountID",0);
            $('#txtBankAccountNo').val("");
            $('#txtBankName').val("");
            $('#txtBankBranchName').val("");
            $('#txtBankBranchAddress').val("");
        });
        //End

        $('#btnExcelSalarySheet').click(function (e)
        {
            debugger;
            if(!ValidateInput())return;
            var nPFormat=parseInt($("#cboPrintFormat").val());
            if(nPFormat==0)
            {
                alert("Please select one Print Format!");
                return;
            }
            if(parseInt($("#cboPrintFormat").val())==2)
            {
                if($('#cboSalaryFieldSetup').val()==null||parseInt($('#cboSalaryFieldSetup').val())<=0)
                {
                    alert("Please Select One Salary Field");
                    return;
                }
            }
            if(parseInt($("#cboPrintFormat").val())==3)
            {
                if($('#cboSalaryFieldSetup').val()==null||parseInt($('#cboSalaryFieldSetup').val())<=0)
                {
                    alert("Please Select One Salary Field");
                    return;
                }
            }

            if(nPFormat==7)
            {
                ClearSearchingPicker();
                BankSheet(true);
            }
            else
            {
                var oHCMSearchObj=RefreshObject();
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url : sessionStorage.getItem("BaseAddress")+  "/EmployeeSalaryV2/SetSessionSearchCriteria",
                    traditional: true,
                    data:  JSON.stringify(oHCMSearchObj),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        var sFeedBackMessage = jQuery.parseJSON(data);
                        if (sFeedBackMessage==="Successful") {
                            var tsv=((new Date()).getTime())/1000;
                            window.open(sessionStorage.getItem("BaseAddress")+'/EmployeeSalaryV2/ExportToExcelSalarySheet?ts='+tsv,"_blank");
                        }
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            }
           


        });

        function ValidateInput()
        {

            
            var bIsJoiningDate=$("#chkJoiningDate").is(':checked');
            if(bIsJoiningDate)
            {
                var sJoiningStDate=$('#txtJoiningStartDate').datebox('getValue');
                var sJoiningEnDate=$('#txtJoiningEndDate').datebox('getValue');
                var dJoiningStDate=new Date(sJoiningStDate);
                var dJoiningEnDate=new Date(sJoiningEnDate);
                if(dJoiningEnDate<dJoiningStDate)
                {
                    alert("Start Date Mustbe Smaller than End Date");
                    return false;
                }
            }
                var sSalaryStartDate = $('#txtSalaryStartDate').datebox('getValue');
                var sSalaryEndDate = $('#txtSalaryEndDate').datebox('getValue');
                var dStartDate = new Date(sSalaryStartDate);
                var dEndDate =  new Date(sSalaryEndDate);
                if(dEndDate<dStartDate)
                {
                    alert("Salary Start Date Mustbe Smaller than End Date");
                    return false;
                }

            var nStartSalaryRange =parseFloat(icsRemoveComma($("#txtStartSalaryRange").val()));
            var nEndSalaryRange =parseFloat(icsRemoveComma($("#txtEndSalaryRange").val()));
            if(nStartSalaryRange>0 || nEndSalaryRange>0)
            {
                if(nStartSalaryRange>nEndSalaryRange)
                {
                    alert("Invalid Salary Range!");
                    return false;
                }
                if(nStartSalaryRange>0 && nEndSalaryRange<=0)
                {
                    alert("Please enter End Salary Range!");
                    return false;
                }
                if(nStartSalaryRange<=0 && nEndSalaryRange>0)
                {
                    alert("Please enter Start Salary Range!");
                    return false;
                }
            }
            var IsNewJoin=$("#chkNewJoin").is(':checked');
            var IsRound=$("#chkRound").is(':checked');
            var IsOT=$("#chkIsOT").is(':checked');
            var sBlockIDs=$("#txtEmployeeBlock").data("BlockIDs");
            var sGroupIDs=$("#txtEmployeeGroup").data("GroupIDs");
            var sLocationIDs=$("#txtLocation_Colection").data("LocationIDs");
            var sDepartmentIds=$("#txtDepartment_Collection").data("DepartmentIDs");
            var sEmployeeIDs=$("#txtEmployee_Collection").data("EmployeeIDs");
            var sBusinessUnitIds=$("#txtBusinessUnit_Collection").data("BusinessUnitIDs");
            var sSalarySchemeIDs=$("#txtSalaryScheme").data("SalarySchemeIDs");
            var sAttendanceSchemeIDs=$("#txtAttendanceScheme").data("AttendanceSchemeIDs");
            var sShiftIDs= $("#txtShift").data("ShiftIDs");
            var sEmployeeTypeIDs= $("#txtEmployeeType").data("EmployeeTypeIDs");
            var sDesignationIDs=$("#txtDesignation").data("DesignationIDs");
            var sAuthenticationNo=$.trim($('#txtAuthenticationNo').val());
            var nEmpCategoryID=parseInt($("#cboEmpCategory").val());
            var nEmpPaymentTypeID=parseInt($("#cboPaymentType").val());
            if(sEmployeeIDs == "" && sLocationIDs=="" && sDepartmentIds=="" && sBusinessUnitIds=="" && nStartSalaryRange<=0 && nEndSalaryRange<=0 && sBlockIDs=="" && sGroupIDs=="" && sSalarySchemeIDs==""&&sAttendanceSchemeIDs=="" && sShiftIDs=="" && sEmployeeTypeIDs=="" && sDesignationIDs=="" && bIsJoiningDate==false && sAuthenticationNo=="" && nEmpCategoryID<=0 && nEmpPaymentTypeID<=0 )
            {
                alert("Please enter at lest one searching criteria with date !");
                return false;
            }
            return true;

        }
        function SearchByDepartmentAndDateRangeWithPasignation()//department and date wise search
        {
            if(!ValidateInput())return;
            var oHCMSearchObj=RefreshObject();

            $.ajax({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress") + "/EmployeeSalaryV2/AdvanceSearch",
                data: JSON.stringify(oHCMSearchObj),
                contentType: "application/json; charset=utf-8",
                success: function(data)
                {
                    var oEmployeeSalarys =[];
                    oEmployeeSalarys = data;
                    if(oEmployeeSalarys.length>0 && oEmployeeSalarys[0].ErrorMessage=="")
                    {
                        DynamicRefreshList(oEmployeeSalarys, 'tblEmployeeSalary');
                    }
                    else
                    {
                        alert(oEmployeeSalarys[0].ErrorMessage);
                    }
                },
                error: function(xhr, status, error)
                {
                    alert(error);
                }
            });
        }




        $('#btnExcelSalarySheet').click(function(e){


        });


        /*-------------Start Business Unit Picker----------------*/
        $("#btnBusinessUnitPicker_Collection").click(function(e){
            BusinessUnitPicker();
        });

        $("#txtBusinessUnit_Collection").keypress(function(e){
            if (e.which == 13)//enter=13
            {
                BusinessUnitPicker();
            }
        });

        function BusinessUnitPicker()
        {
            var oBusinessUnit={
                BusinessUnitID:0
            };
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oBusinessUnit,
                ControllerName: "BusinessUnit",
                ActionName: "GetsBusinessUnitWithPermission",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].BusinessUnitID > 0) {
                        var tblColums = [];
                        var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                        var bmultiplereturn=true;

                        var oPickerParam = {
                            winid: 'winBusinessUnit',
                            winclass:'clsBusinessUnit',
                            winwidth: 320,
                            winheight: 400,
                            tableid: 'tblBusinessUnit',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: bmultiplereturn,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Business Unit List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeBusinessUnitPickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                var oBusinessUnits=[];
                oBusinessUnits = $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winBusinessUnit')
                {
                    if(oBusinessUnits!=null && oBusinessUnits.length>0)
                    {
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                        var sBusinessUnitIds = "";
                        for(var i=0; i<oBusinessUnits.length; i++)
                        {
                            sBusinessUnitIds+=oBusinessUnits[i].BusinessUnitID+",";
                        }
                        sBusinessUnitIds=sBusinessUnitIds.substring(0,sBusinessUnitIds.length-1);
                        $("#txtBusinessUnit_Collection").data("BusinessUnitIDs",sBusinessUnitIds);
                        $("#txtBusinessUnit_Collection").val(oBusinessUnits.length+" 's BusinessUnit Selected");
                        $("#txtBusinessUnit_Collection").addClass("fontColorOfPickItem");
                    }
                    else
                    {
                        alert("Please select a Business Unit.");
                    }
                }
            });
        }

        $("#btnResetBusinessUnitPicker_Collection").click(function(e){
            $('#txtBusinessUnit_Collection').val("");
            $("#txtBusinessUnit_Collection").data("BusinessUnitIDs","");
            $("#txtBusinessUnit_Collection").removeClass("fontColorOfPickItem");
        });
        /*-------------End Business Unit Picker----------------*/

        //Advance Search

        $("#btnEmployeeBlockReset").click(function(e){
            $("#txtEmployeeBlock").val("");
            $("#txtEmployeeBlock").removeClass("fontColorOfPickItem");
            $("#txtEmployeeBlock").data("BlockIDs","");
        });
        $('#txtEmployeeBlock').keydown(function (e) {

            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                var txtSearchByBlock = $("#txtEmployeeBlock").val();
                var sTempName = "";
                SearchEmployeeBlock(txtSearchByBlock);
                $("#txtEmployeeBlock").val('');
            }
        });

        $("#btnEmployeeBlockPicker").click(function(e){
            SearchEmployeeBlock("");
        });
        function SearchEmployeeBlock(name) {
            $("#txtEmployeeBlock").val("");
            $("#txtEmployeeBlock").data("BlockIDs","");
            var oBlock={
                Name : name
            };
            debugger
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oBlock,
                ControllerName: "Employee",
                ActionName: "GetsEmployeeBlockAdvSrc",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].EmployeeTypeID > 0) {
                        debugger;
                        var tblColums = [];
                        var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winBlock',
                            winclass:'clsBlock',
                            winwidth: 320,
                            winheight: 460,
                            tableid: 'tblBlock',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Employee Block List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeBlockPickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {

                var oGroups=[];
                oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winBlock')
                {
                    if(oBlocks!=null && oBlocks.length>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                        var sBlockIDs="";
                        for(var i=0; i<oBlocks.length; i++)
                        {
                            sBlockIDs += oBlocks[i].EmployeeTypeID+",";

                        }
                        sBlockIDs=sBlockIDs.substring(0,sBlockIDs.length-1);
                        $("#txtEmployeeBlock").data("BlockIDs",sBlockIDs);
                        $("#txtEmployeeBlock").val(oBlocks.length+" 's Block Selected");
                        $("#txtEmployeeBlock").addClass("fontColorOfPickItem");
                    }
                    else
                    {
                        alert("Please select a Employee Block.");
                    }
                }
            });
        }



        $('#txtEmployeeGroup').keydown(function (e) {

            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                var txtSearchByGroup = $("#txtEmployeeGroup").val();
                var sTempName = "";
                SearchEmployeeGroup(txtSearchByGroup);
                $("#txtEmployeeGroup").val('');
            }
        });


        $("#btnEmployeeGroupPicker").click(function(e){
            SearchEmployeeGroup("");
        });
        function SearchEmployeeGroup(name) {
            $("#txtEmployeeGroup").val("");
            $("#txtEmployeeGroup").data("GroupIDs","");
            var oGroup={
                Name : name
            };
            debugger
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oGroup,
                ControllerName: "Employee",
                ActionName: "GetsEmployeeGroupAdvSrc",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].EmployeeTypeID > 0) {
                        debugger;
                        var tblColums = [];
                        var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winGroup',
                            winclass:'clsGroup',
                            winwidth: 320,
                            winheight: 460,
                            tableid: 'tblGroup',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Employee Group List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeGroupPickerbutton(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeGroupPickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {

                var oGroups=[];
                oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winGroup')
                {
                    if(oGroups!=null && oGroups.length>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                        var sGroupIDs="";
                        for(var i=0; i<oGroups.length; i++)
                        {
                            sGroupIDs += oGroups[i].EmployeeTypeID+",";

                        }
                        sGroupIDs=sGroupIDs.substring(0,sGroupIDs.length-1);
                        $("#txtEmployeeGroup").data("GroupIDs",sGroupIDs);
                        $("#txtEmployeeGroup").val(oGroups.length+"' s Group Selected");
                        $("#txtEmployeeGroup").addClass("fontColorOfPickItem");
                    }
                    else
                    {
                        alert("Please select a Employee Group.");
                    }
                }
            });
        }

        $("#btnEmployeeGroupPickerReset").click(function(e){

            $('#txtEmployeeGroup').val("");
            $("#txtEmployeeGroup").removeClass("fontColorOfPickItem");
            $("#txtEmployeeGroup").data("GroupIDs","");
        });

        $('#txtEmployeeType').keydown(function (e) {

            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                var sEmployeeType = $("#txtEmployeeType").val();
                PickEmployeeType(sEmployeeType);
            }
        });


        $("#btnPickEmployeeType").click(function(e){
            PickEmployeeType("");
        });

        function PickEmployeeType(name) {
            var oEmployeeType={
                Name : name
            };
            debugger
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oEmployeeType,
                ControllerName: "EmployeeSalaryV2",
                ActionName: "GetsEmployeeType",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].EmployeeTypeID > 0) {
                        debugger;
                        var tblColums = [];
                        var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winEmpType',
                            winclass:'clsEmpType',
                            winwidth: 320,
                            winheight: 460,
                            tableid: 'tblEmpType',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Employee Type List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeEmpTypePickerbutton(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeEmpTypePickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {

                var oEmpTypes=[];
                oEmpTypes= $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winEmpType')
                {
                    if(oEmpTypes!=null && oEmpTypes.length>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                        var sEmployeeTypeIDs="";
                        for(var i=0; i<oEmpTypes.length; i++)
                        {
                            sEmployeeTypeIDs += oEmpTypes[i].EmployeeTypeID+",";

                        }
                        sEmployeeTypeIDs=sEmployeeTypeIDs.substring(0,sEmployeeTypeIDs.length-1);
                        $("#txtEmployeeType").data("EmployeeTypeIDs",sEmployeeTypeIDs);
                        $("#txtEmployeeType").val(oEmpTypes.length+"' s Employee Type Selected");
                        $("#txtEmployeeType").addClass("fontColorOfPickItem");
                    }
                    else
                    {
                        alert("Please select a Employee Type.");
                    }
                }
            });
        }


        $("#btnResetEmployeeType").click(function(e){
            $("#txtEmployeeType").val("");
            $("#txtEmployeeType").removeClass("fontColorOfPickItem");
            $("#txtEmployeeType").data("EmployeeTypeIDs","");
        });

        $('#btnAdvSearch').click(function (e)
        {
            debugger;
            $("#winAdvSearch").icsWindow('open', "Advance Search");
        });

        $('#btnOkAdvSearch').click(function (e) {
            debugger;
            $("#winAdvSearch").icsWindow('close');
            var oSalarySchemeIDs=$("#txtSalaryScheme").data("SalarySchemeIDs");
            var oAttendanceSchemeIDs=$("#txtAttendanceScheme").data("AttendanceSchemeIDs");
            var oShiftIDs= $("#txtShift").data("ShiftIDs");
            var oEmployeeTypeIDs=$("#txtEmployeeType").data("EmployeeTypeIDs");
            var oDesignationIDs=$("#txtDesignation").data("DesignationIDs");
            var IsJoiningDate=$("#chkJoiningDate").is(':checked');
            var sAuthenticationNo=$.trim($('#txtAuthenticationNo').val());
            var nCategoryID=parseInt($("#cboEmpCategory").val());
            var oBlockIDs=$("#txtEmployeeBlock").data("BlockIDs");
            var oGroupIDs=$("#txtEmployeeGroup").data("GroupIDs");
            var IsNewJoin=$("#chkNewJoin").is(':checked');
            var nSalaryStartRange=parseFloat(icsRemoveComma($("#txtStartSalaryRange").val()));
            var nSalaryEndRange=parseFloat(icsRemoveComma($("#txtEndSalaryRange").val()));
            var nPaymentTypeID=parseInt($("#cboPaymentType").val());

            if(oSalarySchemeIDs!="" || oAttendanceSchemeIDs!="" || oShiftIDs!="" || oEmployeeTypeIDs!="" || oDesignationIDs!="" || oBlockIDs!="" || oGroupIDs!="" || nCategoryID>0 || IsJoiningDate==true || IsNewJoin==true ||sAuthenticationNo!="" || nSalaryStartRange>0 ||nSalaryEndRange>0 || nPaymentTypeID>0)
            {
                $("#btnAdvSearch").css('color', 'blue');
            }
            else{
                $("#btnAdvSearch").css('color', 'black');
            }
        });

        $('#btnCloseAdvSearch').click(function (e) {
            debugger;
            $("#winAdvSearch").icsWindow('close');
            var oSalarySchemeIDs=$("#txtSalaryScheme").data("SalarySchemeIDs");
            var oAttendanceSchemeIDs=$("#txtAttendanceScheme").data("AttendanceSchemeIDs");
            var oShiftIDs= $("#txtShift").data("ShiftIDs");
            var oEmployeeTypeIDs=$("#txtEmployeeType").data("EmployeeTypeIDs");
            var oDesignationIDs=$("#txtDesignation").data("DesignationIDs");
            var IsJoiningDate=$("#chkJoiningDate").is(':checked');
            var sAuthenticationNo=$.trim($('#txtAuthenticationNo').val());
            var nCategoryID=parseInt($("#cboEmpCategory").val());
            var oBlockIDs=$("#txtEmployeeBlock").data("BlockIDs");
            var oGroupIDs=$("#txtEmployeeGroup").data("GroupIDs");
            var IsNewJoin=$("#chkNewJoin").is(':checked');
            var nSalaryStartRange=parseFloat(icsRemoveComma($("#txtStartSalaryRange").val()));
            var nSalaryEndRange=parseFloat(icsRemoveComma($("#txtEndSalaryRange").val()));
            var nPaymentTypeID=parseInt($("#cboPaymentType").val());

            if(oSalarySchemeIDs!="" || oAttendanceSchemeIDs!="" || oShiftIDs!="" || oEmployeeTypeIDs!="" || oDesignationIDs!="" || oBlockIDs!="" || oGroupIDs!="" || nCategoryID>0 || IsJoiningDate==true || IsNewJoin==true ||sAuthenticationNo!="" || nSalaryStartRange>0 ||nSalaryEndRange>0 || nPaymentTypeID>0)
            {
                $("#btnAdvSearch").css('color', 'blue');
            }
            else{
                $("#btnAdvSearch").css('color', 'black');
            }
        });
        function RefreshAdvSearch()
        {
            $('#txtJoiningStartDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtJoiningEndDate').datebox('setValue', icsdateformat(new Date()));
            $("#txtSalaryScheme").data("SalarySchemeIDs","");
            $("#txtAttendanceScheme").data("AttendanceSchemeIDs","");
            $("#txtEmployeeGroup").data("GroupIDs",""),
            $("#txtEmployeeBlock").data("BlockIDs",""),
            $("#txtShift").data("ShiftIDs","");
            $("#txtEmployeeType").data("EmployeeTypeIDs","");
            $("#txtDesignation").data("DesignationIDs","");
            var oEmpCategorys=$("#cboEmpCategory").data("EmployeeCategorys");
            $("#cboEmpCategory").icsLoadCombo({
                List: oEmpCategorys,
                OptionValue: "Value",
                DisplayText: "Text",
                InitialValue:"--Select category--"
            });
        }
        //Designation
        $('#txtDesignation').keydown(function (e) {

            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                var sDesignation = $("#txtDesignation").val();
                PickDesignation(sDesignation);
            }
        });


        $("#btnPickDesignation").click(function(e){
            PickDesignation("");
        });

        function PickDesignation(name) {
            var sLocationIDs= $("#txtLocation_Colection").data("LocationIDs");
            var sDepartmentIDs= $("#txtDepartment_Collection").data("DepartmentIDs");
            var sBusinessUnitIDs= $("#txtBusinessUnit_Collection").data("BusinessUnitIDs");
            var oDesignation={
                DesignationID:0,
                Params: sBusinessUnitIDs+'~'+sLocationIDs+'~'+ sDepartmentIDs
            };
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oDesignation,
                ControllerName: "Designation",
                ActionName: "Gets",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].DesignationID > 0) {
                        debugger;
                        var tblColums = [];
                        var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                        var bmultiplereturn=true;

                        var oPickerParam = {
                            winid: 'winDesignation',
                            winclass:'clsDesignation',
                            winwidth: 320,
                            winheight: 460,
                            tableid: 'tblDesignation',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: bmultiplereturn,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Designation List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeDesignationPickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                var oDesignations=[];
                oDesignations= $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winDesignation')
                {
                    if(oDesignations!=null && oDesignations.length>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                        var sDesignationIds="";
                        for(var i=0; i<oDesignations.length; i++)
                        {
                            sDesignationIds+=oDesignations[i].DesignationID+",";
                        }

                        sDesignationIds=sDesignationIds.substring(0,sDesignationIds.length-1);
                        $("#txtDesignation").data("DesignationIDs",sDesignationIds);
                        $("#txtDesignation").val(oDesignations.length+"' s Designation Selected");
                        $("#txtDesignation").addClass("fontColorOfPickItem");
                    }
                    else{
                        alert("Please select a designation.");
                    }
                }
            });
        }


        $("#btnResetDesignation").click(function(e){
            $("#txtDesignation").val("");
            $("#txtDesignation").removeClass("fontColorOfPickItem");
            $("#txtDesignation").data("DesignationIDs","");
        });

        //Shift
        $('#txtShift').keydown(function (e) {

            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)//Enter key-13
            {
                var sShift = $("#txtShift").val();
                PickShift(sShift);
            }
        });


        $("#btnPickShift").click(function(e){
            PickShift("");
        });

        function PickShift(name) {
            var oHrmShift={
                Name : name
            };
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oHrmShift,
                ControllerName: "EmployeeSalaryV2",
                ActionName: "GetsHRMShiftByName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ShiftID > 0) {
                        debugger;
                        var tblColums = [];
                        var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                        var bmultiplereturn=true;

                        var oPickerParam = {
                            winid: 'winShift',
                            winclass:'clsShift',
                            winwidth: 320,
                            winheight: 460,
                            tableid: 'tblShift',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: bmultiplereturn,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Shift List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeShiftPickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeShiftPickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {

                var oShifts=[];
                oShifts= $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winShift')
                {
                    if(oShifts!=null && oShifts.length>0){
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                        var sShiftIDs="";
                        for(var i=0; i<oShifts.length; i++)
                        {
                            sShiftIDs+=oShifts[i].ShiftID+",";
                        }

                        sShiftIDs=sShiftIDs.substring(0,sShiftIDs.length-1);
                        $("#txtShift").data("ShiftIDs",sShiftIDs);
                        $("#txtShift").val(oShifts.length+"' s Shift Selected");
                        $("#txtShift").addClass("fontColorOfPickItem");
                    }
                    else{
                        alert("Please select a designation.");
                    }
                }
            });
        }


        $("#btnResetShift").click(function(e){
            $("#txtShift").val("");
            $("#txtShift").removeClass("fontColorOfPickItem");
            $("#txtShift").data("ShiftIDs","");
        });


        //Attendance Scheme

        $("#btnPickAttendanceScheme").click(function(e){
            var oAttendanceScheme={AttendanceSchemeID:0};
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oAttendanceScheme,
                ControllerName: "AttendanceScheme",
                ActionName: "GetsAttendanceSchemeCurrentSession",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].AttendanceSchemeID > 0) {
                        debugger;
                        var tblColums = [];
                        var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winAttendanceScheme',
                            winclass:'clsAttendanceScheme',
                            winwidth: 420,
                            winheight: 460,
                            tableid: 'tblAttendanceSchemePicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Attendance Scheme List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        });

        function IntializeAttendancePickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                var oAttendanceSchemes=[];
                oAttendanceSchemes = $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winAttendanceScheme')
                {
                    if(oAttendanceSchemes!=null && oAttendanceSchemes.length>0)
                    {
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                        var sAttendanceSchemeIDs = "";
                        for(var i=0; i<oAttendanceSchemes.length; i++)
                        {
                            sAttendanceSchemeIDs+=oAttendanceSchemes[i].AttendanceSchemeID+",";
                        }
                        sAttendanceSchemeIDs=sAttendanceSchemeIDs.substring(0,sAttendanceSchemeIDs.length-1);
                        $("#txtAttendanceScheme").data("AttendanceSchemeIDs",sAttendanceSchemeIDs);
                        $("#txtAttendanceScheme").val(oAttendanceSchemes.length+" 's Attendance Scheme Selected");
                        $("#txtAttendanceScheme").addClass("fontColorOfPickItem");
                    }
                    else{
                        alert("Please select a schema.");
                    }
                }
            });
        }

        $("#btnResetAttendanceScheme").click(function(e){
            $('#txtAttendanceScheme').val("");
            $("#txtAttendanceScheme").data("AttendanceSchemeIDs","");
        });


        //Salary Scheme

        $('#txtSalaryScheme').keypress(function (e)
        {
            var code = (e.keyCode ? e.keyCode : e.which);
            var sSSName = document.getElementById("txtSalaryScheme").value;
            if (code == 13)//Enter key-13
            {
                PickerSalaryScheme(sSSName);
            }
        });
        $('#btnPickSalaryScheme').click(function (e)
        {
            var sSSName ="";
            PickerSalaryScheme(sSSName);
        });
        function PickerSalaryScheme(sSSName)
        {
            var oSalaryScheme = { Name: sSSName};
            var obj = {
                BaseAddress: sessionStorage.getItem("BaseAddress"),
                Object: oSalaryScheme,
                ControllerName: "SalaryScheme",
                ActionName: "GetsBySalarySchemeName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].SalarySchemeID > 0) {

                        var tblColums = [];var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "NatureOfEmployeeInString", title: "Nature Of Employee", width: 140, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "PaymentCycleInString", title: "Payment Cycle", width: 140, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winSalarySchemePicker',
                            winclass:'clsSalarySchemePicker',
                            winwidth: 520,
                            winheight: 460,
                            tableid: 'tblSalarySchemes',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName:'Name',
                            windowTittle: 'Salary Scheme List'
                        };

                        $.icsPicker(oPickerParam);
                        IntializeSalarySchemePickerbutton(oPickerParam);//multiplereturn, winclassName

                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            });
        }

        function IntializeSalarySchemePickerbutton(oPickerobj)
        {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                var oSalarySchemes=[];
                oSalarySchemes = $('#'+oPickerobj.tableid).datagrid('getChecked');
                if (oPickerobj.winid == 'winSalarySchemePicker')
                {
                    if(oSalarySchemes!=null && oSalarySchemes.length>0)
                    {
                        $("#"+oPickerobj.winid).icsWindow("close");
                        $("#" + oPickerobj.winid).remove();
                        var sSalarySchemeIDs = "";
                        for(var i=0; i<oSalarySchemes.length; i++)
                        {
                            sSalarySchemeIDs+=oSalarySchemes[i].SalarySchemeID+",";
                        }
                        sSalarySchemeIDs=sSalarySchemeIDs.substring(0,sSalarySchemeIDs.length-1);
                        $("#txtSalaryScheme").data("SalarySchemeIDs",sSalarySchemeIDs);
                        $("#txtSalaryScheme").val(oSalarySchemes.length+" 's Salary Scheme Selected");
                        $("#txtSalaryScheme").addClass("fontColorOfPickItem");
                    }
                    else{
                        alert("Please select a schema.");
                    }
                }
            });
        }

        $("#btnResetSalaryScheme").click(function(e){
            $('#txtSalaryScheme').val("");
            $("#txtSalaryScheme").data("SalarySchemeIDs","");
        });
        $("#btnAdvSearchClear").click(function(e){
            $("#txtSalaryScheme,#txtDesignation,#txtAttendanceScheme,#txtEmployeeGroup,#txtEmployeeBlock,#txtShift,#txtEmployeeType,#txtAuthenticationNo").val("");
            $("#cboEmpCategory").val(0);
            $("#cboPaymentType").val(0);
            $("#txtStartSalaryRange").val(0);
            $("#txtEndSalaryRange").val(0);
            $("#chkJoiningDate").prop("checked", false);
            $("#chkNewJoin").prop("checked", false);
            $('#txtJoiningStartDate').datebox('setValue', icsdateformat(new Date()));
            $('#txtJoiningEndDate').datebox('setValue', icsdateformat(new Date()));
            $("#txtSalaryScheme").data("SalarySchemeIDs","");
            $("#txtAttendanceScheme").data("AttendanceSchemeIDs","");
            $("#txtEmployeeGroup").data("GroupIDs",""),
            $("#txtEmployeeBlock").data("BlockIDs",""),
            $("#txtShift").data("ShiftIDs","");
            $("#txtEmployeeType").data("EmployeeTypeIDs","");
            $("#txtDesignation").data("DesignationIDs","");
            $("#btnAdvSearch").css('color', 'black');
        });

    </script>
