@{
    Layout = "~/Views/Shared/_AngularLayout.cshtml";
    ViewBag.Title = "FN Production Plan";
}
<script src="~/Views/FNProductionPlan/AdvanceSearch.js"></script>
@model IEnumerable <ESimSol.BusinessObjects.FNProductionPlan>
<div ng-app="mainApp" class="regionCS">
    <div ng-controller="mainController">
        <div class="col-md-12">
            <div class="form-inline">
                <fieldset>
                    <legend> Searching Criterion</legend>
                    <input class="form-control" type="text" placeholder="Search By Dispo No" ng-keydown="SearchKeyDownTempOrderNo($event)" ng-model="txtTempFNExONo" style="width:175px;" />
                    <input class="form-control" type="text" placeholder="Search By Batch No" ng-keydown="SearchKeyDownTempBatchNo($event)" ng-model="txtTempBatchNo" style="width:175px;" />
                    <input type="checkbox" ng-model="chkDate" class="form-control" />
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" style="width:85px" ng-model="dtIssueFrom" ng-disabled="!chkDate"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                    </div>
                    <span>to</span>
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" style="width:85px" ng-model="dtIssueTo" ng-disabled="!chkDate"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                    </div>
                    <input type="text" style="width:100px;" class="form-control" ng-model="txtTempFNMachine" ng-keydown="SearchKeyDownMachineForSearch($event)" placeholder="Type Machine Name & Press Enter">
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="searchPlan()"><span class="glyphicon glyphicon-search" aria-hidden="true"></span> Search</button>
                </fieldset>
               
                <br />
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="AdvanceSearch()"><span class="glyphicon glyphicon-search" aria-hidden="true"></span> Adv. Search</button>
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="FNBatch()" ng-disabled="TreatmentID!=1"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Batch</button></br>
            </div>
        </div>
        <fieldset>
        <legend>Production Plan Entry</legend>
            <div class="col-md-12">

                <div class="col-md-2 text-right"><label class="control-label">Plan Date:</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-model="PlanDate"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                    </div>
                </div>
            </div>
        <div class="col-md-12">

            <div class="col-md-2 text-right"><label class="control-label">Dispo No:</label></div>
            <div class="col-md-3 text-left">
                <div class="input-group">
                    <input class="form-control" type="text" placeholder="Type Dispo No & Press Enter" ng-keydown="SearchKeyDownOrderNo($event)" ng-model="txtFNExONo" />
                    <span class="input-group-btn">
                        <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="SearchOrder()"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                    </span>
                </div>
            </div>

            <div class="col-md-2 text-right"><label class="control-label">Qty:</label></div>
            <div class="col-md-3 text-left">
                <div class="input-group">
                    <input class="form-control number-box" id="txtQty" type="text" ng-model="txtQty" ng-keyup="QtyInYardKeyUp($event)" style="width:95px;" /><label>(Y)</label>
                    <span class="input-group-btn">
                        
                        <input class="form-control number-box" id="txtQtyInMeter" type="text" ng-model="txtQtyInMeter" ng-keyup="QtyInMeterKeyUp($event)" style="width:95px;" /><label>(M)</label>
                    </span>
                </div>
            </div>

            <div class="col-md-2 text-right"><label class="control-label">M/N:</label></div>
            <div class="col-md-3 text-left">
                <div class="input-group">
                    <input class="form-control" type="text" placeholder="Type Machine Name & Press Enter" ng-keydown="SearchKeyDownMachine($event)" ng-model="txtFNMachine" />
                    <span class="input-group-btn">
                        <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="SearchMachine()"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                    </span>
                </div>
            </div>
        </div>

        <div class=" col-md-12">

            <div class="col-md-2 text-right"><label class="control-label">Start:</label></div>
            <div class="col-md-3 text-left">
                <div class="input-group date date-time-container">
                    <input type="text" class="form-control" ng-model="txtStartTime" id="txtStartTime" style="width:99%;"><span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                </div>
            </div>

            <div class="col-md-2 text-right"><label class="control-label">End:</label></div>
            <div class="col-md-3 text-left">
                <div class="input-group date date-time-container">
                    <input type="text" class="form-control" ng-model="txtEndTime" id="txtEndTime" style="width:99%;"><span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                </div>
            </div>

            <div class="col-md-2 text-right"><label class="control-label">Treatment:</label></div>
            <div class="col-md-3 text-left">
                <select class="form-control" ng-model="TreatmentID" ng-options="item.id as item.Value for item in FNTreatments" disabled>
                   
                </select>
            </div>
        </div>
       </fieldset>
                               
        <div class="ui-grid-top-panel col-md-12">
         
                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="Save()"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span></button>
                <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="Remove()"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>
            <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="RefreshGrid()"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>


         

        </div>
        <div class="col-md-12">
            <div ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
        </div>

    </div>
</div>

    <style type="text/css">
        .form-control {
            height: 26px;
            padding: 0px 6px;
            font-size: 12px;
        }
        .ui-grid-top-panel .btn-sm {
            padding: 3px 10px;
        }
        .input-group-addon {
        padding: 3px 6px;
    }
        .grid {
            height: 285px;
            width: 100%;
        }

        .custom-pagination {
            margin-top: -15px;
            margin-bottom: -15px;
        }

        .regionCS .form-horizontal .control-label {
          padding-top: 1px;
          font-size: 11px;
      }

      .regionCS .form-control {
          height: 22px;
          padding: 0px 4px;
          font-size: 12px;
      }

      .regionCS .col-md-12 {
          width: 100%;
          padding-right: 5px;
          padding-left: 5px;
          margin-bottom: 5px;
      }


      .regionCS .col-md-2 {
          width: 10%;
          padding-right: 5px;
          padding-left: 5px;
      }

      .regionCS .col-md-3 {
          width: 23%;
          padding-right: 5px;
          padding-left: 5px;
      }
     .regionCS .input-group-addon {
          padding: 3px 6px;
      }
    
    </style>

    <script type="text/javascript">
    var oFNProductionPlanList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    var oFNTreatments=@Html.Raw(Json.Encode(@ViewBag.FNTreatments));
    var SelectedTreatment =@Html.Raw(Json.Encode(ViewBag.TreatmentProcess));
        var nBUID = @Html.Raw(Json.Encode(ViewBag.BUID));
        var  mainAppModule = angular.module('mainApp', ['ngAnimate', 'ui.bootstrap', 'ui.grid','ui.grid.selection', 'ui.grid.cellNav','ui.grid.resizeColumns','FNProductionPlan.service', 'ms.service']);
        mainAppModule.controller('mainController', function ($scope, $http, $uibModal,$interval,$timeout,  $log, uiGridConstants, msModal,fnppservice, userSession) {

     
        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });
        $('.date-time-container').datetimepicker({
            format: "DD MMM YYYY HH:mm A" //'LT'
        });
        $scope.dtIssueFrom=$scope.dtIssueTo=icsdateformat(new Date());
        $scope.PlanDate=icsdateformat(new Date());
        $scope.chkDate = false;
        $('.number-box').icsCurrencyBox();

        $scope.FNProductionPlan = {FNPPID:0};
        $scope.index = -1; $scope.FNMachineID =$scope.FNExODetailID = 0;
        sessionStorage.setItem('HostBaseAddress',_sBaseAddress) ;
        $scope.CompareOperators = oCompareOperators;
        $scope.FNTreatments =oFNTreatments;
        $scope.TreatmentID=SelectedTreatment;
        sessionStorage.setItem('BUID',nBUID);
        $scope.SearchKeyDownTempOrderNo=function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var OrderNo = $.trim($scope.txtTempFNExONo);
                if(OrderNo==""||OrderNo==null)
                {
                    alert("Type Order NO and Press Enter");
                    return;
                }

                var oFNProductionPlan = {
                    FNExONo: $.trim($scope.txtTempFNExONo),
                    FNTreatment:SelectedTreatment
                };
                $.icsProgressBar(true);
                var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                $http.post(sessionStorage.getItem('BaseAddress')+'/FNProductionPlan/GetFNProductionPlans',$.param(oFNProductionPlan), config).then(
                                    function (response)
                                    {
                                        debugger;
                                        $.icsProgressBar(false);
                                        var results=jQuery.parseJSON(response.data);
                                        $scope.gridOptions.data = results;
                                    },
                                      function (response) { alert(jQuery.parseJSON(response.data).Message);}
                                );
            }
        };

        $scope.SearchKeyDownTempBatchNo=function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var OrderNo = $.trim($scope.txtTempBatchNo);
                if(OrderNo==""||OrderNo==null)
                {
                    alert("Type Order NO and Press Enter");
                    return;
                }

                var oFNProductionPlan = {
                    BatchNo: $.trim($scope.txtTempBatchNo),
                    FNTreatment:SelectedTreatment
                };
                $.icsProgressBar(true);
                var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                $http.post(sessionStorage.getItem('BaseAddress')+'/FNProductionPlan/GetFNProductionPlans',$.param(oFNProductionPlan), config).then(
                                    function (response)
                                    {
                                        debugger;
                                        $.icsProgressBar(false);
                                        var results=jQuery.parseJSON(response.data);
                                        $scope.gridOptions.data = results;
                                    },
                                      function (response) { alert(jQuery.parseJSON(response.data).Message);}
                                );
            }
        };

        $scope.searchPlan = function () {
            debugger;

            var oFNProductionPlan = {
                FNExONo: $.trim($scope.txtTempFNExONo),
                FNTreatment:SelectedTreatment,
                BUID:sessionStorage.getItem('BUID'),
                Params : $scope.chkDate==false?'': $scope.chkDate+'~'+ $scope.dtIssueFrom +'~'+ $scope.dtIssueTo ,
                ErrorMessage:$scope.txtFNMachineIDs
            };
            $.icsProgressBar(true);
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/FNProductionPlan/GetFNProductionPlans',$.param(oFNProductionPlan), config).then(
                                function (response)
                                {
                                    debugger;
                                    $.icsProgressBar(false);
                                    var results=jQuery.parseJSON(response.data);
                                    $scope.gridOptions.data = results;
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );
        };

        $scope.AdvanceSearch = function ()
        {
            debugger;
            var modalObj={
                modalcontroller:'ModalAdvanceSearchCtrl',
                appcontroller:'FNProductionPlanController',
                CompareOperators:$scope.CompareOperators
            }
            var modalInstance=fnppservice.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                debugger;
                $scope.gridOptions.data = result;
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        $scope.gridOptions ={
            enableRowHeaderSelection: false,
            enableRowSelection: true,
            enableFullRowSelection: true,
            multiSelect: false,
            enableColumnResizing: true,
            noUnselect : true,
           columnDefs: [
                 {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{rowRenderIndex+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
            { field: 'TreatmentProcess', name: 'Treatment Type', width: '10%', cellClass: 'text-left',enableCellEdit:false},
                 { field: 'PlanDateStr', name: 'Plan Date', width: '10%', cellClass: 'text-left',enableCellEdit:false},
                { field: 'FNMachineNameCode', name: 'Machine', width: '15%', cellClass: 'text-left',enableCellEdit:false},
                { field: 'OrderNo', name: 'Order', width: '10%', cellClass: 'text-left',enableCellEdit:false },
                { field: 'FabricNo', name: 'Fabric', width: '10%', cellClass: 'text-left',enableCellEdit:false},
                { field: 'ColorName', name: 'Color', width: '10%', cellClass: 'text-left',enableCellEdit:false},
                { field: 'StartTimeInString', name: 'Start Time', width: '15%', cellClass: 'text-left',enableCellEdit:false},
                { field: 'EndTimeInString', name: 'End Time', width: '15%', cellClass: 'text-left',enableCellEdit:false},
                { field: 'Qty', name: 'Qty', width: '10%', cellClass: 'text-right',enableCellEdit:false}
            ],
            data:oFNProductionPlanList,
            onRegisterApi:function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                    debugger;
                    $scope.FNProductionPlan.FNPPID = row.entity.FNPPID;
                    $scope.FNExODetailID = row.entity.FNExODetailID;
                    $scope.txtFNExONo = row.entity.FNExONo;
                    $scope.txtQty = row.entity.Qty;
                    $scope.txtQtyInMeter = GetMeter(row.entity.Qty,2);
                    $scope.FNMachineID = row.entity.FNMachineID;
                    $scope.txtFNMachine = row.entity.FNMachineNameCode;
                    $scope.txtStartTime = row.entity.StartTimeInString;
                    $scope.txtEndTime = row.entity.EndTimeInString;
                    $scope.PlanDate=row.entity.PlanDateStr;
                    $scope.TreatmentID=row.entity.FNTreatment;
                    $scope.index = $scope.gridOptions.data.indexOf(row.entity);
                });

            }
        };



        $scope.Save = function () {
            debugger;
            if($scope.FNExODetailID <= 0 )
            {
                msModal.Message({headerTitle : '', bodyText:'Please Pick Order', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            //if($scope.FNMachineID <= 0 )
            //{
            //    msModal.Message({headerTitle : '', bodyText:'Please Pick Machine', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
            //    return false;
            //}
            if(($scope.txtQty <=0 ))
            {
                msModal.Message({headerTitle : '', bodyText:'Qty Should be Greater than 0', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            if((new Date($("#txtStartTime").val())> new Date($("#txtEndTime").val())))
            {
                msModal.Message({headerTitle : '', bodyText:'End Date Should be Greater than Start Date', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            var oFNProductionPlan = {
                FNPPID : $scope.FNProductionPlan.FNPPID,
                FNExODetailID : $scope.FNExODetailID,
                FNMachineID :$scope.FNMachineID,
                Qty :$scope.txtQty,
                StartTime : icsdatetimeformat(new Date($("#txtStartTime").val())),
                EndTime : icsdatetimeformat(new Date($("#txtEndTime").val())),
                FNTreatment:$scope.TreatmentID,
                PlanDate:icsdateformat(new Date($scope.PlanDate))
            };
            $.icsProgressBar(true);
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/FNProductionPlan/Save',$.param(oFNProductionPlan), config).then(function (response){
                $.icsProgressBar(false);
                var oFNProductionPlan=jQuery.parseJSON(response.data);
                console.log(oFNProductionPlan);
                if(oFNProductionPlan.FNPPID > 0)
                {

                    $.icsProgressBar(false);
                    alert("Successfull Saved.");
                    if($scope.index==-1)
                    {
                        debugger;
                        $scope.gridOptions.data.push(oFNProductionPlan);
                        var SelectedRowIndex=$scope.gridOptions.data.indexOf(oFNProductionPlan);

                        $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                        $scope.gridApi.selection.selectRow($scope.gridOptions.data[SelectedRowIndex]);


                    }else{
                        if($scope.index!=1)
                        {
                            $scope.gridOptions.data[$scope.index]=oFNProductionPlan;
                            $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                            $scope.gridApi.selection.selectRow($scope.gridOptions.data[$scope.index]);
                        }
                    }
                    $scope.Refresh();
                }
                else{
                    msModal.Message({headerTitle : '', bodyText:oFNProductionPlan.ErrorMessage, sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                }
            },
                             function (response) { alert(jQuery.parseJSON(response.data)[0].ErrorMessage);}
             );
        };
        $scope.Remove = function () {
            debugger;
            var oFNProductionPlan=$scope.gridApi.selection.getSelectedRows()[0];
            if(oFNProductionPlan==null || oFNProductionPlan.FNPPID<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'No item found to delete.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            var SelectedRowIndex=$scope.gridOptions.data.indexOf(oFNProductionPlan);
            if (!confirm("Confirm to Delete?")) return ;
            $http.post(sessionStorage.getItem('BaseAddress')+ '/FNProductionPlan/Delete',JSON.stringify(oFNProductionPlan)).then(
                            function (response) {
                                var sMessage= jQuery.parseJSON(response.data).toLowerCase();
                                if(sMessage=='deleted')
                                {
                                    alert("Successfully Deleted.");
                                    $scope.gridOptions.data.splice(SelectedRowIndex,1);
                                }
                                else{
                                    msModal.Message({headerTitle : '', bodyText:result[0].ErrorMessage, sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                }
                            },
                            function (response) {alert(jQuery.parseJSON(response.data));}
                        );

        };

        $scope.Refresh = function()
        {
            $scope.FNProductionPlan.FNPPID = 0;
            $scope.FNExODetailID = 0;
            $scope.txtFNExONo = '';
            $scope.txtQty = 0;
            $scope.txtQtyInMeter = 0;
            $scope.FNMachineID = 0;
            $scope.txtFNMachine = '';
            $scope.txtStartTime = '';
            $scope.txtEndTime = '';
            $scope.index = -1;
            $('#txtFNExONo').focus();
            $scope.PlanDate=icsdateformat(new Date());
            $scope.TreatmentID=SelectedTreatment;
        };
        $scope.RefreshGrid = function()
        {
            $scope.FNProductionPlan.FNPPID = 0;
            $scope.FNExODetailID = 0;
            $scope.txtFNExONo = '';
            $scope.txtQty = 0;
            $scope.txtQtyInMeter = 0;
            $scope.FNMachineID = 0;
            $scope.txtFNMachine = '';
            $scope.txtStartTime = '';
            $scope.txtEndTime = '';
            $scope.index = -1;
            $('#txtFNExONo').focus();
            $scope.PlanDate=icsdateformat(new Date());
            $scope.TreatmentID=SelectedTreatment;
            $scope.gridApi.selection.clearSelectedRows();
        };

         //FNBatch Entry
        $scope.FNBatch = function () {
            debugger;
            var oFNProductionPlan=$scope.gridApi.selection.getSelectedRows()[0];
            if(oFNProductionPlan==null || oFNProductionPlan.FNPPID<=0)
            {
                msModal.Message({headerTitle : '', bodyText:'No Selection found .', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            var SelectedRowIndex=$scope.gridOptions.data.indexOf(oFNProductionPlan);

            sessionStorage.setItem("FNProductionPlans", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("FNPPHeader", "Add FNMachine");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = sessionStorage.getItem('BaseAddress')+ "/FNBatch/ViewFNBatch_FSC?nId="+oFNProductionPlan.FNExOID+"&buid="+ oFNProductionPlan.BUID;

        };

        $scope.QtyInYardKeyUp = function(e)
        {
            $('#txtQtyInMeter').val(formatPrice(GetMeter(icsRemoveComma($('#txtQty').val()), 2)));
        };
        $scope.QtyInMeterKeyUp = function(e)
        {
            $('#txtQty').val(formatPrice(GetYard(icsRemoveComma($('#txtQtyInMeter').val()), 2)));
        };

        //Search Order
        $scope.SearchKeyDownOrderNo=function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var OrderNo = $.trim($scope.txtFNExONo);
                if(OrderNo==""||OrderNo==null)
                {
                    alert("Type Order NO and Press Enter");
                    return;
                }
                $scope.SearchOrder();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtFNExONo='';
                $scope.FNExODetailID = 0;
                $scope.txtQty = 0;
            }
        };
        $scope.SearchOrder= function () {
            $.icsProgressBar(true);
            var oFNEXOD = {ExeNo:$.trim($scope.txtFNExONo)};
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/FNProductionPlan/GetsFNExODetails',$.param(oFNEXOD), config).then(
                                function (response)
                                {
                                    debugger;
                                    $.icsProgressBar(false);
                                    var oColumns = [];
                                    var oColumn = { field: 'SCNoFull', name: 'PO No',width: '15%'};oColumns.push(oColumn);
                                    oColumn = { field: 'ExeNo', name: 'Dispo No',width: '15%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'FabricNo', name: 'Mkt. Ref',width: '20%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'ColorInfo', name: 'Color Info',width: '20%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'Qty', name: 'Qty',width: '15%',enableSorting: false};oColumns.push(oColumn);
                                    var results=jQuery.parseJSON(response.data);
                                    if(results.length<=0)
                                    {
                                        alert("Sorry, There is No More Avilable Qty For Plan.");
                                        return;
                                    }
                                    var modalObj={
                                        size:'md',
                                        url:sessionStorage.getItem('BaseAddress')+'/Home/Modal',
                                        modalcontroller:'EODModalCtrl',
                                        appcontroller:'mainController',
                                        objs:results,
                                        multiSelect:false,
                                        pickertitle:'Fabric List',
                                        searchingbyfieldName:'FabricNo',
                                        columns:oColumns
                                    }
                                    var modalInstance=msModal.Instance(modalObj);
                                    modalInstance.result.then(function (result)
                                    {
                                        debugger;
                                        $scope.txtFNExONo=result.SCNoFull;
                                        $scope.FNExODetailID=result.FabricSalesContractDetailID;
                                        $scope.txtQty = result.Qty;
                                        $scope.txtQtyInMeter = GetMeter(result.Qty,2);

                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );
        };
        //search Machine
        $scope.SearchKeyDownMachine=function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtFNMachine = $.trim($scope.txtFNMachine);
                if(txtFNMachine==""||txtFNMachine==null)
                {
                    alert("Type Machine Name and Press Enter");
                    return;
                }
                $scope.SearchMachine();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtFNMachine='';
                $scope.FNMachineID = 0;
            }
        };
        $scope.SearchMachine= function () {

            var oFNMachine = {
                Name: $.trim($scope.txtFNMachine),
                Params:1
                //FNMachineTypeInt:1//forEnumFNMachineType None = 0,Machine = 1,Batcher_Trolly = 2
            };
            $.icsProgressBar(true);
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/FNMachine/GetFNMachines',$.param(oFNMachine), config).then(
                                function (response)
                                {
                                    debugger;
                                    $.icsProgressBar(false);
                                    var oColumns = [];
                                    var oColumn = { field: 'Code', name: 'Code',width: '15%'};oColumns.push(oColumn);
                                    oColumn = { field: 'Name', name: 'Name',width: '40%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'FNMachineTypeSt', name: 'Type',width: '30%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'FreeTime', name: 'Free Time',width: '15%'};oColumns.push(oColumn);

                                    var results=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        size:'md',
                                        url:sessionStorage.getItem('BaseAddress')+'/Home/Modal',
                                        modalcontroller:'MachineModalCtrl',
                                        appcontroller:'mainController',
                                        objs:results,
                                        multiSelect:false,
                                        pickertitle:'Machine List',
                                        searchingbyfieldName:'Name',
                                        columns:oColumns
                                    }
                                    var modalInstance=msModal.Instance(modalObj);
                                    modalInstance.result.then(function (result)
                                    {
                                        debugger;
                                        $scope.txtFNMachine=result.Name+'['+result.Code+']';
                                        $scope.FNMachineID = result.FNMachineID;

                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );
        };


        $scope.txtFNMachineIDs = "";
        $scope.SearchKeyDownMachineForSearch=function (e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtFNMachine = $.trim($scope.txtTempFNMachine);

                $scope.SearchMachineForSearch();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtTempFNMachine='';
                $scope.txtFNMachineIDs = "";
            }
        };
        $scope.SearchMachineForSearch= function () {

            var oFNMachine = {
                Name: $.trim($scope.txtTempFNMachine),
                Params:1

            };
            $.icsProgressBar(true);
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/FNMachine/GetFNMachines',$.param(oFNMachine), config).then(
                                function (response)
                                {
                                    debugger;
                                    $.icsProgressBar(false);
                                    var oColumns = [];
                                    var oColumn = { field: 'Code', name: 'Code',width: '15%'};oColumns.push(oColumn);
                                    oColumn = { field: 'Name', name: 'Name',width: '40%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'FNMachineTypeSt', name: 'Type',width: '30%',enableSorting: false};oColumns.push(oColumn);
                                    oColumn = { field: 'FreeTime', name: 'Free Time',width: '15%'};oColumns.push(oColumn);

                                    var results=jQuery.parseJSON(response.data);
                                    var modalObj={
                                        size:'md',
                                        url:sessionStorage.getItem('BaseAddress')+'/Home/Modal',
                                        modalcontroller:'MachineModalCtrl',
                                        appcontroller:'mainController',
                                        objs:results,
                                        multiSelect:true,
                                        pickertitle:'Machine List',
                                        searchingbyfieldName:'Name',
                                        columns:oColumns
                                    }
                                    var modalInstance=msModal.Instance(modalObj);
                                    modalInstance.result.then(function (results)
                                    {

                                        angular.forEach(results,function(item,index){
                                            $scope.txtFNMachineIDs+=item.FNMachineID+",";
                                        });
                                        $scope.txtFNMachineIDs= $scope.txtFNMachineIDs.substring(0, $scope.txtFNMachineIDs.length-1);
                                        $scope.txtTempFNMachine=results.length+"'s Item Selected";
                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                },
                                  function (response) { alert(jQuery.parseJSON(response.data).Message);}
                            );
        };

    });


    </script>




