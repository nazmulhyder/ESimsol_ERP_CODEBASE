@model IEnumerable<ESimSol.BusinessObjects.DisciplinaryAction>
@{
    ViewBag.Title = "Financial Adjustment";
}

<div class="menuMainCollectionTable" style="margin-left:0px;  width:100%; height:100%">

    <table id="tblDisciplinaryActions" title="Financial Adjustment" class="easyui-datagrid" style=" width:100%; height:90%" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" selectoncheck="false" checkonselect="false" autorowheight="false" toolbar="#toolbar">
        <thead>
            <tr>
                <th data-options="field:'Selected',checkbox:true"></th>
                <th field="EmployeeNameCode" width="160" align="left">Employee</th>
                <th field="OfficialInfo" width="160" align="left">OfficialInfo</th>
                <th field="PaymentCycleInString" width="100" align="left">Payment Cycle</th>
                <th field="SalaryHeadName" width="120" align="left">Salary Head </th>
                <th field="Amount" width="100" align="left" formatter="formatPrice">Amount</th>
                <th field="CompAmount" width="100" align="left" formatter="formatPrice">Comp Amount</th>
                <th field="SalaryHeadTypeInString" width="100" align="left">Action Type</th>
                <th field="ExecutedOnInString" width="100" align="left">Execute On</th>
                <th field="ApproveByName" width="150" align="left">Approve By</th>
            </tr>
        </thead>
    </table>

    <table>
        <tr>
            <td>
                <input id="chkRange_Colection" type="checkbox" />Range
                <label id="lblRange1_Colection">
                    <input id="txtFrom_Colection" type="text" style="width:40px" />&nbsp; To &nbsp;
                </label>
                <label id="lblRange2_Colection">
                    <input id="txtTo_Colection" type="text" style="width:40px" />
                </label>
                &nbsp; &nbsp;
                <label id="lblcount_Colection"></label>
                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next_Colection()">Next</a>
            </td>
        </tr>
    </table>

    <div id="toolbar" style="height:auto;">
        @*<input type="text" id="txtSearchByName" placeholder="Search by name" style="width:150px" />*@
        @*<a id="btnASearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Adv.Search</a>*@
        
        <input id="dtStartDate" type="text" style="width: 100px;" class="easyui-datebox"
               data-options="formatter:icsdateformat,parser:icsdateparser" />
        <input id="dtEndDate" type="text" style="width: 100px;" class="easyui-datebox"
               data-options="formatter:icsdateformat,parser:icsdateparser" />
        <input id="txtEmployee" style="width:120px;" type="text" placeholder="Type Code & Enter" />
        <input id="btnASearch" type="button" value="P" />
        <input id="btnCEmployee" type="button" value="C" style="margin-right:2px;" />
        <input id="chkApprove" type="checkbox" /> Approve
        <input id="chkUnApprove" type="checkbox" /> UnApprove
        <a id="btnSearchWithPagination" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="SearchWithPasignation()">Search</a>
        <br />
        <a id="btnNew" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="New()">New</a>
        <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="Edit()">Edit</a>
        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="Delete()">Delete</a>
        @*<a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true" onclick="Approve()">Approve</a>*@
        <a id="btnApprove_Multiple" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" >Approve</a>
        <a id="btnUndoApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" plain="true">Undo Approve</a>
  
        <a id="btnView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true" onclick="Preview()">Preview</a>
        <a id="btnDAExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true" onclick="PrintDAExcel()">XL</a>
        <br />
        @using (Html.BeginForm("ViewDisciplinaryActions", "DisciplinaryAction", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <table border="0" cellpadding="0" cellspacing="0">
                <tr>
                    <td style="width:150px;">
                        <input type="file" id="fileDAs" name="fileDAs" />
                    </td>
                    <td style="width:500px;">
                        <input style="width:100px; height:20px;" type="submit" id="btnImportXL" value="Import" class="icon-up PrintList" />
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="SampleFormatDownload()">Download Format</a>
                    </td>
                </tr>
            </table>


            
        }
    </div>
    <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Present Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Permanent Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>

                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            BU :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboBU" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" style="width:130px; float:left;" class="selection-search cboReset"></select>
                            &nbsp; Group:
                            <input id="txtEmployeeGroupAdv" style="width:90px;" type="text" />
                            <input id="btnEmployeeGroupPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                            <input id="btnEmployeeGroupResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Category:
                        </td>
                        <td class="td-AdvSearch-Level">
                            <div>
                                <select id="cboCategory" style="width:130px; float:left;"></select>
                                &nbsp; Gender :
                                <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch" style="width:130px; float:left;" class="selection-search cboReset"></select>

                            &nbsp; Block:
                            <input id="txtEmployeeBlockAdv" style="width:90px;" type="text" />
                            <input id="btnEmployeeBlockPickerAdv" class="pick-btn" type="button" value="P" style="width:20px;" />
                            <input id="btnEmployeeBlockResetAdv" class="pick-btn" type="button" value="R" style="width:20px;" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 75px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                            <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                            <a id="btnEmployeeDatabaseXL" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true" onclick="PrintEmployeeDatabaseXL()"></a>
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" >
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    @*<div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            BU :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboBU" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Category:
                        </td>
                        <td class="td-AdvSearch-Level">
                            <div>
                                <select id="cboCategory" style="width:160px; float:left;"></select>
                                &nbsp; Gender :
                                <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 75px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                            <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 425px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false" >
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>*@

    <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="locationtree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="OkButtonClick()">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

</div>
<style type="text/css">
    .lblStar {
        color: #ff0000;
        font-weight: bold;
    }

    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>

@*<style type="text/css">
    .lblStar {
        color: #ff0000;
        font-weight: bold;
    }

    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>*@

<script type="text/javascript">

var _oDisciplinaryActions=[];
var _sBaseAddress="";
var _sDisciplinaryActionHeader="";

var _nLastEmployeeID = 0;
var _bNext = false;
var _nLoadRecords = 0;
var _nRowLength = 0;

var _oEmployeeTypes=[];
var _oShifts=[];
var _oEmployeeCSs=[];
var _oEmployeeWSs=[];

var _sAttendanceSchemeID="";
var _sLocationID = "";
var _sDepartmentID = "";
var _sDesignationID = "";

var _sEmployeeIDs="";
var _nLoadRecords = 0;
var _nRowLength = 0;
var _bNext = false;
var _nLastDAID = 0;

var _sFeedBack=null;
var _oAURolesMapping=[]
var _oBusinessUnits=[];
    
        
var _sBlockNamesAdv="";
var _sBlockIDsAdv="";
var _sGroupNamesAdv="";
var _sGroupIDsAdv="";
$(document).ready(function () {
    _oDisciplinaryActions =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    _sFeedBack=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FeedBack));

    _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
    _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
    _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
    _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
    _oAURolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    var oDisciplinaryActions=jQuery.parseJSON(sessionStorage.getItem("DisciplinaryActions"));
    _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
    var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));

    if(!PermissionChecker('Approved','FinancialAdjustment',_oAURolesMapping)) {
        $('#btnApprove_Multiple,#btnUndoApprove').hide();
    }

    if(_sFeedBack!=null){alert(_sFeedBack);}
    else if(_oDisciplinaryActions.length>0 && _oDisciplinaryActions[0].ErrorMessage=="Uploaded Successfully!" && _oDisciplinaryActions[0].bUpload == true){
        alert(_oDisciplinaryActions[0].ErrorMessage);
        //oDisciplinaryActions=_oDisciplinaryActions;
    }
    else if(_oDisciplinaryActions.length>0 && _oDisciplinaryActions[0].ErrorMessage!="")
    {
        alert(_oDisciplinaryActions[0].ErrorMessage);
    }
    else if(_oDisciplinaryActions.length>0 && _oDisciplinaryActions[0].ErrorMessage==""){
        oDisciplinaryActions=_oDisciplinaryActions;
    }

    if(oDisciplinaryActions!=null && oDisciplinaryActions.length>0){
        DynamicRefreshList(oDisciplinaryActions, "tblDisciplinaryActions");
    }

    if(_sDisciplinaryActionHeader == "New Disciplinary Action") {
        var oDisciplinaryActions = $('#tblDisciplinaryActions').datagrid('getRows');
        var nIndex = oDisciplinaryActions.length-1;
        $('#tblDisciplinaryActions').datagrid('selectRow', nIndex);
    }
    else if(_sDisciplinaryActionHeader == "Edit Disciplinary Action" || _sDisciplinaryActionHeader == "View Disciplinary Action") {
        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
        $('#tblDisciplinaryActions').datagrid('selectRow', nIndex);
    }
    $('#dtStartDate').datebox('setValue',icsdateformat(new Date()));
    $('#dtEndDate').datebox('setValue',icsdateformat(new Date()));

    sessionStorage.clear();
    InitializeAdvSearch();

    $('#txtLoadRecords_Colection').numberbox({min:0, precision:0 });
    $('#txtFrom_Colection').numberbox({min:0, precision:0 });
    $('#txtTo_Colection').numberbox({min:0, precision:0 });
    $('#txtFrom_Colection').numberbox('setValue',1);
    $('#txtTo_Colection').numberbox('setValue',50);
    document.getElementById("lblRange1_Colection").style.display = 'none';
    LoadCateGory(oEmployeeCategorys);
});
function SampleFormatDownload() {
    window.open(_sBaseAddress+ "/DisciplinaryAction/DownloadFormat");
}
function LoadCateGory(oEmployeeCategorys)
{
    $("#cboCategory").icsLoadCombo({
        List: oEmployeeCategorys,
        OptionValue: "Value",
        DisplayText: "Text"
    });
}

 $('#chkRange_Colection').click(function()
    {
        if(document.getElementById("chkRange_Colection").checked == true)
        {
            $("#lblRange1_Colection").show();
        }
        else
        {
            $("#lblRange1_Colection").hide();
        }
    });

$('#chkApprove').click(function (e)
{
    if($('#chkApprove').prop('checked'))
    {
        $('#chkUnApprove').prop('checked',false)
    }
});

$('#chkUnApprove').click(function (e)
{
    if($('#chkUnApprove').prop('checked'))
    {
        $('#chkApprove').prop('checked',false)
    }
})

//$('#txtSearchByName').keypress(function (e)
//{
//    var c = String.fromCharCode(e.which);
//    var txtSearchByName = $("#txtSearchByName").val();
//    txtSearchByName = txtSearchByName + c;
//    var bFlag=false;
//    var sTempName="";
//    var rows = $('#tblDisciplinaryActions').datagrid('getRows');
//    for(i=0;i<rows.length;++i)
//    {
//        sTempName=rows[i]['EmployeeNameCode'].substring(0, txtSearchByName.length);
//        if(txtSearchByName.toUpperCase()==sTempName.toUpperCase())
//        {
//            bFlag=true;
//            break;
//        }
//    }
//    if(bFlag)
//    {
//        $('#tblDisciplinaryActions').datagrid('selectRow', i);
//    }
//});

function New()
{
    var oDisciplinaryActions= $('#tblDisciplinaryActions').datagrid('getRows');
    sessionStorage.setItem("DisciplinaryActions", JSON.stringify(oDisciplinaryActions));
    sessionStorage.setItem("SelectedRowIndex", -1);
    sessionStorage.setItem("DisciplinaryActionHeader", "New Disciplinary Action");
    window.location.href = _sBaseAddress+ "/DisciplinaryAction/ViewDisciplinaryAction?sid=0&sMsg=N/A";
}

 function Edit()
 {
    var oDisciplinaryAction = $('#tblDisciplinaryActions').datagrid('getSelected');
    if (oDisciplinaryAction == null || oDisciplinaryAction.DisciplinaryActionID <= 0) {
        alert("Please select an item from list!");
        return;
    }
    if(oDisciplinaryAction.ApproveBy>0)
    {
        alert(" Approved Item Can Not Be Edited !");
        return;
    }
    var SelectedRowIndex = $('#tblDisciplinaryActions').datagrid('getRowIndex', oDisciplinaryAction);
    var oDisciplinaryActions= $('#tblDisciplinaryActions').datagrid('getRows');
    sessionStorage.setItem("DisciplinaryActions", JSON.stringify(oDisciplinaryActions));
    sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
    sessionStorage.setItem("DisciplinaryActionHeader", "Edit Disciplinary Action");
    window.location.href = _sBaseAddress+ "/DisciplinaryAction/ViewDisciplinaryAction?sid="+oDisciplinaryAction.EncryptDAID+"&sMsg=N/A";
 }

 function Delete()
 {
     var oDisciplinaryActions = $('#tblDisciplinaryActions').datagrid('getChecked');
     var nIndexes = [];
     var sDisciplinaryActionIDs = "";
     if (oDisciplinaryActions.length <= 0) {
         alert("please select at least one Item!");
         return false;
     }
     for (var i = 0; i < oDisciplinaryActions.length; i++) {
         if(oDisciplinaryActions[i].ApproveBy>0)
         {
             alert(" Approved Item Can Not Be Deleted !");
             return;
         }
         var SelectedRowIndex = $('#tblDisciplinaryActions').datagrid('getRowIndex', oDisciplinaryActions[i]);
         nIndexes.push(SelectedRowIndex);
         sDisciplinaryActionIDs += oDisciplinaryActions[i].DisciplinaryActionID + ",";
     }
     sDisciplinaryActionIDs = sDisciplinaryActionIDs.substring(0, sDisciplinaryActionIDs.length - 1);

    if (!confirm("Confirm to Delete?")) return;
    if (sDisciplinaryActionIDs!="") {
        $.ajax({
            type: "GET",
            dataType: "json",
            url: _sBaseAddress + "/DisciplinaryAction/DisciplinaryAction_Delete",
            data: { sDisciplinaryActionIDs:sDisciplinaryActionIDs },
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                var feedbackmessage = jQuery.parseJSON(data);
                debugger
                if (feedbackmessage == "") {
                    for (var i =nIndexes.length-1 ; i >=0; i--) {
                        $('#tblDisciplinaryActions').datagrid('deleteRow', nIndexes[i]);
                    }
                    alert("Delete sucessfully");
                } else {
                    alert(feedbackmessage);
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    }
}

function Preview()
{
    var oDisciplinaryAction = $('#tblDisciplinaryActions').datagrid('getSelected');
    if (oDisciplinaryAction == null || oDisciplinaryAction.DisciplinaryActionID <= 0) {
        alert("Please select an item from list!");
        return;
    }
    var SelectedRowIndex = $('#tblDisciplinaryActions').datagrid('getRowIndex', oDisciplinaryAction);
    var oDisciplinaryActions= $('#tblDisciplinaryActions').datagrid('getRows');
    sessionStorage.setItem("DisciplinaryActions", JSON.stringify(oDisciplinaryActions));
    sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
    sessionStorage.setItem("DisciplinaryActionHeader", "View Disciplinary Action");
    window.location.href = _sBaseAddress+ "/DisciplinaryAction/ViewDisciplinaryAction?sid="+oDisciplinaryAction.EncryptDAID+"&sMsg=N/A";
 }

 function Approve()
{
     var oDisciplinaryAction = $('#tblDisciplinaryActions').datagrid('getSelected');
     if (oDisciplinaryAction == null || oDisciplinaryAction.DisciplinaryActionID <= 0) {
         alert("Please select an item from list!");
         return;
     }
     var SelectedRowIndex = $('#tblDisciplinaryActions').datagrid('getRowIndex', oDisciplinaryAction);
     var oDisciplinaryActions= $('#tblDisciplinaryActions').datagrid('getRows');
     sessionStorage.setItem("DisciplinaryActions", JSON.stringify(oDisciplinaryActions));
     sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
     sessionStorage.setItem("DisciplinaryActionHeader", "Approve Disciplinary Action");
     window.location.href = _sBaseAddress+ "/DisciplinaryAction/ViewDisciplinaryAction?sid="+oDisciplinaryAction.EncryptDAID+"&sMsg=N/A";
 }

 $('#btnApprove_Multiple').click(function (e) {
     var oDisciplinaryActions = $('#tblDisciplinaryActions').datagrid('getChecked');
     var nIndexes = [];
     var sDisciplinaryActionIDs = "";
     if (oDisciplinaryActions.length <= 0) {
         alert("please select at least one Item!");
         return false;
     }
     for (var i = 0; i < oDisciplinaryActions.length; i++) {
         if(oDisciplinaryActions[i].ApproveBy>0)
         {
             alert("Already Approved!");
             return;
         }
         var SelectedRowIndex = $('#tblDisciplinaryActions').datagrid('getRowIndex', oDisciplinaryActions[i]);
         nIndexes.push(SelectedRowIndex);
         sDisciplinaryActionIDs += oDisciplinaryActions[i].DisciplinaryActionID + ",";
     }
     sDisciplinaryActionIDs = sDisciplinaryActionIDs.substring(0, sDisciplinaryActionIDs.length - 1);
     if (!confirm("Confirm to Approve!")) return;
     //var tsv = ((new Date()).getTime()) / 1000;
     var oDA={sIDs:sDisciplinaryActionIDs}
     $.ajax
      ({
          type: "POST",
          dataType: "json",
          url: _sBaseAddress + "/DisciplinaryAction/DisciplinaryAction_Approve",
          traditional: true,
          data: JSON.stringify({oDisciplinaryAction:oDA}),
          contentType: "application/json; charset=utf-8",
          success: function (data) {
              var oDisciplinaryActions = [];
              oDisciplinaryActions = jQuery.parseJSON(data);
              if (oDisciplinaryActions[0].ErrorMessage == "" && oDisciplinaryActions.length > 0) {
                  for (var i = 0; i < oDisciplinaryActions.length; i++) {
                      $('#tblDisciplinaryActions').datagrid('updateRow', { index: nIndexes[i], row: oDisciplinaryActions[i] });
                  }
                  alert("Approved Successfully !");
              }
              else {
                  alert(oEmployees[0].ErrorMessage);
              }
          },
          error: function (xhr, status, error) {
              alert(error);
          }
      });
 });

 $('#btnUndoApprove').click(function (e) {
     var oDisciplinaryActions = $('#tblDisciplinaryActions').datagrid('getChecked');
     if(oDisciplinaryActions.length<= 0)
     {
         alert("Please seelct an item from the list");
         return;
     }

     var sApprovedID = "";
     for(var i = 0; i < oDisciplinaryActions.length; i++) {
         if(oDisciplinaryActions[i].ApproveBy <= 0) {
             alert("Some items are not approved. Approve first!");
             return;
         }
         sApprovedID += oDisciplinaryActions[i].DisciplinaryActionID + ",";
     }
     if(sApprovedID.length > 0) {
         sApprovedID= sApprovedID.substring(0,sApprovedID.length-1);
     }


     if (!confirm("Confirm to UnApprove!")) return;
     //var oDA={sIDs:oDisciplinaryAction.DisciplinaryActionID}
     var oDA = {sIDs:sApprovedID}
     //var SelectedRowIndex = $('#tblDisciplinaryActions').datagrid('getRowIndex', oDisciplinaryAction);
     $.ajax
      ({
          type: "POST",
          dataType: "json",
          url: _sBaseAddress + "/DisciplinaryAction/DisciplinaryAction_UnApprove",
          traditional: true,
          data: JSON.stringify({oDisciplinaryAction:oDA}),
          contentType: "application/json; charset=utf-8",
          success: function (data) {
              debugger;
              var oDisciplinaryActions = [];
              oDisciplinaryActions = jQuery.parseJSON(data);
              if (oDisciplinaryActions[0].ErrorMessage == "" && oDisciplinaryActions.length > 0) {
                  //for (var i = 0; i < oDisciplinaryActions.length; i++) {
                  //    $('#tblDisciplinaryActions').datagrid('updateRow', { index: SelectedRowIndex, row: oDisciplinaryActions[i] });
                  //}
                  alert("UnApproved Successfully !");
              }
              else {
                  alert(oEmployees[0].ErrorMessage);
              }
          },
          error: function (xhr, status, error) {
              alert(error);
          }
      });
 });



 //$('#btnUndoApprove').click(function (e) {
 //    var oDisciplinaryAction = $('#tblDisciplinaryActions').datagrid('getSelected');
 //    if(oDisciplinaryAction== null || oDisciplinaryAction.DisciplinaryActionID<=0)
 //    {
 //        alert("Please seelct an item from the list");
 //        return;
 //    }
 //    if(oDisciplinaryAction.ApproveBy<=0)
 //    {
 //        alert(" This item is not approved!");
 //        return;
 //    }
 //    if (!confirm("Confirm to UnApprove!")) return;
 //    var oDA={sIDs:oDisciplinaryAction.DisciplinaryActionID}
 //    var SelectedRowIndex = $('#tblDisciplinaryActions').datagrid('getRowIndex', oDisciplinaryAction);
 //    $.ajax
 //     ({
 //         type: "POST",
 //         dataType: "json",
 //         url: _sBaseAddress + "/DisciplinaryAction/DisciplinaryAction_UnApprove",
 //         traditional: true,
 //         data: JSON.stringify({oDisciplinaryAction:oDA}),
 //         contentType: "application/json; charset=utf-8",
 //         success: function (data) {
 //             var oDisciplinaryActions = [];
 //             oDisciplinaryActions = jQuery.parseJSON(data);
 //             if (oDisciplinaryActions[0].ErrorMessage == "" && oDisciplinaryActions.length > 0) {
 //                 for (var i = 0; i < oDisciplinaryActions.length; i++) {
 //                     $('#tblDisciplinaryActions').datagrid('updateRow', { index: SelectedRowIndex, row: oDisciplinaryActions[i] });
 //                 }
 //                 alert("UnApproved Successfully !");
 //             }
 //             else {
 //                 alert(oEmployees[0].ErrorMessage);
 //             }
 //         },
 //         error: function (xhr, status, error) {
 //             alert(error);
 //         }
 //     });
 //});

    /*---------------- emp Search Start----------------*/

 function InitializeAdvSearch(){

     $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
     $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

    $("#cboEmployeeType").icsLoadCombo({
        List: _oEmployeeTypes,
        OptionValue: "EmployeeTypeID",
        DisplayText: "Name"
    });
    $("#cboShift_EmpSearch").icsLoadCombo({
        List: _oShifts,
        OptionValue: "ShiftID",
        DisplayText: "ShiftWithDuration"
    });
    $("#cboEmployeeCardStatus").icsLoadCombo({
        List: _oEmployeeCSs,
        OptionValue: "Value",
        DisplayText: "Text"
    });
    $("#cboEmployeeWorkigStatus").icsLoadCombo({
        List: _oEmployeeWSs,
        OptionValue: "Value",
        DisplayText: "Text"
    });

    $("#cboBU").icsLoadCombo({
        List: _oBusinessUnits,
        OptionValue: "BusinessUnitID",
        DisplayText: "Name"
    });

    $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
    $('#txtFrom').numberbox('setValue',1);
    $('#txtTo').numberbox('setValue',50);
    $("#lblRange1").hide();

    var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

    $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
        List: oMonths,
        OptionValue: "MonthID",
        DisplayText: "Name",
        InitialValue:''
    });

    LoadDaysInMonth();
}

function LoadDaysInMonth(){
    $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
    var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

    var oDays=[];
    for(var i=1;i<=nDaysInMonth;i++){
        oDays.push({DayID:i,Day:i});
    }
    $("#cboDayFrom,#cboDayTo").icsLoadCombo({
        List: oDays,
        OptionValue: "DayID",
        DisplayText: "Day",
        InitialValue:''
    });
}

$("#cboDateType").change(function(e){
    if($("#cboDateType").val()==1){
        $("#regionDateTo").hide();
    }
    else{
        $("#regionDateTo").show();
    }
});

$("#cboMonthFrom").change(function(e){
    var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
    var oDays=[];
    for(var i=1;i<=nDaysInMonth;i++){
        oDays.push({DayID:i,Day:i});
    }
    $("#cboDayFrom").icsLoadCombo({
        List: oDays,
        OptionValue: "DayID",
        DisplayText: "Day",
        InitialValue:''
    });
});

$("#cboMonthTo").change(function(e){
    var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
    var oDays=[];
    for(var i=1;i<=nDaysInMonth;i++){
        oDays.push({DayID:i,Day:i});
    }
    $("#cboDayTo").icsLoadCombo({
        List: oDays,
        OptionValue: "DayID",
        DisplayText: "Day",
        InitialValue:''
    });
});

function EmployeePickerReset(){
    _nLastEmployeeID = 0;
    _sEmployeeIDs = "";
    _bNext = false;
    _nLoadRecords = 0;
    _nRowLength = 0;
    _sAttendanceSchemeID="";
    _sLocationID = "";
    _sDepartmentID = "";
    _sDesignationID = "";
    $(".txtReset").val("");
    $(".cboReset").val(0);
    $(".chkReset").prop("checked",false);

    $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
    LoadDaysInMonth();

    DynamicRefreshList([], "tblEmployeesForPicker");
    $("#lblcount").html("");
    $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
    $('#txtFrom').numberbox('setValue',1);
    $('#txtTo').numberbox('setValue',50);
    $("#lblRange1").hide();
    $('#txtEmployeeGroupAdv').val("");
    $('#txtEmployeeBlockAdv').val("");
    _sBlockIDsAdv = "";
    _sGroupIDsAdv = "";
}

$("#btnASearch").click(function () {

    EmployeePickerReset();
    $("#winEmployeePicker").icsWindow("open", " Employee Picker");
});

$('#chkRange').click(function()
{
    if(document.getElementById("chkRange").checked == true)
    {
        $("#lblRange1").show();
    }
    else
    {
        $("#lblRange1").hide();
    }
});

$('#btnEmpPickerSearch').click(function () {
    _bNext = false;
    AdvSearch();
});

function Next() {
    var oEmployees = [];
    oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
    if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
    _nRowLength = oEmployees.length;
    _bNext = true;
    AdvSearch();
}

function AdvSearch(){
    if (!_bNext) {
        _nRowLength = 0;
        _nLastEmployeeID = 0;
    }
    _nLoadRecords = document.getElementById("txtTo").value;
    if ($("#chkRange").is(':checked')) {
        if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
        var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
        var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
        if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
        _nRowLength = nRangeFrom - 1;
        _nLoadRecords = nRangeTo - nRangeFrom + 1;
    }

    var sName = $.trim($("#txtEmployeeName").val());
    var sCode = $.trim($("#txtEmpCodeForSearch").val());
    var sEnrollNo = $.trim($("#txtEnrollNo").val());
    var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
    var nEmployeeTypeID=$("#cboEmployeeType").val();
    var nShiftID=$("#cboShift_EmpSearch").val();
    var nCardStatus=$("#cboEmployeeCardStatus").val();
    var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
    var nDateType=$("#cboDateType").val();
    var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
    var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
    var sGender= $("#cboGender option:selected").text();

    var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
    var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
    var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

    var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
    var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

    var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
    var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

    var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
    var dtDateFrom = $('#dtDateFrom').datebox('getValue');
    var dtDateTo = $('#dtDateTo').datebox('getValue');

    if(bIsJoiningDate)
    {
        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert("Invalid Joining Date Range!");
            return;
        }
    }

    var nBusinessUnitID = $("#cboBU").val();
    var nCategory=$('#cboCategory').val();
    var sPresentAddress=$('#txtPresentAddress').val();
    var sPermanentAddress=$('#txtPermanentAddress').val();

    if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentID=="" && _sDesignationID=="" &&
           nEmployeeTypeID==0 && sGender=="None" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
           bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 && !bIsJoiningDate
           && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBlockIDsAdv==""&& _sGroupIDsAdv=="")
            {
                alert("Please enter your selection criteria."); return false;
            }

    var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentID + '~' +_sDesignationID + '~' +
                 sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                 bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                 sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                 +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBlockIDsAdv+"~"+_sGroupIDsAdv;

    $.ajax({
        type: "POST",
        dataType: "json",
        url: _sBaseAddress + "/Employee/EmployeeSearch",
        traditional: true,
        data: JSON.stringify({ sParam: sParam }),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var oEmps = jQuery.parseJSON(data);
            if (oEmps != null) {
                if (oEmps.length > 0) {
                    if(!_bNext){
                        DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                    }
                    else{
                        var bAppend=false;
                        var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                        if(oTEmps.length>0){
                            for (var i = 0; i < oEmps.length; i++) {
                                var IsAppend=true;
                                for (var j = 0; j < oTEmps.length; j++) {

                                    if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                        IsAppend=false;
                                        break;
                                    }
                                }
                                if(IsAppend){
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                }
                            }
                        }
                        else{
                            for (var j = 0; j < oEmps.length; j++) {
                                bAppend=true;
                                $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                            }
                        }
                        if(!bAppend){
                            alert("No more data found!");
                        }
                    }

                }
                else {
                    alert("No more data found!");
                }
                var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                _bNext = false;
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }
    });
}

$("#btnEmployeePickerOk").click(function () {
    var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
    if (oEmployees.length<=0) { alert("please select atleast one item");return; }
    var sEmpIDs="";
    var sEmpNames="";
    for(var i=0;i<oEmployees.length;i++)
    {
        sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
        sEmpNames=sEmpNames+oEmployees[i].Name+",";
    }
    _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
    sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
    $("#txtEmployee").val(sEmpNames);
    $("#winEmployeePicker").icsWindow('close');
});

$("#btnEmployeePickerClose").click(function () {
    $("#winEmployeePicker").icsWindow('close');
});

/*-------------Attendance Schema Picker----------------*/
$("#btnAttScheme").click(function(e){
    debugger
    var oAttendanceScheme={AttendanceSchemeID:0};
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oAttendanceScheme,
        ControllerName: "AttendanceScheme",
        ActionName: "GetsAttendanceSchemeCurrentSession",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {

        if (response.status && response.objs.length > 0) {
            if (response.objs[0].AttendanceSchemeID > 0) {
                debugger;
                var tblColums = [];
                var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                var oPickerParam = {
                    winid: 'winAttendanceScheme',
                    winclass:'clsAttendanceScheme',
                    winwidth: 420,
                    winheight: 460,
                    tableid: 'tblAttendanceSchemePicker',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: false,
                    searchingbyfieldName:'Name',
                    windowTittle: 'Attendance Scheme List'
                };
                $.icsPicker(oPickerParam);
                IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName

            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
});

function IntializeAttendancePickerbutton(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {

        var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
        if (oPickerobj.winid == 'winAttendanceScheme')
        {
            if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
            }
            else{
                alert("Please select a schema.");
            }
        }
    });
}

$("#btnResetAttScheme").click(function(e){
    $('#txtAttendanceScheme').val("");
    _sAttendanceSchemeID="";
});

/*-------------Location Picker----------------*/

$("#btnLocationPicker").click(function(e){
    var nBusinessUnitID = $("#cboBU").val();
    $("#winLocationPicker").icsWindow('open');
    var oLocation={LocationID:0,BusinessUnitID:nBusinessUnitID};
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oLocation,
        ControllerName: "Location",
        ActionName: "GetsLocationMenuTree",
        IsWinClose: false
    };

    $.icsDataGet(obj, function (response) {
        if (response.status && response.obj!=null) {
            if (response.obj.TLocation.id > 0) {
                $('#locationtree').tree({ data: [response.obj.TLocation] });
            }
        }
    });
});

$("#btnLocationPickerOk").click(function(e){
    var oLocation = $('#locationtree').tree('getSelected');
    if(oLocation!=null && oLocation.id>0){
        $("#winLocationPicker").icsWindow('close');
        $('#txtLocation').val(oLocation.text);
        _sLocationID= oLocation.id;
    }
    else{
        alert("Please select a location.");
    }
});

$("#btnLocationPickerClose").click(function(e){
    $("#winLocationPicker").icsWindow('close');
});

$("#btnResetLocationPicker").click(function(e){
    $('#txtLocation').val("");
    _sLocationID="";
});
/*-------------Department Picker----------------*/

$("#btnDepartmentPicker").click(function(e){
    $("#winDepartmentPicker").icsWindow('open');
    var oDepartment={DepartmentID:0,BusinessUnitIDs:$('#cboBU').val(),LocationIDs:_sLocationID};
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oDepartment,
        ControllerName: "Department",
        ActionName: "GetsDepartments",
        IsWinClose: false
    };

    $.icsDataGet(obj, function (response) {
        if (response.status && response.obj!=null) {
            if (response.obj.id > 0) {
                $('#departmenttree').tree({ data: [response.obj] });
            }
        }
    });
});

$("#btnDepartmentPickerOk").click(function(e){
    var oDepartment = $('#departmenttree').tree('getSelected');
    if(oDepartment!=null && oDepartment.id>0){
        $("#winDepartmentPicker").icsWindow('close');
        $('#txtDepartment').val(oDepartment.text);
        _sDepartmentID= oDepartment.id;
    }
    else{
        alert("Please select a department.");
    }
});

$("#btnDepartmentPickerClose").click(function(e){
    $("#winDepartmentPicker").icsWindow('close');
});

$("#btnResetDepartmentPicker").click(function(e){
    $('#txtDepartment').val("");
    _sDepartmentID="";
});

/*-------------Designation Picker----------------*/

$("#btnDesignationPicker").click(function(e){
    var oDesignation={
        DesignationID:0,
        Params: $('#cboBU').val()+'~'+_sLocationID+'~'+ _sDepartmentID
    };
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oDesignation,
        ControllerName: "Designation",
        ActionName: "Gets",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {

        if (response.status && response.objs.length > 0) {
            if (response.objs[0].DesignationID > 0) {
                debugger;
                var tblColums = [];
                var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                var oPickerParam = {
                    winid: 'winDesignation',
                    winclass:'clsDesignation',
                    winwidth: 320,
                    winheight: 460,
                    tableid: 'tblDesignation',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: false,
                    searchingbyfieldName:'Name',
                    windowTittle: 'Designation List'
                };
                $.icsPicker(oPickerParam);
                IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName

            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
});

function IntializeDesignationPickerbutton(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {

        var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
        if (oPickerobj.winid == 'winDesignation')
        {
            if(oDesignation!=null && oDesignation.DesignationID>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                $('#txtDesignation').val(oDesignation.Name);
                _sDesignationID=oDesignation.DesignationID;
            }
            else{
                alert("Please select a designation.");
            }
        }
    });
}

$("#btnResetDesignationPicker").click(function(e){
    $('#txtDesignation').val("");
    _sDesignationID="";
});

/*------------- Start Block Picker----------------*/
   
$("#btnBlock").click(function(e){
    BlockPicker();
});

function BlockPicker()
{
    var oBlockMachineMapping={
        ProductionProcessInt:0,
        DepartmentID:0,
        BlockName:""
    }
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oBlockMachineMapping,
        ControllerName: "BlockMachineMapping",
        ActionName: "BlockMachineMapping_Search",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {
        
        if (response.status && response.objs.length > 0) {
            if (response.objs[0].BMMID > 0) {
                var tblColums = [];
                var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
                var bmultiplereturn=true;

                var oPickerParam = {
                    winid: 'winBlock',
                    winclass:'clsBlock',
                    winwidth: 320,
                    winheight: 460,
                    tableid: 'tblShift',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: bmultiplereturn,
                    searchingbyfieldName:'BlockName',
                    windowTittle: 'Block List'
                };
                $.icsPicker(oPickerParam);
                IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName
            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
}

function IntializeBlockPickerbutton(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
        var oBlocks=[];
        oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
        if (oPickerobj.winid == 'winBlock')
        {
            if(oBlocks!=null && oBlocks.length>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                for(var i=0; i<oBlocks.length; i++)
                {
                    _sBlockNames += oBlocks[i].BlockName+",";
                    _sBMMIDs += oBlocks[i].BMMID+",";
                    
                }
                _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
                $("#txtBlock").val(_sBlockNames);
            }
            else
            {
                alert("Please select a designation.");
            }
        }
    });
}

$("#btnResetBlock").click(function(e){
    $('#txtBlock').val("");
    _sBlockNames="";
    _sBMMIDs = "";
});

$("#txtBlock").keypress(function(e){
    if (e.which == 13)
    {
        BlockPicker();
    }
});
/*------------- End Block Picker----------------*/

/*---------------- emp Search End----------------*/

$('#txtEmployee').keypress(function (e)
{
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13)//Enter key-13
    {
        var sCodeName = $.trim($("#txtEmployee").val());
        if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee").focus(); return;}
        SearchEmployeeByText(sCodeName);
    }
});

function SearchEmployeeByText(sEmpNameCode){
    var oEmployee = { Params: sEmpNameCode +'~'+ 0};
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oEmployee,
        ControllerName: "Employee",
        ActionName: "GetsByEmpCode",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {

        if (response.status && response.objs.length > 0) {
            if (response.objs[0].EmployeeID > 0) {

                var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                var oPickerParam = {
                    winid: 'winEmployeePickerTextSearch',
                    winclass:'clsEmployeePickerTextSearch',
                    winwidth: 455,
                    winheight: 460,
                    tableid: 'tblEmployeePickerTextSearch',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: false,
                    searchingbyfieldName:'Name',
                    windowTittle: 'Employee list'
                };

                $.icsPicker(oPickerParam);
                IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
}

function IntializeEmployeePickerTextSearch(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
        var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

        $("#"+oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winEmployeePickerTextSearch')
        {
            if (oreturnObj != null && oreturnObj.EmployeeID > 0)
            {
                _sEmployeeIDs=oreturnObj.EmployeeID;
                $("#txtEmployee").val(oreturnObj.Name);
                $("#winEmployeePicker").icsWindow('close');
            }
        }
    });

    $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
        if (e.which == 13)//enter=13
        {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();

            if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _sEmployeeIDs=oreturnObj.EmployeeID;
                    $("#txtEmployee").val(oreturnObj.Name);
                    $("#winEmployeePicker").icsWindow('close');
                }
            }
        }
    });
}

$('#btnCEmployee').click(function (e)
{
    $("#txtEmployee")[0].value = "";
    _sEmployeeIDs = "";
});

function SearchWithPasignation()//department and date wise search
{
    if(!_bNext)
    {
        _nRowLength = 0;
        _nLastDAID = 0;
    }
    var dtDateFrom = $('#dtStartDate').datebox('getValue');
    var dtDateTo = $('#dtEndDate').datebox('getValue');

    if(new Date(dtDateFrom)>new Date(dtDateTo))
    {
        alert("Invalid Date Range !");
        return;
    }
    _nLoadRecords = document.getElementById("txtTo_Colection").value;
    if(document.getElementById("chkRange_Colection").checked == true)
    {
        var RangeFrom = 0;
        var RangeTo = 0;
        RangeFrom = parseFloat(document.getElementById("txtFrom_Colection").value);
        RangeTo = parseFloat(document.getElementById("txtTo_Colection").value);

        if(RangeFrom > RangeTo)
        {
            alert("Invalid Range !");
            return;
        }
        _nRowLength = 0;
        _nLoadRecords = 0;

        _nRowLength = RangeFrom-1;
        _nLoadRecords = RangeTo - RangeFrom +1;
    }
    var nApproved=-1;
    if($('#chkApprove').prop('checked'))
    {
        nApproved= 1;
    }
    if($('#chkUnApprove').prop('checked'))
    {
        nApproved= 0;
    }

    var tsv = ((new Date()).getTime()) / 1000;

    $.ajax({
        type: "POST",
        dataType: "json",
        url: _sBaseAddress + "/DisciplinaryAction/SearchDAWithPasignation",
        data: JSON.stringify({sEmployeeIDs:_sEmployeeIDs,dtDateFrom:dtDateFrom,dtDateTo:dtDateTo,nApproved:nApproved,nLoadRecords : _nLoadRecords, nRowLength : _nRowLength, ts: tsv}),
        contentType: "application/json; charset=utf-8",
        success: function(data)
        {
            var oDisciplinaryActions =[];
            oDisciplinaryActions = jQuery.parseJSON(data);
            if(oDisciplinaryActions.length>0 && oDisciplinaryActions[0].ErrorMessage=="")
            {
                if(!_bNext)
                {
                    DynamicRefreshList([],'tblDisciplinaryActions');
                }

                for (var j = 0; j < oDisciplinaryActions.length; j++)
                {
                    $('#tblDisciplinaryActions').datagrid('appendRow',oDisciplinaryActions[j]);
                }
            }
            else
            {
                if(_bNext == false)
                {
                    alert("Data not found !!");
                    DynamicRefreshList([],'tblDisciplinaryActions');
                }
                else
                {
                    alert("No more data found !");
                }
            }
            var oDisciplinaryActions=$('#tblDisciplinaryActions').datagrid('getRows');
            document.getElementById("lblcount").innerHTML = " | Count ="+ oDisciplinaryActions.length;
            _bNext = false;
        },
        error: function(xhr, status, error)
        {
            alert(error);
        }
    });
}

function Next_Colection()
{
    var oDAs =[];
    oDAs=$('#tblDisciplinaryActions').datagrid('getRows');
    _nRowLength = oDAs.length;
    _bNext = true;

    if (oDAs.length<=0)
    {
        alert('Please Select Criteria and click on "Search" to find information.!!');
        return;
    }
    var oDA = oDAs[oDAs.length-1];
    if (_nLastDAID==oDA.DisciplinaryActionID)
    {
        alert('No more data found by this date range');
        return;
    }
    _nLastDAID=oDA.DisciplinaryActionID;
    SearchWithPasignation();
}

$('#btnImportXL').click( function ()
{
    if ($.trim($("#fileDAs").val()) == "") {
        alert("Please select a file.");
        $("#fileDAs").addClass("errorFieldBorder");
        $("#fileDAs").focus();
        return false;
    } else {
        $("#fileDAs").removeClass("errorFieldBorder");
    }
    return true;
});

function PrintDAExcel()
{
    var dtDateFrom = $('#dtStartDate').datebox('getValue');
    var dtDateTo = $('#dtEndDate').datebox('getValue');
    if(new Date(dtDateFrom)>new Date(dtDateTo))
    {
        alert("Invalid Date Range !");
        return;
    }

    var nApproved=-1;
    if($('#chkApprove').prop('checked'))
    {
        nApproved= 1;
    }
    if($('#chkUnApprove').prop('checked'))
    {
        nApproved= 0;
    }

    var sParams=dtDateFrom+"~"+dtDateTo+"~"+_sEmployeeIDs+"~"+nApproved;

    var tsv = ((new Date()).getTime()) / 1000;
    window.open(_sBaseAddress+ "/DisciplinaryAction/PrintDAListInXL?sParams="+sParams+"&ts="+tsv, "_blank");
}
/*------------EmployeeGroupAdv--------------*/
    
$("#btnEmployeeGroupResetAdv").click(function(e){
    $("#txtEmployeeGroupAdv").val("");
    _sGroupNamesAdv = "";
    _sGroupIDsAdv = "";
});

$('#txtEmployeeGroupAdv').keydown(function (e) {

    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13)//Enter key-13
    {
        var txtSearchByGroup = $("#txtEmployeeGroupAdv").val();
        var sTempName = "";
        SearchEmployeeGroupAdv(txtSearchByGroup);
        $("#txtEmployeeGroupAdv").val('');
    }
});


$("#btnEmployeeGroupPickerAdv").click(function(e){
    SearchEmployeeGroupAdv("");
});
function SearchEmployeeGroupAdv(name) {
    $("#txtEmployeeGroupAdv").val("");
    _sGroupNamesAdv = "";
    _sGroupIDsAdv = "";
    var oGroup={
        Name : name
    };
    debugger
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oGroup,
        ControllerName: "Employee",
        ActionName: "GetsEmployeeGroupAdvSrc",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {

        if (response.status && response.objs.length > 0) {
            if (response.objs[0].EmployeeTypeID > 0) {
                debugger;
                var tblColums = [];
                var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                var oPickerParam = {
                    winid: 'winGroup',
                    winclass:'clsGroup',
                    winwidth: 320,
                    winheight: 460,
                    tableid: 'tblGroup',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: true,
                    searchingbyfieldName:'Name',
                    windowTittle: 'Employee Group List'
                };
                $.icsPicker(oPickerParam);
                IntializeGroupPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
}

function IntializeGroupPickerbuttonAdv(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {

        var oGroups=[];
        oGroups= $('#'+oPickerobj.tableid).datagrid('getChecked');
        if (oPickerobj.winid == 'winGroup')
        {
            if(oGroups!=null && oGroups.length>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                for(var i=0; i<oGroups.length; i++)
                {
                    _sGroupNamesAdv += oGroups[i].Name+",";
                    _sGroupIDsAdv += oGroups[i].EmployeeTypeID+",";

                }
                _sGroupNamesAdv=_sGroupNamesAdv.substring(0,_sGroupNamesAdv.length-1);
                _sGroupIDsAdv=_sGroupIDsAdv.substring(0,_sGroupIDsAdv.length-1);
                $("#txtEmployeeGroupAdv").val(_sGroupNamesAdv);
            }
            else
            {
                alert("Please select a Employee Group.");
            }
        }
    });
}


/*------------EmployeeBlockAdv--------------*/

$('#txtEmployeeBlockAdv').keydown(function (e) {

    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13)//Enter key-13
    {
        var txtSearchByBlock = $("#txtEmployeeBlockAdv").val();
        var sTempName = "";
        SearchEmployeeBlockAdv(txtSearchByBlock);
        $("#txtEmployeeBlockAdv").val('');
    }
});

$("#btnEmployeeBlockPickerAdv").click(function(e){
    SearchEmployeeBlockAdv("");
});
function SearchEmployeeBlockAdv(name) {
    $("#txtEmployeeBlockAdv").val("");
    _sBlockNamesAdv = "";
    _sBlockIDsAdv = "";
    var oBlock={
        Name : name
    };
    debugger
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oBlock,
        ControllerName: "Employee",
        ActionName: "GetsEmployeeBlockAdvSrc",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {

        if (response.status && response.objs.length > 0) {
            if (response.objs[0].EmployeeTypeID > 0) {
                debugger;
                var tblColums = [];
                var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);

                var oPickerParam = {
                    winid: 'winBlock',
                    winclass:'clsBlock',
                    winwidth: 320,
                    winheight: 460,
                    tableid: 'tblBlock',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: true,
                    searchingbyfieldName:'Name',
                    windowTittle: 'Employee Block List'
                };
                $.icsPicker(oPickerParam);
                IntializeBlockPickerbuttonAdv(oPickerParam);//multiplereturn, winclassName

            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
}

function IntializeBlockPickerbuttonAdv(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {

        var oGroups=[];
        oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
        if (oPickerobj.winid == 'winBlock')
        {
            if(oBlocks!=null && oBlocks.length>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                for(var i=0; i<oBlocks.length; i++)
                {
                    _sBlockNamesAdv += oBlocks[i].Name+",";
                    _sBlockIDsAdv += oBlocks[i].EmployeeTypeID+",";

                }
                _sBlockNamesAdv=_sBlockNamesAdv.substring(0,_sBlockNamesAdv.length-1);
                _sBlockIDsAdv=_sBlockIDsAdv.substring(0,_sBlockIDsAdv.length-1);
                $("#txtEmployeeBlockAdv").val(_sBlockNamesAdv);
            }
            else
            {
                alert("Please select a Employee Block.");
            }
        }
    });
}
    

$("#btnEmployeeBlockResetAdv").click(function(e){
    debugger;
    _sBlockNamesAdv = "";
    $('#txtEmployeeBlockAdv').val("");
    _sBlockIDsAdv = "";
});

</script>
