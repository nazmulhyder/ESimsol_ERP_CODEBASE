@model ESimSol.BusinessObjects.Voucher
@{
    ViewBag.Title = "Voucher Creation";
}
<div class="menuMainCollectionTable" style="font-family:Tahoma; margin-left: 0px; height: 100%; width:100%">
    <div id="divVoucher" class="easyui-panel" title="Voucher Creation" fit="true" style="width:100%;padding:1px">
        <div id="divVoucherInfo" style="width:100%">
            <table border="0" cellpadding="2" cellspacing="2" style="width:100%">
                <tr>
                    <td style="width:20%; font-size:12px; text-align:right">
                        Journal : <select style="width:70%" id="cboVoucherType"> </select>
                    </td>
                    <td style="width:29%; font-size:12px; text-align:right">
                        Voucher No : <input type="text" id="txtVoucherNo" style="width: 50%" />
                    </td>
                    <td style="width:5%; font-size:12px; text-align:left">
                        <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="false"></a>
                    </td>
                    <td style="width:21%; font-size:12px; text-align:right">
                        Tax Effect : <select style="width:50%" id="cboTex"><option>No</option><option>Yes</option> </select>
                    </td>
                    <td style="width:25%; font-size:12px; text-align:right">
                        Business Unit : <select style="width:57%" id="cboBusinessUnit"> </select>
                    </td>
                </tr>
                <tr>
                    <td style="width:20%; font-size:12px; text-align:right">
                        Batch : <select style="width:70%" id="cboBatch"> <option> Sep/15/1 </option> </select>
                    </td>
                    <td style="width:29%; font-size:12px; text-align:right">
                        Control Amount <span class="lblCurrency"></span>: <input type="text" id="txtControlAmount" style="width:50%" />
                    </td>
                    <td style="width:5%; font-size:12px; text-align:left"></td>
                    <td style="width:21%; font-size:12px; text-align:right">
                        GL Date : <input id="txtVoucherDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:50%" />
                    </td>
                    <td style="width:25%; font-size:12px; text-align:right">
                        Posting Date : <input id="txtPostingDate" type="text" style="width:55%" disabled="disabled" value="04 Sep 2015 04.30 PM" />
                    </td>
                </tr>
            </table>
        </div>        
        <hr>
        <div style="width:100%">
            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tr>
                    <td style="width:3%; text-align:left">Del</td>
                    <td style="width:7%; text-align:left">Dr/Cr</td>
                    <td style="width:30%; text-align:left">Particulars</td>
                    <td style="width:40%; text-align:left">Narration</td>
                    <td style="width:10%; text-align:right">Debit<span class="lblBaseCurrency"></span></td>
                    <td style="width:10%; text-align:right">Credit<span class="lblBaseCurrency"></span></td>
                </tr>
            </table>
        </div>
        <hr>
        <div id="divVoucherDetails" style="height:290px; width:100%; overflow:auto">
            <table id="tblVoucherDetail" border="0" cellpadding="0" cellspacing="0"></table>
        </div>
        <div style="width:100%">
            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tr>
                    <td style="width:80%; text-align:right; font-size:12px; font-weight:bold"></td>
                    <td colspan="2" style="width:20%; text-align:right; font-size:12px; font-weight:bold"><hr /></td>
                </tr>
                <tr>
                    <td style="width:80%; text-align:left; font-size:10px; font-weight:bold"></td>
                    <td style="width:10%; text-align:right; font-size:11px; font-weight:bold"><span class="lblBaseCurrency" style="margin-right:2px;"></span><label id="lblTotalDebitAmount">0.00</label></td>
                    <td style="width:10%; text-align:right; font-size:11px; font-weight:bold"><span class="lblBaseCurrency" style="margin-right:2px;"></span><label id="lblTotalCreditAmount"> 0.00</label>&nbsp;&nbsp;</td>
                </tr>
                <tr>
                    <td style="width:80%; text-align:right; font-size:12px; font-weight:bold"></td>
                    <td colspan="2" style="width:20%; text-align:right; font-size:12px; font-weight:bold"><hr /><hr /></td>
                </tr>
                <tr>
                    <td colspan="3" style="width:100%;font-size:12px; font-weight:bold; text-align:center">
                        <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                            <tr>
                                <td style="width:2%; text-align:right">
                                    <input type="button" id="btnLastNarration" style="height:40px; width:20px" />
                                </td>
                                <td style="width:98%;font-size:12px; font-weight:bold; text-align:center; vertical-align:top">
                                    <textarea rows="1" id="txtNarration" style="text-align:left; width:99%; font-family:Tahoma; font-size:12px" placeholder="Narration"></textarea>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr style="height:40px">
                    <td colspan="3" style="width:100%; text-align:right; font-size:12px; font-weight:bold">                        
                        <div style="width: 700px;margin: 0 auto;text-align: center;font-size: 24px;float: left;">
                            <label id="lblBatchCount" style="text-align:left;color:#00F;font-family:Tahoma;">Batch Count : 0</label>
                            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                            <label id="lblVoucherMode" style="text-align:center;color:#00F;font-family:Tahoma;"></label>
                        </div>
                        <a id="btnApproved" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="false">Approve</a>
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Cancel</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>    

    <div id="winAccountHead" class="easyui-window" title="Account Head" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:700px;height:300px;padding:1px">
        <div style="margin-left:0px; height:198px">
            <input type="text" id="txtSearchByAccountHeadName" style="width:674px" />
            <table id="tblAccountHead" title="" class="easyui-datagrid" style="width:680px;height:195px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                <thead>
                    <tr>
                        <th field="AccountCode" width="100">Account Code</th>
                        <th field="AccountHeadName" width="230">Account Head Name </th>
                        <th field="ParentHeadName" width="150">Category Name </th>
                        <th field="LedgerBalance" width="150" align="right">Current Balance</th>
                    </tr>
                </thead>
            </table>
            <table border="0" cellpadding="1" cellspacing="1">
                <tr style="height:35px;vertical-align:middle;">
                    <td style="width:556px"></td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnOkAccountHead">Ok</a> </td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" id="btnCloseAccountHead">Close</a> </td>
                </tr>
            </table>
        </div>
    </div>

    <div id="winCostCenterName" class="easyui-window" title="Cost Center Name" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:520px;height:280px;padding:1px">
        <div style="margin-left:0px; height:198px">
            <input type="text" id="txtSearchByCostCenterName" style="width:500px;" />
            <table id="tblCostCenterName" title="" class="easyui-datagrid" style="width:500px;height:180px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                <thead>
                    <tr>
                        <th field="Name" width="250">Cost Center Name</th>
                        <th field="CategoryName" width="105">Category</th>
                        <th field="CurrentBalance" width="100" align="right">Balance</th>
                    </tr>
                </thead>
            </table>
            <table border="0" cellpadding="1" cellspacing="1">
                <tr style="height:35px;vertical-align:middle;">
                    <td style="width:348px">
                        @*<input type="button" id="btnCreateNewCC" value="Create New Cost Center (+)" onclick="CreateCostCenter();" />*@
                    </td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnOkCostCenterName">Ok</a> </td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" id="btnCostCenterName">Close</a> </td>
                </tr>
            </table>
        </div>
    </div>

    <div id="winProduct" class="easyui-window" title="Product Name" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:470px;height:310px;padding:1px">
        <div style="margin-left:0px; height:198px">
            <input type="text" id="txtSearchByProductName" style="width:444px;" />
            <table id="tblProduct" title="" class="easyui-datagrid" style="width:450px;height:195px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                <thead>
                    <tr>
                        <th field="ProductCode" width="100"> Code </th>
                        <th field="ProductName" width="200"> Product Name </th>
                        <th field="ProductCategoryName" width="100"> Category Name </th>
                    </tr>
                </thead>
            </table>
            <table border="0" cellpadding="1" cellspacing="1">
                <tr style="height:35px;vertical-align:middle;">
                    <td style="width:314px"></td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnOkProduct">Ok</a> </td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" id="btnCloseProduct">Close</a> </td>
                </tr>
            </table>
        </div>
    </div>

    <div id="winWorkingUnit" class="easyui-window" title="Working Unit" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:400px;height:300px;padding:1px">
        <div style="margin-left:0px; height:198px">
            <input type="text" id="txtSearchByWorkingUnit" style="width:374px" />
            <table id="tblWorkingUnit" title="" class="easyui-datagrid" style="width:380px;height:195px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                <thead>
                    <tr>
                        <th field="OperationUnitName" width="150">Operation Unit Name </th>
                        <th field="LocationName" width="100">Location Name </th>
                    </tr>
                </thead>
            </table>
            <table border="0" cellpadding="1" cellspacing="1">
                <tr style="height:35px;vertical-align:middle;">
                    <td style="width:316px"></td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnOkWorkingUnit">Ok</a> </td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" id="btnCloseWorkingUnit">Close</a> </td>
                </tr>
            </table>
        </div>
    </div>

    <div id="winMUnit" class="easyui-window" title="Measurement Unit" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:400px;height:300px;padding:1px">
        <div style="margin-left:0px; height:198px">
            <input type="text" id="txtSearchByMUnit" style="width:374px" />
            <table id="tblMUnit" title="" class="easyui-datagrid" style="width:380px;height:195px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                <thead>
                    <tr>
                        <th field="UnitName" width="150">Unit Name </th>
                        <th field="Symbol" width="150">Symbol </th>
                    </tr>
                </thead>
            </table>
            <table border="0" cellpadding="1" cellspacing="1">
                <tr style="height:35px;vertical-align:middle;">
                    <td style="width:316px"></td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnOkMUnit">Ok</a> </td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" id="btnCloseMUnit">Close</a></td>
                </tr>
            </table>
        </div>
    </div>

    <div id="winTrType" class="easyui-window" title="Transaction Type" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:400px;height:300px;padding:1px">
        <div style="margin-left:0px; height:198px">
            <input type="text" id="txtSearchByTrType" style="width:374px" />
            <table id="tblTrType" title="" class="easyui-datagrid" style="width:380px;height:195px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                <thead>
                    <tr>
                        <th field="EnumValue" width="230">Value</th>
                    </tr>
                </thead>
            </table>
            <table border="0" cellpadding="1" cellspacing="1">
                <tr style="height:35px;vertical-align:middle;">
                    <td style="width:316px"></td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnOkTrType">Ok</a> </td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" id="btnCloseTrType">Close</a> </td>
                </tr>
            </table>
        </div>
    </div>
    
    <div id="winBillNo" class="easyui-window" title="Bill" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:950px;height:520px;padding:1px">
        <div style="margin-left:0px; height:400px">
            <table id="tblBillNo" title="" class="easyui-datagrid" style="width:933px;height:420px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarBill">
                <thead>
                    <tr>
                        <th field="BillNo" width="400" align="left">Bill No</th>
                        <th field="BillDateInString" width="90" align="center">Bill Date</th>
                        <th field="DueDateInString" width="90" align="center">Due Date</th>
                        <th data-options="field:'Amount',formatter:formatPrice" width="90" align="right" class="easyui-numberbox" data-options="min:0,precision:2">Amount</th>
                        <th field="RemainningBalanceCFormat" width="200" align="right">Remainning Balance</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarBill" style="width:100%">               
                <table border="0" cellspacing="1" cellpadding="1" style="font-size:11px; font-weight:bold; width:99%">
                    <tr>
                        <td style="width:10%; text-align:right">
                            Bill No :
                        </td>
                        <td style="width:15%">
                            <input type="text" style="width:100%;" id="txtVBSBillNo" />
                        </td>
                        <td style="width:10%; text-align:right">
                            Bill Date :
                        </td>
                        <td style="width:15%; font-size: 12px; text-align: left">
                            <input id="txtVBSBillDate" type="text" style="width: 100%;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                        <td style="width:10%; text-align:right; font-size: 12px">
                            Credit Days :
                        </td>
                        <td style="width:10%; text-align:left; font-size: 12px">
                            <input id="txtVBSCreditDays" style="width:100%;" />
                        </td>
                        <td style="width:15%; text-align:right; font-size: 12px">
                            Maturity Date :
                        </td>
                        <td style="width:15%; text-align:left; font-size: 12px">
                            <input id="txtVBSMaturityDate" type="text" style="width: 100%" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right">
                            Currency :
                        </td>
                        <td style="width:15%">
                            <select id="cboVBSCurrency" style="width:105%"></select>
                        </td>
                        <td style="width:10%; text-align:right">
                            C Amount :
                        </td>
                        <td style="width:15%; font-size: 12px; text-align: left">
                            <input id="txtVBSCurrencyAmount" style="width:95%" />
                        </td>
                        <td style="width:10%; text-align:right; font-size: 12px">
                            C Rate :
                        </td>
                        <td style="width:10%; text-align:left; font-size: 12px">
                            <input id="txtVBSCRate" style="width:100%" />
                        </td>
                        <td style="width:15%; text-align:right; font-size: 12px">
                            Amount(BDT) :
                        </td>
                        <td style="width:15%; text-align:left; font-size: 12px">
                            <input type="text" style="width:95%;" id="txtVBSAmountInBDT" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:10%; text-align:right">
                            Search(Bill No) :
                        </td>
                        <td style="width:15%">
                            <input type="text" id="txtSearchByBillNo" style="width:100%" />
                        </td>
                        <td style="width:10%; text-align:right">
                            Remarks :
                        </td>
                        <td colspan="4" style="width:50%; font-size: 12px; text-align: left">
                            <input type="text" style="width:99%;" id="txtVBSRemarks" />
                        </td>
                        <td style="width:15%; text-align:left; font-size: 12px">
                            <table border="0" cellpadding="0" cellspacing="0" style="width:100%">
                                <tr>
                                    <td style="width:50%; text-align:left">
                                        <input id="btnVBAdd" type="button" value="Add" style="width:100%; font-weight:bold; text-align:center" />
                                    </td>
                                    <td style="width:50%; text-align:right">
                                        <input id="btnVBRemove"  type="button" value="Remove" style="width:100%; font-weight:bold; text-align:center" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>                    
                </table>
            </div>
            <table border="0" cellpadding="1" cellspacing="1" style="width:100%">
                <tr style="height:35px;vertical-align:middle; text-align:right; width:100%">
                    <td style="width:70%; text-align:left">
                        <input type="button" id="btnCreateNewBill" value="Create New Bill (+)" onclick="CreateNewBill();" />
                        <input type="button" id="btnEditVoucherBill" value="Edit Bill" onclick="EditVoucherBill();" /> 
                    </td>
                    <td style="width:30%; text-align:right;">                        
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnOkBillNo">Ok</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" id="btnCloseBillNo">Close</a> 
                    </td>
                </tr>
            </table>
        </div>
    </div>

    <div id="winVoucherBill" class="easyui-window" title="Voucher Bill" style="width:540px;height:402px;padding:2px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div>
            <fieldset>
                <legend style="font-weight:bold"> Voucher Bill Info : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:170px; text-align:right">
                            Business Unit :
                        </td>
                        <td style="width:370px">
                            <input type="text" style="width: 370px;" id="txtVBBusinessUnit" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Account Head :
                        </td>
                        <td style="width:370px">
                            <input type="text" style="width: 370px;" id="txtVBAccountHead" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Sub Ledger :
                        </td>
                        <td style="width:370px">
                            <input type="text" style="width: 370px;" id="txtVBSubLedger" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Bill No :
                        </td>
                        <td style="width:370px">
                            <input type="text" style="width: 370px;" id="txtVBBillNo" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Bill Date :
                        </td>
                        <td style="width:370px">
                            <table border="0" cellpadding="0" cellspacing="0" style="font-size: 12px">
                                <tr>
                                    <td style="width: 140px; font-size: 12px; text-align: left">
                                        <input id="txtVBBillDate" type="text" style="width: 140px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    </td>
                                    <td style="width: 110px; text-align:right; font-size: 12px">
                                        Credit Days :
                                    </td>
                                    <td style="width: 120px; text-align:right; font-size: 12px">
                                        <input id="txtVBCreditDays" style="width:118px" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Maturity Date :
                        </td>
                        <td style="width:370px">
                            <table border="0" cellpadding="0" cellspacing="0" style="font-size: 12px">
                                <tr>
                                    <td style="width: 140px; font-size: 12px; text-align: left">
                                        <input id="txtVBMaturityDate" type="text" style="width: 140px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                    </td>
                                    <td style="width: 110px; text-align:right; font-size: 12px">
                                        Currency :
                                    </td>
                                    <td style="width: 120px; text-align:right; font-size: 12px">
                                        <select id="cboVBCurrency" style="width:123px"></select>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Currency Amount :
                        </td>
                        <td style="width:370px">
                            <table border="0" cellpadding="0" cellspacing="0" style="font-size: 12px">
                                <tr>
                                    <td style="width: 140px; font-size: 12px; text-align: left">
                                        <input id="txtVBCurrencyAmount" style="width:134px" />
                                    </td>
                                    <td style="width: 110px; text-align:right; font-size: 12px">
                                        C Rate :
                                    </td>
                                    <td style="width: 120px; text-align:right; font-size: 12px">
                                        <input id="txtVBCRate" style="width:118px" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Amount In BDT :
                        </td>
                        <td style="width:370px">
                            <input type="text" style="width: 368px;" id="txtVBAmountInBDT" />
                        </td>
                    </tr>
                    <tr>
                        <td style="width:170px; text-align:right">
                            Remarks :
                        </td>
                        <td style="width:370px">
                            <input type="text" style="width:368px;" id="txtVBRemarks" />
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <fieldset style="width:498px; vertical-align:top;">
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;">
                <tr>
                    <td style="width:100px;text-align:right"></td>
                    <td style="width:408px;text-align:right;">
                        <a id="btnVBSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnVBClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>

    <div id="winCurrency" class="easyui-window" title="Currency" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:400px;height:295px;padding:1px">
        <div style="margin-left:0px; height:160px">
            <fieldset>
                <legend style="font-weight: bold">Currency : </legend>
                <table id="tblCurrency" style="font-family:Tahoma;font-size:12px;">
                    <thead>
                        <tr>
                            <td>
                                <label style="margin-right: 14px;margin-left: 13px;">Currency Symbol :</label>
                                <input type="text" id="txtCurrencySymbol" style="width: 190px;" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label style="margin-right: 15px;margin-left: 59px;">Amount :</label>
                                <input type="text" id="txtCurrencyAmount" style="width: 190px;" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label style="margin: 15px;">Conversion Rate :</label>
                                <input type="text" id="txtConversionRate" style="width: 190px;" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label style="margin: 17px;">Amount in BDT :</label>
                                <input type="text" id="txtBaseCurrencyAmount" style="width: 190px;" />
                            </td>
                        </tr>
                    </thead>
                </table>
            </fieldset>
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellpadding="1" cellspacing="1">
                    <tr style="height:35px;vertical-align:middle;">
                        <td style="width:256px"></td>
                        <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnOkCurrency">Ok</a> </td>
                        <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" id="btnCloseCurrency">Close</a> </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winCheque" class="easyui-window" title="Received Cheque List" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:900px;height:400px;padding:1px">
        <div style="margin-left:0px; height:298px">
            <table id="tblCheque" class="easyui-datagrid" style="width:883px; height:295px" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbarCheque">
                <thead>
                    <tr>
                        <th field="ChequeNo" width="120" align="left">Cheque No</th>
                        <th field="ChequeDateSt" width="100" align="center">Cheque Date</th>
                        <th field="BankName" width="150" align="left">Bank Name</th>
                        <th field="BranchName" width="150" align="left">Branch Name</th>
                        <th field="AccountNo" width="150" align="left">Account Number</th>
                        <th field="ContractorName" width="180" align="left">Party Name</th>
                        <th data-options="field:'Amount',formatter:formatPrice" width="100" align="right" class="easyui-numberbox" data-options="min:0,precision:2">Amount</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarCheque">
                Cheque Type : <select id="cboChequeType"></select>
                <input type="text" id="txtChequeNo" style="width:100px" placeholder="Cheque No" />
                <input type="text" id="txtAccountNo" style="width:100px" placeholder="Account No" />
                <input type="text" id="txtBankName" style="width:100px" placeholder="Bank Name" />
                <input type="text" id="txtParty" style="width:100px" placeholder="Party Name" />
                <a id="btnRefreshCheque" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" title="Refresh" iconcls="icon-reload" plain="true">Refresh</a>
                <a id="btnAddCheque" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                <a id="btnEditCheque" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
                <a id="btnViewCheque" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
                <a id="btnDeleteCheque" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
            </div>
            <div style="width:885px; height:33px">
                <fieldset>
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellpadding="1" cellspacing="1">
                        <tr style="height:33px;vertical-align:middle;">
                            <td style="width:780px"> </td>
                            <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnOkCheque">Ok</a> </td>
                            <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" id="btnCloseCheque">Close</a> </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
    </div>

    <div id="winOrderRef" class="easyui-window" title="Order Ref" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:470px;height:310px;padding:1px">
        <div style="margin-left:0px; height:198px">
            <input type="text" id="txtSearchByOrderNo" style="width:444px;" />
            <table id="tblOrderRef" title="" class="easyui-datagrid" style="width:450px;height:195px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                <thead>
                    <tr>
                        <th field="RefNo" width="100"> Ref No</th>
                        <th field="VOrderRefTypeSt" width="100"> Ref Type </th>
                        <th field="OrderNo" width="100"> OrderNo </th>
                        <th field="OrderDateSt" width="100"> Order Date </th>
                        <th field="SubledgerName" width="200"> Subledger Name </th>
                    </tr>
                </thead>
            </table>
            <table border="0" cellpadding="1" cellspacing="1">
                <tr style="height:35px;vertical-align:middle;">
                    <td style="width:314px"></td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" id="btnOkOrderRef">Ok</a> </td>
                    <td style="width:60px; text-align:center"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" id="btnCloseOrderRef">Close</a> </td>
                </tr>
            </table>
        </div>
    </div>
</div>


<style type="text/css">
    .highlight {
        background-color: #CFB53B !important;
        color: white !important;
    }

    .textboxstyle {
        background-color: black !important;
        color: white !important;
        border: none !important;
        font-weight: bold !important;
    }

    .textboxstyle2 {
        background-color: #CFB53B !important;
        color: white !important;
        border: none !important;
    }

    .debitcreditclass {
        border: none !important;
    }

    .accountclass {
        border: none !important;
    }

    .narrationclass {
        border: none !important;
    }

    .currencyclass {
        border: none !important;
    }

    .vrdescriptionclass {
        border: none !important;
    }

    .vramountclass {
        border: none !important;
        text-align: right !important;
    }

    .debitclass {
        border: none !important;
        text-align: right !important;
    }

    .creditclass {
        border: none !important;
        text-align: right !important;
    }

    .tableclass tr td {
        background-color: white !important;
    }

    .tableclass tr:hover td {
        background-color: #CFB53B !important;
        color: white !important;
    }

    .ccnameclass, .ccdescriptionclass {
        border: none !important;
    }

    .ccamountclass {
        border: none !important;
        text-align: right !important;
    }

    .irProductClass, .irWorkingUnitClass, .irDateClass, .irMeasurementUnitClass {
        border: none !important;
    }

    .irQtyClass, .irUnitPriceClass {
        border: none !important;
        text-align: right !important;
    }

    .irAmountClass {
        border: none !important;
        text-align: right !important;
    }

    .btTrTypeClass, .btBillNoClass, .btBillDateClass {
        border: none !important;
    }

    .btBillAmountClass, .btAmountClass {
        border: none !important;
        text-align: right !important;
    }

    .chequenoclass, .chequedateclass, .banknameclass, .branchnameclass, .accountnoclass{
        border: none !important;
    }

    .chequeamountclass{
        border: none !important;
        text-align: right !important;
    }       

    .refnoclass, .ordernoclass, .orderremarksclass {
        border: none !important;
    }
    .orderamountclass {
        border: none !important;
        text-align: right !important;
    }        
</style>

<script type="text/javascript">
    var _oVoucher=null;
    var _oVDObjs=[];
    var _nInputBoxIndex=-1;
    var _sInputBoxClass='';
    var _totalDebitAmount = 0;
    var _totalCreditAmount = 0;
    var _accountHeadID=0;
    var _oAccountHeads = [];
    var _oProducts=[];
    var _oVOrders=[];
    var _oWorkingUnits=[];
    var _oMeasurementUnits=[];
    var _oTrTypes=[];
    var _oVoucherBills=[];    
    $(document).ready(function () {
        _oVoucher =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oCurrencys = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oCompany = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Company));
        var oVoucherTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.VoucherTypes));
        var oVoucherBatchs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.VoucherBatchs));
        var oTaxEffects = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.TaxEffects));
        var oBusinessUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oRunningAccountingYear = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.RunningAccountingYear));
        var oClientSetting =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ClientSetting));
        var oChequeTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ChequeTypes));

        $('#txtControlAmount').icsCurrencyBox();
        $('#divVoucher').data('Currencys', oCurrencys);
        $('#divVoucher').data('Company', oCompany);
        $('#cboVoucherType').data('VoucherTypes', oVoucherTypes);
        $('#divVoucher').data('TaxEffects', oTaxEffects);
        $('#divVoucher').data('VoucherBatchs', oVoucherBatchs);
        $('#cboBusinessUnit').data('BusinessUnits', oBusinessUnits);
        $('#divVoucher').data('RunningAccountingYear', oRunningAccountingYear);
        $('#divVoucher').data('ClientSetting', oClientSetting);
        $('#divVoucher').data('ChequeTypes', oChequeTypes);

        $(".lblBaseCurrency").html("("+_oVoucher.BaseCUSymbol+")");
        $("#txtCurrencyAmount").prop("disabled",true);
        InitializeEvent();
        RemakeGrid(_oVoucher.VDObjs);
        RefreshControl();
        RefreshSummery();
        LoadComboBoxes();
        DisabledVoucherNo(_oVoucher);
        $('#btnApproved').hide();

        $('#AppMainLayout').layout('collapse', 'west');        
        $('#AppMainLayout').layout('expand', 'west');
        $('#AppMainLayout').layout('collapse', 'west');

        var sVoucherHeader = sessionStorage.getItem("VoucherHeader");
        $("#lblVoucherMode").text(sVoucherHeader);
        var isDisabled = $('#txtVoucherNo').prop('disabled');        
        if(sVoucherHeader==="View Voucher" || sVoucherHeader==="Approved Voucher")
        {
            $("#divVoucherInfo :input").prop("disabled", true);
            $('#btnSave').hide();
        }
        
        if(sVoucherHeader==="Approved Voucher")
        {
            $('#btnApproved').show();
        }

        $('#txtVBCreditDays,#txtVBSCreditDays').icsCurrencyBox(null, null, 0);
        $('#txtVBCurrencyAmount,#txtVBSCurrencyAmount').icsCurrencyBox(null, null, 2);
        $('#txtVBCRate,#txtVBSCRate').icsCurrencyBox(null, null, 4);
        $('#txtVBAmountInBDT,#txtVBSAmountInBDT').icsCurrencyBox(null, null, 2);
    });

    $(document).on('keydown', function(event) {
        if (event.keyCode == 9) {   //tab
            event.preventDefault(); // stops tab's default action
        }
    });
    
    function LoadComboBoxes(){
        var oChequeTypes = $('#divVoucher').data('ChequeTypes');
        $("#cboChequeType").icsLoadCombo({
            List: oChequeTypes,
            OptionValue: "id",
            DisplayText: "Value"
        });
    }

    function RefreshControl()
    {
        RefreshComboBoxes();
        $('#txtVoucherNo').val(_oVoucher.VoucherNo);
        $('#cboVoucherType').val(_oVoucher.VoucherTypeID);
        $('#cboTex').val(_oVoucher.TaxEffectInt);
        $('#cboBusinessUnit').val(_oVoucher.BUID);
        $('#cboBatch').val(_oVoucher.BatchID);
        $('#txtControlAmount').val(parseFloat(_oVoucher.VoucherAmount).toFixed(2));
        $('#txtVoucherDate').datebox('setValue', _oVoucher.VoucherDateAsString);
        $("#txtPostingDate").val(_oVoucher.DBServerDateInString);
        $('#txtNarration').val(_oVoucher.Narration);
        if(parseInt(_oVoucher.VoucherTypeID) <=0)
        {
            $('#divVoucher').panel({ title: 'Voucher Type'});
        }
        else
        {
            $('#divVoucher').panel({ title:_oVoucher.VoucherName});
        }
        ChangeVoucherBatch();
        $('#txtControlAmount').focus();
    }

    function RefreshComboBoxes() {

        var oVoucherTypes=$('#cboVoucherType').data('VoucherTypes');
        var oTaxEffects =$('#divVoucher').data('TaxEffects');
        var oBusinessUnits = $('#cboBusinessUnit').data('BusinessUnits');
        var oVoucherBatchs= $('#divVoucher').data('VoucherBatchs');

        $("#cboVoucherType").icsLoadCombo({
            List: oVoucherTypes,
            OptionValue: "VoucherTypeID",
            DisplayText: "VoucherName"
        });

        $("#cboTex").icsLoadCombo({
            List: oTaxEffects,
            OptionValue: "id",
            DisplayText: "Value",
            InitialValue : "Custom"
        });
        $("#cboBusinessUnit").icsLoadCombo({
            List: oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "ShortNameCode",
            InitialValue : "Custom"
        });
        $("#cboBatch").icsLoadCombo({
            List: oVoucherBatchs,
            OptionValue: "VoucherBatchID",
            DisplayText: "BatchNO",
            InitialValue : "Custom"
        });
    }

    $('#cboBusinessUnit').change(function(){
        var nVoucherType =parseInt($("#cboVoucherType").val());
        var nBUID =parseInt($("#cboBusinessUnit").val());
        window.location.href =  sessionStorage.getItem('BaseAddress') +'/Voucher/ViewMultiCurrencyVoucher?buid='+parseInt(nBUID)+'&id=0&nvtid='+nVoucherType+'&copyid=0';
    });

    $('#cboVoucherType').change(function(){
        //Full Cheque Reload
        //var nVoucherType =parseInt($("#cboVoucherType").val());
        //var nBUID = parseInt($('#cboBusinessUnit').val());
        //if(nVoucherType>0)
        //{
        //    window.location.href =  sessionStorage.getItem('BaseAddress') +'/Voucher/ViewMultiCurrencyVoucher?buid='+parseInt(nBUID)+'&id=0&nvtid='+parseInt(nVoucherType)+'&copyid=0';
        //}

        //Don't use reload full voucher
        var oVoucher = {
            BUID : parseInt($('#cboBusinessUnit').val()),
            VoucherTypeID : parseInt($('#cboVoucherType').val()),
            VoucherDate : $('#txtVoucherDate').datebox('getValue')
        };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/Voucher/GetVoucherInfo",
            traditional: true,
            data:  JSON.stringify(oVoucher),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oVoucher = jQuery.parseJSON(data);
                var nVoucherTypeID = parseInt($('#cboVoucherType').val());
                if(nVoucherTypeID <=0)
                {
                    $('#divVoucher').panel({ title: 'Voucher Type'});
                }
                else
                {
                    $('#divVoucher').panel({ title: oVoucher.VoucherName});
                }
                $("#txtVoucherNo").val(oVoucher.VoucherNo);
                $('#txtVoucherDate').datebox('setValue', oVoucher.VoucherDateAsString);
                DisabledVoucherNo(oVoucher);
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $('#cboBatch').change(function(){        
        ChangeVoucherBatch();
    });


    function ChangeVoucherBatch()
    {
        var oVoucherBatch = {
            VoucherBatchID : parseInt($('#cboBatch').val())
        };
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/VoucherBatch/Get",
            traditional: true,
            data:  JSON.stringify(oVoucherBatch),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oVoucherBatch = jQuery.parseJSON(data);                
                if(oVoucherBatch.ErrorMessage == "" && parseInt(oVoucherBatch.VoucherBatchID)>0)
                {
                    $("#lblBatchCount").text('Batch Count : '+oVoucherBatch.VoucherCount);
                    
                }
                else
                {
                    $("#lblBatchCount").text('Batch Count : 0');
                }                
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function DisabledVoucherNo(oVoucher)
    {
        if(parseInt(_oVoucher.VoucherID) > 0)
        {
            if(parseInt(oVoucher.NumberMethodInInt) == 2)
            {
                $("#txtVoucherNo").prop("disabled",true);
            }
        }
        else
        {
            $("#txtVoucherNo").prop("disabled",false);
        }
    }

    function CreateCostCenter()
    {
        var tsv=((new Date()).getTime())/1000;
        var oParameter = new Object();
        oParameter.Name = "Add Cost Center";
        var url =sessionStorage.getItem('BaseAddress')+ "/ACCostCenter/ViewCostCenter?id=0&cct=1&ts="+tsv;
        var oACCostCenter = window.showModalDialog(url, oParameter, 'dialogHeight:245px;dialogWidth:450px;dialogLeft:400;dialogTop:150;center:yes;resizable:no;status:no;scroll:no');
        if(oACCostCenter.ACCostCenterID > 0)
        {
            var index = $('#tblCostCenterName').datagrid('getRows').length;
            $('#tblCostCenterName').datagrid('appendRow',oACCostCenter);
            $('#tblCostCenterName').datagrid('selectRow',index);
        }
    }

    //Start Voucher Bill
    function RefreshVBComboBoxControls()
    {
        var oCurrencys = $('#divVoucher').data('Currencys');
        $("#cboVBCurrency").icsLoadCombo({ List: oCurrencys, OptionValue: "CurrencyID", DisplayText: "NameSymbol", InitialValue : "Custom" });
    }

    function RefreshVBControls(oVoucherBill)
    {
        $('#winVoucherBill').data('VoucherBill', oVoucherBill);
        $('#txtVBBusinessUnit').val(oVoucherBill.BUName);
        $('#txtVBAccountHead').val(oVoucherBill.AccountHeadName);
        $('#txtVBSubLedger').val(oVoucherBill.SubLedgerName);
        $('#txtVBBillNo').val(oVoucherBill.BillNo);
        $('#txtVBBillDate').datebox('setValue', oVoucherBill.BillDateInString);
        $('#txtVBCreditDays').val(oVoucherBill.CreditDays);
        $('#txtVBMaturityDate').datebox('setValue', oVoucherBill.DueDateInString);
        $('#cboVBCurrency').val(oVoucherBill.CurrencyID);
        $('#txtVBCurrencyAmount').val(formatPrice(oVoucherBill.CurrencyAmount));
        $('#txtVBCRate').val(formatPrice4digit(oVoucherBill.CurrencyRate));
        $('#txtVBAmountInBDT').val(formatPrice(oVoucherBill.Amount));
        $('#txtVBRemarks').val(oVoucherBill.Remarks);

        $('#txtVBBusinessUnit').prop("disabled", true);
        $('#txtVBAccountHead').prop("disabled", true);
        $('#txtVBSubLedger').prop("disabled", true);
        $('#txtVBCRate').prop("disabled", true);
        $('#txtVBAmountInBDT').prop("disabled", true);
        ChnageCurrency();
        $('#txtVBBillNo').focus();
    }

    function CalculateCreditDays(date){
        var dBillDate=new Date($('#txtVBBillDate').datebox('getValue'));
        var dMaturityDate=new Date($('#txtVBMaturityDate').datebox('getValue'));
        var nCreditDays= Math.floor((dMaturityDate - dBillDate) / (1000*60*60*24));
        if(nCreditDays<0){
            nCreditDays=0;
            $('#txtVBMaturityDate').datebox('setValue', icsdateformat(dBillDate));
        }
        $('#txtVBCreditDays').val(nCreditDays);
    }

    function VBValidateInput()
    {
        var oVoucherBill = $('#winVoucherBill').data('VoucherBill');
        if(oVoucherBill === null || parseInt(oVoucherBill.BUID) === 0)
        {
            alert("Invalid Business Unit!");
            return false;
        }

        if(oVoucherBill === null || parseInt(oVoucherBill.AccountHeadID) === 0)
        {
            alert("Invalid Account Head!");
            return false;
        }
        if($.trim($('#txtVBBillNo').val()) === null || $.trim($('#txtVBBillNo').val())=== "")
        {
            alert("Please Enter Bill No!");
            $('#txtVBBillNo').focus();
            return false;
        }

        var sBillDate = $('#txtVBBillDate').datebox('getValue');
        if(sBillDate === null || sBillDate === "")
        {
            alert("Please Select Bill Date");
            $('#txtVBBillDate').focus();
            return false;
        }

        var sDueDate =  $('#txtVBMaturityDate').datebox('getValue');
        if(sDueDate === null || sDueDate === "")
        {
            alert("Please Select Maturity Date");
            $('#txtVBMaturityDate').focus();
            return false;
        }

        var nCurrencyAmount = parseFloat(icsRemoveComma($("#txtVBCurrencyAmount").val()));
        if(nCurrencyAmount <= 0)
        {
            alert("Please Enter Currency Amount");
            $('#txtVBCurrencyAmount').focus();
            return false;
        }

        var nCRate = parseFloat(icsRemoveComma($("#txtVBCRate").val()));
        if(nCRate <= 0)
        {
            alert("Please Enter Currency Conversion Rate!");
            $('#txtVBCRate').focus();
            return false;
        }

        var nAmountInBDT = parseFloat(icsRemoveComma($("#txtVBAmountInBDT").val()));
        if(nAmountInBDT <= 0)
        {
            alert("Please Enter Currency Amount");
            $('#txtVBAmountInBDT').focus();
            return false;
        }

        var dSalesDate=new Date(sBillDate);
        var dMaturity=new Date(sDueDate);
        if(dMaturity.getTime() ===dSalesDate.getTime()){
            if(!confirm('Maturity Date: '+sDueDate+' and Bill Date: '+sBillDate+', is same.\nConfirm to Save?')){return false;}
        }

        return true;
    }

    function VBResreshObject()
    {
        var oTempVoucherBill = $('#winVoucherBill').data('VoucherBill');
        var oVoucherBill =  {
            VoucherBillID : parseInt(oTempVoucherBill.VoucherBillID),
            AccountHeadID : parseInt(oTempVoucherBill.AccountHeadID),
            SubLedgerID : parseInt(oTempVoucherBill.SubLedgerID),
            ReferenceType : parseInt(oTempVoucherBill.ReferenceTypeInInt),
            ReferenceTypeInInt : parseInt(oTempVoucherBill.ReferenceTypeInInt),
            ReferenceObjID : parseInt(oTempVoucherBill.ReferenceObjID),
            BUID : parseInt(oTempVoucherBill.BUID),
            BillNo : $.trim($('#txtVBBillNo').val()),
            CreditDays : parseFloat(icsRemoveComma($("#txtVBCreditDays").val())),
            BillDate : $('#txtVBBillDate').datebox('getValue'),
            DueDate : $('#txtVBMaturityDate').datebox('getValue'),
            TrTypeInInt : parseInt(oTempVoucherBill.TrTypeInInt),
            CurrencyID : parseInt($('#cboVBCurrency').val()),
            CurrencyRate : parseFloat(icsRemoveComma($("#txtVBCRate").val())),
            CurrencyAmount : parseFloat(icsRemoveComma($("#txtVBCurrencyAmount").val())),
            Amount : parseFloat(icsRemoveComma($("#txtVBAmountInBDT").val())),
            Remarks : $.trim($('#txtVBRemarks').val()),
            OpeningBillAmount : parseFloat(oTempVoucherBill.OpeningBillAmount),
            OpeningBillDateInString : oTempVoucherBill.OpeningBillDateInString
        };
        return oVoucherBill;
    }

    $("#btnVBSave").click(function(){
        if(!VBValidateInput()) return;
        var oVoucherBill = VBResreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/VoucherBill/Save",
            traditional: true,
            data:  JSON.stringify(oVoucherBill),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oVoucherBill = jQuery.parseJSON(data);
                if (oVoucherBill.VoucherBillID>0) {
                    alert("Data Saved sucessfully");
                    var  sOperation = $('#winVoucherBill').data('VoucherBillOperation');
                    if(sOperation==='Add Voucher Bill')
                    {
                        var index = $('#tblBillNo').datagrid('getRows').length;
                        $('#tblBillNo').datagrid('appendRow',oVoucherBill);
                        $('#tblBillNo').datagrid('selectRow',index);
                        $("#winVoucherBill").icsWindow('close');
                    }
                    else
                    {
                        var index = $('#winVoucherBill').data('SelectedRowIndex');
                        $('#tblBillNo').datagrid('updateRow',{ index: index, row: oVoucherBill });
                        $('#tblBillNo').datagrid('selectRow',index);
                        $("#winVoucherBill").icsWindow('close');
                    }
                }
                else {
                    alert(oVoucherBill.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $('#txtVBCreditDays').keyup(function(e){
        var nDays=parseInt($(this).val());
        var sSalesDate=$('#txtVBBillDate').datebox('getValue');
        var dBillDate=new Date(sSalesDate);
        var dMaturityDate=dBillDate;
        dMaturityDate.setDate(dMaturityDate.getDate()+nDays);
        $('#txtVBMaturityDate').datebox('setValue', icsdateformat(dMaturityDate));
    });

    $('#txtVBMaturityDate,#txtVBBillDate').datebox({
        onSelect: function(date){
            CalculateCreditDays();
        }
    });

    $('#cboVBCurrency').change(function(){
        ChnageCurrency();
    });

    function ChnageCurrency()
    {
        var nCurrencyID =  $("#cboVBCurrency").val();
        if(nCurrencyID == 1)
        {
            $("#txtVBCRate").prop("disabled",true);
            $("#txtVBCRate").val(1.00);
            var nCurrencyAmount = parseFloat(icsRemoveComma($('#txtVBCurrencyAmount').val()));
            $('#txtVBAmountInBDT').val(icsFormatPrice(parseFloat(nCurrencyAmount.toFixed(2))));
        }
        else
        {
            $("#txtVBCRate").prop("disabled",false);
            $("#txtVBCRate").val(0.00);
            var amountInBDT = icsRemoveComma($("#txtVBAmountInBDT").val());
            var nGivenAmount = icsRemoveComma($('#txtVBCurrencyAmount').val());
            var nCRate = parseFloat(amountInBDT) / parseFloat(nGivenAmount);
            if(isNaN(nCRate))
            {
                nCRate = 0;
            }
            nCRate = (parseFloat(nCRate)*1000)/1000;
            $('#txtVBCRate').val(formatPrice4digit(nCRate));
        }
    }

    $("#txtVBCRate").keyup(function (e){
        var nConversionRate =  $(this).val();
        var nCurrencyAmount = icsRemoveComma($("#txtVBCurrencyAmount").val());
        var nAmountInBDT = parseFloat(nCurrencyAmount) * parseFloat(nConversionRate);
        nAmountInBDT = Math.round(parseFloat(nAmountInBDT)*1000) / 1000;
        if(isNaN(nAmountInBDT))
        {
            nAmountInBDT = 0;
        }
        $('#txtVBAmountInBDT').val(icsFormatPrice(parseFloat(nAmountInBDT.toFixed(2))));
    });

    $("#txtVBCurrencyAmount").keyup(function (e){
        var nCurrencyAmount =  parseFloat(icsRemoveComma($("#txtVBCurrencyAmount").val()));
        var nConversionRate = parseFloat(icsRemoveComma($("#txtVBCRate").val()));
        var nAmountInBDT = parseFloat(nCurrencyAmount) * parseFloat(nConversionRate);
        nAmountInBDT = Math.round(parseFloat(nAmountInBDT)*1000) / 1000;
        if(isNaN(nAmountInBDT))
        {
            nAmountInBDT = 0;
        }
        $('#txtVBAmountInBDT').val(icsFormatPrice(parseFloat(nAmountInBDT.toFixed(2))));
    });

    $('#btnVBClose').click(function(){
        $("#winVoucherBill").icsWindow('close');
    });
    //End Voucher Bill

    //Start VBS Voucher Bill
    function RefreshVBSComboBoxControls()
    {
        var oCurrencys = $('#divVoucher').data('Currencys');
        $("#cboVBSCurrency").icsLoadCombo({ List: oCurrencys, OptionValue: "CurrencyID", DisplayText: "NameSymbol", InitialValue : "Custom" });
    }

    function RefreshVBSControls(oVoucherBill)
    {
        $('#winBillNo').data('VoucherBill', oVoucherBill);
        $('#txtVBSBillNo').val(oVoucherBill.BillNo);
        $('#txtVBSBillDate').datebox('setValue', oVoucherBill.BillDateInString);
        $('#txtVBSCreditDays').val(oVoucherBill.CreditDays);
        $('#txtVBSMaturityDate').datebox('setValue', oVoucherBill.DueDateInString);
        $('#cboVBSCurrency').val(oVoucherBill.CurrencyID);
        $('#txtVBSCurrencyAmount').val(formatPrice(oVoucherBill.CurrencyAmount));
        $('#txtVBSCRate').val(formatPrice4digit(oVoucherBill.CurrencyRate));
        $('#txtVBSAmountInBDT').val(formatPrice(oVoucherBill.Amount));
        $('#txtVBSRemarks').val(oVoucherBill.Remarks);

        $('#txtVBSCRate').prop("disabled", true);
        $('#txtVBSAmountInBDT').prop("disabled", true);
        VBSChnageCurrency();     
        $('#txtVBSBillNo').focus();
    }

    function VBSCalculateCreditDays(date){
        var dBillDate=new Date($('#txtVBSBillDate').datebox('getValue'));
        var dMaturityDate=new Date($('#txtVBSMaturityDate').datebox('getValue'));
        var nCreditDays= Math.floor((dMaturityDate - dBillDate) / (1000*60*60*24));
        if(nCreditDays<0){
            nCreditDays=0;
            $('#txtVBSMaturityDate').datebox('setValue', icsdateformat(dBillDate));
        }
        $('#txtVBSCreditDays').val(nCreditDays);
    }

    function VBSValidateInput()
    {
        var oVoucherBill = $('#winBillNo').data('VoucherBill');
        if(oVoucherBill === null || parseInt(oVoucherBill.BUID) === 0)
        {
            alert("Invalid Business Unit!");
            return false;
        }

        if(oVoucherBill === null || parseInt(oVoucherBill.AccountHeadID) === 0)
        {
            alert("Invalid Account Head!");
            return false;
        }
        if($.trim($('#txtVBSBillNo').val()) === null || $.trim($('#txtVBSBillNo').val())=== "")
        {
            alert("Please Enter Bill No!");
            $('#txtVBSBillNo').focus();
            return false;
        }

        var sBillDate = $('#txtVBSBillDate').datebox('getValue');
        if(sBillDate === null || sBillDate === "")
        {
            alert("Please Select Bill Date");
            $('#txtVBBillDate').focus();
            return false;
        }

        var sDueDate =  $('#txtVBSMaturityDate').datebox('getValue');
        if(sDueDate === null || sDueDate === "")
        {
            alert("Please Select Maturity Date");
            $('#txtVBSMaturityDate').focus();
            return false;
        }

        var nCurrencyAmount = parseFloat(icsRemoveComma($("#txtVBSCurrencyAmount").val()));
        if(nCurrencyAmount <= 0)
        {
            alert("Please Enter Currency Amount");
            $('#txtVBSCurrencyAmount').focus();
            return false;
        }

        var nCRate = parseFloat(icsRemoveComma($("#txtVBSCRate").val()));
        if(nCRate <= 0)
        {
            alert("Please Enter Currency Conversion Rate!");
            $('#txtVBSCRate').focus();
            return false;
        }

        var nAmountInBDT = parseFloat(icsRemoveComma($("#txtVBSAmountInBDT").val()));
        if(nAmountInBDT <= 0)
        {
            alert("Please Enter Currency Amount");
            $('#txtVBSAmountInBDT').focus();
            return false;
        }

        var dSalesDate=new Date(sBillDate);
        var dMaturity=new Date(sDueDate);
        if(dMaturity.getTime() ===dSalesDate.getTime()){
            if(!confirm('Maturity Date: '+sDueDate+' and Bill Date: '+sBillDate+', is same.\nConfirm to Save?')){return false;}
        }

        return true;
    }

    function VBSResreshObject()
    {
        var oTempVoucherBill = $('#winBillNo').data('VoucherBill');
        var oVoucherBill =  {
            VoucherBillID : parseInt(oTempVoucherBill.VoucherBillID),
            AccountHeadID : parseInt(oTempVoucherBill.AccountHeadID),
            SubLedgerID : parseInt(oTempVoucherBill.SubLedgerID),
            BUID : parseInt(oTempVoucherBill.BUID),
            BillNo : $.trim($('#txtVBSBillNo').val()),
            CreditDays : parseFloat(icsRemoveComma($("#txtVBSCreditDays").val())),
            BillDate : $('#txtVBSBillDate').datebox('getValue'),
            DueDate : $('#txtVBSMaturityDate').datebox('getValue'),
            TrTypeInInt : parseInt(oTempVoucherBill.TrTypeInInt),
            CurrencyID : parseInt($('#cboVBSCurrency').val()),
            CurrencyRate : parseFloat(icsRemoveComma($("#txtVBSCRate").val())),
            CurrencyAmount : parseFloat(icsRemoveComma($("#txtVBSCurrencyAmount").val())),
            Amount : parseFloat(icsRemoveComma($("#txtVBSAmountInBDT").val())),
            Remarks : $.trim($('#txtVBSRemarks').val()),
            OpeningBillAmount : parseFloat(oTempVoucherBill.OpeningBillAmount),
            OpeningBillDateInString : oTempVoucherBill.OpeningBillDateInString
        };
        return oVoucherBill;
    }

    $("#btnVBAdd").click(function(){
        if(!VBSValidateInput()) return;
        var oVoucherBill = VBSResreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/VoucherBill/Save",
            traditional: true,
            data:  JSON.stringify(oVoucherBill),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oVoucherBill = jQuery.parseJSON(data);
                if (oVoucherBill.VoucherBillID>0) {
                    alert("Data Saved sucessfully");
                    var index = $('#tblBillNo').datagrid('getRows').length;
                    $('#tblBillNo').datagrid('appendRow',oVoucherBill);
                    $('#tblBillNo').datagrid('selectRow',index);
                    var oTempVoucherBill = $('#winBillNo').data('VoucherBill');
                    RefreshVBSControls(oTempVoucherBill);
                    $('#txtVBBillNo').focus();
                }
                else {
                    alert(oVoucherBill.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $("#btnVBRemove").click(function(){
        var oVoucherBill= $('#tblBillNo').datagrid('getSelected');
        if(oVoucherBill==null || parseInt(oVoucherBill.VoucherBillID)<=0)
        {
            alert("Please select an item from list!");
            return;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblBillNo').datagrid('getRowIndex',oVoucherBill);
        if (oVoucherBill.VoucherBillID > 0)
        {
            $.ajax
            ({
                type: "GET",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+  "/VoucherBill/Delete",
                data: { id: oVoucherBill.VoucherBillID },
                contentType: "application/json; charset=utf-8",
                success: function (data) {

                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Delete Successful")
                    {
                        alert("Data Delete Successfully");
                        $('#tblBillNo').datagrid('deleteRow',SelectedRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    });

    $('#txtVBSCreditDays').keyup(function(e){
        var nDays=parseInt($(this).val());
        var sSalesDate=$('#txtVBSBillDate').datebox('getValue');
        var dBillDate=new Date(sSalesDate);
        var dMaturityDate=dBillDate;
        dMaturityDate.setDate(dMaturityDate.getDate()+nDays);
        $('#txtVBSMaturityDate').datebox('setValue', icsdateformat(dMaturityDate));
    });

    $('#txtVBSMaturityDate,#txtVBSBillDate').datebox({
        onSelect: function(date){
            VBSCalculateCreditDays();
        }
    });

    $('#cboVBSCurrency').change(function(){
        VBSChnageCurrency();
    });

    function VBSChnageCurrency()
    {
        var nCurrencyID =  $("#cboVBSCurrency").val();
        if(nCurrencyID == 1)
        {
            $("#txtVBSCRate").prop("disabled",true);
            $("#txtVBSCRate").val(1.00);
            var nCurrencyAmount = parseFloat(icsRemoveComma($('#txtVBSCurrencyAmount').val()));
            $('#txtVBSAmountInBDT').val(icsFormatPrice(parseFloat(nCurrencyAmount.toFixed(2))));
        }
        else
        {
            $("#txtVBSCRate").prop("disabled",false);
            $("#txtVBSCRate").val(0.00);
            var amountInBDT = icsRemoveComma($("#txtVBSAmountInBDT").val());
            var nGivenAmount = icsRemoveComma($('#txtVBSCurrencyAmount').val());
            var nCRate = parseFloat(amountInBDT) / parseFloat(nGivenAmount);
            if(isNaN(nCRate))
            {
                nCRate = 0;
            }
            nCRate = (parseFloat(nCRate)*1000)/1000;
            $('#txtVBSCRate').val(formatPrice4digit(nCRate));
        }
    }

    $("#txtVBSCRate").keyup(function (e){
        var nConversionRate =  $(this).val();
        var nCurrencyAmount = icsRemoveComma($("#txtVBSCurrencyAmount").val());
        var nAmountInBDT = parseFloat(nCurrencyAmount) * parseFloat(nConversionRate);
        nAmountInBDT = Math.round(parseFloat(nAmountInBDT)*1000) / 1000;
        if(isNaN(nAmountInBDT))
        {
            nAmountInBDT = 0;
        }
        $('#txtVBSAmountInBDT').val(icsFormatPrice(parseFloat(nAmountInBDT.toFixed(2))));
    });

    $("#txtVBSCurrencyAmount").keyup(function (e){
        var nCurrencyAmount =  parseFloat(icsRemoveComma($("#txtVBSCurrencyAmount").val()));
        var nConversionRate = parseFloat(icsRemoveComma($("#txtVBSCRate").val()));
        var nAmountInBDT = parseFloat(nCurrencyAmount) * parseFloat(nConversionRate);
        nAmountInBDT = Math.round(parseFloat(nAmountInBDT)*1000) / 1000;
        if(isNaN(nAmountInBDT))
        {
            nAmountInBDT = 0;
        }
        $('#txtVBSAmountInBDT').val(icsFormatPrice(parseFloat(nAmountInBDT.toFixed(2))));
    });
    //End VBS Voucher Bill

    function CreateNewBill()
    {
        var sBillNo = "";
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        var oBillObj=$("#tblVoucherDetail").data('rows')[nRowIndex];
        var nBTTypeInt = oBillObj.TrTypeInt;
        if(parseInt(nBTTypeInt) == 3)
        {
            sBillNo = $("#txtVoucherNo").val();
        }
        var nSuggestedAmount = 0;
        if(parseInt(nBTTypeInt) == 1 || parseInt(nBTTypeInt)==3){
            nSuggestedAmount = $('#tblVoucherDetail tr').eq(nRowIndex).find('.btAmountClass').val();
        }

        var sBillDate = $('#txtVoucherDate').datebox('getValue');
        var dBillDate=new Date(sBillDate);
        var dMaturityDate=dBillDate;
        dMaturityDate.setDate(dMaturityDate.getDate()+30);

        var nBUID = parseInt($('#cboBusinessUnit').val());
        var oBusinessUnit = { BusinessUnitID: 0, Code :"", Name: "", ShortName : "" };
        var oBusinessUnits  = $('#cboBusinessUnit').data('BusinessUnits');
        var oTempBusinessUnit = ICS_FindObject(oBusinessUnits, 'BusinessUnitID', nBUID);
        if(oTempBusinessUnit != null)
        {
            oBusinessUnit.BusinessUnitID = parseInt(oTempBusinessUnit.BusinessUnitID);
            oBusinessUnit.Code = oTempBusinessUnit.Code;
            oBusinessUnit.Name = oTempBusinessUnit.Name;
            oBusinessUnit.ShortName = oTempBusinessUnit.ShortName;
        }

        var nCurrencyRate = parseFloat(oBillObj.CRate);
        var nCurrencyAmount = parseFloat(RemoveComma(nSuggestedAmount));
        var nAmount = parseFloat((nCurrencyRate * nCurrencyAmount).toFixed(2));

        var oVoucherBill =  {
            VoucherBillID : 0,
            AccountHeadID : parseInt(oBillObj.AHID),
            SubLedgerID : parseInt(oBillObj.CCID),
            BUID : parseInt($('#cboBusinessUnit').val()),
            BillNo : sBillNo,
            CreditDays : 30,
            BillDate : $('#txtVoucherDate').datebox('getValue'),
            BillDateInString : $('#txtVoucherDate').datebox('getValue'),
            DueDate : icsdateformat(dMaturityDate),
            DueDateInString : icsdateformat(dMaturityDate),
            TrTypeInInt : nBTTypeInt,
            CurrencyID : parseInt(oBillObj.CID),
            CurrencyRate : parseFloat(nCurrencyRate),
            CurrencyAmount : parseFloat(nCurrencyAmount),
            Amount : parseFloat(nAmount),
            AccountHeadName : oBillObj.AHName,
            SubLedgerCode : oBillObj.CCCode,
            SubLedgerName : oBillObj.CCName,
            BUCode : oBusinessUnit.Code,
            BUName : oBusinessUnit.Name,
            BUShortName : oBusinessUnit.ShortName,
            Remarks : 'N/A',
            OpeningBillAmount : 0,
            OpeningBillDateInString : $('#txtVoucherDate').datebox('getValue')
        };

        RefreshVBComboBoxControls();
        RefreshVBControls(oVoucherBill);
        $('#winVoucherBill').data('SelectedRowIndex', 0);
        $('#winVoucherBill').data('VoucherBillOperation', 'Add Voucher Bill');
        $("#winVoucherBill").icsWindow('open', "Add Voucher Bill");
    }

    function EditVoucherBill()
    {
        var oVoucherBill = $('#tblBillNo').datagrid('getSelected');
        if(oVoucherBill == null || parseInt(oVoucherBill.VoucherBillID)<=0)
        {
            alert("Please select a Bill!");
            return;
        }
        var nSelectedRowIndex=$('#tblBillNo').datagrid('getRowIndex',oVoucherBill);

        RefreshVBComboBoxControls();
        RefreshVBControls(oVoucherBill);
        $('#winVoucherBill').data('VoucherBillOperation', 'Edit Voucher Bill');
        $('#winVoucherBill').data('SelectedRowIndex', nSelectedRowIndex);
        $("#winVoucherBill").icsWindow('open', "Edit Voucher Bill");
    }

    function SelectBill()
    {
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        var oSelectedBill= $('#tblBillNo').datagrid('getSelected');
        if(oSelectedBill == null || parseInt(oSelectedBill.VoucherBillID)<=0)
        {
            alert("Please select a Bill No !");
            return;
        }

        var nCRate = 0;
        var nCID = 0;
        for(var i=nRowIndex;i>=0;i--)
        {
            var sDR_CR =  $("#tblVoucherDetail").data('rows')[i].DR_CR;
            if(sDR_CR == "Debit" || sDR_CR == "Credit")
            {
                nCRate = $("#tblVoucherDetail").data('rows')[i].CRate;
                nCID = $("#tblVoucherDetail").data('rows')[i].CID;
                break;
            }
        }

        var txtbtAmountClassVal = $('#tblVoucherDetail tr').eq(nRowIndex).find('.btAmountClass').val();
        txtbtAmountClassVal = parseFloat(RemoveComma(txtbtAmountClassVal));
        var nRemainningBalance = parseFloat(oSelectedBill.RemainningBalance) / parseFloat(nCRate);
        nRemainningBalance = parseFloat(nRemainningBalance.toFixed(2));

        if(parseInt(oSelectedBill.CurrencyID) != parseInt(nCID))
        {
            alert("Sorry, Currency is not match with Account Head's Currency");
            return false;
        }
        var nTrTypeInt= parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt);
        if(nTrTypeInt==1 || nTrTypeInt==3)
        {
            if(parseFloat(txtbtAmountClassVal) < parseFloat(nRemainningBalance))
            {
                alert("Sorry, Remainning Balance for This Account Head is " + parseFloat(txtbtAmountClassVal));
                return false;
            }
        }

        var bIsDr = true;
        for(var i=nRowIndex;i>=0;i--)
        {
            var sDR_CR =  $("#tblVoucherDetail").data('rows')[i].DR_CR;
            if(sDR_CR == "Debit" || sDR_CR == "Credit")
            {
                bIsDr = $("#tblVoucherDetail").data('rows')[i].IsDr;
                break;
            }
        }

        var nTrTypeInt = nTrTypeInt = $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt;
        if(nTrTypeInt != 1 && nTrTypeInt !=3 )
        {
            if(bIsDr == oSelectedBill.IsDebit)
            {
                var sBillDrCr = (oSelectedBill.IsDebit == true ? "Debit" : "Credit");
                alert("Sorry, Your Selected Bill AND Account Head Both Are " + sBillDrCr);
                return false;
            }
        }

        var configType = "Bill";
        if(parseInt(nTrTypeInt)===5)
        {
            configType = "SL Bill";
        }
        var result = CheckDuplicateOrNot(oSelectedBill.VoucherBillID,configType);
        if(result == "Duplicate")
        {
            alert("Sorry, Can't take same Bill for one debit or credit.");
            return false;
        }

        var nDrCrAmount = 0;
        var nCRate = 0;
        var sCSymbol = "";
        var sDrCr = "";

        for(var i=nRowIndex;i>=0;i--)
        {
            if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit" || $("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
            {
                nDrCrAmount = $("#tblVoucherDetail").data('rows')[i].Amount;
                nCRate = $("#tblVoucherDetail").data('rows')[i].CRate;
                sCSymbol = $("#tblVoucherDetail").data('rows')[i].CSymbol;
                sDrCr = $("#tblVoucherDetail").data('rows')[i].DR_CR;
                break;
            }
        }

        var nTrTypeInt = $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt;
        if(parseInt(nTrTypeInt) == 1 || parseInt(nTrTypeInt) == 3)
        {
            var nPikerBillCAmount = 0;
            if(parseFloat(parseFloat(oSelectedBill.Amount).toFixed(2)) > parseFloat(parseFloat(nDrCrAmount).toFixed(2)))
            {
                alert("Sorry, Your Selected Bill Amount is " + _oVoucher.BaseCUSymbol + " " + oSelectedBill.Amount + " but total amount of this " + sDrCr + " is " + _oVoucher.BaseCUSymbol + " " + nDrCrAmount);
                return false;
            }
        }
        $('#winBillNo').window('close');

        var oBillNo = $('#tblVoucherDetail tr').eq(nRowIndex).find('.btBillNoClass');
        $(oBillNo).val(oSelectedBill.BillNo);
        $(oBillNo).removeClass("textboxstyle");
        $(oBillNo).addClass("highlight");
        $(oBillNo).addClass("textboxstyle2");
        var nInputBoxIndex = $(".btBillNoClass").index(oBillNo);
        var index = $('.btBillNoClass').index(oBillNo);
        $('.btBillDateClass').eq(index).text(oSelectedBill.BillDateInString);
        //$('.btBillAmountClass').eq(index).text(oSelectedBill.CurrencySymbol + " "+  formatPrice(oSelectedBill.CurrencyAmount,null));
        ResetAllInputBox(nInputBoxIndex, '.btAmountClass');
        $("#tblVoucherDetail").data('rows')[nRowIndex].BillNo=oSelectedBill.BillNo;

        var nBillCAmount = parseFloat((oSelectedBill.RemainningBalance).toFixed(2));

        $("#tblVoucherDetail").data('rows')[nRowIndex].Amount = parseFloat(nBillCAmount);
        $("#tblVoucherDetail").data('rows')[nRowIndex].BillDateStr = oSelectedBill.BillDateInString;
        $("#tblVoucherDetail").data('rows')[nRowIndex].BillID = oSelectedBill.VoucherBillID;
        $("#tblVoucherDetail").data('rows')[nRowIndex].CSymbol = oSelectedBill.CurrencySymbol;

        var nCRate = 0;
        var sDR_CR = "";
        for(var i=nRowIndex;i>=0;i--)
        {
            sDR_CR =  $("#tblVoucherDetail").data('rows')[i].DR_CR;
            if(sDR_CR == "Debit" || sDR_CR == "Credit")
            {
                nCRate = $("#tblVoucherDetail").data('rows')[i].CRate;
                break;
            }
        }


        var txtbtBillAmountClass = $('#tblVoucherDetail tr').eq(nRowIndex).find('.btBillAmountClass');
        var nBillAmount = nBillCAmount;

        $(txtbtBillAmountClass).text(oSelectedBill.CurrencySymbol + " "+  formatPrice(parseFloat(nBillAmount.toFixed(2)),null));
        $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount = parseFloat(nBillAmount.toFixed(2));

        var txtDebitAmount = $('#tblVoucherDetail tr').eq(nRowIndex).find('.btAmountClass');
        txtDebitAmount.val(parseFloat(nBillAmount.toFixed(2)));


        InitializeKeyDownEvent(".btAmountClass"); return;
    }

    function CheckAndGetCurrency(userInput)
    {
        var result = "";
        var oCurrencys = $('#divVoucher').data('Currencys');
        for(var i=0;i<oCurrencys.length;i++)
        {
            var nCurrencyId = 0;
            if(oCurrencys[i].Symbol.toUpperCase() == userInput.toUpperCase())
            {
                nCurrencyId = oCurrencys[i].CurrencyID;
                break;
            }
            else
            {
                nCurrencyId = 0;
            }
        }
        if(nCurrencyId == 0)
        {
            result = "Invalid Currency"+ ","+ nCurrencyId;
        }
        else
        {
            result = "Valid Currency"+ ","+ nCurrencyId;
        }
        return result;
    }

    function isNumber(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
    }

    function SplitCurrencyAndAmount(nRowIndex,userInput)
    {
        var editOrNewEntry = "";
        var currency = "";
        var amountInString = "";
        var result = "";
        var count = 0;
        var nAmountInCurrency = 0;
        var nBaseCurrencyAmount = 0;
        var nConversionRate=0;

        for(var i=0;i<userInput.length;i++)
        {
            var char = userInput.charAt(i);
            var charForCheck = char;
            char = char.match(/\d+/g);
            if(char == null && count==0)
            {
                currency = currency + userInput.charAt(i);
            }
            else if(char != null)
            {
                amountInString = amountInString + userInput.charAt(i);
                count=1;
            }
            else if(charForCheck == ",")
            {
                continue;
            }
            else if(charForCheck == ".")
            {
                amountInString = amountInString + userInput.charAt(i);
            }
            else
            {
                result = "WrongInput" + "," + "Please Give Valid Amount.";
                break;
            }
        }

        if(amountInString.length == 0 || parseFloat(amountInString) == 0)
        {
            result = "WrongInput" + "," + "Please Insert Amount.";
        }


        if(currency.length == 0)
        {
            var sCurrencySymbol = $("#tblVoucherDetail").data('rows')[nRowIndex].CSymbol;
            if(sCurrencySymbol.length == 0)
            {
                currency = _oVoucher.BaseCUSymbol;
            }
            else
            {
                currency = sCurrencySymbol.toUpperCase();
                nConversionRate = $("#tblVoucherDetail").data('rows')[nRowIndex].CRate;
            }
        }
        else
        {
            editOrNewEntry = "Edit";
        }

        if(result == "")
        {
            var checkCurrency = CheckAndGetCurrency(currency);
            checkCurrency = checkCurrency.split(",");
            var userInputAmount = parseFloat(RemoveComma(amountInString));
            var checkAmount = isNumber(userInputAmount);
            if(checkCurrency[0] == "Invalid Currency")
            {
                result = "WrongInput" + "," + "Please Give Valid Currency.";
            }
            else if(checkAmount == false)
            {
                result = "WrongInput" + "," + "Please Give Valid Amount.";
            }
            else
            {
                var currencyID = checkCurrency[1];
                result = currency + "," + userInputAmount + "," + currencyID + "," + nConversionRate + "," +editOrNewEntry;
            }
        }


        result = result.split(",");
        return result;
    }

    function InitializeKeyDownEvent(classname)
    {
        $('.debitcreditclass').unbind("keydown");
        $('.accountclass').unbind("keydown");
        $('.narrationclass').unbind("keydown");
        $('.debitclass').unbind("keydown");
        $('.currencyclass').unbind("keydown");
        $('.creditclass').unbind("keydown");
        $('.vrdescriptionclass').unbind("keydown");
        $('.vramountclass').unbind("keydown");
        $('.delClass').unbind("keydown");

        $('.ccnameclass').unbind("keydown");
        $('.ccdescriptionclass').unbind("keydown");
        $('.ccamountclass').unbind("keydown");

        $('.irProductClass').unbind("keydown");
        $('.irWorkingUnitClass').unbind("keydown");
        $('.irDateClass').unbind("keydown");
        $('.irMeasurementUnitClass').unbind("keydown");
        $('.irQtyClass').unbind("keydown");
        $('.irUnitPriceClass').unbind("keydown");
        $('.irAmountClass').unbind("keydown");

        $('.btTrTypeClass').unbind("keydown");
        $('.btBillNoClass').unbind("keydown");  //rename
        $('.btBillDateClass').unbind("keydown");
        $('.btBillAmountClass').unbind("keydown");
        $('.btAmountClass').unbind("keydown");

        $('.chequenoclass').unbind("keydown");
        $('.chequedateclass').unbind("keydown");
        $('.banknameclass').unbind("keydown");
        $('.branchnameclass').unbind("keydown");
        $('.accountnoclass').unbind("keydown");
        $('.chequeamountclass').unbind("keydown");

        $('.refnoclass').unbind("keydown");
        $('.ordernoclass').unbind("keydown");
        $('.orderremarksclass').unbind("keydown");
        $('.orderamountclass').unbind("keydown");

        if(classname==".debitcreditclass")
        {
            $('.debitcreditclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var sDebitCredit=$.trim($(this).val());
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    if(sDebitCredit==""||sDebitCredit==null)
                    {
                        if(IsDebitCreditEqual())
                        {
                            var oVDObjs=[];
                            var oTempVDObjs = $("#tblVoucherDetail").data('rows');
                            for(var i=0; i<oTempVDObjs.length-1; i++)
                            {
                                oVDObjs.push(oTempVDObjs[i]);
                            }
                            $('#tblVoucherDetail').data('rows', oVDObjs);
                            document.getElementById("tblVoucherDetail").deleteRow(nRowIndex);
                            $('#txtNarration').focus();
                        }
                        else
                        {
                            alert("Please define debit or credit!");
                            return false;
                        }
                    }
                    else
                    {
                        if(sDebitCredit=="Debit")
                        {
                            $("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR="Debit";
                            $("#tblVoucherDetail").data('rows')[nRowIndex].IsDr=true;
                        }
                        else if(sDebitCredit=="Credit")
                        {
                            $("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR="Credit";
                            $("#tblVoucherDetail").data('rows')[nRowIndex].IsDr=false;
                        }
                        else
                        {
                            alert("Invalid Voucher Detail");
                            return false;
                        }
                        var index = $('.debitcreditclass').index(this);
                        ResetAllInputBox(index, '.accountclass');

                        var oVDObjs= $("#tblVoucherDetail").data('rows');
                        var nTotalDebitAmount=0; var nTotalCreditAmount=0;
                        var nBalanceAmount=0; var nTempBalanceAmount=0;
                        for(var i=0;i<oVDObjs.length;i++)
                        {
                            nTotalDebitAmount = parseFloat(nTotalDebitAmount)+ parseFloat(oVDObjs[i].DrAmount);
                            nTotalCreditAmount = parseFloat(nTotalCreditAmount)+ parseFloat(oVDObjs[i].CrAmount);
                        }

                        if($("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR == "Debit")
                        {
                            nBalanceAmount = nTotalCreditAmount - nTotalDebitAmount;
                        }
                        else
                        {
                            nBalanceAmount = nTotalDebitAmount - nTotalCreditAmount;
                        }
                        if(nBalanceAmount<0)
                        {
                            nBalanceAmount=0;
                        }
                        if($("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR == "Debit")
                        {
                            nTempBalanceAmount= parseFloat(RemoveComma($(".debitclass").eq(index).val()));
                            if(nTempBalanceAmount>0)
                            {
                                nBalanceAmount = nTempBalanceAmount;
                            }

                            var sCurrencySymbol = $("#tblVoucherDetail").data('rows')[nRowIndex].CSymbol;
                            if(sCurrencySymbol == "" || sCurrencySymbol == _oVoucher.BaseCUSymbol)
                            {
                                sCurrencySymbol = _oVoucher.BaseCUSymbol;
                                $(".debitclass").eq(index).val(sCurrencySymbol + formatPrice(nBalanceAmount,null));
                            }
                            else
                            {
                                $(".debitclass").eq(index).val(formatPrice(nBalanceAmount,null));
                            }

                            $(".creditclass").eq(index).val(formatPrice(0.00,null));
                            $("#tblVoucherDetail").data('rows')[nRowIndex].DrAmount=parseFloat(nBalanceAmount);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].CrAmount=0.00;
                            $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=parseFloat(nBalanceAmount);
                            $("#tblVoucherDetail").data('rows')[nRowIndex].IsDr=true;
                        }
                        else
                        {
                            nTempBalanceAmount= parseFloat(RemoveComma($(".creditclass").eq(index).val()));
                            if(nTempBalanceAmount>0)
                            {
                                nBalanceAmount = nTempBalanceAmount;
                            }

                            var sCurrencySymbol = $("#tblVoucherDetail").data('rows')[nRowIndex].CSymbol;
                            if(sCurrencySymbol == "" || sCurrencySymbol == _oVoucher.BaseCUSymbol)
                            {
                                sCurrencySymbol = _oVoucher.BaseCUSymbol;
                                $(".creditclass").eq(index).val(sCurrencySymbol + formatPrice(nBalanceAmount,null));
                            }
                            else
                            {
                                $(".creditclass").eq(index).val(formatPrice(nBalanceAmount,null));
                            }

                            $("#tblVoucherDetail").data('rows')[nRowIndex].IsDr=false;
                            $(".debitclass").eq(index).val(formatPrice(0.00,null));
                        }
                        RefreshSummery();
                        InitializeKeyDownEvent(".accountclass"); return;
                    }
                }
            });
        }
        else if(classname==".accountclass")
        {
            $('.accountclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var index = $('.accountclass').index(this);
                    var txtAccountHeadName = $(this).val();
                    if(txtAccountHeadName==null || txtAccountHeadName=="")
                    {
                        alert("Please Press Enter With Account Head Name!");
                        return false;
                    }
                    var nVoucherTypeID = parseInt($('#cboVoucherType').val());
                    if(nVoucherTypeID <=0)
                    {
                        alert("Invalid Voucher Type!");
                        return false;
                    }
                    var nBusinessUnitID = parseInt($('#cboBusinessUnit').val());
                    if(nBusinessUnitID <=0)
                    {
                        alert("Invalid Business Unit!");
                        return false;
                    }
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var bIsDebit = $("#tblVoucherDetail").data('rows')[nRowIndex].IsDr;
                   

                    var oChatOfAccount = {
                        AccountHeadCodeName : txtAccountHeadName,
                        VoucherTypeID : nVoucherTypeID,
                        BusinessUnitID : nBusinessUnitID,
                        IsDebit : bIsDebit
                    }

                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        url : sessionStorage.getItem('BaseAddress')+  "/Voucher/GetsByCodeOrName",
                        traditional: true,
                        data:  JSON.stringify(oChatOfAccount),
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            var oChatOfAccounts = jQuery.parseJSON(data);
                            _oAccountHeads = oChatOfAccounts;
                            $("#tblVoucherDetail").data('rows')[nRowIndex].AHID = oChatOfAccounts.AccountHeadID;
                            RefreashAccountHeads(oChatOfAccounts);
                            $("#txtSearchByAccountHeadName").val(txtAccountHeadName);
                            $('#winAccountHead').window('open');
                            $("#txtSearchByAccountHeadName").select();
                        },
                        error: function (xhr, status, error) {
                            alert(error);
                        }
                    });
                }
            });
        }
        else if(classname==".narrationclass")
        {
            $('.narrationclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var sClassName="";
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    $("#tblVoucherDetail").data('rows')[nRowIndex].Detail = $(this).val();
                    var index = $('.narrationclass').index(this);
                    if($("#tblVoucherDetail").data('rows')[nRowIndex].IsDr)
                    {
                        ResetAllInputBox(index, '.debitclass');
                        sClassName=".debitclass";
                    }
                    else
                    {
                        ResetAllInputBox(index, '.creditclass');
                        sClassName=".creditclass";
                    }
                    InitializeKeyDownEvent(sClassName); return;
                }
            });
        }
        else if(classname==".debitclass")
        {
            $('.debitclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var sAmount=$(this).val();
                    var nCurrencyId = 0;
                    var nAmountInCurrency = 0;
                    var nConversionRate = 0;
                    var sCurrencySymbol = "";
                    var editOrNewEntry="";

                    var nAccountHeadID = $("#tblVoucherDetail").data('rows')[nRowIndex].AHID;
                    if(parseInt(nAccountHeadID) == 0)
                    {
                        alert("Please Select an Account Head.");
                        return false;
                    }

                    var splitCurrencyAmount = SplitCurrencyAndAmount(nRowIndex,sAmount);
                    if(splitCurrencyAmount[0] == "WrongInput")
                    {
                        alert(splitCurrencyAmount[1]);
                        return false;
                    }

                    sCurrencySymbol = splitCurrencyAmount[0];
                    nAmountInCurrency = splitCurrencyAmount[1];
                    nAmountInCurrency = parseFloat(splitCurrencyAmount[1]).toFixed(2);
                    nCurrencyId = splitCurrencyAmount[2];
                    editOrNewEntry = splitCurrencyAmount[4];
                    if(parseInt(_oVoucher.BaseCurrencyID) != parseInt(nCurrencyId))
                    {
                        $('#winCurrency').window('open');

                        nConversionRate = $("#tblVoucherDetail").data('rows')[nRowIndex].CRate;
                        var nAmountInCurrency = $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount;

                        if(nConversionRate == 1)
                        {
                            nConversionRate = 0;
                        }
                        if(nAmountInCurrency == 0 )
                        {
                            nAmountInCurrency = splitCurrencyAmount[1];
                        }
                        if(nConversionRate != 0)
                        {
                            nConversionRate = parseFloat(nConversionRate);
                        }
                        if(editOrNewEntry=="Edit")
                        {
                            nAmountInCurrency = splitCurrencyAmount[1];
                            nConversionRate = 0;
                        }
                        $("#txtCurrencySymbol").val(sCurrencySymbol);
                        $("#txtCurrencyAmount").val(nAmountInCurrency);
                        var nBaseCurrencyAmount = parseFloat(splitCurrencyAmount[1]).toFixed(2);
                        nConversionRate = nConversionRate.toFixed(4);
                        if(parseFloat(nConversionRate) == 0)
                        {
                            for(i=nRowIndex-1;i>=0;i--)
                            {
                                var sDR_CR = $("#tblVoucherDetail").data('rows')[i].DR_CR;
                                var nCID =  $("#tblVoucherDetail").data('rows')[i].CID;
                                if(nCID != _oVoucher.BaseCurrencyID)
                                {
                                    if(sDR_CR == "Debit" || sDR_CR == "Credit")
                                    {
                                        nConversionRate = $("#tblVoucherDetail").data('rows')[i].CRate;
                                        break;
                                    }
                                }
                            }
                        }
                        $("#txtConversionRate").val(parseFloat(nConversionRate));
                        $("#txtBaseCurrencyAmount ").val(parseFloat(nBaseCurrencyAmount));
                        $("#txtConversionRate").focus();
                        $("#txtConversionRate").select();
                    }
                    else
                    {
                        var totalAmount = parseFloat(nAmountInCurrency);
                        $('.debitclass').eq(nRowIndex).text(formatPrice(parseFloat(totalAmount),null));
                        var txtCurrency = $('#tblVoucherDetail tr').eq(nRowIndex).find('.currencyclass');
                        var makeString = sCurrencySymbol.toUpperCase() +" "+parseFloat(nAmountInCurrency).toFixed(2);
                        txtCurrency.text(makeString);
                        nAmountInCurrency = parseFloat(nAmountInCurrency).toFixed(2);

                        var amount =  parseFloat(splitCurrencyAmount[1]).toFixed(2);

                        $(this).val(formatPrice(nAmountInCurrency,null));
                        $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=parseFloat(amount);
                        $("#tblVoucherDetail").data('rows')[nRowIndex].DrAmount=parseFloat(amount);
                        $("#tblVoucherDetail").data('rows')[nRowIndex].CrAmount=parseFloat(0.00);
                        $("#tblVoucherDetail").data('rows')[nRowIndex].CFormat = makeString;
                        $("#tblVoucherDetail").data('rows')[nRowIndex].CID = splitCurrencyAmount[2];
                        $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount = parseFloat(amount);
                        $("#tblVoucherDetail").data('rows')[nRowIndex].CRate = 1;
                        $("#tblVoucherDetail").data('rows')[nRowIndex].CSymbol = splitCurrencyAmount[0];
                        RefreshSummery();
                        IdentifyConfiguration(nRowIndex,this);
                    }
                }
            });
        }
        else if(classname==".creditclass")
        {
            $('.creditclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var sAmount=$(this).val();
                    var nCurrencyId = 0;
                    var nAmountInCurrency = 0;
                    var nConversionRate = 0;
                    var sCurrencySymbol = "";
                    var editOrNewEntry="";

                    var nAccountHeadID = $("#tblVoucherDetail").data('rows')[nRowIndex].AHID;
                    if(parseInt(nAccountHeadID) == 0)
                    {
                        alert("Please Select an Account Head.");
                        return false;
                    }

                    var splitCurrencyAmount = SplitCurrencyAndAmount(nRowIndex,sAmount);
                    if(splitCurrencyAmount[0] == "WrongInput")
                    {
                        alert(splitCurrencyAmount[1]);
                        return false;
                    }
                    sCurrencySymbol = splitCurrencyAmount[0];
                    nAmountInCurrency = splitCurrencyAmount[1];
                    nAmountInCurrency = parseFloat(splitCurrencyAmount[1]).toFixed(2);
                    nCurrencyId = splitCurrencyAmount[2];
                    editOrNewEntry = splitCurrencyAmount[4];
                    if(parseInt(_oVoucher.BaseCurrencyID) != parseInt(nCurrencyId))
                    {
                        $('#winCurrency').window('open');

                        nConversionRate = $("#tblVoucherDetail").data('rows')[nRowIndex].CRate;
                        var nAmountInCurrency = $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount;

                        if(nConversionRate == 1)
                        {
                            nConversionRate = 0;
                        }
                        if(nAmountInCurrency == 0 )
                        {
                            nAmountInCurrency = splitCurrencyAmount[1];
                        }
                        if(nConversionRate != 0)
                        {
                            nConversionRate = parseFloat(nConversionRate);
                        }
                        if(editOrNewEntry=="Edit")
                        {
                            nAmountInCurrency = splitCurrencyAmount[1];
                            nConversionRate = 0;
                        }
                        $("#txtCurrencySymbol").val(sCurrencySymbol);
                        $("#txtCurrencyAmount").val(nAmountInCurrency);
                        var nBaseCurrencyAmount = parseFloat(splitCurrencyAmount[1]).toFixed(2);
                        nConversionRate = nConversionRate.toFixed(4);

                        if(parseFloat(nConversionRate) == 0)
                        {
                            for(i=nRowIndex-1;i>=0;i--)
                            {
                                var sDR_CR = $("#tblVoucherDetail").data('rows')[i].DR_CR;
                                var nCID =  $("#tblVoucherDetail").data('rows')[i].CID;
                                if(nCID != _oVoucher.BaseCurrencyID)
                                {
                                    if(sDR_CR == "Debit" || sDR_CR == "Credit")
                                    {
                                        nConversionRate = $("#tblVoucherDetail").data('rows')[i].CRate;
                                        break;
                                    }
                                }
                            }
                        }
                        $("#txtConversionRate").val(parseFloat(nConversionRate));
                        $("#txtBaseCurrencyAmount ").val(parseFloat(nBaseCurrencyAmount));
                        $("#txtConversionRate").focus();
                        $("#txtConversionRate").select();
                    }
                    else
                    {
                        var totalAmount = parseFloat(nAmountInCurrency);
                        $('.debitclass').eq(nRowIndex).text(formatPrice(parseFloat(totalAmount),null));
                        var txtCurrency = $('#tblVoucherDetail tr').eq(nRowIndex).find('.currencyclass');
                        var makeString = sCurrencySymbol.toUpperCase() +" "+parseFloat(nAmountInCurrency).toFixed(2);
                        txtCurrency.text(makeString);
                        nAmountInCurrency = parseFloat(nAmountInCurrency).toFixed(2);
                        var amount =  parseFloat(splitCurrencyAmount[1]).toFixed(2);
                        $(this).val(formatPrice(nAmountInCurrency,null));
                        $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=parseFloat(amount);
                        $("#tblVoucherDetail").data('rows')[nRowIndex].CrAmount=parseFloat(amount);
                        $("#tblVoucherDetail").data('rows')[nRowIndex].DrAmount=parseFloat(0.00);
                        $("#tblVoucherDetail").data('rows')[nRowIndex].CFormat = makeString;
                        $("#tblVoucherDetail").data('rows')[nRowIndex].CID = splitCurrencyAmount[2];
                        $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount = parseFloat(amount);
                        $("#tblVoucherDetail").data('rows')[nRowIndex].CRate = 1;
                        $("#tblVoucherDetail").data('rows')[nRowIndex].CSymbol = splitCurrencyAmount[0];
                        RefreshSummery();
                        IdentifyConfiguration(nRowIndex,this);
                    }
                }
            });
        }
        else if(classname==".vrdescriptionclass")
        {
            $('.vrdescriptionclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var description = $(this).val();
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    if(description == "")
                    {
                        alert("Please give a voucher description.");
                        return false;
                    }
                    var checkDuplicate = CheckDuplicateOrNot(description, "Cheque");
                    if(checkDuplicate == "Duplicate")
                    {
                        alert("Sorry, Cannot give same voucher description.");
                        return false;
                    }
                    $("#tblVoucherDetail").data('rows')[nRowIndex].Detail = description;
                    var index = $('.vrdescriptionclass').index(this);
                    ResetAllInputBox(index, '.vramountclass');
                    var currentAmount = parseFloat(RemoveComma($('#tblVoucherDetail tr').eq(nRowIndex).find('.vramountclass').val()));
                    var amount = AmountCalculation(nRowIndex,"Cheque",currentAmount);
                    amount = parseFloat(amount.toFixed(2));
                    $('#tblVoucherDetail tr').eq(nRowIndex).find('.vramountclass').val(formatPrice(amount,null));
                    $('#tblVoucherDetail tr').eq(nRowIndex).find('.vramountclass').focus();
                    $('#tblVoucherDetail tr').eq(nRowIndex).find('.vramountclass').select();
                    InitializeKeyDownEvent(".vramountclass"); return;
                }
            });
        }
        else if(classname==".vramountclass")
        {
            $('.vramountclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var sExplanationAmount=RemoveComma($(this).val());
                    if(sExplanationAmount==""||sExplanationAmount==null ||isNaN(sExplanationAmount))
                    {
                        alert("Please enter amount!");
                        return false;
                    }
                    if(parseFloat(sExplanationAmount)<= 0)
                    {
                        alert("Please enter amount!");
                        return false;
                    }

                    sExplanationAmount = parseFloat(sExplanationAmount.toFixed(2));
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var nRowCount=$("#tblVoucherDetail").data('rows').length;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=parseFloat(sExplanationAmount);
                    var totalCreditOrDebitAmount = 0;
                    var totalExplanationAmount = 0;
                    var debitOrCredit = "";
                    for(var i = nRowIndex;i >= 0;i--)
                    {
                        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Cheque")
                        {
                            totalExplanationAmount =parseFloat(totalExplanationAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].Amount);
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Credit";
                            break;
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Debit";
                            break;
                        }
                    }
                    totalExplanationAmount = parseFloat(totalExplanationAmount.toFixed(2));
                    totalCreditOrDebitAmount = parseFloat(totalCreditOrDebitAmount.toFixed(2));
                    if(parseFloat(totalExplanationAmount) > parseFloat(totalCreditOrDebitAmount))
                    {
                        alert("Sorry,Total Amount for this "+ debitOrCredit +" is " + totalCreditOrDebitAmount);
                        return false;
                    }
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
        else if(classname==".ccnameclass")
        {
            $('.ccnameclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var txtCostCenterName = $(this).val();
                    if(txtCostCenterName==null || txtCostCenterName=="")
                    {
                        alert("Please Press Enter With Cost Center Name!");
                        return false;
                    }
                    
                    var n = txtCostCenterName.toUpperCase().indexOf('[');
                    if(n!=-1)
                    {
                        txtCostCenterName = txtCostCenterName.split(']')[0];
                        if(txtCostCenterName.split('[').length>0)
                        {
                            txtCostCenterName = txtCostCenterName.split('[')[1];
                        }
                    }                    
                    
                    var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
                    var parentDrCrIndex = 0;
                    for(var i=nRowIndex;i>=0;i--)
                    {
                        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit" || $("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                        {
                            parentDrCrIndex = i;
                            break;
                        }

                    }
                    var nBUID =  parseInt($('#cboBusinessUnit').val());
                    var nAccountHeadID = $("#tblVoucherDetail").data('rows')[parentDrCrIndex].AHID;

                    var oACCostCenter = {
                        BUID : nBUID,
                        Name : txtCostCenterName,
                        AccountHeadID : nAccountHeadID
                    };
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        url : sessionStorage.getItem('BaseAddress')+  "/ACCostCenter/GetsCostCenter",                        
                        traditional: true,
                        data:  JSON.stringify(oACCostCenter),
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            var oCostCenters = jQuery.parseJSON(data);
                            _oCostCenters = oCostCenters;
                            RefreashCostCenters(oCostCenters);
                            $("#txtSearchByCostCenterName").val(txtCostCenterName);
                            $('#winCostCenterName').window('open');
                            $("#txtSearchByCostCenterName").select();
                        },
                        error: function (xhr, status, error) {
                            alert(error);
                        }
                    });
                }
            });
        }
        else if(classname==".ccdescriptionclass")
        {
            $('.ccdescriptionclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var sClassName="";
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    $("#tblVoucherDetail").data('rows')[nRowIndex].Detail = $(this).val();
                    var index = $('.ccdescriptionclass').index(this);
                    ResetAllInputBox(index, '.ccamountclass');
                    var sClassName=".ccamountclass";
                    InitializeKeyDownEvent(sClassName); return;
                }
            });
        }
        else if(classname==".ccamountclass")
        {
            $('.ccamountclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var sCCAmount=$.trim(RemoveComma($(this).val()));
                    if(sCCAmount==""||sCCAmount==null ||isNaN(sCCAmount))
                    {
                        alert("Please enter amount!");
                        return false;
                    }
                    if(parseFloat(sCCAmount)<= 0)
                    {
                        alert("Please enter amount!");
                        return false;
                    }
                    sCCAmount = RemoveComma(sCCAmount);
                    sCCAmount = parseFloat(sCCAmount.toFixed(2));
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=parseFloat(sCCAmount);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount=parseFloat(sCCAmount);
                    var totalCreditOrDebitAmount = 0;
                    var totalCCAmount = 0;
                    var debitOrCredit = "";
                    for(var i = nRowIndex;i >= 0;i--)
                    {
                        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Subledger")
                        {
                            totalCCAmount = parseFloat(totalCCAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].Amount);
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Credit";
                            break;
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Debit";
                            break;
                        }
                    }

                    totalCCAmount = parseFloat(totalCCAmount.toFixed(2));
                    totalCreditOrDebitAmount = parseFloat(totalCreditOrDebitAmount).toFixed(2);
                    if(parseFloat(totalCCAmount) > parseFloat(totalCreditOrDebitAmount))
                    {
                        alert("Sorry,Total Amount for this "+ debitOrCredit +" is " + totalCreditOrDebitAmount);
                        return false;
                    }
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
        else if(classname==".irProductClass")
        {
            $('.irProductClass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var txtProduct = $(this).val();
                    if(txtProduct==null || txtProduct=="")
                    {
                        alert("Please Press Enter With Product Name!");
                        return false;
                    }

                    var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
                    var parentDrCrIndex = 0;
                    for(var i=nRowIndex;i>=0;i--)
                    {
                        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit" || $("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                        {
                            parentDrCrIndex = i;
                            break;
                        }

                    }
                    var nPID = $("#tblVoucherDetail").data('rows')[parentDrCrIndex].PID;

                    var oProduct = {
                        NameCode : txtProduct,
                        ProductID : nPID
                    }
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        url : sessionStorage.getItem('BaseAddress')+  "/Product/GetsByCodeOrName",
                        traditional: true,
                        data:  JSON.stringify(oProduct),
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            var oProducts = data;
                            _oProducts = oProducts;
                            RefreashProducts(oProducts);
                            $("#txtSearchByProductName").val(txtProduct);
                            $('#winProduct').window('open');
                            $("#txtSearchByProductName").select();
                        },
                        error: function (xhr, status, error) {
                            alert(error);
                        }
                    });
                }
            });
        }
        else if(classname==".irWorkingUnitClass")
        {
            $('.irWorkingUnitClass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var txtWorkingUnit = $(this).val();
                    var oGetsWorkingUnit = {
                        LOUNameCode : txtWorkingUnit
                    }
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        url : sessionStorage.getItem('BaseAddress')+  "/WorkingUnit/GetsWorkingUnit",
                        traditional: true,
                        data:  JSON.stringify(oGetsWorkingUnit),
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            var oWorkingUnits = jQuery.parseJSON(data);
                            _oWorkingUnits = oWorkingUnits;
                            RefreashWorkingUnits(oWorkingUnits);
                            $('#winWorkingUnit').window('open');
                            $("#txtSearchByWorkingUnit").select();
                        },
                        error: function (xhr, status, error) {
                            alert(error);
                        }
                    });
                }
            });
        }
        else if(classname==".irMeasurementUnitClass")
        {
            $('.irMeasurementUnitClass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var txtMUnit = $(this).val();
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var productId = $("#tblVoucherDetail").data('rows')[nRowIndex].PID;
                    var oMeasurementUnit = {
                        ProductID : productId
                    }
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        url : sessionStorage.getItem('BaseAddress')+  "/MeasurementUnit/GetsMUnits",
                        traditional: true,
                        data:  JSON.stringify(oMeasurementUnit),
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            var oMeasurementUnits = jQuery.parseJSON(data);
                            _oMeasurementUnits = oMeasurementUnits;
                            RefreashMUnits(oMeasurementUnits);
                            $("#txtSearchByMUnit").val(txtMUnit);
                            $('#winMUnit').window('open');
                            $("#txtSearchByMUnit").select();
                        },
                        error: function (xhr, status, error) {
                            alert(error);
                        }
                    });
                }
            });
        }
        else if(classname==".irQtyClass")
        {
            $('.irQtyClass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {

                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var irQty=$.trim($(this).val());
                    irQty = RemoveComma(irQty);
                    if(irQty==""||irQty==null ||isNaN(irQty))
                    {
                        alert("Please enter some Qty!");
                        return false;
                    }
                    if(parseFloat(irQty)<= 0)
                    {
                        alert("Please enter some Qty!");
                        return false;
                    }

                    var qty = parseFloat(irQty.toFixed(2));
                    $(this).val(qty);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].Qty = qty;
                    var index = $('.irQtyClass').index(this);
                    ResetAllInputBox(index, '.irUnitPriceClass');
                    var sClassName=".irUnitPriceClass";
                    InitializeKeyDownEvent(sClassName); return;
                }
            });
        }
        else if(classname==".irUnitPriceClass")
        {
            $('.irUnitPriceClass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var unitPrice = RemoveComma($(this).val());
                    if(unitPrice==""||unitPrice==null ||isNaN(unitPrice))
                    {
                        alert("Please enter Unit Price!");
                        return false;
                    }
                    if(parseFloat(unitPrice)<= 0)
                    {
                        alert("Please enter Unit Price!");
                        return false;
                    }

                    //unitPrice = Math.round(unitPrice * 10000) / 10000;
                    unitPrice = parseFloat(unitPrice.toFixed(3));
                    $(this).val(unitPrice);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].UPrice = parseFloat(unitPrice);

                    var qty = $("#tblVoucherDetail").data('rows')[nRowIndex].Qty

                    var amount = parseFloat(unitPrice) * parseFloat(qty);
                    amount = parseFloat(amount.toFixed(2));
                    $('#tblVoucherDetail tr').eq(nRowIndex).find('.irAmountClass').val(formatPrice(parseFloat(amount),null));

                    var index = $('.irUnitPriceClass').index(this);
                    ResetAllInputBox(index, '.irAmountClass');
                    var sClassName=".irAmountClass";
                    InitializeKeyDownEvent(sClassName); return;
                }
            });
        }
        else if(classname==".irAmountClass")
        {
            $('.irAmountClass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var irAmount = RemoveComma($(this).val());
                    if(irAmount==""||irAmount==null ||isNaN(irAmount))
                    {
                        alert("Please give Amount!");
                        return false;
                    }
                    if(parseFloat(irAmount)<= 0)
                    {
                        alert("Please give Amount!");
                        return false;
                    }

                    //var fractionIrAmount=  Math.round(irAmount * 10000) / 10000; //this variable is used only for taking four digit after dot in unit price

                    irAmount = parseFloat(irAmount.toFixed(3));

                    $("#tblVoucherDetail").data('rows')[nRowIndex].Amount = irAmount;
                    var qty = $("#tblVoucherDetail").data('rows')[nRowIndex].Qty;
                    qty = parseFloat(qty.toFixed(3));
                    var unitPrice = parseFloat(irAmount) / parseFloat(qty);
                    unitPrice = Math.round(unitPrice * 10000) / 10000;

                    var txtUnitPrice= $('#tblVoucherDetail tr').eq(nRowIndex).find('.irUnitPriceClass');
                    txtUnitPrice.val(unitPrice);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].UPrice = parseFloat(unitPrice);

                    var totalCreditOrDebitAmount = 0;
                    var totalIRAmount = 0;
                    var debitOrCredit = "";

                    for(var i = nRowIndex;i >= 0;i--)
                    {
                        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "IR")
                        {
                            totalIRAmount = parseFloat(totalIRAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].Amount);
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Credit";
                            break;
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Debit";
                            break;
                        }
                    }
                    totalIRAmount = parseFloat(totalIRAmount.toFixed(2));
                    if(parseFloat(totalIRAmount) > parseFloat(totalCreditOrDebitAmount))
                    {
                        alert("Sorry,Total Amount for this "+ debitOrCredit +" is " + totalCreditOrDebitAmount);
                        return false;
                    }
                    RefreshSummery();
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
        else if(classname==".btTrTypeClass")
        {
            $('.btTrTypeClass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var txtTrType = $(this).val();
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        url : sessionStorage.getItem('BaseAddress')+  "/VoucherBill/GetsTrType?sTemp="+txtTrType,
                        traditional: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            var oVoucherBillTransactions = jQuery.parseJSON(data);
                            _oTrTypes = oVoucherBillTransactions;
                            RefreashTrTypes(oVoucherBillTransactions);
                            $("#txtSearchByTrType").val(txtTrType);
                            $('#winTrType').window('open');
                            $("#txtSearchByTrType").select();
                        },
                        error: function (xhr, status, error) {
                            alert(error);
                        }
                    });
                }
            });
        }
        else if(classname==".btBillNoClass")
        {
            $('.btBillNoClass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
                    var nTrTypeInt = $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt;
                    var billNo = $(this).val();
                    var isDr = false;
                    var nAccountHeadID = 0;
                    var nBUID = 0;                    
                    for(var i=nRowIndex;i>=0;i--)
                    {
                        var sDR_CR = $("#tblVoucherDetail").data('rows')[i].DR_CR
                        if(sDR_CR == "Debit" || sDR_CR == "Credit")
                        {
                            isDr = $("#tblVoucherDetail").data('rows')[i].IsDr;
                            nAccountHeadID = parseInt($("#tblVoucherDetail").data('rows')[i].AHID);
                            nBUID = parseInt($("#tblVoucherDetail").data('rows')[i].BUID);                            
                            break;
                        }
                    }

                    var oVoucherBill = {
                        AccountHeadID : parseInt(nAccountHeadID),
                        TrTypeInInt : parseInt(nTrTypeInt),
                        VoucherBillID : parseInt(_oVoucher.VoucherID),
                        SubLedgerID : $("#tblVoucherDetail").data('rows')[nRowIndex].CCID,
                        BillNo : billNo,
                        IsDebit : isDr,
                        BUID : nBUID
                    };

                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        url : sessionStorage.getItem('BaseAddress')+  "/VoucherBill/GetsBill",
                        traditional: true,
                        data:  JSON.stringify(oVoucherBill),
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            var oVoucherBills = jQuery.parseJSON(data);
                            _oVoucherBills = oVoucherBills;
                            RefreashBillNos(oVoucherBills);

                            var oBillObj=$("#tblVoucherDetail").data('rows')[nRowIndex];
                            var nBTTypeInt = oBillObj.TrTypeInt;
                            if(parseInt(nBTTypeInt) == 3)
                            {
                                sBillNo = $("#txtVoucherNo").val();
                            }
                            var nSuggestedAmount = "0";
                            if(parseInt(nBTTypeInt) == 1 || parseInt(nBTTypeInt)==3){
                                nSuggestedAmount = $('#tblVoucherDetail tr').eq(nRowIndex).find('.btAmountClass').val();
                            }

                            var sBillDate = $('#txtVoucherDate').datebox('getValue');
                            var dBillDate=new Date(sBillDate);
                            var dMaturityDate=dBillDate;
                            dMaturityDate.setDate(dMaturityDate.getDate()+30);
                            

                            var oBusinessUnit = { BusinessUnitID: 0, Code :"", Name: "", ShortName : "" };
                            var oBusinessUnits  = $('#cboBusinessUnit').data('BusinessUnits');
                            var oTempBusinessUnit = ICS_FindObject(oBusinessUnits, 'BusinessUnitID', nBUID);
                            if(oTempBusinessUnit != null)
                            {
                                oBusinessUnit.BusinessUnitID = parseInt(oTempBusinessUnit.BusinessUnitID);
                                oBusinessUnit.Code = oTempBusinessUnit.Code;
                                oBusinessUnit.Name = oTempBusinessUnit.Name;
                                oBusinessUnit.ShortName = oTempBusinessUnit.ShortName;
                            }
                            
                            var nCurrencyRate = parseFloat(oBillObj.CRate);
                            var nCurrencyAmount = parseFloat(RemoveComma(nSuggestedAmount));
                            var nAmount = parseFloat((nCurrencyRate * nCurrencyAmount).toFixed(2));

                            var oVBSVoucherBill =  {
                                VoucherBillID : 0,
                                AccountHeadID : parseInt(oBillObj.AHID),
                                SubLedgerID : parseInt(oBillObj.CCID),
                                BUID : parseInt($('#cboBusinessUnit').val()),
                                BillNo : '',
                                CreditDays : 30,
                                BillDate : $('#txtVoucherDate').datebox('getValue'),
                                BillDateInString : $('#txtVoucherDate').datebox('getValue'),
                                DueDate : icsdateformat(dMaturityDate),
                                DueDateInString : icsdateformat(dMaturityDate),
                                TrTypeInInt : parseInt(nBTTypeInt),
                                CurrencyID : parseInt(oBillObj.CID),
                                CurrencyRate : parseFloat(nCurrencyRate),
                                CurrencyAmount : parseFloat(nCurrencyAmount),
                                Amount : parseFloat(nAmount),
                                AccountHeadName : oBillObj.AHName,
                                IDs : oBillObj.AHCode, // It use only for Voucher Bill Window Header
                                SubLedgerCode : oBillObj.CCCode,
                                SubLedgerName : oBillObj.CCName,
                                BUCode : oBusinessUnit.Code,
                                BUName : oBusinessUnit.Name,
                                BUShortName : oBusinessUnit.ShortName,
                                Remarks : 'N/A',
                                OpeningBillAmount : 0,
                                OpeningBillDateInString : $('#txtVoucherDate').datebox('getValue')
                            };
                            RefreshVBSComboBoxControls();
                            RefreshVBSControls(oVBSVoucherBill);
                            var sBillHeader = 'Voucher Bills for BU : '+ oBusinessUnit.ShortName+ ' ['+oBusinessUnit.Code+'], A/C : '+ oVBSVoucherBill.AccountHeadName +' ['+oVBSVoucherBill.IDs+']';
                            if(parseInt(oVBSVoucherBill.SubLedgerID)>0)
                            {
                                sBillHeader = sBillHeader + ', Subledger : '+ oVBSVoucherBill.SubLedgerName+' ['+oVBSVoucherBill.SubLedgerCode+']';
                            }
                            $('#winBillNo').window('setTitle', sBillHeader);
                            $("#txtSearchByBillNo").val(billNo);                            
                            $('#winBillNo').window('open');
                            $("#btnCreateNewBill").hide();
                            if(parseInt(nTrTypeInt) == 1 || parseInt(nTrTypeInt) == 3)
                            {
                                $("#btnCreateNewBill,#btnEditVoucherBill").show();
                                $("#toolbarBill").prop('disabled',false);
                            }
                            else
                            {
                                $("#btnCreateNewBill,#btnEditVoucherBill").hide();//toolbarBill
                                $("#toolbarBill").prop('disabled',true);
                            }
                            $('#txtVBSBillNo').focus();
                        },
                        error: function (xhr, status, error) {
                            alert(error);
                        }
                    });
                }
            });
        }
        else if(classname==".btAmountClass")
        {
            $('.btAmountClass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var sBTAmount= RemoveComma($(this).val());
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');

                    if(sBTAmount==""||sBTAmount==null ||isNaN(sBTAmount))
                    {
                        alert("Please enter amount!");
                        return false;
                    }
                    if(parseFloat(sBTAmount)<= 0)
                    {
                        alert("Please enter amount!");
                        return false;
                    }

                    var totalCreditOrDebitAmount = 0;
                    var totalBTAmount = 0;
                    var debitOrCredit = "";
                    var CSymbol = "";


                    for(var i = nRowIndex-1;i >= 0;i--)
                    {
                        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Bill" || $("#tblVoucherDetail").data('rows')[i].DR_CR == "SL Bill")
                        {
                            totalBTAmount = parseFloat(totalBTAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].Amount);
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Credit";
                            CSymbol = $("#tblVoucherDetail").data('rows')[i].CSymbol;
                            break;
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Debit";
                            CSymbol = $("#tblVoucherDetail").data('rows')[i].CSymbol;
                            break;
                        }
                    }
                    totalBTAmount = parseFloat(totalBTAmount) + parseFloat(sBTAmount);
                    totalBTAmount = parseFloat(totalBTAmount.toFixed(2));
                    totalCreditOrDebitAmount = parseFloat(totalCreditOrDebitAmount).toFixed(2);


                    var nTrTypeInt = $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt;

                    if(parseInt(nTrTypeInt) == 1 || parseInt(nTrTypeInt) == 3)
                    {
                        var billTrType = "";
                        if(parseInt(nTrTypeInt)== 1)
                        {
                            billTrType = "New Bill";
                        }
                        else
                        {
                            billTrType = "Advance Bill";
                        }
                        var nBillAmount = $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount;
                        nBillAmount = parseFloat(nBillAmount.toFixed(2));
                        $(this).val(nBillAmount);
                        if(parseFloat(nBillAmount) != parseFloat(sBTAmount))
                        {
                            alert("Sorry, Cannot be changed. Amount for this " + billTrType+ " is " + nBillAmount);
                            return false;
                        }
                    }

                    var maxBillAmount = $("#tblVoucherDetail").data('rows')[nRowIndex].Amount;
                    maxBillAmount = parseFloat(maxBillAmount.toFixed(2));
                    if(parseFloat(sBTAmount) > parseFloat(maxBillAmount))
                    {
                        alert("Sorry, Maximum amount of this bill is " + CSymbol.toUpperCase() + " " + maxBillAmount);
                        return false;
                    }
                    $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=parseFloat(sBTAmount);


                    if(parseFloat(totalBTAmount) > parseFloat(parseFloat(totalCreditOrDebitAmount) + 0.01) )
                    {
                        alert("Sorry, Total Amount for this "+ debitOrCredit +" is "  + CSymbol.toUpperCase() + " " + totalCreditOrDebitAmount);
                        return false;
                    }
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
        else if(classname===".chequenoclass")
        {
            $('.chequenoclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {
                    var TextBox=$(this);
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    _oThis=this;
                    var index = $('.chequenoclass').index(this);
                    $('.chequeamountclass').eq(index).prop('disabled',true);
                    //Ratin
                    if($.trim($(this).val()).toLowerCase()!='cash' && $.trim($(this).val()).toLowerCase()!='transfer'){


                        if(e.which===9){
                            if($("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID>0){
                                IdentifyConfiguration(nRowIndex,this);
                                return;
                            }
                        }

                        DynamicRefreshList([],"tblCheque");
                        $('#winCheque').window('open');
                        $("#txtChequeNo").select();
                    }
                    else if($.trim($(this).val()).toLowerCase()==='cash'){
                        $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID=0;
                        $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeNo='Cash';
                        $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeType=3;
                        $('.chequeamountclass').eq(index).prop('disabled',false);
                        ResetAllInputBox(index, '.chequeamountclass');
                        RefreshSummery();
                        InitializeKeyDownEvent(".chequeamountclass"); return;
                    }
                    else if($.trim($(this).val()).toLowerCase()==='transfer'){
                        $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID=0;
                        $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeNo='Transfer';
                        $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeType=4;
                        $('.chequeamountclass').eq(index).prop('disabled',false);
                        ResetAllInputBox(index, '.chequeamountclass');
                        RefreshSummery();
                        InitializeKeyDownEvent(".chequeamountclass"); return;
                    }
                }
            });
        }
        else if(classname===".chequeamountclass")
        {
            $('.chequeamountclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var irAmount = RemoveComma($(this).val());
                    if(irAmount==""||irAmount==null ||isNaN(irAmount))
                    {
                        alert("Please give Amount!");
                        return false;
                    }
                    if(parseFloat(irAmount)<= 0)
                    {
                        alert("Please give Amount!");
                        return false;
                    }


                    $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount = irAmount;

                    var totalCreditOrDebitAmount = 0;
                    var totalIRAmount = 0;
                    var debitOrCredit = "";

                    for(var i = nRowIndex;i >= 0;i--)
                    {
                        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Cheque")
                        {
                            totalIRAmount = parseFloat(totalIRAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Credit";
                            break;
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Debit";
                            break;
                        }
                    }
                    totalIRAmount = parseFloat(totalIRAmount.toFixed(2));
                    if(parseFloat(totalIRAmount) > parseFloat(totalCreditOrDebitAmount))
                    {
                        alert("Sorry, Total Amount for this "+ debitOrCredit  +" is " + formatPrice(totalCreditOrDebitAmount, null) + ", But Item wise total is "+formatPrice(totalIRAmount, null) + ", please correct "+formatPrice((parseFloat(totalCreditOrDebitAmount)-parseFloat(totalIRAmount)), null)+"!!");
                        return false;
                    }
                    RefreshSummery();
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
        else if(classname===".refnoclass")
        {
            $('.refnoclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {      
                    if($(this).val()===null || $(this).val()==="")
                    {
                        alert("Please enter 'Ref No/Order No/Customer Name'!");
                        return false;
                    }

                    if($('#cboBusinessUnit').val()===null || parseInt($('#cboBusinessUnit').val())<=0)
                    {
                        alert("Invalid Business Unit'!");
                        return false;
                    }

                    var TextBox=$(this);
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');                    
                    var index = $('.orderamountclass').index(this);

                    if($.trim($(this).val()).toLowerCase()!=''){

                        if(e.which===9){
                            if(parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].OrderID)>0){
                                IdentifyConfiguration(nRowIndex,this);
                                return;
                            }
                        }
                        
                        var oVOrder = {
                            OrderNo : $.trim($(this).val()),
                            BUID : parseInt($('#cboBusinessUnit').val()),
                            SubledgerID : parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].CCID)
                        };                        
                        
                        var sVOrderNo = $.trim($(this).val());

                        $.ajax({
                            type: "POST",
                            dataType: "json",
                            url : sessionStorage.getItem('BaseAddress')+  "/Voucher/GetsOrderReferences",
                            traditional: true,
                            data:  JSON.stringify(oVOrder),
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {
                                var oVOrders = jQuery.parseJSON(data);
                                _oVOrders = oVOrders;
                                RefreashVOrders(oVOrders);
                                $("#txtSearchByOrderNo").val(sVOrderNo);
                                $('#winOrderRef').window('open');
                                $("#txtSearchByOrderNo").select();
                            },
                            error: function (xhr, status, error) {
                                alert(error);
                            }
                        });
                    }
                    else
                    {
                        $("#tblVoucherDetail").data('rows')[nRowIndex].OrderID=0;
                        $("#tblVoucherDetail").data('rows')[nRowIndex].RefNo='';
                        $("#tblVoucherDetail").data('rows')[nRowIndex].OrderNo='';                        
                        ResetAllInputBox(index, '.orderremarksclass');
                        RefreshSummery();
                        InitializeKeyDownEvent(".orderremarksclass"); return;
                    }                   
                }
            });
        }
        else if(classname===".orderremarksclass")
        {
            $('.orderremarksclass').keydown(function (e)
            {
                if(e.which === 13 || e.which === 9)
                {                    
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');                 
                    var index = $('.orderremarksclass').index(this);
                    
                    $("#tblVoucherDetail").data('rows')[nRowIndex].ORemarks=$(this).val();                    
                    ResetAllInputBox(index, '.orderamountclass');
                    RefreshSummery();
                    InitializeKeyDownEvent(".orderamountclass"); return;
                }
            });
        }
        else if(classname===".orderamountclass")
        {
            $('.orderamountclass').keydown(function (e) {
                if (e.which === 9 || e.which === 13) {
                    var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                    var OrderAmount = RemoveComma($(this).val());
                    if(OrderAmount==""||OrderAmount==null ||isNaN(OrderAmount))
                    {
                        alert("Please give Amount!");
                        return false;
                    }
                    if(parseFloat(OrderAmount)<= 0)
                    {
                        alert("Please give Amount!");
                        return false;
                    }

                    $("#tblVoucherDetail").data('rows')[nRowIndex].Amount = parseFloat(OrderAmount);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount = parseFloat(OrderAmount);

                    var totalCreditOrDebitAmount = 0;
                    var totalOrderAmount = 0;
                    var debitOrCredit = "";

                    for(var i = nRowIndex;i >= 0;i--)
                    {
                        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Order Ref")
                        {
                            totalOrderAmount = parseFloat(totalOrderAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Credit";
                            break;
                        }
                        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                        {
                            totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                            debitOrCredit = "Debit";
                            break;
                        }
                    }
                    totalOrderAmount = parseFloat(totalOrderAmount.toFixed(2));
                    if(parseFloat(totalOrderAmount) > parseFloat(totalCreditOrDebitAmount))
                    {
                        alert("Sorry, Total Amount for this "+ debitOrCredit  +" is " + formatPrice(totalCreditOrDebitAmount, null) + ", But sales wise total is "+formatPrice(totalOrderAmount, null) + ", please correct "+formatPrice((parseFloat(totalCreditOrDebitAmount)-parseFloat(totalOrderAmount)), null)+"!!");
                        return false;
                    }
                    RefreshSummery();
                    IdentifyConfiguration(nRowIndex,this);
                }
            });
        }
    }

    function RemoveComma(stringValue)
    {
        var stringValues = stringValue.split(',');
        var result = "";
        if(stringValues.length <= 0)
        {
            result = stringValue;
        }
        else
        {
            for(var i=0;i<stringValues.length;i++)
            {
                result = result + stringValues[i];
            }
        }
        return parseFloat(result);
    }

    function CheckDuplicateOrNot(searchItem,configType)
    {
        var rowCount = $("#tblVoucherDetail").data("selectedIndex");
        var totalCount = $('#tblVoucherDetail tr').length;
        var ccIDs = [];
        var irIDs = [];
        var chequeIDs = [];
        var btIDs = [];
        var OrderIDs = [];
        var currentID = 0;
        var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
        if(parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===1)//Subledger
        {
            currentID = $("#tblVoucherDetail").data('rows')[nRowIndex].CCID;
        }
        else if(parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===2 || parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===5)//Bill
        {
            currentID = $("#tblVoucherDetail").data('rows')[nRowIndex].BillID;
        }
        else if(parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===3 || parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===6)//Cheque
        {
            currentID = $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID;
        }
        else if(parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===4)//Inventory
        {
            currentID = $("#tblVoucherDetail").data('rows')[nRowIndex].PID;
        }
        else if(parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===7 || parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt)===8)//Inventory
        {
            currentID = $("#tblVoucherDetail").data('rows')[nRowIndex].OrderID;
        }

        var currentExplanationDescription = $("#tblVoucherDetail").data('rows')[nRowIndex].Detail;
        if(parseInt(searchItem) == parseInt(currentID) || currentExplanationDescription == searchItem)
        {
            result = "Not Duplicate";
        }
        else
        {
            for(var i=rowCount;i>=0;i--)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===1)//Subledger
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].CCID);
                    if(indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        ccIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===2 || parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===5)//Bill
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].BillID);
                    if(indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        btIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===3 || parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===6)//Cheque
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].ChequeID);
                    if(indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        chequeIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===4)//Inventory
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].PID);
                    if($("#tblVoucherDetail").data('rows')[i].DR_CR == "IR" && indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        irIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===7 || parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===8)//Order Ref
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].OrderID);
                    if(indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        OrderIDs.push(parseInt(indexExplanationID));
                    }
                }
                else
                {
                    break;
                }

            }
            for(var i=rowCount+1;i<totalCount;i++)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===1)//Subledger
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].CCID);
                    if(indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        ccIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===2 || parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===5)//Bill
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].BillID);
                    if(indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        btIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===3 || parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===6)//Cheque
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].ChequeID);
                    if(indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        chequeIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===4)//Inventory
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].PID);
                    if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Inventory" && indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        irIDs.push(parseInt(indexExplanationID));
                    }
                }
                else if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===7 || parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt)===8)//Order Ref
                {
                    var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].OrderID);
                    if(indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
                    {
                        OrderIDs.push(parseInt(indexExplanationID));
                    }
                }
                else
                {
                    break;
                }
            }
            var result = "Not Duplicate";
            if(configType == "Subledger")
            {
                for(var i=0;i<ccIDs.length;i++)
                {
                    if(parseInt(searchItem) == parseInt(ccIDs[i]))
                    {
                        result = "Duplicate";
                        break;
                    }
                    else
                    {
                        result = "Not Duplicate";
                    }
                }
            }
            else if(configType == "Bill" || configType == "SL Bill")
            {
                for(var i=0;i<btIDs.length;i++)
                {
                    if(parseInt(searchItem) == parseInt(btIDs[i]))
                    {
                        result = "Duplicate";
                        break;
                    }
                    else
                    {
                        result = "Not Duplicate";
                    }
                }
            }
            else if(configType == "Cheque" || configType == "SL Cheque")
            {
                for(var i=0;i<chequeIDs.length;i++)
                {
                    if(parseInt(searchItem) == parseInt(chequeIDs[i]))
                    {
                        result = "Duplicate";
                        break;
                    }
                    else
                    {
                        result = "Not Duplicate";
                    }
                }
            }
            else if(configType == "Inventory")
            {
                for(var i=0;i<irIDs.length;i++)
                {

                    if(parseInt(searchItem) == parseInt(irIDs[i]))
                    {
                        result = "Duplicate";
                        break;
                    }
                    else
                    {
                        result = "Not Duplicate";
                    }
                }
            }
            else if(configType == "Order Ref" || configType == "SLOrder Ref")
            {
                for(var i=0;i<OrderIDs.length;i++)
                {

                    if(parseInt(searchItem) == parseInt(OrderIDs[i]))
                    {
                        result = "Duplicate";
                        break;
                    }
                    else
                    {
                        result = "Not Duplicate";
                    }
                }
            }
        }
        return result;
    }

    function CheckDuplicateOrNotOld(searchItem,configType)
    {
        //var rowCount = $("#tblVoucherDetail").data("selectedIndex");
        //var totalCount = $('#tblVoucherDetail tr').length;
        //var ccIDs = [];
        //var irIDs = [];
        //var vrDexcriptions = [];
        //var btIDs = [];
        //var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
        //var currentID = $("#tblVoucherDetail").data('rows')[nRowIndex].RefID;
        //var currentExplanationDescription = $("#tblVoucherDetail").data('rows')[nRowIndex].Detail;
        //if(parseInt(searchItem) == parseInt(currentID) || currentExplanationDescription == searchItem)
        //{
        //    result = "Not Duplicate";
        //}
        //else
        //{
        //    for(var i=rowCount;i>=0;i--)
        //    {
        //        var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].RefID);
        //        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "CC" && indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
        //        {
        //            ccIDs.push(parseInt(indexExplanationID));
        //        }
        //        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "BT" && indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
        //        {
        //            btIDs.push(parseInt(indexExplanationID));
        //        }
        //        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Cheque" )
        //        {
        //            vrDexcriptions.push($("#tblVoucherDetail").data('rows')[i].Detail);
        //        }
        //        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "IR" && indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
        //        {
        //            irIDs.push(parseInt(indexExplanationID));
        //        }
        //        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
        //        {
        //            break;
        //        }
        //        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
        //        {
        //            break;
        //        }
        //    }
        //    for(var i=rowCount+1;i<totalCount;i++)
        //    {
        //        var indexExplanationID = parseInt($("#tblVoucherDetail").data('rows')[i].RefID);
        //        if($("#tblVoucherDetail").data('rows')[i].DR_CR == "CC" && indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
        //        {
        //            ccIDs.push(parseInt(indexExplanationID));
        //        }
        //        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "BT" && indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
        //        {
        //            btIDs.push(parseInt(indexExplanationID));
        //        }
        //        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Cheque" )
        //        {
        //            vrDexcriptions.push($("#tblVoucherDetail").data('rows')[i].Detail);
        //        }
        //        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "IR" && indexExplanationID !=0 && parseInt(searchItem) != parseInt(currentID))
        //        {
        //            irIDs.push(parseInt(indexExplanationID));
        //        }
        //        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
        //        {
        //            break;
        //        }
        //        else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
        //        {
        //            break;
        //        }
        //    }
        //    var result = "Not Duplicate";
        //    if(configType == "CC")
        //    {
        //        for(var i=0;i<ccIDs.length;i++)
        //        {
        //            if(parseInt(searchItem) == parseInt(ccIDs[i]))
        //            {
        //                result = "Duplicate";
        //                break;
        //            }
        //            else
        //            {
        //                result = "Not Duplicate";
        //            }
        //        }
        //    }
        //    else if(configType == "BT")
        //    {
        //        for(var i=0;i<btIDs.length;i++)
        //        {
        //            if(parseInt(searchItem) == parseInt(btIDs[i]))
        //            {
        //                result = "Duplicate";
        //                break;
        //            }
        //            else
        //            {
        //                result = "Not Duplicate";
        //            }
        //        }
        //    }
        //    else if(configType == "Cheque")
        //    {
        //        for(var i=0;i<vrDexcriptions.length;i++)
        //        {
        //            if(searchItem == vrDexcriptions[i])
        //            {
        //                result = "Duplicate";
        //                break;
        //            }
        //            else
        //            {
        //                result = "Not Duplicate";
        //            }
        //        }
        //    }
        //    else if(configType == "IR")
        //    {
        //        for(var i=0;i<irIDs.length;i++)
        //        {

        //            if(parseInt(searchItem) == parseInt(irIDs[i]))
        //            {
        //                result = "Duplicate";
        //                break;
        //            }
        //            else
        //            {
        //                result = "Not Duplicate";
        //            }
        //        }
        //    }
        //}
        return result;
    }

    function CalculateIRAmount(qty,unitPrice)
    {
        var amount = parseFloat(qty) * parseFloat(unitPrice);
        return parseFloat(amount);
    }

    function DateValidation(InputDate)
    {
        var MonthArray = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
        var sInputDate = InputDate.split(" ");
        var dateLength =  sInputDate[0].length;
        var monthLength = sInputDate[1].length;
        var trimYear = $.trim(sInputDate[2]);
        var yearLength =  trimYear.length;
        var monthNumber=0;
        var result = "";
        if(parseInt(dateLength) != 2 || parseInt(monthLength) != 3 || parseInt(yearLength) != 4 || parseInt(trimYear) < 2000)
        {
            result = "Invalid Date";
        }
        if(result != "Invalid Date")
        {
            for(var i=0; i<MonthArray.length; i++)
            {
                var makeUpperCase = sInputDate[1].toUpperCase();
                if(makeUpperCase == MonthArray[i].toUpperCase())
                {
                    result = "Valid Month";
                    monthNumber = (i+1);
                    break;
                }
                else
                {
                    result = "Invalid Date";
                }
            }
        }
        if(result == "Valid Month")
        {
            var year = parseInt(trimYear);
            var month = monthNumber;
            var days = Math.round(((new Date(year, month))-(new Date(year, month-1)))/86400000);
            if(parseInt(sInputDate[0]) < 0 || parseInt(sInputDate[0]) > days)
            {
                result = "Invalid Date";
            }
            else
            {
                result = "Valid Date";
            }
        }
        if(result == "Valid Date")
        {
            var sInputDate = InputDate.split(" ");
            sInputDate[1] = CapitaliseFirstLetter(sInputDate[1]);
            result = sInputDate[0] + " " + sInputDate[1] + " " + sInputDate[2];
        }
        return result;
    }

    function CapitaliseFirstLetter(string)
    {
        var result = string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
        return result;
    }

    function IdentifyConfiguration(nRowIndex,InputControl) //Identify what will be the parameter of function "AddVoucherDetail"
    {
        debugger;
        //VoucherDetail = 0
        //CostCenter = 1
        //BillReference = 2
        //ChequeReference = 3
        //InventoryReference = 4
        //SubledgerBill = 5
        //SubledgerCheque = 6
        //OrderReference =7

        var parentIndex = 0;
        var bIsSubLedgerBillApply=false;
        var bIsSubLedgerOrderApply=false;
        var bIsSubLedgerChequeApply=false;
        var oCurrentObj=$("#tblVoucherDetail").data('rows')[nRowIndex];
        var nRowCount=$("#tblVoucherDetail").data('rows').length;
        var getAmounts = GetTotalAmounts();
        getAmounts = getAmounts.split(",");

        if(parseInt(oCurrentObj.ObjTypeInt)===1) //CostCenter = 1
        {
            if(oCurrentObj.IsBTAply || oCurrentObj.IsOrderaAply || oCurrentObj.IsChkAply)
            {
                bIsSubLedgerBillApply=oCurrentObj.IsBTAply;
                bIsSubLedgerOrderApply=oCurrentObj.IsOrderaAply;
                bIsSubLedgerChequeApply=oCurrentObj.IsChkAply;
                parentIndex = nRowIndex;
            }
            else
            {
                for(var i=nRowIndex ; i>=0;i--)
                {
                    if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 0)
                    {
                        parentIndex = i;
                        break;
                    }
                }
            }
        }
        else if(parseInt(oCurrentObj.ObjTypeInt)===5) //SubledgerBill = 5
        {
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1)//CostCenter = 1
                {
                    bIsSubLedgerBillApply=true;
                    parentIndex = i;
                    break;
                }
            }

            var nSLBillGapAmount=0; var nSubledgerBillTotal=0;
            var ParentObj=$("#tblVoucherDetail").data('rows')[parentIndex];
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1 && $("#tblVoucherDetail").data('rows')[i].IsBTAply)//CostCenter = 1
                {
                    break;
                }
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 5 && parseInt($("#tblVoucherDetail").data('rows')[i].CCID)>0)//SubledgerBill = 5
                {
                    nSubledgerBillTotal=nSubledgerBillTotal+ parseFloat(parseFloat($("#tblVoucherDetail").data('rows')[i].Amount));
                }

            }
            nSLBillGapAmount = parseFloat(ParentObj.Amount) - parseFloat(nSubledgerBillTotal);
            nSLBillGapAmount = parseFloat(nSLBillGapAmount.toFixed(2));
            if(nSLBillGapAmount<0)
            {
                nSLBillGapAmount=nSLBillGapAmount*(-1);
            }
            if(nSLBillGapAmount<=0.01)
            {
                bIsSubLedgerBillApply=false;
                if(ParentObj.IsOrderaAply)
                {
                    bIsSubLedgerOrderApply=true;
                }
                else{
                    for(var i=nRowIndex ; i>=0;i--)
                    {
                        if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 0)
                        {
                            parentIndex = i;
                            break;
                        }
                    }
                }
            }
        }
        else if(parseInt(oCurrentObj.ObjTypeInt)===8) //SubledgerOrder = 8
        {
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1)//CostCenter = 1
                {
                    bIsSubLedgerOrderApply=true;
                    parentIndex = i;
                    break;
                }
            }

            var nSLOrderGapAmount=0; var nSubledgerOrderTotal=0;
            var ParentObj=$("#tblVoucherDetail").data('rows')[parentIndex];
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1 && $("#tblVoucherDetail").data('rows')[i].IsOrderaAply)//CostCenter = 1
                {
                    break;
                }
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 8 && parseInt($("#tblVoucherDetail").data('rows')[i].CCID)>0)//SubledgerOrder = 8
                {
                    nSubledgerOrderTotal=nSubledgerOrderTotal+ parseFloat(parseFloat($("#tblVoucherDetail").data('rows')[i].Amount));
                }

            }
            nSLOrderGapAmount = parseFloat(ParentObj.Amount) - parseFloat(nSubledgerOrderTotal);
            nSLOrderGapAmount = parseFloat(nSLOrderGapAmount.toFixed(2));
            if(nSLOrderGapAmount<0)
            {
                nSLOrderGapAmount=nSLOrderGapAmount*(-1);
            }
            if(nSLOrderGapAmount<=0.01)
            {
                bIsSubLedgerOrderApply=false;
                if(ParentObj.IsChkAply)
                {
                    bIsSubLedgerChequeApply=true;
                }
                else{
                    for(var i=nRowIndex ; i>=0;i--)
                    {
                        if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 0)
                        {
                            parentIndex = i;
                            break;
                        }
                    }
                }
            }
        }
        else if(parseInt(oCurrentObj.ObjTypeInt)===6) //SubledgerCheque = 6
        {
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1)//CostCenter = 1
                {
                    bIsSubLedgerChequeApply=true;
                    parentIndex = i;
                    break;
                }
            }

            var nSLChequeGapAmount=0; var nSubledgerChequeTotal=0;
            var ParentObj=$("#tblVoucherDetail").data('rows')[parentIndex];
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1 && $("#tblVoucherDetail").data('rows')[i].IsChkAply)//CostCenter = 1
                {
                    break;
                }
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 6 && parseInt($("#tblVoucherDetail").data('rows')[i].CCID)>0)//SubledgerCheque = 6
                {
                    nSubledgerChequeTotal=nSubledgerChequeTotal+ parseFloat(parseFloat($("#tblVoucherDetail").data('rows')[i].Amount))
                }
            }
            nSLChequeGapAmount = parseFloat(ParentObj.Amount) - parseFloat(nSubledgerChequeTotal);
            nSLChequeGapAmount = parseFloat(nSLChequeGapAmount.toFixed(2));
            if(nSLChequeGapAmount<0)
            {
                nSLChequeGapAmount=nSLChequeGapAmount*(-1);
            }
            if(nSLChequeGapAmount<=0.01)
            {
                for(var i=nRowIndex ; i>=0;i--)
                {
                    if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 0)
                    {
                        bIsSubLedgerChequeApply=false;
                        parentIndex = i;
                        break;
                    }
                }
            }
        }
        else
        {
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 0)
                {
                    parentIndex = i;
                    break;
                }
            }
        }


        var ParentObj=$("#tblVoucherDetail").data('rows')[parentIndex];
        var bIsCostCenterApply = ParentObj.IsCCAply;
        var bIsBillRefApply = ParentObj.IsBTAply;
        var bIsChequeApply = ParentObj.IsChkAply;
        var bIsInventoryApply = ParentObj.IsIRAply;
        var bIsOrderaAply = ParentObj.IsOrderaAply;

        var nCCGapAmount = parseFloat(parseFloat(getAmounts[0]).toFixed(2)) - parseFloat(parseFloat(getAmounts[1]).toFixed(2));
        nCCGapAmount = parseFloat(nCCGapAmount.toFixed(2));
        if(nCCGapAmount<0)
        {
            nCCGapAmount=nCCGapAmount*(-1);
        }

        var nSLBillGapAmount=0; var nSubledgerBillTotal=0;
        if(bIsSubLedgerBillApply)
        {
            debugger;
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt(oCurrentObj.ObjTypeInt)===1 || parseInt(oCurrentObj.ObjTypeInt)===5) //CostCenter = 1, SubledgerBill = 5
                {
                    if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1 && $("#tblVoucherDetail").data('rows')[i].IsBTAply)//CostCenter = 1
                    {
                        break;
                    }
                    if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 5 && parseInt($("#tblVoucherDetail").data('rows')[i].CCID)>0)//SubledgerBill = 5
                    {
                        nSubledgerBillTotal=nSubledgerBillTotal+ parseFloat(parseFloat($("#tblVoucherDetail").data('rows')[i].Amount))
                    }
                }
            }
            nSLBillGapAmount = parseFloat(ParentObj.Amount) - parseFloat(nSubledgerBillTotal);
            nSLBillGapAmount = parseFloat(nSLBillGapAmount.toFixed(2));
            if(nSLBillGapAmount<0)
            {
                nSLBillGapAmount=nSLBillGapAmount*(-1);
            }
        }

        var nSLOrderGapAmount=0; var nSubledgerOrderTotal=0;
        if(bIsSubLedgerOrderApply)
        {
            debugger;
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt(oCurrentObj.ObjTypeInt)===1 || parseInt(oCurrentObj.ObjTypeInt)===8) //CostCenter = 1, SubledgerOrder = 8
                {
                    if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1 && $("#tblVoucherDetail").data('rows')[i].IsOrderaAply)//CostCenter = 1
                    {
                        break;
                    }
                    if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 8 && parseInt($("#tblVoucherDetail").data('rows')[i].CCID)>0)//SubledgerOrder = 8
                    {
                        nSubledgerOrderTotal=nSubledgerOrderTotal+ parseFloat(parseFloat($("#tblVoucherDetail").data('rows')[i].Amount))
                    }
                }
            }
            nSLOrderGapAmount = parseFloat(ParentObj.Amount) - parseFloat(nSubledgerOrderTotal);
            nSLOrderGapAmount = parseFloat(nSLOrderGapAmount.toFixed(2));
            if(nSLOrderGapAmount<0)
            {
                nSLOrderGapAmount=nSLOrderGapAmount*(-1);
            }
        }

        var nSLChequeGapAmount=0; var nSubledgerChequeTotal=0;
        if(bIsSubLedgerChequeApply)
        {
            debugger;
            for(var i=nRowIndex ; i>=0;i--)
            {
                if(parseInt(oCurrentObj.ObjTypeInt)===1 || parseInt(oCurrentObj.ObjTypeInt)===6) //CostCenter = 1, SubledgerCheque = 6
                {
                    if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 1 && $("#tblVoucherDetail").data('rows')[i].IsChkAply)//CostCenter = 1
                    {
                        break;
                    }
                    if(parseInt($("#tblVoucherDetail").data('rows')[i].ObjTypeInt) === 6 && parseInt($("#tblVoucherDetail").data('rows')[i].CCID)>0)//SubledgerCheque = 6
                    {
                        nSubledgerChequeTotal=nSubledgerChequeTotal+ parseFloat(parseFloat($("#tblVoucherDetail").data('rows')[i].Amount))
                    }
                }

            }
            nSLChequeGapAmount = parseFloat(ParentObj.Amount) - parseFloat(nSubledgerChequeTotal);
            nSLChequeGapAmount = parseFloat(nSLChequeGapAmount.toFixed(2));
            if(nSLChequeGapAmount<0)
            {
                nSLChequeGapAmount=nSLChequeGapAmount*(-1);
            }
        }

        var nBTGapAmount = parseFloat(parseFloat(getAmounts[0]).toFixed(2)) - parseFloat(parseFloat(getAmounts[2]).toFixed(2));
        nBTGapAmount = parseFloat(nBTGapAmount.toFixed(2));
        if(nBTGapAmount<0)
        {
            nBTGapAmount=nBTGapAmount*(-1);
        }

        var nChkGapAmount = parseFloat(parseFloat(getAmounts[0]).toFixed(2)) - parseFloat(parseFloat(getAmounts[3]).toFixed(2));
        nChkGapAmount = parseFloat(nChkGapAmount.toFixed(2));
        if(nChkGapAmount<0)
        {
            nChkGapAmount=nChkGapAmount*(-1);
        }

        var nIRGapAmount = parseFloat(parseFloat(getAmounts[0]).toFixed(2)) - parseFloat(parseFloat(getAmounts[4]).toFixed(2));
        nIRGapAmount = parseFloat(nIRGapAmount.toFixed(2));
        if(nIRGapAmount<0)
        {
            nIRGapAmount=nIRGapAmount*(-1);
        }

        var nOrderGapAmount = parseFloat(parseFloat(getAmounts[0]).toFixed(2)) - parseFloat(parseFloat(getAmounts[5]).toFixed(2));
        nOrderGapAmount = parseFloat(nOrderGapAmount.toFixed(2));
        if(nOrderGapAmount<0)
        {
            nOrderGapAmount=nOrderGapAmount*(-1);
        }


        if(bIsCostCenterApply == Boolean(1) && parseFloat(nCCGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 1,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nExplanationType=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nExplanationType!=1)
                {
                    var oVDObjs = PushObject(nRowIndex, 1,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleCostCenter(InputControl);
        }
        else if(bIsSubLedgerBillApply == Boolean(1) && parseFloat(nSLBillGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 5,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nObjTypeInt!=5)
                {
                    var oVDObjs = PushObject(nRowIndex, 5,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleBillTransaction(InputControl);
        }
        else if(bIsSubLedgerOrderApply == Boolean(1) && parseFloat(nSLOrderGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 8,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nObjTypeInt!=8)
                {
                    var oVDObjs = PushObject(nRowIndex, 8,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleOrderRef(InputControl);
        }
        else if(bIsBillRefApply == Boolean(1) && parseFloat(nBTGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 2,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nObjTypeInt!=2)
                {
                    var oVDObjs = PushObject(nRowIndex, 2,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleBillTransaction(InputControl);
        }
        else if(bIsSubLedgerChequeApply == Boolean(1) && parseFloat(nSLChequeGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 6,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nObjTypeInt!=6)
                {
                    var oVDObjs = PushObject(nRowIndex, 6,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleChequeReference(InputControl);
        }
        else if(bIsChequeApply == Boolean(1) && parseFloat(nChkGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 3,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nObjTypeInt!=3)
                {
                    var oVDObjs = PushObject(nRowIndex, 3,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleChequeReference(InputControl);
        }
        else if(bIsInventoryApply == Boolean(1) && parseFloat(nIRGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 4,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nObjTypeInt!=4)
                {
                    var oVDObjs = PushObject(nRowIndex, 4,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleInventoryReference(InputControl);
        }
        else if(bIsOrderaAply == Boolean(1) && parseFloat(nOrderGapAmount)>0.01)
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 7,ParentObj);
                RemakeGrid(oVDObjs);
            }
            else
            {
                var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
                if(nObjTypeInt!=7)
                {
                    var oVDObjs = PushObject(nRowIndex, 7,ParentObj);
                    RemakeGrid(oVDObjs);
                }
            }
            ResetAllRows();
            GridStyleOrderRef(InputControl);
        }
        else
        {
            if(nRowIndex==nRowCount-1)
            {
                var oVDObjs = PushObject(nRowIndex, 0);
                RemakeGrid(oVDObjs);
            }
            ResetAllRows();
            GridStyleVoucherDetail(InputControl);
        }
    }

    function IdentifyConfigurationOld(nRowIndex,InputControl) //Identify what will be the parameter of function "AddVoucherDetail"
    {
        //debugger;
        ////VoucherDetail = 0
        ////CostCenter = 1
        ////BillReference = 2
        ////ChequeReference = 3
        ////InventoryReference = 4
        ////SubledgerBill = 5
        ////SubledgerCheque = 6
        ////OrderReference =7

        //var nRowCount=$("#tblVoucherDetail").data('rows').length;
        //var getAmounts = GetTotalAmounts();
        //getAmounts = getAmounts.split(",");
        //var parentIndex = 0;
        //for(var i=nRowIndex ; i>=0;i--)
        //{
        //    if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
        //    {
        //        parentIndex = i;
        //        break;
        //    }
        //    else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
        //    {
        //        parentIndex = i;
        //        break;
        //    }
        //}
        //var bIsCostCenterApply = $("#tblVoucherDetail").data('rows')[parentIndex].IsCCAply;
        //var bIsBillRefApply = $("#tblVoucherDetail").data('rows')[parentIndex].IsBTAply;
        //var bIsInventoryApply = $("#tblVoucherDetail").data('rows')[parentIndex].IsIRAply;

        //var nCCGapAmount = parseFloat(parseFloat(getAmounts[0]).toFixed(2)) - parseFloat(parseFloat(getAmounts[1]).toFixed(2));
        //nCCGapAmount = parseFloat(nCCGapAmount.toFixed(2));
        //if(nCCGapAmount<0)
        //{
        //    nCCGapAmount=nCCGapAmount*(-1);
        //}

        //var nBTGapAmount = parseFloat(parseFloat(getAmounts[0]).toFixed(2)) - parseFloat(parseFloat(getAmounts[2]).toFixed(2));
        //nBTGapAmount = parseFloat(nBTGapAmount.toFixed(2));
        //if(nBTGapAmount<0)
        //{
        //    nBTGapAmount=nBTGapAmount*(-1);
        //}

        //var nVRGapAmount = parseFloat(parseFloat(getAmounts[0]).toFixed(2)) - parseFloat(parseFloat(getAmounts[3]).toFixed(2));
        //nVRGapAmount = parseFloat(nVRGapAmount.toFixed(2));
        //if(nVRGapAmount<0)
        //{
        //    nVRGapAmount=nVRGapAmount*(-1);
        //}

        //var nIRGapAmount = parseFloat(parseFloat(getAmounts[0]).toFixed(2)) - parseFloat(parseFloat(getAmounts[4]).toFixed(2));
        //nIRGapAmount = parseFloat(nIRGapAmount.toFixed(2));
        //if(nIRGapAmount<0)
        //{
        //    nIRGapAmount=nIRGapAmount*(-1);
        //}


        //if(bIsCostCenterApply == Boolean(1) && parseFloat(nCCGapAmount)>0.01)
        //{
        //    if(nRowIndex==nRowCount-1)
        //    {
        //        var oVDObjs = PushObject(nRowIndex, 1);
        //        RemakeGrid(oVDObjs);
        //    }
        //    else
        //    {
        //        var nExplanationType=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
        //        if(nExplanationType!=1)
        //        {
        //            var oVDObjs = PushObject(nRowIndex, 1);
        //            RemakeGrid(oVDObjs);
        //        }
        //    }
        //    ResetAllRows();
        //    GridStyleCostCenter(InputControl);
        //}
        //else if(bIsBillRefApply == Boolean(1) && parseFloat(nBTGapAmount)>0.01)
        //{
        //    if(nRowIndex==nRowCount-1)
        //    {
        //        var oVDObjs = PushObject(nRowIndex, 2);
        //        RemakeGrid(oVDObjs);
        //    }
        //    else
        //    {
        //        var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
        //        if(nObjTypeInt!=2)
        //        {
        //            var oVDObjs = PushObject(nRowIndex, 2);
        //            RemakeGrid(oVDObjs);
        //        }
        //    }
        //    ResetAllRows();
        //    GridStyleBillTransaction(InputControl);
        //}
        //else if(bIsInventoryApply == Boolean(1) && parseFloat(nIRGapAmount)>0.01)
        //{
        //    if(nRowIndex==nRowCount-1)
        //    {
        //        var oVDObjs = PushObject(nRowIndex, 4);
        //        RemakeGrid(oVDObjs);
        //    }
        //    else
        //    {
        //        var nObjTypeInt=parseInt($("#tblVoucherDetail").data('rows')[nRowIndex+1].ObjTypeInt);
        //        if(nObjTypeInt!=4)
        //        {
        //            var oVDObjs = PushObject(nRowIndex, 4);
        //            RemakeGrid(oVDObjs);
        //        }
        //    }
        //    ResetAllRows();
        //    GridStyleInventoryReference(InputControl);
        //}
        //else
        //{
        //    if(nRowIndex==nRowCount-1)
        //    {
        //        var oVDObjs = PushObject(nRowIndex, 0);
        //        RemakeGrid(oVDObjs);
        //    }
        //    ResetAllRows();
        //    GridStyleVoucherDetail(InputControl);
        //}
    }

    function PushObject(nCurrentRowIndex, nExplationType, ParentObj)
    {
        var oVDObjs=[];
        var oTempVDObjs= $("#tblVoucherDetail").data('rows');
        for(var i=0; i<oTempVDObjs.length; i++)
        {
            oVDObjs.push(oTempVDObjs[i]);
            if(i==nCurrentRowIndex)
            {
                var oVDObj=NewObject(nExplationType);
                if(nExplationType===1){
                    oVDObj.AHID=ParentObj==null?0:ParentObj.AHID;
                    oVDObj.AHCode=ParentObj==null?'0000000':ParentObj.AHCode;
                    oVDObj.AHName=ParentObj==null?'':ParentObj.AHName;
                }
                if(nExplationType===2 || nExplationType===5){
                    oVDObj.AHID=ParentObj==null?0:ParentObj.AHID;
                    oVDObj.AHCode=ParentObj==null?'0000000':ParentObj.AHCode;
                    oVDObj.AHName=ParentObj==null?'':ParentObj.AHName;

                    oVDObj.CCID=ParentObj==null?0:ParentObj.CCID;
                    oVDObj.CCCode=ParentObj==null?'0000':ParentObj.CCCode;
                    oVDObj.CCName=ParentObj==null?'':ParentObj.CCName;
                }
                if(nExplationType===3 ||nExplationType===6){
                    oVDObj.CCID=ParentObj==null?0:ParentObj.CCID;
                    oVDObj.CCCode=ParentObj==null?'0000':ParentObj.CCCode;
                    oVDObj.CCName=ParentObj==null?'':ParentObj.CCName;
                }
                if(nExplationType===3 ||nExplationType===6){
                    oVDObj.IsPaidChk=ParentObj.IsPaymentCheque;
                }
                if(nExplationType===7 || nExplationType===8){                    
                    oVDObj.CCID=ParentObj==null?0:ParentObj.CCID;
                    oVDObj.CCCode=ParentObj==null?'0000':ParentObj.CCCode;
                    oVDObj.CCName=ParentObj==null?'':ParentObj.CCName;
                }
                oVDObjs.push(oVDObj);
            }
        }
        return oVDObjs;
    }

    function GetTotalAmounts(sReferenceType)
    {
        var rowCount = $("#tblVoucherDetail").data("selectedIndex");
        var totalCCAmount = 0;
        var totalChequeAmount = 0;
        var totalIRAmount = 0;
        var totalBTAmount = 0;
        var totalOrderAmount = 0;
        var maxAmount = 0;
        for(var i=rowCount;i>=0;i--)
        {
            if(sReferenceType==="SL Bill" || sReferenceType==="SL Cheque" || sReferenceType==="SLOrder Ref")
            {
                if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Subledger" )
                {
                    maxAmount = parseFloat($("#tblVoucherDetail").data('rows')[i].Amount);
                    break;
                }
                else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "SL Bill" && $("#tblVoucherDetail").data('rows')[i].CCID > 0)
                {
                    totalBTAmount = parseFloat(totalBTAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].Amount);
                }
                else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "SLOrder Ref" && $("#tblVoucherDetail").data('rows')[i].CCID > 0)
                {
                    totalOrderAmount = parseFloat(totalOrderAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].Amount);
                }
                else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "SL Cheque" && $("#tblVoucherDetail").data('rows')[i].CCID > 0)
                {
                    totalChequeAmount = parseFloat(totalChequeAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].Amount);
                }                
            }
            else
            {
                if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Subledger" )
                {
                    totalCCAmount = parseFloat(totalCCAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].Amount);
                }
                else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Bill" && $("#tblVoucherDetail").data('rows')[i].CCID <= 0)
                {
                    totalBTAmount = parseFloat(totalBTAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].Amount);
                }
                else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Order Ref" && $("#tblVoucherDetail").data('rows')[i].CCID <= 0)
                {
                    totalOrderAmount = parseFloat(totalOrderAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].Amount);
                }
                else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Cheque" && $("#tblVoucherDetail").data('rows')[i].CCID <= 0)
                {
                    totalChequeAmount = parseFloat(totalChequeAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].Amount);
                }
                else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Inventory" )
                {
                    totalIRAmount = parseFloat(totalIRAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].Amount);
                }
                else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                {
                    maxAmount = parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                    break;
                }
                else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                {
                    maxAmount = parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                    break;
                }
            }            
        }
        totalCCAmount = parseFloat(totalCCAmount.toFixed(2));
        totalBTAmount = parseFloat(totalBTAmount.toFixed(2));        
        totalChequeAmount = parseFloat(totalChequeAmount.toFixed(2));
        totalIRAmount = parseFloat(totalIRAmount.toFixed(2));
        totalOrderAmount = parseFloat(totalOrderAmount.toFixed(2));
        maxAmount = parseFloat(maxAmount.toFixed(2));

        return parseFloat(maxAmount) + ',' + parseFloat(totalCCAmount) + ',' + parseFloat(totalBTAmount) + ','+ parseFloat(totalChequeAmount) + ',' + parseFloat(totalIRAmount) + ',' + parseFloat(totalOrderAmount);
    }

    function AmountCalculation(nRowIndex,ReferenceType,currentAmount)
    {
        var totalRow = $("#tblVoucherDetail tr").length;
        var refAmount = 0;
        var calculateAmounts = GetTotalAmounts(ReferenceType);
        calculateAmounts = calculateAmounts.split(",");
        var previousTotalAmount = 0;
        if(isNaN(currentAmount))
        {
            currentAmount = 0;
        }
        if(ReferenceType == "Subledger")
        {
            previousTotalAmount = parseFloat(calculateAmounts[1]);
        }
        else if(ReferenceType === "Bill" || ReferenceType === "SL Bill")
        {
            previousTotalAmount = parseFloat(calculateAmounts[2]);
        }
        else if(ReferenceType === "Cheque" || ReferenceType === "SL Cheque")
        {
            previousTotalAmount = parseFloat(calculateAmounts[3]);
        }
        else if(ReferenceType == "Inventory")
        {
            previousTotalAmount = parseFloat(calculateAmounts[4]);
        }
        else if(ReferenceType === "Order Ref" || ReferenceType === "SLOrder Ref")
        {
            previousTotalAmount = parseFloat(calculateAmounts[5]);
        }

        var minIndex = 0;
        var maxIndex = 0;

        if(ReferenceType==="SL Bill" || ReferenceType==="SLOrder Ref" || ReferenceType==="SL Cheque")
        {
            for(var i=nRowIndex ; i>=0;i--)
            {
                if($("#tblVoucherDetail").data('rows')[i].DR_CR != ReferenceType)
                {
                    minIndex = i;
                    break;
                }                
            }
            for(var i=nRowIndex ; i < totalRow;i ++)
            {
                if($("#tblVoucherDetail").data('rows')[i].DR_CR != ReferenceType)
                {
                    maxIndex = i;
                    break;
                }
            }
        }
        else
        {
            for(var i=nRowIndex ; i>=0;i--)
            {
                if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                {
                    minIndex = i;
                    break;
                }
                else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                {
                    minIndex = i;
                    break;
                }
            }
            for(var i=nRowIndex ; i < totalRow;i ++)
            {
                if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                {
                    maxIndex = i;
                    break;
                }
                else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                {
                    maxIndex = i;
                    break;
                }
            }
        }

        if(maxIndex == 0)
        {
            maxIndex = totalRow;
        }
        for(var i = minIndex ;  i < maxIndex ; i++)
        {
            if($("#tblVoucherDetail").data('rows')[i].DR_CR == ReferenceType )
            {
                if(i != nRowIndex)
                {
                    refAmount = parseFloat(refAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].Amount);
                }
            }
        }
        var resultAmount =  RemainingDrOrCrAmount(parseFloat(calculateAmounts[0]),parseFloat(refAmount));
        return parseFloat(resultAmount);
    }

    function GridStyleCostCenter(InputControl)
    {
        var nCurrentRowIndex =parseInt(InputControl.attributes["rowIndex"].value);
        var nNextRowIndex =nCurrentRowIndex+1;
        $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
        var nDebitCreditIndex= $('.ccnameclass').index($('#tblVoucherDetail tr').eq(nNextRowIndex).find('input.ccnameclass'));
        ResetAllInputBox(nDebitCreditIndex, '.ccnameclass');
        RefreshSummery();
        InitializeKeyDownEvent(".ccnameclass"); return;
    }

    function GridStyleBillTransaction(InputControl)
    {
        var nCurrentRowIndex =parseInt(InputControl.attributes["rowIndex"].value);
        var nNextRowIndex =nCurrentRowIndex+1;
        $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
        var nDebitCreditIndex= $('.btTrTypeClass').index($('#tblVoucherDetail tr').eq(nNextRowIndex).find('input.btTrTypeClass'));
        ResetAllInputBox(nDebitCreditIndex, '.btTrTypeClass');
        RefreshSummery();
        InitializeKeyDownEvent(".btTrTypeClass"); return;
    }

    function GridStyleChequeReference(InputControl)
    {
        var nCurrentRowIndex =parseInt(InputControl.attributes["rowIndex"].value);
        var nNextRowIndex =nCurrentRowIndex+1;
        $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
        var nExplanationdescriptionIndex= $('.chequenoclass').index($('#tblVoucherDetail tr').eq(nNextRowIndex).find('input.chequenoclass'));
        ResetAllInputBox(nExplanationdescriptionIndex, '.chequenoclass');
        RefreshSummery();
        InitializeKeyDownEvent(".chequenoclass"); return;
    }

    function GridStyleInventoryReference(InputControl)
    {
        var nCurrentRowIndex =parseInt(InputControl.attributes["rowIndex"].value);
        var nNextRowIndex =nCurrentRowIndex+1;
        $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
        var nDebitCreditIndex= $('.irProductClass').index($('#tblVoucherDetail tr').eq(nNextRowIndex).find('input.irProductClass'));
        ResetAllInputBox(nDebitCreditIndex, '.irProductClass');
        RefreshSummery();
        InitializeKeyDownEvent(".irProductClass"); return;
    }

    function GridStyleOrderRef(InputControl)
    {
        var nCurrentRowIndex =parseInt(InputControl.attributes["rowIndex"].value);
        var nNextRowIndex =nCurrentRowIndex+1;
        $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
        var nDebitCreditIndex= $('.refnoclass').index($('#tblVoucherDetail tr').eq(nNextRowIndex).find('input.refnoclass'));
        ResetAllInputBox(nDebitCreditIndex, '.refnoclass');
        RefreshSummery();
        InitializeKeyDownEvent(".refnoclass"); return;
    }

    function GridStyleVoucherDetail(InputControl)
    {
        var nCurrentRowIndex =parseInt(InputControl.attributes["rowIndex"].value);
        var nNextRowIndex =nCurrentRowIndex+1;
        $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
        $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
        var nDebitCreditIndex= $('.debitcreditclass').index($('#tblVoucherDetail tr').eq(nNextRowIndex).find('input.debitcreditclass'));
        ResetAllInputBox(nDebitCreditIndex, '.debitcreditclass');
        RefreshSummery();
        InitializeKeyDownEvent(".debitcreditclass"); return;
    }

    function InitializeEvent()
    {
        $("#tblVoucherDetail tr").click(function() {
            ResetAllRows();
            $(this).addClass("highlight");
            $(this).find('input').addClass("textboxstyle2");
            $("#tblVoucherDetail").data("selectedIndex", this.rowIndex);
            ResetAllInputBox(_nInputBoxIndex, _sInputBoxClass);
        });

        $('.debitcreditclass').keyup(function (e) {
            if (e.which == 67) {
                $(this).val("Credit");
            }
            else if (e.which == 68) {
                $(this).val("Debit");
            }
        });

        $('.debitcreditclass').click(function (e) {
            _nInputBoxIndex = $('.debitcreditclass').index(this);
            _sInputBoxClass='.debitcreditclass';
            InitializeKeyDownEvent(".debitcreditclass"); return;
        });

        $('.accountclass').click(function (e) {
            _nInputBoxIndex = $('.accountclass').index(this);
            _sInputBoxClass='.accountclass';
            InitializeKeyDownEvent(".accountclass"); return;
        });

        $('.narrationclass').click(function (e) {
            _nInputBoxIndex = $('.narrationclass').index(this);
            _sInputBoxClass='.narrationclass';
            InitializeKeyDownEvent(".narrationclass"); return;
        });

        $('.currencyclass').click(function (e) {
            _nInputBoxIndex = $('.currencyclass').index(this);
            _sInputBoxClass='.currencyclass';
            InitializeKeyDownEvent(".currencyclass"); return;
        });

        $('.debitclass').click(function (e) {
            _nInputBoxIndex = $('.debitclass').index(this);
            _sInputBoxClass='.debitclass';
            InitializeKeyDownEvent(".debitclass"); return;
        });

        $('.creditclass').click(function (e) {
            _nInputBoxIndex = $('.creditclass').index(this);
            _sInputBoxClass='.creditclass';
            InitializeKeyDownEvent(".creditclass"); return;
        });

        $('.vrdescriptionclass').click(function (e) {
            _nInputBoxIndex = $('.vrdescriptionclass').index(this);
            _sInputBoxClass='.vrdescriptionclass';
            InitializeKeyDownEvent(".vrdescriptionclass"); return;
        });

        $('.vramountclass').click(function (e) {
            _nInputBoxIndex = $('.vramountclass').index(this);
            _sInputBoxClass='.vramountclass';
            InitializeKeyDownEvent(".vramountclass"); return;
        });

        $('.ccnameclass').click(function (e) {
            _nInputBoxIndex = $('.ccnameclass').index(this);
            _sInputBoxClass='.ccnameclass';
            InitializeKeyDownEvent(".ccnameclass"); return;
        });

        $('.ccdescriptionclass').click(function (e) {
            _nInputBoxIndex = $('.ccdescriptionclass').index(this);
            _sInputBoxClass='.ccdescriptionclass';
            InitializeKeyDownEvent(".ccdescriptionclass"); return;
        });

        $('.ccamountclass').click(function (e) {
            _nInputBoxIndex = $('.ccamountclass').index(this);
            _sInputBoxClass='.ccamountclass';
            InitializeKeyDownEvent(".ccamountclass"); return;
        });

        $('.irProductClass').click(function (e) {
            _nInputBoxIndex = $('.irProductClass').index(this);
            _sInputBoxClass='.irProductClass';
            InitializeKeyDownEvent(".irProductClass"); return;
        });

        $('.irWorkingUnitClass').click(function (e) {
            _nInputBoxIndex = $('.irWorkingUnitClass').index(this);
            _sInputBoxClass='.irWorkingUnitClass';
            InitializeKeyDownEvent(".irWorkingUnitClass"); return;
        });

        $('.irDateClass').click(function (e) {
            _nInputBoxIndex = $('.irDateClass').index(this);
            _sInputBoxClass='.irDateClass';
            InitializeKeyDownEvent(".irDateClass"); return;
        });

        $('.irMeasurementUnitClass').click(function (e) {
            _nInputBoxIndex = $('.irMeasurementUnitClass').index(this);
            _sInputBoxClass='.irMeasurementUnitClass';
            InitializeKeyDownEvent(".irMeasurementUnitClass"); return;
        });

        $('.irQtyClass').click(function (e) {
            _nInputBoxIndex = $('.irQtyClass').index(this);
            _sInputBoxClass='.irQtyClass';
            InitializeKeyDownEvent(".irQtyClass"); return;
        });

        $('.irUnitPriceClass').click(function (e) {
            _nInputBoxIndex = $('.irUnitPriceClass').index(this);
            _sInputBoxClass='.irUnitPriceClass';
            InitializeKeyDownEvent(".irUnitPriceClass"); return;
        });

        $('.irAmountClass').click(function (e) {
            _nInputBoxIndex = $('.irAmountClass').index(this);
            _sInputBoxClass='.irAmountClass';
            InitializeKeyDownEvent(".irAmountClass"); return;
        });

        $('.btTrTypeClass').click(function (e) {
            _nInputBoxIndex = $('.btTrTypeClass').index(this);
            _sInputBoxClass='.btTrTypeClass';
            InitializeKeyDownEvent(".btTrTypeClass"); return;
        });

        $('.btBillNoClass').click(function (e) {
            _nInputBoxIndex = $('.btBillNoClass').index(this);
            _sInputBoxClass='.btBillNoClass';
            InitializeKeyDownEvent(".btBillNoClass"); return;
        });

        $('.btBillDateClass').click(function (e) {
            _nInputBoxIndex = $('.btBillDateClass').index(this);
            _sInputBoxClass='.btBillDateClass';
            InitializeKeyDownEvent(".btBillDateClass"); return;
        });

        $('.btBillAmountClass').click(function (e) {
            _nInputBoxIndex = $('.btBillAmountClass').index(this);
            _sInputBoxClass='.btBillAmountClass';
            InitializeKeyDownEvent(".btBillAmountClass"); return;
        });

        $('.btAmountClass').click(function (e) {
            _nInputBoxIndex = $('.btAmountClass').index(this);
            _sInputBoxClass='.btAmountClass';
            InitializeKeyDownEvent(".btAmountClass"); return;
        });

        $('.chequenoclass').keyup(function (e) {
            if (e.which == 67) {
                $(this).val("Cash");
            }
            else if (e.which == 84) {
                $(this).val("Transfer");
            }
        });

        $('.chequenoclass').click(function (e) {
            _nInputBoxIndex = $('.chequenoclass').index(this);
            _sInputBoxClass='.chequenoclass';
            InitializeKeyDownEvent(".chequenoclass"); return;
        });

        $('.chequedateclass').click(function (e) {
            _nInputBoxIndex = $('.chequedateclass').index(this);
            _sInputBoxClass='.chequedateclass';
            InitializeKeyDownEvent(".chequedateclass"); return;
        });

        $('.banknameclass').click(function (e) {
            _nInputBoxIndex = $('.banknameclass').index(this);
            _sInputBoxClass='.banknameclass';
            InitializeKeyDownEvent(".banknameclass"); return;
        });

        $('.branchnameclass').click(function (e) {
            _nInputBoxIndex = $('.branchnameclass').index(this);
            _sInputBoxClass='.branchnameclass';
            InitializeKeyDownEvent(".branchnameclass"); return;
        });

        $('.accountnoclass').click(function (e) {
            _nInputBoxIndex = $('.accountnoclass').index(this);
            _sInputBoxClass='.accountnoclass';
            InitializeKeyDownEvent(".accountnoclass"); return;
        });

        $('.chequeamountclass').click(function (e) {
            _nInputBoxIndex = $('.chequeamountclass').index(this);
            _sInputBoxClass='.chequeamountclass';
            InitializeKeyDownEvent(".chequeamountclass"); return;
        });

        $('.refnoclass').click(function (e) {
            _nInputBoxIndex = $('.refnoclass').index(this);
            _sInputBoxClass='.refnoclass';
            InitializeKeyDownEvent(".refnoclass"); return;
        });

        $('.orderremarksclass').click(function (e) {
            _nInputBoxIndex = $('.orderremarksclass').index(this);
            _sInputBoxClass='.orderremarksclass';
            InitializeKeyDownEvent(".orderremarksclass"); return;
        });

        $('.orderamountclass').click(function (e) {
            _nInputBoxIndex = $('.orderamountclass').index(this);
            _sInputBoxClass='.orderamountclass';
            InitializeKeyDownEvent(".orderamountclass"); return;
        });


        ////number allow only numeric value
        $(".vramountclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".ccamountclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".irQtyClass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".irUnitPriceClass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".irAmountClass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".btBillAmountClass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".btAmountClass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $("#txtConversionRate").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $("#txtBaseCurrencyAmount").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $("#txtCurrencyAmount").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".chequeamountclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $(".orderamountclass").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });
    }

    function ResetAllRows()
    {
        var tblVoucherDetail=document.getElementById("tblVoucherDetail");
        if(tblVoucherDetail.rows!=null)
        {
            for(var i=0; i<tblVoucherDetail.rows.length; i++)
            {
                $('#tblVoucherDetail tr').eq(i).removeClass("highlight");
                $('#tblVoucherDetail tr').eq(i).find('input').removeClass("textboxstyle2");
            }
        }
    }

    function ResetAllInputBox(index, sClass)
    {
        for(var i=0; i<$('.debitcreditclass').length; i++)
        {
            $('.debitcreditclass').eq(i).removeClass("highlight");
            $('.debitcreditclass').eq(i).removeClass("textboxstyle");

            $('.accountclass').eq(i).removeClass("highlight");
            $('.accountclass').eq(i).removeClass("textboxstyle");

            $('.narrationclass').eq(i).removeClass("highlight");
            $('.narrationclass').eq(i).removeClass("textboxstyle");

            $('.currencyclass').eq(i).removeClass("highlight");
            $('.currencyclass').eq(i).removeClass("textboxstyle");

            $('.debitclass').eq(i).removeClass("highlight");
            $('.debitclass').eq(i).removeClass("textboxstyle");

            $('.creditclass').eq(i).removeClass("highlight");
            $('.creditclass').eq(i).removeClass("textboxstyle");

            $('.delClass').eq(i).removeClass("highlight");
            $('.delClass').eq(i).removeClass("textboxstyle");
        }

        for(var i=0; i<$('.vrdescriptionclass').length; i++)
        {
            $('.vrdescriptionclass').eq(i).removeClass("highlight");
            $('.vrdescriptionclass').eq(i).removeClass("textboxstyle");

            $('.vramountclass').eq(i).removeClass("highlight");
            $('.vramountclass').eq(i).removeClass("textboxstyle");

            $('.delClass').eq(i).removeClass("highlight");
            $('.delClass').eq(i).removeClass("textboxstyle");

        }
        for(var i=0; i<$('.ccnameclass').length; i++)
        {
            $('.debitcreditclass').eq(i).removeClass("highlight");
            $('.debitcreditclass').eq(i).removeClass("textboxstyle");

            $('.ccnameclass').eq(i).removeClass("highlight");
            $('.ccnameclass').eq(i).removeClass("textboxstyle");

            $('.ccdescriptionclass').eq(i).removeClass("highlight");
            $('.ccdescriptionclass').eq(i).removeClass("textboxstyle");

            $('.ccamountclass').eq(i).removeClass("highlight");
            $('.ccamountclass').eq(i).removeClass("textboxstyle");

            $('.delClass').eq(i).removeClass("highlight");
            $('.delClass').eq(i).removeClass("textboxstyle");
        }
        for(var i=0; i<$('.btTrTypeClass').length; i++)
        {
            $('.debitcreditclass').eq(i).removeClass("highlight");
            $('.debitcreditclass').eq(i).removeClass("textboxstyle");

            $('.btTrTypeClass').eq(i).removeClass("highlight");
            $('.btTrTypeClass').eq(i).removeClass("textboxstyle");

            $('.btBillNoClass').eq(i).removeClass("highlight");
            $('.btBillNoClass').eq(i).removeClass("textboxstyle");

            $('.btBillDateClass').eq(i).removeClass("highlight");
            $('.btBillDateClass').eq(i).removeClass("textboxstyle");

            $('.btBillAmountClass').eq(i).removeClass("highlight");
            $('.btBillAmountClass').eq(i).removeClass("textboxstyle");

            $('.btAmountClass').eq(i).removeClass("highlight");
            $('.btAmountClass').eq(i).removeClass("textboxstyle");

            $('.delClass').eq(i).removeClass("highlight");
            $('.delClass').eq(i).removeClass("textboxstyle");
        }
        for(var i=0; i<$('.irProductClass').length; i++)
        {
            $('.debitcreditclass').eq(i).removeClass("highlight");
            $('.debitcreditclass').eq(i).removeClass("textboxstyle");

            $('.irProductClass').eq(i).removeClass("highlight");
            $('.irProductClass').eq(i).removeClass("textboxstyle");

            $('.irWorkingUnitClass').eq(i).removeClass("highlight");
            $('.irWorkingUnitClass').eq(i).removeClass("textboxstyle");

            $('.irDateClass').eq(i).removeClass("highlight");
            $('.irDateClass').eq(i).removeClass("textboxstyle");

            $('.irMeasurementUnitClass').eq(i).removeClass("highlight");
            $('.irMeasurementUnitClass').eq(i).removeClass("textboxstyle");

            $('.irQtyClass').eq(i).removeClass("highlight");
            $('.irQtyClass').eq(i).removeClass("textboxstyle");

            $('.irUnitPriceClass').eq(i).removeClass("highlight");
            $('.irUnitPriceClass').eq(i).removeClass("textboxstyle");

            $('.irAmountClass').eq(i).removeClass("highlight");
            $('.irAmountClass').eq(i).removeClass("textboxstyle");

            $('.delClass').eq(i).removeClass("highlight");
            $('.delClass').eq(i).removeClass("textboxstyle");
        }

        for(var i=0; i<$('.chequenoclass').length; i++)
        {
            $('.chequenoclass').eq(i).removeClass("highlight");
            $('.chequenoclass').eq(i).removeClass("textboxstyle");

            $('.chequedateclass').eq(i).removeClass("highlight");
            $('.chequedateclass').eq(i).removeClass("textboxstyle");

            $('.banknameclass').eq(i).removeClass("highlight");
            $('.banknameclass').eq(i).removeClass("textboxstyle");

            $('.branchnameclass').eq(i).removeClass("highlight");
            $('.branchnameclass').eq(i).removeClass("textboxstyle");

            $('.accountnoclass').eq(i).removeClass("highlight");
            $('.accountnoclass').eq(i).removeClass("textboxstyle");

            $('.chequeamountclass').eq(i).removeClass("highlight");
            $('.chequeamountclass').eq(i).removeClass("textboxstyle");
        }


        for(var i=0; i<$('.refnoclass').length; i++)
        {
            $('.refnoclass').eq(i).removeClass("highlight");
            $('.refnoclass').eq(i).removeClass("textboxstyle");

            $('.ordernoclass').eq(i).removeClass("highlight");
            $('.ordernoclass').eq(i).removeClass("textboxstyle");

            $('.orderremarksclass').eq(i).removeClass("highlight");
            $('.orderremarksclass').eq(i).removeClass("textboxstyle");

            $('.orderamountclass').eq(i).removeClass("highlight");
            $('.orderamountclass').eq(i).removeClass("textboxstyle");
        }

        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('input').addClass("highlight");
        $(sClass).eq(index).removeClass("textboxstyle2");
        $(sClass).eq(index).addClass("textboxstyle");
        $(sClass).eq(index).show();
        $(sClass).eq(index).focus();
        $(sClass).eq(index).select();

    }

    function RefreshAccountHeadLedger(oLedgerHeads)
    {
        //Load Ledger List
        _oLedgerHeads=oLedgerHeads;
        data = _oLedgerHeads.sort(compare);
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblLedgerHead').datagrid('loadData', data);
    }

    function compare(a,b)
    {
        if (a.AccountHeadName < b.AccountHeadName)
            return -1;
        if (a.AccountHeadName > b.AccountHeadName)
            return 1;
        return 0;
    }

    function RefreshSummery()
    {
        var nTotalDebitAmount=0; var nTotalCreditAmount=0;
        var oVDObjs= $("#tblVoucherDetail").data('rows');
        if(oVDObjs==null)oVDObjs=[];
        for(var i=0; i<oVDObjs.length; i++)
        {
            nTotalDebitAmount=nTotalDebitAmount+ parseFloat(oVDObjs[i].DrAmount)
            nTotalCreditAmount=nTotalCreditAmount+parseFloat(oVDObjs[i].CrAmount);
        }
        document.getElementById('lblTotalDebitAmount').innerHTML =formatPrice(nTotalDebitAmount, null) ;
        document.getElementById('lblTotalCreditAmount').innerHTML =formatPrice(nTotalCreditAmount, null);
    }

    function NewObject(nObjType)
    {
        //VoucherDetail = 0
        //CostCenter = 1
        //BillReference = 2
        //ChequeReference = 3
        //InventoryReference = 4
        //SubledgerBill = 5
        var sDR_CR="";
        if(nObjType==0)
        {
            sDR_CR= 'Debit';
        }
        else if(nObjType==1)
        {
            sDR_CR= 'Subledger';
        }
        else if(nObjType==2)
        {
            sDR_CR= 'Bill';
        }
        else if(nObjType==3)
        {
            sDR_CR= 'Cheque';
        }
        else if(nObjType==4)
        {
            sDR_CR= 'Inventory';
        }
        else if(nObjType==5)
        {
            sDR_CR= 'SL Bill';
        }
        else if(nObjType==6)
        {
            sDR_CR= 'SL Cheque';
        }
        else if(nObjType==7)
        {
            sDR_CR= 'Order Ref';
        }
        else if(nObjType==8)
        {
            sDR_CR= 'SLOrder Ref';
        }

        var oVDObj = {
            VDObjID :0,
            DR_CR : sDR_CR,
            BUID: parseInt($('#cboBusinessUnit').val()),
            AID:0,
            ZID:0,
            SID:0,
            PID:0,
            DptID:0,
            AHID:0,   //new
            CID :0,
            CAmount :0,
            CRate :0,
            Amount :0,
            IsDr :true,
            Detail :'',
            AHCode:"0000000", //new
            AHName:"",        //new
            CName :'',
            CSymbol :'',
            ACode:"00",
            AName:"",
            ASName:"",
            ZCode:"00",
            ZName:"",
            ZSName:"",
            SCode:"0000",
            SName:"",
            SSName:"",
            PCode:"00000",
            PName:"",
            PSName:"",
            DCode:"00",
            DName:"",
            DSName:"",
            DrAmount :0,
            CrAmount :0,
            BCDrAmount:0,
            BCCrAmount:0,
            IsAEfct : true,
            IsZEfct : false,
            IsSEfct : false,

            //for CostCenter Transaction
            CCID : 0,
            CCCode : "0000",
            CCName : "",

            //For Bill Reference
            BillID : 0,
            BillDate : icsdateformat(new Date()),
            TrTypeInt : 0,
            TrTypeStr : "",
            BillNo : "",
            BillDateStr : "",
            BillAmount: 0,

            //Cheque Reference
            ChequeID : 0,
            ChequeNo : "",
            ChequeType: 0,
            ChequeDate : icsdateformat(new Date()),
            BankName : "Bank",
            BranchName : "Branch",
            AccountNo : "Account No",
            ChequeDateStr:"Date",

            //Inventory Reference
            WUID : 0,
            WUName : "",
            MUID : 0,
            MUName : "",
            Qty : 0,
            UPrice : 0,


            //Order Reference
            OrderID :0,
            RefNo :"",
            OrderNo:"",
            ORemarks :"",

            //Common
            IsCCAply : false,
            IsBTAply : false,
            IsChkAply : false,
            IsIRAply : false,
            IsOrderaAply : false,
            IsPaidChk : false,
            ObjTypeInt : nObjType,
            CFormat : '',
            AccountCode : "00.00.00.0000.00000.00.0000000"
        };
        return oVDObj;
    }

    function RemakeGrid(oVDObjs)
    {
        $("#tblVoucherDetail").find("tr").remove();
        $('#tblVoucherDetail').data('rows', []);
        for(var i=0; i<oVDObjs.length;i++)
        {
            AddVoucherDetail(oVDObjs[i]);
        }
    }

    function AddVoucherDetail(oVDObj)
    {
        //VoucherDetail = 0
        //CostCenter = 1
        //BillReference = 2
        //ChequeReference = 3
        //InventoryReference = 4
        //SubledgerBill = 5
        //SubledgerCheque = 6
        //OrderReference =7
        //SLOrderReference =8
        var nRowIndex=0;
        var oVDObjs = $('#tblVoucherDetail').data('rows');
        if(oVDObjs=='undefined' || oVDObjs==null||oVDObjs.length<=0)
        {
            nRowIndex=0;
            oVDObjs =[];
        }
        else
        {
            nRowIndex=oVDObjs.length;
        }
        oVDObjs.push(oVDObj);
        $('#tblVoucherDetail').data('rows', oVDObjs);
        var table = document.getElementById('tblVoucherDetail');
        var row = table.insertRow(nRowIndex);
        if(oVDObj.ObjTypeInt == 0)
        {
            var cellDel = row.insertCell(0);
            cellDel.width= "3%";
            cellDel.innerHTML = '<label id="delClass'+nRowIndex+'" rowIndex="'+nRowIndex+'"onclick="DeleteRow('+nRowIndex+');"  class="delClass" style="width:95%;color:#c00;cursor:pointer;" >X</label>';

            var cellDebitCredit = row.insertCell(1);
            cellDebitCredit.width= "7%";
            cellDebitCredit.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+ oVDObj.DR_CR +'" class="debitcreditclass" style="width:95%""/>';

            var cellAccountHead = row.insertCell(2);
            cellAccountHead.colSpan= 2;
            cellAccountHead.width= "20%";
            cellAccountHead.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.AHName+'" class="accountclass" style="width:98%" />';

            var cellAccountCode = row.insertCell(3);
            cellAccountCode.width= "12%";
            cellAccountCode.innerHTML = '<span style="font-size:11px">'+oVDObj.AHCode+'</span>';

            var cellNarration = row.insertCell(4);
            cellNarration.colSpan= 2;
            cellNarration.width= "18%";
            cellNarration.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.Detail+'" class="narrationclass" style="width:98%" />';

            var cellCurrency = row.insertCell(5);
            cellCurrency.colSpan= 2;
            cellCurrency.width= "20%";
            cellCurrency.innerHTML = '<label id="currencyclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" class="currencyclass" style="width:98%" placeholder="Currency">'+oVDObj.CFormat+'</label>';

            var cellDebitAmount = row.insertCell(6);
            cellDebitAmount.width= "10%";
            cellDebitAmount.innerHTML = '<input type="text" id="debitclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.DrAmount,null)+'" class="debitclass" style="width:98%" />';

            var cellCreditAmount = row.insertCell(7);
            cellCreditAmount.width= "10%";
            cellCreditAmount.innerHTML = '<input type="text" id="creditclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.CrAmount,null)+'" class="creditclass" style="width:98%" />';

            $(".delClass").parent().css("text-align","center");
            $("#currencyclass"+nRowIndex).parent().css("text-align","right");

        }
        else if(oVDObj.ObjTypeInt == 1)//CostCenter = 1
        {
            var cellDel = row.insertCell(0);
            cellDel.width= "3%";
            cellDel.innerHTML = '<label id="delClass'+nRowIndex+'" rowIndex="'+nRowIndex+'"onclick="DeleteRow('+nRowIndex+');"  class="delClass" style="width:95%;color:#c00;cursor:pointer;" >X</label>';

            var cellDebitCredit = row.insertCell(1);
            cellDebitCredit.width= "7%";
            cellDebitCredit.innerHTML =  oVDObj.DR_CR;

            var cellCCName = row.insertCell(2);
            cellCCName.colSpan= 3;
            cellCCName.width= "30%";
            cellCCName.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.CCName+'" class="ccnameclass" style="width:98%;" placeholder="Cost Center Name"/>';

            var cellCCDescription = row.insertCell(3);
            cellCCDescription.colSpan= 3;
            cellCCDescription.width= "30%";
            cellCCDescription.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.Detail+'" class="ccdescriptionclass" style="width:98%;" placeholder="Description"/>';

            var cellCCAmount = row.insertCell(4);
            cellCCAmount.width= "10%";
            cellCCAmount.innerHTML = '<input type="text" id="ccamountclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.Amount,null)+'" class="ccamountclass" style="width:98%;" placeholder="Amount"/>';

            var cellDebitAmount = row.insertCell(5);
            cellDebitAmount.width= "10%";
            cellDebitAmount.innerHTML = "";

            var cellCreditAmount = row.insertCell(6);
            cellCreditAmount.width= "10%";
            cellCreditAmount.innerHTML = "";

            CheckZero(oVDObj.Amount,"ccamountclass",nRowIndex);
            $(".delClass").parent().css("text-align","center");

        }
        else if(oVDObj.ObjTypeInt == 2 || oVDObj.ObjTypeInt == 5) //BillReference = 2
        {
            var cellDel = row.insertCell(0);
            cellDel.width= "3%";
            cellDel.innerHTML = '<label id="delClass'+nRowIndex+'" rowIndex="'+nRowIndex+'"onclick="DeleteRow('+nRowIndex+');"  class="delClass" style="width:95%;color:#c00;cursor:pointer;" >X</label>';

            var cellDebitCredit = row.insertCell(1);
            cellDebitCredit.width= "7%";
            cellDebitCredit.innerHTML = oVDObj.DR_CR;

            var cellBTTrType = row.insertCell(2);
            cellBTTrType.width= "10%";
            cellBTTrType.innerHTML = '<input type="text" id="btTrTypeClass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+oVDObj.TrTypeStr+'" class="btTrTypeClass" style="width:98%" placeholder="Transaction Type"/>';

            var cellBTBillNo= row.insertCell(3);
            cellBTBillNo.colSpan = 3;
            cellBTBillNo.width= "30%";
            cellBTBillNo.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.BillNo+'" class="btBillNoClass" style="width:98%" placeholder="Bill"/>';

            var cellBTBillDate = row.insertCell(4);
            cellBTBillDate.width= "10%";
            cellBTBillDate.innerHTML = '<label id="btBillDateClass'+nRowIndex+'" class="btBillDateClass">' + oVDObj.BillDateStr + '</label>';

            var cellBTBillAmount = row.insertCell(5);
            cellBTBillAmount.width= "10%";
            cellBTBillAmount.innerHTML = '<label id="btBillAmountClass'+nRowIndex+'" class="btBillAmountClass" >'  + oVDObj.CSymbol  + " " +   formatPrice(oVDObj.CAmount,null) + '</label>';

            var cellBTAmount= row.insertCell(6);
            cellBTAmount.width= "10%";
            cellBTAmount.innerHTML = '<input type="text" id="btAmountClass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.Amount,null)+'" class="btAmountClass" style="width:98%" placeholder="Amount"/>';

            var cellDebitAmount = row.insertCell(7);
            cellDebitAmount.width= "10%";
            cellDebitAmount.innerHTML = "";

            var cellCreditAmount = row.insertCell(8);
            cellCreditAmount.width= "10%";
            cellCreditAmount.innerHTML = "";

            CheckZero(oVDObj.Amount,"btAmountClass",nRowIndex);
            $("#btBillAmountClass"+nRowIndex).parent().css("text-align","right");
            $(".delClass").parent().css("text-align","center");

        }
        else if(oVDObj.ObjTypeInt == 3 || oVDObj.ObjTypeInt == 6)//Cheque Reference = 3
        {

            var cellDel = row.insertCell(0);
            cellDel.width= "3%";
            cellDel.innerHTML = '<label id="delClass'+nRowIndex+'" rowIndex="'+nRowIndex+'"onclick="DeleteRow('+nRowIndex+');"  class="delClass" style="width:96%;color:#c00;cursor:pointer;" >X</label>';

            var cellDebitCredit = row.insertCell(1);
            cellDebitCredit.width= "7%";
            cellDebitCredit.innerHTML = oVDObj.DR_CR;

            var cellChequeNo = row.insertCell(2);            
            cellChequeNo.width= "10%";
            cellChequeNo.innerHTML = '<input type="text" id="chequenoclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+oVDObj.ChequeNo+'" class="chequenoclass" style="width:98%" placeholder="Cheque No"/>';

            var cellAccountNo = row.insertCell(3);
            cellAccountNo.colSpan= 2;
            cellAccountNo.width= "20%";
            cellAccountNo.innerHTML = '<label id="accountnoclass'+nRowIndex+'" class="accountnoclass">' + oVDObj.AccountNo + '</label>';


            var cellBankName = row.insertCell(4);          
            cellBankName.width= "10%";
            cellBankName.innerHTML = '<label id="banknameclass'+nRowIndex+'" class="banknameclass">' + oVDObj.BankName + '</label>';

            var cellBranchName = row.insertCell(5);            
            cellBranchName.width= "10%";
            cellBranchName.innerHTML = '<label id="branchnameclass'+nRowIndex+'" class="branchnameclass">' + oVDObj.BranchName + '</label>';
            
            var cellChequeDate = row.insertCell(6);
            cellChequeDate.width= "10%";
            cellChequeDate.innerHTML = '<label id="chequedateclass'+nRowIndex+'" class="chequedateclass">' + oVDObj.ChequeDateStr + '</label>';

            var cellChequeAmount = row.insertCell(7);
            cellChequeAmount.width= "10%";
            cellChequeAmount.align= "right";
            cellChequeAmount.innerHTML = '<input type="text" id="chequeamountclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.CAmount,null)+'" class="chequeamountclass" style="width:98%" placeholder="Amount"/>';//<label id="'+nRowIndex+'" class="chequeamountclass">' + formatPrice(oVDObj.CAmount,null) + '</label>';

            var cellDebitAmount = row.insertCell(8);
            cellDebitAmount.width= "10%";
            cellDebitAmount.innerHTML = "";

            var cellCreditAmount = row.insertCell(9);
            cellCreditAmount.width= "10%";
            cellCreditAmount.innerHTML = "";

            CheckZero(oVDObj.Amount,"vramountclass",nRowIndex);
            $(".delClass").parent().css("text-align","center");
        }
        else if(oVDObj.ObjTypeInt == 4)
        {
            if(parseFloat(oVDObj.Amount)>0)
            {
                oVDObj.Amount = parseFloat((oVDObj.Amount).toFixed(2));
            }
            var cellDel = row.insertCell(0);
            cellDel.width= "3%";
            cellDel.innerHTML = '<label id="delClass'+nRowIndex+'" rowIndex="'+nRowIndex+'"onclick="DeleteRow('+nRowIndex+');"  class="delClass" style="width:95%;color:#c00;cursor:pointer;" >X</label>';

            var cellDebitCredit = row.insertCell(1);
            cellDebitCredit.width= "7%";
            cellDebitCredit.innerHTML =  oVDObj.DR_CR;

            var cellProduct = row.insertCell(2);
            cellProduct.colSpan= 2;
            cellProduct.width= "20%";
            cellProduct.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.PName+'" class="irProductClass" style="width:98%" placeholder="Product Name"/>';

            var cellWorkingUnit = row.insertCell(3);
            cellWorkingUnit.width= "10%";
            cellWorkingUnit.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.WUName+'" class="irWorkingUnitClass" style="width:98%" placeholder="Working Unit"/>';

            var cellMeasurementUnit = row.insertCell(4);
            cellMeasurementUnit.width= "10%";
            cellMeasurementUnit.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.MUName+'" class="irMeasurementUnitClass" style="width:98%;text-align:center;" placeholder="M.Unit"/>';

            var cellQty = row.insertCell(5);
            cellQty.width= "10%";
            cellQty.innerHTML = '<input type="text" id="irQtyClass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+oVDObj.Qty+'" class="irQtyClass" style="width:98%" placeholder="Qty"/>';

            var cellUnitPrice = row.insertCell(6);
            cellUnitPrice.width= "10%";
            cellUnitPrice.innerHTML = '<input type="text" id="irUnitPriceClass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+oVDObj.UPrice+'" class="irUnitPriceClass" style="width:98%" placeholder="Unit Price"/>';

            var cellAmount = row.insertCell(7);
            cellAmount.width= "10%";
            cellAmount.innerHTML = '<input type="text" id="irAmountClass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+oVDObj.Amount+'" class="irAmountClass" style="width:98%" placeholder="Amount"/>';

            var cellDebitAmount = row.insertCell(8);
            cellDebitAmount.width= "10%";
            cellDebitAmount.innerHTML = "";

            var cellCreditAmount = row.insertCell(9);
            cellCreditAmount.width= "10%";
            cellCreditAmount.innerHTML = "";

            CheckZero(oVDObj.Qty,"irQtyClass",nRowIndex);
            CheckZero(oVDObj.UPrice,"irUnitPriceClass",nRowIndex);
            $("#irUnitPriceClass" + nRowIndex).val((oVDObj.UPrice).toFixed(3));
            $("#irAmountClass"+nRowIndex).parent().css("text-align","right");
            $(".delClass").parent().css("text-align","center");
        }
        else if(oVDObj.ObjTypeInt === 7 || oVDObj.ObjTypeInt === 8)//Order Reference= 7 //SLOrderReference =8
        {
            var cellDel = row.insertCell(0);
            cellDel.width= "3%";
            cellDel.innerHTML = '<label id="delClass'+nRowIndex+'" rowIndex="'+nRowIndex+'"onclick="DeleteRow('+nRowIndex+');"  class="delClass" style="width:95%;color:#c00;cursor:pointer;" >X</label>';

            var cellDebitCredit = row.insertCell(1);
            cellDebitCredit.width= "7%";
            cellDebitCredit.innerHTML =  oVDObj.DR_CR;

            var cellOrderNo = row.insertCell(2);
            cellOrderNo.colSpan= 2;
            cellOrderNo.width= "20%";
            cellOrderNo.innerHTML = '<input type="text" id="refnoclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+oVDObj.RefNo+'" class="refnoclass" style="width:98%;" placeholder="Sales No"/>';

            var cellOrderNo = row.insertCell(3);
            cellOrderNo.colSpan= 2;
            cellOrderNo.width= "20%";
            cellOrderNo.innerHTML = '<label id="ordernoclass'+nRowIndex+'" class="ordernoclass">' + oVDObj.OrderNo + '</label>';
            
            var cellORemarks = row.insertCell(4);
            cellORemarks.colSpan= 2;
            cellORemarks.width= "20%";
            cellORemarks.innerHTML = '<input type="text" rowIndex="'+nRowIndex+'" value="'+oVDObj.ORemarks+'" class="orderremarksclass" style="width:98%;" placeholder="Remarks"/>';

            var cellCCAmount = row.insertCell(5);
            cellCCAmount.width= "10%";
            cellCCAmount.innerHTML = '<input type="text" id="orderamountclass'+nRowIndex+'" rowIndex="'+nRowIndex+'" value="'+formatPrice(oVDObj.CAmount,null)+'" class="orderamountclass" style="width:98%;" placeholder="Amount"/>';

            var cellDebitAmount = row.insertCell(6);
            cellDebitAmount.width= "10%";
            cellDebitAmount.innerHTML = "";

            var cellCreditAmount = row.insertCell(7);
            cellCreditAmount.width= "10%";
            cellCreditAmount.innerHTML = "";

            CheckZero(oVDObj.CAmount,"orderamountclass",nRowIndex);
            $(".delClass").parent().css("text-align","center");
        }
        InitializeEvent();
    }

    function CheckZero(value,className,nRowIndex)
    {
        var idMake = className + nRowIndex;
        if(typeof value === "undefined" || value == "" || value == "NaN" || value == 0)
        {
            $("#"+idMake).removeAttr( "value" );
        }
        else
        {
            $("#"+idMake).attr('value', formatPrice(value,null));
        }
        var returnValue = 0;
        if(className == "irUnitPriceClass")
        {
            returnValue = value;
        }
        else
        {
            returnValue = parseFloat(value);
        }
        return returnValue;
    }

    function CheckNewRecord(debitOrCredit)
    {
        if(debitOrCredit == "Debit" || debitOrCredit == "Credit")
        {
            _totalDebitAmount = 0;
            _totalCreditAmount = 0;
        }
    }

    function RemainingDrOrCrAmount(drOrCrTotalAmount,referenceTotalAmount)
    {
        var remainingAmount = 0;
        remainingAmount = parseFloat(drOrCrTotalAmount)- parseFloat(referenceTotalAmount);
        return parseFloat(remainingAmount);
    }

    function IsDebitCreditEqual()
    {
        var nTotalDebitAmount=0; var nTotalCreditAmount=0;
        var oVDObjs= $("#tblVoucherDetail").data('rows');
        for(var i=0; i<oVDObjs.length; i++)
        {
            nTotalDebitAmount=nTotalDebitAmount+ parseFloat(oVDObjs[i].DrAmount)
            nTotalCreditAmount=nTotalCreditAmount+parseFloat(oVDObjs[i].CrAmount);
        }

        var nGapAmount = parseFloat(nTotalDebitAmount) - parseFloat(nTotalCreditAmount);
        if(nGapAmount<0)
        {
            nGapAmount = (nGapAmount * (-1))
        }
        if(nGapAmount>0.1)
        {
            return false;
        }
        return true;
    }

    function ValidateInput()
    {
        var sVoucherDate = $('#txtVoucherDate').datebox('getValue');
        if(sVoucherDate === null || sVoucherDate==="")
        {
            alert("Please select voucher date!");
            $('#txtVoucherDate').focus();
            return false;
        }

        var dCurrentDate = new Date();
        var dVoucherDate = new Date(sVoucherDate);
        if(dVoucherDate.getTime() > dCurrentDate){
            alert("Forward voucher date not allow!");
            $('#txtVoucherDate').focus();
            return false;
        }

        if ($('#txtVoucherNo').val() == null ||$('#txtVoucherNo').val() == '' )
        {
            alert("Please enter voucher no!");
            $('#txtVoucherNo').focus();
            return false;
        }

        if ($('#cboBusinessUnit').val() == null || $('#cboBusinessUnit').val() == '' || parseInt($('#cboBusinessUnit').val())<=0)
        {
            alert("Please select Business Unit!");
            $('#cboBusinessUnit').focus();
            return false;
        }
        if ($('#cboBatch').val() == null || $('#cboBatch').val() == '' || parseInt($('#cboBatch').val())<=0)
        {
            alert("Please select Batch!");
            $('#cboBatch').focus();
            return false;
        }

        if(parseInt(_oVoucher.AuthorizedBy) !=0)
        {
            alert("Your Selected Voucher Already Approved!");
            return false;
        }
        var oRunningAccountingYear =$('#divVoucher').data('RunningAccountingYear');
        if(oRunningAccountingYear==null || parseInt(oRunningAccountingYear.AccountingSessionID)<=0)
        {
            alert("Please Confirm Running Accounting Year!");
            return false;
        }
        var oVDObjs= $("#tblVoucherDetail").data('rows');
        if (oVDObjs==null || oVDObjs.length <= 0)
        {
            alert("Please enter at least one item!");
            return false;
        }
        var nTotalDebitAmount=0; var nTotalCreditAmount=0;
        for(var i=0; i<oVDObjs.length; i++)
        {
            if(parseInt(oVDObjs[i].ObjTypeInt)===0)
            {
                nTotalDebitAmount=nTotalDebitAmount+ parseFloat(oVDObjs[i].DrAmount)
                nTotalCreditAmount=nTotalCreditAmount+parseFloat(oVDObjs[i].CrAmount);
            }
        }

        if (nTotalDebitAmount <= 0) {
            alert("Please enter debit amount");
            return false;
        }
        if (nTotalCreditAmount <= 0) {
            alert("Please enter credit amount");
            return false;
        }
        nTotalDebitAmount = parseFloat(nTotalDebitAmount.toFixed(2));
        nTotalCreditAmount = parseFloat(nTotalCreditAmount.toFixed(2));

        var nGapAmount = parseFloat(nTotalDebitAmount) - parseFloat(nTotalCreditAmount);
        nGapAmount = parseFloat(nGapAmount.toFixed(2));
        if(nGapAmount<0)
        {
            nGapAmount=nGapAmount*(-1);
        }

        if(nGapAmount>0.01)
        {
            alert("Please Confirm Debit & Credit Amount must be equal");
            return false;
        }

        if ($('#txtControlAmount').val() == null || $('#txtControlAmount').val() == '')
        {
            alert("Please enter Control Amount!");
            $('#txtControlAmount').focus();
            return false;
        }
        var nControlAmount = parseFloat(RemoveComma($('#txtControlAmount').val()));
        if (nControlAmount > 0 )
        {
            if(nControlAmount !=parseFloat(nTotalDebitAmount))
            {
                alert("Control Amount & Voucher Amount Must Be Equal!");
                $('#txtControlAmount').focus();
                return false;
            }
        }

        var totalRow = $("#tblVoucherDetail tr").length;
        for(var i=0;i<totalRow;i++)
        {
            if(parseInt(oVDObjs[i].ObjTypeInt)===0)
            {
                var checkAmount = GetAllSameTypeRefAmount(i,parseInt(oVDObjs[i].ObjTypeInt));
                if(checkAmount[0] == "NotEqual")
                {
                    alert(checkAmount[1]);
                    return false;
                }
            }
            if(parseInt(oVDObjs[i].ObjTypeInt)===1)
            {
                var checkAmount = GetAllSameTypeRefAmount(i,parseInt(oVDObjs[i].ObjTypeInt));
                if(checkAmount[0] == "NotEqual")
                {
                    alert(checkAmount[1]);
                    return false;
                }
            }
        }
        return true;
    }

    function GetAllSameTypeRefAmount(nRowIndex,nObjTypeInt)
    {
        debugger;
        var totalRow = $("#tblVoucherDetail tr").length;
        var minIndex = (nRowIndex+1);
        var maxIndex = 0;
        var DrCr = $("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR;
        var parentAmount = $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount;
        var accountHeadName = $("#tblVoucherDetail").data('rows')[nRowIndex].AHName;
        var sCostCenterName = $("#tblVoucherDetail").data('rows')[nRowIndex].CCName;
        parentAmount = parseFloat(parentAmount).toFixed(2);

        if(nObjTypeInt===0){
            for(var i=minIndex;i<totalRow;i++)
            {
                if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit" || $("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                {
                    maxIndex = i;
                    break;
                }
            }
        }
        else if(nObjTypeInt===1){
            for(var i=minIndex;i<totalRow;i++)
            {
                if($("#tblVoucherDetail").data('rows')[i].DR_CR != "SL Bill" && $("#tblVoucherDetail").data('rows')[i].DR_CR != "SL Cheque")
                {
                    maxIndex = i;
                    break;
                }
            }
        }

        if(maxIndex==0)
        {
            maxIndex=totalRow;
        }

        var nTotalCCAmount = 0.00;
        var nTotalBTAmount = 0.00;
        var nTotalChequeAmount = 0.00;
        var nTotalIRAmount = 0.00;
        var nTotalSLBTAmount = 0.00;
        var nTotalSLChequeAmount = 0.00;

        var CCAply = $("#tblVoucherDetail").data('rows')[nRowIndex].IsCCAply;
        var BTAply = $("#tblVoucherDetail").data('rows')[nRowIndex].IsBTAply;
        var ChkAply = $("#tblVoucherDetail").data('rows')[nRowIndex].IsChkAply;
        var IRAply = $("#tblVoucherDetail").data('rows')[nRowIndex].IsIRAply;
        if(CCAply == true || BTAply == true || ChkAply == true || IRAply == true)
        {
            for(var i=minIndex;i<maxIndex;i++)
            {
                var RefType = $("#tblVoucherDetail").data('rows')[i].DR_CR;
                var RefAmount = $("#tblVoucherDetail").data('rows')[i].Amount;
                if(RefType == "Subledger")
                {
                    nTotalCCAmount = parseFloat(nTotalCCAmount) + parseFloat(RefAmount);
                }
                else if(RefType == "Bill")
                {
                    nTotalBTAmount = parseFloat(nTotalBTAmount) + parseFloat(RefAmount);
                }
                else if(RefType == "Cheque")
                {
                    nTotalChequeAmount = parseFloat(nTotalChequeAmount) + parseFloat(RefAmount);
                }
                else if(RefType == "Inventory")
                {
                    nTotalIRAmount = parseFloat(nTotalIRAmount) + parseFloat(RefAmount);
                }
                else if(RefType == "SL Bill")
                {
                    nTotalSLBTAmount = parseFloat(nTotalSLBTAmount) + parseFloat(RefAmount);
                }
                else if(RefType == "SL Cheque")
                {
                    nTotalSLChequeAmount = parseFloat(nTotalSLChequeAmount) + parseFloat(RefAmount);
                }
            }
        }

        var result = "";
        parentAmount = parseFloat(parentAmount).toFixed(2);
        if(CCAply == true && result == "")
        {
            nTotalCCAmount = parseFloat(nTotalCCAmount.toFixed(2));

            var nGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalCCAmount).toFixed(2);
            nGapAmount = parseFloat(nGapAmount.toFixed(2));
            if(nGapAmount<0)
            {
                nGapAmount=nGapAmount*(-1);
            }

            if(nGapAmount>0.01)
            {
                result = "NotEqual" + "," + "Total amount Of Subledger is "+nTotalCCAmount+" but it's Account Head " + accountHeadName + "'s amount is " + parentAmount;
            }
        }
        if(BTAply == true && result == "")
        {
            nTotalBTAmount = parseFloat(nTotalBTAmount.toFixed(2));
            nTotalSLBTAmount = parseFloat(nTotalSLBTAmount.toFixed(2));

            var nGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalBTAmount).toFixed(2);
            var nSLGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalSLBTAmount).toFixed(2);
            nGapAmount = parseFloat(nGapAmount.toFixed(2));
            nSLGapAmount = parseFloat(nSLGapAmount.toFixed(2));
            if(nGapAmount<0)
            {
                nGapAmount=nGapAmount*(-1);
            }
            if(nSLGapAmount<0)
            {
                nSLGapAmount=nSLGapAmount*(-1);
            }

            if(nGapAmount>0.01 && nObjTypeInt===0)
            {
                result = "NotEqual" + "," + "Total amount Of Bill is "+nTotalBTAmount+" but it's Account Head " + accountHeadName + "'s amount is " + parentAmount;
            }
            if(nSLGapAmount>0.01 && nObjTypeInt===1)
            {
                result = "NotEqual" + "," + "Total amount Of SL Bill is "+nTotalSLBTAmount+" but it's Sub Ledger " + sCostCenterName + "'s amount is " + parentAmount;
            }
        }
        if(ChkAply == true && result == "")
        {
            nTotalChequeAmount = parseFloat(nTotalChequeAmount.toFixed(2));
            nTotalSLChequeAmount = parseFloat(nTotalSLChequeAmount.toFixed(2));
            var nGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalChequeAmount).toFixed(2);
            var nSLGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalSLChequeAmount).toFixed(2);
            nGapAmount = parseFloat(nGapAmount.toFixed(2));
            nSLGapAmount = parseFloat(nSLGapAmount.toFixed(2));
            if(nGapAmount<0)
            {
                nGapAmount=nGapAmount*(-1);
            }

            if(nSLGapAmount<0)
            {
                nSLGapAmount=nSLGapAmount*(-1);
            }

            if(nGapAmount>0.01 && nObjTypeInt===0)
            {
                result = "NotEqual" + "," + "Total amount Of Cheque is "+nTotalChequeAmount+" but it's Account Head " + accountHeadName + "'s amount is " + parentAmount;
            }

            if(nSLGapAmount>0.01 && nObjTypeInt===1)
            {
                result = "NotEqual" + "," + "Total amount Of SL Cheque is "+nTotalSLChequeAmount+" but it's Sub Ledger " + sCostCenterName + "'s amount is " + parentAmount;
            }
        }
        if(IRAply == true && result == "")
        {
            nTotalIRAmount = parseFloat(nTotalIRAmount.toFixed(2));
            var nGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalIRAmount).toFixed(2);
            nGapAmount = parseFloat(nGapAmount.toFixed(2));
            if(nGapAmount<0)
            {
                nGapAmount=nGapAmount*(-1);
            }

            if(nGapAmount>0.01)
            {
                result = "NotEqual" + "," + "Total amount Of Inventory is "+nTotalIRAmount+" but it's Account Head " + accountHeadName + "'s amount is " + parentAmount;
            }
        }
        result = result.split(",");
        return result;
    }

    function GetAllSameTypeRefAmountOld(nRowIndex)
    {
        var totalRow = $("#tblVoucherDetail tr").length;
        var minIndex = (nRowIndex+1);
        var maxIndex = 0;
        var DrCr = $("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR;
        var parentAmount = $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount;
        var accountHeadName = $("#tblVoucherDetail").data('rows')[nRowIndex].Name;
        parentAmount = parseFloat(parentAmount).toFixed(2);

        for(var i=minIndex;i<totalRow;i++)
        {
            var DrCr = $("#tblVoucherDetail").data('rows')[i].DR_CR;
            if(DrCr == "Debit" || DrCr == "Credit")
            {
                maxIndex = i;
                break;
            }
        }

        if(maxIndex==0)
        {
            maxIndex=totalRow;
        }

        var nTotalCCAmount = 0.00;
        var nTotalBTAmount = 0.00;
        var nTotalChequeAmount = 0.00;
        var nTotalIRAmount = 0.00;

        var IsCCAply = $("#tblVoucherDetail").data('rows')[nRowIndex].IsCCAply;
        var IsBTAply = $("#tblVoucherDetail").data('rows')[nRowIndex].IsBTAply;
        var IsIRAply = $("#tblVoucherDetail").data('rows')[nRowIndex].IsIRAply;
        if(IsCCAply == true || IsBTAply == true || IsIRAply == true)
        {
            for(var i=minIndex;i<maxIndex;i++)
            {
                var RefType = $("#tblVoucherDetail").data('rows')[i].DR_CR;
                var RefAmount = $("#tblVoucherDetail").data('rows')[i].Amount;
                if(RefType == "CC")
                {
                    nTotalCCAmount = parseFloat(nTotalCCAmount) + parseFloat(RefAmount);
                }
                else if(RefType == "BT")
                {
                    nTotalBTAmount = parseFloat(nTotalBTAmount) + parseFloat(RefAmount);
                }
                else if(RefType == "Cheque")
                {
                    nTotalChequeAmount = parseFloat(nTotalChequeAmount) + parseFloat(RefAmount);
                }
                else if(RefType == "IR")
                {
                    nTotalIRAmount = parseFloat(nTotalIRAmount) + parseFloat(RefAmount);
                }
            }
        }

        var result = "";
        parentAmount = parseFloat(parentAmount).toFixed(2);
        if(IsCCAply == true && result == "")
        {
            nTotalCCAmount = parseFloat(nTotalCCAmount.toFixed(2));

            var nGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalCCAmount).toFixed(2);
            nGapAmount = parseFloat(nGapAmount.toFixed(2));
            if(nGapAmount<0)
            {
                nGapAmount=nGapAmount*(-1);
            }

            if(nGapAmount>0.01)
            {
                result = "NotEqual" + "," + "Total amount Of CC is "+nTotalCCAmount+" but it's Account Head " + accountHeadName + "'s amount is " + parentAmount;
            }
        }
        if(IsBTAply == true && result == "")
        {
            nTotalBTAmount = parseFloat(nTotalBTAmount.toFixed(2));

            var nGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalBTAmount).toFixed(2);
            nGapAmount = parseFloat(nGapAmount.toFixed(2));
            if(nGapAmount<0)
            {
                nGapAmount=nGapAmount*(-1);
            }

            if(nGapAmount>0.01)
            {
                result = "NotEqual" + "," + "Total amount Of BT is "+nTotalBTAmount+" but it's Account Head " + accountHeadName + "'s amount is " + parentAmount;
            }
        }
        if(IsIRAply == true && result == "")
        {
            nTotalIRAmount = parseFloat(nTotalIRAmount.toFixed(2));
            var nGapAmount = parseFloat(parentAmount).toFixed(2) - parseFloat(nTotalIRAmount).toFixed(2);
            nGapAmount = parseFloat(nGapAmount.toFixed(2));
            if(nGapAmount<0)
            {
                nGapAmount=nGapAmount*(-1);
            }

            if(nGapAmount>0.01)
            {
                result = "NotEqual" + "," + "Total amount Of IR is "+nTotalIRAmount+" but it's Account Head " + accountHeadName + "'s amount is " + parentAmount;
            }
        }
        result = result.split(",");

        return result;
    }

    function RefreshObject()
    {
        var oVoucher=  {
            VoucherID : parseInt(_oVoucher.VoucherID),
            BUID :  parseInt($('#cboBusinessUnit').val()),
            VoucherTypeID : parseInt($('#cboVoucherType').val()),
            VoucherNo : $('#txtVoucherNo').val(),
            Narration : $.trim($('#txtNarration').val()),
            VoucherDate : $('#txtVoucherDate').datebox('getValue'),
            AuthorizedBy : parseInt(_oVoucher.AuthorizedBy),
            BatchID :  parseInt($('#cboBatch').val()),
            TaxEffectInt : parseInt($('#cboTex').val()),
            VDObjs : GetVDObjs() //$("#tblVoucherDetail").data('rows')
        };
        return oVoucher;
    }

    function GetVDObjs()
    {
        var oVDObjs=[];
        var oTempVDObjs = $("#tblVoucherDetail").data('rows');
        for(var i=0; i<oTempVDObjs.length; i++)
        {
            var oVDObj= {
                VDObjID : oTempVDObjs[i].VDObjID,
                DR_CR : oTempVDObjs[i].DR_CR,
                BUID : oTempVDObjs[i].BUID,
                AID : oTempVDObjs[i].AID,
                ZID : oTempVDObjs[i].ZID,
                SID : oTempVDObjs[i].SID,
                PID : oTempVDObjs[i].PID,
                DptID : oTempVDObjs[i].DptID,
                AHID : oTempVDObjs[i].AHID,
                CID : oTempVDObjs[i].CID,
                CAmount : oTempVDObjs[i].CAmount,
                CRate : oTempVDObjs[i].CRate,
                Amount : oTempVDObjs[i].Amount,
                IsDr : oTempVDObjs[i].IsDr,
                Detail : oTempVDObjs[i].Detail,                
                DrAmount : oTempVDObjs[i].DrAmount,
                CrAmount : oTempVDObjs[i].CrAmount,
                BCDrAmount : oTempVDObjs[i].BCDrAmount,
                BCCrAmount : oTempVDObjs[i].BCCrAmount,
                CCID : oTempVDObjs[i].CCID,
                BillID : oTempVDObjs[i].BillID,                
                BillDate : oTempVDObjs[i].BillDate,
                TrTypeInt : oTempVDObjs[i].TrTypeInt,
                TrTypeStr : oTempVDObjs[i].TrTypeStr,                
                ChequeID : oTempVDObjs[i].ChequeID,
                ChequeType : oTempVDObjs[i].ChequeType,
                WUID : oTempVDObjs[i].WUID,
                MUID : oTempVDObjs[i].MUID,
                Qty : oTempVDObjs[i].Qty,
                UPrice : oTempVDObjs[i].UPrice,
                OrderID : oTempVDObjs[i].OrderID,
                ORemarks : oTempVDObjs[i].ORemarks,
                IsCCAply : oTempVDObjs[i].IsCCAply, 
                IsBTAply : oTempVDObjs[i].IsBTAply,
                IsChkAply : oTempVDObjs[i].IsChkAply,
                IsIRAply : oTempVDObjs[i].IsIRAply,
                IsOrderaAply : oTempVDObjs[i].IsOrderaAply,
                IsPaidChk : oTempVDObjs[i].IsPaidChk,
                ObjTypeInt : oTempVDObjs[i].ObjTypeInt
            };
            oVDObjs.push(oVDObj);
        }
        return oVDObjs;
    }

    function RefreashAccountHeads(oChartOfAccounts)
    {
        var data=oChartOfAccounts;
        data={"total":""+data.length+"","rows":data};
        $('#tblAccountHead').datagrid('loadData',data);
        $('#tblAccountHead').datagrid('selectRow', 0);
    }

    function RefreashCostCenters(oCostCenters)
    {
        var data=oCostCenters;
        data={"total":""+data.length+"","rows":data};
        $('#tblCostCenterName').datagrid('loadData',data);
        $('#tblCostCenterName').datagrid('selectRow', 0);
    }

    function RefreashProducts(oProducts)
    {
        var data=oProducts;
        data={"total":""+data.length+"","rows":data};
        $('#tblProduct').datagrid('loadData',data);
        $('#tblProduct').datagrid('selectRow', 0);
    }

    function RefreashWorkingUnits(oWorkingUnits)
    {
        var data=oWorkingUnits;
        data={"total":""+data.length+"","rows":data};
        $('#tblWorkingUnit').datagrid('loadData',data);
        $('#tblWorkingUnit').datagrid('selectRow', 0);
    }

    function RefreashMUnits(oMeasurementUnits)
    {
        var data=oMeasurementUnits;
        data={"total":""+data.length+"","rows":data};
        $('#tblMUnit').datagrid('loadData',data);
        $('#tblMUnit').datagrid('selectRow', 0);
    }

    function RefreashTrTypes(oTrTypes)
    {
        var data=oTrTypes;
        data={"total":""+data.length+"","rows":data};
        $('#tblTrType').datagrid('loadData',data);
        $('#tblTrType').datagrid('selectRow', 0);
    }

    function RefreashBillNos(oBillNos)
    {
        var data=oBillNos;
        data={"total":""+data.length+"","rows":data};
        $('#tblBillNo').datagrid('loadData',data);
        $('#tblBillNo').datagrid('selectRow', 0);
    }

    function RefreashVOrders(oVOrders)
    {
        var data=oVOrders;
        data={"total":""+data.length+"","rows":data};
        $('#tblOrderRef').datagrid('loadData',data);
        $('#tblOrderRef').datagrid('selectRow', 0);
    }

    function DefinePreviousCell(nRowIndex)
    {
        var sReturnClass="";
        var DrCrType = $("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR;
        if(DrCrType=="Debit")
        {
            sReturnClass=".debitclass";
        }
        else if(DrCrType=="Credit")
        {
            sReturnClass=".creditclass";
        }
        else if(DrCrType=="Subledger")
        {
            sReturnClass=".ccamountclass";
        }
        else if(DrCrType=="Bill" || DrCrType=="SL Bill")
        {
            sReturnClass=".btAmountClass";
        }
        else if(DrCrType=="Cheque" || DrCrType=="SL Cheque")
        {
            sReturnClass=".vramountclass";
        }
        else if(DrCrType=="Inventory")
        {
            sReturnClass=".irAmountClass";
        }
        else if(DrCrType=="Order Ref" || DrCrType=="SLOrder Ref")
        {
            sReturnClass=".orderamountclass";
        }
        return sReturnClass;
    }

    function DeleteRow(nRowIndex)
    {
        if(!confirm("Confirm to delete?")) return false;
        var oTempVDObjs= $("#tblVoucherDetail").data('rows');
        var oVDObjs =[]; var bFlag=false;
        var nExplationType=$("#tblVoucherDetail").data('rows')[nRowIndex].ObjTypeInt;
        if(nExplationType==0)
        {
            for(var i=0; i< oTempVDObjs.length; i++)
            {
                if(i<nRowIndex)
                {
                    oVDObjs.push(oTempVDObjs[i]);
                }
                else if(i>nRowIndex)
                {
                    if(bFlag==false)
                    {
                        if(oTempVDObjs[i].ObjTypeInt==0)
                        {
                            bFlag=true;
                        }
                    }
                    if(bFlag==true)
                    {
                        oVDObjs.push(oTempVDObjs[i]);
                    }
                }
            }
        }
        else
        {
            for(var i=0; i< oTempVDObjs.length; i++)
            {
                if(i!=nRowIndex)
                {
                    oVDObjs.push(oTempVDObjs[i]);
                }
            }
        }

        if(oVDObjs==null || oVDObjs.length<1)
        {
            var oVDObj=NewObject(0);
            oVDObjs.push(oVDObj);
        }
        RemakeGrid(oVDObjs);
        if(nRowIndex<=0)
        {
            nRowIndex=0;
        }
        else
        {
            nRowIndex=nRowIndex-1;
        }
        var sSelectedClass= DefinePreviousCell(nRowIndex);
        $('#tblVoucherDetail').data('rows', oVDObjs);
        $("#tblVoucherDetail").data("selectedIndex", nRowIndex);
        $('#tblVoucherDetail tr').eq(nRowIndex).addClass("highlight");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('input').addClass("highlight");
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).removeClass("textboxstyle2");
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).addClass("textboxstyle");
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).show();
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).focus();
        $('#tblVoucherDetail tr').eq(nRowIndex).find(sSelectedClass).select();
        InitializeKeyDownEvent(sSelectedClass);
        RefreshSummery();
    }

    $('#btnApproved').click(function(e){
        if(_oVoucher==null || parseInt(_oVoucher.VoucherID)<=0)
        {
            alert("Sorry, Invalid Voucher!");
            return false;
        }
        if(parseInt(_oVoucher.AuthorizedBy)!=0)
        {
            alert("Sorry,This Voucher Already Approved.");
            return false;
        }
        if (!confirm("Confirm to Approved ?")) return false ;
        var oVouchers=[];
        oVouchers.push(_oVoucher);

        var oVoucher = {
            VoucherList : oVouchers
        }

        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/Voucher/Approved",
            traditional: true,
            data:  JSON.stringify(oVoucher),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oTempVouchers = jQuery.parseJSON(data);
                if(oTempVouchers[0].ErrorMessage == "")
                {
                    var oVoucher =oTempVouchers[0];
                    alert("Sucessfully Approved");
                    var oVouchers =sessionStorage.getItem("Vouchers");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndexVoucher"));
                    if(oVouchers!=null)
                    {
                        oVouchers = jQuery.parseJSON(oVouchers);
                    }
                    else
                    {
                        oVouchers=[];
                    }
                    if(nIndex!=-1)
                    {
                        oVouchers[nIndex]=oVoucher;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndexVoucher", oVouchers.length);
                        oVouchers.push(oVoucher);
                    }
                    sessionStorage.setItem("VoucherButton", "Approved");
                    sessionStorage.setItem("Vouchers", JSON.stringify(oVouchers));
                    var Operation = sessionStorage.getItem("Operation");
                    if(Operation==="Approved")
                    {
                        window.location.href = sessionStorage.getItem('BaseAddress')+ "/Voucher/ViewVouchers?a=X&menuid="+ parseInt(sessionStorage.getItem('MenuID'));
                    }
                    else
                    {
                        window.location.href = sessionStorage.getItem('BaseAddress')+ "/Voucher/ViewVouchers?a=na&menuid="+ parseInt(sessionStorage.getItem('MenuID'));
                    }
                }
                else {
                    alert(oTempVouchers[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $('#btnSave').click(function (e){
        if(!ValidateInput())return;
        if (!confirm("Confirm to Save Voucher?")) return ;
        var oVoucher=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+  "/Voucher/SaveTest",
            traditional: true,
            data:  JSON.stringify(oVoucher),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oVoucher = jQuery.parseJSON(data);
                if (oVoucher.ErrorMessage == '' || oVoucher.ErrorMessage == null)
                {
                    if(oVoucher.VoucherID>0)
                    {
                        alert("Voucher saved sucessfully with voucher no : "+oVoucher.VoucherNo);
                        //window.open(sessionStorage.getItem('BaseAddress')+'/Voucher/PrintVoucher?id=' + oVoucher.VoucherID, "_blank");
                        var oVouchers =sessionStorage.getItem("Vouchers");
                        var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndexVoucher"));
                        if(oVouchers!=null)
                        {
                            oVouchers = jQuery.parseJSON(oVouchers);
                        }
                        else
                        {
                            oVouchers=[];
                        }
                        if(nIndex!=-1)
                        {
                            oVouchers[nIndex]=oVoucher;
                        }
                        else
                        {
                            sessionStorage.setItem("SelectedRowIndexVoucher", oVouchers.length);
                            oVouchers.push(oVoucher);
                        }
                        sessionStorage.setItem("VoucherButton", "Save");
                        sessionStorage.setItem("Vouchers", JSON.stringify(oVouchers));
                        sessionStorage.setItem("VoucherHeader", "Add New Voucher");                        
                        if(oVoucher.IsPrint)
                        {
                            window.open(sessionStorage.getItem('BaseAddress')+'/Voucher/PrintVoucherHalfPage?id=' + oVoucher.VoucherID+'&buid=0', "_blank");  
                        }
                        window.location.href =  sessionStorage.getItem('BaseAddress') +'/Voucher/ViewMultiCurrencyVoucher?buid='+ parseInt(oVoucher.BUID) +'&id=0&nvtid='+parseInt(oVoucher.VoucherTypeID)+'&copyid=0';
                    }
                    else
                    {
                        alert("Invalid Operation!");
                    }
                }
                else
                {
                    alert(oVoucher.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(xhr+'~' +status+'~'+error);
            }
        });
    });

    $('#btnSearch').click(function () {
        var oParameter = new Object();
        oParameter.MultipleItemReturn = false;
        oParameter.Name ="Voucher Advance Search";
        var url = sessionStorage.getItem('BaseAddress')+"/Voucher/VoucherAdvanceSearch";
        var oVoucher = window.showModalDialog(url, oParameter, 'dialogHeight:500px;dialogWidth:870px;dialogLeft:250;dialogTop:50;center:yes;resizable:yes;status:no;scroll:no');
        if(oVoucher!=null)
        {
            if(parseInt(oVoucher.VoucherID)>0)
            {
                DisabledVoucherNo(oVoucher);
                window.location.href =  sessionStorage.getItem('BaseAddress') +'/Voucher/ViewMultiCurrencyVoucher?buid='+parseInt(oVoucher.BUID)+'&id='+parseInt(oVoucher.VoucherID)+'&nvtid=1&copyid=0';
            }
        }
    });

    $('#btnPrint').click(function (e)
    {
        if(_oVoucher==null || parseInt(_oVoucher.VoucherID)<=0)
        {
            alert("Invalid Voucher! Please Save Your Voucher!");
            return false;
        }
        window.open(sessionStorage.getItem('BaseAddress')+'/Voucher/PrintVoucherHalfPage?id=' + _oVoucher.VoucherID+'&buid=0', "_blank");        
    });

    $('#btnClose').click(function (e){
        sessionStorage.setItem("VoucherButton", "Close");
        var Operation = sessionStorage.getItem("Operation");
        if(Operation==="Approved")
        {
            window.location.href = sessionStorage.getItem('BaseAddress')+ "/Voucher/ViewVouchers?a=X&menuid=" + parseInt(sessionStorage.getItem('MenuID'));
        }
        else
        {
            var sBackURL = sessionStorage.getItem("BackURL");
            window.location.href = sBackURL;
        }
    });

    $('#txtNarration').keydown(function(e){
        if(e.which === 9)
        {
            $('#btnSave').select();
        }
    }).keyup(function(e){
        if(e.which === 13)
        {
            $('#txtNarration').val($.trim($('#txtNarration').val()));
        }
        if(e.which === 9)
        {
            $('#btnSave').select();
        }
    });

    $('#btnSave').keydown(function(e){
        if(e.which === 9)
        {
            $('#btnClose').focus();
        }
    });

    $('#btnClose').keydown(function(e){
        if(e.which === 9)
        {
            $('#cboVoucherType').focus();
        }
    });

    $('#cboVoucherType').keydown(function(e){
        if(e.which === 9)
        {
            $('#txtVoucherNo').focus();
        }
    });

    $('#txtCurrencySymbol').keydown(function(e){
        if(e.which === 9)
        {
            $('#txtCurrencyAmount').focus();
            $('#txtCurrencyAmount').select();
        }
    });

    $('#txtConversionRate').keydown(function(e){
        if(e.which === 9)
        {
            $('#txtBaseCurrencyAmount').focus();
            $('#txtBaseCurrencyAmount').select();
        }
    });

    $('#txtCurrencyAmount').keydown(function(e){
        if(e.which === 9)
        {
            $('#txtConversionRate').focus();
            $('#txtConversionRate').select();
        }
    });

    $('#txtBaseCurrencyAmount').keydown(function(e){
        if(e.which === 9)
        {
            $('#btnOkCurrency').focus();
        }
    });

    $('#btnOkCurrency').keydown(function(e){
        if(e.which === 9)
        {
            $('#btnCloseCurrency').focus();
        }
    });

    $('#btnCloseCurrency').keydown(function(e){
        if(e.which === 9)
        {
            $('#txtCurrencySymbol').focus();
            $('#txtCurrencySymbol').select();
        }
    });

    $('#txtControlAmount').keydown(function (e){
        if (e.which === 13) {
            var oVDObjs = $("#tblVoucherDetail").data('rows');
            if(oVDObjs=='undefined'  || oVDObjs==null || oVDObjs.length<=0)
            {
                var oVDObj=NewObject(0);
                AddVoucherDetail(oVDObj);
            }
            var nNextRowIndex = 0;
            $('#tblVoucherDetail tr').eq(nNextRowIndex).addClass("highlight");
            $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
            $('#tblVoucherDetail tr').eq(nNextRowIndex).find('input').addClass("textboxstyle2");
            $("#tblVoucherDetail").data("selectedIndex", nNextRowIndex);
            ResetAllInputBox(0, '.debitcreditclass');
            RefreshSummery();
            InitializeKeyDownEvent(".debitcreditclass"); return;
        }
    });

    $('#txtVoucherDate').keydown(function (e) {
        if (e.which === 13) {
            $('#btnOkAccountHead').focus();
        }
    });

    $("#btnOkAccountHead").click(function(){
        SelectAccountHead();
    });

    $("#btnCloseAccountHead").click(function(){
        $('#winAccountHead').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountclass').focus();
    });

    $('#winAccountHead').keydown(function (e)
    {
        if (e.which === 27) {
            $('#winAccountHead').window('close');
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountclass').focus();
        }
        else if(e.which == 38 || e.which == 40)
        {
            var oAccountHead= $('#tblAccountHead').datagrid('getSelected');
            var nIndex=$('#tblAccountHead').datagrid('getRowIndex', oAccountHead);
            if(e.which == 38)//up arrow=38
            {
                if(nIndex<=0)
                {
                    $('#tblAccountHead').datagrid('selectRow', 0);
                }
                else
                {
                    $('#tblAccountHead').datagrid('selectRow', nIndex-1);
                }
            }
            if(e.which == 40)//down arrow=40
            {
                var oCurrentList = $('#tblAccountHead').datagrid('getRows');
                if(nIndex>=oCurrentList.length-1)
                {
                    $('#tblAccountHead').datagrid('selectRow', oCurrentList.length-1);
                }
                else
                {
                    $('#tblAccountHead').datagrid('selectRow', nIndex+1);
                }
            }
        }
        else if(e.which == 13)//enter=13
        {
            SelectAccountHead();
        }
        else
        {
            var txtSearchByAccountHeadName = document.getElementById('txtSearchByAccountHeadName').value;
            var oSearchedLedger = [];  var sTempName="";
            var oCurrentList = $('#tblAccountHead').datagrid('getRows');
            if (e.which == 8)
            {
                oCurrentList = _oAccountHeads;
            }
            for(i=0;i<oCurrentList.length;i++){
                sTempName=oCurrentList[i].AccountHeadName;  //Prob
                n=sTempName.toUpperCase().indexOf(txtSearchByAccountHeadName.toUpperCase());
                if(n!=-1)
                {
                    oSearchedLedger.push(oCurrentList[i]);
                }
            }
            RefreashAccountHeads(oSearchedLedger);
        }
    });

    $("#btnOkCostCenterName").click(function(){
        SelectCostCenter();
    });

    $("#btnCostCenterName").click(function(){
        $('#winCostCenterName').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.ccnameclass').focus();
    });

    $('#winCostCenterName').keydown(function (e)
    {
        if (e.which === 27) {
            $('#winCostCenterName').window('close');
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            $('#tblVoucherDetail tr').eq(nRowIndex).find('.ccnameclass').focus();
        }
        else if(e.which == 38 || e.which == 40)
        {
            var oCostCenter= $('#tblCostCenterName').datagrid('getSelected');
            var nIndex=$('#tblCostCenterName').datagrid('getRowIndex', oCostCenter);
            if(e.which == 38)//up arrow=38
            {
                if(nIndex<=0)
                {
                    $('#tblCostCenterName').datagrid('selectRow', 0);
                }
                else
                {
                    $('#tblCostCenterName').datagrid('selectRow', nIndex-1);
                }
            }
            if(e.which == 40)//down arrow=40
            {
                var oCurrentList = $('#tblCostCenterName').datagrid('getRows');
                if(nIndex>=oCurrentList.length-1)
                {
                    $('#tblCostCenterName').datagrid('selectRow', oCurrentList.length-1);
                }
                else
                {
                    $('#tblCostCenterName').datagrid('selectRow', nIndex+1);
                }
            }
        }

        else if(e.which == 13)//enter=13
        {
            SelectCostCenter();
        }
        else if(e.which == 107)
        {
            CreateCostCenter();
        }
        else
        {
            var txtSearchByAccountHeadName = document.getElementById('txtSearchByCostCenterName').value;
            var oSearchedLedgerCostCenter = [];  var sTempName="";
            var oCurrentList = $('#tblCostCenterName').datagrid('getRows');
            if (e.which == 8)
            {
                oCurrentList = _oCostCenters;
            }
            for(i=0;i<oCurrentList.length;i++){
                sTempName=oCurrentList[i].CCName;
                n=sTempName.toUpperCase().indexOf(txtSearchByAccountHeadName.toUpperCase());
                if(n!=-1)
                {
                    oSearchedLedgerCostCenter.push(oCurrentList[i]);
                }
            }
            RefreashCostCenters(oSearchedLedgerCostCenter);
        }
    });

    function SelectCostCenter()
    {
        var oSelectedCostCenter= $('#tblCostCenterName').datagrid('getSelected');
        if(oSelectedCostCenter ==null || parseInt(oSelectedCostCenter.ACCostCenterID)<=0)
        {
            alert("Please select a cost center!");
            return;
        }
        //var result = CheckDuplicateOrNot(oSelectedCostCenter.ACCostCenterID,"Subledger");
        //if(result == "Duplicate")
        //{
        //    alert("Can't take same Cost center for one debit or credit.");
        //    return false;
        //}
        $('#winCostCenterName').window('close');

        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        var costCenterNameControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.ccnameclass');
        $(costCenterNameControll).val(oSelectedCostCenter.Name);
        $(costCenterNameControll).removeClass("textboxstyle");
        $(costCenterNameControll).addClass("highlight");
        $(costCenterNameControll).addClass("textboxstyle2");
        var nInputBoxIndex=$('.ccnameclass').index(costCenterNameControll);
        ResetAllInputBox(nInputBoxIndex, '.ccdescriptionclass');
        var nIndex=$("#tblVoucherDetail").data('selectedIndex');
        var nPreviousCCID = parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].CCID);
        $("#tblVoucherDetail").data('rows')[nRowIndex].CCID=parseInt(oSelectedCostCenter.ACCostCenterID);
        $("#tblVoucherDetail").data('rows')[nRowIndex].CCName=oSelectedCostCenter.Name;
        $("#tblVoucherDetail").data('rows')[nRowIndex].IsBTAply=oSelectedCostCenter.IsBillRefApply;
        $("#tblVoucherDetail").data('rows')[nRowIndex].IsOrderaAply=oSelectedCostCenter.IsOrderRefApply;
        $("#tblVoucherDetail").data('rows')[nRowIndex].IsChkAply=oSelectedCostCenter.IsChequeApply;
        $("#tblVoucherDetail").data('rows')[nRowIndex].IsPaidChk=oSelectedCostCenter.IsPaymentCheque;
        
        var oTempVDObjs = $("#tblVoucherDetail").data('rows');
        if( oTempVDObjs.length> (nRowIndex+1) && nPreviousCCID>0 && nPreviousCCID != parseInt(oSelectedCostCenter.ACCostCenterID))
        {
            var oVDObjs =[]; var bFlag = true;
            for(var i= 0; i< oTempVDObjs.length; i++)
            {
                if(i<=nRowIndex)
                {
                    oVDObjs.push(oTempVDObjs[i]);
                }
                else
                {
                    if(bFlag=== true && (parseInt(oTempVDObjs[i].ObjTypeInt)===5 ||  parseInt(oTempVDObjs[i].ObjTypeInt)===7))
                    {
                        bFlag = true;
                    }
                    else
                    {
                        bFlag = false;
                        oVDObjs.push(oTempVDObjs[i]);
                    }
                }
            }
            RemakeGrid(oVDObjs);
            $('#tblVoucherDetail').data('rows', oVDObjs);
            $("#tblVoucherDetail").data("selectedIndex", nRowIndex);
            $('#tblVoucherDetail tr').eq(nRowIndex).addClass("highlight");
            $('#tblVoucherDetail tr').eq(nRowIndex).find('input').addClass("highlight");
            $('#tblVoucherDetail tr').eq(nRowIndex).find(".ccdescriptionclass").removeClass("textboxstyle2");
            $('#tblVoucherDetail tr').eq(nRowIndex).find(".ccdescriptionclass").addClass("textboxstyle");
            $('#tblVoucherDetail tr').eq(nRowIndex).find(".ccdescriptionclass").show();
            $('#tblVoucherDetail tr').eq(nRowIndex).find(".ccdescriptionclass").focus();
            $('#tblVoucherDetail tr').eq(nRowIndex).find(".ccdescriptionclass").select();
        }
        
        var currentAmount = parseFloat(RemoveComma($('#tblVoucherDetail tr').eq(nRowIndex).find('.ccamountclass').val()));
        var amount = AmountCalculation(nRowIndex,"Subledger",currentAmount);
        amount = parseFloat(amount.toFixed(2));
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.ccamountclass').val(formatPrice(amount,null));
        InitializeKeyDownEvent(".ccdescriptionclass"); return;
    }

    $("#btnOkProduct").click(function(){
        var oSelectedProduct= $('#tblProduct').datagrid('getSelected');
        if(oSelectedProduct ==null || parseInt(oSelectedProduct.ProductID)<=0)
        {
            alert("Please select a Product!");
            return;
        }
        var result = CheckDuplicateOrNot(oSelectedProduct.ProductID,"Inventory");
        if(result == "Duplicate")
        {
            alert("Can't take same Product for one debit or credit.");
            return false;
        }
        $('#winProduct').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        var productControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.irProductClass');
        $(productControll).val(oSelectedProduct.ProductName);
        $(productControll).removeClass("textboxstyle");
        $(productControll).addClass("highlight");
        $(productControll).addClass("textboxstyle2");
        var nInputBoxIndex = $(".irProductClass").index(productControll);
        ResetAllInputBox(nInputBoxIndex, '.irWorkingUnitClass');
        var nIndex=$("#tblVoucherDetail").data('selectedIndex');
        $("#tblVoucherDetail").data('rows')[nIndex].PID=parseInt(oSelectedProduct.ProductID);
        $("#tblVoucherDetail").data('rows')[nIndex].PName=oSelectedProduct.ProductName;
        InitializeKeyDownEvent(".irWorkingUnitClass"); return;
    });

    $("#btnCloseProduct").click(function(){
        $('#winProduct').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.irProductClass').focus();
    });

    $('#winProduct').keydown(function (e)
    {
        if (e.which === 27) {
            $('#winProduct').window('close');
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            $('#tblVoucherDetail tr').eq(nRowIndex).find('.irProductClass').focus();
        }
        else if(e.which == 38 || e.which == 40)
        {
            var oProduct= $('#tblProduct').datagrid('getSelected');
            var nIndex=$('#tblProduct').datagrid('getRowIndex', oProduct);
            if(e.which == 38)//up arrow=38
            {
                if(nIndex<=0)
                {
                    $('#tblProduct').datagrid('selectRow', 0);
                }
                else
                {
                    $('#tblProduct').datagrid('selectRow', nIndex-1);
                }
            }
            if(e.which == 40)//down arrow=40
            {
                var oCurrentList = $('#tblProduct').datagrid('getRows');
                if(nIndex>=oCurrentList.length-1)
                {
                    $('#tblProduct').datagrid('selectRow', oCurrentList.length-1);
                }
                else
                {
                    $('#tblProduct').datagrid('selectRow', nIndex+1);
                }
            }
        }
        else if(e.which == 13)//enter=13
        {
            var oSelectedProduct= $('#tblProduct').datagrid('getSelected');
            if(oSelectedProduct ==null || parseInt(oSelectedProduct.ProductID)<=0)
            {
                alert("Please select a Product!");
                return;
            }
            var result = CheckDuplicateOrNot(oSelectedProduct.ProductID,"Inventory");
            if(result == "Duplicate")
            {
                alert("Can't take same Product for one debit or credit.");
                return false;
            }
            $('#winProduct').window('close');
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            var productControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.irProductClass');
            $(productControll).val(oSelectedProduct.ProductName);
            $(productControll).removeClass("textboxstyle");
            $(productControll).addClass("highlight");
            $(productControll).addClass("textboxstyle2");
            var nInputBoxIndex = $(".irProductClass").index(productControll);
            ResetAllInputBox(nInputBoxIndex, '.irWorkingUnitClass');
            var nIndex=$("#tblVoucherDetail").data('selectedIndex');
            $("#tblVoucherDetail").data('rows')[nIndex].PID=oSelectedProduct.ProductID;
            $("#tblVoucherDetail").data('rows')[nIndex].PName=oSelectedProduct.ProductName;
            var currentAmount = parseFloat(RemoveComma($('#tblVoucherDetail tr').eq(nRowIndex).find('.irAmountClass').val()));
            InitializeKeyDownEvent(".irWorkingUnitClass"); return;
        }
        else
        {
            var txtSearchByProductName = document.getElementById('txtSearchByProductName').value;
            var oSearchedLedgerProduct = [];  var sTempName="";
            var oCurrentList = $('#tblProduct').datagrid('getRows');
            if (e.which == 8)
            {
                oCurrentList = _oProducts;
            }
            for(i=0;i<oCurrentList.length;i++){
                sTempName=oCurrentList[i].NameCode;
                n=sTempName.toUpperCase().indexOf(txtSearchByProductName.toUpperCase());
                if(n!=-1)
                {
                    oSearchedLedgerProduct.push(oCurrentList[i]);
                }
            }
            RefreashProducts(oSearchedLedgerProduct);
        }
    });

    $("#btnCloseWorkingUnit").click(function(){
        $('#winWorkingUnit').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.irWorkingUnitClass').focus();
    });

    $("#btnOkWorkingUnit").click(function(){
        var oSelectedWorkingUnit= $('#tblWorkingUnit').datagrid('getSelected');
        if(oSelectedWorkingUnit ==null || parseInt(oSelectedWorkingUnit.WorkingUnitID)<=0)
        {
            alert("Please select a Working Unit !");
            return;
        }
        $('#winWorkingUnit').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        var workingUnitControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.irWorkingUnitClass');
        $(workingUnitControll).val(oSelectedWorkingUnit.WorkingUnitName);
        $(workingUnitControll).removeClass("textboxstyle");
        $(workingUnitControll).addClass("highlight");
        $(workingUnitControll).addClass("textboxstyle2");
        var nInputBoxIndex = $(".irWorkingUnitClass").index(workingUnitControll);
        ResetAllInputBox(nInputBoxIndex, '.irMeasurementUnitClass');
        var nIndex=$("#tblVoucherDetail").data('selectedIndex');
        $("#tblVoucherDetail").data('rows')[nRowIndex].WUID=oSelectedWorkingUnit.WorkingUnitID;
        $("#tblVoucherDetail").data('rows')[nRowIndex].WUName=oSelectedWorkingUnit.WorkingUnitName;
        InitializeKeyDownEvent(".irMeasurementUnitClass"); return;
    });

    $('#winWorkingUnit').keydown(function (e)
    {
        if (e.which === 27) {
            $('#winWorkingUnit').window('close');
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            $('#tblVoucherDetail tr').eq(nRowIndex).find('.irWorkingUnitClass').focus();
        }
        else if(e.which == 38 || e.which == 40)
        {
            var oWorkingUnit= $('#tblWorkingUnit').datagrid('getSelected');
            var nIndex=$('#tblWorkingUnit').datagrid('getRowIndex', oWorkingUnit);
            if(e.which == 38)//up arrow=38
            {
                if(nIndex<=0)
                {
                    $('#tblWorkingUnit').datagrid('selectRow', 0);
                }
                else
                {
                    $('#tblWorkingUnit').datagrid('selectRow', nIndex-1);
                }
            }
            if(e.which == 40)//down arrow=40
            {
                var oCurrentList = $('#tblWorkingUnit').datagrid('getRows');
                if(nIndex>=oCurrentList.length-1)
                {
                    $('#tblWorkingUnit').datagrid('selectRow', oCurrentList.length-1);
                }
                else
                {
                    $('#tblWorkingUnit').datagrid('selectRow', nIndex+1);
                }
            }
        }
        else if(e.which == 13)//enter=13
        {
            var oSelectedWorkingUnit= $('#tblWorkingUnit').datagrid('getSelected');
            if(oSelectedWorkingUnit ==null || parseInt(oSelectedWorkingUnit.WorkingUnitID)<=0)
            {
                alert("Please select a Working Unit !");
                return;
            }
            $('#winWorkingUnit').window('close');
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            var workingUnitControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.irWorkingUnitClass');
            $(workingUnitControll).val(oSelectedWorkingUnit.WorkingUnitName);
            $(workingUnitControll).removeClass("textboxstyle");
            $(workingUnitControll).addClass("highlight");
            $(workingUnitControll).addClass("textboxstyle2");
            var nInputBoxIndex = $(".irWorkingUnitClass").index(workingUnitControll);
            ResetAllInputBox(nInputBoxIndex, '.irMeasurementUnitClass');
            var nIndex=$("#tblVoucherDetail").data('selectedIndex');
            $("#tblVoucherDetail").data('rows')[nRowIndex].WUID=oSelectedWorkingUnit.WorkingUnitID;
            $("#tblVoucherDetail").data('rows')[nRowIndex].WUName=oSelectedWorkingUnit.WorkingUnitName;
            InitializeKeyDownEvent(".irMeasurementUnitClass"); return;
        }
        else
        {
            var txtSearchByWorkingUnit = document.getElementById('txtSearchByWorkingUnit').value;
            var oSearchedLedgerWorkingUnit = [];  var sTempName="";
            var oCurrentList = $('#tblWorkingUnit').datagrid('getRows');
            if (e.which == 8)
            {
                oCurrentList = _oWorkingUnits;
            }
            for(i=0;i<oCurrentList.length;i++){
                sTempName=oCurrentList[i].WorkingUnitName;
                n=sTempName.toUpperCase().indexOf(txtSearchByWorkingUnit.toUpperCase());
                if(n!=-1)
                {
                    oSearchedLedgerWorkingUnit.push(oCurrentList[i]);
                }
            }
            RefreashWorkingUnits(oSearchedLedgerWorkingUnit);
        }
    });

    $("#btnCloseMUnit").click(function(){
        $('#winMUnit').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.irMeasurementUnitClass').focus();
    });

    $("#btnOkMUnit").click(function(){
        var oSelectedMUnit= $('#tblMUnit').datagrid('getSelected');
        if(oSelectedMUnit == null || parseInt(oSelectedMUnit.MeasurementUnitID)<=0)
        {
            alert("Please select a Measurement Unit !");
            return;
        }
        $('#winMUnit').window('close');

        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        var mUnitControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.irMeasurementUnitClass');
        $(mUnitControll).val(oSelectedMUnit.UnitName);
        $(mUnitControll).removeClass("textboxstyle");
        $(mUnitControll).addClass("highlight");
        $(mUnitControll).addClass("textboxstyle2");
        var nInputBoxIndex = $(".irMeasurementUnitClass").index(mUnitControll);
        ResetAllInputBox(nInputBoxIndex, '.irQtyClass');
        var nIndex=$("#tblVoucherDetail").data('selectedIndex');
        $("#tblVoucherDetail").data('rows')[nRowIndex].MUID=oSelectedMUnit.MeasurementUnitID;
        $("#tblVoucherDetail").data('rows')[nRowIndex].MUName=oSelectedMUnit.UnitName;
        InitializeKeyDownEvent(".irQtyClass"); return;
    });

    $('#winMUnit').keydown(function (e)
    {
        if (e.which === 27) {
            $('#winMUnit').window('close');
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            $('#tblVoucherDetail tr').eq(nRowIndex).find('.irMeasurementUnitClass').focus();
        }
        else if(e.which == 38 || e.which == 40)
        {
            var oMUnit= $('#tblMUnit').datagrid('getSelected');
            var nIndex=$('#tblMUnit').datagrid('getRowIndex', oMUnit);
            if(e.which == 38)//up arrow=38
            {
                if(nIndex<=0)
                {
                    $('#tblMUnit').datagrid('selectRow', 0);
                }
                else
                {
                    $('#tblMUnit').datagrid('selectRow', nIndex-1);
                }
            }
            if(e.which == 40)//down arrow=40
            {
                var oCurrentList = $('#tblMUnit').datagrid('getRows');
                if(nIndex>=oCurrentList.length-1)
                {
                    $('#tblMUnit').datagrid('selectRow', oCurrentList.length-1);
                }
                else
                {
                    $('#tblMUnit').datagrid('selectRow', nIndex+1);
                }
            }
        }
        else if(e.which == 13)//enter=13
        {
            var oSelectedMUnit= $('#tblMUnit').datagrid('getSelected');
            if(oSelectedMUnit == null || parseInt(oSelectedMUnit.MeasurementUnitID)<=0)
            {
                alert("Please select a Measurement Unit !");
                return;
            }
            $('#winMUnit').window('close');
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            var mUnitControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.irMeasurementUnitClass');
            $(mUnitControll).val(oSelectedMUnit.UnitName);
            $(mUnitControll).removeClass("textboxstyle");
            $(mUnitControll).addClass("highlight");
            $(mUnitControll).addClass("textboxstyle2");
            var nInputBoxIndex = $(".irMeasurementUnitClass").index(mUnitControll);
            ResetAllInputBox(nInputBoxIndex, '.irQtyClass');
            var nIndex=$("#tblVoucherDetail").data('selectedIndex');
            $("#tblVoucherDetail").data('rows')[nRowIndex].MUID=oSelectedMUnit.MeasurementUnitID;
            $("#tblVoucherDetail").data('rows')[nRowIndex].MUName=oSelectedMUnit.UnitName;
            InitializeKeyDownEvent(".irQtyClass"); return;
        }
        else
        {
            var txtSearchByMUnit = document.getElementById('txtSearchByMUnit').value;
            var oSearchedLedgerMUnit = [];  var sTempName="";
            var oCurrentList = $('#tblMUnit').datagrid('getRows');
            if (e.which == 8)
            {
                oCurrentList = _oMeasurementUnits;
            }
            for(i=0;i<oCurrentList.length;i++){
                sTempName=oCurrentList[i].LocationName;
                n=sTempName.toUpperCase().indexOf(txtSearchByMUnit.toUpperCase());
                if(n!=-1)
                {
                    oSearchedLedgerMUnit.push(oCurrentList[i]);
                }
            }
            RefreashMUnits(oSearchedLedgerMUnit);
        }
    });

    $("#btnCloseTrType").click(function(){
        $('#winTrType').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.btTrTypeClass').focus();
    });

    function SelectBillTransactionType()
    {
        var oSelectedTrType= $('#tblTrType').datagrid('getSelected');
        if(oSelectedTrType ==null)
        {
            alert("Please select an item !");
            return;
        }
        $('#winTrType').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        var mTrType = $('#tblVoucherDetail tr').eq(nRowIndex).find('.btTrTypeClass');
        $(mTrType).val(oSelectedTrType.EnumValue);
        $(mTrType).removeClass("textboxstyle");
        $(mTrType).addClass("highlight");
        $(mTrType).addClass("textboxstyle2");
        var nInputBoxIndex = $(".btTrTypeClass").index(mTrType);
        ResetAllInputBox(nInputBoxIndex, '.btBillNoClass');
        var nIndex=$("#tblVoucherDetail").data('selectedIndex');
        $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt=oSelectedTrType.EnumId;
        $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeStr=oSelectedTrType.EnumValue;
        var currentAmount = parseFloat(RemoveComma($('#tblVoucherDetail tr').eq(nRowIndex).find('.btAmountClass').val()));        
        var sRefType= $("#tblVoucherDetail").data('rows')[nRowIndex].DR_CR;
        var amount = AmountCalculation(nRowIndex, sRefType, currentAmount);
        amount = parseFloat(amount.toFixed(2));
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.btAmountClass').val(formatPrice(amount,null));
        InitializeKeyDownEvent(".btBillNoClass"); return;
    }

    $("#btnOkTrType").click(function(){
        SelectBillTransactionType();
    });

    $('#winTrType').keydown(function (e)
    {
        if (e.which === 27) {
            $('#winTrType').window('close');
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            $('#tblVoucherDetail tr').eq(nRowIndex).find('.btTrTypeClass').focus();
        }
        else if(e.which == 38 || e.which == 40)
        {
            var oTrType= $('#tblTrType').datagrid('getSelected');
            var nIndex=$('#tblTrType').datagrid('getRowIndex', oTrType);
            if(e.which == 38)//up arrow=38
            {
                if(nIndex<=0)
                {
                    $('#tblTrType').datagrid('selectRow', 0);
                }
                else
                {
                    $('#tblTrType').datagrid('selectRow', nIndex-1);
                }
            }
            if(e.which == 40)//down arrow=40
            {
                var oCurrentList = $('#tblTrType').datagrid('getRows');
                if(nIndex>=oCurrentList.length-1)
                {
                    $('#tblTrType').datagrid('selectRow', oCurrentList.length-1);
                }
                else
                {
                    $('#tblTrType').datagrid('selectRow', nIndex+1);
                }
            }
        }
        else if(e.which == 13)//enter=13
        {
            SelectBillTransactionType();
        }
        else
        {
            var txtSearchByTrType = document.getElementById('txtSearchByTrType').value;
            var oSearchedLedgerTrType = [];  var sTempName="";
            var oCurrentList = $('#tblTrType').datagrid('getRows');
            if (e.which == 8)
            {
                oCurrentList = _oTrTypes;
            }
            for(i=0;i<oCurrentList.length;i++){
                sTempName=oCurrentList[i].EnumValue;
                n=sTempName.toUpperCase().indexOf(txtSearchByTrType.toUpperCase());
                if(n!=-1)
                {
                    oSearchedLedgerTrType.push(oCurrentList[i]);
                }
            }
            RefreashTrTypes(oSearchedLedgerTrType);
        }
    });

    $("#btnCloseBillNo").click(function(){
        $('#winBillNo').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.btBillNoClass').focus();
    });

    $('#btnOkBillNo').click(function(){
        SelectBill();
    });

    $('#winBillNo').keydown(function (e)
    {
        if (e.which === 27) {
            $('#winBillNo').window('close');
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            $('#tblVoucherDetail tr').eq(nRowIndex).find('.btBillNoClass').focus();
        }
        else if(e.which == 38 || e.which == 40)
        {
            var oBill= $('#tblBillNo').datagrid('getSelected');
            var nIndex=$('#tblBillNo').datagrid('getRowIndex', oBill);
            if(e.which == 38)//up arrow=38
            {
                if(nIndex<=0)
                {
                    $('#tblBillNo').datagrid('selectRow', 0);
                }
                else
                {
                    $('#tblBillNo').datagrid('selectRow', nIndex-1);
                }
            }
            if(e.which == 40)//down arrow=40
            {
                var oCurrentList = $('#tblBillNo').datagrid('getRows');
                if(nIndex>=oCurrentList.length-1)
                {
                    $('#tblBillNo').datagrid('selectRow', oCurrentList.length-1);
                }
                else
                {
                    $('#tblBillNo').datagrid('selectRow', nIndex+1);
                }
            }
        }
        else if(e.which == 13)//enter=13
        {
            SelectBill();
        }
        else if(e.which == 107)
        {
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            var nTrTypeInt = $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt;
            if(parseInt(nTrTypeInt) == 1 || parseInt(nTrTypeInt) == 3)
            {
                CreateNewBill();
            }
        }
        else
        {
            var txtSearchByBillNo = document.getElementById('txtSearchByBillNo').value;
            var oSearchedLedgerBillNo = [];  var sTempName="";
            var oCurrentList = $('#tblBillNo').datagrid('getRows');
            if (e.which == 8)
            {
                oCurrentList = _oVoucherBills;
            }
            for(i=0;i<oCurrentList.length;i++){
                sTempName=oCurrentList[i].BillNo;
                n=sTempName.toUpperCase().indexOf(txtSearchByBillNo.toUpperCase());
                if(n!=-1)
                {
                    oSearchedLedgerBillNo.push(oCurrentList[i]);
                }
            }
            RefreashBillNos(oSearchedLedgerBillNo);
        }
    });

    $("#btnCloseCurrency").click(function(){
        $('#winCurrency').window('close');
        var nIndex=$("#tblVoucherDetail").data('selectedIndex');
        if($("#tblVoucherDetail").data('rows')[nIndex].DR_CR == "Debit")
        {
            $('.debitclass').eq(nIndex).focus();
            $('.debitclass').eq(nIndex).select();
        }
        else
        {
            $('.creditclass').eq(nIndex).focus();
            $('.creditclass').eq(nIndex).select();
        }
    });

    $("#btnOkCurrency").click(function(){
        var ntxtCurrencySymbol = $("#txtCurrencySymbol ").val();
        var ntxtCurrencyAmount = $("#txtCurrencyAmount").val();
        var ntxtConversionRate = $("#txtConversionRate").val();
        var ntxtAmountInBDT = $("#txtBaseCurrencyAmount ").val();
        var nCurrencyId = 0;
        var checkCurrency =  CheckAndGetCurrency(ntxtCurrencySymbol);
        checkCurrency = checkCurrency.split(",");

        if(checkCurrency[0] == "Invalid Currency")
        {
            if(ntxtCurrencySymbol == "")
            {
                alert("Please Give Currency Symbol");
            }
            else
            {
                alert(checkCurrency[0]);
            }
            $('#txtCurrencySymbol').focus();
            $('#txtCurrencySymbol').select();
            return false;
        }
        else
        {
            nCurrencyId = checkCurrency[1];
            if(parseInt(_oVoucher.BaseCurrencyID) != parseInt(nCurrencyId))
            {
                if(parseFloat(ntxtCurrencyAmount) == 0)
                {
                    alert("Please Give Currency Amount");
                    $('#txtCurrencyAmount').focus();
                    $('#txtCurrencyAmount').select();
                    return false;
                }
                else if(parseFloat(ntxtConversionRate) == 0)
                {
                    alert("Please Give Currency Rate");
                    $('#txtConversionRate').focus();
                    $('#txtConversionRate').select();
                    return false;
                }
                else if (parseFloat(ntxtAmountInBDT) == 0)
                {
                    alert("Please Give Base Currency Amount");
                    $('#txtBaseCurrencyAmount').focus();
                    $('#txtBaseCurrencyAmount').select();
                    return false;
                }
            }
        }

        var nIndex = $("#tblVoucherDetail").data('selectedIndex');
        var txtCurrency = $('#tblVoucherDetail tr').eq(nIndex).find('.currencyclass');
        ntxtCurrencyAmount = parseFloat(ntxtCurrencyAmount).toFixed(2);
        ntxtConversionRate = parseFloat(ntxtConversionRate).toFixed(4);
        var makeString = "";
        if(_oVoucher.BaseCUSymbol == ntxtCurrencySymbol.toUpperCase())
        {
            makeString = ntxtCurrencySymbol.toUpperCase() + " " +parseFloat(ntxtCurrencyAmount).toFixed(2);
            ntxtConversionRate = 1;
        }
        else
        {
            makeString = ntxtCurrencySymbol.toUpperCase() + parseFloat(ntxtCurrencyAmount).toFixed(2) + "@@" + parseFloat(ntxtConversionRate).toFixed(4);
        }
        txtCurrency.text(makeString);
        $("#tblVoucherDetail").data('rows')[nIndex].CFormat = makeString;

        var amount = parseFloat(ntxtAmountInBDT).toFixed(2);

        var txtDebitCredit = null;
        if($("#tblVoucherDetail").data('rows')[nIndex].DR_CR == "Debit")
        {
            $("#tblVoucherDetail").data('rows')[nIndex].DrAmount=parseFloat(amount);
            $("#tblVoucherDetail").data('rows')[nIndex].CrAmount=parseFloat(0.00);
            txtDebitCredit= $('#tblVoucherDetail tr').eq(nIndex).find('.debitclass');
            txtDebitCredit.val(formatPrice(amount,null));
        }
        else
        {
            $("#tblVoucherDetail").data('rows')[nIndex].DrAmount=parseFloat(0.00);
            $("#tblVoucherDetail").data('rows')[nIndex].CrAmount=parseFloat(amount);
            txtDebitCredit= $('#tblVoucherDetail tr').eq(nIndex).find('.creditclass');
            txtDebitCredit.val(formatPrice(amount,null));
        }
        ntxtCurrencyAmount = parseFloat(ntxtCurrencyAmount).toFixed(2);
        $("#tblVoucherDetail").data('rows')[nIndex].Amount=parseFloat(amount);
        $("#tblVoucherDetail").data('rows')[nIndex].CFormat = makeString;
        $("#tblVoucherDetail").data('rows')[nIndex].CID  = parseInt(nCurrencyId);
        $("#tblVoucherDetail").data('rows')[nIndex].CAmount = parseFloat(ntxtCurrencyAmount);
        $("#tblVoucherDetail").data('rows')[nIndex].CRate = parseFloat(ntxtConversionRate);
        $("#tblVoucherDetail").data('rows')[nIndex].CSymbol = ntxtCurrencySymbol;
        $('#winCurrency').window('close');
        IdentifyConfiguration(nIndex,txtDebitCredit[0]);
    });

    $("#txtConversionRate").keyup(function (e){
        var nCRate = $(this).val();
        var nGivenAmount = $("#txtCurrencyAmount").val();
        var nBaseCurrenctAmount = parseFloat(nGivenAmount) * parseFloat(nCRate);
        if(isNaN(nBaseCurrenctAmount))
        {
            nBaseCurrenctAmount = 0;
        }
        nBaseCurrenctAmount = parseFloat(nBaseCurrenctAmount).toFixed(4);
        $("#txtBaseCurrencyAmount").val(nBaseCurrenctAmount);
    });
    
    $("#txtBaseCurrencyAmount").keyup(function (e){
        var nBaseCurrencyAmount =  $(this).val();
        var nGivenAmount = $("#txtCurrencyAmount").val();
        var nCRate = parseFloat(nBaseCurrencyAmount) / parseFloat(nGivenAmount);
        if(isNaN(nCRate))
        {
            nCRate = 0;
        }
        nCRate = formatPrice4digit(parseFloat(nCRate));
        $("#txtConversionRate").val(nCRate);
    });

    function SelectAccountHead()
    {
        var oSelectedLedger= $('#tblAccountHead').datagrid('getSelected');
        if(oSelectedLedger ==null || parseInt(oSelectedLedger.AccountHeadID)<=0)
        {
            alert("Please select an account head!");
            return;
        }
        $('#winAccountHead').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        var nAHID = parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].AHID);
        if(isNaN(nAHID))
        {
            nAHID = 0;
        }

        if(parseInt(nAHID)!=0)
        {
            if(parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].AHID)!=parseInt(oSelectedLedger.AccountHeadID))
            {
                var oTempVDObjs= $("#tblVoucherDetail").data('rows');
                var oVDObjs =[]; var bFlag=false;
                for(var i=0; i< oTempVDObjs.length; i++)
                {
                    if(i<=nRowIndex)
                    {
                        oVDObjs.push(oTempVDObjs[i]);
                    }
                    else
                    {
                        if(bFlag==false)
                        {
                            if(oTempVDObjs[i].ObjTypeInt==0)
                            {
                                bFlag=true;
                            }
                        }
                        if(bFlag==true)
                        {
                            oVDObjs.push(oTempVDObjs[i]);
                        }
                    }
                }
                RemakeGrid(oVDObjs);
            }
        }
        var accountHeadControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
        var accountHeadControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.accountclass');
        $(accountHeadControll).val(oSelectedLedger.AccountHeadName);
        $(accountHeadControll).removeClass("textboxstyle");
        $(accountHeadControll).addClass("highlight");
        $(accountHeadControll).addClass("textboxstyle2");
        var nInputBoxIndex=$('.accountclass').index(accountHeadControll);
        ResetAllInputBox(nInputBoxIndex, '.narrationclass');
        _accountHeadID = oSelectedLedger.AccountHeadID;
        var sAccountCode = oSelectedLedger.AccountCode;
        if(oSelectedLedger.LedgerBalance!="--")
        {
            sAccountCode = oSelectedLedger.LedgerBalance+'['+oSelectedLedger.AccountCode+']';
        }
        $("#tblVoucherDetail").data('rows')[nRowIndex].AHID=parseInt(oSelectedLedger.AccountHeadID);
        $("#tblVoucherDetail").data('rows')[nRowIndex].AHCode=sAccountCode;
        $("#tblVoucherDetail").data('rows')[nRowIndex].AHName=oSelectedLedger.AccountHeadName;
        $("#tblVoucherDetail").data('rows')[nRowIndex].IsCCAply=oSelectedLedger.IsCostCenterApply;
        $("#tblVoucherDetail").data('rows')[nRowIndex].IsBTAply=oSelectedLedger.IsBillRefApply;
        $("#tblVoucherDetail").data('rows')[nRowIndex].IsOrderaAply=oSelectedLedger.IsOrderReferenceApply;
        $("#tblVoucherDetail").data('rows')[nRowIndex].IsChkAply=oSelectedLedger.IsChequeApply;
        $("#tblVoucherDetail").data('rows')[nRowIndex].IsIRAply=oSelectedLedger.IsInventoryApply;
        $("#tblVoucherDetail").data('rows')[nRowIndex].IsPaidChk=oSelectedLedger.IsPaymentCheque;
        document.getElementById("tblVoucherDetail").rows[nRowIndex].children[3].innerHTML=sAccountCode;
        InitializeKeyDownEvent(".narrationclass"); return;
    }
    
    //Start Cheque
    $("#btnRefreshCheque").click(function(){
        var nChaqueType=parseInt($("#cboChequeType").val());
        if(nChaqueType == 0)
        {
            alert("Please select Cheque Type");
            return false;
        }
        var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');

        var nChaqueType=parseInt($("#cboChequeType").val());
        if(nChaqueType == 2)
        {
            $("#tblVoucherDetail").data('rows')[nRowIndex].IsPaidChk = true;
        }else{
            $("#tblVoucherDetail").data('rows')[nRowIndex].IsPaidChk = false;
        }

        $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeType=$("#tblVoucherDetail").data('rows')[nRowIndex].IsPaidChk?2:1;
        var oVoucherCheque = {
            ChequeNo:$.trim($('#txtChequeNo').val()),
            ChequeType : $("#tblVoucherDetail").data('rows')[nRowIndex].IsPaidChk?2:1,
            ChequeID : parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID),
            CCID : parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].CCID)
        };

        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oVoucherCheque,
            ControllerName: "Voucher",
            ActionName: "GetsCheques",
            IsWinClose: false
        };       
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if(nChaqueType===1)
                {
                    if (parseInt(response.objs[0].ReceivedChequeID) > 0) {
                        var oCheques = response.objs;
                        RefreashCheque(oCheques);
                        $('#winCheque').data('chequenoclass',_oThis);
                        $('#winCheque').data('cheques',oCheques);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else
                {
                    if (parseInt(response.objs[0].ChequeID) > 0) {
                        var oCheques = response.objs;
                        RefreashCheque(oCheques);
                        $('#winCheque').data('chequenoclass',_oThis);
                        $('#winCheque').data('cheques',oCheques);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
            }
            else
            {
                alert("Data Not Found!");
            }
        });
    });
        
    function RefreashCheque(oCheques)
    {
        var data=oCheques;
        data={"total":""+data.length+"","rows":data};
        $('#tblCheque').datagrid('loadData',data);
        $('#tblCheque').datagrid('selectRow', 0);
    }

    function CreateNewCheque()
    {
        debugger;
        var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
        var oCurrentObj=$("#tblVoucherDetail").data('rows')[nRowIndex];
        var nCCID=oCurrentObj.CCID;
        var nRefType=oCurrentObj.ObjTypeInt;


        var tsv=((new Date()).getTime())/1000;
        var oParameter = new Object();
        oParameter.Name = "Add Received Cheque";
        oParameter.RefType=nRefType;
        var url =sessionStorage.getItem('BaseAddress')+ "/ReceivedCheque/ViewVoucherReceivedCheque?id=0&ccid="+nCCID;
        var oReceivedCheque = window.showModalDialog(url, oParameter, 'dialogHeight:380px;dialogWidth:950px;dialogLeft:200;dialogTop:150;center:yes;resizable:no;status:no;scroll:no');
        if(oReceivedCheque!=null)
        {
            if(oReceivedCheque.ReceivedChequeID>0)
            {
                var nIndex = $('#tblCheque').datagrid('getRows').length;
                $('#tblCheque').datagrid('appendRow', oReceivedCheque);
                $('#tblCheque').datagrid('selectRow', nIndex);
            }
        }

    }

    function SelectCheque(){
        var oCheque=$('#tblCheque').datagrid('getSelected');
        $('#winCheque').window('close');

        var nChequeID = 0 ;
        var nChequeType=  parseInt($("#cboChequeType").val());
        if(nChequeType===1)
        {
            nChequeID =parseInt(oCheque.ReceivedChequeID);
        }
        else
        {
            nChequeID=parseInt(oCheque.ChequeID);
        }

        if (oCheque != null && parseInt(nChequeID) > 0) {

            var result = CheckDuplicateOrNot(parseInt(nChequeID),"Cheque");
            if(result == "Duplicate")
            {
                alert("Can't select same Cheque.");
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var chequenoControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.chequenoclass');
                chequenoControll.select();
                return;
            }
            else
            {
                var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
                var chequenoControll = $('#tblVoucherDetail tr').eq(nRowIndex).addClass('highlight');
                var chequenoControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.chequenoclass');

                var sAmountSt = "";
                if(nChequeType===1)
                {
                    sAmountSt =oCheque.AmountSt;
                }
                else
                {
                    sAmountSt=oCheque.AmountInString;
                }
                var sChequeAmount=$.trim(RemoveComma(sAmountSt));
                if(sChequeAmount==""||sChequeAmount==null ||isNaN(sChequeAmount))
                {
                    alert("Invalid Cheque amount!");
                    $('#winCheque').data('chequenoclass').select();
                    return false;
                }
                if(parseFloat(sChequeAmount)<= 0)
                {
                    alert("Invalid Cheque amount!");
                    $('#winCheque').data('chequenoclass').select();
                    return false;
                }
                sChequeAmount = parseFloat(parseFloat(sChequeAmount).toFixed(2));
                $("#tblVoucherDetail").data('rows')[nRowIndex].CAmount=  parseFloat(sChequeAmount);
                $("#tblVoucherDetail").data('rows')[nRowIndex].Amount=  parseFloat(sChequeAmount);
                var nCCID=$("#tblVoucherDetail").data('rows')[nRowIndex].CCID;
                var sCCName=$("#tblVoucherDetail").data('rows')[nRowIndex].CCName;
                var totalCreditOrDebitAmount = 0;
                var totalChequeAmount = 0,totalSLChequeAmount = 0,totalSLAmount = 0;
                var debitOrCredit = "";
                for(var i = nRowIndex;i >= 0;i--)
                {
                    if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Cheque")
                    {
                        totalChequeAmount = parseFloat(totalChequeAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                    }
                    if($("#tblVoucherDetail").data('rows')[i].DR_CR == "SL Cheque" && $("#tblVoucherDetail").data('rows')[i].CCID===nCCID)
                    {
                        totalSLChequeAmount = parseFloat(totalSLChequeAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                    }
                    if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Subledger" && $("#tblVoucherDetail").data('rows')[i].IsChkAply && $("#tblVoucherDetail").data('rows')[i].CCID===nCCID)
                    {
                        totalSLAmount = parseFloat(totalSLAmount) + parseFloat($("#tblVoucherDetail").data('rows')[i].CAmount);
                    }
                    else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Credit")
                    {
                        totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                        debitOrCredit = "Credit";
                        break;
                    }
                    else if($("#tblVoucherDetail").data('rows')[i].DR_CR == "Debit")
                    {
                        totalCreditOrDebitAmount = $("#tblVoucherDetail").data('rows')[i].CAmount;
                        debitOrCredit = "Debit";
                        break;
                    }
                }
                totalSLChequeAmount = parseFloat(totalSLChequeAmount.toFixed(2));
                totalSLAmount = parseFloat(totalSLAmount.toFixed(2));
                totalChequeAmount = parseFloat(totalChequeAmount.toFixed(2));
                totalCreditOrDebitAmount = parseFloat(totalCreditOrDebitAmount).toFixed(2);

                if(parseFloat(totalChequeAmount) > parseFloat(totalCreditOrDebitAmount))
                {
                    alert("Sorry,Total Amount for this "+ debitOrCredit +" is " + totalCreditOrDebitAmount);
                    $('#winCheque').data('chequenoclass').select();
                    return false;
                }
                if(parseFloat(totalSLChequeAmount) > parseFloat(totalSLAmount))
                {
                    alert("Sorry,Total Amount for "+ sCCName +" is " + totalSLAmount);
                    $('#winCheque').data('chequenoclass').select();
                    return false;
                }


                $(chequenoControll).val(oCheque.ChequeNo);
                var index = $('.chequenoclass').index(chequenoControll);
                $('.accountnoclass').eq(index).text(oCheque.AccountNo);
                $('.banknameclass').eq(index).text(oCheque.BankName);
                $(chequenoControll).removeClass("textboxstyle");
                $(chequenoControll).addClass("highlight");
                $(chequenoControll).addClass("textboxstyle2");

                if(parseInt($("#cboChequeType").val()) == 1)
                {
                    $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeDate=oCheque.ChequeDateSt;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeDateStr=oCheque.ChequeDateSt;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID=parseInt(oCheque.ReceivedChequeID);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].BranchName=oCheque.BranchName;
                    $('.branchnameclass').eq(index).text(oCheque.BranchName);
                    $('.chequedateclass').eq(index).text(oCheque.ChequeDateSt);
                    $('.chequeamountclass').eq(index).val(oCheque.AmountSt);
                }
                else if(parseInt($("#cboChequeType").val()) ==2)
                {
                    $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeDate=oCheque.ChequeDateInString;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeDateStr=oCheque.ChequeDateInString;
                    $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeID=parseInt(oCheque.ChequeID);
                    $("#tblVoucherDetail").data('rows')[nRowIndex].BranchName=oCheque.BankBranchName;
                    $('.branchnameclass').eq(index).text(oCheque.BankBranchName);
                    $('.chequedateclass').eq(index).text(oCheque.ChequeDateInString);
                    $('.chequeamountclass').eq(index).val(oCheque.AmountInString);
                }
                $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeType=parseInt($("#cboChequeType").val());
                $("#tblVoucherDetail").data('rows')[nRowIndex].ChequeNo=oCheque.ChequeNo;
                $("#tblVoucherDetail").data('rows')[nRowIndex].BankName=oCheque.BankName;
                $("#tblVoucherDetail").data('rows')[nRowIndex].AccountNo=oCheque.AccountNo;
                IdentifyConfiguration(nRowIndex,$('#winCheque').data('chequenoclass'));
            }
        }
    }

    $("#btnAddCheque").click(function(){CreateNewCheque();});

    $("#btnEditCheque").click(function(){
        debugger;
        var oReceivedCheque= $('#tblCheque').datagrid('getSelected');
        if(oReceivedCheque==null || oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
        var oCurrentObj=$("#tblVoucherDetail").data('rows')[nRowIndex];
        var nCCID=oCurrentObj.CCID;
        var nRefType=oCurrentObj.ObjTypeInt;
        var SelectedRowIndex=$('#tblCheque').datagrid('getRowIndex',oReceivedCheque);
        var tsv=((new Date()).getTime())/1000;
        var oParameter = new Object();
        oParameter.Name = "Edit Received Cheque";
        oParameter.RefType=nRefType;
        var url =sessionStorage.getItem('BaseAddress')+ "/ReceivedCheque/ViewVoucherReceivedCheque?id="+oReceivedCheque.ReceivedChequeID+"&ccid="+nCCID;
        var oReceivedCheque = window.showModalDialog(url, oParameter, 'dialogHeight:380px;dialogWidth:950px;dialogLeft:200;dialogTop:150;center:yes;resizable:no;status:no;scroll:no');
        if(oReceivedCheque!=null)
        {
            if(oReceivedCheque.ReceivedChequeID>0)
            {

                $('#tblCheque').datagrid('updateRow',{index: SelectedRowIndex,row: oReceivedCheque});
                $('#tblCheque').datagrid('selectRow', SelectedRowIndex);
            }
        }
    });

    $("#btnViewCheque").click(function(){
        debugger;
        var oReceivedCheque= $('#tblCheque').datagrid('getSelected');
        if(oReceivedCheque==null || oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var nRowIndex=$("#tblVoucherDetail").data('selectedIndex');
        var oCurrentObj=$("#tblVoucherDetail").data('rows')[nRowIndex];
        var nCCID=oCurrentObj.CCID;
        var nRefType=oCurrentObj.ObjTypeInt;
        var SelectedRowIndex=$('#tblCheque').datagrid('getRowIndex',oReceivedCheque);
        var tsv=((new Date()).getTime())/1000;
        var oParameter = new Object();
        oParameter.Name = "View Received Cheque";
        oParameter.RefType=nRefType;
        var url =sessionStorage.getItem('BaseAddress')+ "/ReceivedCheque/ViewVoucherReceivedCheque?id="+oReceivedCheque.ReceivedChequeID+"&ccid="+nCCID;
        var oReceivedCheque = window.showModalDialog(url, oParameter, 'dialogHeight:380px;dialogWidth:950px;dialogLeft:200;dialogTop:150;center:yes;resizable:no;status:no;scroll:no');
        if(oReceivedCheque!=null)
        {
            if(oReceivedCheque.ReceivedChequeID>0)
            {
                $('#tblCheque').datagrid('updateRow',{index: SelectedRowIndex,row: oReceivedCheque});
                $('#tblCheque').datagrid('selectRow', SelectedRowIndex);
            }
        }
    });

    $("#btnDeleteCheque").click(function(){
        debugger;
        var oReceivedCheque= $('#tblCheque').datagrid('getSelected');
        if(oReceivedCheque==null || oReceivedCheque.ReceivedChequeID<=0)
        {
            alert("Please select a item from list!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblCheque').datagrid('getRowIndex',oReceivedCheque);
        if (oReceivedCheque.ReceivedChequeID > 0)
        {
            $.icsDelete({
                BaseAddress: sessionStorage.getItem('BaseAddress'),
                Object: oReceivedCheque,
                ControllerName: "ReceivedCheque",
                ActionName: "Delete",
                TableId: "tblCheque",
                IsWinClose: false
            });
        }
    });

    $("#cboChequeType").change(function(){
        RefreashCheque([]);
    });

    $("#btnOkCheque").click(function(){
        SelectCheque();
    });

    $("#btnCloseCheque").click(function(){
        $('#winCheque').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.chequenoclass').focus();
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.chequenoclass').select();
    });

    $('#winCheque').keydown(function (e)
    {
        if (e.which === 27) {
            $('#winCheque').window('close');
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            $('#tblVoucherDetail tr').eq(nRowIndex).find('.chequenoclass').focus();
        }
        else if(e.which == 38 || e.which == 40)
        {
            var oCheque= $('#tblCheque').datagrid('getSelected');
            var nIndex=$('#tblCheque').datagrid('getRowIndex', oCheque);
            if(e.which == 38)//up arrow=38
            {
                if(nIndex<=0)
                {
                    $('#tblCheque').datagrid('selectRow', 0);
                }
                else
                {
                    $('#tblCheque').datagrid('selectRow', nIndex-1);
                }
            }
            if(e.which == 40)//down arrow=40
            {
                var oCurrentList = $('#tblCheque').datagrid('getRows');
                if(nIndex>=oCurrentList.length-1)
                {
                    $('#tblCheque').datagrid('selectRow', oCurrentList.length-1);
                }
                else
                {
                    $('#tblCheque').datagrid('selectRow', nIndex+1);
                }
            }
        }
        else if(e.which == 13)//enter=13
        {
            SelectCheque();
        }
        else if(e.which == 107)
        {
            //var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            //var nBTTypeInt = $("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt;
            //if(parseInt(nBTTypeInt) == 1 || parseInt(nBTTypeInt) == 3)
            //{
            CreateNewCheque();
            return false;
            //}
        }
        else if(e.which != 9)//tab=9
        {
            $('#txtChequeNo').icsSearchByText({
                Event: e,
                SearchProperty: "ChequeNo",
                GlobalObjectList:  $('#winCheque').data('cheques'),
                TableId: "tblCheque"});
            $('#txtAccountNo').icsSearchByText({
                Event: e,
                SearchProperty: "AccountNo",
                GlobalObjectList:  $('#winCheque').data('cheques'),
                TableId: "tblCheque"});
            $('#txtBankName').icsSearchByText({
                Event: e,
                SearchProperty: "BankName",
                GlobalObjectList:  $('#winCheque').data('cheques'),
                TableId: "tblCheque"});
            $('#txtBranchName').icsSearchByText({
                Event: e,
                SearchProperty: "BranchName",
                GlobalObjectList:  $('#winCheque').data('cheques'),
                TableId: "tblCheque"});
            $('#txtParty').icsSearchByText({
                Event: e,
                SearchProperty: "ContractorName",
                GlobalObjectList:  $('#winCheque').data('cheques'),
                TableId: "tblCheque"});
        }
    });
    //end cheque 

    
    //Start VOrder Ref
    function SelectVOrder()
    {
        var oSelectedVOrder= $('#tblOrderRef').datagrid('getSelected');
        if(oSelectedVOrder ==null || parseInt(oSelectedVOrder.VOrderID)<=0)
        {
            alert("Please select a Order!");
            return;
        }

        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        var nTrTypeInt= parseInt($("#tblVoucherDetail").data('rows')[nRowIndex].TrTypeInt);        
        var configType = "Order Ref";
        if(parseInt(nTrTypeInt)===8)
        {
            configType = "SLOrder Ref";
        }

        var result = CheckDuplicateOrNot(oSelectedVOrder.VOrderID, configType);
        if(result == "Duplicate")
        {
            alert("Can't take same Order ref for one debit or credit.");
            return false;
        }
        $('#winOrderRef').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        var VOrderControll = $('#tblVoucherDetail tr').eq(nRowIndex).find('.refnoclass');
        $(VOrderControll).val(oSelectedVOrder.RefNo);
        
        $(VOrderControll).removeClass("textboxstyle");
        $(VOrderControll).addClass("highlight");
        $(VOrderControll).addClass("textboxstyle2");
        var nInputBoxIndex = $(".refnoclass").index(VOrderControll);
        $('.ordernoclass').eq(nInputBoxIndex).text(oSelectedVOrder.OrderNo);
        ResetAllInputBox(nInputBoxIndex, '.orderremarksclass');
        var nIndex=$("#tblVoucherDetail").data('selectedIndex');
        $("#tblVoucherDetail").data('rows')[nIndex].OrderID=parseInt(oSelectedVOrder.VOrderID);
        $("#tblVoucherDetail").data('rows')[nIndex].RefNo=oSelectedVOrder.RefNo;
        $("#tblVoucherDetail").data('rows')[nIndex].OrderNo=oSelectedVOrder.OrderNo;        
        InitializeKeyDownEvent(".orderremarksclass"); return;
    }
    $("#btnOkOrderRef").click(function(){
        SelectVOrder();
    });

    $("#btnCloseOrderRef").click(function(){
        $('#winOrderRef').window('close');
        var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
        $('#tblVoucherDetail tr').eq(nRowIndex).find('.refnoclass').focus();
    });

    $('#winOrderRef').keydown(function (e)
    {
        if (e.which === 27) {
            $('#winOrderRef').window('close');
            var nRowIndex= $("#tblVoucherDetail").data("selectedIndex");
            $('#tblVoucherDetail tr').eq(nRowIndex).find('.refnoclass').focus();
        }
        else if(e.which == 38 || e.which == 40)
        {
            var oVOrder= $('#tblOrderRef').datagrid('getSelected');
            var nIndex=$('#tblOrderRef').datagrid('getRowIndex', oVOrder);
            if(e.which == 38)//up arrow=38
            {
                if(nIndex<=0)
                {
                    $('#tblOrderRef').datagrid('selectRow', 0);
                }
                else
                {
                    $('#tblOrderRef').datagrid('selectRow', nIndex-1);
                }
            }
            if(e.which == 40)//down arrow=40
            {
                var oCurrentList = $('#tblOrderRef').datagrid('getRows');
                if(nIndex>=oCurrentList.length-1)
                {
                    $('#tblOrderRef').datagrid('selectRow', oCurrentList.length-1);
                }
                else
                {
                    $('#tblOrderRef').datagrid('selectRow', nIndex+1);
                }
            }
        }
        else if(e.which == 13)//enter=13
        {
            SelectVOrder();
        }
        else
        {
            var txtSearchByOrderNo = document.getElementById('txtSearchByOrderNo').value;
            var oSearchedLedgerVOrder = [];  var sTempName="";
            var oCurrentList = $('#tblOrderRef').datagrid('getRows');
            if (e.which == 8)
            {
                oCurrentList = _oVOrders;
            }
            for(i=0;i<oCurrentList.length;i++){
                sTempName=oCurrentList[i].NameCode;
                n=sTempName.toUpperCase().indexOf(txtSearchByOrderNo.toUpperCase());
                if(n!=-1)
                {
                    oSearchedLedgerVOrder.push(oCurrentList[i]);
                }
            }
            RefreashVOrders(oSearchedLedgerVOrder);
        }
    });
    //end VOrder Ref


    $('#btnLastNarration').click(function (e){
        if($('#txtNarration').val()==null || $('#txtNarration').val()==='')
        {
            var oVoucher = { VoucherID : 0 };
            $.ajax({
                type: "POST",
                dataType: "json",
                url : sessionStorage.getItem('BaseAddress')+  "/Voucher/GetLastNarration",
                traditional: true,
                data:  JSON.stringify(oVoucher),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oVoucher = jQuery.parseJSON(data);
                    if (oVoucher.VoucherID>0 && oVoucher.Narration !="") {
                        $('#txtNarration').val(oVoucher.Narration);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    });

    $('#txtCurrencySymbol').keydown(function (e){
        if (e.which === 9) //Tab=9
        {
            $('#txtConversionRate').select();
        }
    });
</script>