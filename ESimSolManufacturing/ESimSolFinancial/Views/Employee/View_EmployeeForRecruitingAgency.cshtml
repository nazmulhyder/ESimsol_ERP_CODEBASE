
<html>
<head>
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
</head>
<body>

    @model ESimSol.BusinessObjects.Employee

    <div style="font-family:Tahoma">
        <table border="0" cellspacing="2" cellpadding="2">
            <tr>
                <td style="background-color:#CFB53B; text-align:center; width:890px; color:White">
                    <label id="lblHeaderName" style="font-size:15px; font-weight:bold; text-decoration:Underline"> Add Crew</label>
                </td>
            </tr>
        </table>
        @using (Html.BeginForm("EmployeeIUForRecruitingAgency", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div id="tt" class="easyui-accordion" style="width:885px;height:480px;">

                <div title="Crew" data-options="iconCls:'icon-ok'" style="overflow:auto;padding:10px;">

                    <fieldset>
                        <legend style="font-weight:bold"> Crew Informations : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                            <tr>
                                <td style="width:470px; text-align:right">
                                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                                        <tr>
                                            <td style="width:135px; text-align:right">
                                                Code :
                                            </td>
                                            <td style="width:280px">
                                                @Html.TextBoxFor(model => model.Code, new { style = "width: 270px;", id = "txtCode",placeholder="Enter Seaman Book No" })@*, disabled = "disabled"*@

                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:135px; text-align:right">
                                                Last Name :
                                            </td>
                                            <td style="width:280px">
                                                @Html.TextBoxFor(model => model.Name, new { style = "width: 270px;", id = "txtName" })*
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:135px; text-align:right">
                                                Given Name :
                                            </td>
                                            <td style="width:280px">
                                                @Html.TextBoxFor(model => model.NickName, new { style = "width: 270px;", id = "txtNickName" })*
                                            </td>
                                        </tr>
                                        @*<tr>
                                            <td style="width:135px; text-align:right">
                                                Middle Name :
                                            </td>
                                            <td style="width:280px">
                                                @Html.TextBoxFor(model => model.MiddleName, new { style = "width: 270px;", id = "txtMiddleName" })*
                                            </td>
                                        </tr>*@
                                        <tr>
                                            <td style="width:135px; text-align:right">
                                                Contact NO :
                                            </td>
                                            <td style="width:280px">
                                                @Html.TextBoxFor(model => model.ContactNo, new { style = "width: 270px;", id = "txtContactNo" })*
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:135px; text-align:right">
                                                Present Address :
                                            </td>
                                            <td style="width:280px">
                                                @Html.TextBoxFor(model => model.PresentAddress, new { style = "width: 270px;", id = "txtPresentAddress" })*
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:135px; text-align:right">
                                                Permanent Address :
                                            </td>
                                            <td style="width:280px">
                                                @Html.TextBoxFor(model => model.ParmanentAddress, new { style = "width: 270px;", id = "txtPermanentAddress" })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:135px; text-align:right">
                                                Email :
                                            </td>
                                            <td style="width:280px">
                                                @Html.TextBoxFor(model => model.Email, new { style = "width: 270px;", id = "txtEmail" })
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:345px">
                                    <table>
                                        <tr>

                                            <td style="width:300px; vertical-align:bottom">
                                                <u><b>Photo</b></u>
                                            </td>
                                        </tr>

                                        <tr>
                                            @*<td style="width:80px; text-align:right"></td>*@
                                            <td style="width:300px">
                                                <div style="text-align:center; vertical-align:middle; height:150px; width:150px; border:2px solid">
                                                    <img id="imgPhotoIcon" src="@Url.Action("GetPhoto", "Employee", new { nid = Model.EmployeeID })" alt="Photo" style="width:150px; height:150px" />
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            @*<td style="width:80px; text-align:right"></td>*@
                                            <td style="width:300px">
                                                <input type="button" value="Clear" id="btnPhotoClear" />
                                                <input id="filePhoto" type="file" name="file1" onchange="readPhotoURL(this);" />
                                            </td>
                                        </tr>
                                    </table>
                                </td>

                            </tr>
                        </table>
                    </fieldset>
                    @Html.HiddenFor(model => model.EmployeeID)
                    @Html.HiddenFor(model => model.Gender)
                    @Html.HiddenFor(model => model.MaritalStatus)
                    @Html.HiddenFor(model => model.DateOfBirth)
                    <fieldset>
                        <legend style="font-weight:bold"> Action : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                            <tr>
                                <td style="width:785px; text-align:right"></td>

                                <td style="width:50px"></td>
                                <td style="width:50px">
                                    @*                           <a id="btnEmployeeSave" type="submit" href="javascript:void(0)"
                                        class="easyui-linkbutton" iconCls="icon-save" plain="true">Save</a>*@
                                    <input id="btnSaveEmployee" type="submit" value="Save" style="width:75px; font-weight:bold" />
                                </td>
                            </tr>
                        </table>
                    </fieldset>

                </div> @*Employee Basic*@
                <div title="Crew Details" data-options="iconCls:'icon-ok'" style="padding:10px;">
                    <fieldset>
                        <legend style="font-weight:bold"> Crew Details : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                            <tr>
                                <td style="width:135px; text-align:right">
                                    Gender :
                                </td>
                                <td style="width:280px">
                                    <select id="cboGender" style="width:280px" class="_select_change_Gender">
                                        @*<option value="0">None</option>*@
                                        <option value="1">Male</option>
                                        <option value="2">Female</option>
                                        <option value="3">Other</option>
                                    </select>
                                </td>
                                <td style="width:40px"></td>
                                <td style="width:130px; text-align:right">
                                    Marital Status :
                                </td>
                                <td style="width:280px">
                                    <select id="cboMaritalStatus" style="width:280px" class="_select_change_MaritalStatus">
                                        <option value="0">None</option>
                                        <option value="1">Single</option>
                                        <option value="2">Married</option>
                                        <option value="3">Divorced</option>
                                        <option value="3">Widow</option>
                                    </select>
                                </td>
                            </tr>

                            <tr>
                                <td style="width:135px; text-align:right">
                                    Father's Name :
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.FatherName, new { style = "width: 280px;", id = "txtFatherName" })
                                </td>
                                <td style="width:40px"></td>
                                <td style="width:130px; text-align:right">
                                    Mother's Name :
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.MotherName, new { style = "width: 280px;", id = "txtMotherName" })
                                </td>
                            </tr>
                            <tr>
                                <td style="width:135px; text-align:right">
                                    Date Of Birth :
                                </td>
                                <td style="width:280px">
                                    @*@Html.TextBoxFor(model => model.DateOfBirth, new { style = "width: 280px;", id = "txtDateOfBirth" }) *@
                                    @*<input id="txtDateOfBirth" type="text" class="easyui-datebox" style="width: 270px;"
                                           data-options="formatter:icsdateformat,parser:icsdateparser" />*@
                                    <span id="regionDateFrom">
                                        <span>
                                            <select id="cboYear" style="width:90px;"></select>
                                        </span><span>
                                                   <select id="cboMonth" style="width:90px;"></select>
                                        </span><span>
                                            <select id="cboDay" style="width:80px;"></select>
                                        </span>
                                    </span>*

                                </td>
                                <td style="width:40px"></td>
                                <td style="width:130px; text-align:right">
                                    BirthPlace :
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.BirthPlace, new { style = "width: 280px;", id = "txtBirthPlace" })
                                </td>
                            </tr>
                            <tr>
                                <td style="width:135px; text-align:right">
                                    Blood Group :
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.BloodGroup, new { style = "width: 280px;", id = "txtBloodGroup" })
                                </td>
                                <td style="width:40px"></td>
                                <td style="width:130px; text-align:right">
                                    Identification Mark :
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.IdentificationMart, new { style = "width: 280px;", id = "txtIdentificationMart" })
                                </td>


                            </tr>
                            <tr>
                                <td style="width:135px; text-align:right">
                                    Height :
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.Height, new { style = "width: 280px;", id = "txtHeight" })
                                </td>
                                <td style="width:40px"></td>
                                <td style="width:130px; text-align:right">
                                    Weight :
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.Weight, new { style = "width: 280px;", id = "txtWeight" })
                                </td>

                            </tr>
                            <tr>
                                @*<td style="width:135px; text-align:right">
                                    DesignationType :
                                </td>
                                <td style="width:280px">
                                    @Html.DropDownListFor(model => model.EmployeeDesignationType, new SelectList(Enum.GetValues(typeof(ICS.Base.Client.Utility.EnumEmployeeType))), new { id = "cboEmployeeDesignationType", style = "width: 280px;" })
                                </td>*@
                                <td style="width:135px; text-align:right">
                                    Waist :
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.Waist, new { style = "width: 280px;", id = "txtWaist" })
                                </td>
                                <td style="width:40px"></td>
                                <td style="width:130px; text-align:right">
                                    Chest :
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.Chest, new { style = "width: 280px;", id = "txtChest" })
                                </td>
                            </tr>
                            <tr>                                
                                <td style="width:130px; text-align:right">
                                    ShoeSize :
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.ShoeSize, new { style = "width: 280px;", id = "txtShoeSize" })
                                </td>
                                <td style="width:40px"></td>
                                <td style="width:135px; text-align:right">
                                    Passport No :
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.PassportNo, new { style = "width: 280px;", id = "txtPassportNo" })
                                </td>
                            </tr>
                            <tr>
                                <td style="width:135px; text-align:right">
                                    Country Of Passport :
                                </td>
                                <td style="width:280px">
                                   @Html.TextBoxFor(model => model.CountryOfPassport, new { style = "width: 280px;", id = "txtCountryOfPassport" })
                                </td>
                                <td style="width:40px"></td>
                                <td style="width:130px; text-align:right">
                                    Passport Issue :
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.PassportIssueDate, new { style = "width: 280px;", id = "txtPassportIssueDate", placeholder = "Day / Month / Year" })
                                </td>
                            </tr>
                            <tr>
                                <td style="width:135px; text-align:right">
                                    Passport Expire:
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.PassportExpireDate, new { style = "width: 280px;", id = "txtPassportExpireDate", placeholder = "Day / Month / Year" })
                                </td>
                                <td style="width:40px"></td>
                                <td style="width:130px; text-align:right">
                                    Seaman Book :
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.SeamanBook, new { style = "width: 280px;", id = "txtSeamanBook", })
                                </td>
                            </tr>
                            <tr>
                                <td style="width:135px; text-align:right">
                                    SeamanBook Issue:
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.SemanBookIssueDate, new { style = "width: 280px;", id = "txtSemanBookIssueDate", placeholder = "Day / Month / Year" })
                                </td>
                                <td style="width:40px"></td>
                                <td style="width:130px; text-align:right">
                                    SeamanBook Expire:
                                </td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.SeamanBookExpireDate, new { style = "width: 280px;", id = "txtSeamanBookExpireDate", placeholder = "Day / Month / Year" })
                                </td>
                            </tr>
                            <tr>

                                <td style="width:135px; text-align:right">
                                    Note :
                                </td>
                                <td colspan="4">
                                    @Html.TextBoxFor(model => model.Note, new { style = "width: 710px;", id = "txtNote" })
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                    <fieldset>
                        <legend style="font-weight:bold"> Action : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                            <tr>
                                <td style="width:785px; text-align:right"></td>

                                <td style="width:50px"></td>
                                <td style="width:50px">
                                    @*                           <a id="btnEmployeeSave" type="submit" href="javascript:void(0)"
                                        class="easyui-linkbutton" iconCls="icon-save" plain="true">Save</a>*@
                                    <input id="btnSaveEmployeeDetails" type="button" value="Save" style="width:75px; font-weight:bold" />
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </div> @*Employee Details*@
                <div title="Educational Information" data-options="iconCls:'icon-ok'" style="padding:10px;">
                    <fieldset>
                        <legend style="font-weight:bold"> Education </legend>
                        <table id="tblEmployeEducation" title="Crew Education" class="easyui-datagrid" style="width:830px;height:250px"
                               data-options="
                    singleSelect: true,
                    fitColumns:false,
                    rownumbers:true,
                    pagination:false,
                    autoRowHeight:false,
                    toolbar: '#EmployeeEducationtoolbar'
                ">
                            <thead>
                                <tr>
                                    <th field="Degree" width="160" align="left">Course</th>
                                    @*<th field="Major" width="120" align="left">Major</th>*@
                                    @*<th field="Session" width="120" align="left">Session</th>*@
                                    <th field="PassingYear" width="120" align="left">Passing Year</th>
                                    @*<th field="BoardUniversity" width="160" align="left">Board/University</th>*@
                                </tr>
                            </thead>
                        </table>
                    </fieldset>
                    <div id="EmployeeEducationtoolbar" style="text-align:left;">
                        <table>
                            <tr>
                                <td style="width:40px;font-size:12px;"><a id="btnAddToList" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddEmployeeEducation()">New</a></td>
                                <td style="width:40px;font-size:12px;"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="EditEmployeeEducation()">Edit</a></td>
                                <td style="width:40px;font-size:12px;"><a id="btnDeleteRME" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteEmployeeEducation()">Remove</a></td>
                                <td ><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AttachmentFileEducation()">Attachment</a>  </td>
                            </tr>
                        </table>
                    </div>

                </div> @*Educational Information*@
                <div title="Experience Information" data-options="iconCls:'icon-ok'" style="padding:10px;">
                    <fieldset>
                        <legend style="font-weight:bold"> Experience </legend>
                        <table id="tblEmployeExperience" title="Crew Experience" class="easyui-datagrid" style="width:830px;height:250px"
                               data-options="
                    singleSelect: true,
                    fitColumns:false,
                    rownumbers:true,
                    pagination:false,
                    autoRowHeight:false,
                    toolbar: '#EmployeeExperiencetoolbar'
                ">
                            <thead>
                                <tr>
                                    <th field="Organization" width="160" align="left">Principal</th>
                                    <th field="Vessel" width="120" align="left">Vessel</th>
                                    <th field="Designation" width="120" align="left">Rank</th>
                                    <th field="DurationString" width="120" align="left">Duration</th>
                                </tr>
                            </thead>
                        </table>
                    </fieldset>
                    <div id="EmployeeExperiencetoolbar" style="text-align:left;">
                        <table>
                            <tr>
                                <td style="width:40px;font-size:12px;"><a id="btnAddToList" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddEmployeeExperience()">New</a></td>
                                <td style="width:40px;font-size:12px;"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="EditEmployeeExperience()">Edit</a></td>
                                <td style="width:40px;font-size:12px;"><a id="btnDeleteRME" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteEmployeeExperience()">Remove</a></td>
                                <td><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AttachmentFileExperience()">Attachment</a>  </td>
                             </tr>
                        </table>
                    </div>

                </div> @*Experience Information*@
                <div title="Training Information (Certification)" data-options="iconCls:'icon-ok'" style="padding:10px;">
                    <fieldset>
                        <legend style="font-weight:bold"> Training </legend>
                        <table id="tblEmployeTraining" title="Crew Training" class="easyui-datagrid" style="width:830px;height:250px"
                               data-options="
                    singleSelect: true,
                    fitColumns:false,
                    rownumbers:true,
                    pagination:false,
                    autoRowHeight:false,
                    toolbar: '#EmployeeTrainingtoolbar'
                ">
                            <thead>
                                <tr>
                                    <th field="CourseName" width="160" align="left">Course Name</th>
                                    <th field="CertificateNo" width="120" align="left">CertificateNo</th>
                                    <th field="DurationString" width="120" align="left">Duration</th>
                                </tr>
                            </thead>
                        </table>
                    </fieldset>
                    <div id="EmployeeTrainingtoolbar" style="text-align:left;">
                        <table>
                            <tr>
                                <td style="width:40px;font-size:12px;"><a id="btnAddToList" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddEmployeeTraining()">New</a></td>
                                <td style="width:40px;font-size:12px;"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="EditEmployeeTraining()">Edit</a></td>
                                <td style="width:40px;font-size:12px;"><a id="btnDeleteRME" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteEmployeeTraining()">Remove</a></td>
                                <td><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AttachmentFileTraining()">Attachment</a>  </td>
                             </tr>
                        </table>
                    </div>

                </div> @*Training Information*@
                <div title="Reference (Next of Kine)" data-options="iconCls:'icon-ok'" style="padding:10px;">
                    <fieldset>
                        <legend style="font-weight:bold"> Reference </legend>
                        <table id="tblEmployeReference" title="Crew Reference" class="easyui-datagrid" style="width:830px;height:250px;"
                               data-options="
                    singleSelect: true,
                    fitColumns:false,
                    rownumbers:true,
                    pagination:false,
                    autoRowHeight:false,
                    toolbar: '#EmployeeReferencetoolbar'
                ">
                            <thead>
                                <tr>
                                    <th field="Name" width="160" align="left">Name</th>
                                    @*<th field="Organization" width="120" align="left">Organization</th>
                                    <th field="Designation" width="120" align="left">Designation</th>*@
                                    <th field="Relation" width="120" align="left">Relation</th>
                                    <th field="ContactNo" width="160" align="left">Contact No</th>
                                </tr>
                            </thead>
                        </table>
                    </fieldset>
                    <div id="EmployeeReferencetoolbar" style="text-align:left;">
                        <table>
                            <tr>
                                <td style="width:40px;font-size:12px;"><a id="btnAddToList" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddEmployeeReference()">New</a></td>
                                <td style="width:40px;font-size:12px;"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="EditEmployeeReference()">Edit</a></td>
                                <td style="width:40px;font-size:12px;"><a id="btnDeleteRME" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteEmployeeReference()">Remove</a></td>
                            </tr>
                        </table>
                    </div>

                </div> @*Reference Information*@
                <div title="Bank Account Information" data-options="iconCls:'icon-ok'" style="padding:10px;">
                    <fieldset>
                        <legend style="font-weight:bold"> Bank Account </legend>
                        <table id="tblEmployeBankAccount" title="Crew Bank Account" class="easyui-datagrid" style="width:830px;height:250px;"
                               data-options="
                    singleSelect: true,
                    fitColumns:false,
                    rownumbers:true,
                    pagination:false,
                    autoRowHeight:false,
                    toolbar: '#EmployeeBankAccounttoolbar'
                ">
                            <thead>
                                <tr>
                                    <th field="BankBranchName" width="160" align="left">Bank</th>
                                    <th field="AccountName" width="120" align="left">Account Name</th>
                                    <th field="AccountNo" width="120" align="left">AC NO</th>
                                    <th field="Activity" width="120" align="left">Activity</th>
                                    <th field="Description" width="160" align="left">Description</th>
                                </tr>
                            </thead>
                        </table>
                    </fieldset>
                    <div id="EmployeeBankAccounttoolbar" style="text-align:left;">
                        <table>
                            <tr>
                                <td style="width:40px;font-size:12;"><a id="btnAddBAC" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddEmployeeBankAccount()">New</a></td>
                                @*<td style="width:40px;font-size:12;"><a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-edit" plain="true" onclick="EditEmployeeBankAccount()">Edit</a></td>*@
                                <td style="width:40px;font-size:12;"><a id="btnDeleteBAC" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteEmployeeBankAccount()">Remove</a></td>
                            </tr>
                        </table>
                    </div>

                </div> @*Bank Account Information*@
               
                <div title="Visa Information" data-options="iconCls:'icon-ok'" style="padding:10px;">
                    <fieldset>
                        <legend style="font-weight:bold"> Crew Visa </legend>
                        <table id="tblEmployeVisa" title="Crew Visa" class="easyui-datagrid" style="width:830px;height:250px;"
                               data-options="
                    singleSelect: true,
                    fitColumns:false,
                    rownumbers:true,
                    pagination:false,
                    autoRowHeight:false,
                    toolbar: '#EmployeeVisatoolbar'
                ">
                            <thead>
                                <tr>
                                    <th field="EmployeeName" width="160" align="left">Employee</th>
                                    <th field="PassportNo" width="120" align="left">Passport No</th>
                                    <th field="IssueDateInString" width="120" align="left">Issue Date</th>
                                    <th field="ExpireDateInString" width="120" align="left">Expire Date</th>
                                </tr>
                            </thead>
                        </table>
                    </fieldset>
                    <div id="EmployeeVisatoolbar" style="text-align:left;">
                        <table>
                            <tr>
                                <td style="width:40px;font-size:12;"><a id="btnAddBAC" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddEmployeeVisa()">New</a></td>
                                <td style="width:40px;font-size:12;"><a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-edit" plain="true" onclick="EditEmployeeVisa()">Edit</a></td>
                                <td style="width:40px;font-size:12;"><a id="btnDeleteBAC" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteEmployeeVisa()">Remove</a></td>
                            </tr>
                        </table>
                    </div>

                </div> @*Visa Information*@

                <div title="Crew Recommended Designation " data-options="iconCls:'icon-ok'" style="padding:10px;">
                    <fieldset>
                        <legend style="font-weight:bold"> Crew Recommended Designation </legend>
                        <table id="tblEmployeeRecommendedDesignation" title="Crew Recommended Designation" class="easyui-datagrid" style="width:830px;height:250px;"
                               data-options="
                    singleSelect: true,
                    fitColumns:false,
                    rownumbers:true,
                    pagination:false,
                    autoRowHeight:false,
                    toolbar: '#EmployeeRecommendedDesignationtoolbar'
                ">
                            <thead>
                                <tr>
                                    <th field="EmployeeNameCode" width="160" align="left">Employee</th>
                                    <th field="DepartmentName" width="150" align="left">Department Name</th>
                                    <th field="DesignationName" width="150" align="left">Designation Name</th>
                                    
                                </tr>
                            </thead>
                        </table>
                    </fieldset>
                    <div id="EmployeeRecommendedDesignationtoolbar" style="text-align:left;">
                        <table>
                            <tr>
                                <td style="width:40px;font-size:12px;"><a id="btnAddBAC" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="AddEmployeeRecommendedDesignation()">New</a></td>
                                <td style="width:40px;font-size:12px;"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="EditEmployeeRecommendedDesignation()">Edit</a></td>
                                <td style="width:40px;font-size:12px;"><a id="btnDeleteBAC" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="DeleteEmployeeRecommendedDesignation()">Remove</a></td>
                            </tr>
                        </table>
                    </div>

                </div> @*Employee Recommended Designation Information*@

            </div>
        }
        <fieldset>
            <legend style="font-weight:bold"> Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:785px; text-align:right"></td>
                    <td style="width:50px"></td>
                    <td style="width:50px">
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>

    </div>

</body>
</html>

<script type="text/javascript">
    var _oEmployee=null;

    $(document).ready(function () {
    debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oEmployee =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        if (_oEmployee.ErrorMessage!='N/A' && _oEmployee.ErrorMessage!='' && _oEmployee.ErrorMessage!=null)
        {
            alert(_oEmployee.ErrorMessage);
        }

        SetDateTime();
        var oDate=new Date();
        SetStartTime(oDate);

        if (_oEmployee.EmployeeID>0)
        {
            SetEmployeeFields();
            LoadEmployeeEducationGrid();
            LoadEmployeeExperienceGrid();
            LoadEmployeeTrainingGrid();
            LoadEmployeeReferenceGrid();
            LoadEmployeeBankAccountGrid();
            LoadEmployeeVisaGrid();
            LoadEmployeeRecommendedDesignationGrid();
            //$('#txtDateOfBirth').datebox('setValue', _oEmployee.DateOfBirthInString);
            
            SetStartTime(new Date(_oEmployee.DateOfBirthInString));
            document.getElementById('lblHeaderName').innerHTML = "Edit Crew";

        }else{
            $('#txtDateOfBirth').datebox('setValue', icsdateformat(new Date()));
        }
       
       

    });

    ///Image
    function readPhotoURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#imgPhotoIcon')
                .attr('src', e.target.result)
                .width(150)
                .height(150);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }

    $('#btnPhotoClear').click(function (e) {
        var oldInput = document.getElementById("filePhoto");
        var newInput = document.createElement("input");

        newInput.type = "file";
        newInput.id = oldInput.id;
        newInput.name = oldInput.name;
        newInput.className = oldInput.className;
        newInput.style.cssText = oldInput.style.cssText;
        newInput.onchange = oldInput.onchange;
        oldInput.parentNode.replaceChild(newInput, oldInput);
        document.getElementById('imgPhotoIcon').src = '#';

        if (_oEmployee.EmployeeID > 0) {
            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/Employee/DeleteImage",
                traditional: true,
                data: JSON.stringify(_oEmployee),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //debugger;
                    var sFeedBack = jQuery.parseJSON(data);
                },
                error: function (xhr, status, error) {
                    alert(error);
                }

            });
        }
    });

    //Sagor date picker start

    function SetDateTime()
    {
        var oDate=new Date();
        oDate.setFullYear(1950);
        /*---------------------------------------- Start Set Year-------------------------------------------*/
        var sYear="";
        sYear +="<option value='0'>"+'Year'+"</option>";
        for(var i=0; i<=40; i++)
        {
            sYear += "<option value='" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"'>" + (parseInt(oDate.getFullYear()) + parseInt(i)) +"</option>";
        }
        $('#cboYear').html(sYear);
        
        /*---------------------------------------- End Set Year-------------------------------------------*/


        /*---------------------------------------- Start Set Month-------------------------------------------*/
        var sMonth="";
        var oMonths=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
        sMonth +="<option value='0'>"+'Month'+"</option>";
        for(var i=0; i<oMonths.length; i++)
        {
            sMonth += "<option value='" +(parseInt(i)+1)+"'>" + oMonths[i] +"</option>";
        }
        $('#cboMonth').html(sMonth);
      
        /*---------------------------------------- End Set Month-------------------------------------------*/


        /*---------------------------------------- Start Set Date-------------------------------------------*/
        var sDay ="<option value='0'>"+'Day'+"</option>";
        $('#cboDay').html(sDay);
     
        /*---------------------------------------- End Set Date-------------------------------------------*/
    }

    $('#cboYear').change(function(e)
    {
        var nYear=$('#cboYear').val();
        var nMonth=$('#cboMonth').val();
        if(nYear>0 && nMonth>0)
        {
            $('#cboDay').html(SetDateEvent(nYear, nMonth));
        }

    });

    $('#cboEndYear').change(function(e)
    {
        var nYear=$('#cboEndYear').val();
        var nMonth=$('#cboEndMonth').val();
        if(nYear>0 && nMonth>0)
        {
            $('#cboEndDay').html(SetDateEvent(nYear, nMonth));
        }

    });

    $('#cboMonth').change(function(e)
    {
        var nYear=$('#cboYear').val();
        var nMonth=$('#cboMonth').val();
        if(nYear>0 && nMonth>0)
        {
            $('#cboDay').html(SetDateEvent(nYear, nMonth));
        }

    });

    function SetDateEvent(nYear, nMonth)
    {

        var oDate=new Date();
        var sDay="";
        if( parseInt(nMonth)>0)
        {
            var nDay= new Date(parseInt(nYear), parseInt(nMonth), 0).getDate();
            sDay +="<option value='0'>"+'Day'+"</option>";
            for(var i=1; i<=parseInt(nDay); i++)
            {
                if(i<10)
                {
                    sDay += "<option value='" +i+"'>" + '0'+i +"</option>";
                }
                else
                {
                    sDay += "<option value='" +i+"'>" + i +"</option>";
                }

            }
        }
        return sDay;
    }

    function SetStartTime(oDate)
    {
        
        var nyear=oDate.getFullYear();
        var nmonth=oDate.getMonth()+1;
        var nday=oDate.getDate();
        $('#cboYear').val(nyear);
        $('#cboMonth').val(nmonth);
        $('#cboDay').html(SetDateEvent(nyear,nmonth));
        $('#cboDay').val(nday);
    }

  
    function GenerateStartTimeInString()
    {
        var sDate=  $('#cboMonth').val() +'/'+ $('#cboDay').val() +'/'+ $('#cboYear').val();
        return sDate;
    }

    function ValidationOfStartTime()
    {
        if($('#cboYear').val()==0)
        {
            alert("Please select a year.");
            document.getElementById('cboYear').focus();
            return false;
        }
        if($('#cboMonth').val()==0)
        {
            alert("Please select a month.");
            document.getElementById('cboMonth').focus();
            return false;
        }
        if($('#cboDay').val()==0)
        {
            alert("Please select a day.");
            document.getElementById('cboDay').focus();
            return false;
        }
        return true;
    }

    //sagor date picker end

    function icsdateformat(date) {
        debugger;
        var mthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        var y = date.getFullYear();
        var m = date.getMonth();
        var d = date.getDate();
        //return m+'/'+d+'/'+y;
        var result = d + ' ' + mthNames[m] + ' ' + y;
        return result
    }

    //ADDEDITDELETE

    $('#btnSaveEmployee').click(function (e) {
        if (!ValidateInputEmployee()) return false;
    });

    function ValidateInputEmployee() {
        
        if (document.getElementById("txtName").value == null || document.getElementById("txtName").value == "") {
            alert("Please enter name!");
            $('#txtName').focus();
            return false;
        }

        if (document.getElementById("txtContactNo").value == null || document.getElementById("txtContactNo").value == "") {
            alert("Please enter contact number!");
            $('#txtContactNo').focus();
            return false;
        }
        if (document.getElementById("txtPresentAddress").value == null || document.getElementById("txtPresentAddress").value == "") {
            alert("Please enter Present Address!");
            $('#txtPresentAddress').focus();
            return false;
        }
        return true;
    }

    function RefreshEmployee()
    {
        var e = document.getElementById("cboGender");
        var sGender=e.options[e.selectedIndex].innerHTML;
      
        var edo = document.getElementById("cboMaritalStatus");
        var sMaritalStatus = edo.options[edo.selectedIndex].innerHTML;
        
        //var edt = document.getElementById("cboEmployeeDesignationType");
        //var nEmployeeDesignationType = edt.options[edt.selectedIndex].value;
        
        var oEmployee= {
                    EmployeeID : _oEmployee.EmployeeID,
                    Name : _oEmployee.Name,
                    Code : _oEmployee.Code,
                    NickName : _oEmployee.NickName,
                    MiddleName : _oEmployee.MiddleName,
                    ContactNo : _oEmployee.ContactNo,
                    ParmanentAddress : _oEmployee.ParmanentAddress,
                    PresentAddress : _oEmployee.PresentAddress,
                    Email : _oEmployee.Email,
                    Gender :sGender,
                    MaritalStatus : sMaritalStatus,
                    FatherName : $('#txtFatherName').val(),
                    MotherName : $('#txtMotherName').val(),
                    DateOfBirth : GenerateStartTimeInString(),//_oEmployee.DateOfBirth,
                    BirthPlace : $('#txtBirthPlace').val(),
                    BloodGroup : $('#txtBloodGroup').val(),
                    Height : $('#txtHeight').val(),
                    Weight : $('#txtWeight').val(),
                    IdentificationMart : $('#txtIdentificationMart').val(),
                    Chest : $('#txtChest').val(),
                    Waist : $('#txtWaist').val(),
                    ShoeSize : $('#txtShoeSize').val(),
                    Note : $('#txtNote').val(),
                    //EmployeeDesignationType : nEmployeeDesignationType,
                    PassportNo :  $('#txtPassportNo').val(),
                    CountryOfPassport :  $('#txtCountryOfPassport').val(),
                    IsOwnEmployee : false,
                    PassportIssueDate:	$('#txtPassportIssueDate').val(),
                    PassportExpireDate:	$('#txtPassportExpireDate').val(),
                    SeamanBook:	$('#txtSeamanBook').val(),
                    SemanBookIssueDate:$('#txtSemanBookIssueDate').val(),
                    SeamanBookExpireDate:$('#txtSeamanBookExpireDate').val()
        };
        
        return oEmployee;
    }

    $('#btnSaveEmployeeDetails').click(function (e) {
        if (_oEmployee.EmployeID<=0)
        {
            alert('Please add Employee basic first.!!');
        }
        if (!ValidateInputEmployee()) return false;
        var oEmp=RefreshEmployee();

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress+ '/Employee/EmployeeDetailUpdate',
            traditional: true,
            data:  JSON.stringify(oEmp),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
            debugger;
                _oEmployee = jQuery.parseJSON(data);
                if (_oEmployee.ErrorMessage!='N/A' && _oEmployee.ErrorMessage!='' && _oEmployee.ErrorMessage!=null)
                {
                    alert(_oEmployee.ErrorMessage);
                }
                else
                {
                    alert('Employee Basic Save Successfully.!!');
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });

    function SetEmployeeFields(){

        var Gender = document.getElementById('cboGender');
        for (var i = 0; i < Gender.options.length; i++) {
            if (Gender.options[i].text == _oEmployee.Gender) {
                Gender.selectedIndex = i;
                break;
            }
        }

        var MS = document.getElementById('cboMaritalStatus');
        for (var i = 0; i < MS.options.length; i++) {
            if (MS.options[i].text == _oEmployee.MaritalStatus) {
                MS.selectedIndex = i;
                break;
            }
        }
    }

    /**************Employee Education*************/
    function AddEmployeeEducation()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        var url =_sBaseAddress+ "/Employee/View_EmployeeEducation?nEmployeeID="+_oEmployee.EmployeeID+"&nid=0";
        var oEmployeeEducation = window.showModalDialog(url, oParameter, 'dialogHeight:352px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        //debugger
        if(oEmployeeEducation!=null)
        {
            if(oEmployeeEducation.EmployeeEducationID>0)
            {
//                var oEmployees = $('#tblEmployeEducation').datagrid('getRows');
//                var nIndex=oEmployees.length;

                $('#tblEmployeEducation').datagrid('appendRow',oEmployeeEducation);
                $('#tblEmployeEducation').datagrid('selectRow', nIndex);
            }
        }
    }

    function EditEmployeeEducation()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oEmployeeEducation= $('#tblEmployeEducation').datagrid('getSelected');
        if(oEmployeeEducation==null || oEmployeeEducation.EmployeeEducationID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblEmployeEducation').datagrid('getRowIndex',oEmployeeEducation);

        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        var url =_sBaseAddress+ "/Employee/View_EmployeeEducation?nEmployeeID="+_oEmployee.EmployeeID+"&nid="+oEmployeeEducation.EmployeeEducationID;
        var oEmployeeEducation = window.showModalDialog(url, oParameter, 'dialogHeight:352px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        //debugger
        if(oEmployeeEducation!=null)
        {
            if(oEmployeeEducation.EmployeeEducationID>0)
            {
                   $('#tblEmployeEducation').datagrid('updateRow',{index: SelectedRowIndex,	row: oEmployeeEducation});
            }
        }
    }

    function DeleteEmployeeEducation()
    {
        //debugger;
        var oEmployeeEducation= $('#tblEmployeEducation').datagrid('getSelected');
        if (!confirm("Confirm to Delete?")) return ;

        if(oEmployeeEducation==null || oEmployeeEducation.EmployeeEducationID<=0)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        var SelectedRowIndex=$('#tblEmployeEducation').datagrid('getRowIndex',oEmployeeEducation);

        if (oEmployeeEducation.EmployeeEducationID > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/Employee/EmployeeEducationDelete",
                traditional: true,
                data:  JSON.stringify(oEmployeeEducation),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    oEmployeeEducation = jQuery.parseJSON(data);
                    if (oEmployeeEducation.ErrorMessage == null)
                    {
                        alert("Delete sucessfully");
                        $('#tblEmployeEducation').datagrid('deleteRow',SelectedRowIndex);

                    }
                    else
                    {
                        alert(oEmployeeEducation.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    }
    function LoadEmployeeEducationGrid()
    {
        data={"total":""+_oEmployee.EmployeeEducations.length+"","rows":_oEmployee.EmployeeEducations};
        $('#tblEmployeEducation').datagrid('loadData',data);
    }

    /**************End Employee Education*************/

    /**************Employee Experience*************/
    function AddEmployeeExperience()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        var url =_sBaseAddress+ "/Employee/View_EmployeeExperience?nEmployeeID="+_oEmployee.EmployeeID+"&nid=0";
        var oEmployeeExperience = window.showModalDialog(url, oParameter, 'dialogHeight:352px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        //debugger
        if(oEmployeeExperience!=null)
        {
            if(oEmployeeExperience.EmployeeExperienceID>0)
            {
                $('#tblEmployeExperience').datagrid('appendRow',oEmployeeExperience);
                $('#tblEmployeExperience').datagrid('selectRow', nIndex);
            }
        }
    }

    function EditEmployeeExperience()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oEmployeeExperience= $('#tblEmployeExperience').datagrid('getSelected');
        if(oEmployeeExperience==null || oEmployeeExperience.EmployeeExperienceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblEmployeExperience').datagrid('getRowIndex',oEmployeeExperience);

        var oParameter = new Object();
        oParameter.Name = _oEmployee.Name+"["+_oEmployee.Code+"]";
        var url =_sBaseAddress+ "/Employee/View_EmployeeExperience?nEmployeeID="+_oEmployee.EmployeeID+"&nid="+oEmployeeExperience.EmployeeExperienceID;
        var oEmployeeExperience = window.showModalDialog(url, oParameter, 'dialogHeight:352px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        //debugger
        if(oEmployeeExperience!=null)
        {
            if(oEmployeeExperience.EmployeeExperienceID>0)
            {
                   $('#tblEmployeExperience').datagrid('updateRow',{index: SelectedRowIndex,	row: oEmployeeExperience});
            }
        }
    }

    function DeleteEmployeeExperience()
    {
        //debugger;
        var oEmployeeExperience= $('#tblEmployeExperience').datagrid('getSelected');
        if (!confirm("Confirm to Delete?")) return ;

        if(oEmployeeExperience==null || oEmployeeExperience.EmployeeExperienceID<=0)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        var SelectedRowIndex=$('#tblEmployeExperience').datagrid('getRowIndex',oEmployeeExperience);

        if (oEmployeeExperience.EmployeeExperienceID > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/Employee/EmployeeExperienceDelete",
                traditional: true,
                data:  JSON.stringify(oEmployeeExperience),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    oEmployeeExperience = jQuery.parseJSON(data);
                    if (oEmployeeExperience.ErrorMessage == null)
                    {
                        alert("Delete sucessfully");
                        $('#tblEmployeExperience').datagrid('deleteRow',SelectedRowIndex);

                    }
                    else
                    {
                        alert(oEmployeeExperience.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    }
    function LoadEmployeeExperienceGrid()
    {
        data={"total":""+_oEmployee.EmployeeExperiences.length+"","rows":_oEmployee.EmployeeExperiences};
        $('#tblEmployeExperience').datagrid('loadData',data);
    }

    /**************End Employee Experience*************/

    /**************Employee Training*************/
    function AddEmployeeTraining()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        var url =_sBaseAddress+ "/Employee/View_EmployeeTraining?nEmployeeID="+_oEmployee.EmployeeID+"&nid=0";
        var oEmployeeTraining = window.showModalDialog(url, oParameter, 'dialogHeight:415px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        //debugger
        if(oEmployeeTraining!=null)
        {
            if(oEmployeeTraining.EmployeeTrainingID>0)
            {
                $('#tblEmployeTraining').datagrid('appendRow',oEmployeeTraining);
                $('#tblEmployeTraining').datagrid('selectRow', nIndex);
            }
        }
    }

    function EditEmployeeTraining()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oEmployeeTraining= $('#tblEmployeTraining').datagrid('getSelected');
        if(oEmployeeTraining==null || oEmployeeTraining.EmployeeTrainingID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblEmployeTraining').datagrid('getRowIndex',oEmployeeTraining);

        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        var url =_sBaseAddress+ "/Employee/View_EmployeeTraining?nEmployeeID="+_oEmployee.EmployeeID+"&nid="+oEmployeeTraining.EmployeeTrainingID;
        var oEmployeeTraining = window.showModalDialog(url, oParameter, 'dialogHeight:415px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        //debugger
        if(oEmployeeTraining!=null)
        {
            if(oEmployeeTraining.EmployeeTrainingID>0)
            {
                   $('#tblEmployeTraining').datagrid('updateRow',{index: SelectedRowIndex,	row: oEmployeeTraining});
            }
        }
    }

    function DeleteEmployeeTraining()
    {
        //debugger;
        var oEmployeeTraining= $('#tblEmployeTraining').datagrid('getSelected');
        if (!confirm("Confirm to Delete?")) return ;

        if(oEmployeeTraining==null || oEmployeeTraining.EmployeeTrainingID<=0)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        var SelectedRowIndex=$('#tblEmployeTraining').datagrid('getRowIndex',oEmployeeTraining);

        if (oEmployeeTraining.EmployeeTrainingID > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/Employee/EmployeeTrainingDelete",
                traditional: true,
                data:  JSON.stringify(oEmployeeTraining),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    oEmployeeTraining = jQuery.parseJSON(data);
                    if (oEmployeeTraining.ErrorMessage == null)
                    {
                        alert("Delete sucessfully");
                        $('#tblEmployeTraining').datagrid('deleteRow',SelectedRowIndex);

                    }
                    else
                    {
                        alert(oEmployeeTraining.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    }
    function LoadEmployeeTrainingGrid()
    {
        data={"total":""+_oEmployee.EmployeeTrainings.length+"","rows":_oEmployee.EmployeeTrainings};
        $('#tblEmployeTraining').datagrid('loadData',data);
    }

    /**************End Employee Training*************/

    /**************Employee Reference*************/
    function AddEmployeeReference()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        var url =_sBaseAddress+ "/Employee/View_EmployeeReference?nEmployeeID="+_oEmployee.EmployeeID+"&nid=0";
        var oEmployeeReference = window.showModalDialog(url, oParameter, 'dialogHeight:352px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        //debugger
        if(oEmployeeReference!=null)
        {
            if(oEmployeeReference.EmployeeReferenceID>0)
            {
//                var oEmployees = $('#tblEmployeEducation').datagrid('getRows');
//                var nIndex=oEmployees.length;

                $('#tblEmployeReference').datagrid('appendRow',oEmployeeReference);
                $('#tblEmployeReference').datagrid('selectRow', nIndex);
            }
        }
    }

    function EditEmployeeReference()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oEmployeeReference= $('#tblEmployeReference').datagrid('getSelected');
        if(oEmployeeReference==null || oEmployeeReference.EmployeeReferenceID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblEmployeReference').datagrid('getRowIndex',oEmployeeReference);

        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        var url =_sBaseAddress+ "/Employee/View_EmployeeReference?nEmployeeID="+_oEmployee.EmployeeID+"&nid="+oEmployeeReference.EmployeeReferenceID;
        var oEmployeeReference = window.showModalDialog(url, oParameter, 'dialogHeight:352px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        //debugger
        if(oEmployeeReference!=null)
        {
            if(oEmployeeReference.EmployeeReferenceID>0)
            {
                   $('#tblEmployeReference').datagrid('updateRow',{index: SelectedRowIndex,	row: oEmployeeReference});
            }
        }
    }

    function DeleteEmployeeReference()
    {
        //debugger;
        var oEmployeeReference= $('#tblEmployeReference').datagrid('getSelected');
        if (!confirm("Confirm to Delete?")) return ;

        if(oEmployeeReference==null || oEmployeeReference.EmployeeReferenceID<=0)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        var SelectedRowIndex=$('#tblEmployeReference').datagrid('getRowIndex',oEmployeeReference);

        if (oEmployeeReference.EmployeeReferenceID > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/Employee/EmployeeReferenceDelete",
                traditional: true,
                data:  JSON.stringify(oEmployeeReference),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    oEmployeeEducation = jQuery.parseJSON(data);
                    if (oEmployeeReference.ErrorMessage == "")
                    {
                        alert("Delete sucessfully");
                        $('#tblEmployeReference').datagrid('deleteRow',SelectedRowIndex);

                    }
                    else
                    {
                        alert(oEmployeeReference.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    }
    function LoadEmployeeReferenceGrid()
    {
        data={"total":""+_oEmployee.EmployeeReferences.length+"","rows":_oEmployee.EmployeeReferences};
        $('#tblEmployeReference').datagrid('loadData',data);
    }

    /**************End Employee Reference*************/

    /**************Employee BankAccount*************/
    function AddEmployeeBankAccount()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        var url =_sBaseAddress+ "/Employee/View_EmployeeBankAccount?nEmployeeID="+_oEmployee.EmployeeID+"&nid=0";
        var oEmployeeBankAccount = window.showModalDialog(url, oParameter, 'dialogHeight:310px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        //debugger
        if(oEmployeeBankAccount!=null)
        {
            if(oEmployeeBankAccount.EmployeeBankACID>0)
            {
                $('#tblEmployeBankAccount').datagrid('appendRow',oEmployeeBankAccount);
                $('#tblEmployeBankAccount').datagrid('selectRow', nIndex);
            }
        }
    }

    function EditEmployeeBankAccount()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oEmployeeBankAccount= $('#tblEmployeBankAccount').datagrid('getSelected');
        if(oEmployeeBankAccount==null || oEmployeeBankAccount.EmployeeBankACID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblEmployeBankAccount').datagrid('getRowIndex',oEmployeeBankAccount);

        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        var url =_sBaseAddress+ "/Employee/View_EmployeeBankAccount?nEmployeeID="+_oEmployee.EmployeeID+"&nid="+oEmployeeBankAccount.EmployeeBankACID;
        var oEmployeeBankAccount = window.showModalDialog(url, oParameter, 'dialogHeight:352px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        //debugger
        if(oEmployeeBankAccount!=null)
        {
            if(oEmployeeBankAccount.EmployeeBankACID>0)
            {
                   $('#tblEmployeBankAccount').datagrid('updateRow',{index: SelectedRowIndex,	row: oEmployeeBankAccount});
            }
        }
    }

    function DeleteEmployeeBankAccount()
    {
        //debugger;
        var oEmployeeBankAccount= $('#tblEmployeBankAccount').datagrid('getSelected');
        if (!confirm("Confirm to Delete?")) return ;

        if(oEmployeeBankAccount==null || oEmployeeBankAccount.EmployeeBankACID<=0)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        var SelectedRowIndex=$('#tblEmployeBankAccount').datagrid('getRowIndex',oEmployeeBankAccount);

        if (oEmployeeBankAccount.EmployeeBankACID > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/Employee/EmployeeBankAccountDelete",
                traditional: true,
                data:  JSON.stringify(oEmployeeBankAccount),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    oEmployeeBankAccount = jQuery.parseJSON(data);
                    if (oEmployeeBankAccount.ErrorMessage == null)
                    {
                        alert("Delete sucessfully");
                        $('#tblEmployeBankAccount').datagrid('deleteRow',SelectedRowIndex);

                    }
                    else
                    {
                        alert(oEmployeeBankAccount.ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    }
    function LoadEmployeeBankAccountGrid()
    {
        data={"total":""+_oEmployee.EmployeeBankAccounts.length+"","rows":_oEmployee.EmployeeBankAccounts};
        $('#tblEmployeBankAccount').datagrid('loadData',data);
    }

    /**************End Employee BankAccount*************/

    /**************Employee Authentication*************/
    //  Employee Authentication was removed

    /**************End Employee BankAccount*************/

    /**************Employee Visa*************/
    function AddEmployeeVisa()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        oParameter.EmployeeID = _oEmployee.EmployeeID;
        var url =_sBaseAddress+ "/Employee/View_EmployeeVisa?nid=0&sMessage=";
        var oEmployeeVisa = window.showModalDialog(url, oParameter, 'dialogHeight:345px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        if(oEmployeeVisa!=null)
        {
            if(oEmployeeVisa.EmployeeVisaID>0)
            {
                $('#tblEmployeVisa').datagrid('appendRow',oEmployeeVisa);
                $('#tblEmployeVisa').datagrid('selectRow', nIndex);
            }
        }
    }

    function EditEmployeeVisa()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oEmployeeVisa= $('#tblEmployeVisa').datagrid('getSelected');
        if(oEmployeeVisa==null || oEmployeeVisa.EmployeeVisaID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblEmployeVisa').datagrid('getRowIndex',oEmployeeVisa);

        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        oParameter.EmployeeID = _oEmployee.EmployeeID;
        var url =_sBaseAddress+ "/Employee/View_EmployeeVisa?nid="+oEmployeeVisa.EmployeeVisaID+"&sMessage=";
        var oEmployeeVisa = window.showModalDialog(url, oParameter, 'dialogHeight:352px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        //debugger
        if(oEmployeeVisa!=null)
        {
            if(oEmployeeVisa.EmployeeVisaID>0)
            {
                $('#tblEmployeVisa').datagrid('updateRow',{index: SelectedRowIndex,	row: oEmployeeVisa});
            }
        }
    }

    function DeleteEmployeeVisa()
    {
        //debugger;
        var oEmployeeVisa= $('#tblEmployeVisa').datagrid('getSelected');
        if (!confirm("Confirm to Delete?")) return ;

        if(oEmployeeVisa==null || oEmployeeVisa.EmployeeVisaID<=0)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        var SelectedRowIndex=$('#tblEmployeVisa').datagrid('getRowIndex',oEmployeeVisa);

        if (oEmployeeVisa.EmployeeVisaID > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/Employee/DeleteEmployeeVisa",
                traditional: true,
                data:  JSON.stringify({id : oEmployeeVisa.EmployeeVisaID}),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var sMsg = jQuery.parseJSON(data);
                    if (sMsg == "Delete Successfully")
                    {
                        alert(sMsg);
                        $('#tblEmployeVisa').datagrid('deleteRow',SelectedRowIndex);

                    }
                    else
                    {
                        alert(sMsg);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    }
    function LoadEmployeeVisaGrid()
    {
        data={"total":""+_oEmployee.EmployeeVisas.length+"","rows":_oEmployee.EmployeeVisas};
        $('#tblEmployeVisa').datagrid('loadData',data);
    }

    /**************End Employee Visa*************/

    /**************Employee Recommended Designation*************/
    function AddEmployeeRecommendedDesignation()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        oParameter.EmployeeID = _oEmployee.EmployeeID;
        var url =_sBaseAddress+ "/Employee/View_EmployeeRecommendedDesignation?&nid=0";
        var oEmployeeRecommendedDesignation = window.showModalDialog(url, oParameter, 'dialogHeight:190px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
        //debugger
        if(oEmployeeRecommendedDesignation!=null)
        {
            if(oEmployeeRecommendedDesignation.ARDID>0)
            {
                $('#tblEmployeeRecommendedDesignation').datagrid('appendRow',oEmployeeRecommendedDesignation);
                $('#tblEmployeeRecommendedDesignation').datagrid('selectRow', nIndex);
            }
        }
    }

    function EditEmployeeRecommendedDesignation()
    {
        if (_oEmployee.EmployeeID<=0)
        {
            alert('Please Add Employee first.!!');
            return;
        }
        var oEmployeeRecommendedDesignation= $('#tblEmployeeRecommendedDesignation').datagrid('getSelected');
        if(oEmployeeRecommendedDesignation==null || oEmployeeRecommendedDesignation.ARDID<=0)
        {
            alert("Please select a item from list!");
            return;
        }
        var SelectedRowIndex=$('#tblEmployeeRecommendedDesignation').datagrid('getRowIndex',oEmployeeRecommendedDesignation);

        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        var url =_sBaseAddress+ "/Employee/View_EmployeeRecommendedDesignation?&nid="+oEmployeeRecommendedDesignation.ARDID;
        var oEmployeeRecommendedDesignation = window.showModalDialog(url, oParameter, 'dialogHeight:190px;dialogWidth:505px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
     
        if(oEmployeeRecommendedDesignation!=null)
        {
            if(oEmployeeRecommendedDesignation.ARDID>0)
            {
                $('#tblEmployeeRecommendedDesignation').datagrid('updateRow',{index: SelectedRowIndex,	row: oEmployeeRecommendedDesignation});
            }
        }
    }

    function DeleteEmployeeRecommendedDesignation()
    {
        
        var oEmployeeRecommendedDesignation= $('#tblEmployeeRecommendedDesignation').datagrid('getSelected');
        if (!confirm("Confirm to Delete?")) return ;

        if(oEmployeeRecommendedDesignation==null || oEmployeeRecommendedDesignation.ARDID<=0)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        var SelectedRowIndex=$('#tblEmployeeRecommendedDesignation').datagrid('getRowIndex',oEmployeeRecommendedDesignation);

        if (oEmployeeRecommendedDesignation.ARDID > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/Employee/EmployeeRecommendedDesignation_Delete",
                traditional: true,
                data:  JSON.stringify({nARDID : oEmployeeRecommendedDesignation.ARDID}),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var sMsg = jQuery.parseJSON(data);
                    if (sMsg == "Delete Successfully")
                    {
                        alert(sMsg);
                        $('#tblEmployeeRecommendedDesignation').datagrid('deleteRow',SelectedRowIndex);

                    }
                    else
                    {
                        alert(sMsg);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }

            });
        }
    }
    function LoadEmployeeRecommendedDesignationGrid()
    {
        
        data={"total":""+_oEmployee.EmployeeRecommendedDesignations.length+"","rows":_oEmployee.EmployeeRecommendedDesignations};
        $('#tblEmployeeRecommendedDesignation').datagrid('loadData',data);
    }

    /**************End Employee Recommended Designation*************/

    function Close() {
        window.returnValue = _oEmployee;
        window.close();
    }

    function AttachmentFileEducation()
    {
        var oEmployeeEducation= $('#tblEmployeEducation').datagrid('getSelected');

        if(oEmployeeEducation==null || oEmployeeEducation.EmployeeEducationID<=0)
        {
            alert("Please select an item.");                  
            return false;
        }
        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        oParameter.MultipleItemReturn = false;
        oParameter.EmployeeID=oEmployeeEducation.EmployeeID;
        oParameter.DocTypeInt=1; //
        oParameter.DocTypeID=oEmployeeEducation.EmployeeEducationID;
        var url =_sBaseAddress+ "/Employee/ViewEmployeeAttatchments?nEmployeeID="+oEmployeeEducation.EmployeeID+"&nDocType="+1+"&nDocTypeID="+oEmployeeEducation.EmployeeEducationID+"&sMessage=";
        var oCompany = window.showModalDialog(url, oParameter, 'dialogHeight:450px;dialogWidth:505px;dialogLeft:500;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');

    }

    function AttachmentFileExperience()
    {
        var oEmployeeExperince= $('#tblEmployeExperience').datagrid('getSelected');

        if(oEmployeeExperince==null || oEmployeeExperince.EmployeeExperienceID<=0)
        {
            alert("Please select an item.");                  
            return false;
        }
        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        oParameter.MultipleItemReturn = false;
        oParameter.EmployeeID=oEmployeeExperince.EmployeeID;
        oParameter.DocTypeInt=2; // General nDocType, int nDocTypeID,
        oParameter.DocTypeID=oEmployeeExperince.EmployeeExperienceID;
        var url =_sBaseAddress+ "/Employee/ViewEmployeeAttatchments?nEmployeeID="+oEmployeeExperince.EmployeeID+"&nDocType="+2+"&nDocTypeID="+oEmployeeExperince.EmployeeExperienceID+"&sMessage=";
        var oCompany = window.showModalDialog(url, oParameter, 'dialogHeight:450px;dialogWidth:505px;dialogLeft:500;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');

    }

    function AttachmentFileTraining()
    {
        var oEmployeeTraining= $('#tblEmployeTraining').datagrid('getSelected');

        if(oEmployeeTraining==null || oEmployeeTraining.EmployeeTrainingID<=0)
        {
            alert("Please select an item.");                  
            return false;
        }
        var oParameter = new Object();
        oParameter.Name = _oEmployee.FullName+"["+_oEmployee.Code+"]";
        oParameter.MultipleItemReturn = false;
        oParameter.EmployeeID=oEmployeeTraining.EmployeeID;
        oParameter.DocTypeInt=3; // General nDocType, int nDocTypeID,
        oParameter.DocTypeID=oEmployeeTraining.EmployeeTrainingID;
        var url =_sBaseAddress+ "/Employee/ViewEmployeeAttatchments?nEmployeeID="+oEmployeeTraining.EmployeeID+"&nDocType="+3+"&nDocTypeID="+oEmployeeTraining.EmployeeTrainingID+"&sMessage=";
        var oCompany = window.showModalDialog(url, oParameter, 'dialogHeight:450px;dialogWidth:505px;dialogLeft:500;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');

    }
</script>
