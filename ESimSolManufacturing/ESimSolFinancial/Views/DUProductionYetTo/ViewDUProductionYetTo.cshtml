@{
    ViewBag.Title = "Production Status";
}

@model IEnumerable <ESimSol.BusinessObjects.DUProductionYetTo>

<div ng-app="DUProductionYetToModule" ng-controller="DUProductionYetToController as MLCC">
      
    <section>
        <ul class="nav nav-tabs" style="background:#d6dbdf; color:white;">
            <li ng-class="{active:MLCC.IsSet(1)}">
                <a href="" ng-click="MLCC.SetTab(1)" style="color:black;">Order View</a>
            </li>
            <li ng-class="{active:MLCC.IsSet(2)}">
                <a href="" ng-click="MLCC.SetTab(2)" style="color:black;">Yarn View</a>
            </li>
            <li ng-class="{active:MLCC.IsSet(3)}">
                <a href="" ng-click="MLCC.SetTab(3)" style="color:black;">Buyer View</a>
            </li>
            @*<li ng-class="{active:MLCC.IsSet(4)}">
                <a href="" ng-click="MLCC.SetTab(4)" style="color:black;">Summary</a>
            </li>*@
        </ul>
        <div ng-if="MLCC.IsSet(1)">
            <div class="col-md-12">
                <div class="form-inline">
                    <input type="text" ng-model="MLCC.PINo" class="form-control" style="width:200px" placeholder="Search PI No " ng-keyup="MLCC.searchPINoKeyUp($event)" />
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.AdvanceSearchDUProductionYetTo()"> <span class="glyphicon glyphicon-search" aria-hidden="true"> Search</span></button>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.printPDF(1,1)"> <span class="glyphicon glyphicon-print" aria-hidden="true"> Print</span></button>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.printPDF(1,2)"> <span class="glyphicon glyphicon-print" aria-hidden="true"> Print(F2)</span></button>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.printExcel(1,1)"> <span class="glyphicon glyphicon-export" aria-hidden="true"> ExportXL</span></button>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.printExcel(1,2)"> <span class="glyphicon glyphicon-export" aria-hidden="true"> ExportXL(F2)</span></button>
                    @*<button type="button" class="btn btn-sm btn-primary pull-right" aria-label="Left Align" ng-click="MLCC.EntryUnit(1)"> <span class="glyphicon glyphicon-plus" aria-hidden="true"> Entry Unit</span></button>*@
                    <button type="button" class="btn btn-sm btn-primary pull-right" aria-label="Left Align" ng-click="MLCC.DetailView(1)"> <span class="glyphicon glyphicon-plus" aria-hidden="true"> Detail View</span></button>
                </div>
            </div>
            <div class="col-md-12">
                <div ui-grid="OrderWisegridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
            </div>

        </div>
        <div ng-if="MLCC.IsSet(2)">
            <div class="col-md-12">
                <div class="form-inline">
                    <input type="text" ng-model="MLCC.PINo" class="form-control" style="width:200px" placeholder="Search PI No " ng-keyup="MLCC.searchPINoKeyUp($event)" />
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.AdvanceSearchDUProductionYetTo()"> <span class="glyphicon glyphicon-search" aria-hidden="true"> Search</span></button>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.printPDF(2,1)"> <span class="glyphicon glyphicon-print" aria-hidden="true"> Print</span></button>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.printExcel(2,1)"> <span class="glyphicon glyphicon-export" aria-hidden="true"> ExportXL</span></button>
                    <button type="button" class="btn btn-sm btn-primary pull-right" aria-label="Left Align" ng-click="MLCC.EntryUnit(2)"> <span class="glyphicon glyphicon-plus" aria-hidden="true"> Entry Unit</span></button>
                </div>
            </div>
            <div class="col-md-12">
                <div ui-grid="YarnWisegridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
            </div>
        </div>
        <div ng-if="MLCC.IsSet(3)">
            <div class="col-md-12">
                <div class="form-inline">
                    <input type="text" ng-model="MLCC.PINo" class="form-control" style="width:200px" placeholder="Search PI No " ng-keyup="MLCC.searchPINoKeyUp($event)" />
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.AdvanceSearchDUProductionYetTo()"> <span class="glyphicon glyphicon-search" aria-hidden="true"> Search</span></button>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.printPDF(3,1)"> <span class="glyphicon glyphicon-print" aria-hidden="true"> Print</span></button>
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.printExcel(3,1)"> <span class="glyphicon glyphicon-export" aria-hidden="true"> ExportXL</span></button>
                </div>
            </div>
            <div class="col-md-12">
                <div ui-grid="BuyerWisegridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
            </div>
        </div>
        <div ng-if="MLCC.IsSet(4)">
            <form class="form-horizontal" style="margin-top:10px;">
                <div class="form-group">
                    <label class="control-label col-md-5">Order Qty:</label>
                    <div class="col-md-3">
                        <input type="text" class="form-control" ng-model="SummaryOrderQty | number : 2" ng-pattern="/^[0-9]+(\.[0-9]{1,2})?$/" step="0.01" disabled>
                    </div>
                    <span class="col-md-2">{{MUnit}}</span>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-5">Production Qty:</label>
                    <div class="col-md-3">
                        <input type="text" class="form-control" ng-model="SummaryProductionQty| number : 2" ng-pattern="/^[0-9]+(\.[0-9]{1,2})?$/" step="0.01" " disabled>
                    </div>
                    <span class="col-md-2">{{MUnit}}</span>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-5">Pending Production:</label>
                    <div class="col-md-3">
                        <input type="text" class="form-control" ng-model="SummaryYetToProduction| number : 2" ng-pattern="/^[0-9]+(\.[0-9]{1,2})?$/" step="0.01" " disabled>
                    </div>
                    <span class="col-md-2">{{MUnit}}</span>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-5">Req. Time:</label>
                    <div class="col-md-3">
                        <input type="text" class="form-control" ng-model="SummaryReqTime| number : 2" ng-pattern="/^[0-9]+(\.[0-9]{1,2})?$/" step="0.01" " disabled>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-5">Per Day Production:</label>
                    <div class="col-md-3">
                        <input type="text" class="form-control" ng-model="SummaryPerDayProduction" ng-change="divide()">
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-5">Req Day:</label>
                    <div class="col-md-3">
                        <input type="text" class="form-control" ng-model="SummaryReqDay| number : 2" ng-pattern="/^[0-9]+(\.[0-9]{1,2})?$/" step="0.01" " disabled>
                    </div>
                    <span class="col-md-2"> Day(s)</span>
                </div>
            </form> 
        </div>
    </section>
</div>

<style type="text/css">

     .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .grid {
        height: 465px;
        width: 100%;
    }
    .angular-grid{
        height:4100px;
        width:100%;
    }

    .custom-pagination {
        margin-top: -15px;
        margin-bottom: -15px;
    }

    .spacing {
        padding-bottom: 5px;
    }
    .red {
      text-align: right;
      color: red;
    }

    .black {
      text-align: right;
      color: #000;
    }
    
</style>

<script src="~/Views/DUProductionYetTo/AdvSearch.js"></script>
<script src="~/Views/DUProductionYetTo/EntryUnit.js"></script>
<script type="text/javascript">
    debugger;
    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oDUProductionYetTos =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oYarnWise =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.YarnWise));
    var oBuyerWise =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BuyerWise));
    var oOrderType = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.OrderType));
    var oDyeingType = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DyeingTypes));
    var nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    //var oDUDyeingTypeMapping = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DUDyeingTypeMapping));


    var  DUProductionYetToModule = angular.module('DUProductionYetToModule', ['ngAnimate','ui.bootstrap','ui.grid','ui.grid.selection','ui.grid.resizeColumns','ms.service','DUP.service', 'EU.service']);
    DUProductionYetToModule.controller('DUProductionYetToController', function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession,DUPservice, EUservice) {
        

        $scope.oOrderType =oOrderType;
        $scope.oDyeingType =oDyeingType;
        $scope.BUID =nBUID;
        $scope.CompareOperators = oCompareOperators;

        var list = [];

        $scope.OrderWisegridOptions ={
            enableRowHeaderSelection: false,
            enableRowSelection: true,
            enableFullRowSelection: true,
            multiSelect: false,
            enableColumnResizing: true,
            noUnselect : true,
            showColumnFooter: true,
            enableGridMenu: true,
            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
              
                { field: 'OrderDateInStr', name: 'Order Date', width:'12%', enableCellEdit: false,cellClass: 'text-left' },
                  { field: 'OrderNo', name: 'OrderNo', width:'10%', enableCellEdit: false,cellClass: 'text-left' },
                { field: 'PINo', name: 'PI No', width:'10%', enableCellEdit: false,cellClass: 'text-left' },
                { field: 'MUName', name: 'MUnit',cellClass: 'text-left', width: '8%', enableCellEdit: false,cellClass: 'text-left' },

                { field: 'ContractorName', name: 'Buyer Name',cellClass: 'text-left', width: '20%', enableCellEdit: false },
                { field: 'Qty', name: 'Order Qty', width: '10%' ,cellClass: 'text-right', cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                { field: 'Qty_QCToDay', name: 'Today Production', width: '10%',cellClass: 'text-right', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'Qty_Prod', name: 'Production Qty', width: '10%',cellClass: 'text-right', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },

                { field: 'YetToProduction', name: 'Pending Prod.',
                cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {
                    if (grid.getCellValue(row,col) < 0) {
                        return 'red';
                    }
                    return 'black';
                }, width: '10%', enableCellEdit: false , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'},

                { field: 'Qty_DCToDay', name: 'Today Delivered', width: '10%',cellClass: 'text-right', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'StockInHand', name: 'Stock In Hand', width: '10%',cellClass: 'text-right', enableCellEdit: false , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                
                { field: 'Qty_DC', name: 'Delivered Qty', width: '10%',cellClass: 'text-right', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'YetToDelivery', name: 'Pending Delivery', width: '10%',cellClass: 'text-right', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'CategoryName', name: 'Category',cellClass: 'text-left', width: '8%', enableCellEdit: false },
                { field: 'ProductName', name: 'Product Name', width:'15%',cellClass: 'text-left'},
                { field: 'ColorCount', name: 'Color Count', width:'10%',cellClass: 'text-right', cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                //{ field: 'Qty_Unit', name: 'Qty Unit', width:'10%',cellClass: 'text-right', cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },

                //{ field: 'ReqTime', name: 'Req. Time', width:'10%',cellClass: 'text-right', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                { field: 'MKTPName', name: 'Marketing Concern', width:'15%',cellClass: 'text-left',cellClass: 'text-left'},
                { field: 'HankorConeInStr', name: 'Hank or Cone', width:'10%',cellClass: 'text-left',cellClass: 'text-left'},
                { field: 'BuyerConcern', name: 'Buyer Concern', width:'15%',cellClass: 'text-left',cellClass: 'text-left'}


            ],
            data:oDUProductionYetTos,
            onRegisterApi:function(gridApi) {
                $scope.gridApi = gridApi;
                debugger;
                var oDetail=userSession.getData('DUProductionYetToList');
                $scope.OrderWisegridOptions.data=oDetail; //sessionStorage.getItem("DUProductionYetToList");

                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.grid.modifyRows(oDetail);
                $scope.gridApi.selection.selectRow(oDetail[userSession.getRowIndex()]);
                userSession.clear();
            }
        };
        //cellTemplate: '<div class="ui-grid-cell-contents" style="color:red;" >{{grid.getCellValue(row, col)}}</div>' 
        $scope.YarnWisegridOptions ={
            enableRowHeaderSelection: false,
            enableRowSelection: true,
            enableFullRowSelection: true,
            multiSelect: false,
            enableColumnResizing: true,
            noUnselect : true,
            showColumnFooter: true,
            enableGridMenu: true,
            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                { field: 'CategoryName', name: 'Category',cellClass: 'text-left', width: '8%', enableCellEdit: false },
                { field: 'ProductName', name: 'Product Name', width:'20%',cellClass: 'text-left'},
                { field: 'Qty', name: 'Order Qty', width: '10%', cellClass: 'text-right',cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'Qty_Prod', name: 'Pro. Qty', width: '10%',cellClass: 'text-right', enableCellEdit: false , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                { field: 'YetToProduction', name: 'Pending Pro.',
                    cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {
                    if (grid.getCellValue(row,col) < 0) {
                        return 'red';
                    }
                    return 'black';
                    }
                    , width: '10%', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'},
                { field: 'Qty_DC', name: 'Delivered Qty', width: '10%',cellClass: 'text-right', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'YetToDelivery', name: 'Pending Delivery',cellClass: 'text-right', width: '10%', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'StockInHand', name: 'Stock In Hand',cellClass: 'text-right', width: '10%', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'ColorCount', name: 'Color Count',cellClass: 'text-right', width:'10%',cellClass: 'text-right', cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                //{ field: 'Qty_Unit', name: 'Qty Unit', cellClass: 'text-right',width:'10%',cellClass: 'text-right', cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                //{ field: 'ReqTime', name: 'Req. Time', width:'15%',cellClass: 'text-right', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' }

            ],
            data:oYarnWise,
            onRegisterApi:function(YarnWisegridApi) {
                $scope.YarnWisegridApi = YarnWisegridApi;

            }
        };


        $scope.BuyerWisegridOptions ={
            enableRowHeaderSelection: false,
            enableRowSelection: true,
            enableFullRowSelection: true,
            multiSelect: false,
            enableColumnResizing: true,
            noUnselect : true,
            showColumnFooter: true,
            enableGridMenu: true,
            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                { field: 'ContractorName', name: 'Buyer Name', width: '20%',cellClass: 'text-left', enableCellEdit: false },
                { field: 'Qty', name: 'Order Qty', width: '10%' ,cellClass: 'text-right', cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                { field: 'Qty_Prod', name: 'Production Qty',cellClass: 'text-right', width: '10%', enableCellEdit: false , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                { field: 'YetToProduction', name: 'Pending Pro.',cellClass: 'text-right', width: '10%', enableCellEdit: false , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                { field: 'Qty_DC', name: 'Delivered Qty', width: '10%',cellClass: 'text-right', enableCellEdit: false , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                { field: 'YetToDelivery', name: 'Pending Delivery', cellClass: 'text-right',width: '10%', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'StockInHand', name: 'Stock In Hand',cellClass: 'text-right', width: '10%', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'ColorCount', name: 'Color Count',cellClass: 'text-right', width:'10%', cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                
                //{ field: 'ReqTimeInStr', name: 'Req. Time', width:'10%',cellClass: 'text-left'},

            ],
            data:oBuyerWise,
            onRegisterApi:function(BuyerWisegridApi) {
                $scope.BuyerWisegridApi = BuyerWisegridApi;

            }
        };

        this.AdvanceSearchDUProductionYetTo = function ()
        {
            debugger;
            this.PINo="";
            var modalObj={
                modalcontroller:'ModalDUProductionYetToCtrl',
                appcontroller:'DUProductionYetToController',
                //OrderType:$scope.oOrderType,
                DyeingType:$scope.oDyeingType,
                CompareOperators:$scope.CompareOperators

            }
            sessionStorage.setItem('BaseAddress',_sBaseAddress);
            var modalInstance=DUPservice.Instance(modalObj);
            modalInstance.result.then(function (result)
            {

                debugger;
                $scope.OrderWisegridOptions.data = result.Item1;
                $scope.YarnWisegridOptions.data =result.Item2;
                $scope.BuyerWisegridOptions.data =result.Item3;

                var nOrderQty = 0.0;
                var nProductionQty = 0.0;
                var nYetToProduction = 0.0;
                var nReqTime = 0.0;
                debugger;
                for(var i = 0; i < result.Item1.length; i++) {
                    if(result.Item1[i].Qty > 0) nOrderQty += result.Item1[i].Qty;
                    if(result.Item1[i].Qty > 0) nProductionQty += result.Item1[i].Qty_Prod;
                    if((result.Item1[i].Qty - result.Item1[i].Qty_Prod) > 0) nYetToProduction += (result.Item1[i].Qty - result.Item1[i].Qty_Prod);
                    if(result.Item1[i].ReqTime > 0) nReqTime += result.Item1[i].ReqTime;
                    $scope.MUnit =  result.Item1[i].MUName;
                }                
                $scope.SummaryOrderQty = nOrderQty;
                $scope.SummaryProductionQty = nProductionQty;
                $scope.SummaryYetToProduction = nYetToProduction;
                $scope.SummaryReqTime = nReqTime;
                
                $scope.SummaryReqDay = 0;
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };
      
        $scope.SummaryPerDayProduction = 1;

        $scope.divide = function() {
            $scope.SummaryReqDay = ($scope.SummaryReqTime / this.SummaryPerDayProduction);
            if(this.SummaryPerDayProduction == 0) {
                $scope.SummaryReqDay = 0;
            }
        }

        this.EntryUnit = function (tabId)
        {
            $scope.oDUDyeingTypeMapping  = [];
           
            if(tabId == 1) {
                var data=$scope.gridApi.selection.getSelectedRows();
            }
            if(tabId == 2) {
                var data=$scope.YarnWisegridApi.selection.getSelectedRows();
            }

            if(data==null || data.length<=0){
                msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }
            $scope.oDUDyeingTypeMapping = this.getDU(data[0]);

         
           
            //var ProductID = data[0].ProductID;
            
         
            $http.post(_sBaseAddress + '/DUProductionYetTo/SearchEntryUnit',  JSON.stringify({ProductID:data[0].ProductID}) ).then(
                function (response) {
                   
                    var results = jQuery.parseJSON(response.data);
                    if (results.length > 0) {
                        debugger;
                        $scope.oDUDyeingTypeMapping = results;
                        $scope.Modal(results,data[0]);

                    }
                    else {
                       // msModal.Message({ headerTitle: '', bodyText: 'No Data Found !!', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                        // alert("Data Not Found.");
                        //return;
                        $scope.Modal($scope.oDUDyeingTypeMapping,data[0]);
                    }

                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
          );
            
            //this.Modal($scope.oDUDyeingTypeMapping,data[0]);

          
           
        };
        $scope.Modal = function(list1 ,list){
            debugger;
            var modalObj={
                modalcontroller:'ModalMappingCtrl',
                appcontroller:'DUProductionYetToController',
                DUDyeingTypeMapping :list1,
                DyeingType:$scope.oDyeingType,
                Data : list

            }
           
            sessionStorage.setItem('BaseAddress',_sBaseAddress);
            var modalInstance=EUservice.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                debugger;

                
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        }
        this.getDU = function(data){
            var obj = {
                ProductID:data.ProductID
            }
            var list = [];
            $http.post(_sBaseAddress+'/DUProductionYetTo/SearchEntryUnit', JSON.stringify(obj)).then(
                           function (response) {
                               var results=jQuery.parseJSON(response.data);
                               debugger;
                               if(results.length>0)
                               {
                                 
                                  list= results ;
                                  
                               }

                               else{

                                   msModal.Message({headerTitle : '', bodyText:result[0].ErrorMessage, sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                               }
                           },
                           function (response) {
                               msModal.Message({headerTitle : '', bodyText:(response.data).ErrorMessage, sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});}
                       );
            return list;
        }

        this.printExcel = function(tabId, formate){
            debugger;
            //$scope.sParams ="";
            if(sessionStorage.getItem("sTempString")!=null){
                var sParams=sessionStorage.getItem("sTempString");
            }
            else
            {
                var sParams ="";
            }

            window.open(_sBaseAddress + '/DUProductionYetTo/Print_ReportXL?sTempString=' + sParams+'&BUID='+sessionStorage.getItem("BUID")+'&trackid='+tabId+'&formate='+formate, "_blank");

        }

        this.printPDF = function(tabId, formate){
            debugger;
            //$scope.sParams ="";
            if(sessionStorage.getItem("sTempString")!=null){
                var sParams=sessionStorage.getItem("sTempString");
            }
            else
            {
                var sParams ="";
            }
         
            window.open(_sBaseAddress + '/DUProductionYetTo/Print_PDF?sTempString=' + sParams+'&BUID='+sessionStorage.getItem("BUID")+'&trackid='+tabId+'&formate='+formate, "_blank");
        }

        this.DetailView =  function (tabID)
        {
            debugger;
            var oDUProductionYetTo = $scope.gridApi.selection.getSelectedRows()[0];
            if(oDUProductionYetTo==null || oDUProductionYetTo.DyeingorderID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.OrderWisegridOptions.data, function (value, index) {
                debugger;
                if (value.DyeingOrderID == oDUProductionYetTo.DyeingOrderID)
                {
                    sessionStorage.setItem("SelectedData", JSON.stringify(oDUProductionYetTo));
                    sessionStorage.setItem("DUProductionYetToList", JSON.stringify($scope.OrderWisegridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("oDUProductionYetToHeader","Order No:["+oDUProductionYetTo.OrderNo +"]  Product: ["+oDUProductionYetTo.ProductName+"]  Qty: ["+oDUProductionYetTo.Qty+"]  Prod. Qty: ["+oDUProductionYetTo.Qty_Prod+"]");
                    sessionStorage.setItem("BackLink", window.location.href);
                    debugger;
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/DUProductionYetTo/ViewDUProductionDetail?nDOID="+oDUProductionYetTo.DyeingOrderID+"&nProductID="+oDUProductionYetTo.ProductID;
                }
            }, $scope.OrderWisegridOptions.data);
        }


        //TAb selection
        this.tab = 1;
        this.SetTab = function (tabId)
        {

            this.tab = tabId;
        }
        this.IsSet = function (tabid)
        {

            return this.tab === tabid;
        }
        //this.PINo =this.LCNo =this.LDBCNo = "";
        ////$scope.sPINo =  this.PINo;

        this.searchPINoKeyUp=function(keyEvent){
            if(keyEvent.which==13 ||keyEvent.which ==10){
                debugger;
                this.PIsearch();
            }
        };
        this.PIsearch = function () {
            debugger;

            // (this.PINo == undefined ? "" :this.PINo) +'~'+sessionStorage.getItem('BUID');
            var sTempString=(this.PINo == undefined ? "" :this.PINo) + '~' + (this.OrderNo == undefined ? "" :this.OrderNo) + '~' + (this.ProductIDs == undefined ? "" :this.ProductIDs) + '~' +(this.ContractorIDs == undefined ? "" :this.ContractorIDs) + '~' + (this.OrderTypeID == undefined ? "" :this.OrderTypeID) + '~' + (this.OrderDateStart == undefined ? icsdateformat(new Date()) :this.OrderDateStart) + '~' + (this.OrderDateEnd == undefined ? icsdateformat(new Date()) :this.OrderDateEnd) +'~'+(this.cboOrderDate == undefined ? 0 :this.cboOrderDate) + '~' + (this.DyeingTypeID == undefined ? 0 : this.DyeingTypeID) + '~' + (this.chkYetToProduction == undefined? false:this.chkYetToProduction) + '~' + (this.chkYetToDelivery == undefined?false:this.chkYetToDelivery);

            sessionStorage.setItem("sTempString", sTempString);

            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-10;' } };
            $http.get(_sBaseAddress + '/DUProductionYetTo/AdvSearchDUP', { params: { sTemp: sTempString } }, config).then(
                  function (response) {

                      var results = jQuery.parseJSON(response.data);
                      if (results.Item1.length > 0) {
                          $scope.OrderWisegridOptions.data = results.Item1;
                          $scope.YarnWisegridOptions.data =results.Item2;
                          $scope.BuyerWisegridOptions.data =results.Item3;
                      } else {
                          msModal.Message({ headerTitle: '', bodyText: 'No Data Found !!', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                          // alert("Data Not Found.");
                          return;
                      }

                  },
                  function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
            );
        };
    });


</script>
                       


              
