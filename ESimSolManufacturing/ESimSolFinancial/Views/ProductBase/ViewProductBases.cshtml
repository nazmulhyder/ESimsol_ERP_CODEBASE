@model IEnumerable<ESimSol.BusinessObjects.ProductBase>


    @{
        ViewBag.Title = "Item Entry";
    }

        <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
                          <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
                              <label style="font-size:18px;">Please wait</label>
                              <div id="progressbar" style="width:100%;height:37px;"></div>
                          </div>
                      </div>

        <div class="menuMainCollectionTable" style="margin-left: 0px; height:100%; width:100%">
            <table style="height:100%;width:100%" border="0" cellpadding="0" cellspacing="0">
                <tr style="height:100%">
                    <td style="width:30%">
                        <div style="height:100%;width:100%">
                            <table id="tblProductCategoryTreeGrid" title="Item Category" class="easyui-treegrid" style="height:545px" fit="false" fitcolumns="true" data-options="idField:'id',treeField:'text',rownumbers:'true',toolbar:'#toolbarcategory'">
                                <thead>
                                    <tr>
                                        <th data-options="field:'text',width:300">Item Category Name</th>
                                        <th data-options="field:'id',width:100">Code</th>
                                    </tr>
                                </thead>
                            </table>
                            <div id="toolbarcategory">
                                <a id="btnReLoadCategory" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">ReLoad</a>
                            </div>
                        </div>
                    </td>
                    <td style="width:70%">
                        <div style="height:100%;width:100%">
                            <table id="tblProductBases" title="Group" class="easyui-datagrid" style="height:545px;width:100%" fit="false" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
                                <thead>
                                    <tr>
                                        <th field="ProductCode" width="10%">Code</th>
                                        <th field="ProductCategoryName" width="25%">Category Name</th>
                                        <th field="ProductName" width="30%"> Name</th>
                                        <th field="ShortName" width="15%">Short Name</th>
                                        <th field="Brand" width="20%">Brand</th>
                                    </tr>
                                </thead>
                            </table>
                            <div id="toolbar">
                                <a id="btnRefresh" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
                                <input type="text" id="txtSearchByCode" placeholder="Search by Code" style="width:100px" />
                                <input type="text" id="txtSearchByName" placeholder="Search by name" style="width:120px" />
                                <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
                                <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                                <a id="btnUnitConversion" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Unit Conversion</a>
                                <a href="javascript:void(0)" id="btnPropertyInfo" class="easyui-linkbutton" iconcls="icon-add" plain="true">Property Info</a>
                                <a id="btnProductEntry" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">Item List</a>
                            </div>
                        </div>
                    </td>
                </tr>
            </table>
        </div>

        <div id="winProduct" class=" easyui-window winclass" title="Edit Payment info" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div>
                <fieldset>
                    <table border="0" cellspacing="2" cellpadding="2" style="width:100%; font-size: 12px">
                        <tr>
                            <td id="tdCategory" style="width: 20%; text-align: right; font-weight: bold">
                                Product Category
                            </td>
                            <td id="tdCategoryCbo" style="width:30%; font-size:12px; text-align:left">
                                <input type="text" id="txtProductCategory" style="width:135px" /><input type="button" value="Pick" id="btnPickProductCategory" style="text-align:center; width:40px" />
                            </td>
                            <td id="tdGroup" style="width: 20%; text-align: right; font-weight: bold">
                                Product Group
                            </td>
                            <td id="tdGroupCbo" style="width:30%; font-size:12px; text-align:left">
                                <input type="text" id="txtProductGroup" style="width:135px" /><input type="button" value="Pick" id="btnPickProductGroup" style="text-align:center; width:40px" />
                            </td>
                        </tr>


                    </table>
                </fieldset>
                <fieldset style="height:97%">
                    <legend style="font-weight:bold;text-align:left;">Item Informations : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px;width:100%;">

                        <tr>
                            <td style="width:10%;  text-align:right">
                               <label id="lblCodeCaption">Code</label>
                            </td>
                            <td style="width:40%;  text-align:left">
                                <input type="text" style="width:99%; font-size:11px;" id="txtProductCode"  />
                            </td>
                            <td style="width:10%; text-align:right">
                                Brand
                            </td>
                            <td style="width:40%; text-align:left">
                                <input type="text" style="width:99%; font-size:11px;" id="txtBrand" />
                                              
                            </td>

                        </tr>
                        <tr>
                            <td style="width:10%;  text-align:right">
                                Name
                            </td>
                            <td style="width:40%;  text-align:left">
                                <input type="text" style="width:99%; font-size:11px;" id="txtProductName" />
                            </td>
                            <td style="width:10%;  text-align:right">
                                Short Name
                            </td>
                            <td style="width:40%; text-align:left">
                                <table cellpadding="0" cellspacing="2" style="width:100%;">
                                    <tr>
                                        <td style="width:35%;  text-align:left">
                                            <input type="text" style="width:99%; font-size:11px;" id="txtShortName" />
                                        </td>
                                        <td style="width:33%;text-align:right">
                                            Product Description:
                                        </td>
                                        <td style="width:35%;  text-align:left;">
                                            <input type="text" style="width:99%; font-size:11px;" id="txtProductDescription" />
                                        </td>
                                    </tr>
                                </table>
                            </td>

                        </tr>

                        <tr>
                            <td style="width:10%;  text-align:right">
                                Unit Type
                            </td>
                            <td style="width:40%;   text-align:left">
                                <table cellpadding="0" cellspacing="2" style="width:100%;">
                                    <tr>
                                        <td style="width:35%;  text-align:left">
                                            <select style="width:95%" id="cboMeasurmentUniteType" class="_ChangeIssueA"> </select>
                                        </td>
                                        <td style="width:33%;text-align:right">
                                            <label>Unit</label>
                                        </td>
                                        <td style="width:35%;  text-align:left;">
                                            <select id="cboMeasurmentUnit" style="width:100%;"></select>
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width:10%;  text-align:right">
                                Add +
                            </td>
                            <td style="width:40%; text-align:left">
                                <table cellpadding="0" cellspacing="2" style="width:100%;">
                                    <tr>
                                        <td style="width:35%;  text-align:left">
                                            <input type="text" style="width:99%; font-size:11px;" id="txtAddOne" />

                                        </td>
                                        <td style="width:33%;text-align:right">
                                            <label> Size</label>
                                        </td>
                                        <td style="width:35%;  text-align:left;">
                                            <input type="text" style="width:99%; font-size:11px;" id="txtAddTwo" />
                                        </td>
                                    </tr>
                                </table>

                            </td>
                        </tr>
                        <tr id="trProductType">
                            <td style="width:10%;  text-align:right">
                                Product Type
                            </td>
                            <td style="width:40%;  text-align:left">
                                <table cellpadding="0" cellspacing="2" style="width:100%;">
                                    <tr>
                                        <td style="width:35%;  text-align:left">
                                            <select id="cboProductType" style="width:100%;"></select>
                                        </td>
                                        <td style="width:33%;text-align:right">
                                            <label>Model Reference</label>
                                        </td>
                                        <td style="width:28%;  text-align:left;">
                                            <input type="text" id="txtMoldName" style="width:100%;"/>
                                        </td>
                                        <td style="width:7%; text-align:left;">
                                            <input type="button" value="Pick" id="btnPickMold" style="text-align:right; width:100%" />
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width:10%;  text-align:right">
                                <label>Account Head</label>
                            </td>
                            <td style="width:40%;   text-align:left">
                                <table border="0" cellpadding="0"cellspacing="0" style="width:100%">
                                    <tr>
                                        <td style="width:80%;"><input type="text" style="width:100%; font-size:11px;" id="txtAccountHeadName" placeholder="Type Head Name & Press Enter" /></td>
                                        <td style="width:20%;"><input type="button" value="Pick" id="btnPickAccountHead" style="text-align:center; width:100%" /></td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4" style="width:100%;">
                                <div style="width:100%;">
                                    <table border="0" cellspacing="2" cellpadding="2" style=" font-weight: bold; width:100%">
                                        <tr>
                                            <td id="tdApplyPlantNo" style="width:10%;  text-align:right;vertical-align:middle">
                                                Apply Plant No
                                                <input type="checkbox" style="font-size:11px;" id="chkIsSerialNoApply" />

                                            </td>
                                            <td id="tdApplyProperty" style="width:10%;   text-align:center; vertical-align:middle">
                                                Apply Property
                                                <input type="checkbox" style="font-size:11px;" id="chkApplyProperty" />
                                            </td>
                                            <td style=" text-align:left; width:4%;">
                                                <label id="lblCaption"> Full Name : </label>
                                            </td>
                                            <td style="background-color:darkturquoise; text-align:left; width:23%; color:White">
                                                <label id="lblFullName" style="font-size:13px; font-weight:bold">  </label>
                                            </td>
                                            <td style=" text-align:left; width:5%;"></td>
                                        </tr>
                                    </table>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4" style="width:100%;">
                                <div id="divPropertyValues" style="width:100%;">
                                    <table id="tblPorpertyValues" class="easyui-datagrid" title="Property List" style="width:100%;height:250px;" data-options="singleSelect: true,fitColumns:true,rownumbers:true,pagination:false,autoRowHeight:false,toolbar: '#toolbarTwo' ">
                                        <thead>
                                            <tr>
                                                <th field="PropertyName" width="40%">Property Name</th>
                                                <th field="ValueOfProperty" width="60%">Value</th>
                                            </tr>
                                        </thead>
                                    </table>
                                    <div id="toolbarTwo">
                                        @*<a id="btnAddProperty" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">New Property</a>*@
                                        <input id="txtPropertyName" type="text" placeholder="Property Name" style="width:120px;" />
                                        <a id="btnPickProperty" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" title="Pick Properties" iconcls="icon-pick" plain="true"></a>
                                        @*<input id="txtValueOfProperty" type="text" placeholder="Property Value" style="width:120px;" />
                                        <a id="btnPickValue" href="javascript:void(0)" class="easyui-linkbutton easyui-tooltip" title="Pick Values" iconcls="icon-pick" plain="true"></a>*@
                                        @*<a id="btnAddValue" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">New Value</a>*@
                                        <a id="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    </table>
                </fieldset>
                <div style="width:100%;">
                    <fieldset>
                        <legend style="font-weight: bold">Action : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                            <tr>
                                <td style="width:80%; text-align:right"></td>
                                <td style="width: 10%">
                                    <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                                </td>
                                <td style="width: 10%">
                                    <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </div>
            </div>
        </div>

        <div id="winUnitConversion" class="easyui-window winclass" title="Unit Conversion" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
            <div>
                <table id="tblConvertedList" title="" class="easyui-datagrid" style="width:529px;height:320px"
                        data-options="singleSelect: true, fitColumns:false, rownumbers:true,pagination:false,autoRowHeight:false,toolbar: '#conversiontoolbar'">
                    <thead>
                        <tr>
                            <th field="MeasurementUnitwithconvertedValue" width="480">Measurment Unit</th>
                        </tr>
                    </thead>
                </table>
                <div id="conversiontoolbar">
                    <table border="0" cellpadding="2" cellspacing="2" style="font-size: 11px; font-weight: bold;">
                        <tr>
                            <td style=" width:150px; text-decoration:underline; text-align:center"> Convert From </td>
                            <td style="width:15px"></td>
                            <td style=" width:150px; text-decoration:underline; text-align:center"> Convert To </td>
                            <td style="width:200px"></td>
                        </tr>
                        <tr>
                            <td style=" width:150px">
                                1 <select id="cboFromUnits" style="width:130px"> </select>
                            </td>
                            <td style="width:15px; text-align:center">=</td>
                            <td style=" width:150px">
                                <input type="text" id="txtConvertedValue" style="width:65px" /><input type="text" id="txtUnitName" style="width:65px;" disabled="disabled" />
                            </td>
                            <td style="width:200px">
                                <a id="btnUCONAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                <a id="btnUCONDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                            </td>
                        </tr>
                    </table>
                </div>
                <div style="width:100%;">
                    <fieldset>
                        <legend style="font-weight: bold">Action : </legend>
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                            <tr>
                                <td style="width:80%; text-align:right"></td>
                                <td style="width: 10%"></td>
                                <td style="width: 10%">
                                    <a id="btnUCONClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </div>
            </div>
        </div>

    <script type="text/javascript">
    var _oProductBases=[];
    var _sBaseAddress="";
    var _oAuthorizationRolesMapping = [];
    var _oProductCategorys=[];
    var _oProductCategory=null;
    var _bAddProductCategory=0;
    var _oIsAdd=false;
    var _nID=0;
    var _oProduct=null;
    var _oMeasurementUnits=[];
    var _oUniteTypeObj=[];
    var _oProductTypes=[];
    var _nSelectedRowIndex=0;
    var _oClientOperationSetting = null;
    var _oTProductCategory =  null;
    var _nBUID = 0;
    $(document).ready(function () {
        _oProductBases=@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
        _oTProductCategory = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.TProductCategory));
        _oUniteTypeObj= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.UniteTypeObj));
        _oClientOperationSetting = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ClientOperationSetting));
        _oMeasurementUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.MeasurementUnits));
        _oProductTypes=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ProductTypeObjs));
        _nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));

        var oTProductCategorys =sessionStorage.getItem("ProductCategorys");
        var nID =sessionStorage.getItem("SelectedRowIndex");
        RefreshCategoryList(_oTProductCategory);
        if(nID>0 && nID !=null)
        {
            $('#tblProductCategoryTreeGrid').treegrid('select', nID);
        }
        
        //RefreshControlLayout();
        $('#btnPropertyInfo').hide();
        RefreshCom();
        _oProduct= {
            ProductID : 0,
            ProductCategoryID :0,
            ProductBaseID : 0,
            AccountHeadID:0 ,
            MeasurementUnitID:0
        };
        debugger;

        _bAddProductCategory=  sessionStorage.getItem("SelectedRowIndexPCT");

        _nID =parseInt(sessionStorage.getItem("SelectedRowIndex"));
        var oProductBases =sessionStorage.getItem("ProductBases");
        if(oProductBases!=null)
        {
            oProductBases = jQuery.parseJSON(oProductBases);
        }
        else
        {
            oProductBases=_oProductBases;
        }
        if(oProductBases.length>0)
        {
            RefreshList(oProductBases);
        }
        else{
            oProductBases=[];
            RefreshList(oProductBases);
        }
        if(_nID!=-1)
        {
            $('#tblProductBases').datagrid('selectRow', _nID);
        }

        if(_bAddProductCategory!==null && _bAddProductCategory!=-1)
        {
            $('#tblProductCategoryTreeGrid').treegrid('select', _bAddProductCategory);
        }

        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
        $(".lblLoadingMessage").hide();

    });

        $('#btnReLoadCategory').click(function(){
            debugger;
            var oNewPC = _oTProductCategory;
            RefreshCategoryList(oNewPC);
        });

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }
  
    $('#txtSearchByCode').keypress(function (e) {
        var c = String.fromCharCode(e.which);

        var txtSearchByCode = document.getElementById('txtSearchByCode').value;
        if(txtSearchByCode.length<=0 ||txtSearchByCode==null )
        {
            DynamicRefreshList(_oProductBases, "tblProductBases");
        }
        else{
            oPBases = $('#tblProductBases').datagrid('getRows');

            var sTempName="";
            var oSearchedData = [];
            for(i=0;i<oPBases.length;++i)
            {
                sTempName=oPBases[i]['ProductCode'];
                if(sTempName.toUpperCase().indexOf($('#txtSearchByCode').val().toUpperCase())>-1)
                {
                    oSearchedData.push(oPBases[i]);
                }
            }
            $('#tblProductBases').empty();
            if (oSearchedData.length == 0) { DynamicRefreshList(_oProductBases, "tblProductBases");}
            else { DynamicRefreshList(oSearchedData, "tblProductBases"); }
            oSearchedData = [];
        }

    });
    $('#txtSearchByName').keypress(function (e) {
        var c = String.fromCharCode(e.which);

        var txtSearchByName = document.getElementById('txtSearchByName').value;
        if(txtSearchByName.length<=0 ||txtSearchByName==null )
        {
            DynamicRefreshList(_oProductBases, "tblProductBases");
        }
        else{
            oPBases = $('#tblProductBases').datagrid('getRows');

            var sTempName="";
            var oSearchedData = [];
            for(i=0;i<oPBases.length;++i)
            {
                sTempName=oPBases[i]['ProductName'];
                if(sTempName.toUpperCase().indexOf($('#txtSearchByName').val().toUpperCase())>-1)
                {
                    oSearchedData.push(oPBases[i]);
                }
            }
            $('#tblProductBases').empty();
            if (oSearchedData.length == 0) { DynamicRefreshList(_oProductBases, "tblProductBases");}
            else { DynamicRefreshList(oSearchedData, "tblProductBases"); }
            oSearchedData = [];
        }

    });


    $("#btnAdd").click(function(){

        debugger;
        var oProductCategory= $('#tblProductCategoryTreeGrid').datagrid('getSelected');
        if(oProductCategory==null || parseInt(oProductCategory.id)<=0)
        {
            alert("Please select a  Category!");
            return;
        }
        if(oProductCategory.IsLastLayer!=true)
        {
            alert("Please Select last layer!");
            return;
        }

        PropertyShowHide(false);
        RefreshByProductSetup(oProductCategory);
        _oProductCategory=oProductCategory;
        var SelectedRowIndexPCT=$('#tblProductCategoryTreeGrid').datagrid('getRowIndex',oProductCategory);
        if(oProductCategory.IsApplyGroup)
        {
            // For Base/Group Product
            var oProductBases= $('#tblProductBases').datagrid('getRows');
            sessionStorage.setItem("ProductBases", JSON.stringify(oProductBases));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("SelectedRowIndexPCT", SelectedRowIndexPCT);
            sessionStorage.setItem("ProductBaseHeader", "Add Group");
            var tsv=((new Date()).getTime())/1000;
            sessionStorage.setItem("BackLink",  window.location.href);
            window.location.href = _sBaseAddress+ "/ProductBase/ViewProductBase?pcid="+oProductCategory.id+"&id=0&ts="+tsv;
        }
        else{

            debugger;
            RefreshControl_ProductType();
            _oIsAdd=true;
            var   oProduct= {
                ProductID : 0,
                ProductCategoryID : parseInt(oProductCategory.id),
                ProductBaseID : 0,
                AccountHeadID:0 ,
                MeasurementUnitID:0,
                ProductCategoryName:oProductCategory.text,
                GroupName:"",
                ProductCode:"",
                ProductName:"",
                AddOne:"",
                AddTwo:"",
                ShortName:"",
                UnitTypeInInt:0,
                Note:"",
                ProductType:0,
                ApplyProperty:0,
                IsSerialNoApply:0

            };
            $("#txtProductCategory").val(oProduct.text);
            $('#winProduct input[type=text]').val('');
            RefreshControl(oProduct);
            $("#winProduct").icsWindow('open', "Product Entry");
        }

    });

    $("#btnEdit").click(function(){
        var oProductBase= $('#tblProductBases').datagrid('getSelected');
        var SelectedRowIndex=$('#tblProductBases').datagrid('getRowIndex',oProductBase);

        debugger;
        if(oProductBase==null )
        {
            alert("Please select a item from List!");
            return;
        }
        var oProductCategory= $('#tblProductCategoryTreeGrid').datagrid('getSelected');
        var SelectedRowIndexPCT=$('#tblProductCategoryTreeGrid').datagrid('getRowIndex',oProductCategory);
        if(oProductCategory.IsApplyGroup === false)
        {
            oProductBase.ProductBaseID = 0;
        }
        if(parseInt(oProductBase.ProductBaseID)<=0)
        {
            if(parseInt(oProductBase.ProductID)<=0)
            {
                alert("Please select a Product from List!");
                return;
            }

            debugger;
            _oProductBases.PPIs=[];
            //GetsProperty(oProductBase);

            oProductCategory.ApplyProductType_IsShow=oProductBase.ApplyProductType_IsShow;
            oProductCategory.ApplyProperty_IsShow=oProductBase.ApplyProperty_IsShow;
            oProductCategory.ApplyPlantNo_IsShow=oProductBase.ApplyPlantNo_IsShow;
            oProductCategory.IsApplyCategory=oProductBase.IsApplyCategory;
            oProductCategory.ApplyGroup_IsShow=oProductBase.IsApplyGroup;
            RefreshByProductSetup(oProductCategory);
            _oProductCategory=oProductCategory;
            PropertyShowHide(oProductBase.ApplyProperty);
            RefreshControl_ProductType();
            _oIsAdd=false;
            oProduct= $('#tblProductBases').datagrid('getSelected');
            if(oProduct==null || oProduct.ProductID<=0)
            {
                alert("Please Select a item from list.");
                return;
            }
            $('#winProduct input[type=text]').val('');
            _nSelectedRowIndex=$('#tblProductBases').datagrid('getRowIndex',oProduct);
            RefreshControl(oProduct);
            debugger
            $("#winProduct").icsWindow('open', "Product Entry");
        }
        else{
            ///  For Base/Group Product
            var oProductBases= $('#tblProductBases').datagrid('getRows');
            sessionStorage.setItem("ProductBases", JSON.stringify(oProductBases));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("SelectedRowIndexPCT", SelectedRowIndexPCT);
            sessionStorage.setItem("ProductBaseHeader", "Edit Group");
            var tsv=((new Date()).getTime())/1000;
            sessionStorage.setItem("BackLink",  window.location.href);
            window.location.href = _sBaseAddress+ "/ProductBase/ViewProductBase?pcid="+oProductBase.ProductCategoryID+"&id="+oProductBase.ProductBaseID+"&ts="+tsv;

        }

    });

    $("#btnDelete").click(function(){
        debugger;
        var oProductBase= $('#tblProductBases').datagrid('getSelected');

        if(oProductBase==null )
        {
            alert("Please select a item from list!");
            return;
        }

        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblProductBases').datagrid('getRowIndex',oProductBase);
        if (oProductBase.ProductBaseID > 0)
        {


            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/ProductBase/Delete",
                data:  JSON.stringify(oProductBase),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Deleted")
                    {
                        alert("Data Delete Successfully");
                        $('#tblProductBases').datagrid('deleteRow',SelectedRowIndex);
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
        else{

            $.ajax
         ({
             type: "POST",
             dataType: "json",
             url : _sBaseAddress+  "/Product/Delete",
             data:  JSON.stringify(oProductBase),
             contentType: "application/json; charset=utf-8",
             success: function (data) {
                 var feedbackmessage = jQuery.parseJSON(data);
                 if (feedbackmessage == "Deleted")
                 {
                     alert("Data Delete Successfully");
                     $('#tblProductBases').datagrid('deleteRow',SelectedRowIndex);
                 }
                 else
                 {
                     alert(feedbackmessage);
                 }
             },
             error: function (xhr, status, error)
             {
                 alert(error);
             }
         });
        }
    });


    //Capita Resource
    $("#txtMoldName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var txtModelName = $('#txtMoldName').val();
            if(txtModelName==null || txtModelName=="")
            {
                alert("Please Type Model Name");
                return;
            }
            GetModelReference(txtModelName);
        }
    });
    $("#btnPickMold").click(function(){
        debugger;
        GetModelReference("");
    });
    $('#txtMoldName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtMoldName").removeClass("fontColorOfPickItem");
            _oProduct.ModelReferenceID = 0;
        }
    });


    function GetModelReference(txtModelName)
    {
        var oCapitalResource = {BUID:_nBUID,ResourcesTypeInInt:1, Name:txtModelName };//Resources type : 1 =Mold
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oCapitalResource,
            ControllerName: "CapitalResource",
            ActionName: "GetsByBUandResourceTypeWithName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].CRID > 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "Name", title: "Mold Name", width: 250, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "Note", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winCapitalResource',
                        winclass: 'clsCapitalResource',
                        winwidth: 500,
                        winheight: 400,
                        tableid: 'tblCapitalResource',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'Mold List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }


    $("#btnRefresh").click(function(){
        var oProductCategory= $('#tblProductCategoryTreeGrid').datagrid('getSelected');
        if(oProductCategory==null || parseInt(oProductCategory.id)<=0)
        {
            alert("Please select a Sub Ledger Category!");
            return;
        }

        if(oProductCategory.IsApplyGroup)
        {
            $('#btnPropertyInfo').hide();
            $( "#btnProductEntry" ).show();
            $( "#tblProductBases" ).datagrid({title : 'Group'});

            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);

            var oProductBase={ ProductCategoryID : oProductCategory.id };
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/ProductBase/GetByCategory",
                traditional: true,
                data: JSON.stringify(oProductBase),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oProductBases = jQuery.parseJSON(data);
                    if(oProductBases!=null)
                    {
                        _oProductBases=oProductBases;
                        RefreshList(oProductBases);
                        clearInterval(intervalID);
                        $("#progressbarParent").hide();
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
        else{
            $( "#btnProductEntry" ).hide();
            $('#btnPropertyInfo').show();
            $( "#tblProductBases" ).datagrid({title : 'Product'});
            $("#progressbar").progressbar({ value: 0 });
            $("#progressbarParent").show();
            var intervalID = setInterval(updateProgress, 250);
            var oProduct={ ProductCategoryID : oProductCategory.id };
            $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/Product/GetByCategory",
                traditional: true,
                data: JSON.stringify(oProduct),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oProductBases = jQuery.parseJSON(data);
                    if(oProductBases!=null)
                    {
                        _oProductBases=oProductBases;
                        RefreshList(oProductBases);
                        clearInterval(intervalID);
                        $("#progressbarParent").hide();
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    });

    function RefreshList(oProductBases)
    {
        var data= oProductBases;
        data={"total":""+data.length+"","rows":data};
        $('#tblProductBases').datagrid('loadData',data);
    }

    function RefreshCategoryList(oTProductCategory)
    {
        var data= [oTProductCategory];
        data={"total":""+data.length+"","rows":data};
        $('#tblProductCategoryTreeGrid').treegrid('loadData',data);
    }
    function RefreshControlLayout()
    {
        document.getElementById('btnAdd').style.display = 'none';
        document.getElementById('btnEdit').style.display = 'none';
        document.getElementById('btnDelete').style.display = 'none';



    }

    function HavePermission(sOperationType, sDbObject)
    {


        for(var i =0;i<_oAuthorizationRolesMapping.length;i++)
        {
            if(_oAuthorizationRolesMapping[i].OperationTypeInString == sOperationType && _oAuthorizationRolesMapping[i].DBObjectName == sDbObject)
                return  true;
        }
        return false;

    }

    $('#btnPropertyInfo').click(function(){
        var oProductBase = $("#tblProductBases").datagrid("getSelected");
        if (oProductBase == null || parseInt(oProductBase.ProductID) <= 0) { alert("Please select a Product from list!"); return; }
        if (_nBUID <=0) { alert("Sorry there is no Business Unit. Please Refresh Menu."); return; }
        sessionStorage.setItem('ProductName', oProductBase.ProductName);
        sessionStorage.setItem("BackLink", window.location.href);
        window.open(_sBaseAddress+'/Product/ViewProductPropertyInformation?ProductID='+parseInt(oProductBase.ProductID)+'&BUID='+_nBUID, '_blank');
    });


    $("#btnProductEntry").click(function(){

        var oProductBase= $('#tblProductBases').datagrid('getSelected');
        if(oProductBase==null || parseInt(oProductBase.ProductBaseID)<=0)
        {
            alert("Please select a product !");
            return;
        }
        var SelectedRowIndex=$('#tblProductBases').datagrid('getRowIndex',oProductBase);
        var oProductBases= $('#tblProductBases').datagrid('getRows');
        sessionStorage.setItem("ProductBases", JSON.stringify(oProductBases));
        sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
        sessionStorage.setItem("AddProductCategory", 0);
        sessionStorage.setItem("ProductBaseHeader", "Item List");
        sessionStorage.setItem("BUID", _nBUID);
        var tsv=((new Date()).getTime())/1000;
        sessionStorage.setItem("BackLink",  window.location.href);
        window.location.href = _sBaseAddress+ "/Product/ViewProducts_Base?nid="+oProductBase.ProductBaseID+"&ts="+tsv;

    });


    function RefreshByProductSetup(oProductCategory)
    {
        if(oProductCategory.ApplyProductType_IsShow)   {$('#trProductType').show();} else {$('#trProductType').hide();}
        if(oProductCategory.ApplyProperty_IsShow) {$('#tdApplyProperty').show();} else {$('#tdApplyProperty').hide();}
        if(oProductCategory.ApplyPlantNo_IsShow){$('#tdApplyPlantNo').show();} else {$('#tdApplyPlantNo').hide();}

        if(oProductCategory.IsApplyCategory)
        {
            $('#tdCategory').show();
            $('#tdCategoryCbo').show();
        }
        else
        {
            $('#tdCategory').hide();
            $('#tdCategoryCbo').hide();
        }
        if(oProductCategory.ApplyGroup_IsShow)
        {
            $('#tdGroup').show();
            $('#tdGroupCbo').show();
        }
        else
        {
            $('#tdGroup').hide();
            $('#tdGroupCbo').hide();
        }


    }

    function RefreshCom()
    {
        $("#cboMeasurmentUniteType").icsLoadCombo({
            List: _oUniteTypeObj,
            OptionValue: "id",
            DisplayText: "Value"
        });

        $("#cboProductType").icsLoadCombo({List: _oProductTypes,OptionValue: "id",DisplayText: "Value"});

    }
    function RefreshControl_ProductType()
    {
        debugger;
      
        if(parseInt($("#cboProductType").val())==1)
        {
            _oProduct.AccountHeadID = 0;
            document.getElementById("txtAccountHeadName").disabled = true;
            $('#txtAccountHeadName').val('');
            $("#btnPickAccountHead").hide();
        }else  if(parseInt($("#cboProductType").val())>1)
        {
            document.getElementById("txtAccountHeadName").disabled = false;
            var txtAccountHeadName = document.getElementById("txtAccountHeadName");
            txtAccountHeadName.style.color = "blue";
            txtAccountHeadName.style.fontWeight = "bold";
            $("#btnPickAccountHead").show();
        }

        //if(_sProductHeader=="View Item")
        //{
        //    $('#btnPickAccountHead').hide();
        //    $('#btnSave').hide();
        //}
        //$('#chkApplyProperty').change();
        FullName_keyup();
    }
    $('#chkApplyProperty').change(function ()
    {
        PropertyShowHide(this.checked)
    });
    function PropertyShowHide(bIsShow)
    {
        if(bIsShow){
            $('#divPropertyValues').show();

        }
        else{
            $('#divPropertyValues').hide();
            DynamicRefreshList([], 'tblPorpertyValues');
        }
    }
    function LoadintoGrid(oProducts) {
        data = oProducts;
        data = { "total": "" + data.length + "", "rows": data };
        $('#tblProducts').datagrid('loadData', data);

    }
    function Refresh() {
        document.getElementById('txtSearchbyProductName').value = "Search by Purchase Contract No";
        LoadintoGrid(_oProducts);
    }
    function Clearfield() {
        $("#txtSearchbyProductName")[0].value = '';
    }
    $('#txtSearchbyProductName').keydown(function(e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) //Enter key-13
        {
            if (_oProducts.length <= 0) {
                alert("There are no data for searching!!!!");
                return;
            }
            var sSearchByProductNo = document.getElementById('txtSearchbyProductName').value;
            var sName = "";
            var oSearchedData = [];

            var n = 0;
            for (var i = 0; i < _oProducts.length; ++i) {
                sName = _oProducts[i].ProductNo;
                n = 0;
                n = sName.toUpperCase().indexOf(sSearchByProductNo.toUpperCase());
                if (n != -1) {
                    oSearchedData.push(_oProducts[i]);
                }
            }
            $('#tblProducts').empty();
            data = oSearchedData;
            data = { "total": "" + data.length + "", "rows": data };
            $('#tblProducts').datagrid('loadData', data);

        }
        $('#txtSearchbyProductName').focus();

    });
    function Delete() {

        var oProduct = $('#tblProducts').datagrid('getSelected');
        if (oProduct == null || oProduct.PCID <= 0) {
            alert("Please select a item from list!");
            return false;
        }
        if (oProduct.Status == 1) {
            alert("Sorry, Can't delete an Approved Purchase Contract!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return;

        var SelectedRowIndex = $('#tblProducts').datagrid('getRowIndex', oProduct);

        if (oProduct.PCID > 0) {

            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/Product/Delete",
                traditional: true,
                data: JSON.stringify(oProduct),
                contentType: "application/json; charset=utf-8",
                success: function(data) {

                    feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Delete successfully") {
                        $('#tblProducts').datagrid('deleteRow', SelectedRowIndex);
                        alert("Delete sucessfully");

                    } else {
                        alert(feedbackmessage);
                    }
                },
                error: function(xhr, status, error) {
                    alert(error);
                }

            });

        }
    }

    ////////////////
    $('#txtProductCategory').keydown(function (e){
        if(e.which === 13 || e.which === 9)
        {

            var txtProductCategory = $('#txtProductCategory').val();
            var oProductCategory = {
                ProductCategoryName : txtProductCategory,
                IsLastLayer : true
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProductCategory,
                ControllerName: "ProductCategory",
                ActionName: "GetByName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (parseInt(response.objs[0].ProductCategoryID) > 0) {
                        var tblColums = []; var oColumn = { field: "ProductCategoryID", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductCategoryName", title: "Category Name", width: 200, align: "left" }; tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winProductCategory',
                            winclass: 'clsProductCategory',
                            winwidth: 500,
                            winheight: 420,
                            tableid: 'tblPCategory_Pic',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'ProductCategoryName',
                            windowTittle: 'Product Category List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else
                {
                    alert("Data Not Found!");
                }
            });
        }
    });

    $('#btnPickProductCategory').click(function (e){
        debugger;
        var txtProductCategory = $('#txtProductCategory').val();
        var oProductCategory = {
            ProductCategoryName : txtProductCategory,
            IsLastLayer : true
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProductCategory,
            ControllerName: "ProductCategory",
            ActionName: "GetByName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (parseInt(response.objs[0].ProductCategoryID) > 0) {
                    var tblColums = []; var oColumn = { field: "ProductCategoryID", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductCategoryName", title: "Category Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductCategory',
                        winclass: 'clsProductCategory',
                        winwidth: 500,
                        winheight: 420,
                        tableid: 'tblPCategory_Pic',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ProductCategoryName',
                        windowTittle: 'Product Category List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("Data Not Found!");
            }
        });
    });

    $('#txtProductGroup').keydown(function (e){
        if(e.which === 13 || e.which === 9)
        {

            if(parseInt(_oProduct.ProductCategoryID)<=0)
            {
                alert("Please Select an Bank Branch!");
                return false;
            }
            var txtProductGroup = $('#txtProductGroup').val();
            var oProductBase = {
                ProductName : txtProductGroup,
                ProductCategoryID : _oProduct.ProductCategoryID
            };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProductBase,
                ControllerName: "ProductBase",
                ActionName: "GetByCategoryOrName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (parseInt(response.objs[0].ProductBaseID) > 0) {
                        var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width: 150, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Group Name", width: 200, align: "left" }; tblColums.push(oColumn);

                        var oPickerParam = {
                            winid: 'winProductGroup',
                            winclass: 'clsProductGroup',
                            winwidth: 500,
                            winheight: 420,
                            tableid: 'tblProductGroup',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'ProductName',
                            windowTittle: 'Product Group  List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else
                {
                    alert("Data Not Found!");
                }
            });
        }
    });

    $('#btnPickProductGroup').click(function (e){

        if(parseInt(_oProduct.ProductCategoryID)<=0)
        {
            alert("Please Select an Bank Branch!");
            return false;
        }
        var txtProductGroup = $('#txtProductGroup').val();
        var oProductBase = {
            ProductName : txtProductGroup,
            ProductCategoryID : _oProduct.ProductCategoryID
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProductBase,
            ControllerName: "ProductBase",
            ActionName: "GetByCategoryOrName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (parseInt(response.objs[0].ProductBaseID) > 0) {
                    var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width: 150, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Group Name", width: 200, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winProductGroup',
                        winclass: 'clsProductGroup',
                        winwidth: 500,
                        winheight: 420,
                        tableid: 'tblProductGroup',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ProductName',
                        windowTittle: 'Product Group List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("Data Not Found!");
            }
        });
    });
    //pick Account Head
    $("#txtAccountHeadName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var nComponentID=0;
            if(parseInt($('#cboProductType').val()) && parseInt($('#cboProductType').val())=== 2)
            {
                nComponentID=2;
            }
            else if(parseInt($('#cboProductType').val()) && parseInt($('#cboProductType').val())=== 3)
            {
                nComponentID=6;
            }
            var oChartsOfAccount= {ComponentID:nComponentID,AccountTypeInInt:5, AccountHeadName: $.trim($('#txtAccountHeadName').val()) };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oChartsOfAccount,
                ControllerName: "ChartsOfAccount",
                ActionName: "GetsAccountsHeadByComponentAndAccountType",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].AccountHeadID> 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: "AccountHeadCodeName", title: "Account Head", width: 300, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winAccountHeads',
                            winclass: 'clsAccountHead',
                            winwidth: 450,
                            winheight: 460,
                            tableid: 'tblAccountHeads',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'AccountHeadName',
                            windowTittle: 'AccountHead List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
        if (code == 8|| code == 46) //backspace=8,delete=46
        {
            $("#txtAccountHeadName").val('');
            var txtAccountHeadName = document.getElementById("txtAccountHeadName");
            txtAccountHeadName.style.color = "black";
            txtAccountHeadName.style.fontWeight = "normal";
            //debugger;
            _oProduct.AccountHeadID = 0;
        }
    });
    $("#btnPickAccountHead").click(function () {

        var oChartsOfAccount= {ComponentID:2,AccountTypeInInt:5 };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oChartsOfAccount,
            ControllerName: "ChartsOfAccount",
            ActionName: "GetsAccountsHeadByComponentAndAccountType",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AccountHeadID> 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "AccountHeadCodeName", title: "Account Head", width: 300, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winAccountHeads',
                        winclass: 'clsAccountHead',
                        winwidth: 450,
                        winheight: 460,
                        tableid: 'tblAccountHeads',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'AccountHeadName',
                        windowTittle: 'AccountHead List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });

    });

    ///property
    $("#txtPropertyName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {


            var oProperty= { PropertyName: $.trim($('#txtPropertyName').val()) };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oProperty,
                ControllerName: "Property",
                ActionName: "GetsByName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].PropertyID> 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: "PropertyName", title: "Property", width: 200, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winPropertys',
                            winclass: 'clsProperty',
                            winwidth: 450,
                            winheight: 460,
                            tableid: 'tblPropertys',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: true,
                            searchingbyfieldName: 'PropertyName',
                            windowTittle: 'Property List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
        if (code == 8|| code == 46) //backspace=8,delete=46
        {
            $("#txtPropertyName").val('');
            $("#txtPropertyName").removeClass('fontColorOfPickItem');
            //debugger;
            _oBOQ.PropertyValueID = 0;
        }
    });
    $("#btnPickProperty").click(function () {

        var oProperty= { PropertyName: '' };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProperty,
            ControllerName: "Property",
            ActionName: "GetsByName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PropertyID> 0) {
                    debugger;
                    var tblColums = []; var oColumn = { field: "PropertyName", title: "Property", width: 200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPropertys',
                        winclass: 'clsProperty',
                        winwidth: 450,
                        winheight: 460,
                        tableid: 'tblPropertys',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'PropertyName',
                        windowTittle: 'Property List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });

    });
    ///value
    $("#txtValueOfProperty").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var oPropertyValue = $('#tblPorpertyValues').datagrid('getSelected');
            if(oPropertyValue==null || oPropertyValue.PropertyID<=0)
            {
                alert("Please select a item from list!");
                return false;
            }


            var oPropertyValue = { ValueOfProperty: $.trim($('#txtValueOfProperty').val()),PropertyID:oPropertyValue.PropertyID };
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oPropertyValue,
                ControllerName: "PropertyValue",
                ActionName: "GetsByName",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                debugger;
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].PropertyValueID> 0) {
                        debugger;
                        var tblColums = []; var oColumn = { field: "PropertyName", title: "Property", width: 200, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ValueOfProperty", title: "Value", width: 80, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winPropertyValues',
                            winclass: 'clsPropertyValue',
                            winwidth: 450,
                            winheight: 460,
                            tableid: 'tblPropertyValues',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'Name',
                            windowTittle: 'PropertyValue List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }else{
                    alert("Data Not Fund");
                    return;
                }
            });
        }
        if (code == 8|| code == 46) //backspace=8,delete=46
        {
            $("#txtValueOfProperty").val('');
            $("#txtValueOfProperty").removeClass('fontColorOfPickItem');
            //debugger;
            _oBOQ.PropertyValueID = 0;
        }
    });
    $("#btnPickValue").click(function () {
        var oPropertyValue = $('#tblPorpertyValues').datagrid('getSelected');
        if(oPropertyValue==null || oPropertyValue.PropertyID<=0)
        {
            alert("Please select a item from list!");
            return false;
        }

        var oPropertyValue = {ValueOfProperty: "",PropertyID:oPropertyValue.PropertyID };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oPropertyValue,
            ControllerName: "PropertyValue",
            ActionName: "GetsByName",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].PropertyValueID > 0) {
                    var tblColums = []; var oColumn = { field: "PropertyName", title: "Property", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ValueOfProperty", title: "Value", width: 80, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winPropertyValues',
                        winclass: 'clsPropertyValue',
                        winwidth: 450,
                        winheight: 460,
                        tableid: 'tblPropertyValues',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'Name',
                        windowTittle: 'PropertyValue List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Fund");
                return;
            }
        });

    });
    function IntializePickerbutton(oPickerobj) {

        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj)
    {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid === 'winProductCategory') {
            if (oreturnObj != null && parseInt(oreturnObj.ProductCategoryID) > 0) {

                _oProduct.ProductCategoryID=parseInt(oreturnObj.ProductCategoryID);
                if(parseInt(_oProduct.ProductBaseID)!=parseInt(oreturnObj.ProductCategoryID))
                {
                    _oProduct.ProductBaseID=0;
                    $('#txtProductGroup').val("");
                }
                $('#txtProductCategory').val(oreturnObj.ProductCategoryName);
                $('#txtProductGroup').focus();

            }
        }
        else if (oPickerobj.winid === 'winProductGroup')
        {
            _oProduct.ProductBaseID= parseInt(oreturnObj.ProductBaseID);
            $('#txtProductGroup').val(oreturnObj.ProductName);
            _oProduct.GroupName =oreturnObj.ProductName;
        }
        else if (oPickerobj.winid == 'winPropertyValues') {
            if (oreturnObj != null && oreturnObj.PropertyValueID > 0) {
                $("#txtValueOfProperty").val(oreturnObj.ValueOfProperty);
                $("#txtValueOfProperty").addClass('fontColorOfPickItem');

                var oPropertyValue = $('#tblPorpertyValues').datagrid('getSelected');
                var SelectedRowIndex=$('#tblPorpertyValues').datagrid('getRowIndex',oPropertyValue);
                oPropertyValue.PropertyValueID=oreturnObj.PropertyValueID;
                oPropertyValue.ValueOfProperty=oreturnObj.ValueOfProperty;
                $('#tblPorpertyValues').datagrid('updateRow',{index:SelectedRowIndex,row:oPropertyValue});
                $('#txtValueOfProperty').focus();
            }
        } else if (oPickerobj.winid=='winPropertys') {

            $("#txtPropertyName").addClass('fontColorOfPickItem');
            debugger;
            if(oPickerobj.multiplereturn)
            {
                if (oreturnobjs.length > 0)
                {

                    $("#txtPropertyName").val((oreturnobjs.length>1) ? oreturnobjs.length+" Item(s) Selected":oreturnobjs[0].PropertyName);
                    for(var i=0;i<oreturnobjs.length;i++){
                        if(!IsExit(oreturnobjs[i].PropertyID)){
                            var oPPI={ProductPropertyInfoID : 0,
                                ProductID : _oProduct==null?0: _oProduct.ProductID,
                                PropertyID :oreturnobjs[i].PropertyID,
                                PropertyValueID :0,
                                PropertyName :oreturnobjs[i].PropertyName,
                                ValueOfProperty:''};
                            $('#tblPorpertyValues').datagrid('appendRow',oPPI);
                        }
                    }
                }
            }else{
                if (oreturnObj != null && oreturnObj.PropertyID > 0 ) {
                    $("#txtPropertyName").val(oreturnObj.PropertyName);
                    if(!IsExit(oreturnObj.PropertyID)){
                        var oPPI={ProductPropertyInfoID : 0,
                            ProductID : _oProduct==null?0: _oProduct.ProductID,
                            PropertyID :oreturnObj.PropertyID,
                            PropertyValueID :0,
                            PropertyName :oreturnObj.PropertyName,
                            ValueOfProperty:''};
                        $('#tblPorpertyValues').datagrid('appendRow',oPPI);
                    }
                }
            }
            $('#txtPropertyName').focus();
        }else  if (oPickerobj.winid == 'winAccountHeads')
        {
            if (oreturnObj != null && oreturnObj.AccountHeadID > 0) {
                $("#txtAccountHeadName").val(oreturnObj.AccountHeadCodeName);
                var txtAccountHeadName = document.getElementById("txtAccountHeadName");
                txtAccountHeadName.style.color = "blue";
                txtAccountHeadName.style.fontWeight = "bold";
                _oProduct.AccountHeadID = oreturnObj.AccountHeadID;
                $('#txtAccountHeadName').focus();
            }
        }  else if (oPickerobj.winid == 'winCapitalResource')
        {
            if (oreturnObj != null && oreturnObj.CRID > 0)
            {
                $('#txtMoldName').val(oreturnObj.Name);
                $('#txtMoldName').addClass('fontColorOfPickItem');
                _oProduct.ModelReferenceID = oreturnObj.CRID;
                $('#txtMoldName').focus();
            }
        }
    }
    $("#btnAddValue").click(function (){
        var oPropertyValue = $('#tblPorpertyValues').datagrid('getSelected');
        if(oPropertyValue==null || oPropertyValue.PropertyID<=0)
        {
            alert("Please select a item from list!");
            return false;
        }
        sessionStorage.setItem("PropertyValueBackTo", window.location.href);
        window.location.href = _sBaseAddress+ "/PropertyValue/ViewPropertyValue?id="+oPropertyValue.PropertyID;
        //$('#tblPorpertyValues').datagrid('deleteRow',SelectedRowIndex);
    });
    $("#btnAddProperty").click(function (){

        sessionStorage.setItem("PropertyBackTo", window.location.href);
        window.location.href = _sBaseAddress+ "/Property/ViewPropertysFromItem?id="+0;
        //$('#tblPorpertyValues').datagrid('deleteRow',SelectedRowIndex);
    });
    $("#btnRemove").click(function (){
        var oPropertyValue = $('#tblPorpertyValues').datagrid('getSelected');
        if(oPropertyValue==null || oPropertyValue.PropertyID<=0)
        {
            alert("Please select a item from list!");
            return false;
        }
        var SelectedRowIndex=$('#tblPorpertyValues').datagrid('getRowIndex',oPropertyValue);
        $('#tblPorpertyValues').datagrid('deleteRow',SelectedRowIndex);
    });

    function IsExit(nPropertyID)
    {
        var oPPIs = $('#tblPorpertyValues').datagrid('getRows');
        if(oPPIs.length>0)
        {
            for(var i = 0;i<oPPIs.length;i++)
            {
                if(parseInt(oPPIs[i].PropertyID)=== parseInt(nPropertyID))
                {
                    return true;
                }
            }
        }
        return false;
    }
    ///end PPI
    $('._ChangeIssueA').change(function () {

        LoadUnits();
    })
    ///end PPI
    $('._ChangeIssueProductType').change(function ()
    {
        _oProduct.AccountHeadID = 0;
        $("#txtAccountHeadName").val('');
        var txtAccountHeadName = document.getElementById("txtAccountHeadName");
        txtAccountHeadName.style.color = "black";
        txtAccountHeadName.style.fontWeight = "normal";
        if(parseInt($("#cboProductType").val())==1)
        {
            document.getElementById("txtAccountHeadName").disabled = true;
            $("#btnPickAccountHead").hide();
        }else  if(parseInt($("#cboProductType").val())>1)
        {
            document.getElementById("txtAccountHeadName").disabled = false;
            $("#btnPickAccountHead").show();
        }

    })
    function LoadUnits()
    {
        var nUnitType= $('#cboMeasurmentUniteType').val();
        $('#cboMeasurmentUnit').empty();
        var listItems= "<option value='"+0+"'>" +"--Select Unit--" + "</option>";
        if (_oMeasurementUnits !=null)
        {
            if(_oMeasurementUnits.length>0)
            {
                for (var i = 0; i < _oMeasurementUnits.length; i++)
                {
                    if(_oMeasurementUnits[i].UnitType==nUnitType)
                    {
                        listItems += "<option value='" + _oMeasurementUnits[i].MeasurementUnitID+"'>" + _oMeasurementUnits[i].UnitName+"</option>";
                    }
                }
            }
            $("#cboMeasurmentUnit").html(listItems);
            $('#cboMeasurmentUnit').val(_oProduct.MeasurementUnitID);
        }
    }
    function RefreshControl(oProduct)
    {
        $("#txtProductCategory").val(oProduct.ProductCategoryName);
        $("#txtProductGroup").val(oProduct.GroupName);
        $("#txtProductName").val(oProduct.ProductName);
        $("#txtProductCode").val(oProduct.ProductCode);
        if(_oClientOperationSetting.Value=="0" || _oClientOperationSetting.Value=="")//if is Not Menual
        {   
            document.getElementById("txtProductCode").disabled = true;
            $('#lblCodeCaption').html('Code');
        }else{
            document.getElementById("txtProductCode").disabled = false;
            $('#lblCodeCaption').html('Part No');
        }        
        $("#txtAddOne").val(oProduct.AddOne);
        $("#txtAddTwo").val(oProduct.AddTwo);
        $("#txtShortName").val(oProduct.ShortName);
        $("#txtProductDescription").val(oProduct.ProductDescription);
        $("#cboMeasurmentUniteType").val(oProduct.UnitTypeInInt);
        $("#txtBrand").val(oProduct.Brand);
        $("#cboProductType").val(oProduct.ProductTypeInInt);
        _oProduct.ProductID=oProduct.ProductID;
        _oProduct.ProductCategoryID=oProduct.ProductCategoryID;
        _oProduct.ProductBaseID=oProduct.ProductBaseID;
        _oProduct.AccountHeadID=oProduct.AccountHeadID;
        _oProduct.MeasurementUnitID=oProduct.MeasurementUnitID;
        _oProduct.ModelReferenceID= oProduct.ModelReferenceID;
        _oProduct.ProductTypeInInt = oProduct.ProductTypeInInt;
        _oProduct.ProductType = oProduct.ProductType;
        if(parseInt(oProduct.ModelReferenceID)>0)
        {
            $('#txtMoldName').val(oProduct.ModelReferenceName);
            $('#txtMoldName').addClass('fontColorOfPickItem');
        }
        document.getElementById("chkApplyProperty").checked=oProduct.ApplyProperty;
        document.getElementById("chkIsSerialNoApply").checked=oProduct.IsSerialNoApply;
        LoadUnits();
       
        debugger
        FullName_keyup();
    }


    $("#btnClose").click(function () {
        debugger;

        $("#winProduct").icsWindow('close');
    });
    function RefreshObject()
    {
        var oProduct= {
            ProductID : _oProduct.ProductID,
            ProductCategoryID : _oProduct.ProductCategoryID,
            ProductBaseID : _oProduct.ProductBaseID,
            ProductCode: $.trim($("#txtProductCode").val()),
            ProductName: $.trim($("#txtProductName").val()),
            AddOne:$.trim($("#txtAddOne").val()),
            AddTwo : $.trim($("#txtAddTwo").val()),
            ShortName : $.trim($("#txtShortName").val()),
            ProductDescription:$.trim($("#txtProductDescription").val()),
            UnitTypeInInt:parseInt($("#cboMeasurmentUniteType").val()),
            MeasurementUnitID : parseInt($("#cboMeasurmentUnit").val()),
            Brand :  $.trim($("#txtBrand").val()),
            ProductType:$("#cboProductType").val(),
            ProductTypeInInt:parseInt($("#cboProductType").val()),
            AccountHeadID:_oProduct.AccountHeadID,
            ApplyProperty:$('#chkApplyProperty').is(':checked'),
            IsSerialNoApply:$('#chkIsSerialNoApply').is(':checked'),
            ModelReferenceID:_oProduct.ModelReferenceID,
            PPIs: $('#chkApplyProperty').is(':checked')? $('#tblPorpertyValues').datagrid('getRows'):[]
        };
        return oProduct;
    }
    function ValidateInput()
    {
        if(_oProduct==null)
        {
            alert("Invalid Product Category!");
            return false;
        }
        if(document.getElementById('txtProductName').value ==null || document.getElementById('txtProductName').value =="")
        {
            alert("Please Type Name.");
            $('#txtProductName').focus();
            return false;
        }
        if(_oProductCategory.IsApplyCategory)
        {
            if(parseInt(_oProduct.ProductCategoryID)<=0)
            {
                alert("Select Product Category!");
                $("#txtProductCategory").focus();
                return false;
            }
        }
        if(_oProductCategory.IsApplyGroup)
        {
            if(parseInt(_oProduct.ProductBaseID)<=0)
            {
                alert("Select Product Group!");
                $("#txtProductGroup").focus();
                return false;
            }
        }



        if(_oProductCategory.IsApplyProductType)
        {
            if(parseInt($("#cboProductType").val())<=0)
            {
                alert("Select Product Type!");
                $("#cboProductType").focus();
                return false;
            }
            if(parseInt($("#cboProductType").val())>1)
            {
                if(_oProduct.AccountHeadID==0)
                {
                    alert("Please Pick Account Head!");
                    $("#txtAccountHeadName").focus();
                    return false;
                }
            }
        }
        var nUnitType = $('#cboMeasurmentUniteType').val();
        if(parseInt(nUnitType)<=0)
        {
            alert("Please Select Unit Type");
            $('#cboMeasurmentUniteType').focus();
            return false;
        }
        var cboMeasurmentUnit =document.getElementById("cboMeasurmentUnit");
        var nUnitID = cboMeasurmentUnit.options[cboMeasurmentUnit.selectedIndex].value;

        if( parseInt(nUnitID)==0)
        {
            alert("Please select Unit");
            $('#cboMeasurmentUnit').focus();
            return false;
        }
        if($('#chkApplyProperty').is(':checked')){
            var oPPIs=$('#tblPorpertyValues').datagrid('getRows');
            if(oPPIs==null||oPPIs.length<=0){
                alert('Please select Some Property Values!');
                $('#txtValueOfProperty').focus();
                return false;
            }
        }
        return true;
    }
    $('#btnSave').click(function(e)
    {
        debugger;
        if(!ValidateInput()) return false;
        var oProduct = RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: '@Url.Action("Save", "Product")',
            data:  JSON.stringify(oProduct),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oProduct = jQuery.parseJSON(data);
                if (oProduct.ErrorMessage == '' || oProduct.ErrorMessage == null)
                {


                    _oProduct=oProduct;
                    alert("Date Save Successfully");
                    if(_oIsAdd==true)
                    {
                        var oProducts= $('#tblProductBases').datagrid('getRows');
                        var nIndex=oProducts.length;
                        $('#tblProductBases').datagrid('appendRow', oProduct);
                        $('#tblProductBases').datagrid('selectRow', nIndex);
                    }
                    else
                    {
                        $('#tblProductBases').datagrid('updateRow', { index: _nSelectedRowIndex, row: oProduct });
                        $('#tblProductBases').datagrid('selectRow', _nSelectedRowIndex);
                    }
                    $("#winProduct").icsWindow('close');
                }
                else
                {
                    alert(oProduct.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(xhr+'~' +status+'~'+error);
            }
        });
    });

    $("#txtProductName").keyup(function (e){

        FullName_keyup()
    });
    $("#txtShortName").keyup(function (e){

        FullName_keyup()
    });
    $("#txtProductName").keyup(function (e){

        FullName_keyup()
    });
    $("#txtBrand").keyup(function (e){

        FullName_keyup()
    });
    function FullName_keyup()
    {
        var sFullName="";
        var sTemp="";
        sFullName=$('#txtProductCategory').val();
        sFullName=sFullName+" "+$('#txtProductGroup').val();
        sTemp=$("#txtBrand").val();
        if( sTemp.length>0)
        {
            sFullName=sFullName+" - "+sTemp;
        }
        sTemp=$("#txtProductName").val();
        if( sTemp.length>0)
        {
            sFullName=sFullName+" - "+sTemp;
        }
        sTemp=$("#txtShortName").val();
        if( sTemp.length>0)
        {
            sFullName=sFullName+" - "+sTemp;
        }

        document.getElementById("lblFullName").innerHTML = sFullName;
    }

    function GetsProperty(oProduct)
    {
        $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/Product/GetsProperty",
                data:  JSON.stringify(oProduct),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    debugger;
                    var oPPIs = jQuery.parseJSON(data);
                    if (oPPIs.length>0)
                    {
                        DynamicRefreshList(oPPIs, 'tblPorpertyValues');
                        _oProductBases.PPIs=oPPIs;
                    }
                    else
                    {
                        DynamicRefreshList([], 'tblPorpertyValues');
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
    }


    $('#btnUnitConversion').click(function(e){
        debugger;
        var oProductBase= $('#tblProductBases').datagrid('getSelected');
        if(oProductBase==null )
        {
            alert("Please select a item from List!");
            return;
        }
        if(parseInt(oProductBase.ProductBaseID)<=0)
        {
            if(parseInt(oProductBase.ProductID)<=0)
            {
                alert("Please select a Product from List!");
                return;
            }
            var oProduct= $('#tblProductBases').datagrid('getSelected');
            if(oProduct==null || oProduct.ProductID<=0)
            {
                alert("Please Select a item from list.");
                return;
            }

            $.ajax({
                type: "POST",
                dataType: "json",
                url: sessionStorage.getItem("BaseAddress")+  "/MeasurementUnit/GetsExistingConversion",
                traditional: true,
                data: JSON.stringify(oProduct),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oProduct = jQuery.parseJSON(data);
                    if(oProduct!=null)
                    {
                        if (parseInt(oProduct.ProductID)>0){
                            $("#winUnitConversion").icsWindow('open', "Unit Conversion for : "+ oProduct.ProductName + ' ['+ oProduct.MUnitName+']');
                            $("#cboFromUnits").icsLoadCombo({ List: oProduct.MeasurementUnits, OptionValue: "MeasurementUnitID", DisplayText: "UnitName" });
                            $("#winUnitConversion").data("ProductID", oProduct.ProductID);
                            $("#winUnitConversion").data("MeasurementUnitID", oProduct.MeasurementUnitID);
                            $('#txtUnitName').val(oProduct.MUnitName);
                            var data = { "total": "" + oProduct.UnitConversions.length + "", "rows": oProduct.UnitConversions };
                            $('#tblConvertedList').datagrid('loadData', data);
                        }
                        else {
                            alert(oProduct.ErrorMessage);
                        }
                    }
                    else
                    {
                        alert("Invalid Product!");
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    });

    $('#btnUCONClose').click(function(e){
        $("#winUnitConversion").icsWindow('close');
    });

    function ValidateComversion()
    {
        var nProductID = parseInt($("#winUnitConversion").data("ProductID"));
        if (nProductID <= 0) {
            alert("Invalid Product!");
            return false;
        }
        var nMeasurementUnitID = parseInt($("#winUnitConversion").data("MeasurementUnitID"));
        if (nMeasurementUnitID <= 0) {
            alert("Invalid Product Unit!");
            return false;
        }
        if ($('#cboFromUnits').val() === null ||  parseInt($('#cboFromUnits').val()) <=0) {
            alert("Please select Convert From Unit!");
            $('#cboFromUnits').focus();
            return false;
        }
        var nConvertedValue =parseFloat(icsRemoveComma($('#txtConvertedValue').val()));
        if (nConvertedValue <= 0) {
            alert("Please enter Converted Value!");
            $('#txtConvertedValue').focus();
            return false;
        }

        var oUnitConversions = $('#tblConvertedList').datagrid('getRows');
        var nConvertFromUnitID=parseInt($("#cboFromUnits").val());
        for(i=0;i<oUnitConversions.length;++i)
        {
            if(parseInt(oUnitConversions[i].MeasurementUnitID)== parseInt(nConvertFromUnitID))
            {
                alert('Your selected item already exists!!!')
                return false;
            }
        }
        return true;
    }

    function ConversionRefreshObject()
    {
        var oUnitConversion = {
            UnitConversionID : 0,
            MeasurementUnitID : parseInt($('#cboFromUnits').val()),
            MeasureUnitValue : 1,
            ConvertedUnitID : parseInt($("#winUnitConversion").data("MeasurementUnitID")),
            ConvertedUnitValue : parseFloat(icsRemoveComma($('#txtConvertedValue').val())),
            ProductID : parseInt($("#winUnitConversion").data("ProductID"))
        };
        return oUnitConversion;
    }

    $('#btnUCONAdd').click(function(e){
        if(!ValidateComversion()) return;
        var oUnitConversion = ConversionRefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress")+  "/MeasurementUnit/SaveUnitConversion",
            data: JSON.stringify(oUnitConversion),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oUnitConversion = jQuery.parseJSON(data);
                if (oUnitConversion.ErrorMessage == null || oUnitConversion.ErrorMessage == "")
                {
                    alert("Data Saved sucessfully");
                    $('#tblConvertedList').datagrid('appendRow',oUnitConversion);
                    $('#txtConvertedValue').val('0.0');
                    $("#cboFromUnits").val(0);
                }
                else
                {
                    alert(oUnitConversion.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });

    $('#btnUCONDelete').click(function(e){
        var oUnitConversion = $('#tblConvertedList').datagrid('getSelected');
        if(oUnitConversion==null || oUnitConversion.MeasurementUnitID<=0 || oUnitConversion.ProductID<=0 )
        {
            alert("Please select Item from List");
            return;
        }

        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblConvertedList').datagrid('getRowIndex',oUnitConversion);
        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem("BaseAddress")+  "/MeasurementUnit/DeleteUnitConversion",
            data: JSON.stringify(oUnitConversion),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                sFeedBackMease = jQuery.parseJSON(data);
                if (sFeedBackMease == "Deleted")
                {
                    alert("Delete sucessfully");
                    $('#tblConvertedList').datagrid('deleteRow',SelectedRowIndex);
                }
                else
                {
                    alert(sFeedBackMease);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });


    </script>
