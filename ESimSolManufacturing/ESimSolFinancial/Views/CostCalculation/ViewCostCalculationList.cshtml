<html>
@{
    ViewBag.Title = "Cost Calculation";
}
<body>
    @model IEnumerable<ESimSol.BusinessObjects.CostCalculation>
<div class="menuMainCollectionTable" ng-app="CostCalculationApp">
    <div ng-controller="CostCalculationController" title="Cost Calculation">
        <div style="margin-bottom:2px; display:block" class="form-inline ui-grid-top-panel regionInvoice">
            <input type="text" class="form-control" ng-model="ModelNo" ng-keydown="searchByModelNo($event)" placeholder="Type Model No & Press Enter">
            <button type="button" ng-show="btnAdd" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Add()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>
            <button type="button" ng-show="btnEdit" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Edit()"><span class="glyphicon glyphicon-edit" aria-hidden="true"> Edit</span></button>
            <button type="button" ng-show="btnView" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="View()"><span class="glyphicon glyphicon-th" aria-hidden="true"> View</span></button>
            @*<button type="button" ng-show="btnCopy" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Copy()"><span class="glyphicon glyphicon-copy" aria-hidden="true"> Copy</span></button>*@
            <button type="button" ng-show="btnDelete" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="Delete()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Delete</span></button>
            @*<button type="button" ng-show="btnImage" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="UpImage()"><span class="glyphicon glyphicon-save-file" aria-hidden="true"> Up Image</span></button>
            <button type="button" ng-show="btnPrintList" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PrintList()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Print List</span></button>
            <button type="button" ng-show="btnPriview" class="btn btn-default btn-sm" aria-label="Left Align" ng-click="PrintPreview()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Priview</span></button>
            <button type="button" id="btnPriviewXL" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="PrintPreviewXL()"><span class="glyphicon glyphicon-print" aria-hidden="true"> XL</span></button>*@
        </div>
        <div ui-grid="gridOptions" ui-grid-selection style=" width: 100%; height: 485px;"></div>
    </div>
</div>
<style type="text/css">
    .regionInvoice .form-control {
        height: 26px;
        width: 15%;
        padding: 0px 6px;
        font-size: 12px;
    }

  
</style>

 <script type="text/javascript">
    var oCostCalculationList =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    debugger;
    
    var CInvoiceapp= angular.module('CostCalculationApp', ['ui.grid','ui.grid.selection', 'ms.service']);
    CInvoiceapp.controller('CostCalculationController',  function ($scope,$http,$log,uiGridConstants,userSession) {
        oCostCalculationList= (userSession.getData('CostCalculationList').length>0)? userSession.getData('CostCalculationList'):oCostCalculationList;
        debugger;
        $scope.gridOptions = {
            enableFullRowSelection: true,
            enableSelectAll: true,
            multiSelect: false,
            enableRowSelection: true,
            columnDefs: [
                { field: 'FileNo', name:'File No', width:'7%' },
                { field: 'ModelNo', name:'ModelNo', width:'15%' },
                { field: 'CategoryName', name:'Category', width:'15%' },
                { field: 'DateOfIssueInString', name:'Issue Date', width:'12%' },
                { field: 'DateOfExpireInString', name:'Expire Date', width:'12%' },
                { field: 'ExShowroomPriceBC', name:'Ex Showroom Price', width:'15%' },
                { field: 'OfferPriceBC', name:'Offer Price', width:'15%' },
                { field: 'ApprovedByName', name:'Approve By', width:'10%' },
                { field: 'Remarks', name: 'Remarks', width: '10%' }
            ],
            data: oCostCalculationList,
            onRegisterApi : function(gridApi)
            {
                debugger;
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                if(oCostCalculationList.length>0 && userSession.getRowIndex()>=0)
                {
                    $scope.gridApi.grid.modifyRows(oCostCalculationList);
                    $scope.gridApi.selection.selectRow(oCostCalculationList[userSession.getRowIndex()]);
                    $scope.RowSelect(oCostCalculationList[userSession.getRowIndex()]);
                }
                $scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                    $scope.RowSelect(row.entity ); });
                userSession.clear();
            }
        };
        
        $scope.searchByModelNo = function(e)
        {
            debugger;
            var ModelNo = $scope.ModelNo;
            var oCostCalculations = oCostCalculationList;
            var sTempName="";
            var oSearchedList = [];  
            var oCurrentList = $scope.gridOptions.data; 
            if (e.which == 8)
            {
                oCurrentList = oCostCalculations;
            }     
            for(i=0;i<oCurrentList.length;++i)
            {
                sTempName=oCurrentList[i].ModelNo;        
                n=sTempName.toUpperCase().indexOf(ModelNo.toUpperCase())
                if(n!=-1)
                {
                    oSearchedList.push(oCurrentList[i]); 
                }       
            }
            $scope.gridOptions= {data:oSearchedList};
        }
        $scope.Add  = function ()
        {
            debugger;
            var tsv=((new Date()).getTime())/1000;
            sessionStorage.setItem("CostCalculationList", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("CostCalculationHeader", "Add Cost Calculation");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href =sessionStorage.getItem('BaseAddress')+"/CostCalculation/ViewCostCalculationSetup?id=0&tsv="+tsv;
        }
        $scope.Edit =  function ()
        {
            debugger;
            var oCostCalculation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oCostCalculation==null || oCostCalculation.CostCalculationID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.CostCalculationID == oCostCalculation.CostCalculationID)
                {
                    var tsv=((new Date()).getTime())/1000;
                    sessionStorage.setItem("CostCalculationList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("CostCalculationHeader", "Edit Cost Calculation");
                    sessionStorage.setItem("BackLink", window.location.href);
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/CostCalculation/ViewCostCalculationSetup?id="+oCostCalculation.CostCalculationID+"&tsv="+tsv;
                }
            }, $scope.gridOptions.data);
        }
        $scope.View =  function ()
        {
            //debugger;
            var oCostCalculation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oCostCalculation==null || oCostCalculation.CostCalculationID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.gridOptions.data, function (value, index) {
                if (value.CostCalculationID == oCostCalculation.CostCalculationID)
                {
                    sessionStorage.setItem("CostCalculationList", JSON.stringify($scope.gridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("CostCalculationHeader", "View Cost Calculation");
                    sessionStorage.setItem("BackLink", window.location.href);
                    var sUrl=sessionStorage.getItem('BaseAddress')+"/CostCalculation/ViewCostCalculation?id="+oCostCalculation.CostCalculationID;
                    if(PermissionChecker('Add','CostCalculation',oAuthorizationRolesMapping))
                    {
                        var tsv=((new Date()).getTime())/1000;
                        sUrl=sessionStorage.getItem('BaseAddress')+"/CostCalculation/ViewCostCalculationSetup?id="+oCostCalculation.CostCalculationID+"&tsv="+tsv;
                    }
                    window.location.href =sUrl;
                }
            }, $scope.gridOptions.data);
        }
       
        $scope.Delete= function ()
        {
            debugger;
            var oCostCalculation = $scope.gridApi.selection.getSelectedRows()[0];
            if(oCostCalculation==null || oCostCalculation.CostCalculationID<=0)
            {
                alert("Please Select an item from list");
                return;
            }

            if (!confirm("Confirm to Delete?")) return ;
            $http.post(sessionStorage.getItem('BaseAddress')+'/CostCalculation/Delete', JSON.stringify(oCostCalculation)).then(
                            function (response) {
                                if (jQuery.parseJSON(response.data) == 'Deleted') {
                                    angular.forEach($scope.gridOptions.data, function (value, index)
                                    {
                                        if (value.CostCalculationID == oCostCalculation.CostCalculationID)
                                        {
                                            alert("Successfully Deleted.");
                                            $scope.gridOptions.data.splice(index, 1);
                                        }
                                    }, $scope.gridOptions.data);
                                }
                                else {
                                    alert(jQuery.parseJSON(response.data));
                                }
                            },
                            function (response) { alert(jQuery.parseJSON(response.data)); }
                        );

        };
        
        $scope.close = function()
        {
            window.location.href =sessionStorage.getItem("BackLink");
        }

        //button hide
        $scope.btnAdd = $scope.btnEdit =  $scope.btnCopy = $scope.btnDetails = $scope.btnDelete = $scope.btnImage=  $scope.btnPrintList= $scope.btnPriview = false;
        //button show
        if(PermissionChecker('Add','CostCalculation',oAuthorizationRolesMapping)){$scope.btnAdd =$scope.btnImage = true; }
        if(PermissionChecker('Edit','CostCalculation',oAuthorizationRolesMapping)){$scope.btnEdit = true;}
        if(PermissionChecker('View','CostCalculation',oAuthorizationRolesMapping)){$scope.btnView = true;}
        //if(PermissionChecker('Copy','CostCalculation',oAuthorizationRolesMapping)){$scope.btnCopy= true;}
        if(PermissionChecker('Delete','CostCalculation',oAuthorizationRolesMapping)){$scope.btnDelete = true;}
        //if(PermissionChecker('Preview','CostCalculation',oAuthorizationRolesMapping)){$scope.btnPriview = true;}
        //if(PermissionChecker('Print','CostCalculation',oAuthorizationRolesMapping)){$scope.btnPrintList = true;}

    });





</script>
