@{
    ViewBag.Title = "VehicleEngine List";
}
@model IEnumerable<ESimSol.BusinessObjects.VehicleEngine>
    <script src="~/Views/VehicleEngine/VehicleEngine.js"></script>
    <script src="~/Views/VehicleEngine/AdvanceSearch.js"></script>
    <div class="menuMainCollectionTable" ng-app="VehicleEngineApp" style="height:100px;">
        <div ng-controller="VehicleEngineController">
            <div style="margin-bottom:2px; display:block" title="VehicleEngine List" class="ui-grid-top-panel">
                <input type="text" ng-model="txtSearchByName" ng-keyup="SearchByName($event)" placeholder="Search by EngineNo" style="width:190px" />
                <button type="button" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="AdvanceSearch()"><span class="glyphicon glyphicon-search" aria-hidden="true"> Search</span></button>
                <button type="button" id="btnAdd" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="Add()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>
                <button type="button" id="btnEdit" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="Edit()"><span class="glyphicon glyphicon-edit" aria-hidden="true"> Edit</span></button>
                <button type="button" id="btnDetails" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="View()"><span class="glyphicon glyphicon-th" aria-hidden="true"> View</span></button>
                <button type="button" id="btnDelete" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="Delete()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Delete</span></button>
                <button type="button" id="btnPrintList" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="PrintList()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Print List</span></button>
                <button type="button" id="btnExportToExcel" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="ExportToExcel()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Export to Excel</span></button>
            </div>
            <div ui-grid="gridOptions" ui-grid-selection  class="grid-angular" style="width:99%"></div>
        </div>
    </div>
     <script src="~/Views/VehicleEngine/VehicleEngine.js"></script>
<style type="text/css">
    .grid-angular {
        width: 100%;
        height:520px;
    }
</style>
<script type="text/javascript">
    debugger;
    var oVehicleEngines =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    var oFuelTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FuelTypes));
    var oSessions = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Sessions));

    $('#btnExportToExcel,#btnPrintList').hide();
    debugger;
    var CCapp= angular.module('VehicleEngineApp', ['ngAnimate','ui.bootstrap','ui.grid','ui.grid.selection','ms.service','engine.service','advanceSearch.service']);
    CCapp.controller('VehicleEngineController',function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession,engineservice,advanceSearchservice)
    {
        oVehicleEngines= (userSession.getData('VehicleEngines').length>0)? userSession.getData('VehicleEngines'):oVehicleEngines;
        debugger;
        $scope.gridOptions= {
            multiSelect: false,
            enableFullRowSelection: true,
            columnDefs: [
                 {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
              { field: 'FileNo', name:'File No', width:'8%' },
              { field: 'EngineNo', name:'Engine No', width:'12%' },
              { field: 'ManufacturerName', name:'Manufacturer', width:'10%' },
              { field: 'FuelTypeInString', name:'FuelType', width:'8%' },
              { field: 'Cylinders', name:'Cylinder', width:'12%' },
              { field: 'CompressionRatio', name:'Compression Ratio', width:'10%' , enableSorting: false},
              { field: 'BMEP', name:'BMEP', width:'10%' },
              { field: 'EngineCoolant', name:'Engine Coolant', width:'12%' },
              { field: 'CatalyticConverter', name:'Catalytic Converter', width:'15%' },
              { field: 'YearOfManufacture', name:'Year Of Manufacture', width:'12%' }
              
            ],
            data: oVehicleEngines,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;

                $scope.gridApi.selection.clearSelectedRows();
                userSession.clear();
            }
        };
        $scope.SearchByName = function(e)
        {
            debugger;
            var txtSearchByName = $scope.txtSearchByName;
            var rows = $scope.gridOptions.data;
            var sTempName="";
            var oSearchedList = [];
            var oCurrentList = $scope.gridOptions.data;
            if (e.which == 8)
            {
                oCurrentList = oVehicleEngines;
            }
            for(i=0;i<oCurrentList.length;++i)
            {
                sTempName=oCurrentList[i].EngineNo;
                n=sTempName.toUpperCase().indexOf(txtSearchByName.toUpperCase())
                if(n!=-1)
                {
                    oSearchedList.push(oCurrentList[i]);
                }
            }
            $scope.gridOptions= {data: oSearchedList};
        }
        
        $scope.FuelTypes= oFuelTypes;
        $scope.Sessions= oSessions;
        $scope.OpenViewVehicleEngine= function(nVehicleEngineID, index)
        {
            debugger;
            var result=null;
            var oVehicleEngine={
                VehicleEngineID: nVehicleEngineID
            };

            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress + '/VehicleEngine/GetByID', $.param(oVehicleEngine), config).then(
                                function (response) {
                                    debugger;
                                    result=jQuery.parseJSON(response.data);

                                    var modalObj={
                                        modalcontroller:'CCategoryapp',
                                        appcontroller:'VehicleEngineController',
                                        VehicleEngine: result,
                                        FuelTypes:  $scope.FuelTypes,
                                        Sessions: $scope.Sessions
                                    }
                                    var modalInstance=engineservice.Instance(modalObj);
                                    modalInstance.result.then(function(result)
                                    {
                                        $scope.gridApi.selection.clearSelectedRows();
                                        if(result.VehicleEngineID>0){
                                            if(index>=0)
                                                $scope.gridOptions.data[index]=result;
                                            else
                                                $scope.gridOptions.data.push(result);

                                            $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                            $scope.gridApi.selection.selectRow(result);
                                        }
                                        userSession.clear();

                                    }, function () {
                                        $log.info('Modal dismissed at: ' + new Date());
                                    });
                                }
                            );
        }
        $scope.Add=function()
        {
            sessionStorage.setItem("VehicleEngines", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", -1);
            sessionStorage.setItem("VehicleEngineHeader", "Add Vehicle Engine");
            debugger;
            $scope.OpenViewVehicleEngine(0,-1);
        }

        $scope.Edit= function ()
        {
            var oVehicleEngine=$scope.gridApi.selection.getSelectedRows().first();
            if(oVehicleEngine==null || oVehicleEngine.VehicleEngineID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oVehicleEngine);
            $scope.OpenViewVehicleEngine(oVehicleEngine.VehicleEngineID,SelectedRowIndex);
        }

        $scope.View= function ()
        {
            //debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oVehicleEngine= data[0];//get selected index

            if(oVehicleEngine==null || oVehicleEngine.VehicleEngineID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oVehicleEngine);
            sessionStorage.setItem("VehicleEngines", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("VehicleEngineHeader", "View Vehicle Engine");

            $scope.OpenViewVehicleEngine(oVehicleEngine.VehicleEngineID);
        }
        $scope.Delete = function()
        {
            var oVehicleEngine=$scope.gridApi.selection.getSelectedRows().first();
            if(oVehicleEngine==null || oVehicleEngine.VehicleEngineID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if (!confirm("Confirm to Delete?")) return ;
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oVehicleEngine);

            if (oVehicleEngine.VehicleEngineID > 0)
            {
                $.ajax
                ({
                    type: "GET",
                    dataType: "json",
                    url : _sBaseAddress+ "/VehicleEngine/Delete",
                    data: { id: oVehicleEngine.VehicleEngineID},
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        debugger;
                        feedbackmessage = jQuery.parseJSON(data);
                        if (feedbackmessage == "Deleted")
                        {
                            alert("Delete sucessfully");
                            $scope.gridOptions.data.splice(SelectedRowIndex,1);
                            $scope.gridApi.core.refresh();
                        }
                        else
                        {
                            alert(feedbackmessage);
                        }
                    },
                    error: function (xhr, status, error)
                    {
                        alert(error);
                    }

                });
            }
        }

        $scope.AdvanceSearch = function ()
        {
            debugger;

            var modalObj={
                modalcontroller:'ModalAdvanceSearchCtrl',
                appcontroller:'VehicleEngineController',
                CompareOperators:$scope.CompareOperators,
                BussinessSessions:$scope.BussinessSessions
            }
            var modalInstance=advanceSearchservice.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                debugger;
                $scope.gridOptions.data = result;
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };

        $scope.PrintList = function()
        {
            var oVehicleEngines= $scope.gridOptions.data;
            var ids ="";
            if(oVehicleEngines.length >0)
            {
                for(var i =0;i<oVehicleEngines.length;i++)
                {
                    ids =ids+oVehicleEngines[i].VehicleEngineID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else
            {
                alert("Data not found ");
                return;
            }
            window.open(_sBaseAddress + '/VehicleEngine/PrintList?sIDs='+ids);
        }
        $scope.ExportToExcel = function()
        {
            var oVehicleEngines=  $scope.gridOptions.data;
            var ids ="";
            if(oVehicleEngines.length >0)
            {
                for(var i =0;i<oVehicleEngines.length;i++)
                {
                    ids =ids+oVehicleEngines[i].VehicleEngineID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else
            {
                alert("Data not found ");
                return;
            }
            window.open(_sBaseAddress + '/VehicleEngine/VehicleEngineExportToExcel?sIDs='+ids);
        }

        //button hide unhide
        $('#btnAdd,#btnEdit,#btnView,#btnDelete,#btnPrintList').hide();
        if(PermissionChecker('Add','VehicleEngine',oAuthorizationRolesMapping)){$("#btnAdd").show();}
        if(PermissionChecker('Edit','VehicleEngine',oAuthorizationRolesMapping)){$("#btnEdit").show();}
        if(PermissionChecker('View','VehicleEngine',oAuthorizationRolesMapping)){$("#btnView").show();}
        if(PermissionChecker('Delete','VehicleEngine',oAuthorizationRolesMapping)){$("#btnDelete").show();}
        //if(PermissionChecker('PrintList','VehicleEngine',oAuthorizationRolesMapping)){$("#btnPrintList").show();}
    });


</script>