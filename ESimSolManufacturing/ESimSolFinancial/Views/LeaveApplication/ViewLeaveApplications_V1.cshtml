@model IEnumerable<ESimSol.BusinessObjects.LeaveApplication>
@{
    ViewBag.Title = "Leave Application";
}

<div class="menuMainCollectionTable">
    <table id="tblLeaveApplication" title="Leave Application List" class="easyui-datagrid" style="width:100%; height:100%" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
        <thead>
            <tr>
                <th field="EmployeeCode" width="80" align="left">Code</th>
                <th field="EmployeeName" width="150" align="left">Name</th>
                <th field="LeaveHeadName" width="75" align="left">Leave</th>                
                <th field="LeaveTypeInString" width="67" align="left">Leave Type</th>                
                <th field="StartDateTimeInString" width="80" align="left">Start</th>
                <th field="EndDateTimeInString" width="80" align="left">End</th>
                <th field="LeaveDurationInST" width="80" align="left">Duration</th>
                <th field="StatusOfLeave" width="80" align="left">Status</th>
                <th field="ResponsiblePersonName" width="120" align="center">Responsible</th>
                <th field="DBUserName" width="120" align="center">AppliedBy</th>
                <th field="Recommend" width="120" align="center">Recommend</th>
                <th field="ApproveByName" width="120" align="center">Approved By</th>
                <th field="HRApproveBYName" width="120" align="center">HR Approved By</th>
                <th field="BusinessUnitName" width="100" align="center">BusinessUnit</th>
                <th field="LocationName" width="100" align="center">Location</th>
                <th field="DepartmentName" width="100" align="center">Department</th>
                <th field="DesignationName" width="100" align="center">Designation</th>
                <th field="EmployeeWorkingStatus" width="100" align="center">W. Status</th>
            </tr>
        </thead>
    </table>

    <div id="toolbar" style="height:auto;">
        <input id="chkIsDate" type="checkbox" />
        <input id="dtStartDate_Search" type="text" style="width: 100px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
        <input id="dtEndDate_Search" type="text" style="width: 100px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
        @*<input id="txtnameorcode" style="width:175px;" type="text" placeholder="Type name or code then enter" />*@
        <input id="txtEmployee_Search" type="text" style="width: 150px;" placeholder="Type code or name then enter" />
        <input id="txtCEmployee" type="button" value="C" />
        @*<input id="chkReportingPerson" type="checkbox" /> Reporting Person*@
        <select id="cboPersons">
            <option value="0">--Select One--</option>
            <option value="1" >Reporting Person</option>
            <option value="2">Recommended Person</option>
            <option value="3">Approval Person</option>
        </select>
        <a id="btnEmployeeOrDate_Search" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="Search_By_Code_Or_Date()"></a>
        <a id="btnAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" >Adv. Search</a>
        <a id="btnClear" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove all from the list</a>
        <br />
        <a id="btnNew" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" >New</a>
        <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true" >Edit</a>
        <a id="btnView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
        <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
        @*<a id="btnShowLeaveLedger" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">Leave Ledger</a>*@
        <a id="btnRecommendation" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Recommendation</a>
        <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Approve</a>
        <a id="btnCancel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Cancel</a>
        <!--<a id="btnLeaveApplicationForm_MAMIYA" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Leave Application </a>-->
        <a id="btnLeaveAdjustment" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Adjustment</a>
        <a id="btnLeaveLedger" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="LeaveLedger('')">Ledger</a>
        <select id="cboPrintType" style="width:150px;"></select>
        <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true"></a>
        <a id="btnPrintExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true"></a>
        <input id="chkBUWiseDetail" type="checkbox" /> BU Wise Detail
     </div>

    <div id="winLeaveApplication" class="easyui-window clsLA" title="Leave Application" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <table class="tbl">
            
            
            <tr>
                <td class="tdApp">
                    <div class="divLabel">
                        <label>Employee Name:</label>
                    </div>
                    <div class="divInput">
                        <input id="txtEmployee" class="txtfield-picker resetfield" placeholder="Type and press enter or pick employee" type="text" />
                        <input id="btnEmployeePicker" class="pick-btn-LeaveApp" type="button" value="P" />
                        <input id="btnResetEmployeePicker" class="pick-btn-LeaveApp" type="button" value="R" />
                    </div>
                </td>
            </tr>
          
            <tr>
                <td class="tdApp">
                    <div class="divLabel">
                        <label>Start From:</label>
                    </div>
                    <div class="">
                        <div style="width:95%; text-align:left;">
                            <div>
                                <input type="text" style="width:7%;" id="txtDayPartFrom" />
                                <input type="text" style="width:8%;" id="txtMonthPartFrom" />
                                <input type="text" style="width:10%;" id="txtYearPartFrom" />
                                <label style="width:2%;"> To </label>
                                <input type="text" style="width:7%;" id="txtDayPartTo" />
                                <input type="text" style="width:8%;" id="txtMonthPartTo" />
                                <input type="text" style="width:10%;" id="txtYearPartTo" />
                                <input type="button" id="btnGetAttendance" value="Show Att." onclick="GetAttendance()" />
                            </div> 
                        </div>                       
                    </div>
                </td>
            </tr>


            @*<tr>
                    <td class="tdApp">
                        <div class="divLabel">
                            <label>Application Type:</label>
                        </div>
                        <div class="divInput-rd">
                            <span><input type="radio" id="rdbtnLeaveOfApplication" class="rd-styler" name="ApplicationType" /> <label>Leave of Application</label> </span>
                            <span><input type="radio" id="rdbtnLeaveOfAbsence" class="rd-styler" name="ApplicationType" /> <label>Leave of Absence</label></span>
                        </div>
                    </td>
                </tr>*@
            <tr>
                <td class="tdApp">
                    <div class="divLabel">
                        <label>Leave:</label>
                    </div>
                    <div class="divInput">
                        @*<div style="float:left; width:69%;">
                                <div style="float:left; width:73%; text-align:left;" >
                                    <select id="cboLeaveLedger" style="width:100%" ></select>
                                </div>
                                <div style="float:left; width:25%; padding-left:2%; text-align:right;">
                                    <input type="text" style="width:95%;" class="number" />
                                </div>
                            </div>*@
                        <div style="float:left; width:49%; text-align:left;">
                            <select id="cboLeaveLedger" style="width:100%"></select>
                        </div>
                        <div style="float:left; width:18.8%; padding-left:1.2%; text-align:right;">
                            @*<input id="btnELProcess" type="button" value="EL Process" style="width:100%;" />*@
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="tdApp">
                    <div class="divLabel">
                        <label>Leave Type:</label>
                    </div>
                    <div class="divInput">
                        @*<select id="cboLeaveType"></select>*@
                        <div style="float:left; width:69%;">
                            <div style="float:left; width:71%; text-align:left;">
                                <select id="cboLeaveType" style="width:100%"></select>
                            </div>
                            <div style="float:left; width:27%; padding-left:2%; text-align:right;" id="divSpinner">
                                @*<input id="txtDurationInHour" type="text" style="width:75%;" class="number" disabled placeholder="Duration In Hour" />
                                    (hr)*@
                                <input id="tptimeSpinner" class="easyui-timespinner" style="width: 75px; height:20px; font-size: 11px;" required="required"
                                       data-options="showSeconds:false" />
                            </div>
                            <div id="divForDay">
                                <label id="lblForDay"> Day/s</label>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="tdApp">
                    <div class="divLabel">
                        <label>Expense Location:</label>
                    </div>
                    <div class="divInput">
                        <input id="txtExpenseLocation" class="resetfield" type="text" value="N/A" placeholder="Leave expense location." />
                    </div>
                </td>
            </tr>
            <tr>
                <td class="tdApp">
                    <div class="divLabel">
                        <label>Reason:</label>
                    </div>
                    <div class="divInput">
                        <input id="txtReason" class="resetfield" type="text" placeholder="Reason for leave." value="N/A" />
                    </div>
                </td>
            </tr>
            <tr>
                <td class="tdApp">
                    <div class="divLabel">
                        <label>Responsible Person:</label>
                    </div>
                    <div class="divInput">
                        <input id="txtResponsiblePerson" class="resetfield" placeholder="Type and press enter or pick employee" type="text" />
                    </div>
                </td>
            </tr>
            <tr>
                <td class="tdApp">
                    <div class="divLabel">
                        <label>Type:</label>
                    </div>
                    <div class="divInput-rd">
                        <span><input type="radio" id="rdbtnPaid" class="rd-styler" name="paid-unpaid" disabled="disabled" /> <label>Paid</label> </span>
                        <span><input type="radio" id="rdbtnUnPaid" class="rd-styler" name="paid-unpaid" disabled="disabled" /> <label>Un-Paid</label></span>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="tdApp tdRecommendationNote">
                    <div class="divLabel">
                        <label>Recommendation Note:</label>
                    </div>
                    <div class="divInput">
                        <input id="txtRecommendationNote" class="resetfield" type="text" placeholder="Recommendation Note." />
                    </div>
                </td>
            </tr>
            <tr>
                <td class="tdApp tdRecommendation">
                    <div class="divLabel clsReportingPerson">
                        <label>Request To Approval:</label>
                    </div>
                    <div class="divInput clsReportingPerson">
                        <select id="cboRequestToApproval"></select>
                        <span style="float:left; margin-left:5px;margin-right:5px; "></span>
                        <input id="txtRequestToApproval" class="resetfield" type="text" placeholder="Request To Approval Person." />
                    </div>
                </td>
            </tr>
            <tr>
                <td class="tdApp tdApproval">
                    <div class="divLabel">
                        <label>Approval Note:</label>
                    </div>
                    <div class="divInput">
                        <input id="txtApprovalNote" class="resetfield" type="text" placeholder="Approval Note." />
                    </div>
                </td>
            </tr>
            <tr>
                <td class="tdApp tdCancel">
                    <div class="divLabel">
                        <label>Cancel Note:</label>
                    </div>
                    <div class="divInput">
                        <input id="txtCancelNote" class="resetfield" type="text" placeholder="Cancel Note." />
                    </div>
                </td>
            </tr>
        </table>

        <fieldset class="actionfieldsetstyle">
            <legend>Actions : </legend>
            <table class="tbl">
                <tr>
                    <td class="tdApp lblAlign">
                        <label id="lblApplicationStatus" class="resetlbl"></label>
                        <a id="btnLeaveLedger_Single" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="LeaveLedger('Single')">Ledger</a>
                    </td>
                    <td class="tdApp">
                        <a id="btnCancelLeaveApplication" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Cancel</a>
                        <a id="btnApproveLeaveApplication" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Approve</a>
                        <a id="btnRecommendLeaveApplication" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Recommend</a>
                        <a id="btnLeaveAdjustmentSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Adjustment</a>

                        <a id="btnSaveLeaveApplication" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnCloseLeaveApplication" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>

    <div id="winLeaveApplicationAdvSearch" class="easyui-window winstyle" title="Search" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
         <div style="width: 100%; font-family: Tahoma;">
             <div style="width: 47%; float: left;">
                 <table class="tbl-AdvSearch">
                     <tr>
                         <td class="td-AdvSearch-Level">
                             Date Range :
                         </td>
                         <td class="td-AdvSearch-Input">
                             @*<input type="checkbox" id="chkIsDateSearch" class="chkResetLAPicker" />*@
                             <span>
                                 <input id="dtStartDateLAPicker" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                             </span>
                             <span>To</span>
                             <input id="dtEndDateLAPicker" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                         </td>
                     </tr>
                     <tr>
                         <td class="td-AdvSearch-Level">
                             BusinessUnit :
                         </td>
                         <td class="td-AdvSearch-Input">
                             <input id="txtBusinessUnit_Collection" class="txtfield-picker txtResetLAPicker"  placeholder="Pick Business Unit" type="text" />
                             <input id="btnBusinessUnitPicker_Collection" class="pick-btn" type="button" value="P" />
                             <input id="btnResetBusinessUnitPicker_Collection" class="pick-btn" type="button" value="C" />
                         </td>
                     </tr>
                     <tr>
                         <td class="td-AdvSearch-Level">
                             Location :
                         </td>
                         <td class="td-AdvSearch-Input">
                             <input id="txtLocation_Colection" class="txtfield-picker txtResetLAPicker"  placeholder="Pick Location" type="text" />
                             <input id="btnLocationPicker_Colection" class="pick-btn" type="button" value="P" />
                             <input id="btnResetLocationPicker_Colection" class="pick-btn" type="button" value="C" />
                         </td>
                     </tr>
                     <tr>
                         <td class="td-AdvSearch-Level">
                             Department :
                         </td>
                         <td class="td-AdvSearch-Input">
                             <input id="txtDepartment_Collection" class="txtfield-picker txtResetLAPicker" placeholder="Pick Department" type="text" />
                             <input id="btnDepartmentPicker_Collection" class="pick-btn" type="button" value="P" />
                             <input id="btnResetDepartmentPicker_Collection" class="pick-btn" type="button" value="C" />
                         </td>
                     </tr>
                     <tr>
                         <td class="td-AdvSearch-Level">
                             Designation :
                         </td>
                         <td class="td-AdvSearch-Input">
                             <input id="txtDesignation_Collection" class="txtfield-picker txtResetLAPicker" placeholder="Pick Designation" type="text" />
                             <input id="btnDesignationPicker_Collection" class="pick-btn" type="button" value="P" />
                             <input id="btnResetDesignationPicker_Collection" class="pick-btn" type="button" value="C" />
                         </td>
                     </tr>
                     <tr>
                         <td class="td-AdvSearch-Level">
                             Employee Name :
                         </td>
                         <td class="td-AdvSearch-Input">
                             <input id="txtEmployeeNameLAPicker" class="txtfield-picker txtResetLAPicker" placeholder="Pick Employee" type="text" />
                             <input id="btnEmployeeLAPicker" class="pick-btn" type="button" value="P" />
                             <input id="btnResetEmployeeLAPicker" class="pick-btn" type="button" value="R" />
                         </td>
                     </tr>
                     @*<tr>*@
                         @*<td class="td-AdvSearch-Level">
                             Dept./Section :
                         </td>*@
                         @*<td class="td-AdvSearch-Input">
                             <input id="txtDepartmentLAPicker" class="txtfield-picker txtResetLAPicker" type="text" disabled />
                             <input id="btnDepartmentPickerLAPicker" class="pick-btn" type="button" value="P" />
                             <input id="btnResetDepartmentPickerLAPicker" class="pick-btn" type="button" value="R" />
                         </td>*@
                     @*</tr>*@
                     <tr>
                         <td class="td-AdvSearch-Level">
                             Application Type :
                         </td>
                         <td class="td-AdvSearch-Input">
                             <select id="cboApplicationTypeLAPicker" class="selection-search cboResetLAPicker"></select>
                         </td>
                     </tr>
                     <tr>
                         <td class="td-AdvSearch-Level">
                             Leave :
                         </td>
                         <td class="td-AdvSearch-Input">
                             <select id="cboLeaveLAPicker" class="selection-search cboResetLAPicker"></select>
                         </td>
                     </tr>
                     <tr>
                         <td class="td-AdvSearch-Level">
                             Leave Type :
                         </td>
                         <td class="td-AdvSearch-Input">
                             <select id="cboLeaveTypeLAPicker" class="selection-search cboResetLAPicker"></select>
                         </td>
                     </tr>
                     <tr>
                         <td class="td-AdvSearch-Level">
                              Status :
                         </td>
                         <td class="td-AdvSearch-Input">
                             <select id="cboLeaveStatusLAPicker" class="selection-search cboResetLAPicker"></select>
                         </td>
                     </tr>
                     <tr>
                         <td class="td-AdvSearch-Level"></td>
                         <td class="td-AdvSearch-Input">
                             <input type="checkbox" id="chkIsPaidLAPicker" class="chkResetLAPicker" /> Paid
                             <input type="checkbox" id="chkIsUnPaidLAPicker" class="chkResetLAPicker" />UnPaid
                         </td>
                     </tr>
                     <tr>
                         <td class="td-AdvSearch-Level"></td>
                         <td class="td-AdvSearch-Input">
                             <input type="button" value="Reset" id="btnResertLAPicker" style="width: 70px" />
                             <input type="button" value="Search" id="btnSearchLAPicker" style="width: 70px" onclick="SearchLAPicker()" />
                             <a id="btnExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true" style="width: 70px">Excel</a>
                         </td>
                     </tr>
                 </table>
             </div>
             <div style="width: 52%; float: right;">
                 <table id="tblLeaveApplicationForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 425px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                     <thead>
                         <tr>
                             <th data-options="field:'Selected',checkbox:true"></th>
                             <th field="EmployeeName" width="150">Employee Name</th>
                             <th field="LeaveHeadName" width="80">Leave</th>
                             <th field="StartDateTimeInString" width="105px;" align="center">Start </th>
                             <th field="EndDateTimeInString" width="105px;" align="center"> End </th>
                             <th field="LeaveStatusInString" width="70px;"> Status </th>
                         </tr>
                     </thead>
                 </table>
                 <table style="width: 485px; font-size: 12px; font-weight: bold;">
                     <tr>
                         <td style="text-align: left">
                             <input id="chkRange_Search" type="checkbox" />Range
                             <label id="lblRange1_Search">
                                 <input id="txtFrom_Search" type="text" style="width:40px" />&nbsp; To &nbsp;
                             </label>
                             <label id="lblRange2_Search">
                                 <input id="txtTo_Search" type="text" style="width:40px" />
                             </label>
                             <label id="lblcount_Search"></label>
                         </td>
                         <td style="text-align: right">
                             <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next_LeaveSearch()">Next</a>
                             <a id="btnLeaveAppPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                             <a id="btnLeavePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                         </td>
                     </tr>
                     <tr>
                         <td style="text-align: left"></td>
                         <td style="text-align: right"></td>
                     </tr>
                 </table>
             </div>
         </div>
     </div>

    <div id="winDepartmentPicker_Collection" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree_Collection" data-options="checkbox:true" singleselect="false"></ul>
            </div>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose_Collection" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Present Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Permanent Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:190px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            BU :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboBU" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Block :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtBlock" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnBlock" class="pick-btn" type="button" value="P" />
                            <input id="btnResetBlock" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Category:
                        </td>
                        <td class="td-AdvSearch-Level">
                            <div>
                                <select id="cboCategory" style="width:170px;"></select>
                                &nbsp; Gender :
                                <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 75px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 50px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 53px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 50px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 53px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                            <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" >
                    <thead>
                        <tr>
                            <!--<th data-options="field:'Selected',checkbox:true"></th>-->
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" >Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
         <div style="font-family:Tahoma">
             <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                 <ul id="locationtree" data-options="checkbox:true" singleselect="false"></ul>
             </div>

             <fieldset>
                 <legend style="font-weight:bold"> Action : </legend>
                 <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                     <tr>
                         <td style="width:400px; text-align:right"></td>

                         <td style="width:50px">
                             <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                         </td>
                         <td style="width:50px">
                             <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                         </td>
                     </tr>
                 </table>
             </fieldset>
         </div>
     </div>

    <div id="winDepartmentPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
         <div style="font-family:Tahoma">
             <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                 <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
             </div>

             <fieldset>
                 <legend style="font-weight:bold"> Action : </legend>
                 <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                     <tr>
                         <td style="width:400px; text-align:right"></td>

                         <td style="width:50px">
                             <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" >Ok</a>
                         </td>
                         <td style="width:50px">
                             <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                         </td>
                     </tr>
                 </table>
             </fieldset>
         </div>
     </div>

    <div id="winShowAttendance" class="easyui-window winstyle" title="Attendance" style="width:25%;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
         <table id="tblShowAttendance" title="Attendance List" class="easyui-datagrid" style="width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
             <thead>
                 <tr>
                     <th field="AttendanceDateInString" width="120px;" align="left">Date</th>
                     <th field="AttStatusInString_usedInLeave" width="160px;;" align="left">Description</th>
                 </tr>
             </thead>
         </table>
         <fieldset>
             <legend style="font-weight:bold"> Action : </legend>
             <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;width:100%;">
                 <tr>
                     <td style="width:60%; text-align:right"></td>
                     <td style="width:40%;text-align:right;">
                         <a id="btnShowAttendanceClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                     </td>
                 </tr>
             </table>
         </fieldset>
     </div>

    <div id="winLeaveLedger" class="easyui-window winstyle" title="Leave Ledger" style="width:28%;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
         <table id="tblLeaveLedger" title="Leave Ledger" class="easyui-datagrid" style="width:100%; height:250px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
             <thead>
                 <tr>
                     <th field="LeaveShortName" width="115px;" align="left">Leave Head</th>
                     <th field="TotalLeave" width="65px;" align="right">Total</th>
                     <th field="EnjoyedInfo" width="70px;" align="right">Enjoyed</th>
                     <th field="BalanceInfo" width="70px;" align="right">Balance</th>
                 </tr>
             </thead>
         </table>
         <fieldset>
             <legend style="font-weight:bold"> Action : </legend>
             <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold;width:100%;">
                 <tr>
                     <td style="width:60%; text-align:right"></td>
                     <td style="width:40%;text-align:right;">
                         <a id="btnLeaveLedgerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                     </td>
                 </tr>
             </table>
         </fieldset>
     </div>

    <div id="winELProcess" class="easyui-window winstyle" title="EL Process" style="width:300px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
         <fieldset>
             Date :
             <input id="dtLastProcessDate" type="text" style="width: 220px" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
         </fieldset>
         <fieldset>
             <div style="width:100%; padding-top:5px; text-align: right">
                 <a id="btnCloseELeaveProcess" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                 <a id="btnELeaveProcess" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Process</a>
             </div>
         </fieldset>
     </div>

</div>

<style type="text/css">
        /* leave Application */
        #winLeaveApplication {
            width: 600px;
            font-size: 11px;
        }
        .tdApp{
            padding-bottom:5px;
        }
        .tdApp .divLabel{
            float: left;
            width: 25%;
            text-align: right;
            margin-right: 1%;
            font-size: 11px;
        }
        .divInput input{
            float: left;
            width: 68%;
            font-size: 11px;
        }
        .divInput select{
            float: left;
            width: 69%;
            font-size: 11px;
        }

        .divInput .txtfield-picker{
            margin-top:1px;
            width: 61%;
            text-align:left;
            font-size:11px;
        }
        .divInput .pick-btn-LeaveApp{
            width: 20px;
            text-align:center;
            font-size:11px;
        }
        .divInput-rd input{
            float: left;
            width: 5%;
            font-size: 11px;
        }
        .divInput-rd label{
            float:left;
            padding-right:5%;
            font-size: 11px;
            margin-top: 0px;
        }

        .lblAlign{
             padding-left:5px;
             text-align:left;
         }

        #dtStartDate, #dtEndDate {
            width: 129px;
        }

        .clsReportingPerson select,.clsReportingPerson input{
            float: left;
            width: 32%;
            font-size: 11px;
        }
        /*Leave Application Adv Search*/
        #dtStartDateLAPicker,#dtEndDateLAPicker{
            width: 125px;
        }
        /* Employee Search */
        .tbl-AdvSearch{
            width: 100%; 
            font-size: 11px; 
            font-weight: bold;
            text-align: left;
            margin-left:3px;
        }
        .td-AdvSearch-Level{
            text-align: right;
        }
        .td-AdvSearch-Input{
            text-align: left;
        }
        .txtfield-search{
            width: 312px;
            text-align:left;
            font-size:11px;
        }
        .txtfield-picker{
            width: 265px;
            text-align:left;
            font-size:11px;
        }
        .selection-search{
            width: 310px;
            text-align:left;
            font-size:11px;
        }
        .pick-btn{
            width: 20px;
            text-align:center;
            font-size:11px;
        }
        .buttonBorder {
            border:1px solid gray;
        }

</style>

<script type="text/javascript">
    var _sBaseAddress="";
    var _oLeaveApplications=[];
    var _oLeaveApplication=null;
    var _oLeaveHeads=[];
    var _oApplicationTypes=[];
    var _oLeaveStatuss=[];
    var _oLeaveTypes=[];
    var _oEmployeeLeaveLedgers=[];


    var _sEmployeeIDs = "";
    var _sDepartmentNames = "";
    var _sDepartmentIds = "";
    var _sDesignationNames = "";
    var _sDesignationIds = "";
    var _sLocationID = "";
    var _sBusinessUnitIds="";

    var _IsLeaveAppEmp=false;
    var _IsLeavAppDept=false;
    var _nDeptID=0;

    var _oEmployee={EmployeeID:0};
    var _nLastEmployeeID = 0;
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];

    var _sAttendanceSchemeID="";
    var _sLocationID = "";
    var _sDepartmentID = "";
    var _sDesignationID = "";
    var _sBlockNames="";
    var _sBMMIDs="";
    var _oERPs=[];
    var _nApprovalEmpID=0;
    var _nResponsiblePersonID=0;

    var _nEmployee_Search_EmpID=0;

    var _bNext_LeaveSearch = false;
    var _nLoadRecords_LeaveSearch = 0;
    var _nRowLength_LeaveSearch = 0;
    var _nLastLeaveID=0
    var _nEmpID=0;
    var _oBusinessUnits=[];
    var _oClientOperationSetting =  null;
    var _bFlag = false;

    $(document).ready(function ()
    {
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oLeaveApplications =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));

        _oERPs = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ERPs));
        _oLeaveHeads = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.LeaveHeads));
        _oApplicationTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ApplicationTypes));
        _oLeaveStatuss = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.LeaveStatuss));
        _oLeaveTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.LeaveTypes));

        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        var oLeaveApplicationFormats= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.LeaveApplicationFormats));

        debugger;

        _nEmpID=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(TempData["Emp"]));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        _oClientOperationSetting = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ClientOperationSetting));

        $('#divForDay').hide();
        //$('#lblForDay').hide();
        $('#tptimeSpinner').timespinner('setValue', '00:00');
        //$('#tptimeSpinner').timespinner({'disabled': true});

        $("#btnApprove").hide();
        $("#btnLeaveAdjustment").hide();
        DynamicRefreshList(_oLeaveApplications,'tblLeaveApplication');
        $("#cboLeaveTypeLAPicker").icsLoadCombo({
            List: _oLeaveTypes,
            OptionValue: "Value",
            DisplayText: "Text",
            //InitialValue: ""
        });
        $("#cboPrintType").icsLoadCombo({
            List: oLeaveApplicationFormats,
            OptionValue: "id",
            DisplayText: "Value",
            InitialValue:"--Select One--"
        });
      
        
        //$("#txtDayPartFrom1").prop('disabled', true);
        //$("#txtMonthPartFrom1").prop("disabled", true);
        //$("#txtYearPartFrom1").prop("disabled", true);
        
        //$("#txtDayPartTo1").prop("disabled", true);
        //$("#txtMonthPartTo1").prop("disabled", true);
        //$("#txtYearPartTo1").prop("disabled", true);
        LoadDate();

        var  oLeaveTypeList=[];
        for(var i=0; i<_oLeaveTypes.length;i++)
        {
            if(_oLeaveTypes[i].Value!=0)
            {
                oLeaveTypeList.push(_oLeaveTypes[i]);
            }
        }

        $("#cboLeaveType").icsLoadCombo({

            List: oLeaveTypeList,
            OptionValue: "Value",
            DisplayText: "Text",
            //InitialValue: ""
        });

        $("#cboRequestToApproval").icsLoadCombo({
            List: _oERPs,
            OptionValue: "RPID",
            DisplayText: "ReportingPersonName"
            //InitialValue: "----Select Approval Person----"
        });

        InitializeLeaveAppAdvSearch();
        InitializeEmployeeAdvSearch();

        $('#dtStartDate_Search').datebox({disabled:true});
        $('#dtEndDate_Search').datebox({disabled:true});
        $('#dtStartDate_Search').datebox('setValue',icsdateformat(new Date()));
        $('#dtEndDate_Search').datebox('setValue',icsdateformat(new Date()));

        //$("#btnELProcess").hide();
      //  PrintTypeObject();

        $('#tblLeaveApplication').datagrid('hideColumn','BusinessUnitName');
        $('#tblLeaveApplication').datagrid('hideColumn','LocationName');
        $('#tblLeaveApplication').datagrid('hideColumn','DepartmentName');
        $('#tblLeaveApplication').datagrid('hideColumn','DesignationName');
        LoadCateGory(oEmployeeCategorys);
    });

    //$('#1').find("input,select")
    
    //$('input').on('keyup', function(e) {
    //    debugger;
    //    if (e.which === 13) {
    //        var nextInput = $(this).next().find('input');
    //        console.log(nextInput.hasClass('easyui-datebox'));
    //        if(nextInput.hasClass('easyui-datebox')) 
    //        {
    //            $(this).next().find('input').focus();
    //            $(this).next().find('input').select();
    //        }
    //        else {
    //            $(this).next('.tbl:input').focus();
    //        }
    //        //$('#dtStartDate').next().find('input').focus();
    //        //$('#dtStartDate').next().find('input').select();
    //        //$(this).next('.tbl:input').focus();
    //    }
    //});

    //var sFullDayte = $('#dtStartDate').data("textbox").options["value"];
    //var sDayPart = "";
    //for(var i = 0; i < sFullDayte.length; i++) {
    //    if(parseInt(sFullDayte[i]) >= 0 && parseInt(sFullDayte[i]) <=9) {
    //        sDayPart += sFullDayte[i];
    //    }
    //}

    //$('#dtStartDate').datebox({
    //    inputEvents: $.extend({}, $.fn.datebox.defaults.inputEvents, {
    //        keydown: function(e){
    //            if(e.which==13)
    //            {
    //                $('#dtEndDate').next().find('input').focus();
    //                $('#dtEndDate').next().find('input').select();
    //            }
    //        }
    //    })
    //})

    function LoadDate() {
        var sDate = icsdateformat(new Date());
        
        var sDay = sDate.split(" ")[0];
        var sMonth = sDate.split(" ")[1];
        var sYear = sDate.split(" ")[2];
        
        $("#txtDayPartFrom").val(sDay);
        $("#txtMonthPartFrom").val(sMonth);
        $("#txtYearPartFrom").val(sYear);
        
        $("#txtDayPartTo").val(sDay);
        $("#txtMonthPartTo").val(sMonth);
        $("#txtYearPartTo").val(sYear);
    }

    function LoadCateGory(oEmployeeCategorys)
    {
        $("#cboCategory").icsLoadCombo({
            List: oEmployeeCategorys,
            OptionValue: "Value",
            DisplayText: "Text"
        });
    }

    $("#chkIsDate").click(function () {
        if($("#chkIsDate").is(':checked'))
        {
            $('#dtStartDate_Search').datebox({disabled:false});
            $('#dtEndDate_Search').datebox({disabled:false});
            $('#dtStartDate_Search').datebox('setValue',icsdateformat(new Date()));
            $('#dtEndDate_Search').datebox('setValue',icsdateformat(new Date()));
        }
        else
        {
            $('#dtStartDate_Search').datebox({disabled:true});
            $('#dtEndDate_Search').datebox({disabled:true});
            $('#dtStartDate_Search').datebox('setValue',icsdateformat(new Date()));
            $('#dtEndDate_Search').datebox('setValue',icsdateformat(new Date()));
        }
    });
    
    $('#dtEndDate').datebox({
        inputEvents: $.extend({}, $.fn.datebox.defaults.inputEvents, {
            keydown: function(e){
                if(e.which==13)
                {
                    $('#cboLeaveLedger').focus();
                }
            }
        })
    })
    

    $("#btnExcel").click(function () {
        var nEmpID= (_oEmployee!=null && _oEmployee.EmployeeID>0)?_oEmployee.EmployeeID:0;
        var nApplicationNature=$("#cboApplicationTypeLAPicker").val();
        var nLeaveHeadLedger=$("#cboLeaveLAPicker").val();
        var nLeaveType=$("#cboLeaveTypeLAPicker").val();
        var nLeaveStatus=$("#cboLeaveStatusLAPicker").val();
        var bIsPaid= ($("#chkIsPaidLAPicker").is(':checked'))? 1 : 0;
        var bIsUnPaid = ($("#chkIsUnPaidLAPicker").is(':checked'))? 1 : 0;

        _nLoadRecords_LeaveSearch  = $("#txtTo_Search").val();
        if($("#chkRange_Search").is(":checked") == true)
        {
            var RangeFrom = 0;
            var RangeTo = 0;
            RangeFrom = parseFloat($("#txtFrom_Search").val());
            RangeTo = parseFloat($("#txtTo_Search").val());

            if(RangeFrom > RangeTo)
            {
                alert("Invalid Range !");
                return;
            }
            _nRowLength_LeaveSearch  = 0;
            _nLoadRecords_LeaveSearch  = 0;

            _nRowLength_LeaveSearch  = RangeFrom-1;
            _nLoadRecords_LeaveSearch  = RangeTo - RangeFrom +1;
        }
        debugger;

        var sTempString = _sBusinessUnitIds +"~"+ _sLocationID + "~" + _sDepartmentIds + "~" + _sDesignationIds + "~" + _sEmployeeIDs +"~"+$('#dtStartDateLAPicker').datebox('getValue')+"~"+$('#dtEndDateLAPicker').datebox('getValue')+"~"+nApplicationNature+"~"+nLeaveHeadLedger+"~"+nLeaveType+"~"+nLeaveStatus+"~"+bIsPaid+'~'+bIsUnPaid;// +'~'+ $("#chkIsDateSearch").is(':checked');
        var sAction = "ExcelLeaveWithEnjoyedBalance";
        window.open(_sBaseAddress+ "/LeaveApplication/"+sAction+"?sTempString="+sTempString, "_blank");
        //window.open(_sBaseAddress+ "/LeaveApplication/"+sTempString);
    });



    $(document).keydown(function (e) { if (e.keyCode == 27) { $('div').icsWindow('close'); } });

    $('#tblLeaveApplication').datagrid({ onSelect: function (rowIndex, rowData) { OperationPerformsLeaveApplication(rowIndex, rowData); } });

    function OperationPerformsLeaveApplication(rowIndex, rowData) {
        if (rowData != null && rowData.LeaveApplicationID > 0) {
            $('#btnEdit,#btnDelete,#btnRecommendation,#btnLeaveAdjustment,#btnApprove,#btnCancel').show();//#btnCancel,
            if (rowData.CancelledBy>0) {
                $('#btnEdit,#btnDelete,#btnRecommendation,#btnApprove,#btnSaveLeaveApplication,#btnLeaveAdjustment,#btnCancel').hide();//#btnCancel,
            }
            else if (rowData.ApproveBy>0 && rowData.CancelledBy<=0)
            {
                $('#btnEdit,#btnDelete,#btnRecommendation,#btnApprove,#btnSaveLeaveApplication').hide();//#btnCancel,
                //$('#btnLeaveAdjustment,#btnCancel').show();
            }
            else if (rowData.ApproveBy<=0 && rowData.CancelledBy<=0 && (rowData.RecommendedBy>0 || rowData.RequestForRecommendation<=0))
            {
                if (rowData.RecommendedBy>0)
                {
                    $('#btnEdit,#btnDelete,#btnRecommendation,#btnSaveLeaveApplication,#btnLeaveAdjustment').hide();//#btnCancel,
                    //$('#btnLeaveAdjustment,#btnApprove').show();//#btnCancel,
                }else if (rowData.RequestForRecommendation<=0)
                {
                    $('#btnRecommendation').hide();//#btnCancel,
                    if (rowData.RequestForAproval!=0 && _nEmpID!=rowData.RequestForAproval)
                    {
                        $('#btnApprove').hide()
                    }
                }

                //if (_nEmpID==rowData.RequestForAproval || rowData.RequestForAproval<=0)
                //{
                //    $('#btnApprove,#btnCancel,#btnEdit,#btnDelete').show();
                //}

            }
            else if (rowData.ApproveBy<=0 && rowData.CancelledBy<=0 && rowData.RecommendedBy<=0)
            {
                $('#btnLeaveAdjustment,#btnApprove').hide();//#btnCancel,
                //$('#btnEdit,#btnDelete,#btnRecommendation,#btnSaveLeaveApplication,#btnCancel').show();//#btnCancel,
            }
            else{
                $('#btnEdit,#btnDelete,#btnRecommendation,#btnApprove,#btnSaveLeaveApplication,#btnLeaveAdjustment').show();
            }

            //if (rowData.RecommendedBy>0 && rowData.ApproveBy<=0) {
            //    $('#btnRecommendation,#btnSaveLeaveApplication,#btnLeaveAdjustment').hide();//#btnCancel
            //    $('#btnEdit,#btnDelete').show();

            //    $('#btnApprove').hide();
            //    alert(rowData.RequestForAproval);
            //    if (_nEmpID==rowData.RequestForAproval)
            //    {
            //        $('#btnApprove').show();
            //    }
            //    //}else {
            //    //    $('#btnApprove').show();
            //    //}


            //}
            //else if (rowData.ApproveBy>0 && rowData.CancelledBy<=0) {
            //    $('#btnEdit,#btnDelete,#btnRecommendation,#btnApprove,#btnSaveLeaveApplication').hide();
            //    //$('#btnCancel').show();
            //    $("#btnLeaveAdjustment").show();
            //}
            //else if (rowData.CancelledBy>0) {
            //    $('#btnEdit,#btnDelete,#btnRecommendation,#btnApprove,#btnSaveLeaveApplication,#btnLeaveAdjustment').hide();//#btnCancel,
            //}
            //else {
            //    //$('#btnCancel').hide();
            //    $('#btnEdit,#btnDelete,#btnRecommendation,#btnApprove,#btnSaveLeaveApplication,#btnLeaveAdjustment').show();
            //}

        }
    }

    $("#btnNew").click(function () {
        ResetControllLeaveApp();
        LayoutControllLeaveApp("btnNew");

        $("#txtExpenseLocation").val('N/A');
        $("#txtReason").val('N/A');

        $("#winLeaveApplication").icsWindow('open');
        $("#txtEmployee").focus();
        //$("#btnSaveLeaveApplication").hide();
        $(".tdRecommendation").show();
        $(".tdRecommendationNote").hide();
        bSaveShow=true;
    });

    $('#btnEdit').click(function (e) {
        var oLeaveApplication = $("#tblLeaveApplication").datagrid("getSelected");
        if (oLeaveApplication == null || oLeaveApplication.LeaveApplicationID <= 0) { alert("Please select an item from list!"); return; }
        if (oLeaveApplication.ApproveBy>0) { alert('Unable to edit. Already approved.'); return; }

        ResetControllLeaveApp();
        LayoutControllLeaveApp("btnEdit");
        $(".tdRecommendation,.tdApproval").hide();
        GetLeaveAppInfo(oLeaveApplication,'Edit Leave Info');
        bSaveShow=true;
        _oEmployee.EmployeeID=oLeaveApplication.EmployeeID;
        $(".tdRecommendation").show();
        $(".tdRecommendationNote").hide();
    });

    $('#btnView').click(function (e) {
        var oLeaveApplication = $("#tblLeaveApplication").datagrid("getSelected");
        if (oLeaveApplication == null || oLeaveApplication.LeaveApplicationID <= 0) { alert("Please select an item from list!"); return; }

        ResetControllLeaveApp();
        LayoutControllLeaveApp("btnView");
        GetLeaveAppInfo(oLeaveApplication,'Leave Info');
        $(".tdRecommendation").show();
        $(".tdRecommendationNote").hide();
        _oEmployee.EmployeeID=oLeaveApplication.EmployeeID;
    });

    $("#btnDelete").click(function () {

        var oLeaveApplication = $("#tblLeaveApplication").datagrid("getSelected");
        if (oLeaveApplication == null || oLeaveApplication.LeaveApplicationID <= 0) { alert("Please select an item from list!"); return; }
        if (oLeaveApplication.ApproveBy>0) { alert('Unable to delete. Already approved.'); return; }
        if (!confirm("Confirm to Delete?")) return;

        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oLeaveApplication,
            ControllerName: "LeaveApplication",
            ActionName: "DeleteLeaveApplication",
            TableId: "tblLeaveApplication",
            IsWinClose: false
        };
        $.icsDelete(obj);
    });

    $("#btnShowLeaveLedger").click(function ()
    {
        var oLeaveApplication = $('#tblLeaveApplication').datagrid('getSelected');
        if (oLeaveApplication == null || oLeaveApplication.LeaveApplicationID <= 0) { alert("please select a  an item."); return false; }
        var nts=(new Date()).getTime()/1000;
        sessionStorage['BackLink']=window.location;
        window.location.href = _sBaseAddress+ "/LeaveApplication/ViewLeaveLedger?nEmpID="+oLeaveApplication.EmployeeID +'&nts='+nts;
    });


    $('#btnRecommendation').click(function (e) {

        var oLeaveApplication = $("#tblLeaveApplication").datagrid("getSelected");
        if (oLeaveApplication == null || oLeaveApplication.LeaveApplicationID <= 0) { alert("Please select an item from list!"); return; }

        if(oLeaveApplication.RequestForRecommendation==0 && oLeaveApplication.ApproveBy<=0){ alert('No need to recommend, you can approve directly.'); return; }
        else if(oLeaveApplication.CancelledBy>0) { alert('Already Canceled.'); return; }
        else if (oLeaveApplication.ApproveBy>0) { alert('Already approved.'); return; }
        else if(oLeaveApplication.RecommendedBy>0){ alert('Already recommended.'); return; }

        ResetControllLeaveApp();
        LayoutControllLeaveApp("btnRecommendation");
        GetLeaveAppInfo(oLeaveApplication,'Recommendation');

    });

    $('#btnApprove').click(function (e) {

        var oLeaveApplication = $("#tblLeaveApplication").datagrid("getSelected");
        if (oLeaveApplication == null || oLeaveApplication.LeaveApplicationID <= 0) { alert("Please select an item from list!"); return; }
        if(oLeaveApplication.RequestForRecommendation>0 && oLeaveApplication.RecommendedBy<=0){ alert('Firstly you have to recommend.'); return; }
        else if(oLeaveApplication.CancelledBy>0) { alert('Already Canceled.'); return; }
        else if (oLeaveApplication.ApproveBy>0) { alert('Already approved.'); return; }

        ResetControllLeaveApp();
        LayoutControllLeaveApp("btnApprove");
        GetLeaveAppInfo(oLeaveApplication,'Appro');
    });

    $('#btnCancel').click(function (e) {

        var oLeaveApplication = $("#tblLeaveApplication").datagrid("getSelected");
        if (oLeaveApplication == null || oLeaveApplication.LeaveApplicationID <= 0) { alert("Please select an item from list!"); return; }

        //if (oLeaveApplication.ApproveBy<=0) { alert('You need to approve first for cancel.'); return; }
        else if(oLeaveApplication.CancelledBy>0) { alert('Already Canceled.'); return; }
        ResetControllLeaveApp();
        LayoutControllLeaveApp("btnCancel");
        GetLeaveAppInfo(oLeaveApplication,'Cancel');
    });
    
    $("#txtDayPartFrom").keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var message = document.getElementById('txtDayPartTo');
            // Select a portion of text
            setInputSelection(message,0, 2);

        }

    });
    $("#txtDayPartTo").keypress(function (e)
    {   
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            $('#cboLeaveLedger').focus();
        }
    });

    function EmployeeLeaveLedger(oEmployeeLeaveLedgers, sTitle){
        debugger;
        if(!_IsLeaveAppEmp){
            _oEmployeeLeaveLedgers=oEmployeeLeaveLedgers;
            $("#cboLeaveLedger").icsLoadCombo({
                List: _oEmployeeLeaveLedgers,
                OptionValue: "EmpLeaveLedgerID",
                DisplayText: "LeaveNameWithBalance"
            });
        }
        else{
            $("#cboLeaveLAPicker").icsLoadCombo({
                List: oEmployeeLeaveLedgers,
                OptionValue: "EmpLeaveLedgerID",
                DisplayText: "LeaveName"
            });
        }
        if(sTitle != "Appro")
        {
            //var sDayPart = "";
            //for(var i = 0; i < sFullDayte.length; i++) {
            //    if(parseInt(sFullDayte[i]) >= 0 && parseInt(sFullDayte[i]) <=9) {
            //        sDayPart += sFullDayte[i];
            //    }
            //}
            debugger;
            //var sFullDayte = $('#dtStartDate').data("textbox").options["value"];
            
            var message = document.getElementById('txtDayPartFrom');
            // Select a portion of text
            setInputSelection(message,0, 2);

            //$('#dtStartDate').data("textbox").options["value"].selectionStart = 0;
            //$('#dtStartDate').data("textbox").options["value"].selectionEnd = 3;
            //console.log( $('#dtStartDate'));
            //$('#dtStartDate').data("textbox").options["value"].setSelectionRange(0, 3);


            //$('#dtStartDate').next().find('input').select();
            //$('#dtStartDate').next().find('input').focus();
        }
    }
    //function selectSomeText(element,begin,end)
    //{
    //    debugger;
    //    //var element = document.getElementById('dtStartDate');
    //    console.log(element);
    //    if (element.setSelectionRange)
    //    {
    //        element.setSelectionRange(begin,end);
    //    }
    //    else if (element.createTextRange)
    //    {
    //        var range = element.createTextRange();
    //        range.moveStart("character",begin);
    //        range.moveEnd("character",end);
    //        range.select();
    //    }
    //}
    function setInputSelection(input, startPos, endPos) {
        debugger;
        console.log(input.value);
        input.focus();
        //if (typeof input.selectionStart != "undefined") {
        if ('selectionStart' in input) {
            input.selectionStart = startPos;
            input.selectionEnd = endPos;
        } else if (document.selection && document.selection.createRange) {
            // IE branch
            input.select();
            var range = document.selection.createRange();
            range.collapse(true);
            range.moveEnd("character", endPos);
            range.moveStart("character", startPos);
            range.select();
        }
    }  

    function LayoutControllLeaveApp(buttonId) {
        $('#txtRequestToApproval').css({"width":"68%"});
        $("#cboRequestToApproval").hide();
        if (buttonId === "btnView" || buttonId === "btnRecommendation" || buttonId === "btnApprove" || buttonId === "btnCancel" || buttonId === "btnLeaveAdjustment") {
            $("#winLeaveApplication input").prop("disabled", true);
            $("#winLeaveApplication select").prop("disabled", true);
            $("#btnSaveLeaveApplication, #btnRecommendLeaveApplication, #btnApproveLeaveApplication, #btnCancelLeaveApplication,#btnLeaveAdjustmentSave").hide();
            $(".tdRecommendation,.tdApproval,.tdCancel").hide();
            $('.clsReportingPerson select,.clsReportingPerson span').hide();



            if(buttonId === "btnView"){
                var oLeaveApplication = $("#tblLeaveApplication").datagrid("getSelected");
                if(oLeaveApplication.RecommendedBy>0){ $(".tdRecommendation").show(); }
                if (oLeaveApplication.ApproveBy>0) { $(".tdApproval").show(); }
                if(oLeaveApplication.CancelledBy>0) { $(".tdCancel").show(); }
            }

            else if(buttonId === "btnRecommendation"){
                $(".tdRecommendation,.clsReportingPerson").show();

                $("#txtRecommendationNote,#cboRequestToApproval,#txtRequestToApproval").prop("disabled",false);
                if(_oERPs.length>0){
                    $('.clsReportingPerson select,.clsReportingPerson span').show();
                    $('#txtRequestToApproval').css({"width":"32%"});
                }
                $("#btnRecommendLeaveApplication").show();
            }
            else if(buttonId === "btnApprove"){
                $(".tdRecommendation,.tdApproval").show();
                $("#txtApprovalNote").prop("disabled",false);
                $("#btnApproveLeaveApplication").show();
            }
            else if(buttonId === "btnCancel"){
                $(".tdRecommendation,.tdApproval,.tdCancel").show();
                $("#txtCancelNote").prop("disabled",false);
                $("#btnCancelLeaveApplication").show();
            }
            else if(buttonId === "btnLeaveAdjustment"){                
                //$("#txtDayPartTo").prop("disabled",false);
                //$("#txtMonthPartTo").prop("disabled",false);
                //$("#txtYearPartTo").prop("disabled",false);
                $("#btnGetAttendance").prop("disabled",false);
                $("#btnLeaveAdjustmentSave").show();
            }
        }
        else {
            $("#winLeaveApplication input").prop("disabled", false);
            $("#txtEmployee,#btnEmployeePicker,#btnResetEmployeePicker").prop("disabled",(buttonId === "btnNew")?false:true);
            $("#winLeaveApplication select").prop("disabled", false);
            $("#btnSaveLeaveApplication").show();
            $(".tdRecommendation,.tdApproval,.tdCancel").hide();
            $("#btnRecommendLeaveApplication, #btnApproveLeaveApplication, #btnCancelLeaveApplication,#btnLeaveAdjustmentSave").hide();
            $("#rdbtnPaid").prop("disabled", true);
            $("#rdbtnUnPaid").prop("disabled", true);
            //$("#txtDurationInHour").prop("disabled", true);
            $('#tptimeSpinner').timespinner({'disabled': true});

        }
        $(".disabled input").prop("disabled", true);
    }

    function GetLeaveAppInfo(oLeaveApplication,sTitle){
        debugger;
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oLeaveApplication,
            ControllerName: "LeaveApplication",
            ActionName: "GetLeaveApp",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj != null) {
                if (response.obj.LeaveApplicationID > 0) {
                    EmployeeLeaveLedger(response.obj.EmployeeLeaveLedgers, sTitle);
                    RefreshControlLeaveApp(response.obj);
                    $("#winLeaveApplication").icsWindow('open', sTitle);
                }
                else { response.obj.ErrorMessage; }
            }
        });
    }

    function ResetControllLeaveApp() {

        debugger;
        var oDate=new Date();
        var sDate=(oDate.getMonth()+1)+'/'+oDate.getDate()+'/'+oDate.getFullYear()+' '+oDate.getHours()+':'+oDate.getMinutes();
        _oLeaveApplication = null;
        _oEmployee={EmployeeID:0};
        $(".resetfield").val("");
        $(".resetlbl").html("");
        //$("#txtDurationInHour").val("");

        $('#tptimeSpinner').timespinner('setValue', '00:00');
        $("#txtExpenseLocation").val('N/A');
        $("#txtReason").val('N/A');

        //$("#rdbtnLeaveOfApplication,#rdbtnLeaveOfAbsence").prop("checked", false);
        //$("#rdbtnLeaveOfApplication").prop("checked", true);
        $("#cboLeaveLedger").empty();
        $("#cboLeaveType").val(1);
        //$('#dtStartDate, #dtEndDate').datebox("setValue", sDate);

        
        var sDate = icsdateformat(new Date());
        
        var sDay = sDate.split(" ")[0];
        var sMonth = sDate.split(" ")[1];
        var sYear = sDate.split(" ")[2];
        
        $("#txtDayPartFrom").val(sDay);
        $("#txtMonthPartFrom").val(sMonth);
        $("#txtYearPartFrom").val(sYear);
        
        $("#txtDayPartTo").val(sDay);
        $("#txtMonthPartTo").val(sMonth);
        $("#txtYearPartTo").val(sYear);

        $("#rdbtnPaid,#rdbtnUnPaid").prop("checked", false);
        $("#rdbtnPaid").prop("checked", true);
    }



    function RefreshControlLeaveApp(oLeaveApplication) {
        debugger;
        _oLeaveApplication = oLeaveApplication;

        //$("#txtEmployee").val(_oLeaveApplication.EmployeeName);
        if(_oLeaveApplication == null) {
            $("#txtEmployee").val("");
        } else {
            $("#txtEmployee").val(_oLeaveApplication.EmployeeName+","+_oLeaveApplication.BusinessUnitName+","+_oLeaveApplication.LocationName+","+_oLeaveApplication.DepartmentName+","+_oLeaveApplication.DesignationName);
        }
        //if(_oLeaveApplication.ApplicationNatureInt == 1){ $("#rdbtnLeaveOfApplication").prop("checked", true); }
        //else if(_oLeaveApplication.ApplicationNatureInt == 2){ $("#rdbtnLeaveOfAbsence").prop("checked", true);  }
        //$('#dtStartDate').datebox("setValue", _oLeaveApplication.StartDateTimeInString);
        //$('#dtEndDate').datebox("setValue", _oLeaveApplication.EndDateTimeInString);

        var sDay = _oLeaveApplication.StartDateTimeInString.split(" ")[0];
        var sMonth = _oLeaveApplication.StartDateTimeInString.split(" ")[1];
        var sYear = _oLeaveApplication.StartDateTimeInString.split(" ")[2];
        
        var sDayT = _oLeaveApplication.EndDateTimeInString.split(" ")[0];
        var sMonthT = _oLeaveApplication.EndDateTimeInString.split(" ")[1];
        var sYearT = _oLeaveApplication.EndDateTimeInString.split(" ")[2];

        $("#txtDayPartFrom").val(sDay);
        $("#txtMonthPartFrom").val(sMonth);
        $("#txtYearPartFrom").val(sYear);
        
        $("#txtDayPartTo").val(sDayT);
        $("#txtMonthPartTo").val(sMonthT);
        $("#txtYearPartTo").val(sYearT);


        $('#cboLeaveLedger').val(_oLeaveApplication.EmpLeaveLedgerID);
        $('#cboLeaveType').val(_oLeaveApplication.LeaveTypeInt);
        $("#txtExpenseLocation").val(_oLeaveApplication.Location);
        $("#txtReason").val(_oLeaveApplication.Reason);
        $("#txtResponsiblePerson").val(_oLeaveApplication.ResponsiblePersonName);
        _nResponsiblePersonID=_oLeaveApplication.ResponsiblePersonID;

        if(_oLeaveApplication.IsUnPaid){ $("#rdbtnUnPaid").prop("checked", true);}
        else{ $("#rdbtnPaid").prop("checked", true);}

        if(_oLeaveApplication.RecommendedBy)
        {
            $(".tdRecommendation").show(); $("#txtRecommendationNote").val(_oLeaveApplication.RecommendationNote);
            //$('#txtRequestToApproval').val(_oLeaveApplication.RequestForAprovalName);
            //_nApprovalEmpID=_oLeaveApplication.RequestForAproval;
        }
        if(_oLeaveApplication.ApproveBy){ $(".tdApproval").show(); $("#txtApprovalNote").val(_oLeaveApplication.ApprovalNote);}
        if(_oLeaveApplication.CancelledBy){ $(".tdCancel").show(); $("#txtCancelNote").val(_oLeaveApplication.CancelledNote);}

        //$("#lblApplicationStatus").html("<b></b>");
        if(_oLeaveApplication.LeaveType==2 || _oLeaveApplication.LeaveType==3)
        {
            //$("#txtDurationInHour").prop("disabled", false);

            $('#tptimeSpinner').timespinner({'disabled': false});
            $("#spEndDate").hide();
        }
        debugger;
        var Hour = _oLeaveApplication.Hour;
        var Minute = _oLeaveApplication.Minute;

        //$('#txtDurationInHour').val(_oLeaveApplication.LeaveDurationInHour);
        if(_oLeaveApplication.LeaveType==1) {
            $('#divSpinner').hide();
            $('#divForDay').show();
            $('#lblForDay').text( " " +_oLeaveApplication.LeaveDuration + " Day/s");
        }
        else {
            $('#divSpinner').show();
            $('#divForDay').hide();
            $('#tptimeSpinner').timespinner('setValue', Hour + ':'+Minute);
        }
        if(_oLeaveApplication.RequestForAproval>0){$("#txtRequestToApproval").val(_oLeaveApplication.RequestForAprovalName);_nApprovalEmpID=_oLeaveApplication.RequestForAproval;}
    }

    function RefreshObjectLeaveApp() {
        debugger;
        var nRequestForAproval=0;
        if(_nApprovalEmpID>0){
            nRequestForAproval=_nApprovalEmpID;
        }
        else{
            nRequestForAproval=$('#cboRequestToApproval').val();
        }

        var nLeaveType=$('#cboLeaveType').val();
        var nDurationInHour=0;
        //var nDurationInMin=0;
        //var sStartDateTime = $('#dtStartDate').data("textbox").options["value"]; //$('#dtStartDate').datebox('getValue');
        //var sEndDateTime = $('#dtEndDate').data("textbox").options["value"]; //$('#dtEndDate').datebox('getValue');
        
       
        var sDayFrom = $("#txtDayPartFrom").val();
        var sMonthFrom = $("#txtMonthPartFrom").val();
        var sYearFrom = $("#txtYearPartFrom").val();
        
        var sDayTo = $("#txtDayPartTo").val();
        var sMonthTo = $("#txtMonthPartTo").val();
        var sYearTo = $("#txtYearPartTo").val();
        
        var sStartDateTime = sDayFrom + " " + sMonthFrom + " " + sYearFrom;
        //var sStartDateTime = sDayFrom.concat(sMonthFrom);
        //sStartDateTime = sStartDateTime.concat(sYearFrom);

        //var sEndDateTime = sDayTo.concat(sMonthTo);
        var sEndDateTime = sDayTo + " " + sMonthTo + " " + sYearTo;
        //sEndDateTime = sEndDateTime.concat(sYearTo);

        if(nLeaveType==2 || nLeaveType==3)
        {
            //nDurationInHour=$("#txtDurationInHour").val();
            //nDurationInHour=nDurationInHour*60;
            var nhr=$('#tptimeSpinner').timespinner('getHours');
            var nmin=$('#tptimeSpinner').timespinner('getMinutes');
            nDurationInHour = (nhr*60) + nmin;
            sEndDateTime=sStartDateTime;
        }
        else {

        }

        var oLeaveApplication = {
            LeaveApplicationID: (_oLeaveApplication != null) ? _oLeaveApplication.LeaveApplicationID : 0,
            EmployeeID: (_oLeaveApplication != null) ? _oLeaveApplication.EmployeeID : _oEmployee.EmployeeID,
            EmpLeaveLedgerID: $('#cboLeaveLedger').val(),
            ApplicationNatureInt: 1 /*(($("#rdbtnLeaveOfApplication").is(":checked"))? 1 : 2)*/,
            LeaveTypeInt: nLeaveType,
            StartDateTime: sStartDateTime,
            EndDateTime: sEndDateTime,
            Location: $("#txtExpenseLocation").val(),
            Reason: $("#txtReason").val(),
            RequestForRecommendation: (_oLeaveApplication != null && _oLeaveApplication.LeaveApplicationID>0) ? _oLeaveApplication.RequestForRecommendation :0,// ((_oERPs.length>0)?_oERPs[0].RPID:0),
            RecommendedBy: (_oLeaveApplication != null) ? _oLeaveApplication.RecommendedBy : 0,
            RecommendedByDate: (_oLeaveApplication != null) ? _oLeaveApplication.RecommendedByDate : icsdateformat(new Date()),
            ApproveBy: (_oLeaveApplication != null) ? _oLeaveApplication.ApproveBy : 0,
            ApproveByDate: (_oLeaveApplication != null) ? _oLeaveApplication.ApproveByDate : icsdateformat(new Date()),
            IsUnPaid: (($("#rdbtnUnPaid").is(":checked"))? true : false),
            RecommendationNote: (_oLeaveApplication != null && _oLeaveApplication.RecommendedBy>0) ? _oLeaveApplication.RecommendationNote : $.trim($("#txtRecommendationNote").val()),
            ApprovalNote: (_oLeaveApplication != null && _oLeaveApplication.ApproveBy>0) ? _oLeaveApplication.ApprovalNote :  $.trim($("#txtApprovalNote").val()),
            LeaveStatusInt: (_oLeaveApplication != null) ? _oLeaveApplication.LeaveStatusInt : 1,
            CancelledBy : (_oLeaveApplication != null && _oLeaveApplication.CancelledBy>0) ? _oLeaveApplication.CancelledBy : 0,
            CancelledNote : (_oLeaveApplication != null && _oLeaveApplication.CancelledBy>0) ? _oLeaveApplication.CancelledNote :  $.trim($("#txtCancelNote").val()),
            RequestForAproval: nRequestForAproval,
            ResponsiblePersonID:_nResponsiblePersonID,
            LeaveDuration:nDurationInHour

        };
        return oLeaveApplication;
    }

    function ValidationLeaveApp(){

        debugger;
        var sCurrentDate=icsdateformat(new Date());
        //var sStartDate=icsdateformat(new Date($('#dtStartDate').datebox('getValue')));
        //var sEndDate= icsdateformat(new Date($('#dtEndDate').datebox('getValue')));
        //var sStartDate=icsdateformat(new Date($('#dtStartDate').data("textbox").options["value"]));
        //var sEndDate= icsdateformat(new Date($('#dtEndDate').data("textbox").options["value"]));

        
        var sDayFrom = $("#txtDayPartFrom").val();
        var sMonthFrom = $("#txtMonthPartFrom").val();
        var sYearFrom = $("#txtYearPartFrom").val();
        
        var sDayTo = $("#txtDayPartTo").val();
        var sMonthTo = $("#txtMonthPartTo").val();
        var sYearTo = $("#txtYearPartTo").val();
        
        var sStartDateTime = sDayFrom + " " + sMonthFrom + " " + sYearFrom;
        //var sStartDateTime = sDayFrom.concat(sMonthFrom);
        //sStartDateTime = sStartDateTime.concat(sYearFrom);

        //var sEndDateTime = sDayTo.concat(sMonthTo);
        var sEndDateTime = sDayTo + " " + sMonthTo + " " + sYearTo;
        //sEndDateTime = sEndDateTime.concat(sYearTo);
        
        sStartDateTime = new Date(sStartDateTime);
        sEndDateTime = new Date(sEndDateTime);
        
        var sDateFrom = Date.parse(sStartDateTime);
        var sDateTo = Date.parse(sEndDateTime);
        if(isNaN(sDateFrom)) {
            alert("First Date is not valid!");
            return;
        }
        if(isNaN(sDateTo)) {
            alert("Second Date is not valid!");
            return;
        }

        debugger;

        if(_oLeaveApplication == null && ( _oEmployee==null || _oEmployee.EmployeeID<=0)){
            alert("Please enter employee.");
            $("#txtEmployee").addClass("errorFieldBorder");
            $("#txtEmployee").focus();
            return false;
        }
        else {
            $("#txtEmployee").removeClass("errorFieldBorder");
        }

        //if (!$("#rdbtnLeaveOfApplication").is(":checked") && !$("#rdbtnLeaveOfAbsence").is(":checked")) {
        //    alert("Please select application type.");
        //    return false;
        //}

        //if($("#rdbtnLeaveOfApplication").is(":checked")){
        //    if(new Date($('#dtEndDate').datebox('getValue')) < new Date($('#dtStartDate').datebox('getValue'))) { alert("End Date must be later than Start Date in case of Leave Application."); return false; }
        //}

        //if($("#rdbtnLeaveOfAbsence").is(":checked")){
        //    if(new Date(sStartDate) == new Date(sCurrentDate))  { alert("Current Date Not Allowed For Start Date!"); return false; }
        //    else if(new Date(sEndDate) == new Date(sCurrentDate)) { alert("Current Date Not Allowed for End Date in past in case of Leave of Absence.!"); return false; }
        //    //else if(new Date(sStartDate) > new Date(sCurrentDate)) { alert("Start Date have to be in past in case of Leave of Absence."); return false; }
        //    //else if(new Date(sEndDate) > new Date(sCurrentDate)) { alert("End Date have to be in past in case of Leave of Absence."); return false; }
        //    else if(new Date($('#dtEndDate').datebox('getValue')) < new Date($('#dtStartDate').datebox('getValue'))) { alert("End Date must be later than Start Date in case of Leave of Absence."); return false; }
        //}

        if ($("#cboLeaveLedger").val() == 0) {
            alert("Please select a leave.");
            $("#cboLeaveLedger").addClass("errorFieldBorder");
            $("#cboLeaveLedger").focus();
            return false;
        } else {
            $("#cboLeaveLedger").removeClass("errorFieldBorder");
        }

        if ($("#cboLeaveType").val() == 0) {
            alert("Please select a leave type.");
            $("#cboLeaveType").addClass("errorFieldBorder");
            $("#cboLeaveType").focus();
            return false;
        } else {
            if ($("#cboLeaveType").val() == 2 || $("#cboLeaveType").val() == 3)
            {
                debugger;
                //var nDurationInHour=$("#txtDurationInHour").val();
                var nhr=$('#tptimeSpinner').timespinner('getHours');
                var nmin=$('#tptimeSpinner').timespinner('getMinutes');
                if(nhr<=0 && nmin <=0)
                {
                    alert("Please enter leave duration in hour.");
                    //$("#txtDurationInHour").addClass("errorFieldBorder");
                    //$("#txtDurationInHour").focus();
                    $("#tptimeSpinner").addClass("errorFieldBorder");
                    $("#tptimeSpinner").focus();

                    return false;
                }
            }
            $("#cboLeaveType").removeClass("errorFieldBorder");
        }


        //if(_oEmployeeLeaveLedgers.length>0){

        //    var nDays=((new Date(sEndDate)).getTime() - (new Date(sStartDate)).getTime())/(1000*3600*24);

        //    var nHour= ((new Date($('#dtEndDate').datebox('getValue'))).getTime() - (new Date($('#dtStartDate').datebox('getValue'))).getTime())/(1000*3600);

        //    for(var i=0; i<_oEmployeeLeaveLedgers.length;i++){
        //        if(_oEmployeeLeaveLedgers[i].EmpLeaveLedgerID==$("#cboLeaveLedger").val()){
        //            var nFullLeave= parseInt(_oEmployeeLeaveLedgers[i].LeaveBalance);
        //            var nHalfLeave= (_oEmployeeLeaveLedgers[i].HalfLeaveInStr!="")? parseInt(_oEmployeeLeaveLedgers[i].HalfLeaveInStr.substring(2,3)):0;
        //            var nShortLeave= (_oEmployeeLeaveLedgers[i].ShortLeaveInStr!="")? parseInt(_oEmployeeLeaveLedgers[i].ShortLeaveInStr.substring(2,3)):0;

        //            if($("#cboLeaveType").val()==1){

        //                if(nFullLeave<=0){
        //                    if(nHalfLeave>0){
        //                        alert("No full leave remaining. You can take a half leave.");
        //                    }
        //                    else if(nHalfLeave<=0 && nShortLeave>0){
        //                        alert("No full & half leave remaining. You can take a short leave.");
        //                    }
        //                    else{
        //                        alert("No leave remaining.");
        //                    }
        //                    return false;
        //                }
        //                else if(nDays>nFullLeave){
        //                    var sText= (nFullLeave>1) ? "leaves" : "leave";
        //                    alert("You can enjoy max "+ nFullLeave +" "+sText);
        //                    return false;
        //                }
        //                //else if(nHour<8){
        //                //    alert("For a full leave min 8 hours required."); return false;
        //                //}
        //            }
        //            else if($("#cboLeaveType").val()==2){
        //                if(nFullLeave<=0 && nHalfLeave<=0){
        //                    if(nShortLeave>0){
        //                        alert("No full & half leave remaining. You can take a half leave.");
        //                    }
        //                    else{
        //                        alert("No leave remaining");
        //                    }
        //                    return false;
        //                }
        //                else if(nHour<=3){
        //                    alert("For a half leave min 3 hours plus required."); return false;
        //                }
        //                else if(nHour>=8){
        //                    alert("Leave duration does'not exceed 8 hours for a half leave."); return false;
        //                }
        //            }
        //            else if($("#cboLeaveType").val()==3){
        //                if(nFullLeave<=0 && nHalfLeave<=0 && nShortLeave<=0){
        //                    alert("No leave remaining");
        //                    return false;
        //                }
        //                else if(nHour>3){
        //                    alert("Leave duration does'not exceed 3 hours for a short leave."); return false;
        //                }
        //                else if(nHour<=0){
        //                    alert("No time duration found for a short leave."); return false;
        //                }
        //            }

        //        }
        //    }

        //}


        //if ($("#cboLeaveType").val() == 2 || $("#cboLeaveType").val() == 3) {
        //    if((sStartDate != sEndDate) || (new Date($('#dtEndDate').datebox('getValue')) < new Date($('#dtStartDate').datebox('getValue')))) { alert("Start Date and End Date have to be same for Half or Short Leave."); return false; }
        //}

        if ($.trim($("#txtExpenseLocation").val()).length == 0) {
            alert("Please enter leave expense location.");
            $("#txtExpenseLocation").addClass("errorFieldBorder");
            $("#txtExpenseLocation").focus();
            return false;
        } else {
            $("#txtExpenseLocation").removeClass("errorFieldBorder");
        }

        if ($.trim($("#txtReason").val()).length == 0) {
            alert("Please enter leave reason.");
            $("#txtReason").addClass("errorFieldBorder");
            $("#txtReason").focus();
            return false;
        } else {
            $("#txtReason").removeClass("errorFieldBorder");
        }

        return true;
    }

    function LeaveApplicationOperation(oLeaveApplication,sActionName,sMessage){

        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLeaveApplication,
            ObjectId: oLeaveApplication.LeaveApplicationID,
            ControllerName: "LeaveApplication",
            ActionName: sActionName,
            TableId: "tblLeaveApplication",
            IsWinClose: false,
            Message: sMessage
        };

        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.LeaveApplicationID > 0)
                {
                    debugger;
                    if(response.obj.RecommendedBy>0 && response.obj.ApproveBy<=0){
                        $('#btnRecommendation').hide();
                    }
                    if(response.obj.ApproveBy>0 && response.obj.CancelledBy<=0){
                        $('#btnRecommendation,#btnApprove').hide();
                    }
                    else if(response.obj.CancelledBy>0){
                        $('#btnRecommendation,#btnApprove,#btnCancel').hide();
                    }
                    
                    if(parseInt(_oClientOperationSetting.Value) == 1 && (_bFlag == false)) {
                        $('#btnSaveLeaveApplication').hide();
                        $('#btnApproveLeaveApplication').show();
                        $('#btnApproveLeaveApplication').focus();
                        $('#btnApproveLeaveApplication').addClass('buttonBorder');

                        GetLeaveAppInfo(response.obj,'Appro');
                        _bFlag = true;

                    } else{
                        //_oLeaveApplication={LeaveApplicationID:0, EmployeeName : "", BusinessUnitName : "", LocationName : "",DepartmentName : "",DesignationName : ""};
                        _oLeaveApplication = null;
                        _oEmployee={EmployeeID:0};
                        $('#btnSaveLeaveApplication').show();
                        $('#btnApproveLeaveApplication').hide();
                        //RefreshControlLeaveApp(_oLeaveApplication);
                        _bFlag = false;
                    }

                    //if(sActionName!="LeaveApplication_Insert")
                    //{
                    //    $('#winLeaveApplication').icsWindow('close');
                    //}
                    debugger;
                    if((_bFlag == false))//sActionName=="LeaveApplication_Insert" && && parseInt(_oClientOperationSetting.Value) != 1 
                    {
                        RefreshControlLeaveApp(_oLeaveApplication);
                        ResetControllLeaveApp();
                        $('#txtEmployee').val("");
                        $('#txtEmployee').focus();
                    }

                }
            }
        });
    }

    $("#btnSaveLeaveApplication").click(function () {
        debugger
        if (!ValidationLeaveApp()) return;
        var oLeaveApplication = RefreshObjectLeaveApp();
        var sActionName=(oLeaveApplication.LeaveApplicationID>0) ? "LeaveApplication_Update": "LeaveApplication_Insert";
        var sMessage=(oLeaveApplication.LeaveApplicationID>0)?"Update Successfully." : "Save Successfully.";
        
        LeaveApplicationOperation(oLeaveApplication,sActionName,sMessage);

        $("#txtEmployee").focus();

    });

    $("#btnRecommendLeaveApplication").click(function () {
        if (!ValidationLeaveApp()) return;
        var oLeaveApplication = RefreshObjectLeaveApp();
        var sActionName="LeaveApplication_Recommend";
        var sMessage= "Recommend Successfully.";
        LeaveApplicationOperation(oLeaveApplication,sActionName,sMessage);
    });


    $("#btnApproveLeaveApplication").click(function () {
        if (!ValidationLeaveApp()) return;
        var oLeaveApplication = RefreshObjectLeaveApp();
        var sActionName="LeaveApplication_Approved";
        var sMessage= "Leave Approved Successfully.";
        LeaveApplicationOperation(oLeaveApplication,sActionName,sMessage);
    });

    $("#btnCancelLeaveApplication").click(function () {
        if (!ValidationLeaveApp()) return;
        var oLeaveApplication = RefreshObjectLeaveApp();
        var sActionName="LeaveApplication_Cancel";
        var sMessage= "Leave Cancel Successfully.";
        LeaveApplicationOperation(oLeaveApplication,sActionName,sMessage);
    });

    $("#btnCloseLeaveApplication").click(function () {
        ResetControllLeaveApp();
        $("#winLeaveApplication").icsWindow('close');
    });

    var bSaveShow = true;
    var nLeaveID_ADj=0;
    var SelectedRowIndex_ADj=0;

    $("#btnLeaveAdjustment").click(function () {
        var oLeaveApplication = $("#tblLeaveApplication").datagrid("getSelected");
        if (oLeaveApplication == null || oLeaveApplication.LeaveApplicationID <= 0) { alert("Please select an item from list!"); return; }
        if (oLeaveApplication.ApproveBy<=0) { alert('This Item is not approved, you can edit or delete it.'); return; }
        ResetControllLeaveApp();
        LayoutControllLeaveApp("btnLeaveAdjustment");
        $(".tdRecommendation,.tdApproval").hide();
        GetLeaveAppInfo(oLeaveApplication,'Leave Adjustment');
        _oEmployee.EmployeeID=oLeaveApplication.EmployeeID;
        nLeaveID_ADj=oLeaveApplication.LeaveApplicationID;
        SelectedRowIndex_ADj = $('#tblLeaveApplication').datagrid('getRowIndex', oLeaveApplication);
        bSaveShow= false;
    });

    /*--------------------Employee Search By Name-----------*/


    $("#btnResetEmployeeLAPicker").click(function () {
        _IsLeaveAppEmp=false;
        $("#txtEmployeeNameLAPicker").val("");
        _sEmployeeIDs = "";
        _oEmployee={EmployeeID:0};
    });
    
    $('#txtEmployee').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            debugger;
            var sCodeName = $.trim($("#txtEmployee").val());
            if(sCodeName==''){alert("Please enter name or code to search."); return;}
            _IsLeaveAppEmp=false;
            SearchEmployeeByText(sCodeName,false,false, false);
        }
        else if(code == 8){
            _IsLeaveAppEmp=false;
            $("#txtEmployee").val("");
            _oEmployee={EmployeeID:0};
            ResetControllLeaveApp();
        }

    });

    $('#txtEmployeeNameLAPicker').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployeeNameLAPicker").val());
            if(sCodeName==''){alert("Please enter name or code to search."); return;}
            _IsLeaveAppEmp=true;
            SearchEmployeeByTextAdv(sCodeName);

        }
        else if(code == 8){
            _IsLeaveAppEmp=false;
            if(_oEmployee!=null && _oEmployee.EmployeeID>0){
                $("#txtDepartmentLAPicker").val("");
                _nDeptID=0;
            }
            $("#txtEmployeeNameLAPicker").val("");
            _oEmployee={EmployeeID:0};
            LoadLeave();
            $("#btnDepartmentPickerLAPicker,#btnResetDepartmentPickerLAPicker").prop("disabled", false);
        }
    });


    $('#txtResponsiblePerson').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtResponsiblePerson").val());
            if(sCodeName==''){
                alert("Please enter name or code to search."); 
                $('#txtRequestToApproval').focus();
                return;}
            SearchEmployeeByText(sCodeName,false,true, false);
            
        }
        else if(code == 8){
            $("#txtResponsiblePerson").val("");
            _nResponsiblePersonID=0;
        }
    });


    $('#cboRequestToApproval').change(function(e){
        $("#txtRequestToApproval").val("");
        _nApprovalEmpID=0;
    });
    $('#txtRequestToApproval').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            debugger;
            var sCodeName = $.trim($("#txtRequestToApproval").val());
            if(sCodeName==''){
                alert("Please enter name or code to search."); 
                $('#btnSaveLeaveApplication').focus(); 
                $('#btnSaveLeaveApplication').addClass('buttonBorder'); 
                return;
            }
            SearchEmployeeByText(sCodeName,true,false,false);

        }
        else if(code == 8){
            $("#txtRequestToApproval").val("");
            _nApprovalEmpID=0;
            $('#cboRequestToApproval').prop('disabled',false);
        }
    });


    function SearchEmployeeByText(sEmpNameCode,bIsApprovalEmployee,bIsEmployeeSearch,bIsEmployeeSearch_FromCollection){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearch(oPickerParam, bIsApprovalEmployee,bIsEmployeeSearch,bIsEmployeeSearch_FromCollection);//multiplereturn, winclassName
                    $('#tblEmployeePickerTextSearch').datagrid('selectRow', 0);
                }
                else { 
                    alert(response.objs[0].ErrorMessage); 
                }
            }
        });
    }

    function IntializeEmployeePickerTextSearch(oPickerobj, bIsApprovalEmployee,bIsEmployeeSearch,bIsEmployeeSearch_FromCollection)
    {

        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if(bIsEmployeeSearch){
                    _nResponsiblePersonID=oreturnObj.EmployeeID;
                    $('#txtResponsiblePerson').val(oreturnObj.NameCode);
                    $('#txtRequestToApproval').focus();
                }
                else{
                    if(bIsApprovalEmployee)
                    {
                        if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                        {
                            _nApprovalEmpID=oreturnObj.EmployeeID;
                            $('#txtRequestToApproval').val(oreturnObj.NameCode);
                            $('#cboRequestToApproval').val(0);
                            $('#cboRequestToApproval').prop('disabled',true);
                            $('#btnSaveLeaveApplication').focus(); 
                        }
                    }
                    else
                    {
                        if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                        {
                            PickEmployee(oreturnObj);
                        }
                    }

                    if(bIsEmployeeSearch_FromCollection)
                    {
                        if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                        {
                            _nEmployee_Search_EmpID=oreturnObj.EmployeeID;
                            $('#txtEmployee_Search').val(oreturnObj.NameCode);
                        }
                    }
                }

            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {
                    if(bIsEmployeeSearch){
                        _nResponsiblePersonID=oreturnObj.EmployeeID;
                        $('#txtResponsiblePerson').val(oreturnObj.NameCode);
                        $("#txtRequestToApproval").select.focus();
                    }
                    else
                    {
                        if(bIsApprovalEmployee)
                        {
                            if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                            {
                                _nApprovalEmpID=oreturnObj.EmployeeID;
                                $('#txtRequestToApproval').val(oreturnObj.NameCode);
                                $('#cboRequestToApproval').val(0);
                                $('#cboRequestToApproval').prop('disabled',true);
                            }
                        }
                        else
                        {
                            if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                            {
                                PickEmployee(oreturnObj);
                            }
                        }
                        if(bIsEmployeeSearch_FromCollection)
                        {
                            if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                            {
                                _nEmployee_Search_EmpID=oreturnObj.EmployeeID;
                                $('#txtEmployee_Search').val(oreturnObj.NameCode);
                            }
                        }
                    }
                }
            }
        });
    }

    function SearchEmployeeByTextAdv(sEmpNameCode){
        var oEmployee = { Params: sEmpNameCode +'~'+ 0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsByEmpCode",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {

                    var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winEmployeePickerTextSearch',
                        winclass:'clsEmployeePickerTextSearch',
                        winwidth: 455,
                        winheight: 460,
                        tableid: 'tblEmployeePickerTextSearch',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee list'
                    };

                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerTextSearchAdv(oPickerParam);//multiplereturn, winclassName
                    $('#tblEmployeePickerTextSearch').datagrid('selectRow', 0);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeEmployeePickerTextSearchAdv(oPickerobj)
    {

        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
            if (oPickerobj.winid == 'winEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _sEmployeeIDs=oreturnObj.EmployeeID;
                    $('#txtEmployeeNameLAPicker').val(oreturnObj.NameCode);
                }
            }
        });

        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
                if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
                {

                        if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                        {
                            _sEmployeeIDs=oreturnObj.EmployeeID;
                            $('#txtEmployeeNameLAPicker').val(oreturnObj.NameCode);
                        }
                    }
                }
        });
    }

    /*---------------- Employee Adv Search----------------*/

    function InitializeEmployeeAdvSearch(){
        $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
        $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));
        $("#cboEmployeeType").icsLoadCombo({
            List: _oEmployeeTypes,
            OptionValue: "EmployeeTypeID",
            DisplayText: "Name"
        });
        $("#cboShift_EmpSearch").icsLoadCombo({
            List: _oShifts,
            OptionValue: "ShiftID",
            DisplayText: "ShiftWithDuration"
        });
        $("#cboEmployeeCardStatus").icsLoadCombo({
            List: _oEmployeeCSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboEmployeeWorkigStatus").icsLoadCombo({
            List: _oEmployeeWSs,
            OptionValue: "Value",
            DisplayText: "Text"
        });
        $("#cboBU").icsLoadCombo({
            List: _oBusinessUnits,
            OptionValue: "BusinessUnitID",
            DisplayText: "Name"
        });

        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();

        var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                     {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                     {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

        $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
            List: oMonths,
            OptionValue: "MonthID",
            DisplayText: "Name",
            InitialValue:''
        });

        LoadDaysInMonth();
    }

    function LoadDaysInMonth(){
        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom,#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    }

    $("#cboDateType").change(function(e){
        if($("#cboDateType").val()==1){
            $("#regionDateTo").hide();
        }
        else{
            $("#regionDateTo").show();
        }
    });

    $("#cboMonthFrom").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayFrom").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    $("#cboMonthTo").change(function(e){
        var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo").val())+1,0)).getDate();
        var oDays=[];
        for(var i=1;i<=nDaysInMonth;i++){
            oDays.push({DayID:i,Day:i});
        }
        $("#cboDayTo").icsLoadCombo({
            List: oDays,
            OptionValue: "DayID",
            DisplayText: "Day",
            InitialValue:''
        });
    });

    function EmployeePickerReset(){
        _nLastEmployeeID = 0;
        _sEmployeeIDs = "";
        _bNext = false;
        _nLoadRecords = 0;
        _nRowLength = 0;
        _sAttendanceSchemeID="";
        _sLocationID = "";
        _sDepartmentID = "";
        _sDesignationID = "";
        $(".txtReset").val("");
        $(".cboReset").val(0);
        $(".chkReset").prop("checked",false);

        $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
        LoadDaysInMonth();

        DynamicRefreshList([], "tblEmployeesForPicker");
        $("#lblcount").html("");
        $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
        $('#txtFrom').numberbox('setValue',1);
        $('#txtTo').numberbox('setValue',50);
        $("#lblRange1").hide();
    }

    $("#btnEmployeePicker").click(function () {
        _IsLeaveAppEmp=false;
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $('#chkRange,#chkRange_Search').click(function()
    {
        if($("#chkRange").is(':checked'))
        {
            $("#lblRange1").show();
        }
        else
        {
            $("#lblRange1").hide();
        }
        if($("#chkRange_Search").is(':checked'))
        {
            $("#lblRange1_Search").show();
        }
        else
        {
            $("#lblRange1_Search").hide();
        }
    });

    $('#btnEmpPickerSearch').click(function () {
        _bNext = false;
        EmployeeAdvSearch();
    });

    function Next() {
        var oEmployees = [];
        oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
        if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
        _nRowLength = oEmployees.length;
        _bNext = true;
        EmployeeAdvSearch();
    }

    function EmployeeAdvSearch(){
        if (!_bNext) {
            _nRowLength = 0;
            _nLastEmployeeID = 0;
        }
        _nLoadRecords = document.getElementById("txtTo").value;

        if ($("#chkRange").is(':checked')) {
            if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
            var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
            var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
            if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
            _nRowLength = nRangeFrom - 1;
            _nLoadRecords = nRangeTo - nRangeFrom + 1;
        }

        var sName = $.trim($("#txtEmployeeName").val());
        var sCode = $.trim($("#txtEmpCodeForSearch").val());
        var sEnrollNo = $.trim($("#txtEnrollNo").val());
        var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
        var nEmployeeTypeID=$("#cboEmployeeType").val();
        var nShiftID=$("#cboShift_EmpSearch").val();
        var nCardStatus=$("#cboEmployeeCardStatus").val();
        var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
        var nDateType=$("#cboDateType").val();
        var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
        var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
        var sGender= $("#cboGender option:selected").text();

        var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
        var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
        var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

        var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
        var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

        var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
        var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

        var bIsJoiningDate = $("#chkJoiningDate").is(':checked');
        var dtDateFrom = $('#dtDateFrom').datebox('getValue');
        var dtDateTo = $('#dtDateTo').datebox('getValue');

        if(bIsJoiningDate)
        {
            if(new Date(dtDateFrom)>new Date(dtDateTo))
            {
                alert("Invalid Joining Date Range!");
                return;
            }
        }

        var nBusinessUnitID = $("#cboBU").val();
        var nCategory=$('#cboCategory').val();
        var sPresentAddress=$('#txtPresentAddress').val();
        var sPermanentAddress=$('#txtPermanentAddress').val();

        if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentID=="" && _sDesignationID=="" &&
           nEmployeeTypeID==0 && sGender=="" && nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
           bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0
            && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBMMIDs=="")
        {
            alert("Please enter you selection criteria."); return false;
        }

        var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentID + '~' +_sDesignationID + '~' +
                     sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                     bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                     sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+'~'+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                     +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBMMIDs;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/Employee/EmployeeSearch",
            traditional: true,
            data: JSON.stringify({ sParam: sParam }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oEmps = jQuery.parseJSON(data);
                if (oEmps != null) {
                    if (oEmps.length > 0) {
                        if(!_bNext){
                            DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                        }
                        else{
                            var bAppend=false;
                            var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                            if(oTEmps.length>0){
                                for (var i = 0; i < oEmps.length; i++) {
                                    var IsAppend=true;
                                    for (var j = 0; j < oTEmps.length; j++) {

                                        if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                            IsAppend=false;
                                            break;
                                        }
                                    }
                                    if(IsAppend){
                                        bAppend=true;
                                        $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                    }
                                }
                            }
                            else{
                                for (var j = 0; j < oEmps.length; j++) {
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                                }
                            }
                            if(!bAppend){
                                alert("No more data found!");
                            }
                        }

                    }
                    else {
                        alert("No more data found!");
                    }
                    var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                    document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                    _bNext = false;
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function PickEmployee(oEmployee){
        debugger;
        _oEmployee=oEmployee;
        if(_IsLeaveAppEmp){
            $('#txtEmployeeNameLAPicker').val(_oEmployee.Name+","+_oEmployee.BUName+","+_oEmployee.LocationName+","+_oEmployee.DepartmentName+","+_oEmployee.DesignationName);
            $("#btnDepartmentPickerLAPicker,#btnResetDepartmentPickerLAPicker").prop("disabled", true);
            $('#txtDepartmentLAPicker').val(_oEmployee.DepartmentName);
            _nDeptID= _oEmployee.DepartmentID;
        }
        _oEmployeeLeaveLedgers=[];

        if(_oEmployee.EmployeeID>0){
            var oEmployeeLeaveLedger={
                EmployeeID:_oEmployee.EmployeeID
            }
            var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oEmployeeLeaveLedger,
                ControllerName: "EmployeeLeaveLedger",
                ActionName: "Gets",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {
                $('#txtEmployee').val(_oEmployee.Name+","+_oEmployee.BUName+","+_oEmployee.LocationName+","+_oEmployee.DepartmentName+","+_oEmployee.DesignationName);
                $("#txtEmployee").focus();
                if (response.status && response.objs != null)
                {
                    if (response.objs.length>0 && response.objs[0].EmpLeaveLedgerID > 0) {
                        EmployeeLeaveLedger(response.objs, '');
                    }
                    else{
                        $("#cboLeaveLedger").empty();
                    }
                }
            });
        }
    }

    $("#btnEmployeePickerOk").click(function () {
        var oEmployee = null;
        oEmployee = $('#tblEmployeesForPicker').datagrid('getSelected');
        if (oEmployee.EmployeeID <= 0) { alert("please select an employee.");return; }
        PickEmployee(oEmployee);
        $("#winEmployeePicker").icsWindow('close');
        $("#txtEmployee").select().focus();
    });

    $("#btnEmployeePickerClose").click(function () {
        $("#winEmployeePicker").icsWindow('close');
    });


    /*-------------Attendance Schema Picker----------------*/
    $("#btnAttScheme").click(function(e){
        var oAttendanceScheme={AttendanceSchemeID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oAttendanceScheme,
            ControllerName: "AttendanceScheme",
            ActionName: "GetsAttendanceSchemeCurrentSession",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].AttendanceSchemeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winAttendanceScheme',
                        winclass:'clsAttendanceScheme',
                        winwidth: 420,
                        winheight: 460,
                        tableid: 'tblAttendanceSchemePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Attendance Scheme List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeAttendancePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winAttendanceScheme')
            {
                if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                    _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                }
                else{
                    alert("Please select a schema.");
                }
            }
        });
    }

    $("#btnResetAttScheme").click(function(e){
        $('#txtAttendanceScheme').val("");
        _sAttendanceSchemeID="";
    });

    /*-------------Location Picker----------------*/

    $("#btnLocationPicker").click(function(e){
        var nBusinessUnitID = $("#cboBU").val();
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0,BusinessUnitID:nBusinessUnitID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    });

    //$("#btnLocationPickerOk").click(function(e){
    //    var oLocation = $('#locationtree').tree('getSelected');
    //    if(oLocation!=null && oLocation.id>0){
    //        $("#winLocationPicker").icsWindow('close');
    //        $('#txtLocation').val(oLocation.text);
    //        _sLocationID= oLocation.id;
    //    }
    //    else{
    //        alert("Please select a location.");
    //    }
    //});

    $("#btnLocationPickerClose").click(function(e){
        $("#winLocationPicker").icsWindow('close');
    });

    $("#btnResetLocationPicker").click(function(e){
        $('#txtLocation').val("");
        _sLocationID="";
    });
    /*-------------Department Picker----------------*/

    function DepartmentPicker(nDeptID){
        $("#winDepartmentPicker").icsWindow('open');
        var oDepartment={DepartmentID:0,BusinessUnitIDs:$('#cboBU').val(),LocationIDs:_sLocationID};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDepartment,
            ControllerName: "Department",
            ActionName: "GetsDepartments",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.id > 0) {
                    $('#departmenttree').tree({ data: [response.obj] });
                }
            }
        });
    }

    $("#btnDepartmentPicker").click(function(e){
        _IsLeavAppDept=false;
        DepartmentPicker(0);
    });

    $("#btnDepartmentPickerOk").click(function(e){

        var oDepartment = $('#departmenttree').tree('getSelected');
        if(oDepartment!=null && oDepartment.id>0){
            $("#winDepartmentPicker").icsWindow('close');
            if(!_IsLeavAppDept){
                $('#txtDepartment').val(oDepartment.text);
                _sDepartmentID= oDepartment.id;
            }
            else{

                $('#txtDepartmentLAPicker').val(oDepartment.text);
                _nDeptID= oDepartment.id;
            }

        }
        else{
            alert("Please select a department.");
        }
    });

    $("#btnDepartmentPickerClose").click(function(e){
        $("#winDepartmentPicker").icsWindow('close');
    });

    $("#btnResetDepartmentPicker").click(function(e){
        $('#txtDepartment').val("");
        _sDepartmentID="";
    });


    /*-------------Designation Picker----------------*/


    $("#btnDesignationPicker").click(function(e){
        var oDesignation={
            DesignationID:0,
            Params: $('#cboBU').val()+'~'+_sLocationID+'~'+ _sDepartmentID
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oDesignation,
            ControllerName: "Designation",
            ActionName: "Gets",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].DesignationID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winDesignation',
                        winclass:'clsDesignation',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblDesignation',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Designation List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName

                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    });

    function IntializeDesignationPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {

            var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if (oPickerobj.winid == 'winDesignation')
            {
                if(oDesignation!=null && oDesignation.DesignationID>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();
                    $('#txtDesignation').val(oDesignation.Name);
                    _sDesignationID=oDesignation.DesignationID;
                }
                else{
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetDesignationPicker").click(function(e){
        $('#txtDesignation').val("");
        _sDesignationID="";
    });

    /*------------- Start Block Picker----------------*/

    $("#btnBlock").click(function(e){
        BlockPicker();
    });

    function BlockPicker()
    {
        var oBlockMachineMapping={
            ProductionProcessInt:0,
            DepartmentID:0,
            BlockName:""
        }
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oBlockMachineMapping,
            ControllerName: "BlockMachineMapping",
            ActionName: "BlockMachineMapping_Search",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].BMMID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
                    var bmultiplereturn=true;

                    var oPickerParam = {
                        winid: 'winBlock',
                        winclass:'clsBlock',
                        winwidth: 320,
                        winheight: 460,
                        tableid: 'tblShift',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: bmultiplereturn,
                        searchingbyfieldName:'BlockName',
                        windowTittle: 'Block List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
        });
    }

    function IntializeBlockPickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            var oBlocks=[];
            oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
            if (oPickerobj.winid == 'winBlock')
            {
                if(oBlocks!=null && oBlocks.length>0){
                    $("#"+oPickerobj.winid).icsWindow("close");
                    $("#" + oPickerobj.winid).remove();

                    for(var i=0; i<oBlocks.length; i++)
                    {
                        _sBlockNames += oBlocks[i].BlockName+",";
                        _sBMMIDs += oBlocks[i].BMMID+",";

                    }
                    _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                    _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
                    $("#txtBlock").val(_sBlockNames);
                }
                else
                {
                    alert("Please select a designation.");
                }
            }
        });
    }

    $("#btnResetBlock").click(function(e){
        $('#txtBlock').val("");
        _sBlockNames="";
        _sBMMIDs = "";
    });

    $("#txtBlock").keypress(function(e){
        if (e.which == 13)
        {
            BlockPicker();
        }
    });
    /*------------- End Block Picker----------------*/

    /*---------------- Adv Search leave Application ----------------*/

    function InitializeLeaveAppAdvSearch(){
        LoadLeave();

        $("#cboApplicationTypeLAPicker").icsLoadCombo({
            List: _oApplicationTypes,
            OptionValue: "Value",
            DisplayText: "Text",
            //InitialValue: ""
        });

        $("#cboLeaveStatusLAPicker").icsLoadCombo({
            List: _oLeaveStatuss,
            OptionValue: "Value",
            DisplayText: "Text",
            //InitialValue: ""
        });
    }

    function LoadLeave(){
        $("#cboLeaveLAPicker").icsLoadCombo({
            List: _oLeaveHeads,
            OptionValue: "LeaveHeadID",
            DisplayText: "Name",
            //InitialValue: ""
        });
    }

    function  LeaveAppPickerReset(){
        debugger
        _oEmployee=null;
        LoadLeave();
        _sBusinessUnitIds = "";
        _sLocationID = "";
        _sDepartmentIds = "";
        _sDesignationIds = "";
        $(".txtResetLAPicker").val("");
        $(".cboResetLAPicker").val(0);
        $(".chkResetLAPicker").prop("checked",false);
        $("#dtStartDateLAPicker,#dtEndDateLAPicker").datebox('setValue',icsdateformat(new Date()));
        DynamicRefreshList([],'tblLeaveApplicationForPicker');

        $('#txtFrom_Search').numberbox({min:0, precision:0 });
        $('#txtTo_Search').numberbox({min:0, precision:0 });
        $('#txtFrom_Search').numberbox('setValue',1);
        $('#txtTo_Search').numberbox('setValue',50);
        $("#lblRange1_Search").hide();
        $("#chkRange_Search").prop('checked', false);
        $("#lblcount_Search").html("");

    }

    $("#btnDepartmentPickerLAPicker").click(function(e){
        _IsLeavAppDept=true;
        DepartmentPicker((_oEmployee!=null && _oEmployee.EmployeeID>0)?_oEmployee.DepartmentID:0);
    });

    $("#btnResetDepartmentPickerLAPicker").click(function(e){
        _IsLeavAppDept=false;
        _nDeptID=0;
        $('#txtDepartmentLAPicker').val("");
        $("#btnDepartmentPickerLAPicker,#btnResetDepartmentPickerLAPicker").prop("disabled", false);
        LoadLeave();
    });


    $("#btnEmployeeLAPicker").click(function () {
        _IsLeaveAppEmp=true;
        EmployeePickerReset();
        $("#winEmployeePicker").icsWindow("open", " Employee Picker");
    });

    $("#btnResetEmployeeLAPicker").click(function () {
        _IsLeaveAppEmp=false;
        if(_oEmployee!=null && _oEmployee.EmployeeID>0){
            $("#txtDepartmentLAPicker").val("");
            _nDeptID=0;
        }
        $("#txtEmployeeNameLAPicker").val("");
        _oEmployee=null;
        LoadLeave();
        $("#btnDepartmentPickerLAPicker,#btnResetDepartmentPickerLAPicker").prop("disabled", false);
    });


    $('#btnAdvSearch').click(function(e){
        LeaveAppPickerReset();
        $("#winLeaveApplicationAdvSearch").icsWindow("open", "Search Leave Application");

    });

    $('#btnResertLAPicker').click(function(e){
        LeaveAppPickerReset();
    });

    //$('#btnSearchLAPicker').click(function(e){
    var nTotalSearh=0;
    function SearchLAPicker()
    {
        if(!_bNext_LeaveSearch)
        {
            _nRowLength_LeaveSearch  = 0;
            _nLastLeaveID = 0;
            nTotalSearh=0;
        }

        var nEmpID= (_oEmployee!=null && _oEmployee.EmployeeID>0)?_oEmployee.EmployeeID:0;
        var nApplicationNature=$("#cboApplicationTypeLAPicker").val();
        var nLeaveHeadLedger=$("#cboLeaveLAPicker").val();
        var nLeaveType=$("#cboLeaveTypeLAPicker").val();
        var nLeaveStatus=$("#cboLeaveStatusLAPicker").val();
        var bIsPaid= ($("#chkIsPaidLAPicker").is(':checked'))? 1 : 0;
        var bIsUnPaid = ($("#chkIsUnPaidLAPicker").is(':checked'))? 1 : 0;

        _nLoadRecords_LeaveSearch  = $("#txtTo_Search").val();
        if($("#chkRange_Search").is(":checked") == true)
        {
            var RangeFrom = 0;
            var RangeTo = 0;
            RangeFrom = parseFloat($("#txtFrom_Search").val());
            RangeTo = parseFloat($("#txtTo_Search").val());

            if(RangeFrom > RangeTo)
            {
                alert("Invalid Range !");
                return;
            }
            _nRowLength_LeaveSearch  = 0;
            _nLoadRecords_LeaveSearch  = 0;

            _nRowLength_LeaveSearch  = RangeFrom-1;
            _nLoadRecords_LeaveSearch  = RangeTo - RangeFrom +1;
        }

        //var sTempString = nEmpID +"~"+ _nDeptID +"~"+$('#dtStartDateLAPicker').datebox('getValue')+"~"+$('#dtEndDateLAPicker').datebox('getValue')+"~"+nApplicationNature+"~"+nLeaveHeadLedger+"~"+nLeaveType+"~"+nLeaveStatus+"~"+bIsPaid+'~'+bIsUnPaid +'~'+ $("#chkIsDateSearch").is(':checked')+"~"+_nRowLength_LeaveSearch +"~"+_nLoadRecords_LeaveSearch;
        var sTempString = _sBusinessUnitIds +"~"+ _sLocationID + "~" + _sDepartmentIds + "~" + _sDesignationIds + "~" + _sEmployeeIDs +"~"+$('#dtStartDateLAPicker').datebox('getValue')+"~"+$('#dtEndDateLAPicker').datebox('getValue')+"~"+nApplicationNature+"~"+nLeaveHeadLedger+"~"+nLeaveType+"~"+nLeaveStatus+"~"+bIsPaid+"~"+bIsUnPaid + "~"+_nRowLength_LeaveSearch +"~"+_nLoadRecords_LeaveSearch;//+'~'+ $("#chkIsDateSearch").is(':checked')+


        var oLeaveApplication={Params:sTempString};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLeaveApplication,
            ControllerName: "LeaveApplication",
            ActionName: "SearchLeaveApplication",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs!=null) {
                if (response.objs.length>0 && response.objs[0].LeaveApplicationID>0 ) {
                    for (var j = 0; j < response.objs.length; j++)
                    {
                        $('#tblLeaveApplicationForPicker').datagrid('appendRow',response.objs[j]);
                    }
                }
                else
                {
                    alert("No more data found!");
                }

                nTotalSearh+=response.objs.length;
                document.getElementById("lblcount_Search").innerHTML = " | Count ="+ nTotalSearh;
                _bNext_LeaveSearch = false;
            }
        });
    }

    function Next_LeaveSearch()
    {
        var oLeaves =[];
        oLeaves=$('#tblLeaveApplicationForPicker').datagrid('getRows');
        _nRowLength_LeaveSearch  = oLeaves.length;
        _bNext_LeaveSearch = true;

        if (oLeaves.length<=0)
        {
            alert('Please Select Criteria and click on "Search" to find information.!!');
            return;
        }
        var oLeave=oLeaves[oLeaves.length-1];

        if (_nLastLeaveID==oLeave.LeaveApplicationID)
        {
            alert('No more data found');
            return;
        }
        _nLastLeaveID=oLeave.LeaveApplicationID;
        SearchLAPicker();
    }

    $("#btnLeaveAppPickerOk").click(function () {
        var oLeaveApplications = [];
        oLeaveApplications = $('#tblLeaveApplicationForPicker').datagrid('getChecked');
        if (oLeaveApplications.length <= 0) { alert("please select at least one item.");return; }
        $("#winLeaveApplicationAdvSearch").icsWindow("close");
        //DynamicRefreshList(oLeaveApplications,'tblLeaveApplication');
        //for (var j = 0; j < oLeaveApplications.length; j++)
        //{
        //    $('#tblLeaveApplication').datagrid('appendRow',oLeaveApplications[j]);
        //}
        Append(oLeaveApplications);

    });

    $('#btnLeavePickerClose').click(function(e){
        $("#winLeaveApplicationAdvSearch").icsWindow("close");
    });

    function GetAttendance()
    {
        debugger;
        DynamicRefreshList([],'tblShowAttendance');

        if(_oEmployee.EmployeeID<=0)
        {
            alert('Please enter an employee!');
            return;
        }
        //var dtStartDate = $('#dtStartDate').datebox("getValue");
        //var dtEndDate = $('#dtEndDate').datebox("getValue");
        
        var sDayFrom = $("#txtDayPartFrom").val();
        var sMonthFrom = $("#txtMonthPartFrom").val();
        var sYearFrom = $("#txtYearPartFrom").val();
        
        var sDayTo = $("#txtDayPartTo").val();
        var sMonthTo = $("#txtMonthPartTo").val();
        var sYearTo = $("#txtYearPartTo").val();
        
        var dtStartDate = sDayFrom + " " + sMonthFrom + " " + sYearFrom;
        //var sStartDateTime = sDayFrom.concat(sMonthFrom);
        //sStartDateTime = sStartDateTime.concat(sYearFrom);

        //var sEndDateTime = sDayTo.concat(sMonthTo);
        var dtEndDate = sDayTo + " " + sMonthTo + " " + sYearTo;
        //sEndDateTime = sEndDateTime.concat(sYearTo);
        
        

        var diff= (new Date(dtEndDate)-new Date(dtStartDate))/1000/60/60/24+1;
        if(diff<=0)
        {
            alert("Invalid Date!");
            return;
        }

        if(diff>10)
        {
            dtStartDate=dtEndDate;
        }
        var nEmployeeID=_oEmployee.EmployeeID;
        sParams=nEmployeeID+"~"+dtStartDate+"~"+dtEndDate;

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/AttendanceDaily/EmployeeWiseAttendanceSearch",
            traditional: true,
            data: JSON.stringify({ sTemp : sParams}),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oAttendanceDailys = jQuery.parseJSON(data);
                var oNewList=[];
                if(oAttendanceDailys.length>0 && oAttendanceDailys[0].ErrorMessage=="")
                {
                    $("#winShowAttendance").icsWindow("open");
                    var oNewList=[];
                    if(diff>10)
                    {
                        diff=1;
                    }
                    var oDate= new Date(dtStartDate);
                    for(var i=0; i<diff; i++)
                    {
                        oDate.getDay();
                        var sDate= icsdateformat(oDate);
                        var bExist=false;
                        for(var j=0; j<oAttendanceDailys.length; j++)
                        {
                            if(sDate==oAttendanceDailys[j].AttendanceDateInString)
                            {
                                oNewList.push(oAttendanceDailys[j]);
                                bExist=true;
                                break;
                            }
                        }
                        if(!bExist)
                        {
                            var oObj= new Object();
                            oObj= new Object();
                            oObj.AttendanceDateInString=sDate;
                            oObj.AttStatusInST_24="--";
                            oNewList.push(oObj);
                        }
                        oDate.setDate(oDate.getDate()+1)
                    }
                    DynamicRefreshList(oNewList,'tblShowAttendance');
                }
                else if(oAttendanceDailys[0].ErrorMessage=="Data Not Found !")
                {
                    $("#winShowAttendance").icsWindow("open");
                    var oObj= new Object();
                    var oItems=[];
                    oObj= new Object();
                    oObj.AttendanceDateInString=dtEndDate;
                    oObj.AttStatusInST_24="--";
                    oNewList.push(oObj);
                    DynamicRefreshList(oNewList,'tblShowAttendance');
                }
                else
                {
                    alert(oAttendanceDailys[0].ErrorMessage);
                }
                if(bSaveShow){ $("#btnSaveLeaveApplication").show();}

            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    $("#btnShowAttendanceClose").click(function(){
        $("#winShowAttendance").icsWindow("close");
    });

    $("#cboLeaveLedger").click(function () {
        debugger;
        var nEmpLeaveLedgerID= $("#cboLeaveLedger").val();
        for(var i=0;i<_oEmployeeLeaveLedgers.length;i++)
        {
            if(_oEmployeeLeaveLedgers[i].EmpLeaveLedgerID==nEmpLeaveLedgerID)
            {
                if(_oEmployeeLeaveLedgers[i].IsLWP)
                {
                    $("#rdbtnPaid").prop('checked', false);
                    $("#rdbtnUnPaid").prop('checked', true);
                }
                else
                {
                    $("#rdbtnPaid").prop('checked', true);
                    $("#rdbtnUnPaid").prop('checked', false);
                }
                break;
            }
            else
            {
                $("#rdbtnPaid").prop('checked', false);
                $("#rdbtnUnPaid").prop('checked', false);
            }
        }
    });

    $("#cboLeaveType").click(function () {
        var nLeaveType= $("#cboLeaveType").val();

        if(nLeaveType==1 || nLeaveType==0)
        {
            $('#divForDay').show();
            $('#divSpinner').hide();

            //$('#tptimeSpinner').timespinner({'disabled': true});
            //$("#txtDurationInHour").prop("disabled", true);
            //$("#spEndDate").show();
        }
        else
        {
            $('#tptimeSpinner').timespinner({'disabled': false});
            $('#divForDay').hide();
            $('#divSpinner').show();
            //$("#txtDurationInHour").prop("disabled", false);
            //$("#spEndDate").hide();
        }
    });

    $("#btnResetEmployeePicker").click(function () {
        $("#txtEmployee").val("");
        _oEmployee.EmployeeID=0;
    });

    function Search_By_Code_Or_Date()
    {
        var bDate=$("#chkIsDate").is(':checked');
        if(!bDate && _nEmployee_Search_EmpID<=0)
        {
            alert("Please enter employee name or code or check date!");
            return;
        }
        var sStartDate="";
        var sEndDate="";
        if($("#chkIsDate").is(':checked'))
        {
            sStartDate=$('#dtStartDate_Search').datebox('getValue');
            sEndDate=$('#dtEndDate_Search').datebox('getValue');
        }

        //var bReportingPerson=$("#chkReportingPerson").is(':checked');
        var nPersons=$("#cboPersons").val();
        var sTempString = _nEmployee_Search_EmpID +"~"+ sStartDate +"~"+sEndDate+"~"+nPersons;
        var oLeaveApplication={Params:sTempString};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLeaveApplication,
            ControllerName: "LeaveApplication",
            ActionName: "SearchLeaveApplicationByEmpAndDate",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs!=null) {
                if (response.objs.length>0 && response.objs[0].LeaveApplicationID>0 ) {
                    Append(response.objs);
                }
                else{
                    alert("No data found.");
                    DynamicRefreshList([],'tblLeaveApplication');
                }
            }
        });
    }

    $('#txtCEmployee').click(function (e)
    {
        _nEmployee_Search_EmpID=0;
        $('#txtEmployee_Search').val("");
    });

    $('#txtEmployee_Search').keypress(function (e)
    {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)//Enter key-13
        {
            var sCodeName = $.trim($("#txtEmployee_Search").val());
            if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Search").focus(); return;}
            SearchEmployeeByText(sCodeName, false, false, true);
        }
    });

    $("#btnClear").click(function () {
        var oLeaves= $('#tblLeaveApplication').datagrid('getRows');
        var n=oLeaves.length-1;
        var SelectedRowIndex=0;
        for(var i=n; i>=0; i=i-1)
        {
            SelectedRowIndex = $('#tblLeaveApplication').datagrid('getRowIndex', oLeaves[i]);
            $('#tblLeaveApplication').datagrid('deleteRow',SelectedRowIndex);
        }
    });

    function Append(oEmps)
    {
        var bFound=false;
        var oTEmps=$('#tblLeaveApplication').datagrid('getRows');
        if(oTEmps.length>0){
            for (var i = 0; i < oEmps.length; i++) {
                var IsAppend=true;
                for (var j = 0; j < oTEmps.length; j++) {
                    if(oEmps[i].LeaveApplicationID==oTEmps[j].LeaveApplicationID){
                        IsAppend=false;
                        break;
                    }
                }
                if(IsAppend){
                    bFound=true;
                    $('#tblLeaveApplication').datagrid('appendRow', oEmps[i]);
                }
            }
        }
        else{
            for (var j = 0; j < oEmps.length; j++) {
                bFound=true;
                $('#tblLeaveApplication').datagrid('appendRow', oEmps[j]);
            }
        }
        if(!bFound){
            alert("data all ready exist!");
        }
    }

    //var nLeaveID_ADj=0;
    //var SelectedRowIndex_ADj=0;
    //$("#btnLeaveAdjustment").click(function () {
    //    var oLeave= $('#tblLeaveApplication').datagrid('getSelected');
    //    if(oLeave== null || oLeave.LeaveApplicationID<=0)
    //    {
    //        alert("Please select an item from the list!");
    //        return;
    //    }
    //    nLeaveID_ADj=oLeave.LeaveApplicationID;
    //    SelectedRowIndex_ADj = $('#tblLeaveApplication').datagrid('getRowIndex', oLeave);
    //    $('#dtStartDate_LeaveAdjustment').datebox('setValue',oLeave.StartDateTimeInString);
    //    $('#dtEndDate_LeaveAdjustment').datebox('setValue',oLeave.EndDateTimeInString);
    //    $("#winLeaveAdjustment").icsWindow("open");
    //});

    //$("#btnwinLeaveAdjustmentClose").click(function () {
    //    $("#winLeaveAdjustment").icsWindow("close");
    //});

    $("#btnLeaveAdjustmentSave").click(function () {
        var sEndDate=$('#dtEndDate').datebox('getValue');
        var sTempString = nLeaveID_ADj +"~"+sEndDate;
        var oLeaveApplication={Params:sTempString};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLeaveApplication,
            ControllerName: "LeaveApplication",
            ActionName: "LeaveAdjustment",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            if (response.status && response.obj!=null) {
                if (response.obj.LeaveApplicationID>0 ) {
                    $('#tblLeaveApplication').datagrid('updateRow', { index: SelectedRowIndex_ADj, row: response.obj});
                    alert("Adjustment successfully !");
                    $("#winLeaveAdjustment").icsWindow("close");
                }
                else{
                    alert(response.obj.ErrorMessage);
                }
            }
        });
    });

    $("#cboLeaveLedger").change(function () {
        var nEmpLeaveLedgerID=0;
        for(var i=0;i< _oEmployeeLeaveLedgers.length;i++)
        {
            if(_oEmployeeLeaveLedgers[i].IsLeaveOnPresence==1)
            {
                nEmpLeaveLedgerID=_oEmployeeLeaveLedgers[i].EmpLeaveLedgerID;
                break;
            }
        }
        //if(nEmpLeaveLedgerID==$("#cboLeaveLedger").val())
        //{$("#btnELProcess").show();} else{$("#btnELProcess").hide();}
    });

    //$('#btnELProcess').click(function(e){
    //    $('#dtLastProcessDate').datebox('setValue',icsdateformat(new Date()));
    //    $("#winELProcess").icsWindow('open');
    //});

    $('#btnELeaveProcess').click(function(e){
        var nEmpLeaveLedgerID =$("#cboLeaveLedger").val();
        if(nEmpLeaveLedgerID>0)
        {
            var LastProcessDate=$('#dtLastProcessDate').datebox('getValue');
            if (!confirm("Confirm to process up to " + LastProcessDate)) return;

            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/EarnLeave/ELProcess",
                traditional: true,
                data: JSON.stringify({nEmpLeaveLedgerID:nEmpLeaveLedgerID,LastProcessDate:LastProcessDate}),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var oOBJ = jQuery.parseJSON(data);
                    if (oOBJ != null &&  oOBJ.ErrorMessage == "")
                    {
                        alert("Process successfully");
                        $("#winELProcess").icsWindow('close');
                    }
                    else
                    {
                        alert(oOBJ.ErrorMessage);
                    }
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }
    });

    $('#btnCloseELeaveProcess').click(function(e){
        $("#winELProcess").icsWindow('close');
    });

    function LeaveLedger(sFrom)
    {
        var oLeaveLedgers =[];
        var nEmployeeID=0;
        if(sFrom=="Single")
        {

            if (_oLeaveApplication!=null){nEmployeeID=_oLeaveApplication.EmployeeID;}
            if (nEmployeeID==0 && _oEmployee!=null){nEmployeeID=_oEmployee.EmployeeID;}

            if(nEmployeeID<=0)
            {
                alert("Please enter employee!");
                return;
            }
            //else{nEmployeeID=_oEmployee.EmployeeID}
        }
        else
        {
            var oLeaveApplication = $("#tblLeaveApplication").datagrid("getSelected");
            if (oLeaveApplication == null || oLeaveApplication.EmployeeID <= 0) { alert("Please select an item from list!"); return; }
            nEmployeeID=oLeaveApplication.EmployeeID
        }

        if(nEmployeeID>0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/LeaveApplication/GetsLeaveLedger",
                traditional: true,
                data: JSON.stringify({ nEmployeeID: nEmployeeID,nACSID:0}),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    oLeaveLedgers = jQuery.parseJSON(data);
                    if (oLeaveLedgers.length>0 &&  oLeaveLedgers[0].ErrorMessage == "")
                    {
                        DynamicRefreshList(oLeaveLedgers,'tblLeaveLedger');
                        $("#winLeaveLedger").icsWindow("open",oLeaveLedgers[0].EmployeeName +"["+ oLeaveLedgers[0].EmployeeCode + "]"+ " | Session-"+oLeaveLedgers[0].AttendanceCalendarSession.Session);
                    }
                    else
                    {
                        alert(oLeaveLedgers[0].ErrorMessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    }

    $('#btnLeaveLedgerClose').click(function(e){
        $("#winLeaveLedger").icsWindow("close");
    });

    //function PrintTypeObject()
    //{
    //    $("#btnPrintExcel").hide();
    //    $("#btnPrint").hide();

    //    var oObj= new Object();
    //    var oItems=[];

    //    oObj= new Object();
    //    oObj.id=1;
    //    oObj.Item="Leave Application";
    //    oItems.push(oObj);

    //    oObj= new Object();
    //    oObj.id=2;
    //    oObj.Item="Leave Application XL";
    //    oItems.push(oObj);

    //    oObj= new Object();
    //    oObj.id=3;
    //    oObj.Item="Alternative Duty";
    //    oItems.push(oObj);

    //    $("#cboPrintType").icsLoadCombo({
    //        List: oItems,
    //        OptionValue: "id",
    //        DisplayText: "Item"
    //    });
    //}

    $('#cboPrintType').change(function (e)
    {
        var nPType=$("#cboPrintType").val();
        if(nPType==1)
        {
            $("#btnPrintExcel").hide();
            $("#btnPrint").show();
        }
        else if(nPType==2 || nPType==3)
        {
            $("#btnPrintExcel").show();
            $("#btnPrint").hide();
        }

        else
        {
            $("#btnPrintExcel").hide();
            $("#btnPrint").hide();
        }
    });

    $('#btnPrintExcel').click(function (e)
    {
        var nPType=$("#cboPrintType").val();
        if(nPType==0)
        {
            alert("Please select one type!");
            return;
        }
        else if(nPType==2)
        {
            PrintLeaveApplicationXL();
        }
        else if(nPType==3)
        {
            AlternativeDutyXL();
        }
    });

    $('#btnPrint').click(function (e)
    {
        var nPType=$("#cboPrintType").val();
        if(nPType==0)
        {
            alert("Please select one type!");
            return;
        }
        else if(nPType==1)
        {
            PrintLeaveApplication();
        }
    });

   function PrintLeaveApplication()
   {
        var oLeaveApplication = $('#tblLeaveApplication').datagrid('getSelected');
        if(oLeaveApplication==null || oLeaveApplication.LeaveApplicationID<=0)
        {
            alert("please select an item !");
            return;
        }
        var tsv=((new Date()).getTime())/1000;
        window.open(_sBaseAddress+ "/LeaveApplication/PrintLeaveApplicationForm_MAMIYA?nEmpID="+oLeaveApplication.EmployeeID+"&nLeaveApplicationID="+oLeaveApplication.LeaveApplicationID+"&ts="+tsv, "_blank");
    }

   function PrintLeaveApplicationXL()
   {
       var bDate=$("#chkIsDate").is(':checked');
       if(!bDate && _nEmployee_Search_EmpID<=0)
       {
           alert("Please enter employee name or code or check date!");
           return;
       }
       var sStartDate="";
       var sEndDate="";
       if($("#chkIsDate").is(':checked'))
       {
           sStartDate=$('#dtStartDate_Search').datebox('getValue');
           sEndDate=$('#dtEndDate_Search').datebox('getValue');
       }

       var nPersons=$("#cboPersons").val();
       var sTempString = _nEmployee_Search_EmpID +"~"+ sStartDate +"~"+sEndDate+"~"+nPersons;

       var tsv=((new Date()).getTime())/1000;
       window.open(_sBaseAddress+ "/LeaveApplication/PrintLeaveApplicationXL?sTempString="+sTempString+"&ts="+tsv, "_blank");
   }

   function AlternativeDutyXL()
   {
       var bDate=$("#chkIsDate").is(':checked');
       if(!bDate)
       {
           alert("Please enter employee name or code or check date!");
           return;
       }
       var sStartDate="";
       if($("#chkIsDate").is(':checked'))
       {
           sStartDate=$('#dtStartDate_Search').datebox('getValue');
       }

       var sTempString = sStartDate 

       var tsv=((new Date()).getTime())/1000;
       window.open(_sBaseAddress+ "/LeaveApplication/AlternativeDutyXL?sTempString="+sTempString+"&ts="+tsv, "_blank");
   }

   $('#chkBUWiseDetail').click(function(e)
   {
       if($('#chkBUWiseDetail').is(':checked'))
       {
           $('#tblLeaveApplication').datagrid('showColumn','BusinessUnitName');
           $('#tblLeaveApplication').datagrid('showColumn','LocationName');
           $('#tblLeaveApplication').datagrid('showColumn','DepartmentName');
           $('#tblLeaveApplication').datagrid('showColumn','DesignationName');
       }
       else
       {
           $('#tblLeaveApplication').datagrid('hideColumn','BusinessUnitName');
           $('#tblLeaveApplication').datagrid('hideColumn','LocationName');
           $('#tblLeaveApplication').datagrid('hideColumn','DepartmentName');
           $('#tblLeaveApplication').datagrid('hideColumn','DesignationName');
       }
   });








   $("#btnBusinessUnitPicker_Collection").click(function(e){
       BusinessUnitPicker();
   });

   $("#txtBusinessUnit_Collection").keypress(function(e){
       if (e.which == 13)//enter=13
       {
           BusinessUnitPicker();
       }
   });

   function BusinessUnitPicker()
   {
       var oBusinessUnit={
           BusinessUnitID:0
       };
       var obj = {
           BaseAddress: _sBaseAddress,
           Object: oBusinessUnit,
           ControllerName: "BusinessUnit",
           ActionName: "GetsBusinessUnitWithPermission",
           IsWinClose: false
       };
       $.icsDataGets(obj, function (response) {
           if (response.status && response.objs.length > 0) {
               if (response.objs[0].BusinessUnitID > 0) {
                   var tblColums = [];
                   var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                   oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                   var bmultiplereturn=true;

                   var oPickerParam = {
                       winid: 'winBusinessUnit',
                       winclass:'clsBusinessUnit',
                       winwidth: 320,
                       winheight: 400,
                       tableid: 'tblBusinessUnit',
                       tablecolumns: tblColums,
                       datalist: response.objs,
                       multiplereturn: bmultiplereturn,
                       searchingbyfieldName:'Name',
                       windowTittle: 'Business Unit List'
                   };
                   $.icsPicker(oPickerParam);
                   IntializeBusinessUnitPickerbutton(oPickerParam);//multiplereturn, winclassName
               }
               else { alert(response.objs[0].ErrorMessage); }
           }
       });
   }

   function IntializeBusinessUnitPickerbutton(oPickerobj)
   {
       $("#" + oPickerobj.winid).find("#btnOk").click(function () {
           var oBusinessUnits=[];
           oBusinessUnits = $('#'+oPickerobj.tableid).datagrid('getChecked');
           if (oPickerobj.winid == 'winBusinessUnit')
           {
               if(oBusinessUnits!=null && oBusinessUnits.length>0)
               {
                   $("#"+oPickerobj.winid).icsWindow("close");
                   $("#" + oPickerobj.winid).remove();
                   var sBusinessUnitName = "";
                   for(var i=0; i<oBusinessUnits.length; i++)
                   {
                       sBusinessUnitName+=oBusinessUnits[i].Name+",";
                       _sBusinessUnitIds+=oBusinessUnits[i].BusinessUnitID+",";
                   }

                   sBusinessUnitName=sBusinessUnitName.substring(0,sBusinessUnitName.length-1);
                   _sBusinessUnitIds=_sBusinessUnitIds.substring(0,_sBusinessUnitIds.length-1);
                   $("#txtBusinessUnit_Collection").val(sBusinessUnitName);
               }
               else
               {
                   alert("Please select a Business Unit.");
               }
           }
       });
   }

   $("#btnResetBusinessUnitPicker_Collection").click(function(e){
       $('#txtBusinessUnit_Collection').val("");
       _sBusinessUnitIds="";
   });
   /*-------------End Business Unit Picker----------------*/

   /*-------------Location Picker----------------*/
   var btnLocation="";
   $("#btnLocationPicker,#btnLocationPicker_Colection").click(function(e){
       btnLocation = $(this).attr("id");
       var sBusinessUnitIDs ="";
       var nBusinessUnitID=0;
       if(btnLocation=="btnLocationPicker")
       {
           nBusinessUnitID = $("#cboBU").val();
           sBusinessUnitIDs = String(nBusinessUnitID);
       }
       else{sBusinessUnitIDs=_sBusinessUnitIds;}
       $("#winLocationPicker").icsWindow('open');
       var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
       var obj = {
           BaseAddress: _sBaseAddress,
           Object: oLocation,
           ControllerName: "Location",
           ActionName: "GetsLocationMenuTree",
           IsWinClose: false
       };

       $.icsDataGet(obj, function (response) {
           if (response.status && response.obj!=null) {
               if (response.obj.TLocation.id > 0) {
                   $('#locationtree').tree({ data: [response.obj.TLocation] });
               }
           }
       });
   });

   $("#btnLocationPickerOk").click(function(e){
       if(btnLocation=="btnLocationPicker")
       {
           var oLocation = $('#locationtree').tree('getSelected');
           if(oLocation!=null && oLocation.id>0){
               $("#winLocationPicker").icsWindow('close');
               _sLocationID=oLocation.id;
               $('#txtLocation').val(oLocation.text);
           }
           else{
               alert("Please select a location.");
           }
       }
       else
       {
           var oLocations = $('#locationtree').tree('getChecked');
           if(oLocations!=null && oLocations.length>0)
           {
               var LocationName="";
               for(var i=0; i<oLocations.length; i++)
               {
                   if(oLocations[i].id !=1)
                   {
                       LocationName+=oLocations[i].text+",";
                       _sLocationID+=oLocations[i].id+",";
                   }
               }

               LocationName=LocationName.substring(0,LocationName.length-1);
               _sLocationID=_sLocationID.substring(0,_sLocationID.length-1);
               $("#winLocationPicker").icsWindow('close');
               $('#txtLocation_Colection').val(LocationName);
           }
           else
           {
               alert("Please select a location.");
           }
       }
   });

   $('#txtLocation_Colection').keypress(function (e)
   {
       var code = (e.keyCode ? e.keyCode : e.which);
       if (code == 13)//Enter key-13
       {
           var sBusinessUnitIDs ="";
           sBusinessUnitIDs=_sBusinessUnitIds;
           $("#winLocationPicker").icsWindow('open');
           var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};
           var obj = {
               BaseAddress: _sBaseAddress,
               Object: oLocation,
               ControllerName: "Location",
               ActionName: "GetsLocationMenuTree",
               IsWinClose: false
           };
           $.icsDataGet(obj, function (response) {

               if (response.status && response.obj!=null) {
                   if (response.obj.TLocation.id > 0) {
                       $('#locationtree').tree({ data: [response.obj.TLocation] });
                   }
               }
           });
       }
   });

   $("#btnLocationPickerClose").click(function(e){
       $("#winLocationPicker").icsWindow('close');
   });

   $("#btnResetLocationPicker,#btnResetLocationPicker_Colection").click(function(e){
       $('#txtLocation').val("");
       $('#txtLocation_Colection').val("");
       _sLocationID="";
   });
   /*-------------Department Picker----------------*/

   $("#btnDepartmentPicker").click(function(e){
       $("#winDepartmentPicker").icsWindow('open');
       var oDepartment={DepartmentID:0,BusinessUnitIDs:_sBusinessUnitIds,LocationIDs:_sLocationID};
       var obj = {
           BaseAddress: _sBaseAddress,
           Object: oDepartment,
           ControllerName: "Department",
           ActionName: "GetsDepartments",
           IsWinClose: false
       };

       $.icsDataGet(obj, function (response) {
           if (response.status && response.obj!=null) {
               if (response.obj.id > 0) {
                   $('#departmenttree').tree({ data: [response.obj] });
               }
           }
       });
   });

   $("#btnDepartmentPickerOk").click(function(e){
       _sDepartmentNames = "";
       _sDepartmentIds= "";
       var oDepartment = $('#departmenttree').tree('getSelected');
       if(oDepartment!=null && oDepartment.id>0){
           $("#winDepartmentPicker").icsWindow('close');
           $('#txtDepartment').val(oDepartment.text);
           _sDepartmentIds= oDepartment.id;
       }
       else{
           alert("Please select a department.");
       }
   });

   $("#btnDepartmentPickerClose,#btnDepartmentPickerClose_Collection").click(function(e){
       $("#winDepartmentPicker").icsWindow('close');
       $("#winDepartmentPicker_Collection").icsWindow('close');
   });

   $("#btnResetDepartmentPicker,#btnResetDepartmentPicker_Collection").click(function(e){
       $('#txtDepartment,#txtDepartment_Collection').val("");
       _sDepartmentIds="";
       _sDepartmentNames = "";
   });

   /*-------------Designation Picker----------------*/
   var btnDesignation="";
   $("#btnDesignationPicker,#btnDesignationPicker_Collection").click(function(e){
       btnDesignation = $(this).attr("id");
       DesignationPicker();
   });

   $("#txtDesignation_Collection").keypress(function(e){
       if (e.which == 13)//enter=13
       {
           btnDesignation ="btnDesignationPicker_Collection";
           DesignationPicker();
       }
   });

   function DesignationPicker()
   {
       var oDesignation={
           DesignationID:0,
           Params: _sBusinessUnitIds+'~'+_sLocationID+'~'+ _sDepartmentIds
       };
       var obj = {
           BaseAddress: _sBaseAddress,
           Object: oDesignation,
           ControllerName: "Designation",
           ActionName: "Gets",
           IsWinClose: false
       };
       $.icsDataGets(obj, function (response) {
           _sDesignationNames = "";
           _sDesignationIds = "";
           if (response.status && response.objs.length > 0) {
               if (response.objs[0].DesignationID > 0) {
                   var tblColums = [];
                   var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                   oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                   var bmultiplereturn=false;
                   if(btnDesignation=="btnDesignationPicker_Collection"){bmultiplereturn=true;}

                   var oPickerParam = {
                       winid: 'winDesignation',
                       winclass:'clsDesignation',
                       winwidth: 320,
                       winheight: 460,
                       tableid: 'tblDesignation',
                       tablecolumns: tblColums,
                       datalist: response.objs,
                       multiplereturn: bmultiplereturn,
                       searchingbyfieldName:'Name',
                       windowTittle: 'Designation List'
                   };
                   $.icsPicker(oPickerParam);
                   IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
               }
               else { alert(response.objs[0].ErrorMessage); }
           }
       });
   }

   function IntializeDesignationPickerbutton(oPickerobj)
   {
       $("#" + oPickerobj.winid).find("#btnOk").click(function () {
           var oDesignations=[];

           if(btnDesignation=="btnDesignationPicker_Collection")
           {
               oDesignations = $('#'+oPickerobj.tableid).datagrid('getChecked');
           }
           else
           {
               var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
               oDesignations.push(oDesignation);
           }

           if (oPickerobj.winid == 'winDesignation')
           {
               if(oDesignations!=null && oDesignations.length>0){
                   $("#"+oPickerobj.winid).icsWindow("close");
                   $("#" + oPickerobj.winid).remove();

                   for(var i=0; i<oDesignations.length; i++)
                   {
                       _sDesignationNames+=oDesignations[i].Name+",";
                       _sDesignationIds+=oDesignations[i].DesignationID+",";
                   }

                   _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                   _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
                   if(btnDesignation=="btnDesignationPicker_Collection")
                   {
                       $("#txtDesignation_Collection").val(_sDesignationNames);
                   }
                   else
                   {
                       $("#txtDesignation").val(_sDesignationNames);
                   }
               }
               else{
                   alert("Please select a designation.");
               }
           }
       });
   }

   $("#btnResetDesignationPicker,#btnResetDesignationPicker_Collection").click(function(e){
       $('#txtDesignation').val("");
       $('#txtDesignation_Collection').val("");
       _sDesignationIds="";
       _sDesignationNames = "";
   });
   /*------------- Start Block Picker----------------*/

   $("#btnDepartmentPicker_Collection").click(function(e){
       DepartmentPicker();
   });

   $("#txtDepartment_Collection").keypress(function(e){
       if (e.which == 13)//enter=13
       {
           DepartmentPicker();
       }
   });

   function DepartmentPicker()
   {
       $("#winDepartmentPicker_Collection").icsWindow('open');
       var oDepartment={DepartmentID:0};
       var obj = {
           BaseAddress: _sBaseAddress,
           Object: oDepartment,
           ControllerName: "Department",
           ActionName: "GetsDepartments",
           IsWinClose: false
       };

       $.icsDataGet(obj, function (response) {
           if (response.status && response.obj!=null) {
               if (response.obj.id > 0) {
                   $('#departmenttree_Collection').tree({ data: [response.obj] });
               }
           }
       });
   }

   $("#btnDepartmentPickerOk_Collection").click(function(e){
       var oDepartments = $('#departmenttree_Collection').tree('getChecked');
       if(oDepartments!=null && oDepartments.length>0){
           $("#winDepartmentPicker_Collection").icsWindow('close');
           for(var i=0; i<oDepartments.length; i++)
           {
               _sDepartmentNames+=oDepartments[i].text+",";
               _sDepartmentIds+=oDepartments[i].id+",";
           }

           _sDepartmentNames=_sDepartmentNames.substring(0,_sDepartmentNames.length-1);
           _sDepartmentIds=_sDepartmentIds.substring(0,_sDepartmentIds.length-1);
           $("#txtDepartment_Collection").val(_sDepartmentNames);
       }
       else{
           alert("Please select a department.");
       }
   });
    
   $('#cboLeaveLedger').keydown(function(e)
   {
       debugger;
       if(e.which == 13) {
           //e.preventDefault();
           //$('#txtExpenseLocation').focus();
           $('#btnSaveLeaveApplication').focus();
           $('#btnSaveLeaveApplication').addClass('buttonBorder'); 
       }
   });
   //$('#cboLeaveType').keydown(function(e)
   //{
   //    debugger;
   //    if(e.which == 13) {
   //        //e.preventDefault();
   //        //$('#txtExpenseLocation').focus();
   //        $('#btnSaveLeaveApplication').focus();
   //        $('#btnSaveLeaveApplication').addClass('buttonBorder'); 
   //    }
   //});
   $('#txtExpenseLocation').keydown(function(e)
   {
       debugger;
       if(e.which == 13) {
           //e.preventDefault();
           //$('#txtReason').focus();
       }
   });
   $('#txtReason').keydown(function(e)
   {
       debugger;
       if(e.which == 13) {
           //e.preventDefault();
           //$('#txtResponsiblePerson').focus();
       }
   });
   $('#txtRecommendationNote').keydown(function(e)
   {
       debugger;
       if(e.which == 13) {
           //e.preventDefault();
           //$('#cboRequestToApproval').focus();
       }
   });

   $('#cboRequestToApproval').keydown(function(e)
   {
       debugger;
       if(e.which == 13) {
           //e.preventDefault();
           //$('#txtRequestToApproval').focus();
       }
   });



</script>
