@{
    ViewBag.Title = "Production Status";
}

@model IEnumerable <ESimSol.BusinessObjects.DUProductionStatusReport>

<div ng-app="DUProductionStatusReportModule" ng-controller="DUProductionStatusReportController as MLCC">
    <section>
        <ul class="nav nav-tabs" style="background:#d6dbdf; color:white;">
            <li ng-class="{active:MLCC.IsSet(1)}">
                <a href="" ng-click="MLCC.SetTab(1)" style="color:black;">Order View</a>
            </li>
            <li ng-class="{active:MLCC.IsSet(2)}">
                <a href="" ng-click="MLCC.SetTab(2)" style="color:black;">Yarn View</a>
            </li>
            <li ng-class="{active:MLCC.IsSet(3)}">
                <a href="" ng-click="MLCC.SetTab(3)" style="color:black;">Buyer View</a>
            </li>
            @*<li ng-class="{active:MLCC.IsSet(4)}">
                <a href="" ng-click="MLCC.SetTab(4)" style="color:black;">Summary</a>
            </li>*@
        </ul>
        <div ng-if="MLCC.IsSet(1)">
            <div class="col-md-12">
                <div class="form-inline">
                    <input type="text" ng-model="MLCC.OrderNo" class="form-control" style="width:200px" placeholder="Search Order No " ng-keyup="MLCC.searchOrderNoKeyUp($event)" />
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.AdvanceSearchDUProductionStatusReport()"> <span class="glyphicon glyphicon-search" aria-hidden="true"> Search</span></button>
                    @*<button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.printPDF(1,1)"> <span class="glyphicon glyphicon-print" aria-hidden="true"> Print</span></button>*@
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.printExcel(1,1)"> <span class="glyphicon glyphicon-export" aria-hidden="true"> ExportXL</span></button>
                    @*<button type="button" class="btn btn-sm btn-primary pull-right" aria-label="Left Align" ng-click="MLCC.DetailView(1)"> <span class="glyphicon glyphicon-plus" aria-hidden="true"> Detail View</span></button>*@
                </div>
            </div>
            <div class="col-md-12">
                <div ui-grid="OrderWisegridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
            </div>

        </div>
        <div ng-if="MLCC.IsSet(2)">
            <div class="col-md-12">
                <div class="form-inline">
                    <input type="text" ng-model="MLCC.OrderNo" class="form-control" style="width:200px" placeholder="Search Order No " ng-keyup="MLCC.searchOrderNoKeyUp($event)" />
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.AdvanceSearchDUProductionStatusReport()"> <span class="glyphicon glyphicon-search" aria-hidden="true"> Search</span></button>
                    @*<button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.printPDF(2,1)"> <span class="glyphicon glyphicon-print" aria-hidden="true"> Print</span></button>*@
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.printExcel(2,1)"> <span class="glyphicon glyphicon-export" aria-hidden="true"> ExportXL</span></button>
               </div>
            </div>
            <div class="col-md-12">
                <div ui-grid="YarnWisegridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
            </div>
        </div>
        <div ng-if="MLCC.IsSet(3)">
            <div class="col-md-12">
                <div class="form-inline">
                    <input type="text" ng-model="MLCC.OrderNo" class="form-control" style="width:200px" placeholder="Search Order No " ng-keyup="MLCC.searchOrderNoKeyUp($event)" />
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.AdvanceSearchDUProductionStatusReport()"> <span class="glyphicon glyphicon-search" aria-hidden="true"> Search</span></button>
                    @*<button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.printPDF(3,1)"> <span class="glyphicon glyphicon-print" aria-hidden="true"> Print</span></button>*@
                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="MLCC.printExcel(3,1)"> <span class="glyphicon glyphicon-export" aria-hidden="true"> ExportXL</span></button>
                </div>
            </div>
            <div class="col-md-12">
                <div ui-grid="BuyerWisegridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav ui-grid-edit class="grid ui-grid-selectable"></div>
            </div>
        </div>
        <div ng-if="MLCC.IsSet(4)">
            <form class="form-horizontal" style="margin-top:10px;">
                <div class="form-group">
                    <label class="control-label col-md-5">Order Qty:</label>
                    <div class="col-md-3">
                        <input type="text" class="form-control" ng-model="SummaryOrderQty | number : 2" ng-pattern="/^[0-9]+(\.[0-9]{1,2})?$/" step="0.01" disabled>
                    </div>
                    <span class="col-md-2">{{MUnit}}</span>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-5">Production Qty:</label>
                    <div class="col-md-3">
                        <input type="text" class="form-control" ng-model="SummaryProductionQty| number : 2" ng-pattern="/^[0-9]+(\.[0-9]{1,2})?$/" step="0.01" " disabled>
                    </div>
                    <span class="col-md-2">{{MUnit}}</span>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-5">Yet To Production:</label>
                    <div class="col-md-3">
                        <input type="text" class="form-control" ng-model="SummaryYetToProduction| number : 2" ng-pattern="/^[0-9]+(\.[0-9]{1,2})?$/" step="0.01" " disabled>
                    </div>
                    <span class="col-md-2">{{MUnit}}</span>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-5">Req. Time:</label>
                    <div class="col-md-3">
                        <input type="text" class="form-control" ng-model="SummaryReqTime| number : 2" ng-pattern="/^[0-9]+(\.[0-9]{1,2})?$/" step="0.01" " disabled>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-5">Per Day Production:</label>
                    <div class="col-md-3">
                        <input type="text" class="form-control" ng-model="SummaryPerDayProduction" ng-change="divide()">
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-5">Req Day:</label>
                    <div class="col-md-3">
                        <input type="text" class="form-control" ng-model="SummaryReqDay| number : 2" ng-pattern="/^[0-9]+(\.[0-9]{1,2})?$/" step="0.01" " disabled>
                    </div>
                    <span class="col-md-2"> Day(s)</span>
                </div>
            </form> 
        </div>
    </section>
</div>

<style type="text/css">

     .form-control{
        height:26px;
        padding:0px 6px;
        font-size:12px;
    }
    .grid {
        height: 465px;
        width: 100%;
    }
    .angular-grid{
        height:4100px;
        width:100%;
    }

    .custom-pagination {
        margin-top: -15px;
        margin-bottom: -15px;
    }

    .spacing {
        padding-bottom: 5px;
    }
    .red {
      text-align: right;
      color: red;
    }

    .black {
      text-align: right;
      color: #000;
    }
    
</style>

<script type="text/javascript">
    debugger;
    _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oDUProductionStatusReports =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var oYarnWise =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.YarnWise));
    var oBuyerWise =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BuyerWise));
    var oOrderTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.OrderTypes));
    var oDyeingType = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.DyeingTypes));
    var nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    var oIssueStores = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.IssueStores));

    var  DUProductionStatusReportModule = angular.module('DUProductionStatusReportModule', ['ngAnimate','ui.bootstrap','ui.grid','ui.grid.selection','ui.grid.resizeColumns','ms.service']);
    DUProductionStatusReportModule.controller('DUProductionStatusReportController', function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession,advanceSearch) {

        $scope.OrderType =oOrderTypes;
        $scope.oDyeingType =oDyeingType;
        $scope.BUID =nBUID;
        $scope.CompareOperators = oCompareOperators;
        $scope.IssueStores=oIssueStores;
        var list = [];

        $scope.OrderWisegridOptions ={
            enableRowHeaderSelection: false,
            enableRowSelection: true,
            enableFullRowSelection: true,
            multiSelect: false,
            enableColumnResizing: true,
            noUnselect : true,
            showColumnFooter: true,
            enableGridMenu: true,
            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                { field: 'OrderName', name: 'OrderType', width:'10%', enableCellEdit: false,cellClass: 'text-left' },
                { field: 'OrderNo', name: 'OrderNo', width:'10%', enableCellEdit: false,cellClass: 'text-left' },
                { field: 'OrderDateST', name: 'Order Date', width:'12%', enableCellEdit: false,cellClass: 'text-left' },
                { field: 'StyleNo', name: 'Style No', width:'10%', enableCellEdit: false,cellClass: 'text-left' },
                { field: 'MUnit', name: 'MUnit',cellClass: 'text-left', width: '8%', enableCellEdit: false,cellClass: 'text-left' },

                { field: 'ProductName', name: 'ProductName',cellClass: 'text-left', width: '20%', enableCellEdit: false },
                { field: 'YarnLotNo', name: 'Lot No', width:'10%', enableCellEdit: false,cellClass: 'text-left' },
                
                { field: 'Qty_Order', name: 'Order Qty', width: '10%' ,cellClass: 'text-right', cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                { field: 'Qty_Rcv', name: 'Rcv Qty', width: '10%',cellClass: 'text-right', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'Qty_YetToRcv', name: 'Yet To Rcv',
                    cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {
                        if (grid.getCellValue(row,col) < 0) {
                            return 'red';
                        }
                        return 'black';
                    }, width: '10%', enableCellEdit: false , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'},
                { field: 'Qty_SW', name: 'SW Qty', width: '10%',cellClass: 'text-right', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'Qty_YetToSW', name: 'Yet To SW',
                   cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {
                       if (grid.getCellValue(row,col) < 0) {
                           return 'red';
                       }
                       return 'black';
                   }, width: '10%', enableCellEdit: false , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'},
                { field: 'BuyerName', name: 'Buyer Name',cellClass: 'text-left', width: '20%', enableCellEdit: false },
                { field: 'BuyerRef', name: 'BuyerRef',cellClass: 'text-left', width: '20%', enableCellEdit: false },
                
            ],
            data:oDUProductionStatusReports,
            onRegisterApi:function(gridApi) {
                $scope.gridApi = gridApi;
                debugger;
                var oDetail=userSession.getData('DUProductionStatusReportList');
                if(oDetail.length>0)
                    $scope.OrderWisegridOptions.data=oDetail; //sessionStorage.getItem("DUProductionStatusReportList");

                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.grid.modifyRows(oDetail);
                $scope.gridApi.selection.selectRow(oDetail[userSession.getRowIndex()]);
                userSession.clear();
            }
        };
        //cellTemplate: '<div class="ui-grid-cell-contents" style="color:red;" >{{grid.getCellValue(row, col)}}</div>'
        $scope.YarnWisegridOptions ={
            enableRowHeaderSelection: false,
            enableRowSelection: true,
            enableFullRowSelection: true,
            multiSelect: false,
            enableColumnResizing: true,
            noUnselect : true,
            showColumnFooter: true,
            enableGridMenu: true,
            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                //{ field: 'CategoryName', name: 'Category',cellClass: 'text-left', width: '8%', enableCellEdit: false },
                { field: 'ProductName', name: 'Product Name', width:'20%',cellClass: 'text-left'},
                { field: 'Qty_Order', name: 'Order Qty', width: '10%' ,cellClass: 'text-right', cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                { field: 'Qty_Rcv', name: 'Rcv Qty', width: '10%',cellClass: 'text-right', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'Qty_YetToRcv', name: 'Yet To Rcv',
                    cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {
                        if (grid.getCellValue(row,col) < 0) {
                            return 'red';
                        }
                        return 'black';
                    }, width: '10%', enableCellEdit: false , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'},
                { field: 'Qty_SW', name: 'SW Qty', width: '10%',cellClass: 'text-right', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'Qty_YetToSW', name: 'Yet To SW',
                    cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {
                        if (grid.getCellValue(row,col) < 0) {
                            return 'red';
                        }
                        return 'black';
                    }, width: '10%', enableCellEdit: false , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'},
                
            ],
            data:oYarnWise,
            onRegisterApi:function(YarnWisegridApi) {
                $scope.YarnWisegridApi = YarnWisegridApi;

            }
        };


        $scope.BuyerWisegridOptions ={
            enableRowHeaderSelection: false,
            enableRowSelection: true,
            enableFullRowSelection: true,
            multiSelect: false,
            enableColumnResizing: true,
            noUnselect : true,
            showColumnFooter: true,
            enableGridMenu: true,
            columnDefs: [
                {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                { field: 'BuyerName', name: 'Buyer Name', width: '20%',cellClass: 'text-left', enableCellEdit: false },
                { field: 'Qty_Order', name: 'Order Qty', width: '10%' ,cellClass: 'text-right', cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                { field: 'Qty_Rcv', name: 'Rcv Qty', width: '10%',cellClass: 'text-right', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'Qty_YetToRcv', name: 'Yet To Rcv',
                    cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {
                        if (grid.getCellValue(row,col) < 0) {
                            return 'red';
                        }
                        return 'black';
                    }, width: '10%', enableCellEdit: false , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'},
                { field: 'Qty_SW', name: 'SW Qty', width: '10%',cellClass: 'text-right', enableCellEdit: false, cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'  },
                { field: 'Qty_YetToSW', name: 'Yet To SW',
                    cellClass: function(grid, row, col, rowRenderIndex, colRenderIndex) {
                        if (grid.getCellValue(row,col) < 0) {
                            return 'red';
                        }
                        return 'black';
                    }, width: '10%', enableCellEdit: false , cellFilter: 'number: 2', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right'},
                
            ],
            data:oBuyerWise,
            onRegisterApi:function(BuyerWisegridApi) {
                $scope.BuyerWisegridApi = BuyerWisegridApi;

            }
        };

        this.AdvanceSearchDUProductionStatusReport = function ()
        {
            debugger;
            var oColumns = [];
            var  oColumn = { field: 'ProductName', name: 'ProductName',width: '45%', enableSorting: false  };oColumns.push(oColumn);
            oColumn = { field: 'ProductCategoryName', name: 'ProductCategoryName',width: '45%', enableSorting: false  };oColumns.push(oColumn);

            var paramObj_Model={
                obj:{ProductName: '@@ProductID', BUID:$scope.BUID},
                objName:'ProductName',
                url:_sBaseAddress+'/Product/SearchByProductBUWise',
                title:'Product List',
                multiSelect:true,
                columns:oColumns
            }

            oColumns = [];
            var oColumn = { field: 'Name', name: 'Applicant Name',width: '70%', enableSorting: false  };oColumns.push(oColumn);
            oColumn = { field: 'Address', name: 'Address',width: '30%', enableSorting: false  };oColumns.push(oColumn);

            var paramObj_Contractor={
                obj:{Params: '2,3' + '~' +'@@ContractorID'+'~'+sessionStorage.getItem('BUID')},
                objName:'Params',
                url:_sBaseAddress+'/Contractor/ContractorSearchByNameType',
                title:'Contractor List',
                multiSelect:true,
                columns:oColumns
            }

            //IssueStores:$scope.IssueStores
            var oElementList = [{ DisplayName: "Order No",  BOField: "OrderNo",      InputType: 'text' },
                                { DisplayName: "Style No",  BOField: "StyleNo",      InputType: 'text' },
                                { DisplayName: "Lot No",    BOField: "LotNo",        InputType: 'text' },
                                { DisplayName: "Product",  BOField: "ProductID",   InputType: 'picker', PickerObject:paramObj_Model },
                                { DisplayName: "Buyer ",         BOField: "ContractorID",    InputType: 'picker', PickerObject:paramObj_Contractor },
                                { DisplayName: "Order Type",    BOField: "OrderTypeST",       InputType: 'select', OptionList:$scope.OrderType, OptionValue:{id:'OrderType', Value:'OrderName'}},
                                { DisplayName: "Issue Store",    BOField: "WorkingUnitID",       InputType: 'select', OptionList:$scope.IssueStores, OptionValue:{id:'WorkingUnitID', Value:'OperationUnitName'}},
                                //{ DisplayName: ["Yet To Forward (HO)","Yet To Forward (Buyer)"],  BOField: ["YetToHO","YetToBuyer"],   InputType: 'bool'},
                                { DisplayName: "Order Date",BOField: "OrderDate",    InputType: 'date' },
                                { DisplayName: "Receive Date",BOField: "ReceiveDate",    InputType: 'date' },
                                { BOField:     "BUID",      Value:nBUID, InputType: 'hidden'}
            ];
            var modalObj={
                size:'md',
                title:"Advance Search",
                url:_sBaseAddress+'/Home/AdvanceSearch',
                CompareOperators:oCompareOperators,
                HtmlElements:oElementList,
                isAdvanceSearch:true, // if TRUE: 'urlAdvanceSearch' should be define
                urlAdvanceSearch:_sBaseAddress + '/DUProductionStatusReport/AdvSearchDUP'
            }

            var modalInstance=advanceSearch.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                console.log(result);
                if(result[0].Key=="ErrorMessage")
                {
                    alert(result[0].Value);return;
                }
                if(result[0].Value.length<=0)
                {
                    alert("No Order Found!");return
                }

                oDUProductionStatusReports = result[0].Value;
                oYarnWise  = result[1].Value;
                oBuyerWise = result[2].Value;

                $scope.OrderWisegridOptions.data = result[0].Value;
                $scope.YarnWisegridOptions.data  = result[1].Value;
                $scope.BuyerWisegridOptions.data = result[2].Value;

                //var nOrderQty = 0.0;
                //var nProductionQty = 0.0;
                //var nYetToProduction = 0.0;
                //var nReqTime = 0.0;
                debugger;
                for(var i = 0; i < result.Item1.length; i++) {
                    if(result.Item1[i].Qty > 0) nOrderQty += result.Item1[i].Qty;
                    if(result.Item1[i].Qty > 0) nProductionQty += result.Item1[i].Qty_Prod;
                    if((result.Item1[i].Qty - result.Item1[i].Qty_Prod) > 0) nYetToProduction += (result.Item1[i].Qty - result.Item1[i].Qty_Prod);
                    if(result.Item1[i].ReqTime > 0) nReqTime += result.Item1[i].ReqTime;
                    $scope.MUnit =  result.Item1[i].MUName;
                }
                //$scope.SummaryOrderQty = nOrderQty;
                //$scope.SummaryProductionQty = nProductionQty;
                //$scope.SummaryYetToProduction = nYetToProduction;
                //$scope.SummaryReqTime = nReqTime;

                //$scope.SummaryReqDay = 0;

            }, function ()
            {
                $log.info('Modal dismissed at: ' + new Date());
            });
           

            //sessionStorage.setItem('BaseAddress',_sBaseAddress);
            //var modalInstance=DUPservice.Instance(modalObj);
            //modalInstance.result.then(function (result)
            //{

            //    debugger;
            //    $scope.OrderWisegridOptions.data = result.Item1;
            //    $scope.YarnWisegridOptions.data =result.Item2;
            //    $scope.BuyerWisegridOptions.data =result.Item3;

            //    var nOrderQty = 0.0;
            //    var nProductionQty = 0.0;
            //    var nYetToProduction = 0.0;
            //    var nReqTime = 0.0;
            //    debugger;
            //    for(var i = 0; i < result.Item1.length; i++) {
            //        if(result.Item1[i].Qty > 0) nOrderQty += result.Item1[i].Qty;
            //        if(result.Item1[i].Qty > 0) nProductionQty += result.Item1[i].Qty_Prod;
            //        if((result.Item1[i].Qty - result.Item1[i].Qty_Prod) > 0) nYetToProduction += (result.Item1[i].Qty - result.Item1[i].Qty_Prod);
            //        if(result.Item1[i].ReqTime > 0) nReqTime += result.Item1[i].ReqTime;
            //        $scope.MUnit =  result.Item1[i].MUName;
            //    }
            //    $scope.SummaryOrderQty = nOrderQty;
            //    $scope.SummaryProductionQty = nProductionQty;
            //    $scope.SummaryYetToProduction = nYetToProduction;
            //    $scope.SummaryReqTime = nReqTime;

            //    $scope.SummaryReqDay = 0;
            //}, function () {
            //    $log.info('Modal dismissed at: ' + new Date());
            //});
        };

        $scope.SummaryPerDayProduction = 1;

        $scope.divide = function() {
            $scope.SummaryReqDay = ($scope.SummaryReqTime / this.SummaryPerDayProduction);
            if(this.SummaryPerDayProduction == 0) {
                $scope.SummaryReqDay = 0;
            }
        }

        this.printExcel = function(tabId, formate){
            debugger;
            //$scope.sParams ="";
            var sParams ="";
            if(sessionStorage.getItem("AdvSearchString")!=null)
            {
                var sParams=sessionStorage.getItem("AdvSearchString");
                window.open(_sBaseAddress + '/DUProductionStatusReport/Print_ReportXL_Details?sTempString=' + sParams+'&BUID='+sessionStorage.getItem("BUID")+'&trackid='+tabId+'&formate='+formate, "_blank");
            }
        }

        this.printPDF = function(tabId, formate){
            debugger;
            //$scope.sParams ="";
            if(sessionStorage.getItem("sTempString")!=null){
                var sParams=sessionStorage.getItem("sTempString");
            }
            else
            {
                var sParams ="";
            }

            window.open(_sBaseAddress + '/DUProductionStatusReport/Print_PDF?sTempString=' + sParams+'&BUID='+sessionStorage.getItem("BUID")+'&trackid='+tabId+'&formate='+formate, "_blank");
        }

        this.DetailView =  function (tabID)
        {
            debugger;
            var oDUProductionStatusReport = $scope.gridApi.selection.getSelectedRows()[0];
            if(oDUProductionStatusReport==null || oDUProductionStatusReport.DyeingorderID<=0)
            {
                alert("Please Select an item from list");
                return;
            }
            angular.forEach($scope.OrderWisegridOptions.data, function (value, index) {
                debugger;
                if (value.DyeingOrderID == oDUProductionStatusReport.DyeingOrderID)
                {
                    sessionStorage.setItem("SelectedData", JSON.stringify(oDUProductionStatusReport));
                    sessionStorage.setItem("DUProductionStatusReportList", JSON.stringify($scope.OrderWisegridOptions.data));
                    sessionStorage.setItem("SelectedRowIndex", index);
                    sessionStorage.setItem("oDUProductionStatusReportHeader","Order No:["+oDUProductionStatusReport.OrderNo +"]  Product: ["+oDUProductionStatusReport.ProductName+"]  Qty: ["+oDUProductionStatusReport.Qty+"]  Prod. Qty: ["+oDUProductionStatusReport.Qty_Prod+"]");
                    sessionStorage.setItem("BackLink", window.location.href);
                    debugger;
                    window.location.href =sessionStorage.getItem('BaseAddress')+"/DUProductionStatusReport/ViewDUProductionDetail?nDOID="+oDUProductionStatusReport.DyeingOrderID+"&nProductID="+oDUProductionStatusReport.ProductID;
                }
            }, $scope.OrderWisegridOptions.data);
        }


        //TAb selection
        this.tab = 1;
        this.SetTab = function (tabId)
        {
            this.tab = tabId;
        }
        this.IsSet = function (tabid)
        {
            return this.tab === tabid;
        }

        this.searchOrderNoKeyUp=function(keyEvent){
            if(keyEvent.which==13 ||keyEvent.which ==10){
                debugger;
                this.Ordersearch();
            }
        };
        this.Ordersearch = function () {
            debugger;

            //sOrderNo
            //sStyleNo 
            //sLotNo 
            //sProductIDs 
            //sBuyerIDs
            //nOrderType = Convert.ToInt32(sParams.Split('~')[nCount++]);
            //nStore = Convert.ToInt32(sParams.Split('~')[nCount++]);
            //nDateCriteria_Order = Convert.ToInt32(sParams.Split('~')[nCount++]);
            //dStart_Order
            //dEnd_Order
            //nDateCriteria_Rcv = Convert.ToInt32(sParams.Split('~')[nCount++]);
            //dStart_Rcv = Convert.ToDateTime(sParams.Split('~')[nCount++]);
            //dEnd_Rcv = Convert.ToDateTime(sParams.Split('~')[nCount++]);
            //nBUID 

            //1~~~~~0~0~0~25 Feb 2018~25 Feb 2018~0~25 Feb 2018~25 Feb 2018~1~
            var sTempString=(this.OrderNo == undefined ? "" :this.OrderNo) + '~~~~~0~0~0~25 Feb 2018~25 Feb 2018~0~25 Feb 2018~25 Feb 2018~' + nBUID;

            var oDUPR={Params:sTempString};

            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-10;' } };
            $http.post(_sBaseAddress + '/DUProductionStatusReport/AdvSearchDUP', JSON.stringify(oDUPR)).then(
                  function (response) {debugger;
                      result=JSON.parse(response.data);
                      console.log(result);
                      if(result[0].Key=="ErrorMessage")
                      {
                          alert(result[0].Value);return;
                      }
                      if(result[0].Value.length<=0)
                      {
                          alert("No Order Found!");return;
                      }
                      
                      sessionStorage.setItem("AdvSearchString",sTempString);

                      oDUProductionStatusReports = result[0].Value;
                      oYarnWise  = result[1].Value;
                      oBuyerWise = result[2].Value;

                      $scope.OrderWisegridOptions.data = result[0].Value;
                      $scope.YarnWisegridOptions.data  = result[1].Value;
                      $scope.BuyerWisegridOptions.data = result[2].Value;
                  },
                  function (response) { alert(response.statusText); }
            );
        };
    });


</script>
                       


              
