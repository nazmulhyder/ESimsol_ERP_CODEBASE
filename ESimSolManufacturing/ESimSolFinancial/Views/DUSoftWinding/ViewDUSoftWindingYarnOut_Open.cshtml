@{
    ViewBag.Title = "Dyeing Batch List";
}
@model IEnumerable<ESimSol.BusinessObjects.RouteSheet>

    <div class="menuMainCollectionTable" ng-app="RouteSheetApp" style="height:97%; width:100%">
        <div ng-controller="RouteSheetController" style="width:99.5%;">
                 <div class="ics-panel-header"><label class="text-success">{{HeaderInfo}}</label></div>
                 <div title="RouteSheet List" class="ui-grid-top-panel">
                     <input type="text" ng-model="txtSearchByName" ng-keyup="SearchByName($event)" placeholder="Search by Lot/Batch No" style="width:190px" />
                     <button type="button" id="btnAdd" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="OpenLotModal()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>
                     <button type="button" id="btnYarnOut" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="YarnOut()"><span class="glyphicon glyphicon-th" aria-hidden="true"> Yarn Out</span></button>

                     @*<button type="button" id="btnEdit" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="YarnOut()"><span class="glyphicon glyphicon-edit" aria-hidden="true"> YarnOut</span></button>*@
                 </div>
                 <div ui-grid="gridOptions" ui-grid-selection ui-grid-edit ui-grid-row-edit class="grid-angular" style="height:450px"></div>
                 <div>
                     <fieldset>
                         <legend>Action</legend>
                         <div class="row col-md-12 text-right">
                             @*<button type="button" class="btn btn-sm btn-success" aria-label="Left Align" ng-hide="btnYarnOut" ng-click="YarnOut()"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true">YarnOut</span> </button>*@
                             <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="Close()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"> Close</span> </button>
                         </div>
                     </fieldset>
                 </div>
        </div>
        <script type="text/ng-template" id="RSLot.html">
            <div class="modal-header">
                <h4 class="modal-title" id="modal-title">{{Header}}</h4>
            </div>
            <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
                <div class="row">
                    <div class="col-md-12 ">
                        <div class="col-md-3 text-right"><label class="control-label">Order Product:</label></div>
                        <div class="col-md-7 text-left">
                            <input ng-model="RSLot.OrderProduct" class="form-control" disabled>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 ">
                        <div class="col-md-3 text-right"><label class="control-label">Shift:</label></div>
                        <div class="col-md-7 text-left">
                            <select ng-model="RSLot.RSShiftID" ng-options="obj.RSShiftID as obj.Name for obj in RSShifts" ng-disabled="disabled" class="form-control">
                                <option value="">--Select Shift--</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 ">
                        <div class="col-md-3 text-right"><label class="control-label">Store:</label></div>
                        <div class="col-md-7 text-left">
                            <select id="cboIssueStore" ng-model="RSLot.WorkingUnitID" ng-options="obj.WorkingUnitID as obj.OperationUnitName for obj in IssueStores" ng-change="cboIssueStoreChange()" ng-disabled="disabled" class="form-control">
                                <option value="">--Select Store--</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 ">
                        <div class="col-md-3 text-right"><label class="control-label">Product:</label></div>
                        <div class="col-md-7 text-left">
                            <div class="form-inline">
                                <input class="form-control" ng-model="txtProductName" placeholder="Type Name & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownProduct($event)" style="width:80%;" required />
                                <button type="button" class="btn btn-primary btn-sm" style="width:18%" aria-label="right Align" ng-click="PickProduct()" ng-disabled="disabled"><span aria-hidden="true"> Pick </span></button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row ui-grid-panel">
                    <div class="col-md-12 ">
                        <div class="col-md-3 text-right"><label class="control-label">LotNo:</label></div>
                        <div class="container col-md-7 text-left">
                            <div class="form-inline">
                                <input class="form-control" ng-model="txtLotNo" placeholder="Type Lot No & Press Enter" ng-disabled="disabled" ng-keydown="SearchKeyDownLot($event)" style="width:80%;" required />
                                <button type="button" style="width:18%" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="PickLot()" ng-disabled="disabled"><span aria-hidden="true"> Add </span></button>
                            </div>
                        </div>
                        <div>
                            <button type="button" class="btn btn-danger btn-sm" aria-label="right Align" ng-click="RemoveLot()" ng-disabled="disabled"><span aria-hidden="true"> Remove </span></button>
                        </div>
                    </div>
                </div>
                @*<div class="row ui-grid-panel">
                    <div class="container col-md-12">
                        <div class="form-inline" >
                            <button type="button" style="float:left" class="btn btn-primary btn-sm" aria-label="right Align" ng-click="PickLot()" ng-disabled="disabled"><span aria-hidden="true"> Add Lot</span></button>
                            <button type="button" style="float:right" class="btn btn-danger btn-sm" aria-label="right Align" ng-click="RemoveLot()" ng-disabled="disabled"><span aria-hidden="true"> Remove </span></button>
                        </div>
                    </div>
                </div>*@
                <div ui-grid="gridOptions_Lot" ui-grid-selection ui-grid-resize-columns ui-grid-edit class="grid-angular" style="width:100%; height:180px"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-success btn-sm" aria-label="Left Align" ng-click="SaveRSRawLot()" ng-disabled="disabled" ng-hide="hide"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Save</button>
                <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
            </div>
        </script>
    </div>
<style type="text/css">
    .grid-angular {
        width: 100%;
        height:520px;
    }
</style>
<script src="~/Views/RouteSheet/AdvSearchRouteSheet.js"></script>
<script type="text/javascript">
    debugger;
    var oRouteSheets =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    var oWorkingUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.WorkingUnits));
    var _nBUID=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));

    $('#btnExportToExcel,#btnPrintList').hide();
    debugger;
    var CCapp= angular.module('RouteSheetApp', ['ngAnimate', 'ui.bootstrap', 'ui.grid', 'ui.grid.selection', 'ui.grid.edit','ui.grid.resizeColumns','ms.service']);
    CCapp.controller('RouteSheetController',function ($http,$scope, $uibModal,uiGridConstants,userSession)
    {
        oRouteSheets= (userSession.getData('RouteSheets').length>0)? userSession.getData('RouteSheets'):oRouteSheets;
        debugger;
        $scope.gridOptions= {
            enableRowSelection: true,
            enableRowHeaderSelection: false,
            multiSelect: false,
            showColumnFooter: true,
            enableColumnResizing: true,
            columnDefs: [
              { field: 'RouteSheetDateStr', name:'Batch Date', width:'10%',enableCellEdit:false },
              { field: 'OrderNoFull', name:'Order No', width:'10%',enableCellEdit:false },
              { field: 'RouteSheetNo', name:'Batch No', width:'15%' ,enableCellEdit:false, enableSorting: false},
              { field: 'RSStateStr', name:'Status', width:'12%' ,enableCellEdit:false, enableSorting: false},
              { field: 'LotNo', name:'Raw Lot No', width:'15%' ,enableCellEdit:false, enableSorting: false},
              { field: 'ProductName', name:'ProductName', width:'10%' ,enableCellEdit:false, enableSorting: false},
              { field: 'ColorName', name:'ColorName', width:'10%' ,enableCellEdit:false, enableSorting: false},
              { field: 'Qty',        name:'Qty',       width:'7%',     cellClass: 'text-right',  cellFilter: 'number:2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:2'},
              { field: 'NoOfHanksCone', name:'No Of Cone', width:'10%' , enableCellEdit:true, enableSorting: false},
              { field: 'MachineName', name:'MachineName', width:'10%' , enableCellEdit:false,enableSorting: false},
            ],
            data: oRouteSheets,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();

                $scope.gridApi.core.refresh();
                if(oRouteSheets.length>0 && userSession.getRowIndex()>=0)
                {
                    $scope.gridApi.grid.modifyRows(oRouteSheets);
                    $scope.gridApi.selection.selectRow(oRouteSheets[userSession.getRowIndex()]);
                }
            }
        };

        $scope.HeaderInfo = " All Yarn In Floor ";
        var oDUSoftWinding =  sessionStorage.getItem("DUSoftWinding");

        if(oDUSoftWinding!=null && oDUSoftWinding!="undefined")
        {
            oDUSoftWinding = JSON.parse(oDUSoftWinding);
            $scope.HeaderInfo = oDUSoftWinding.LotNo +" ["+ oDUSoftWinding.ProductName+"]";
        }

        $scope.ViewType= sessionStorage.getItem("OperationType");
        $scope.btnYarnOut=false;
        if($scope.ViewType=="ShowYarnDetails")
        {
            $scope.btnYarnOut=true;
        }

        $scope.SearchByName = function(e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtSearchByName = $scope.txtSearchByName;

                var obj={
                    DyeingOrderID:0,
                    LotNo:txtSearchByName
                };

                $http.post(_sBaseAddress+ '/DUSoftwinding/SearchByLotNo',JSON.stringify(obj)).then(
                                function (response) {
                                    var result=jQuery.parseJSON(response.data);
                                    if(result.length<=0)
                                    {
                                        alert("No Data Found!"); return;
                                    }
                                    if(result[0].RouteSheetID>0 && result[0].ErrorMessage=="")
                                    {
                                        $scope.gridOptions= {data: result};
                                    }
                                    else
                                    {
                                        alert(result[0].ErrorMessage);
                                    }
                                },
                                function (response) {alert(jQuery.parseJSON(response.data));}
                            );
            }
        };


        $scope.Modal = function (objSQ, operation) {
            debugger;
            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'RSLot.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'RouteSheetController',
                resolve: {
                    obj: function () {
                        return { RSLot:objSQ, Operation: operation  };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                debugger;
                if(result!=undefined && result[0].RSRawLotID>0)
                {
                    debugger;
                    var oRouteSheet = $scope.gridApi.selection.getSelectedRows()[0];
                    var index=$scope.gridOptions.data.indexOf(oRouteSheet);

                    oRouteSheet.NoOfHanksCone=result.select('NumOfCone').sum();
                    oRouteSheet.NoOfHanksConeWithType=oRouteSheet.NoOfHanksCone+" "+oRouteSheet.DyeingType;
                    $scope.gridOptions.data[index]=oRouteSheet;
                    $scope.gridApi.selection.selectRow($scope.gridOptions.data[index]);
                    //$scope.RowSelect(oDURequisitions[userSession.getRowIndex()]);
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };
        //$scope.OrderQty=0.0;
        $scope.OpenLotModal = function()
        {
            debugger;
            var oRouteSheet = $scope.gridApi.selection.getSelectedRows()[0];

            if(oRouteSheet==null)
            {
                alert("Please, Select An Item !");
                return;
            }
            sessionStorage.setItem("SelectedLotIndex", $scope.gridOptions.data.indexOf(oRouteSheet));
            oRouteSheet.WorkingUnits=oWorkingUnits;


            $http.post(_sBaseAddress + '/RouteSheet/GetsRSRawLot', oRouteSheet).then(
               function (response)
               {
                   debugger;
                   var result=jQuery.parseJSON(response.data);
                   console.log(result);
                   if(result.RouteSheetID>0 && result.RSRawLots.length>0)
                   {
                       if(result.RSRawLots[0].ErrorMessage=="")
                           oRouteSheet.RSRawLots=result.RSRawLots;
                       else {
                           alert(result.RSRawLots[0].ErrorMessage);return;
                       }
                       $scope.Note=result.RSRawLots[0].Param;
                   }

                   $scope.Modal( oRouteSheet, 'Edit');
               },
               function (response) { alert(response.statusText);}
           );

        }

        $scope.YarnOut = function () {
            debugger;
            //if(!$scope.Validation()) return;
            var oRouteSheets=$scope.gridApi.selection.getSelectedRows();
            if(oRouteSheets.length<=0)
            {
                alert("Select an item from list.");return;
            }
            if(oRouteSheets[0].RSState>3)
            {
                alert("Already Yarn Out. Please Try With Another.!");return;
            }

            if (!confirm("Confirm to Yarn Out?")) return ;

            var SelectedIndex=$scope.gridOptions.data.indexOf(oRouteSheets[0]);

            if(oRouteSheets!=null && oRouteSheets.length>0)
            {
                var oRouteSheetIDs=oRouteSheets[0].RouteSheetID;
                for(var i=1;i<oRouteSheets.length;i++)
                {
                    oRouteSheetIDs+=","+oRouteSheets[i].RouteSheetID;
                }
                //alert("oRouteSheetIDs = "+oRouteSheetIDs);
            }
            console.log(oRouteSheetIDs);
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.get(_sBaseAddress + '/RouteSheet/RouteSheetYarnOut_Multi', { params: { sTemp: oRouteSheetIDs } }, config).then(
                function (response) {
                    var result=jQuery.parseJSON(response.data);
                    console.log(result);
                    if(result[0].RouteSheetID>0 && result[0].ErrorMessage=="")
                    {
                        debugger;
                        alert("Yarn Out Successfully!!");
                        $scope.gridOptions.data[SelectedIndex]=result[0];
                    }
                    else
                    {
                        alert(result[0].ErrorMessage);
                    }

                },
                function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        );
        };


        //$scope.YarnOut = function () {
        //    debugger;
        //    //if(!$scope.Validation()) return;
        //    var oRouteSheets=$scope.gridApi.selection.getSelectedRows();
        //    if(oRouteSheets.length<=0)
        //    {
        //        alert("Select an item from list.");return;
        //    }
        //    if(oRouteSheets!=null && oRouteSheets.length>0)
        //    {
        //        var oRouteSheetIDs=oRouteSheets[0].RouteSheetID+'~'+oRouteSheets[0].NoOfHanksCone;
        //        for(var i=1;i<oRouteSheets.length;i++)
        //        {
        //            oRouteSheetIDs+=","+oRouteSheets[i].RouteSheetID+'~'+oRouteSheets[i].NoOfHanksCone;;
        //        }
        //        //alert("oRouteSheetIDs = "+oRouteSheetIDs);
        //    }

        //    console.log(oRouteSheetIDs);
        //    debugger;
        //    var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
        //    $http.get(_sBaseAddress + '/DUSoftWinding/RouteSheetYarnOut', { params: { sTemp: oRouteSheetIDs } }, config).then(
        //        function (response) {
        //            var result=jQuery.parseJSON(response.data);
        //            console.log(result);
        //            if(result[0].RouteSheetID>0 && result[0].ErrorMessage=="")
        //            {
        //                debugger;
        //                alert("Yarn Out Successfully!!");
        //                userSession.previousPage();
        //            }
        //            else
        //            {
        //                alert(result[0].ErrorMessage);
        //            }
        //        },
        //        function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
        //);
        //};
        $scope.Close = function () {
            userSession.previousPage();
        };
    });

    CCapp.controller('ModalInstanceCtrl', function ($scope, $http,$uibModal, $uibModalInstance, uiGridConstants, msModal, obj) {
        debugger;
        $scope.disabled= false;
        $scope.Operation=obj.Operation;
        $scope.RSLot=obj.RSLot;
        $scope.IssueStores=obj.RSLot.WorkingUnits;
        $scope.RSLot.OrderProduct=obj.RSLot.ProductName;
        $scope.txtProductName=obj.RSLot.ProductName;
        $scope.RSShifts=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.RSShifts));

        if($scope.RSLot)
            $scope.Header="Order No:"+$scope.RSLot.OrderNo+" || Dyeing Qty:"+$scope.RSLot.Qty;

        if(obj.RSLot.LotNo!="")
            $scope.txtLotNo=obj.RSLot.LotNo+" [BL"+obj.RSLot.LotQty+"]";
        $scope.RSLot.LotProductID=obj.RSLot.ProductID;
        debugger;
        if(obj.RSLot.RSRawLots.length>0)
        {
            $scope.Header="Order No:"+$scope.RSLot.OrderNo+" || Dyeing Qty:"+$scope.RSLot.Qty+ " || "+$scope.RSLot.RSRawLots[0].Param;
            $scope.txtProductName=obj.RSLot.RSRawLots[0].ProductName;
            $scope.RSLot.LotProductID=obj.RSLot.RSRawLots[0].ProductID;
            $scope.RSLot.WorkingUnitID=obj.RSLot.RSRawLots[0].WorkingUnitID;
        }

        $scope.gridOptions_Lot= {
            multiSelect: false,
            enableFullRowSelection: true,
            showColumnFooter: true,
            columnDefs: [
                { field: 'LotNo', name:'Lot No', width:'20%' ,cellClass:'text-left',enableCellEdit:false},
                { field: 'Balance', name:'Balance', width:'15%' ,cellClass:'text-left',enableCellEdit:false},
                { field: 'Qty', name:'Qty',cellClass:'text-right number',enableCellEdit:true, cellFilter:'number:2', width:'20%', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                { field: 'NumOfCone', name:'Cone/Hank',cellClass:'text-right  number',enableCellEdit:true, cellFilter:'number:0', width:'15%', aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true, footerCellFilter: 'number:2', footerCellClass: 'text-right' },
                { field: 'OperationUnitName', name:'Store', width:'40%' ,cellClass:'text-left',enableCellEdit:false},
            ],
            data: $scope.RSLot.RSRawLots,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;

                gridApi.edit.on.afterCellEdit($scope,
                     function (rowEntity, colDef, newValue, oldValue)
                     {
                         debugger;
                         if(rowEntity.Qty > rowEntity.Balance)
                         {
                             rowEntity.Qty=oldValue;
                             alert("Requ. Qty Can Not Be Greater Than Balance Qty!!");
                         }
                         else if(rowEntity.Qty<=0 )
                         {
                             rowEntity.Qty=oldValue;
                             alert("Requ. Qty Can Not Be Equal Or Less Then Zero!!");
                         }
                         else if(chkRSQty()>$scope.RSLot.Qty)
                         {
                             rowEntity.Qty=oldValue;
                             alert("Requ. Qty["+ chkRSQty() +"] Can Not Be Greater Then RS Qty ["+$scope.RSLot.Qty+"] !!");
                         }
                         return rowEntity;
                     });
            }
        };

        function chkRSQty()
        {
            var nTotal=0;
            for(var i=0; i<$scope.gridOptions_Lot.data.length;i++)
            {
                nTotal= parseFloat($scope.gridOptions_Lot.data[i].Qty) +parseFloat(nTotal);
            }
            return nTotal;
        }

        function NotExist(oRSRawLot)
        {
            for(var i=0; i<$scope.gridOptions_Lot.data.length;i++)
            {
                if($scope.gridOptions_Lot.data[i].LotID==oRSRawLot.LotID)
                    return false
            }
            return true;
        }
        function GeBUID()
        {
            if($scope.RSLot.WorkingUnitID==undefined || $scope.RSLot.WorkingUnitID<=0){
                alert("Please, Select A Store !!"); return 0;
            }

            for(var i=0; i<$scope.IssueStores.length;i++)
            {
                if($scope.IssueStores[i].WorkingUnitID==$scope.RSLot.WorkingUnitID)
                    return $scope.IssueStores[i].BUID;
            }
            return 0;
        }
        $scope.PickLot= function ()
        {
            $scope.RSLot.LotID=0;
            if($scope.RSLot.LotProductID<=0)
            {
                alert("Please Pick a Product And Try Again"); return;
            }
            if($scope.RSLot.WorkingUnitID<=0)
            {
                alert("Please Select a Store And Try Again"); return;
            }
            var oRouteSheet = {
                RouteSheetID: ($scope.RSLot!=null && $scope.RSLot.RouteSheetID>0)? $scope.RSLot.RouteSheetID:0,
                ProductID_Raw:$scope.RSLot.LotProductID,
                LotNo:($scope.txtLotNo==undefined?'':$.trim($scope.txtLotNo)),
                Params:0+'~'+0+'~'+3,
                WorkingUnitID: $scope.RSLot.WorkingUnitID
            };

            $scope.txtLotNo ="";
            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/RouteSheet/GetsLotForRS',$.param(oRouteSheet), config).then(
                        function (response)
                        {
                            debugger;
                            var oDetailColumns = [];
                            var oColumn = { field: 'LotNo', name:'Lot No', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn ={ field: 'Balance', name:'Qty', width:'20%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn ={ field: 'ReportUnitSymbol', name:'Unit', width:'15%',cellClass: 'text-left',enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'LocationName', name:'Location', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'OperationUnitName', name:'Operation Unit', width:'20%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);

                            var results=(response.data);
                            if(results.length<=0)
                            {
                                alert("No Data Found!!"); return;
                            }

                            var modalObj={
                                size:'lg',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:true,
                                pickertitle:'Lot List',
                                searchingbyfieldName:'DestinationLotNo',
                                columns:oDetailColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                if(result[0].LotID>0)
                                {
                                    for(var i=0; i<result.length;i++)
                                    {
                                        var oLot=result[i];

                                        var nQty=( ($scope.RSLot.Qty-chkRSQty()) <= oLot.Balance?($scope.RSLot.Qty-chkRSQty()):oLot.Balance);

                                        oLot.RouteSheetID=$scope.RSLot.RouteSheetID;
                                        oLot.Qty=(nQty < 0 ? 0 : nQty);
                                        oLot.RSRawLotID=0;
                                        oLot.RSShiftID=$scope.RSLot.RSShiftID;
                                        if(NotExist(oLot))
                                            $scope.gridOptions_Lot.data.push(oLot);
                                    }
                                }
                                else
                                {
                                    $scope.RSLot.LotID=0;
                                    $scope.RSLot.LotNo="";
                                    $scope.txtLotNo="";
                                }
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(response.statusText);}
                    );
        };
        $scope.SearchKeyDownLot = function (e){
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtLotNo = $.trim($scope.txtLotNo);
                if(txtLotNo=="" || txtLotNo==null)
                {
                    alert("Type Lot No and Press Enter");
                    return;
                }
                $scope.PickLot();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtPorductNo='';
            }
        };
        $scope.RemoveLot= function ()
        {
            var oDetail = $scope.gridApi.selection.getSelectedRows()[0];
            if(oDetail==null)
            {
                alert("Select At least One item !");
                return;
            }
            var SelectedRowIndex=$scope.gridOptions_Lot.data.indexOf(oDetail);
            if (!confirm("Confirm to Remove?")) return ;

            if(oDetail.RSRawLotID==0)
                $scope.gridOptions_Lot.data.splice(SelectedRowIndex,1);
            else {
                $http.post(_sBaseAddress + '/RouteSheet/DeleteRSRawLot', oDetail).then(
                   function (response)
                   {
                       var result=JSON.parse(response.data);
                       if(result=="Deleted")
                       {
                           alert("Deleted Successfully!!");
                           $scope.gridOptions_Lot.data.splice(SelectedRowIndex,1);
                       }
                       else
                       {
                           alert(result);
                       }
                   },
                   function (response) { alert(response.statusText);}
               );

            }
        }

        $scope.PickProduct= function ()
        {
            debugger;
            $scope.RSLot.LotProductID="";
            $scope.RSLot.LotProductName="";
            $scope.RSLot.LotID=0;
            $scope.RSLot.LotNo="";
            $scope.txtLotNo="";
            var oPorduct= {
                ProductName:($scope.txtProductName == undefined ? "" : $scope.txtProductName),
                BUID:_nBUID//GeBUID()
            };

            if(oPorduct.BUID==0)
                return;

            debugger;
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/Product/SearchByProductBUWise',$.param(oPorduct), config).then(
                        function (response)
                        {
                            debugger;
                            var oDetailColumns = [];
                            var   oColumn = { field: 'ProductCode', name:'Code', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'ProductName', name:'Porduct', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            oColumn = { field: 'ProductCategoryName', name:'Category', width:'30%',cellClass: 'text-left', enableCellEdit:false };oDetailColumns.push(oColumn);
                            var results=(response.data);
                            var modalObj={
                                size:'md',
                                modalcontroller:'',
                                appcontroller:'',
                                objs:results,
                                multiSelect:false,
                                pickertitle:'Porduct List',
                                searchingbyfieldName:'DestinationLotNo',
                                columns:oDetailColumns
                            }
                            var modalInstance=msModal.Instance(modalObj);
                            modalInstance.result.then(function (result)
                            {
                                if(result.ProductID>0)
                                {
                                    $scope.RSLot.LotProductID=result.ProductID;
                                    $scope.RSLot.LotProductName=result.ProductName;
                                    $scope.txtProductName=result.ProductName;
                                }
                                else
                                {
                                    $scope.RSLot.ProductID=0;
                                    $scope.RSLot.ProductName="";
                                    $scope.RSLot.MUnit="";
                                    $scope.txtProductName="";
                                }
                            }, function () {
                                $log.info('Modal dismissed at: ' + new Date());
                            });
                        },
                            function (response) { alert(jQuery.parseJSON(response.data).Message);}
                    );
        };
        $scope.SearchKeyDownProduct = function (e){
            //debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtPorduct = $.trim($scope.txtProductName);
                if(txtPorduct=="" || txtPorduct==null)
                {
                    alert("Type Product Name and Press Enter");
                    return;
                }

                $scope.PickProduct();
            }else if (code == 8) //backspace=8
            {
                //debugger;
                $scope.txtPorductNo='';
                $scope.RSLot.LotProductID=0;
            }
        };

        $scope.Validation=function()
        {
            if($scope.RSLot.Name == "" || $scope.RSLot.Name == undefined){
                msModal.Message({headerTitle : '', bodyText:'Enter DyeingType Name.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                return false;
            }

            return  true;
        };

        $scope.SaveRSRawLot= function ()
        {
            var oRSLot= $scope.RSLot;

            for(var i=0; i<$scope.gridOptions_Lot.data.length; i++)
            {
                if(oRSLot.WorkingUnitID != $scope.gridOptions_Lot.data[i].WorkingUnitID)
                {
                    alert("Raw lot is not in same store!!"); return;
                }
            }

            oRSLot.RSRawLots=$scope.gridOptions_Lot.data;
            $http.post(_sBaseAddress + '/RouteSheet/SaveRSRawLot', oRSLot).then(
                function (response)
                {
                    var result=jQuery.parseJSON(response.data);
                    console.log(result);
                    if(result.RouteSheetID>0 && result.RSRawLots[0].RSRawLotID>0)
                    {
                        debugger;
                        alert("Data Saved Successfully!!");
                        $uibModalInstance.close(result.RSRawLots);
                        //userSession.setData('RouteSheets',$scope.RouteSheet);
                        //$scope.cancel();
                    }
                    else
                    {
                        alert(result.RSRawLots[0].ErrorMessage);
                    }
                },
                function (response) { alert(response.statusText);}
            );
        };

        $scope.cancel= function () {
            $uibModalInstance.close();
        };
    });
</script>