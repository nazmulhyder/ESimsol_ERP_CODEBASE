@{
    ViewBag.Title = "SoftWinding (Open)";
}
@model IEnumerable<ESimSol.BusinessObjects.DUSoftWinding>

    <div class="menuMainCollectionTable" ng-app="DUSoftWindingApp" style="height:535px; width:99.4%">
        <div ng-controller="DUSoftWindingController">
            <div style="margin-bottom:2px; display:block" title="SoftWinding List" class="ui-grid-top-panel">
                <button type="button" class="btn btn-xs btn-primary" aria-label="Left Align" ng-click="AdvanceSearch()" ng-hide="btnAdvSearch"> <span class="glyphicon glyphicon-search" aria-hidden="true"> Adv.Search</span></button>

                <input type="text" ng-model="txtSearchByName" ng-keyup="SearchByName($event)" placeholder="Search by Lot No" style="width:190px" />
                @*<button type="button" id="btnAdd" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="Add()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>*@
                <button type="button" id="btnEdit" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="Edit()"><span class="glyphicon glyphicon-edit" aria-hidden="true"> Operation</span></button>
                <button type="button" id="btnView" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="View()"><span class="glyphicon glyphicon-th" aria-hidden="true"> View</span></button>
                <button type="button" id="btnYarnOut" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="YarnOut()"><span class="glyphicon glyphicon-th" aria-hidden="true"> Yarn Out</span></button>
                @*<button type="button" id="btnDetails" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="ShowDetails()"><span class="glyphicon glyphicon-th" aria-hidden="true"> Show Batch</span></button>*@
                @*<button type="button" id="btnPrintList" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="printView()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Print List</span></button>*@
                <button type="button" id="btnPrintList" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="printLedger()"><span class="glyphicon glyphicon-print" aria-hidden="true">Preview(Ledger)</span></button>
                <button type="button" id="btnPrintList" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="printStock()"><span class="glyphicon glyphicon-print" aria-hidden="true">Preview(Stock)</span></button>
                <button type="button" id="btnExportToExcel" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="printExcel()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Export To Excel</span></button>
               
                @*<button type="button" id="btnDelete" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="Delete()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Delete</span></button>*@
                @*<button type="button" id="btnPrintList" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="PrintList()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Print List</span></button>
                <button type="button" id="btnExportToExcel" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="ExportToExcel()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Export to Excel</span></button>*@
            </div>
            <div ui-grid="gridOptions" ui-grid-selection  class="grid-angular" style="width:100%"></div>
        </div>
    </div>
<style type="text/css">
    .grid-angular {
        width: 100%;
        height:520px;
    }
</style>
<script src="~/Views/DUSoftWinding/AdvSearchDUSoftWinding_Open.js"></script>
<script type="text/javascript">
    debugger;
    var oDUSoftWindings =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    var _nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oRouteSheetSetup = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.RouteSheetSetup));

    //$('#btnExportToExcel,#btnPrintList').hide();
    debugger;
    var CCapp= angular.module('DUSoftWindingApp', ['ui.grid','ui.grid.selection','ms.service','DUSoftWindingOpen.service']);
    CCapp.controller('DUSoftWindingController',function ($scope,$http,uiGridConstants,userSession,DUSoftWindingOpenservice)
    {
        oDUSoftWindings= (userSession.getData('DUSoftWindings').length>0)? userSession.getData('DUSoftWindings'):oDUSoftWindings;
        debugger;
        $scope.gridOptions= {
            enableRowSelection: true,
            enableRowHeaderSelection: false,
            multiSelect: false,
            showColumnFooter: true,
            enableColumnResizing: true,
            columnDefs: [
              {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
              { field: 'ReceiveDateST', name:'Receive Date', width:'10%' },
              //{ field: 'DyeingOrderNo', name:'Order No', width:'10%' },
              //{ field: 'ContractorName', name:'Buyer', width:'15%' , enableSorting: false},
              { field: 'ProductName', name:'Product', width:'18%' , enableSorting: false},
              //{ field: 'Qty_Order', name:'OrderQty', width:'10%', cellClass:'text-right',cellFilter:'number:2', enableSorting: false},
              { field: 'LotNo', name:'Raw Lot No', width:'10%' },

              //{ field: 'Qty_In',        name:'Opening Received',       width:'10%',     cellClass: 'text-right',  cellFilter: 'number:2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:2'},
              { field: 'Qty',        name:'Receive Qty',       width:'10%',     cellClass: 'text-right',  cellFilter: 'number:2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:2'},
              //{ field: 'Qty_In',        name:'Total Received',       width:'10%',     cellClass: 'text-right',  cellFilter: 'number:2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:2'},
              //{ field: 'Qty_RSOut',        name:'Total Issue Qty',       width:'10%',     cellClass: 'text-right',  cellFilter: 'number:2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:2'},
              { field: 'Balance',        name:'Balance',       width:'10%',     cellClass: 'text-right',  cellFilter: 'number:2',  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:2'},
              { field: 'BagNo', name:'Cone(Raw)', width:'10%' , cellClass:'text-right',cellFilter:'number:2',enableSorting: false},
              { field: 'NumOfCone', name:'Cone(SW)', width:'10%' , cellClass:'text-right',cellFilter:'number:2',enableSorting: false},
              { field: 'StatusST', name:'Status', width:'10%' , enableSorting: false}
            ],
            data: oDUSoftWindings,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();

                debugger;
                if(oDUSoftWindings.length>0 && userSession.getRowIndex()>=0)
                {
                    $scope.gridApi.grid.modifyRows(oDUSoftWindings);
                    $scope.gridApi.selection.selectRow(oDUSoftWindings[userSession.getRowIndex()]);
                    $scope.RowSelect(oDUSoftWindings[userSession.getRowIndex()]);
                }
                //$scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                //    $scope.RowSelect(row.entity ); });
                userSession.clear();

            }
        };
        sessionStorage.setItem("BUID",_nBUID);
        sessionStorage.setItem('BaseAddress',_sBaseAddress);
        $scope.BUID=_nBUID;
        $scope.SearchByName_OFF = function(e)
        {
            debugger;
            var txtSearchByName = $scope.txtSearchByName;
            var rows = $scope.gridOptions.data;
            var sTempName="";
            var oSearchedList = [];
            var oCurrentList = $scope.gridOptions.data;
            if (e.which == 8)
            {
                oCurrentList = oDUSoftWindings;
            }
            for(i=0;i<oCurrentList.length;++i){
                sTempName=oCurrentList[i].DyeingOrderNo;
                n=sTempName.toUpperCase().indexOf(txtSearchByName.toUpperCase())
                if(n!=-1)
                {
                    oSearchedList.push(oCurrentList[i]);
                }
            }
            $scope.gridOptions= {data: oSearchedList};
        }

        $scope.SearchByName = function(e)
        {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13)
            {
                var txtSearchByName = $.trim($scope.txtSearchByName);
                if(txtSearchByName=="" || txtSearchByName==null)
                {
                    alert("Type Lot No and Press Enter");
                    return;
                }
                var oDUSoftWinding={
                               LotNo:txtSearchByName
                };

                $http.post(_sBaseAddress+'/DUSoftWinding/SWSearchByNo',JSON.stringify(oDUSoftWinding)).then(
                 function (response)
                 {
                     var oDUSoftWindings= jQuery.parseJSON(response.data);

                     if(oDUSoftWindings.length<=0)
                     {
                         alert("No Data Found!");return;
                     }

                     if (oDUSoftWindings[0].ErrorMessage=="" || oDUSoftWindings[0].ErrorMessage==null)
                     {
                         sTemp= 0 + '~' + icsdateformat(new Date()) + '~' + icsdateformat(new Date()) + '~'
                              //+ 0 + '~' + icsdateformat(new Date())+ '~' + icsdateformat(new Date()) + '~'
                              + txtSearchByName + '~'
                              + false+ '~' + false  + '~' + false
                              + '~' +sessionStorage.getItem('BUID') ;

                         sessionStorage.setItem("sTempString", sTemp);
                         $scope.gridOptions= {data: oDUSoftWindings};
                     }
                     else
                     {
                         alert(oDUSoftWindings[0].ErrorMessage);
                     }
                 },
                     function (response) { alert(response.statusText);}
             );
            }
        }
        $scope.Edit= function ()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUSoftWinding= data[0];//get selected index
            if(oDUSoftWinding==null || oDUSoftWinding.DUSoftWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oDUSoftWinding);
            sessionStorage.setItem("Operation","Edit");
            sessionStorage.setItem('BaseAddress',_sBaseAddress);
            sessionStorage.setItem("DUSoftWindings", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("DUSoftWindingHeader", "Edit Color Category");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = _sBaseAddress+  "/DUSoftWinding/ViewDUSoftWinding_Open?id="+oDUSoftWinding.DUSoftWindingID+"&buid="+$scope.BUID
        }

        $scope.View= function ()
        {
            //debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUSoftWinding= data[0];//get selected index
            if(oDUSoftWinding==null || oDUSoftWinding.DUSoftWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oDUSoftWinding);
            sessionStorage.setItem("DUSoftWindings", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("DUSoftWindingHeader", "View Color Category");
            sessionStorage.setItem("BackLink", window.location.href);
            sessionStorage.setItem("Operation","View");
            sessionStorage.setItem('BaseAddress',_sBaseAddress);
            window.location.href = _sBaseAddress+  "/DUSoftWinding/ViewDUSoftWinding_Open?id="+oDUSoftWinding.DUSoftWindingID+"&buid="+$scope.BUID;
        }
        $scope.Delete = function()
        {
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUSoftWinding= data[0];//get selected index
            if(oDUSoftWinding==null || oDUSoftWinding.DUSoftWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if (!confirm("Confirm to Delete?")) return ;
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oDUSoftWinding);
            if (oDUSoftWinding.DUSoftWindingID > 0)
            {
                $.ajax
                ({
                    type: "GET",
                    dataType: "json",
                    url : _sBaseAddress+ "/DUSoftWinding/Delete",
                    data: { id: oDUSoftWinding.DUSoftWindingID},
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        debugger;
                        feedbackmessage = jQuery.parseJSON(data);
                        if (feedbackmessage == "Deleted")
                        {
                            alert("Delete sucessfully");
                            $scope.gridOptions.data.splice(SelectedRowIndex,1);
                            $scope.gridApi.core.refresh();
                        }
                        else
                        {
                            alert(feedbackmessage);
                        }
                    },
                    error: function (xhr, status, error)
                    {
                        alert(error);
                    }

                });
            }
        }
        $scope.PrintList = function()
        {
            var oDUSoftWindings= $scope.gridOptions.data;
            var ids ="";
            if(oDUSoftWindings.length >0)
            {
                for(var i =0;i<oDUSoftWindings.length;i++)
                {
                    ids =ids+oDUSoftWindings[i].DUSoftWindingID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else
            {
                alert("Data not found ");
                return;
            }
            window.open(_sBaseAddress + '/DUSoftWinding/PrintList_Open?sIDs='+ids);
        }
        $scope.ExportToExcel = function()
        {
            var oDUSoftWindings=  $scope.gridOptions.data;
            var ids ="";
            if(oDUSoftWindings.length >0)
            {
                for(var i =0;i<oDUSoftWindings.length;i++)
                {
                    ids =ids+oDUSoftWindings[i].DUSoftWindingID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else
            {
                alert("Data not found ");
                return;
            }
            window.open(_sBaseAddress + '/DUSoftWinding/DUSoftWindingExportToExcel_Open?sIDs='+ids);
        }

        $scope.YarnOut= function ()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUSoftWinding= data[0];//get selected index
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oDUSoftWinding);

            if(oDUSoftWinding==null || oDUSoftWinding.DUSoftWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }

            //var nID=(data[0]==undefined? 0 : data[0].LotID);


            sessionStorage.setItem('BaseAddress',_sBaseAddress);
            sessionStorage.setItem("DUSoftWinding", JSON.stringify(data[0]));
            sessionStorage.setItem("DUSoftWindings", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("DUSoftWindingHeader", "Yarn Out");
            sessionStorage.setItem("OperationType", "YarnOut");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = _sBaseAddress+  "/DUSoftWinding/ViewDUSoftWindingYarnOut_Open?id="+oDUSoftWinding.DUSoftWindingID+"&buid="+$scope.BUID;
        }

        $scope.ShowDetails= function ()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUSoftWinding= data[0];//get selected index
            if(oDUSoftWinding==null || oDUSoftWinding.DUSoftWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oDUSoftWinding);
            sessionStorage.setItem("DUSoftWindings", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("DUSoftWindingHeader", "Yarn Details");
            sessionStorage.setItem("OperationType", "ShowYarnDetails");
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = _sBaseAddress+  "/DUSoftWinding/ViewDUSoftWinding_OpenYarnOut?id="+oDUSoftWinding.DUSoftWindingID+"&buid="+0;
        }

        $scope.AdvanceSearch = function ()
        {
            debugger;
            $scope.MRNo ="";
            var modalObj={
                modalcontroller:'ModalDUSoftWindingAdvanceSearchCtrl',
                appcontroller:'DUSoftWindingController',
                CompareOperators:oCompareOperators,
                RouteSheetSetup:oRouteSheetSetup
                //RequisitionTypes:$scope.RequisitionTypes,
                //IssueStores:$scope.IssueStores,
                //ReceiveStores: $scope.ReceiveStores
            }
            var modalInstance=DUSoftWindingOpenservice.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                debugger;
                $scope.gridOptions.data = result;
            }, function () {
                //$log.info('Modal dismissed at: ' + icsdateformat(new Date()));
            });
        };

        $scope.printView = function()
        {
            debugger;
            var  sTemp = sessionStorage.getItem("sTempString");debugger;
            if(sTemp==null)
            {
                sTemp= 0 + '~' + icsdateformat(new Date()) + '~' + icsdateformat(new Date()) + '~'
                             + 0 + '~' + icsdateformat(new Date())+ '~' + icsdateformat(new Date()) + '~'
                             + "" + '~' + "" + '~'
                             + false+ '~' + false  + '~' + false
                             + '~' +sessionStorage.getItem('BUID') ;

                alert("Please select any searching criteria and try again!"); return;
            }
            window.open(_sBaseAddress + '/DUSoftWinding/PrintDUSoftWinding_Open?sTemp='+sTemp, "_blank");
        };

        $scope.printLedger = function()
        {
            debugger;
            var  sTemp = sessionStorage.getItem("sTempString");debugger;
            if(sTemp==null)
            {
                sTemp= 1 + '~' + icsdateformat(new Date()) + '~' + icsdateformat(new Date()) + '~'
                             + "" + '~' + "" + '~'
                             + false+ '~' + false  + '~' + false
                             + '~' +sessionStorage.getItem('BUID') ;

            }
            window.open(_sBaseAddress + '/DUSoftWinding/PrintDUSoftWinding_Leadger?sTemp='+sTemp, "_blank");
        };
        $scope.printStock = function()
        {
            debugger;
            var  sTemp = _nBUID;

            window.open(_sBaseAddress + '/DUSoftWinding/PrintDUSoftWinding_Stock?sTemp='+sTemp, "_blank");
        };


        $scope.PrintPreviewLot = function ()
        {
            debugger;
            debugger;
            if($scope.SeachString=="")
            {
                if(!$scope.Validate())return;
                $scope.SeachString= nBUID+'~'+$scope.dtStart+'~'+$scope.dtEnd+'~'+($scope.WorkingUnitIDs==undefined ? "" :$scope.WorkingUnitIDs);
            }
            window.open(sessionStorage.getItem('BaseAddress') + '/InventoryTraking/PrintInventoryTransactions?sTempString='+$scope.SeachString);
        };


        $scope.printExcel = function()
        {
            var  sTemp = sessionStorage.getItem("sTempString");debugger;
            if(sTemp==null)
            {
                //sTemp= 0 + '~' + icsdateformat(new Date()) + '~' + icsdateformat(new Date()) + '~'
                //                + 0 + '~' + icsdateformat(new Date())+ '~' + icsdateformat(new Date()) + '~'
                //                + "" + '~' + "" + '~'
                //                + false+ '~' + false  + '~' + false
                //                + '~' +sessionStorage.getItem('BUID') ;

                alert("Please select any searching criteria and try again!"); return;
            }
            window.open(_sBaseAddress + '/DUSoftWinding/ExportToExcelDUSoftWinding_Open?sTemp='+sTemp, "_blank");
        };

        //button hide unhide
        //$('#btnAdd,#btnEdit,#btnView,#btnDelete,#btnPrintList').hide();
        if(PermissionChecker('Add','DUSoftWinding',oAuthorizationRolesMapping)){$("#btnAdd").show();}
        if(PermissionChecker('Edit','DUSoftWinding',oAuthorizationRolesMapping)){$("#btnEdit").show();}
        if(PermissionChecker('Edit','DUSoftWinding',oAuthorizationRolesMapping)){$("#btnYarnOut").show();}
        if(PermissionChecker('Edit','DUSoftWinding',oAuthorizationRolesMapping)){$("#btnDetails").show();}
        if(PermissionChecker('View','DUSoftWinding',oAuthorizationRolesMapping)){$("#btnView").show();}
        if(PermissionChecker('Delete','DUSoftWinding',oAuthorizationRolesMapping)){$("#btnDelete").show();}
        if(PermissionChecker('Print','DUSoftWinding',oAuthorizationRolesMapping)){$("#btnPrintList").show();}
        //if(PermissionChecker('Delete','DUSoftWinding',oAuthorizationRolesMapping)){$("#btnDelete").show();}
        //if(PermissionChecker('PrintList','DUSoftWinding',oAuthorizationRolesMapping)){$("#btnPrintList").show();}
    });

</script>