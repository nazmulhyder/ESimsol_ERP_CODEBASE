@{
    ViewBag.Title = "Production Order";
}

<html>
<body>
    @model ESimSol.BusinessObjects.GUProductionOrder
    <div style="font-family:Tahoma; width:100%;" id="divPanel" class="menuMainCollectionTable">
        <div id="divPO" class="easyui-panel" title="" style="width:100%;height:235px;padding:0px;">
            <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                <tr>
                    <td style="width:750px">
                        <table border="0" cellpadding="2" cellspacing="2" style="font-size:11px; font-weight:bold">
                            <tr>
                                <td style="width:120px; text-align:right"></td>
                                <td style="width:280px"></td>
                                <td style="width:120px; text-align:right"></td>
                                <td style="width:230px; font-size:9px">(System Generated)</td>
                            </tr>
                            <tr>
                                <td style="width:120px; text-align:right">Buyer Name :</td>
                                <td style="width:280px">@Html.TextBoxFor(model => model.BuyerName, new { style = "width: 280px;", id = "txtBuyerName", placeholder = "Type Buyer & Press Enter" })</td>
                                <td style="width:120px; text-align:right">P. F. Order No :</td>
                                <td style="width:230px">@Html.TextBoxFor(model => model.GUProductionOrderNo, new { style = "width: 230px;", id = "txtGUProductionOrderNo", disabled = "disabled" })</td>
                            </tr>
                            <tr>
                                <td style="width:120px; text-align:right"><input type="button" value="Order Recap" id="btnPickOrderRecap" /> </td>
                                <td style="width:280px">@Html.TextBoxFor(model => model.RecapWithStyleNo, new { style = "width: 280px;", id = "txtOrderRecapNo", placeholder = "Type Recap/PO No & Press Enter" })</td>
                                <td style="width:120px; text-align:right">Fabric :</td>
                                <td style="width:230px">@Html.TextBoxFor(model => model.FabricProductName, new { style = "width: 230px;", id = "txtFabric", disabled = "disabled" })</td>
                            </tr>
                            <tr>
                                <td style="width:120px; text-align:right">Product Name :</td>
                                <td style="width:280px">@Html.TextBoxFor(model => model.GarmentsProductName, new { style = "width: 280px;", id = "txtProductName", disabled = "disabled" })</td>
                                <td style="width:120px; text-align:right">GG :</td>
                                <td style="width:230px">
                                    <table border="0" cellpadding="0" cellspacing="2" style="font-size:11px; font-weight:bold">
                                        <tr>
                                            <td style="width:80px">@Html.TextBoxFor(model => model.GG, new { style = "width: 80px;", id = "txtGG", disabled = "disabled" })</td>
                                            <td style="width:70px; text-align:right">Count :</td>
                                            <td style="width:80px">@Html.TextBoxFor(model => model.Count, new { style = "width: 80px;", id = "txtCount", disabled = "disabled" })</td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td style="width:120px; text-align:right"> Production Unit :</td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.ProductionUnitName, new { style = "width:100%;", id = "txtProductionUnit", Placeholder = "type Name & Press Enter" })
                                </td>
                                <td style="width:120px; text-align:right">Merchandiser :</td>
                                <td style="width:230px">@Html.TextBoxFor(model => model.MerchandiserName, new { style = "width: 230px;", id = "txtMerchandiserName", disabled = "disabled" })</td>
                            </tr>
                            <tr>
                                <td style="width:120px; text-align:right">Ship. Schedule:</td>
                                <td style="width:280px">
                                    <select id="cboShipmentSchedule" style="width:100%"></select>
                                </td>
                                <td style="width:120px; text-align:right">Scchedule Qty :</td>
                                <td style="width:230px">@Html.TextBoxFor(model => model.SSQty, new { style = "width: 230px; text-align:right", id = "txtSSQty", disabled = "disabled" })</td>
                            </tr>
                            <tr>
                                <td style="width:120px; text-align:right">CutOff Type:</td>
                                <td style="width:280px">
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td style="width:30%">@Html.TextBoxFor(model => model.CutOffTypeSt, new { style = "width: 100%;", id = "txtCutOffTypeSt", disabled = "disabled" })</td>
                                            <td style="width:30%;text-align:right">Cut Off Date: </td>
                                            <td style="width:30%">@Html.TextBoxFor(model => model.CutOffDateSt, new { style = "width: 100%;", id = "txtCutOffDateSt", disabled = "disabled" })</td>
                                        </tr>
                                    </table>
                                </td>
                                <td style="width:120px; text-align:right">Shipment Date:</td>
                                <td style="width:230px">@Html.TextBoxFor(model => model.ShipmentDateInString, new { style = "width: 100%;", id = "txtShipmentDate", disabled = "disabled" })</td>
                            </tr>
                            <tr>
                                <td style="width:120px; text-align:right">Order Date :</td>
                                <td style="width:280px">
                                    <input id="txtOrderDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:100%" />
                                </td>
                                <td style="width:120px; text-align:right; font-size:10px;">Factory Ship. Date :</td>
                                <td style="width:230px"><input id="txtFactoryShipmentDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:230px" /></td>
                            </tr>
                            <tr>
                                <td style="width:120px; text-align:right">Note :</td>
                                <td style="width:280px">
                                    @Html.TextBoxFor(model => model.Note, new { style = "width:100%;", id = "txtNote" })
                                </td>
                                <td style="width:120px; text-align:right; font-size:10px;">Input Date :</td>
                                <td style="width:230px"><input id="txtInputDate" type="text" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" style="width:230px" /></td>
                            </tr>
                        </table>
                    </td>
                    <td style="width:170px; vertical-align:middle">
                        <img id="imgCoverImage" src="@Url.Action("GetLargeImage", "TechnicalSheet", new { id = Model.TechnicalSheetID })" alt="Photo" style="width:165px; height:175px" />
                    </td>
                </tr>
            </table>
        </div>

        <div style=" margin-left:1px; margin-top:3px; height:215px; width:99.5%;">
            <table id="tblGUProductionOrderDetail" title="Order Detail(s):" fit="true" fitcolumns="true" class="easyui-datagrid" style="width:98%;height:150px"
                   data-options="singleSelect: true, fitColumns:false, rownumbers:true,pagination:false,autoRowHeight:false, toolbar:'#toolbar',showFooter: true,onClickRow: onClickRow"></table>
            <div id="toolbar">
                <table border="0" cellpadding="0" cellspacing="0" style="font-size:12px">
                    <tr style="height:20px">
                        <td style="width:50px"><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="RefreshPODetail()">Refresh</a></td>
                    </tr>
                </table>
            </div>
        </div>
        <table border="0" cellpadding="0" cellspacing="0">
            <tr>
                <td>
                    <div id="divTotalSummary" style="font-size:12; height:22px; width:980px; overflow:auto">
                        <b>Total : </b>
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <fieldset style=" font-family:Tahoma">
        <legend style="font-weight:bold; font-family:Tahoma"> Action : </legend>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
            <tr>
                <td style="width:140px; text-align:left"><a id="linkOrderSummary" style="cursor:pointer;">Order Summary</a></td>
                <td style="width:700px; text-align:right"></td>
                <td style="width:60px">
                    <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                </td>
                <td style="width:60px">
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                </td>
            </tr>
        </table>
    </fieldset>
</body>
</html>


<script type="text/javascript">
    var _oGUProductionOrder=null;
    var _sBaseAddress="";
    var _oProductionDetails=[];
    var _oOrderRecap=null;
    var _oODSDetail =null;
    var _nODSDetailQty =0;
    var _objName =null;
    var _oBuyer= null;
    var _oProductionUnitID = null;
    var _oTechnicalSheetSizes = [];
    var _oColorSizeRatios = [];
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oGUProductionOrder =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oTechnicalSheetSizes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.TechnicalSheetSizes));
        _oColorSizeRatios = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ColorSizeRatios));
        _objName = sessionStorage.getItem('GUProductionOrderHeader');
        $('#divPO').data('ShipmentSchedules',[]);
        $('#divPanel').panel({
            title:sessionStorage.getItem("GUProductionOrderHeader")
        })
        $('#txtFactoryShipmentDate').datebox('setValue',_oGUProductionOrder.FactoryShipmentDateSt);
        $('#txtInputDate').datebox('setValue',_oGUProductionOrder.InputDateSt);
        $('#txtOrderDate').datebox('setValue', _oGUProductionOrder.OrderDateInString);

        if(_objName=="View GUProductionOrder")
        {
            document.getElementById('btnSave').style.display = 'none';
        }
        if(_objName=="Edit Production Order")
        {
            ForEdit();
        }
        if(_objName=="View Production Order")
        {
            ForEdit();
            ForView();
        }
    });


    function MakeDetailTable(oTechnicalSheetSizes)
    {
        debugger;
        var oTempTechnicalSheetSizes = [];
        var tblColums=[];
        var oColumn=null;
        oColumn= { field :"ColorName", title:"Color Name", width:"120"};
        tblColums.push(oColumn);
        var count =0;
        for(var i=0; i<oTechnicalSheetSizes.length;i++)
        {
            count++;
            oColumn= {
                field:"OrderQty"+count,
                title: oTechnicalSheetSizes[i].SizeCategoryName,
                width: "60",
                align: "right",
                editor: {type:'numberbox',options:{ precision:0}}
            };
            tblColums.push(oColumn);
            oTempTechnicalSheetSizes.push(oTechnicalSheetSizes[i]);
        }
        oColumn= { field :"ColorWiseTotal", title:"Total", width:"100",  align: "right"};
        tblColums.push(oColumn);

        $('#tblGUProductionOrderDetail').datagrid({ columns:[tblColums]});
        RefreshSummary(oTempTechnicalSheetSizes);
    }

    function RefreshSummary(oTechnicalSheetSizes)
    {

        var sInnerHTML="<table border='0' cellspacing='2' cellpadding='2' style='font-size:11px; font-weight:bold'><tr>";
        sInnerHTML=sInnerHTML+"<td style='width:135px; text-align:right'> Total :</td>";
        var count =0;
        for(var j=0; j<oTechnicalSheetSizes.length;j++)
        {
            count++;
            sInnerHTML = sInnerHTML+"<td style='width:56px; text-align:right'>"+SizeWiseTotal(count)+"</td>";
        }
        sInnerHTML=sInnerHTML+"<td style='width:100px; text-align:right'>"+SizeWiseTotal( 21)+"</td>";//total qty
        sInnerHTML=sInnerHTML+"</tr></table>";

        var divTotalSummary= document.getElementById('divTotalSummary');
        divTotalSummary.innerHTML=sInnerHTML;
    }

    function SizeWiseTotal( n)
    {
        var nSizeWiseTotal=0;
        var   oColorSizeWiseRatios =  $('#tblGUProductionOrderDetail').datagrid('getRows');

        if(oColorSizeWiseRatios!= null)
        {
            for(var i=0; i<oColorSizeWiseRatios.length; i++)
            {
                if( parseInt(n)==1){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty1);}
                else if(parseInt(n)==2){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty2);}
                else if(parseInt(n)==3){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty3);}
                else if(parseInt(n)==4){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty4);}
                else if(parseInt(n)==5){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty5);}
                else if(parseInt(n)==6){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty6);}
                else if(parseInt(n)==7){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty7);}
                else if(parseInt(n)==8){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty8);}
                else if(parseInt(n)==9){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty9);}
                else if(parseInt(n)==10){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty10);}
                else if(parseInt(n)==11){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty11);}
                else if(parseInt(n)==12){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty12);}
                else if(parseInt(n)==13){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty13);}
                else if(parseInt(n)==14){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty14);}
                else if(parseInt(n)==15){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty15);}
                else if(parseInt(n)==16){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty16);}
                else if(parseInt(n)==17){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty17);}
                else if(parseInt(n)==18){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty18);}
                else if(parseInt(n)==19){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty19);}
                else if(n==20){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].OrderQty20);}
                else if(n==21){nSizeWiseTotal=nSizeWiseTotal+parseInt(oColorSizeWiseRatios[i].ColorWiseTotal);}
            }
        }
        return nSizeWiseTotal;
    }

    function RefreshPODetail()
    {
        endEditing();
        var oGUProductionOrderDetails = $('#tblGUProductionOrderDetail').datagrid('getRows');
        data=oGUProductionOrderDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblGUProductionOrderDetail').datagrid('loadData',data);
        RefreshSummary(_oTechnicalSheetSizes);
    }

    function ForEdit()
    {
        MakeDetailTable(_oTechnicalSheetSizes);
        RefreshDetails(_oColorSizeRatios);
        var txttBuyerName=document.getElementById("txtBuyerName");
        txttBuyerName.style.color="blue";
        txttBuyerName.style.fontWeight="bold";
        var txtOrderRecapNo=document.getElementById("txtOrderRecapNo");
        txtOrderRecapNo.style.color="blue";
        txtOrderRecapNo.style.fontWeight="bold";        
        LoadShipmentSchedules(_oGUProductionOrder.OrderRecapID);
    }

    function ForView()
    {
        document.getElementById('txtBuyerName').disabled = true;
        document.getElementById('btnPickOrderRecap').disabled = true;
        document.getElementById('txtFactoryShipmentDate').disabled = true;
        document.getElementById('txtOrderDate').disabled = true;
        document.getElementById('txtNote').disabled = true;
        document.getElementById('btnSave').style.display = 'none';
    }

    $('#cboShipmentSchedule').change(function(){
        var nShipmentScheduleID = $('#cboShipmentSchedule').val();
        if(parseInt(nShipmentScheduleID)>0)
        {
            var oShipmentSchedule = ICS_FindObject($('#divPO').data('ShipmentSchedules'),'ShipmentScheduleID',parseInt(nShipmentScheduleID));
            $('#txtSSQty').val(oShipmentSchedule.TotalQty);
            $('#txtCutOffTypeSt').val(oShipmentSchedule.CutOffTypeST);
            $('#txtCutOffDateSt').val(oShipmentSchedule.CutOffDateSt);
            $('#txtShipmentDate').val(oShipmentSchedule.ShipmentDateSt);
            MakeGUProductionOrderDetails(nShipmentScheduleID, _oOrderRecap.TechnicalSheetID);
        }
    });

    $('#btnPickOrderRecap').click(function (e) {
        debugger;
        if(_oGUProductionOrder.BuyerID<=0)
        {
            alert("Please Select a Buyer!");
            return;
        }
        PickOrderRecap("");
    });
    $('#txtOrderRecapNo').keydown(function (e) {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13)
        {
            if(_oGUProductionOrder.BuyerID<=0)
            {
                alert("Please Select a Buyer!");
                return;
            }
            var txtOrderRecapNo = document.getElementById('txtOrderRecapNo').value;
            if(txtOrderRecapNo!="")
            {
                PickOrderRecap(txtOrderRecapNo);
            }else{
                alert("Type Recap No & Press Enter");
                return;
            }
        }else  if (code == 8) //backspace=8
        {
            //debugger;
            _oOrderRecap =   {TechnicalSheetID:0,OrderRecapID:0};
            var txtOrderRecapNo=document.getElementById("txtOrderRecapNo");
            txtOrderRecapNo.style.color="black";
            txtOrderRecapNo.style.fontWeight="normal";
            _oGUProductionOrder.OrderRecapID =  0;
            _oGUProductionOrder.MerchandiserID = 0;
            _oGUProductionOrder.ProductID =0;
            _oGUProductionOrder.FabricID =0;
            _oGUProductionOrder.TechnicalSheetID = 0;
            $("#txtFabric").val('');
            $("#txtProductName").val( '');
            $("#txtMerchandiserName").val('');
            $("#txtCount").val('');
            $("#txtGG").val('');
            RefreshStyleImage(_oOrderRecap);
            LoadShipmentSchedules(_oOrderRecap.OrderRecapID);
        }
    });

function PickOrderRecap(sTxtName)
{
    debugger;

    var oOrderRecap = {
        BuyerID: parseInt(_oGUProductionOrder.BuyerID),
        OrderRecapNo:sTxtName
    };
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oOrderRecap,
        ControllerName: "GUProductionOrder",
        ActionName: "GetODSOrderRecaps",
        IsWinClose: false
    };

    var tblColums = [];
    var oColumn = { field: "OrderRecapNo", title: "OrderRecap No", width: 180, align: "left" }; tblColums.push(oColumn);
    oColumn = { field: "StyleNo", title: "Style No", width: 160, align: "left" }; tblColums.push(oColumn);
    oColumn = { field: "BuyerName", title: "Buyer Name", width: 100, align: "left" }; tblColums.push(oColumn);
    oColumn = { field: "TotalQuantityInString", title: "Total Quantity", width: 100, align: "left" }; tblColums.push(oColumn);
    oColumn = { field: "ProductName", title: "Product Name", width: 100, align: "left" }; tblColums.push(oColumn);

    DynamicPiker('OrderRecap',obj,tblColums,false,'StyleNo','OrderRecapID'); //pickerName(unique),obj,table,multiReturn,SearchingField
}
function SetOrderRecap(oOrderRecap)
{
    debugger;
    if(oOrderRecap!=null)
    {
        _oOrderRecap =   oOrderRecap;
        $("#txtOrderRecapNo")[0].value = _oOrderRecap.OrderRecapWithStyleNo;
        var txttBuyerName=document.getElementById("txtOrderRecapNo");
        txttBuyerName.value=_oOrderRecap.OrderRecapWithStyleNo;
        txttBuyerName.style.color="blue";
        txttBuyerName.style.fontWeight="bold";
        _oGUProductionOrder.OrderRecapID =  _oOrderRecap. OrderRecapID;
        _oGUProductionOrder.MerchandiserID = _oOrderRecap.MerchandiserID;
        _oGUProductionOrder.ProductID =_oOrderRecap.ProductID;
        _oGUProductionOrder.FabricID =_oOrderRecap.FabricID;
        _oGUProductionOrder.TechnicalSheetID = _oOrderRecap.TechnicalSheetID;
        $("#txtFabric").val(_oOrderRecap.FabricName);
        $("#txtProductName").val( _oOrderRecap.ProductName);
        $("#txtMerchandiserName").val(_oOrderRecap.MerchandiserName);
        $("#txtCount").val(_oOrderRecap.Count);
        $("#txtGG").val(_oOrderRecap.GG);
        RefreshStyleImage(_oOrderRecap);
        LoadShipmentSchedules(_oOrderRecap.OrderRecapID);

    }
}

 function LoadShipmentSchedules(nOrderRecapID)
 {
     if(parseInt(nOrderRecapID)>0)
     {
         var tsv=((new Date()).getTime())/1000;
         $.ajax
                ({
                    type: "GET",
                    dataType: "json",
                    url : _sBaseAddress+  "/ShipmentSchedule/GetShipmentSchedules",
                    data: { id: nOrderRecapID, ts:tsv},
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        debugger;
                        oShipmentSchedules = jQuery.parseJSON(data);
                        if (oShipmentSchedules.length >0)
                        {
                            $('#divPO').data('ShipmentSchedules',oShipmentSchedules);
                            $("#cboShipmentSchedule").icsLoadCombo({List: oShipmentSchedules,OptionValue: "ShipmentScheduleID",DisplayText: "CountryWithCodeShortName",InitialValue:"--Select One--"});
                            $("#cboShipmentSchedule").val(_oGUProductionOrder.ShipmentScheduleID);
                        }
                    },
                    error: function (xhr, status, error)
                    {
                        alert(error);
                    }
                });
     }
 }

 function MakeGUProductionOrderDetails(nShipmentScheduleID, nTSID)
    {
        if(parseInt(nShipmentScheduleID)> 0)
        {
            var tsv=((new Date()).getTime())/1000;
            $.ajax
                   ({
                       type: "GET",
                       dataType: "json",
                       url : _sBaseAddress+  "/GUProductionOrder/GetGUProductionOrderDetails",
                       data: { id: nShipmentScheduleID,TSID:nTSID, ts:tsv},
                       contentType: "application/json; charset=utf-8",
                       success: function (data) {
                           //debugger;
                           var oGUProductionOrder = jQuery.parseJSON(data);
                           _oTechnicalSheetSizes = oGUProductionOrder.TechnicalSheetSizes;
                           _oColorSizeRatios = oGUProductionOrder.ColorSizeRatios;
                           MakeDetailTable(_oTechnicalSheetSizes);
                           if (_oColorSizeRatios.length >0)
                           {
                               RefreshDetails(_oColorSizeRatios);
                           }else
                           {
                               alert("Data Not Found.");
                               RefreshDetails([]);
                           }
                       },
                       error: function (xhr, status, error)
                       {
                           alert(error);
                       }

                   });
        }
    }

 function RefreshDetails (oProdcutionOrderDetails)
    {
        data=oProdcutionOrderDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblGUProductionOrderDetail').datagrid('loadData',data);
        RefreshSummary(_oTechnicalSheetSizes);
    }

    function RefreshStyleImage(oOrderRecap)
    {
        $.ajax({
            cache:true,
            type: "GET",
            url: "@(Url.Action("GetStyleImageInBase64", "TechnicalSheet"))",
            data: "id="+ oOrderRecap.TechnicalSheetID,
            success: function (data) {
                //debugger;
                $('#imgCoverImage').attr('src', "data:image/jpg;base64," + data.base64imgage );
            }
        });

    }



    function ValidateInput()
    {
        if(document.getElementById("txtOrderRecapNo").value==null || document.getElementById("txtOrderRecapNo").value==""){ alert("Plese Pick Sale Order!");$('#txtOrderRecapNo').focus();return false;}
        if(document.getElementById("txtBuyerName").value==null || document.getElementById("txtBuyerName").value==""){alert("Please enter Buyer name!");$('#txtBuyerName').focus();return false;}
        if(document.getElementById("txtProductName").value==null || document.getElementById("txtProductName").value==""){ alert("Please enter Product  Name!");$('#txtProductName').focus(); return false;}

        if(document.getElementById("txtFabric").value==null || document.getElementById("txtFabric").value==""){ alert("Plese type Fabric!");$('#txtFabric').focus();return false;}

        if(document.getElementById("txtProductionUnit").value==null || document.getElementById("txtProductionUnit").value==""){alert("Please enter Production Unit!");$('#txtProductionUnit').focus();return false;}

        var oPODetails = $('#tblGUProductionOrderDetail').datagrid('getRows');
        if(oPODetails.length<=0)
        {
            alert("Please Load at least one Order Details !");
            return false;
        }

        //var nTotalQty =0;
        //for (var i =0;i<oPODetails.length;i++)
        //{
        //    if(parseFloat(oPODetails[i].Qty)>0)
        //    {
        //        nTotalQty=nTotalQty+ parseFloat(oPODetails[i].Qty);
        //    }
        //    if(parseFloat(oPODetails[i].Qty) > parseFloat(oPODetails[i].YetToProductionQty))
        //    {
        //        alert("Issue Quantity Should be less then  or equal yet to Production for "+oPODetails[i].ColorName);
        //        return false;
        //    }
        //}



        return true;
    }

    function RefreshObject()
    {
        //var scboFactoryContactPerson =document.getElementById("cboFactoryContactPerson");
        debugger;
        var oGUProductionOrder= {
            GUProductionOrderID : _oGUProductionOrder.GUProductionOrderID,
            GUProductionOrderNo: _oGUProductionOrder.GUProductionOrderNo,
            OrderRecapID :_oGUProductionOrder.OrderRecapID,
            TechnicalSheetID:_oGUProductionOrder.TechnicalSheetID,
            BuyerID:_oGUProductionOrder.BuyerID,
            ProductID :_oGUProductionOrder.ProductID,
            FabricID :_oGUProductionOrder.FabricID,
            BUID:sessionStorage.getItem('BUID'),
            GG : $("#txtGG").val(),
            Count :$("#txtCount").val(),
            ProductionUnitID :_oGUProductionOrder.ProductionUnitID,
            ShipmentScheduleID :parseInt($('#cboShipmentSchedule').val()),
            MerchandiserID:_oGUProductionOrder.MerchandiserID,
            nOrderStatus :1,
            OrderDate :$('#txtOrderDate').datebox('getValue'),
            FactoryShipmentDate :$('#txtFactoryShipmentDate').datebox('getValue'),
            InputDate :$('#txtInputDate').datebox('getValue'),
            Note : $("#txtNote").val(),
            ColorSizeRatios : $('#tblGUProductionOrderDetail').datagrid('getRows')
        };
        return oGUProductionOrder;
    }
    function Save()
    {
        debugger;
        endEditing();
        if(!ValidateInput()) return;
        var oGUProductionOrder=RefreshObject();

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/GUProductionOrder/Save",
            traditional: true,
            data:  JSON.stringify(oGUProductionOrder),
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {
                //debugger;
                oGUProductionOrder = jQuery.parseJSON(data);
                if (oGUProductionOrder.ErrorMessage=="" || oGUProductionOrder.ErrorMessage==null)
                {
                    alert("Data Saved sucessfully");
                    var oGUProductionOrders = sessionStorage.getItem("GUProductionOrders");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oGUProductionOrders != null) {
                        oGUProductionOrders = jQuery.parseJSON(oGUProductionOrders);
                    }
                    else {
                        oGUProductionOrders = [];
                    }
                    if (nIndex != -1) {
                        oGUProductionOrders[nIndex] = oGUProductionOrder;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oGUProductionOrders.length);
                        oGUProductionOrders.push(oGUProductionOrder);
                    }
                    sessionStorage.setItem("GUProductionOrders", JSON.stringify(oGUProductionOrders));
                    if(sessionStorage.getItem("BackLink")!=null && sessionStorage.getItem("BackLink")!="")
                    {
                        debugger;
                        window.location.href = sessionStorage.getItem("BackLink");
                    }
                }
                else
                {
                    alert(oGUProductionOrder.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function Close()
    {
        if(sessionStorage.getItem("BackLink")==null || sessionStorage.getItem("BackLink")=="")
        {
            window.close();
        }else{
            window.location.href = sessionStorage.getItem("BackLink");
        }
    }
    var editIndex = undefined;
    function endEditing(){
        if (editIndex == undefined){return true}
        if ($('#tblGUProductionOrderDetail').datagrid('validateRow', editIndex)){
            $('#tblGUProductionOrderDetail').datagrid('endEdit', editIndex);
            debugger;
            $('#tblGUProductionOrderDetail').datagrid('selectRow',editIndex);
            var oGUProductionOrderDetail=$('#tblGUProductionOrderDetail').datagrid('getSelected');
            if(oGUProductionOrderDetail!=null)
            {
                oGUProductionOrderDetail.ColorWiseTotal = parseInt(oGUProductionOrderDetail.OrderQty1)+parseInt(oGUProductionOrderDetail.OrderQty2)+parseInt(oGUProductionOrderDetail.OrderQty3)+parseInt(oGUProductionOrderDetail.OrderQty4)+parseInt(oGUProductionOrderDetail.OrderQty5)+parseInt(oGUProductionOrderDetail.OrderQty6)+parseInt(oGUProductionOrderDetail.OrderQty7)+parseInt(oGUProductionOrderDetail.OrderQty8)+parseInt(oGUProductionOrderDetail.OrderQty9)+parseInt(oGUProductionOrderDetail.OrderQty10)+parseInt(oGUProductionOrderDetail.OrderQty11)+parseInt(oGUProductionOrderDetail.OrderQty12)+parseInt(oGUProductionOrderDetail.OrderQty13)+parseInt(oGUProductionOrderDetail.OrderQty14)+parseInt(oGUProductionOrderDetail.OrderQty15)+parseInt(oGUProductionOrderDetail.OrderQty16)+parseInt(oGUProductionOrderDetail.OrderQty17)+parseInt(oGUProductionOrderDetail.OrderQty18)+parseInt(oGUProductionOrderDetail.OrderQty19)+parseInt(oGUProductionOrderDetail.OrderQty20);
                $('#tblGUProductionOrderDetail').datagrid('updateRow',{index: editIndex,	row: oGUProductionOrderDetail});
            }
            RefreshSummary(_oTechnicalSheetSizes);
            editIndex = undefined;
            return true;
        } else {
            return false;
        }
    }

    function onClickRow(index){
        //debugger;
        if (editIndex != index){
            if (endEditing()){
                $('#tblGUProductionOrderDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            } else {
                $('#tblGUProductionOrderDetail').datagrid('selectRow', editIndex);
            }
        }
    }

    // Search Buyer Start
    $('#txtBuyerName').keydown(function (e) {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            var txtBuyerName = document.getElementById('txtBuyerName').value;
            if(txtBuyerName!="")
            {
                BuyerPiker(txtBuyerName);
                //var url =_sBaseAddress+ "/Contractor/ViewContractorSearch?sTemp="+txtBuyerName+"&pt=2&ts="+tsv;
            }
        }else  if (code == 8) //backspace=8
        {
            //debugger;
            var txtBuyerName=document.getElementById("txtBuyerName");
            txtBuyerName.style.color="black";
            txtBuyerName.style.fontWeight="normal";
            _oBuyer=0;
        }
    });

    function BuyerPiker(oTxtName)
    {
        debugger;
        var oTempName=""
        if (typeof oTxtName != 'undefined')
            oTempName=oTxtName;
        var oContractor = {
            Params: '2'+'~'+oTempName+'~'+sessionStorage.getItem('BUID')
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oContractor,
            ControllerName: "Contractor",
            ActionName: "ContractorSearchByNameType",
            IsWinClose: false
        };
        var tblColums = [];
        var oColumn = { field: "Name", title: "Name", width: 180, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Address", title: "Address", width: 160, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "Email", title: "Email", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);

        DynamicPiker('BuyerPiker',obj,tblColums,false,'Name','ContractorID'); //pickerName(unique),obj,table,multiReturn,SearchingField
    }
    function SetBuyer(oContractor)
    {
        if(oContractor !=null)
        {
            $('#txtBuyerName').focus();
            if(parseInt(oContractor.ContractorID)>0)
            {
                var txttBuyerName=document.getElementById("txtBuyerName");
                txttBuyerName.value=oContractor.Name;
                txttBuyerName.style.color="blue";
                txttBuyerName.style.fontWeight="bold";
                _oGUProductionOrder.BuyerID = oContractor.ContractorID;

            }
        }
        else
        {
            var txttBuyerName=document.getElementById("txtBuyerName");
            txttBuyerName.style.color="black";
            txttBuyerName.style.fontWeight="normal";
            document.getElementById("txtBuyerName").value=  "";
            _oGUProductionOrder.BuyerID = 0;
        }
    }
    $('#txtProductionUnit').keydown(function (e) {
        //debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            var txtProductionUnit = document.getElementById('txtProductionUnit').value;
            if(txtProductionUnit!="")
            {
                ProductionUnitPiker(txtProductionUnit);
                //var url =_sBaseAddress+ "/Contractor/ViewContractorSearch?sTemp="+txtProductionFactory+"&pt=2&ts="+tsv;
            }
        }else  if (code == 8) //backspace=8
        {
            //debugger;
            var txtProductionUnit=document.getElementById("txtProductionUnit");
            txtProductionUnit.style.color="black";
            txtProductionUnit.style.fontWeight="normal";
            _oGUProductionOrder.ProductionUnitID=0;
        }
    });
    function ProductionUnitPiker(oTxtName)
    {
        debugger;
        var oTempName=""
        if (typeof oTxtName != 'undefined')
            oTempName=oTxtName;
        var oProductionUnit = {
            Name: oTempName
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProductionUnit,
            ControllerName: "ProductionUnit",
            ActionName: "GetsByName",
            IsWinClose: false
        };
        var tblColums = [];
        var oColumn = { field: "Name", title: "Name", width: 120, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ShortName", title: "Short Name", width: 100, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "ProductionUnitTypeST", title: "Type", width: 110, align: "left" }; tblColums.push(oColumn);
        oColumn = { field: "RefName", title: "Ref Name", width: 150, align: "left" }; tblColums.push(oColumn);
        DynamicPiker('ProductionUnitPiker',obj,tblColums,false,'Name','ProductionUnitID'); //pickerName(unique),obj,table,multiReturn,SearchingField
    }
    function SetProductionUnit(oProductionUnit)
    {
        if(oProductionUnit !=null)
        {
            $('#txtProductionUnit').focus();
            if(parseInt(oProductionUnit.ProductionUnitID)>0)
            {
                $('#txtProductionUnit').addClass('fontColorOfPickItem');
                $('#txtProductionUnit').val(oProductionUnit.Name);
                _oGUProductionOrder.ProductionUnitID = oProductionUnit.ProductionUnitID;
            }
        }
        else
        {
            $('#txtProductionUnit').removeClass('fontColorOfPickItem');
            $('#txtProductionUnit').val('');
            _oGUProductionOrder.ProductionUnitID = 0;
        }
    }
    function DynamicPiker(pickerName,obj,pTblColums,pMultiReturn,pSearchField,pID)
    {
        debugger;
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0][pID] > 0) {
                    debugger;
                    var tblColums = pTblColums;
                    var oPickerParam = {
                        winid: 'win'+pickerName,
                        winclass: 'cls'+pickerName,
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tbl'+pickerName,
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: pMultiReturn,
                        searchingbyfieldName: pSearchField,
                        windowTittle: pickerName+' List'
                    };
                    $.icsPicker(oPickerParam);
                    DynamicIntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("Data Not Found.");
                return;
            }
        });
    }
    function DynamicIntializePickerbutton(oPickerobj) {
        debugger;
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            debugger;
            //for Single Select
            DynamicSetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                DynamicSetPickerValueAssign(oPickerobj);
            }
        });
    }
    function  DynamicSetPickerValueAssign(oPickerobj)
    {
        $('#txtLocalYarnSupplierName').focus();
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn)
        {
            oreturnobjs = $('#'+oPickerobj.tableid).datagrid('getChecked');
        }
        else
        {
            oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');

            if (oPickerobj.winid == 'winBuyerPiker')
            {
                SetBuyer(oreturnObj);
            }else  if (oPickerobj.winid == 'winProductionUnitPiker')
            {
                SetProductionUnit(oreturnObj);
            }
            else if (oPickerobj.winid == 'winOrderRecap')
            {
                SetOrderRecap(oreturnObj);
            }
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }

    $('#linkOrderSummary').click(function(){
        debugger;
        if(parseInt(_oGUProductionOrder.OrderRecapID)<=0)
        {
            alert("Sorry, There is No Order Recap.");
            return;
        }
        sessionStorage.setItem("BackLink", window.location.href);
        window.location.href =_sBaseAddress+  "/OrderSummary/ViewOrderSummary?id="+_oGUProductionOrder.OrderRecapID+'&buid='+sessionStorage.getItem('BUID')+'&menuid=0';
    });

    $(document).keydown(function(e) {
        //debugger;
        if(e.which == 27)//escape=27
        {
            //debugger;
            window.location.href = sessionStorage.getItem("BackLink");
        }
    });

</script>