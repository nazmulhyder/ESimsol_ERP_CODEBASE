@{
    ViewBag.Title = "Salary Scheme Grade";
}
@model ESimSol.BusinessObjects.SalarySchemeGrade

<div class="menuMainCollectionTable">
    <table id="tblSalarySchemeGrade" title="Salary Scheme Grade List" class="easyui-treegrid" style="width:100%; height:565px;"
           data-options="idField:'SSGradeID',treeField:'NameWithAmount', rownumbers:'true', toolbar:'#toolbar'">
        <thead>
            <tr>
                <th data-options="field:'NameWithAmount',width:450">Name</th>
                <th data-options="field:'ActivityInStr',width:150">Status</th>
            </tr>
        </thead>
    </table>
    <div id="toolbar">
        <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">New</a>
        <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
        <a id="btnView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
        <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
        <a id="btnActivity" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true"> <label id="lblActivity">Activity</label> </a>
    </div>

    <div id="winSalarySchemeGrade" class="easyui-window" title="Salary Scheme Grade" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
           <fieldset>
               <table id="tblSSGrade" style="text-align:right; margin-right:10px; ">
                   <tr>
                       <td colspan="4">
                           <div style="text-align:center; font-size:14px;"> <u><b>Salary Scheme Grade</b></u> </div>
                       </td>
                   </tr>
                   <tr>
                       <td colspan="4" >
                           
                           <input type="checkbox" id="chkLastLayer"/>
                           <span id="lblLastLayer">Last Layer</span>
                       </td>
                   </tr>
                   <tr>
                       <td class="left-caption">
                           <label>Name:</label>
                       </td>
                       <td class="left-input">
                           <input type="text" id="txtName" />
                       </td>
                       <td class="right-caption">
                           <label>Note:</label>
                       </td>
                       <td class="right-input">
                           <input type="text" id="txtNote" />
                       </td>
                   </tr>
                   <tr>
                       <td class="left-caption">
                           <label>Salary Range(Gross):</label>
                       </td>
                       <td class="left-input">
                           <input type="text" id="txtMinAmount" placeholder="Min Amount"/>
                           <span>to</span>
                           <input type="text" id="txtMaxAmount" placeholder="Max Amount" />
                       </td>
                       <td class="regionSechema right-caption">
                           <label>Schema:</label>
                       </td>
                       <td class="regionSechema right-input">
                           <select id="cboScheme"></select>
                       </td>
                   </tr>
                   <tr class="regionSechema" style="width:155px;">
                       <td colspan="4">
                           <div style="width:100%">
                               <div style="float:left; width:50%; text-align:left;"><b>Basic Salary</b></div>
                               <div style="float:left; width:47.5%;text-align:right;">
                                   <button id="btnSetSalaryScheme">Set</button>
                                   <button id="btnResetSalaryScheme">Reset</button>
                               </div>
                           </div>
                           <table id="tblBasicSalary" class="easyui-datagrid" style="width:100%;height:150px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                           </table>
                       </td>
                   </tr>
                   <tr class="regionSechema" style="width:155px;">
                       <td colspan="4">
                           <div style="width:100%; text-align:left;">
                               <div style="float:left; width:30%;"><b>Allowance</b></div>
                               <div style="float:left; width:70%;">
                                   <div style="float:left; text-align:right;width:66%;">
                                       <label id="lblBasicMinValue" class="lbl-SalaryScheme"></label>
                                   </div>
                                   <div style="float:left; text-align:right;width:23%;">
                                       <label id="lblBasicMaxValue" class="lbl-SalaryScheme"></label>
                                   </div>
                               </div>
                           </div>
                           <table id="tblAllowance" class="easyui-datagrid" style="width:100%;height:120px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                           </table>
                           <div style="float:left; width:100%;">
                               <div style="float:left; text-align:right;width:85%;">
                                   <label id="lblAllowanceMinValue" class="lbl-SalaryScheme"></label>
                               </div>
                               <div style="float:left; text-align:right;width:12%;">
                                   <label id="lblAllowanceMaxValue" class="lbl-SalaryScheme"></label>
                               </div>
                           </div>
                       </td>
                   </tr>
                   <tr class="regionSechema">
                       <td colspan="2" valign="top">
                           <div id="regionAllowOverTime" style="width:100%; text-align:left;">
                               <div style="width:100%; text-align:left;">
                                   <input id="chkAllowOverTime" class="chk-SalaryScheme" type="checkbox" disabled /><label><b>Allow Over Time</b></label>
                               </div>
                               <div style="width:100%; text-align:left;">
                                   <label id="lblAllowOverTime" class="lbl-SalaryScheme"></label>
                               </div>
                           </div>
                           <div id="regionAttendanceDependent" style="width:100%; text-align:left;">
                               <div style="width:100%; text-align:left;">
                                   <input id="chkAttendanceDependent" class="chk-SalaryScheme" type="checkbox" disabled /><label><b>Attendance Dependent</b></label>
                               </div>
                               <div id="regionLateAttendance" style="width:100%; text-align:left;">
                                   <label id="lblLateAttendance" class="lbl-SalaryScheme"></label>
                               </div>
                               <div id="regionEarlyLeaving" style="width:100%; text-align:left;">
                                   <label id="lblEarlyLeaving" class="lbl-SalaryScheme"></label>
                               </div>
                           </div>
                           <div style="width:100%; text-align:left;">
                               <input id="chkAllowBankAdvice" class="chk-SalaryScheme" type="checkbox" disabled /><label><b>Allow Bank Advice</b></label>
                           </div>

                       </td>
                        <td colspan="2" valign="top">
                        
                           <div id="regionGratuity" style="width:100%; text-align:left;">
                               <div style="width:100%; text-align:left;">
                                   <input id="chkGratuity" class="chk-SalaryScheme" type="checkbox" disabled /><label><b>Gratuity</b></label>
                               </div>
                               <div style="width:100%; text-align:left;">
                                   <label id="lblGraturityMatured" class="lbl-SalaryScheme"></label>
                               </div>
                           </div>
                            <div style="width:100%; text-align:left;">
                                <input id="chkProductionBase" class="chk-SalaryScheme" type="checkbox" disabled /><label><b>Production Base</b></label>
                            </div>
                          
                       </td>
                   </tr>

               </table>

           </fieldset>
          <fieldset class="actionfieldsetstyle">
            <legend>Actions : </legend>
            <div style="text-align:right;">
                <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
            </div>

        </fieldset>
    </div>

</div>

<style type="text/css">
    #tblSSGrade{
        width:700px;
    }
    .left-caption{
        width:20%;
        text-align:right;
        margin-right:2px;
    }
    .left-input{
        text-align:left;
        width:30%;
    }
    .right-caption{
         width:14%;
        text-align:right;
        margin-right:2px;
    }
    .right-input{
        text-align:left;
        width:35%;
    }

    .left-input input{
        width:90%;
    }
    .right-input input{
        width:90%;
    }
     .right-input select{
        width:92%;
    }

    #txtMinAmount,#txtMaxAmount{
        width:38.5%;
    }
</style>

<script type="text/javascript">

    var _sBaseAddress="";
    var _oSSGrades=[];
    var _oSSGrade=null;
    var _oSSG=null;
    var _nParentID=0;
    var _oSSDs=[];
    var _oSSDCalculations=[]; 
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oSSGrade =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oCurrencys =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.Currencys));
        var oSalarySchemes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.SalarySchemes));
        RefreshList(_oSSGrade);
        $('#txtMinAmount,#txtMaxAmount').icsCurrencyBox();
        $('#cboScheme').icsLoadCombo({
            List: oSalarySchemes,
            OptionValue: "SalarySchemeID",
            DisplayText: "Name",
            InitialValue: "Default"
        });
        ResetControll();
    });
    $(document).keydown(function (e) { if (e.keyCode == 27) { $('#div').icsWindow('close'); } });
    
    $('#tblSalarySchemeGrade').treegrid({ onSelect: function (rowData) { OperationPerforms(rowData); } });


    function OperationPerforms(rowData) {
        if (rowData != null && rowData.SSGradeID > 0) {

            if(rowData.SSGradeID==1 && rowData.ParentID==0){
                $('#btnEdit,#btnDelete,#btnView,#btnActivity').hide();
            }
            else if (rowData.IsActive) {
                $('#btnEdit,#btnDelete').hide();
                $('#btnView,#btnActivity').show();
                $('#lblActivity').html("Inactive");
            }
            else {
                $('#btnEdit,#btnDelete,#btnView,#btnActivity').show();
                $('#lblActivity').html("Active");
            }
        }
    }

    function RefreshList(oSSGrade)
    {
        data= [oSSGrade];
        data={"total":""+data.length+"","rows":data};
        $('#tblSalarySchemeGrade').treegrid('loadData',data);
    }

    function ResetControll(){
        $('input,select').prop('disabled',false);
        $('input').val('');
        $('select').val(0);
        $('#chkLastLayer').prop('checked',false);
        $('.regionSechema').hide();
        ResetSalaryScheme();
        $('#btnResetSalaryScheme,#btnSetSalaryScheme,#btnSave').show();
    }

    function ResetSalaryScheme(){
        _oSSDs=[]; _oSSDCalculations=[];
        $('#txtMinAmount,#txtMaxAmount').prop('disabled',false);
        DynamicRefreshList([],'tblBasicSalary');
        DynamicRefreshList([],'tblAllowance');
        $('.chk-SalaryScheme').prop('checked',false);
        $('.chk-SalaryScheme').prop('disabled',true);
        $('.lbl-SalaryScheme').text('');
    }

    $('#chkLastLayer').click(function(e){
        ResetSalaryScheme();
        if($('#chkLastLayer').is(':checked'))
        {
            $('.regionSechema').show();
            $('#cboScheme').val(0);
            TableColumnSet();
        }
        else
        {
            $('.regionSechema').hide();
            $('#cboScheme').val(0);
        }

    });

    $('#cboScheme').change(function(e){
        ResetSalaryScheme();
    });


    /*...........................................................*/

    $('#btnAdd').click(function (e) {
        var oSSGrade = $('#tblSalarySchemeGrade').datagrid('getSelected');
        if(oSSGrade==null || oSSGrade.SSGradeID<=0){
            alert("Please select an item from list.");
            return false;
        }
        if(oSSGrade.IsLastLayer){ alert("Unable to add under last layer."); return false; }
        if(!oSSGrade.IsActive){ alert("Please active first."); return false; }
        _oSSG=null;
        _nParentID=oSSGrade.SSGradeID;
        ResetControll();
        $("#winSalarySchemeGrade").icsWindow('open');

    });

    $('#btnEdit').click(function (e) {
        var oSSGrade = $('#tblSalarySchemeGrade').datagrid('getSelected');
        if(oSSGrade==null || oSSGrade.SSGradeID<=0){
            alert("Please select an item from list.");
            return false;
        }
        ResetControll();
        RefreshControll(oSSGrade);
        $("#winSalarySchemeGrade").icsWindow('open');
    });

    $('#btnView').click(function (e) {
        var oSSGrade = $('#tblSalarySchemeGrade').datagrid('getSelected');
        if(oSSGrade==null || oSSGrade.SSGradeID<=0){
            alert("Please select an item from list.");
            return false;
        }
        ResetControll();
        RefreshControll(oSSGrade);
        $('input,select').prop('disabled',true);
        $('#btnResetSalaryScheme,#btnSetSalaryScheme,#btnSave').hide();
        $("#winSalarySchemeGrade").icsWindow('open');
    });

    $('#btnDelete').click(function (e) {
        var oSSGrade = $('#tblSalarySchemeGrade').datagrid('getSelected');
        if(oSSGrade==null || oSSGrade.SSGradeID<=0) { alert("Please select an item from list."); return false; }
        if(oSSGrade.SSGradeID>0 && oSSGrade.children!=null && oSSGrade.children.length>0){
            alert("Please delete child element first."); return false;
        }
        if (oSSGrade.IsActive) { alert('Unable to delete. Already active.'); return false; }
        if (!confirm("Confirm to Delete?")) return false;

        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oSSGrade,
            ControllerName: "SalarySchemeGrade",
            ActionName: "Delete",
            TableId: "",
            IsWinClose: false
        };
        $.icsDelete(obj, function (response) {
            if (response.status && response.Message == 'deleted') {
                $('#tblSalarySchemeGrade').treegrid('remove',oSSGrade.SSGradeID);

                $('#tblSalarySchemeGrade').treegrid('select',oSSGrade.ParentID);;
                var oParent=  $('#tblSalarySchemeGrade').datagrid('getSelected');
                if(oParent!=null){
                    var oChildrens=[];
                    for(var i=0;i<oParent.children.length;i++){

                        if(oParent.children[i].SSGradeID!=oSSGrade.SSGradeID){
                            oChildrens.push(oParent.children[i]);
                        }
                    }
                    oParent.children=oChildrens;
                    $('#tblSalarySchemeGrade').treegrid('update',{	id: oParent.SSGradeID, row: oParent });
                }
            }
        });
    });

    $('#btnActivity').click(function (e) {
        var oSSGrade = $('#tblSalarySchemeGrade').datagrid('getSelected');
        if(oSSGrade==null || oSSGrade.SSGradeID<=0) { alert("Please select an item from list."); return false; }
        //if(oSSGrade.SSGradeID>0 && oSSGrade.children!=null && oSSGrade.children.length>0){
        //    alert("Please delete child element first."); return false;
        //}
        if (!confirm((oSSGrade.IsActive)?"Confirm to Inactive?" : "Confirm to Active?")) return false;

        var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oSSGrade,
                ObjectId: oSSGrade.SSGradeID,
                ControllerName: "SalarySchemeGrade",
                ActionName: "ActivityChange",
                TableId: "",
                IsWinClose: false,
                Message: ''//(oSSGrade.IsActive)?"Inactive Successfully." : "Active Successfully."
            };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.SSGradeID > 0) {

                    if(oSSGrade.SSGradeID>0 && oSSGrade.children!=null && oSSGrade.children.length>0){
                        response.obj.children=oSSGrade.children;
                    }
                    $('#tblSalarySchemeGrade').treegrid('update',{	id: oSSGrade.SSGradeID, row: response.obj });
                    OperationPerforms(response.obj);
                }
            }
        });
    });


    function RefreshControll(oSSGrade){
        _oSSG=oSSGrade;
     
        $('#txtName').val(_oSSG.Name);
        $('#txtNote').val(_oSSG.Note);
        $('#txtMinAmount').val(_oSSG.MinAmount);
        $('#txtMaxAmount').val(_oSSG.MaxAmount);
        if(oSSGrade.SSGradeID>0 && oSSGrade.children!=null && oSSGrade.children.length>0){
            $('.regionSechema').hide();
            $('#chkLastLayer').prop('checked',false);
            $('#chkLastLayer,#lblLastLayer').hide();
        }
        else{
            $('#chkLastLayer,#lblLastLayer').show();
            $('#chkLastLayer').prop('checked',_oSSG.IsLastLayer);
            $('#cboScheme').val(_oSSG.SalarySchemeID);
            if(_oSSG.IsLastLayer){
                $('.regionSechema').show();
                TableColumnSet();
                SetSalaryScheme();
            }
        }
        

    }

    function RefreshObject(){

        var oSSG={
            SSGradeID : (_oSSG!=null)? _oSSG.SSGradeID : 0,
            Name : $('#txtName').val(),
            ParentID : (_oSSG!=null)? _oSSG.ParentID :_nParentID,
            Note : $('#txtNote').val(),
            MinAmount : $('#txtMinAmount').val(),
            MaxAmount : $('#txtMaxAmount').val(),
            IsLastLayer : $('#chkLastLayer').is(':checked'),
            IsActive : (_oSSG!=null)? _oSSG.IsActive : true,
            SalarySchemeID : $('#cboScheme').val()
        };
        return oSSG;
    }

    function Validation(){
        if($('#chkLastLayer').is(':checked')){

            if(isNaN(icsRemoveComma($('#txtMinAmount').val()))){
                alert('Please enter min. amount.');$('#txtMinAmount').focus(); return false;
            }
            if(isNaN(icsRemoveComma($('#txtMaxAmount').val()))){
                alert('Please enter max. amount.');$('#txtMaxAmount').focus(); return false;
            }
            if($('#cboScheme').val()<=0){
                alert("Please select a scheme."); $('#cboScheme').focus(); return false;
            }
        }

        if(!isNaN(icsRemoveComma($('#txtMinAmount').val()))){
            if($('#txtMaxAmount').val()==''){
                alert('Please enter max. amount.');$('#txtMaxAmount').focus(); return false;
            }
        }
        if(!isNaN(icsRemoveComma($('#txtMaxAmount').val()))){
            if($('#txtMinAmount').val()==''){
                alert('Please enter min. amount.');$('#txtMinAmount').focus(); return false;
            }
        }
        if(!isNaN(icsRemoveComma($('#txtMaxAmount').val())) && !isNaN(icsRemoveComma($('#txtMinAmount').val()))){
            if(parseFloat(icsRemoveComma($('#txtMaxAmount').val()))<parseFloat(icsRemoveComma($('#txtMinAmount').val()))){
                alert("Max. amount value must be greater than min amount value."); $('#txtMaxAmount').focus(); return false;
            }
        }
        return true;
    }

    $("#btnSave").click(function () {
        if($.trim($('#txtName').val())==''){
            alert('Please enter grade name.'); $('#txtName').focus(); return false;
        }

        if(!Validation()) return false;
        var oSalarySchemeGrade = RefreshObject();
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oSalarySchemeGrade,
            ObjectId: oSalarySchemeGrade.SSGradeID,
            ControllerName: "SalarySchemeGrade",
            ActionName: "Save",
            TableId: "",
            IsWinClose: false,
            Message: (oSalarySchemeGrade.SSGradeID>0)?"Update Successfully." : "Save Successfully."
        };
        $.icsSave(obj, function (response) {
            debugger;
            if (response.status && response.obj != null) {
                if (response.obj.SSGradeID > 0) {
                    if(oSalarySchemeGrade.SSGradeID>0){
                        $('#tblSalarySchemeGrade').treegrid('update',{	id: oSalarySchemeGrade.SSGradeID, row: response.obj });
                    }
                    else{
                        $('#tblSalarySchemeGrade').treegrid('append',{ parent: _nParentID, data: [response.obj] });
                    }
                    $('#winSalarySchemeGrade').icsWindow('close');
                }
            }
        });
    });

    $("#btnClose").click(function () {
        $('#winSalarySchemeGrade').icsWindow('close');
    });


    /*...........................................................*/

    $('#btnResetSalaryScheme').click(function(e){
        $('#cboScheme').val(0);
        ResetSalaryScheme();
    });

    $('#btnSetSalaryScheme').click(function(e){
        SetSalaryScheme();
    });

    function SetSalaryScheme(){
        if(!Validation()) return false;
        if($('#cboScheme').val()<=0){alert('Please select a scheme.'); return false;}
        var oSalaryScheme = {
            SalarySchemeID: $('#cboScheme').val()
        };
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oSalaryScheme,
            ControllerName: "SalaryScheme",
            ActionName: "GetSalarySchemeInfo",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {
            
            if (response.status && response.obj != null) {
                if (response.obj.SalarySchemeID > 0) {

                    SchemeOtherRules(response.obj);
                    var oBasics=[], oAllowances=[];
                    _oSSDs=response.obj.SalarySchemeDetails;
                    _oSSDCalculations=response.obj.SalarySchemeDetailCalculations;
                    if(_oSSDs.length>0){
                        $('#txtMinAmount,#txtMaxAmount').prop('disabled',true);
                        for(var i=0;i<_oSSDs.length;i++){
                            if(_oSSDs[i].Calculation > 0){ 
                                _oSSDs[i].Amount =  _oSSDs[i].Calculation;
                                _oSSDs[i].MinAmount =  _oSSDs[i].Calculation;
                                _oSSDs[i].IsCalculated =  true;
                            }
                            else{ 
                                _oSSDs[i].Amount = 0;
                                _oSSDs[i].MinAmount = 0;
                            }
                        }
                        for(var i=0;i<_oSSDs.length;i++){
                            _oSSDs[i]=SalaryHeadCalculation(true,parseFloat(icsRemoveComma($('#txtMinAmount').val())),_oSSDs[i]);
                            _oSSDs[i]=SalaryHeadCalculation(false,parseFloat(icsRemoveComma($('#txtMaxAmount').val())),_oSSDs[i]);
                            if(_oSSDs[i].SalaryHeadType==1){
                                oBasics.push(_oSSDs[i]);
                            }
                            else{
                                oAllowances.push(_oSSDs[i]);
                            }
                        }
                        oBasics=BasicSalaryMapping(oBasics);
                        oAllowances=AllowanceMapping(oAllowances);
                    }
                    DynamicRefreshList(oBasics, "tblBasicSalary");
                    DynamicRefreshList(oAllowances, "tblAllowance");
                }
                else {
                    DynamicRefreshList([], "tblBasicSalary");
                    DynamicRefreshList([], "tblAllowance");
                    alert("Basic and allowance found for this scheme."); 
                }
            }
        });
    }

    function SchemeOtherRules(oSalaryScheme){
        if(oSalaryScheme.IsAllowOverTime)
        {
            $('#regionAllowOverTime').show();
            $('#chkAllowOverTime').prop('checked',oSalaryScheme.IsAllowOverTime);
            var sAllowOvertime='';
            if(oSalaryScheme.FixedOTRatePerHour>0){
                sAllowOvertime='Per hour allowance: '+ formatPrice(oSalaryScheme.FixedOTRatePerHour);
            }
            else{
                sAllowOvertime= 'Per hour allowance: '+  oSalaryScheme.OverTimeONInString +' / '+ oSalaryScheme.DividedBy + ' * '+oSalaryScheme.MultiplicationBy;
            }
            $('#lblAllowOverTime').text(sAllowOvertime);

        }
        if(oSalaryScheme.IsAttendanceDependant)
        {
            $('#regionAttendanceDependent,#regionLateAttendance,#regionEarlyLeaving').show();
            $('#chkAttendanceDependent').prop('checked', oSalaryScheme.IsAttendanceDependant);
            var sLateAttendance='',sEarlyLeaving='';

            if(oSalaryScheme.FixedLatePenalty>0){
                sLateAttendance='The fixed amount '+ formatPrice(oSalaryScheme.FixedLatePenalty);
            }
            else{
                sLateAttendance='One day salary';
            }
            sLateAttendance +=' will be deducted for '+ formatPrice(oSalaryScheme.LateCount)+' days late.';

            if(oSalaryScheme.FixedEarlyLeavePenalty>0){
                sEarlyLeaving='The fixed amount '+ formatPrice(oSalaryScheme.FixedEarlyLeavePenalty);
            }
            else{
                sEarlyLeaving='One day salary';
            }
            sEarlyLeaving +=' will be deducted for '+ formatPrice(oSalaryScheme.EarlyLeavingCount)+' days late.';

            $('#lblLateAttendance').text(sLateAttendance);
            $('#lblEarlyLeaving').text(sEarlyLeaving);
        }
        
        if(oSalaryScheme.IsGratuity){
            $('#regionGratuity').show();
            $('#chkGratuity').prop('checked',oSalaryScheme.IsGratuity);
            var sGraturityMatured='';
            if(oSalaryScheme.GraturityMaturedInYear>0){
                sGraturityMatured = 'Gratuity matured after '+ oSalaryScheme.GraturityMaturedInYear +' '+ ((oSalaryScheme.GraturityMaturedInYear>1)?'years':'year') + ' of passing. '
            }
            if(oSalaryScheme.GratuityApplyOn>0){
                sGraturityMatured = sGraturityMatured + 'Applied on '+ oSalaryScheme.GratuityApplyOnInStr +'. After maturity of the employee resignation, rest of the fraction year will be considered as one year if '+
                                     oSalaryScheme.NoOfMonthCountOneYear +' '+((oSalaryScheme.NoOfMonthCountOneYear>1)?'months':'month') + ' of across. '
            }
            $('#lblGraturityMatured').text(sGraturityMatured);
        }
        $('#chkAllowBankAdvice').prop('checked', oSalaryScheme.IsAllowBankAccount);
        $('#chkProductionBase').prop('checked',oSalaryScheme.IsProductionBase);
    }

    function BasicSalaryMapping(oBasics){
        var oBasic=null;
        var oBSMs=[];
        var nTotalMinAmount=0, nTotalMaxAmount=0;
        if(oBasics.length>0){
            for(var i=0;i<oBasics.length;i++){

                oBasic={
                    SalaryHeadID: oBasics[i].SalaryHeadID,
                    SalaryHeadName: oBasics[i].SalaryHeadName,
                    Calculation: oBasics[i].Calculation,
                    MinAmount: oBasics[i].MinAmount,
                    MaxAmount: oBasics[i].Amount,
                    MinAmountInStr: formatPrice( oBasics[i].MinAmount),
                    MaxAmountInStr: formatPrice( oBasics[i].Amount),
                }
                oBSMs.push(oBasic);
                nTotalMinAmount+=parseFloat(oBasics[i].MinAmount);
                nTotalMaxAmount+=parseFloat(oBasics[i].Amount);
            }
            $('#lblBasicMinValue').text(formatPrice(nTotalMinAmount));
            $('#lblBasicMaxValue').text(formatPrice(nTotalMaxAmount));
        }
        return oBSMs;
    }

    function AllowanceMapping(oAllowances){
        var oAllowance=null;
        var oAMs=[];
        var nTotalMinAmount=0, nTotalMaxAmount=0;
        if(oAllowances.length>0){
            for(var i=0;i<oAllowances.length;i++){
                oAllowance={
                    SalaryHeadTypeInString: oAllowances[i].SalaryHeadTypeInString,
                    SalaryHeadName: oAllowances[i].SalaryHeadName,
                    Calculation: oAllowances[i].Calculation,
                    PeriodInString: oAllowances[i].PeriodInString,
                    MinAmount: oAllowances[i].MinAmount,
                    MaxAmount: oAllowances[i].Amount,
                    MinAmountInStr: formatPrice(oAllowances[i].MinAmount),
                    MaxAmountInStr: formatPrice(oAllowances[i].Amount)
                }
                oAMs.push(oAllowance);
                //nTotalMinAmount+=parseFloat(oAllowances[i].MinAmount);
                //nTotalMaxAmount+=parseFloat(oAllowances[i].Amount);
            }
            //$('#lblAllowanceMinValue').text(formatPrice(nTotalMinAmount));
            //$('#lblAllowanceMaxValue').text(formatPrice(nTotalMaxAmount));
        }
        return oAMs;
    }
 

    function SalaryHeadCalculation(bIsMin,nAmount, oSSDetail){
        var nSSDetailID = oSSDetail.SalarySchemeDetailID; 
        var nFixedAmount = (oSSDetail.Calculation>0) ? parseFloat(oSSDetail.Calculation) : 0;
        var nCalculatedValue = 0;
        var nPercentValue=0;
        var nOperator = 3; // Addition

        if(nFixedAmount>0){
            nCalculatedValue=nFixedAmount;
        }
        else{

            debugger;
            for(var i=0;i<_oSSDCalculations.length;i++){
                if(nSSDetailID == _oSSDCalculations[i].SalarySchemeDetailID)
                {
                    if(_oSSDCalculations[i].ValueOperator == 1)
                    {   
                        if(_oSSDCalculations[i].CalculationOn == 1)
                        {
                            if(nOperator==7){ _oSSDCalculations[i].PercentVelue = nPercentValue;}
                            else{nCalculatedValue = nAmount; }
                        }
                        if(_oSSDCalculations[i].CalculationOn == 2)
                        {
                            _oSSDCalculations[i].PercentVelue = nPercentValue;
                        }
                        nCalculatedValue = GetSSDcalculation(bIsMin,nCalculatedValue, nAmount, nOperator,_oSSDCalculations[i]);
                    }
                    else if(_oSSDCalculations[i].ValueOperator == 2)
                    {
                        if(_oSSDCalculations[i].Operator==0 || _oSSDCalculations[i].Operator==1 || _oSSDCalculations[i].Operator==2 ){
                            continue;
                        }
                        else{
                            // 3=>Addition, 4=>SubTraction, 5=>Multiplication, 6=>Division, 7=>Percentage
                            nOperator=_oSSDCalculations[i].Operator;
                            if(nOperator==7){ nPercentValue= _oSSDCalculations[i].PercentVelue; }
                        }
                    }
                }
            }
        }
        if(bIsMin){
            oSSDetail.MinAmount=nCalculatedValue;
        }
        else{
            oSSDetail.Amount=nCalculatedValue;
        }
        oSSDetail.IsCalculated=true;
        return oSSDetail;
    }

    function GetSSDcalculation(bIsMin,nCalculatedValue, nAmount, nOperator,oSSDCalculation)
    {
        var nSSDCalculation = 0;

        for(var i=0;i<_oSSDs.length;i++){

            if(_oSSDs[i].SalaryHeadID == oSSDCalculation.SalaryHeadID)
            {
                if(!_oSSDs[i].IsCalculated){
                    _oSSDs[i]=SalaryHeadCalculation(true,parseFloat(icsRemoveComma($('#txtMinAmount').val())),_oSSDs[i]);
                    _oSSDs[i].IsCalculated=false;
                    _oSSDs[i]=SalaryHeadCalculation(false,parseFloat(icsRemoveComma($('#txtMaxAmount').val())),_oSSDs[i]);
                }

                if(bIsMin){
                    nSSDCalculation = (_oSSDs[i].MinAmount>0) ? parseFloat(_oSSDs[i].MinAmount) : 0;
                }
                else{
                    nSSDCalculation = (_oSSDs[i].Amount>0) ? parseFloat(_oSSDs[i].Amount) : 0;
                }
                break;
            }
            else if(oSSDCalculation.SalaryHeadID== 0 && oSSDCalculation.FixedValue>0)
            {
                nSSDCalculation = parseFloat(oSSDCalculation.FixedValue);
                break;
            }

            else if(oSSDCalculation.CalculationOn == 1 && oSSDCalculation.SalaryHeadID== 0 && oSSDCalculation.FixedValue == 0 && nOperator == 7)
            {
                nSSDCalculation = parseFloat(nAmount);
                break;
            }
        }
        
        if(nOperator == 3)
        {
            nCalculatedValue = parseFloat(nCalculatedValue)+ parseFloat(nSSDCalculation);
        }

        if(nOperator == 4)
        {
            nCalculatedValue = parseFloat(nCalculatedValue) - parseFloat(nSSDCalculation);
        }

        if(nOperator == 5)
        {
            nCalculatedValue = parseFloat(nCalculatedValue) * parseFloat(nSSDCalculation);
        }

        if(nOperator == 6)
        {
            nCalculatedValue = parseFloat(nCalculatedValue / nSSDCalculation);
        }

        if(nOperator == 7)
        {
            var nPercentVelue = parseFloat(oSSDCalculation.PercentVelue);
            nCalculatedValue = parseFloat(nCalculatedValue) + parseFloat(parseFloat(nPercentVelue)/100* parseFloat(nSSDCalculation));
        }
        return nCalculatedValue;

    }


    function TableColumnSet(){
        var tblColums = [];
        tblColums.push({field: "SalaryHeadName",title: "Salary Head",width: "150",align: "left"});
        tblColums.push({field: "Calculation",title: "Equation",width: "230",align: "left"});
        tblColums.push({field: "MinAmountInStr",title: "Min. Amount",width: "120",align: "right"});
        tblColums.push({field: "MaxAmountInStr",title: "Max. Amount",width: "120",align: "right"});
        $('#tblBasicSalary').datagrid({ frozenColumns: [], columns: [tblColums] });

        tblColums = [];
        tblColums.push({field: "SalaryHeadTypeInString",title: "Type",width: "70",align: "left"});
        tblColums.push({field: "SalaryHeadName",title: "Allowance Head",width: "120",align: "left"});
        tblColums.push({field: "Calculation",title: "Equation",width: "160",align: "left"});
        tblColums.push({field: "PeriodInString",title: "Period",width: "140",align: "left"});
        tblColums.push({field: "MinAmountInStr",title: "Min. Amount",width: "80",align: "right"});
        tblColums.push({field: "MaxAmountInStr",title: "Max. Amount",width: "80",align: "right"});
        $('#tblAllowance').datagrid({ frozenColumns: [], columns: [tblColums] });
    }
</script>
