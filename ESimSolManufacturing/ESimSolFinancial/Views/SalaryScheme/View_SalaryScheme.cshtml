<!DOCTYPE html />
<html>
<head>
    <title>Salary Scheme</title>
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/Pikerstyle.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.ics.customize.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
</head>
<body>
    @model ESimSol.BusinessObjects.SalaryScheme
    <div style="font-family: Tahoma">
        <table border="0" cellspacing="2" cellpadding="2">
            <tr>
                <td style="background-color: #cfb53b; text-align: center; width: 765px; color: White">
                    <label id="lblHeaderName" style="font-size: 15px; font-weight: bold; text-decoration: Underline">
                        Salary Scheme</label>
                </td>
            </tr>
        </table>
        <fieldset>
            <legend style="font-weight: bold">Salary Scheme Information </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                <tr>
                    <td>
                        @*cons*@ @*table1*@
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;
                            margin-top: -25px">
                            <tr>
                                <td style="width: 120px; text-align: right">
                                </td>
                                <td id="btnCopyFromOtherGrade" style="width: 180px; text-align: right">
                                    <a href="javascript:void(0)" class="easyui-linkbutton" plain="false" onclick="CopyFromOtherGrade()">
                                        Copy From Other Grade</a>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    Name :
                                </td>
                                <td style="width: 180px">
                                    @Html.TextBoxFor(model => model.Name, new { style = "width: 185px;", id = "txtName" })
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    Types Of Employee :
                                </td>
                                <td style="width: 180px;">
                                    <select style="width: 186px;" id="cboTypesOfEmployee">
                                        <option></option>
                                    </select>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    Nature Of Employee :
                                </td>
                                <td style="width: 180px">
                                    @Html.DropDownListFor(model => model.NatureOfEmployee, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumEmployeeNature))), new { id = "cboNatureOfEmployee", style = "width: 186px;" })
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    Payment Cycle :
                                </td>
                                <td style="width: 180px">
                                    @Html.DropDownListFor(model => model.PaymentCycle, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumPaymentCycle))), new { id = "cboPaymentCycle", style = "width: 186px;" })
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 120px; text-align: right">
                                    Description :
                                </td>
                                <td style="width: 180px">
                                    @Html.TextBoxFor(model => model.Description, new { style = "width: 185px;", id = "txtDescription" })
                                </td>
                            </tr>
                            @*<tr>
                                <td style="width: 120px; text-align: right">
                                </td>
                                <td style="width: 180px; text-align: left">
                                    <input type="checkbox" id="checkAllowBankAdvice" />Allow Bank Advice
                                </td>
                            </tr>*@
                        </table>
                    </td>
                    <td>
                        @*table2*@
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; margin-left: 30px;
                            margin-top: 10px">
                            <tr>
                                <td colspan="3">
                                    @* <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true"
                                        onclick="RemoveFromGrid()">Remove</a>*@ @* <input type="button" value="Pick Other Salary Head" style="width: 150px;" />*@
                                </td>
                            </tr>
                            <tr>
                                <td colspan="3">
                                    @*grid1*@
                                    <table id="tblSalarySchemeDetail" class="easyui-datagrid" style="width: 350px; height: 178px;"
                                        fitcolumns="false" pagination="false" singleselect="true" autorowheight="false"
                                        toolbar="#toolbar" data-options="singleSelect: false, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false, toolbar: '#toolbar1', onClickRow: onClickRow">
                                        <thead>
                                            <tr>
                                                <th field="SalaryHeadName" width="120" align="left" style="font-size: 8px">
                                                    Salary Head
                                                </th>
                                                <th data-options="field:'Percent',width:85,align:'right',editor:{type:'numberbox',options:{precision:0}}"
                                                    align="right" id="percentage">
                                                    Percent
                                                </th>
                                                <th data-options="field:'FixedAmount',width:110,align:'right',editor:{type:'numberbox',options:{precision:0}}"
                                                    align="right">
                                                    Fixed Amount
                                                </th>
                                            </tr>
                                        </thead>
                                    </table>
                                </td>
                            </tr>
                        </table>
                        @*===========*@
                        <table style="margin-left: 30px;">
                            <tr>
                                <td style="width: 100px;">
                                    Total :
                                </td>
                                <td style="width: 125px; text-align: right;">
                                    <label id="TotalPercent" style="text-align: right; width: 125px;">
                                    </label>
                                </td>
                                <td style="width: 95px; text-align: right;">
                                    <label id="TotalAmount" style="text-align: right; width: 95px;">
                                    </label>
                                </td>
                            </tr>
                        </table>
                        @*===========*@
                    </td>
                </tr>
            </table>
            @*mod*@
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                <tr>
                    <td style="width: 120px; text-align: right">
                    </td>
                    <td style="width: 180px; text-align: left">
                        <input type="checkbox" id="checkAllowBankAdvice" />Allow Bank Advice
                    </td>
                    <td style="width: 180px; text-align: left">
                        <input id="chkProductionBase" type="checkbox"  />Production Base
                    </td>
                </tr>
            </table>
            @*mod close*@

            @*table for under portion*@
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; margin-left: 130px">
                <tr>
                    <td style="font-weight: bold;">
                        Allowance <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add"
                            id="btnAdd" plain="true" onclick="AddAllowance()">Add</a> <a id="btnEdit" href="javascript:void(0)"
                                class="easyui-linkbutton" iconcls="icon-edit" plain="true" onclick="EditAllowance()">
                                Edit</a> <a id="btnRemove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove"
                                    plain="true" onclick="RemoveFromGrid1()">Remove</a>
                    </td>
                </tr>
                <tr>
                    <td>
                        <table id="tblSalaryScheme" class="easyui-datagrid" style="width: 580px; height: 150px;
                            font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true"
                            autorowheight="true">
                            <thead>
                                <tr>
                                    <th field="AllowanceName" width="100" align="left">
                                        Allowance
                                    </th>
                                    <th field="AllowanceValueInString" width="80" align="left" style="text-align: right">
                                        Value
                                    </th>
                                    <th field="PeriodInString" width="125" align="left">
                                        Period
                                    </th>
                                    <th field="ConditionInString" width="120" align="left">
                                        Condition
                                    </th>
                                    <th field="ActivationAfterInString" width="120" align="left">
                                        Activation After
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td style="font-weight: bold;">
                        <input type="checkbox" id="checkAllowOverTime" />Allow Over Time
                    </td>
                </tr>
                <tr>
                    <td id="tdforcheckAllowOverTime" style="font-weight: bold;">
                        OverTime Value : OverTime hour *
                        @Html.DropDownListFor(model => model.OverTimeON, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumOverTimeON))), new { id = "cboOverTimeON", style = "width: 100px;" })
                        /
                        <input type="text" id="txtDividedBy" style="width: 100px;" />*
                        <input type="text" id="txtMultiplicationBy" style="width: 100px;" />
                    </td>
                </tr>
            </table>
      
            <table id="tbl" border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; margin-left:130px;">
            
                <tr>
                    <td style="width: 450px">
                        <input id="chkAttendanceDependent" type="checkbox" checked="checked" />Attendance Dependent
                    </td>
                    
                </tr>
                <tbody id="tbdAttendanceDependent">
                <tr>
                    <td style="width: 450px">
                        One Day Basic Salary Deduction For
                        <input id="txtLateCount" type="text"  style="width:85px"/> Days Late
                    </td>
                   
                </tr>
                
                <tr>
                    <td style="width: 450px">
                        One Day Basic Salary Deduction For
                        <input id="txtEarlyLeavingCount" type="text" style="width:85px"/> Days EarlyLeaving
                    </td>
                    
                </tr>
                </tbody>
            </table>
            <div style="float:right; margin-top:-20px;padding-right:25px;">
                <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
            </div>
        </fieldset>
    </div>
</body>
</html>

                        
<script type="text/javascript">
 var _oSalaryScheme = null;
 var _sBaseAddress = "";
 var _nUserID=0;
 var _nLocationID=0;
 var _ObName="";
 var _oEmployeeType=[];
 var _oAllowance=null;
 var _alertForAdd=0;
 var Flag=1;
 var Flag1=0;
 var _Flag2=0;
 var _Flag3=0;
 var _nTotalPercent=0;
 var _TotalPercentBeforeLastEditing=0;
 var _oAllowances =[];
 var _nTotalAmount=0;
 var _oBasicSalarySchemeDetails=[];
 var _oAllowanceSalarySchemeDetails=[];
 var _index=0; 
$(document).ready(function()
{ 
    //debugger;
    _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    _oSalaryScheme = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var obj = window.dialogArguments;
    _ObName=obj.Name;
    document.getElementById('lblHeaderName').innerHTML = _ObName;
    _nUserID=_oSalaryScheme.UserID;
    $('#txtDividedBy').numberbox();
    $('#txtMultiplicationBy').numberbox();
    document.getElementById("tdforcheckAllowOverTime").style.display = 'none';
    
    if(_ObName=="Edit Salary Scheme")
    {
       
      ForEdit(_oSalaryScheme);
      WindowResize();
    }
    if(_ObName=="New Salary Scheme")
    {
        RefreshListForSalaryHeadOfBasicType(_oSalaryScheme.SalarySchemeDetails); 
    }
    LoadEmployeeType(_oSalaryScheme.EmployeeTypes);

    if(_ObName=="Preview Salary Scheme")
    {
        document.getElementById("btnAdd").style.display = 'none';
        document.getElementById("btnEdit").style.display = 'none';
        document.getElementById("btnRemove").style.display = 'none';
        document.getElementById("btnSave").style.display = 'none';
        document.getElementById("btnCopyFromOtherGrade").style.display = 'none';

        document.getElementById('txtName').disabled = true;
        document.getElementById('cboTypesOfEmployee').disabled = true;
        document.getElementById('cboNatureOfEmployee').disabled = true;
        document.getElementById('cboPaymentCycle').disabled = true;
        document.getElementById('txtDescription').disabled = true;
        document.getElementById('cboOverTimeON').disabled = true;
        document.getElementById('txtDividedBy').disabled = true;
        document.getElementById('txtMultiplicationBy').disabled = true;
        document.getElementById('chkAttendanceDependent').disabled = true;
        document.getElementById('chkProductionBase').disabled = true;
        document.getElementById('checkAllowBankAdvice').disabled = true;
        document.getElementById('checkAllowOverTime').disabled = true;
        document.getElementById('txtLateCount').disabled = true;
        document.getElementById('txtEarlyLeavingCount').disabled = true;
        document.getElementById('tblSalarySchemeDetail').disabled = true;
        ForEdit(_oSalaryScheme);
        WindowResize();
        
        
    }
 
});

function ForEdit(_oSalaryScheme)
{
    //debugger;
    document.getElementById("checkAllowBankAdvice").checked=_oSalaryScheme.IsAllowBankAccount;
    document.getElementById("checkAllowOverTime").checked=_oSalaryScheme.IsAllowOverTime;
    document.getElementById("chkProductionBase").checked=_oSalaryScheme.IsProductionBase;

    if(_oSalaryScheme.IsAttendanceDependant==true)
    {
      
        document.getElementById("tbdAttendanceDependent").style.display = '';
        document.getElementById("txtLateCount").value=_oSalaryScheme.LateCount;
        document.getElementById("txtEarlyLeavingCount").value=_oSalaryScheme.EarlyLeavingCount;
    }
   
    if(_oSalaryScheme.IsAllowOverTime==true)
    {
    debugger;
        document.getElementById("tdforcheckAllowOverTime").style.display = '';
        document.getElementById("cboOverTimeON").selectedIndex=_oSalaryScheme.OverTimeONInt;
        document.getElementById("txtDividedBy").value=_oSalaryScheme.DividedBy;
        document.getElementById("txtMultiplicationBy").value=_oSalaryScheme.MultiplicationBy;
    }
    else
    {
        document.getElementById("tdforcheckAllowOverTime").style.display = 'none';
    }
    
    for(var i=0;i<_oSalaryScheme.SalarySchemeDetails.length;i++)
    {
        if(_oSalaryScheme.SalarySchemeDetails[i].SalaryHeadType==1)
        {
            _oBasicSalarySchemeDetails.push(_oSalaryScheme.SalarySchemeDetails[i]); 
        }
        else{
            _oAllowanceSalarySchemeDetails.push(_oSalaryScheme.SalarySchemeDetails[i]); 
        }
    }
    RefreshListForSalaryHeadOfBasicType(_oBasicSalarySchemeDetails);
    RefreshListForSalaryHeadOfAllowanceType(_oAllowanceSalarySchemeDetails);
       
    AddPercent();
    AddAmount();

    document.getElementById('cboTypesOfEmployee').disabled = true;
    document.getElementById('cboNatureOfEmployee').disabled = true;
    document.getElementById('cboPaymentCycle').disabled = true;
    
}

$('#checkAllowOverTime').click(function () //here change event can be used instead of click event !
{
    WindowResize();
    
});


$('#chkAttendanceDependent').click(function () //here change event can be used instead of click event !
{
    WindowResize();
    
});

function WindowResize()
{
    if (document.getElementById("checkAllowOverTime").checked==true && document.getElementById("chkAttendanceDependent").checked==false)
    {  
         document.getElementById("tdforcheckAllowOverTime").style.display = '';
         document.getElementById("tbdAttendanceDependent").style.display = 'none';
         document.getElementById("txtLateCount").value="";
         document.getElementById("txtEarlyLeavingCount").value="";
         window.resizeTo(773,655);
         if(_ObName=="Edit Salary Scheme")
         {
            document.getElementById("txtDividedBy").value=_oSalaryScheme.DividedBy;
            document.getElementById("txtMultiplicationBy").value=_oSalaryScheme.MultiplicationBy;
            document.getElementById("cboOverTimeON").selectedIndex=_oSalaryScheme.OverTimeONInt;
         }
    }
    else if (document.getElementById("checkAllowOverTime").checked==false && document.getElementById("chkAttendanceDependent").checked==true)
    {
    
         document.getElementById("tdforcheckAllowOverTime").style.display = 'none';
         document.getElementById("tbdAttendanceDependent").style.display = '';
         document.getElementById("txtDividedBy").value="";
         document.getElementById("txtMultiplicationBy").value="";
         document.getElementById("cboOverTimeON").selectedIndex=0;
         window.resizeTo(773,685);
         if(_ObName=="Edit Salary Scheme")
         {
            document.getElementById("txtLateCount").value=_oSalaryScheme.LateCount;
            document.getElementById("txtEarlyLeavingCount").value=_oSalaryScheme.EarlyLeavingCount;
         }
         
    }
    else if (document.getElementById("checkAllowOverTime").checked==true && document.getElementById("chkAttendanceDependent").checked==true)
    {  
         document.getElementById("tdforcheckAllowOverTime").style.display = '';
         document.getElementById("tbdAttendanceDependent").style.display = '';
         window.resizeTo(773,715);
         if(_ObName=="Edit Salary Scheme")
         {
            document.getElementById("tdforcheckAllowOverTime").style.display = '';
            document.getElementById("tbdAttendanceDependent").style.display = '';
            document.getElementById("txtLateCount").value=_oSalaryScheme.LateCount;
            document.getElementById("txtEarlyLeavingCount").value=_oSalaryScheme.EarlyLeavingCount;
            document.getElementById("txtDividedBy").value=_oSalaryScheme.DividedBy;
            document.getElementById("txtMultiplicationBy").value=_oSalaryScheme.MultiplicationBy;
            document.getElementById("cboOverTimeON").selectedIndex=_oSalaryScheme.OverTimeONInt;
         }
    }
    else
    {
        document.getElementById("tdforcheckAllowOverTime").style.display = 'none';
        document.getElementById("tbdAttendanceDependent").style.display = 'none';
        document.getElementById("txtLateCount").value="";
        document.getElementById("txtEarlyLeavingCount").value="";
        document.getElementById("txtDividedBy").value="";
        document.getElementById("txtMultiplicationBy").value="";
        document.getElementById("cboOverTimeON").selectedIndex=0;
        window.resizeTo(773,630);
    }

}

var editIndex = undefined;  
function endEditing()
{  
    //debugger;
    //Flag=1;
    if (editIndex == undefined){return true}  
    if ($('#tblSalarySchemeDetail').datagrid('validateRow', editIndex))
    { 
       _alertForAdd=0;
        $('#tblSalarySchemeDetail').datagrid('endEdit', editIndex);
        TotalPercentBeforeLastEditing(); 
        ChangeValue();
        AddAmount();
        if(_Flag2==1)
        {
        _alertForAdd=1;
        }
        
        if(_Flag3==1)
        {
            //debugger;
            if(!AddPercent())
            {
                ChangePercent();
                editIndex = undefined; 
                return false;
            }
        }
        else
        {
            AddPercent();
           
        }
        ChangePercent();
        editIndex = undefined; 
        return true;  
    } 
    else
    {  
        return false;  
    } 
    
} 

function ChangeValue()
{
    //debugger;
    oSalarySchemes=$('#tblSalarySchemeDetail').datagrid('getRows');
    if(oSalarySchemes[editIndex].FixedAmount>0)
    {
        oSalarySchemes[editIndex].Percent=0;
    }
    
    RefreshListForSalaryHeadOfBasicType(oSalarySchemes);
}

function ChangePercent()
{
    //debugger;
    oSalarySchemes=$('#tblSalarySchemeDetail').datagrid('getRows');
    if(_nTotalPercent>100)
    {
        oSalarySchemes[editIndex].Percent=100-_TotalPercentBeforeLastEditing;
        AddPercent();
    }
    RefreshListForSalaryHeadOfBasicType(oSalarySchemes);
}

function TotalPercentBeforeLastEditing()
{
   //debugger;
   var TotalPercentBeforeLastEditing=0;
   var oSalarySchemes=null;
   oSalarySchemes=$('#tblSalarySchemeDetail').datagrid('getRows');
   for(var i=0;i<oSalarySchemes.length;i++)
   {
        if(oSalarySchemes[i].Percent==undefined||oSalarySchemes[i].Percent=="")
        {
    
            oSalarySchemes[i].Percent=0;
        }
       
        TotalPercentBeforeLastEditing= TotalPercentBeforeLastEditing + parseFloat(oSalarySchemes[i].Percent);
    
    }
    _TotalPercentBeforeLastEditing=parseFloat(TotalPercentBeforeLastEditing)-parseFloat(oSalarySchemes[editIndex].Percent);
}

function onClickRow(index)
{  
    //debugger;
    _index = index; 
    if (editIndex != index)
    {  
        if (endEditing())
        { 
            $('#tblSalarySchemeDetail').datagrid('selectRow', index).datagrid('beginEdit', index);  
            editIndex = index; 
//            Flag=1; 
        } 
        else
        {  
            $('#tblSalarySchemeDetail').datagrid('selectRow', editIndex);  
        }  
    } 
}  


function RefreshListForSalaryHeadOfBasicType(SalaryHeadNames) 
{
    // debugger;
    data = SalaryHeadNames;
    data = { "total": "" + data.length + "", "rows": data };
    $('#tblSalarySchemeDetail').datagrid('loadData', data);
}

function RefreshListForSalaryHeadOfAllowanceType(SalaryHeadNames) 
{
    //  debugger;
    data = SalaryHeadNames;
    data = { "total": "" + data.length + "", "rows": data };
    $('#tblSalaryScheme').datagrid('loadData', data);
}

function HoliDayPicker()
{
    //debugger;
    var oParameter = new Object();
    oParameter.Name = "Pick salary Head";
    var tsv = ((new Date()).getTime()) / 1000;
    var url = _sBaseAddress + "/SalaryHead/PickHoliday?nId=0&ts=" + tsv;
    var oHolidays = window.showModalDialog(url, oParameter, 'dialogHeight:410px;dialogWidth:470px;dialogLeft:500;dialogTop:200;center:yes;resizable:no;status:no;scroll:no');
}

function AddAllowance()
{

    endEditing();
    Flag=0;
    Flag1=1;
    AddAmount();
    _alertForAdd=1;
    if(!AddPercent()){return false};
    
    var oParameter = new Object();
    oParameter.Name = "Add Allowance";
    var tsv = ((new Date()).getTime()) / 1000;
    var url = _sBaseAddress + "/SalaryScheme/View_AddAllowance?nId=0&ts=" + tsv;
    var _oAllowance= window.showModalDialog(url, oParameter, 'dialogHeight:330px;dialogWidth:440px;dialogLeft:150;dialogRight:150;dialogTop:150;center:yes;resizable:no;status:no;scroll:no');
    debugger;
    if(_oAllowance!=null)
    {

        if( _oAllowance.SalaryHeadType=="Addition")
        {
            _oAllowance.AllowanceName=_oAllowance.SalaryHeadName+"(+)";
            
        }

        if( _oAllowance.SalaryHeadType=="Deduction")
        {
            _oAllowance.AllowanceName=_oAllowance.SalaryHeadName+"(-)";
          
        }
        if( _oAllowance.AllowanceCalculationOnInString=="Gross"||_oAllowance.AllowanceCalculationOnInString=="Fixed")
        {
            _oAllowance.AllowanceValueInString=_oAllowance.AllowanceValue;
        }

        if( _oAllowance.AllowanceCalculationOnInString=="SalaryItem")
        {
            _oAllowance.AllowanceValueInString=_oAllowance.AllowanceValue+" % Of "+_oAllowance.VofB;
        }

        _oAllowance.PeriodInString=_oAllowance.Times+" Times / "+_oAllowance.PeriodInString;
        _oAllowance.ConditionInString=_oAllowance.ConditionInString;
        _oAllowance.ActivationAfterInString=_oAllowance.DeferredDay+" Days Of "+_oAllowance.ActivationAfterInString;
        // debugger;
        var oAllowances = $('#tblSalaryScheme').datagrid('getRows');
        for(var i=0;i<oAllowances.length;i++)
        {
            if(_oAllowance.AllowanceName==oAllowances[i].AllowanceName)
            {
                alert("Same Allowance Already Exist !");
                return;
            }
        }
            var nIndex = oAllowances.length;
            $('#tblSalaryScheme').datagrid('appendRow', _oAllowance);
            $('#tblSalaryScheme').datagrid('selectRow', nIndex);
        
        
     }
}

function EditAllowance()
{
    //debugger;
    var oSalarySchemeDetail = $('#tblSalaryScheme').datagrid('getSelected');
    if (oSalarySchemeDetail == null || oSalarySchemeDetail.SalarySchemeDetailID <0) 
    {
        alert("Please select an item from list!");
        return;
    }
    var SelectedRowIndex = $('#tblSalaryScheme').datagrid('getRowIndex', oSalarySchemeDetail);
    var oParameter = new Object();
    oParameter.Name = "Edit Allowance";
    oParameter.SDetail = oSalarySchemeDetail;
    var tsv = ((new Date()).getTime()) / 1000;
    var url = _sBaseAddress + "/SalaryScheme/View_AddAllowance?nId=" + oSalarySchemeDetail.SalarySchemeDetailID + "&ts=" + tsv;
    oSalarySchemeDetail = window.showModalDialog(url, oParameter, 'dialogHeight:300px;dialogWidth:430px;dialogLeft:150;dialogRight:150;dialogTop:150;center:yes;resizable:no;status:no;scroll:no');

    //debugger;
    if (oSalarySchemeDetail != null) 
    {
        if (oSalarySchemeDetail.SalarySchemeDetailID > 0) 
        {

        if( oSalarySchemeDetail.SalaryHeadType=="Addition")
        {
            oSalarySchemeDetail.AllowanceName=oSalarySchemeDetail.SalaryHeadName+"(+)";
            
        }

        if( oSalarySchemeDetail.SalaryHeadType=="Deduction")
        {
            oSalarySchemeDetail.AllowanceName=oSalarySchemeDetail.SalaryHeadName+"(-)";
          
        }
        if( oSalarySchemeDetail.AllowanceCalculationOnInString=="Gross"||oSalarySchemeDetail.AllowanceCalculationOnInString=="Fixed")
        {
            oSalarySchemeDetail.AllowanceValueInString=oSalarySchemeDetail.AllowanceValue;
        }

        if( oSalarySchemeDetail.AllowanceCalculationOnInString=="SalaryItem")
        {
            oSalarySchemeDetail.AllowanceValueInString=oSalarySchemeDetail.AllowanceValue+" % Of Basic";
        }

        oSalarySchemeDetail.PeriodInString=oSalarySchemeDetail.Times+" Times / "+oSalarySchemeDetail.PeriodInString;
        oSalarySchemeDetail.ConditionInString=oSalarySchemeDetail.ConditionInString;
        oSalarySchemeDetail.ActivationAfterInString=oSalarySchemeDetail.DeferredDay+" Days Of "+oSalarySchemeDetail.ActivationAfterInString;
        // debugger;
        var oAllowances = $('#tblSalaryScheme').datagrid('getRows');
        for(var i=0;i<oAllowances.length;i++)
        {
            if(oSalarySchemeDetail.AllowanceName==oAllowances[i].AllowanceName && oSalarySchemeDetail.SalarySchemeDetailID!=oAllowances[i].SalarySchemeDetailID)
            {
                alert("Same Allowance Already Exist !");
                return;
            }
        }
        
        $('#tblSalaryScheme').datagrid('updateRow', { index: SelectedRowIndex, row: oSalarySchemeDetail });
        }
    }
}

function ValidateInput() 
{
    if($("#txtName").val()==""||$("#txtName").val()==null)
    {
        alert("Please Enter Name !");
        $("#txtName").focus();
        return false;
    }
    if(document.getElementById("cboTypesOfEmployee").selectedIndex==""||document.getElementById("cboTypesOfEmployee").selectedIndex==null||document.getElementById("cboTypesOfEmployee").selectedIndex==0)
    {
        alert("Please Select Employee Type !");
        $("#cboTypesOfEmployee").focus();
        return false;
    }
    if(document.getElementById("cboNatureOfEmployee").selectedIndex==""||document.getElementById("cboNatureOfEmployee").selectedIndex==null||document.getElementById("cboNatureOfEmployee").selectedIndex==0)
    {
        alert("Please Select Nature Of Employee !");
        $("#cboNatureOfEmployee").focus();
        return false;
    }
    if(document.getElementById("cboPaymentCycle").selectedIndex==""||document.getElementById("cboPaymentCycle").selectedIndex==null||document.getElementById("cboPaymentCycle").selectedIndex==0)
    {
        alert("Please Select Payment Cycle !");
        $("#cboPaymentCycle").focus();
        return false;
    }
    
    if (document.getElementById("checkAllowOverTime").checked==true)
    { 

        if($("#cboOverTimeON").val()==""||$("#cboOverTimeON").val()==0||$("#cboOverTimeON").val()=="None")
        {
            alert("Please Select  OverTime ON!");
            $("#cboOverTimeON").focus();
            return false;
        }
        if($("#txtDividedBy").val()==""||$("#txtDividedBy").val()==null)
        {
            alert("Please Divided By Value!");
            $("#txtDividedBy").focus();
            return false;
        }
        if($("#txtMultiplicationBy").val()==""||$("#txtMultiplicationBy").val()==null)
        {
            alert("Please Enter  Multiplication By!");
            $("#txtMultiplicationBy").focus();
            return false;
        }

        
        return true;
      }
    //debugger;
   
    if(_nTotalPercent==0&&_nTotalAmount==0)
    {
        alert("Please Enter Salary Scheme Detail !");
        $('#tblSalarySchemeDetail').datagrid('selectRow', 0).datagrid('beginEdit', 0); 
        return false;
    }
    return true;
}



function RefreshObject() 
{
     //debugger;
     var oSalarySchemeDetails=[];
     var oBasicTypes = $('#tblSalarySchemeDetail').datagrid('getRows');
     oSalarySchemeDetails=oBasicTypes;
     for(var i=0;i<oSalarySchemeDetails.length;i++)
     {
       if(oSalarySchemeDetails[i].Percent==undefined||oSalarySchemeDetails[i].Percent=="")
        {
            oSalarySchemeDetails[i].Percent=0;
            oSalarySchemeDetails[i].BasicValue=oSalarySchemeDetails[i].FixedAmount;
            oSalarySchemeDetails[i].IsFixedBasic=true;
        }
        if(oSalarySchemeDetails[i].FixedAmount==undefined||oSalarySchemeDetails[i].FixedAmount=="")
        {
            oSalarySchemeDetails[i].FixedAmount=0;
            oSalarySchemeDetails[i].BasicValue=oSalarySchemeDetails[i].Percent;
        }
     }
     var oAllowances = $('#tblSalaryScheme').datagrid('getRows');
     //debugger;
     for(var i=0;i<oAllowances.length;i++)
     {
        
        oSalarySchemeDetails.push(oAllowances[i]);
     
     }
     
     var oSalaryScheme = 
     {
         SalarySchemeID :_oSalaryScheme.SalarySchemeID,
         Name:$("#txtName").val(),
         EmployeeTypeID:document.getElementById("cboTypesOfEmployee").value,
         NatureOfEmployeeInt:document.getElementById("cboNatureOfEmployee").selectedIndex,
         PaymentCycleInt:document.getElementById("cboPaymentCycle").selectedIndex,
         Description:$("#txtDescription").val(),
         IsAllowBankAccount:document.getElementById("checkAllowBankAdvice").checked,
         IsAllowOverTime:document.getElementById("checkAllowOverTime").checked,
         OverTimeONInt:document.getElementById("cboOverTimeON").selectedIndex,
         DividedBy:$("#txtDividedBy").val(),
         MultiplicationBy:$("#txtMultiplicationBy").val(),
         IsAttendanceDependant:document.getElementById("chkAttendanceDependent").checked,
         LateCount:$("#txtLateCount").val(),
         EarlyLeavingCount:$("#txtEarlyLeavingCount").val(),
         IsProductionBase:document.getElementById("chkProductionBase").checked,
         SalarySchemeDetails:oSalarySchemeDetails
        
     };
    
     return oSalaryScheme;
}

function Save()
{
    //debugger
    Flag=0;
    _Flag2=1;
    _Flag3=1;
    editIndex = _index; 
    if(!endEditing()) return;
    Flag=1; 
    if (!ValidateInput()) return;
    var oSalaryScheme = RefreshObject();
    $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/SalaryScheme/SalaryScheme_IU",
            traditional: true,
            data: JSON.stringify(oSalaryScheme),
            contentType: "application/json; charset=utf-8",

            success: function(data)
            {
                //debugger
                oSalaryScheme = jQuery.parseJSON(data);
                if (oSalaryScheme.ErrorMessage == "") 
                {
                    alert("Data Saved sucessfully");
                    window.returnValue = oSalaryScheme;
                    window.close();
                } 
                else 
                {
                    alert(oSalaryScheme.ErrorMessage);
                }
             },
             error: function(xhr, status, error)
             {
                alert(error);
             }
          });
}


function CopyFromOtherGrade() 
{
    //debugger;
    var oParameter = new Object();
    oParameter.Name = " Search salary Scheme ";
    oParameter.MultipleItemReturn=false;
    var tsv = ((new Date()).getTime()) / 1000;
    var url = _sBaseAddress + "/SalaryScheme/AdvanceSearch?ts=" + tsv;
    oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:380px;dialogWidth:890px;dialogLeft:50;dialogRight:50;dialogTop:100;center:yes;resizable:yes;status:no;scroll:no');
    if(oEmployee!=null)
    {
        var nId= oEmployee.SalarySchemeID;
        if (nId > 0)
        {
            $.ajax({
                    type: "GET",
                    dataType: "json",
                    url: _sBaseAddress + "/SalaryScheme/CopyFromOtherGrade",
                    data: { nId: nId},
                    contentType: "application/json; charset=utf-8",
                    success: function(data) 
                    {
                        //debugger;
                        var salaryScheme = jQuery.parseJSON(data);
                        
                        if (salaryScheme != "")
                        {
                            _oSalaryScheme.SalarySchemeID=0;
                            for(var i=0;i<salaryScheme.SalarySchemeDetails.length;i++)
                            {
                                salaryScheme.SalarySchemeDetails[i].SalarySchemeDetailID=0;
                            }
                            _oSalaryScheme.EmployeeTypeID=0;
                            document.getElementById("txtName").value=salaryScheme.Name;
                            document.getElementById("cboTypesOfEmployee").value=salaryScheme.EmployeeTypeID;
                            $('#cboNatureOfEmployee').val(salaryScheme.NatureOfEmployeeInString);
                            $('#cboPaymentCycle').val(salaryScheme.PaymentCycleInString);
                            document.getElementById("txtDescription").value=salaryScheme.Description;
                            ForEdit(salaryScheme);  
                        } 
                        else 
                        {
                            alert(feedbackmessage);
                        }
                      },
                      error: function(xhr, status, error)
                      {
                        alert(error);
                      }
                    });
             }
    
        }
}

function LoadEmployeeType(_oEmployeeType)
{
    //debugger;
    $('#cboTypesOfEmployee').empty();
    var ListEmployeeType="<option value='0'>--Select Employee Type--</option>";
    for(var i=0;i<_oEmployeeType.length;i++)
    {
        ListEmployeeType+="<option value="+_oEmployeeType[i].EmployeeTypeID+">"+_oEmployeeType[i].Name+"</option>";
    }
    $('#cboTypesOfEmployee').html(ListEmployeeType);
    document.getElementById("cboTypesOfEmployee").value=_oSalaryScheme.EmployeeTypeID;//when we load enum fron=m the interface
 
}

function RemoveFromGrid()
{

    if (!confirm("Confirm to Remove?")) return;
    var oSalarySchemeDetail = $('#tblSalarySchemeDetail').datagrid('getSelected');
    if (oSalarySchemeDetail == null) 
    {
        alert("Invalid Field!!! please select a valid Field!");
        return false;
    }
    var SelectedRowIndex = $('#tblSalarySchemeDetail').datagrid('getRowIndex', oSalarySchemeDetail);
    $('#tblSalarySchemeDetail').datagrid('deleteRow', SelectedRowIndex);
     
}

function RemoveFromGrid1()
{
    if (!confirm("Confirm to Remove?")) return;
    var oSalarySchemeDetail = $('#tblSalaryScheme').datagrid('getSelected');
    if (oSalarySchemeDetail == null) 
    {
        alert("Invalid Field!!! please select a valid Field!");
        return false;
    }


     var SelectedRowIndex = $('#tblSalaryScheme').datagrid('getRowIndex', oSalarySchemeDetail);
     var tsv = ((new Date()).getTime()) / 1000;
     if (oSalarySchemeDetail.SalarySchemeDetailID > 0) {
           //debugger;
            $.ajax({
                type: "GET",
                dataType: "json",
                url: _sBaseAddress + "/SalaryScheme/SalarySchemeDetail_Delete",
                data: { nId: oSalarySchemeDetail.SalarySchemeDetailID ,ts: tsv},
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    //debugger;
                    var feedbackmessage = jQuery.parseJSON(data);
                    //debugger;
                    if (feedbackmessage == "") {
                        alert("Delete sucessfully");
                        $('#tblSalaryScheme').datagrid('deleteRow', SelectedRowIndex);

                    } else {
                        alert(feedbackmessage);
                    }
                },
                error: function(xhr, status, error) {
                    alert(error);
                }
            });
        }
    else
    {
//    debugger;
       $('#tblSalaryScheme').datagrid('deleteRow', SelectedRowIndex);
    }
     
}


function AddPercent()
{
    // debugger;
    oSalarySchemes=$('#tblSalarySchemeDetail').datagrid('getRows');
    var nTotalPercent=0;  
    for(var i=0;i<oSalarySchemes.length;i++)
    { 
   
        if(oSalarySchemes[i].Percent==undefined||oSalarySchemes[i].Percent=="")
        {
    
            oSalarySchemes[i].Percent=0;
        }
        nTotalPercent = nTotalPercent + parseFloat(oSalarySchemes[i].Percent);

        
        if(oSalarySchemes[i].Percent==0)
        {
            oSalarySchemes[i].Percent="";
        }
    }

    var TotalAmount= document.getElementById("TotalAmount").innerHTML;
    
    if(nTotalPercent==0)
    {
        if(TotalAmount==0)
        {
            
            if(Flag==0)
            {
                alert("Summation Of Basic salary Head must be greater than 0 !");
                //Flag=1;
            }
            return false;
        }
    }
    _nTotalPercent=nTotalPercent;
    document.getElementById("TotalPercent").innerHTML = nTotalPercent+"%";
    if(nTotalPercent>100)
    {
        // debugger;
//        if(Flag1==0)
//        {
            alert("Toatl Percent must not be greater than 100 !");
            
            return false;
//        }
        return false;
    }
    if(_alertForAdd==1)
    {
        //debugger;
        if(nTotalPercent !=100 && nTotalPercent !=0)
        {
     
            if(Flag==0)
            {
                alert("Toatl Percent must be  0 or 100 !");
                Flag=1;
                return false;
            }
            return false;
         }
          return true;
    }
    return true;
}

function AddAmount()
{

    //debugger;
    oSalarySchemes=$('#tblSalarySchemeDetail').datagrid('getRows'); 
    var nTotalAmount=0;
    for(var i=0;i<oSalarySchemes.length;i++)
    { 
   
        if(oSalarySchemes[i].FixedAmount==undefined||oSalarySchemes[i].FixedAmount=="")
        {
    
            oSalarySchemes[i].FixedAmount=0;
        }
        nTotalAmount = nTotalAmount + parseFloat(oSalarySchemes[i].FixedAmount);

        if(oSalarySchemes[i].FixedAmount==0)
        {
    
            oSalarySchemes[i].FixedAmount="";
        }
    }
    _nTotalAmount=nTotalAmount
    document.getElementById("TotalAmount").innerHTML = nTotalAmount;
}

function Close()
{
    window.close();
}
$(document).keydown(function (e)
{
    var keyCode = e.keyCode || e.which;
    if (keyCode == 27)
    {
        window.close();
    }
});
</script>
