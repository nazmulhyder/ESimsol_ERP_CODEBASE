<!DOCTYPE HTML>
<html>
<head>
    <title>Add Salary Head Calculation</title>
    <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-latest.js")" type="text/javascript"></script>
    <link href="../../Content/CSS/newPikerview.css" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-ui-1.8.22.custom.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/UserControlScript/GlobalScript.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/CSS/jquery-ui-1.8.22.custom.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/CSS/easyui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/CSS/icon.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery.easyui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/Date-Format-1.2.3.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.json.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/json2.js")" type="text/javascript"></script>
</head>
<body>
    @model ESimSol.BusinessObjects.SalarySchemeDetail
    <div style="font-family: Tahoma">
        <table border="0" cellspacing="2" cellpadding="2">
            <tr>
                <td style="background-color: #cfb53b; text-align: center; width: 415px; color: White">
                    <label id="lblHeaderName" style="font-size: 12px; font-weight: bold; text-decoration: Underline">Add Allowance</label>
                </td>
            </tr>
        </table>
        <fieldset>
            <table border="0" cellspacing="2" cellpadding="1" style="font-size: 11px; font-weight: bold; margin-left:0px">
                <tr>
                    <td style="width:120px; text-align:right">
                        Allowance Type :
                    </td>
                    <td style="width:280px">
                        <select style="width: 270px;" id="cboAllowanceType" onchange="LoadAllowance()"><option></option></select>
                    </td>
                </tr>
                <tr>
                    <td style="width:120px; text-align:right">
                        Allowance :
                    </td>
                    <td style="width:280px">
                        <select style="width: 270px;" id="cboAllowance"><option></option></select>
                    </td>
                </tr>
            </table>
        </fieldset>
        
        <textarea id="txtEquation" style="width:405px; margin-left:2px; font-weight:bold; resize:none" rows="2" disabled="disabled"></textarea>
        <fieldset>
            <table border="0" cellspacing="2" cellpadding="1" style="font-size: 11px; font-weight: bold; margin-left:0px">
                <tr>
                    <td style="width:40px">
                        <input id="btnClear" type="button" value="←" style="width:40px; font-weight:bolder" />
                    </td>
                    <td colspan="2" style="width:80px">
                        <input id="btnGross" type="button" value="Gross" style="width:85px" />
                    </td>
                    <td style="width:230px; text-align:right; border:1px solid black">
                        <select style="width: 210px;" id="cboSalaryHead"></select>
                    </td>
                    <td style="width:20px; border:1px solid black">
                        <a id="btnSalaryHead" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"></a>
                    </td>
                </tr>
                <tr>
                    <td style="width:40px">
                        <input id="btnAdd" type="button" value="+" style="width:40px; font-size:larger" />
                    </td>
                    <td style="width:40px">
                        <input id="btnSubtract" type="button" value="-" style="width:40px; font-size:larger" />
                    </td>
                    <td style="width:40px">
                        <input id="btnBracketStart" type="button" value="(" style="width:40px" />
                    </td>
                    <td style="width:230px; text-align:right; border:1px solid black">
                        Percent(%) : <input id="txtPercentage" type="text" style="width:120px;" />
                    </td>
                    <td style="width:20px; border:1px solid black">
                        <a id="btnPercent" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"></a>
                    </td>
                </tr>
                <tr>
                    <td style="width:40px">
                        <input id="btnMultiplication" type="button" value="x" style="width:40px" />
                    </td>
                    <td style="width:40px">
                        <input id="btnDivision" type="button" value="/" style="width:40px" />
                    </td>
                    <td style="width:40px">
                        <input id="btnBracketEnd" type="button" value=")" style="width:40px" />
                    </td>
                    <td style="width:230px; text-align:right; border:1px solid black">
                        Fixed Amount : <input id="txtFixedAmount" type="text" style="width: 120px;" />
                    </td>
                    <td style="width:20px; border:1px solid black">
                        <a id="btnFixedAmount" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"></a>
                    </td>
                </tr>
            </table>
        </fieldset>

        <fieldset>
            <table border="0" cellspacing="2" cellpadding="1" style="font-size: 11px; font-weight: bold; margin-left:0px">
                <tr>
                    <td style="width: 120px; text-align: right">
                        Times :
                    </td>
                    <td style="width: 280px" colspan="2">
                        <input type="text" style="width: 80px" id="txtTimes" />
                        &nbsp;&nbsp;&nbsp;Period :
                        @Html.DropDownListFor(model => model.Period, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumPeriod))), new { id = "cboPeriod", style = "width: 125px;" })
                    </td>
                </tr>
                <tr>
                    <td style="width: 120px; text-align: right">
                        Condition :
                    </td>
                    <td style="width: 280px" colspan="2">
                        @Html.DropDownListFor(model => model.Condition, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumAllowanceCondition))), new { id = "cboCondition", style = "width: 270px;" })
                    </td>
                </tr>
                <tr>
                    <td style="width: 120px; text-align: right">
                        Activation After :
                    </td>
                    <td style="width: 280px" colspan="2">
                        <input type="text" style="width: 80px" id="txtDefferedDay" />
                        Days off :
                        @Html.DropDownListFor(model => model.ActivationAfter, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumRecruitmentEvent))), new { id = "cboActivationAfter", style = "width: 125px;" })
                    </td>
                </tr>
            </table>

        </fieldset>

        <fieldset>
            <legend>Action :</legend>
            <table border="0" cellpadding="2" cellspacing="2">
                <tr>
                    <td style="width:300px; text-align:right">
                        <a id="btnReset" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Reset</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                    </td>
                    <td style="width:50px">
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>

            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">
    var _obj = null;
    var _sBaseAddress="";
    var _oSalarySchemeDetail=null;
    var _oSalarySchemeDetailCalculation = null;
    var _oSalarySchemeDetailCalculations = [];
    $(document).ready(function()
    {        
        _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oSalarySchemeDetail = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));        
        LoadSalaryHeadOfBasicType();
        LoadAllowanceType();

        $("#txtPercentage_Allownace, #txtTimes, #txtDefferedDay").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $("#txtFixedAmount_Allownace").keypress(function (e) {
            if (e.which != 8 && e.which != 0  && e.which != 46  && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });
    });

    $('#btnClear_Allownace').click(function ()
    {
        if(_oSalarySchemeDetailCalculations.length>0)
        {
            var oSalarySchemeDetailCalculations=_oSalarySchemeDetailCalculations;
            _oSalarySchemeDetailCalculations=[];
            for(var i=0; i<oSalarySchemeDetailCalculations.length-1; i++)
            {
                _oSalarySchemeDetailCalculations.push(oSalarySchemeDetailCalculations[i]);
            }
            RefreshEquation();
        }
    });

    $('#btnBracketStart_Allownace').click(function ()
    {
        var oSSDetailCalculation={
            SalarySchemeDetailID : 0 ,
            ValueOperatorInt :  2,
            CalculationOnInt : 0,
            CalculationOnInString : "None",
            FixedValue : 0,
            OperatorInt : 1,
            OperatorInString : "(",
            SalaryHeadID : 0,
            SalaryHeadName : "",
            PercentVelue : 0
        };
        _oSalarySchemeDetailCalculations.push(oSSDetailCalculation);
        RefreshEquation();
    });

    $('#btnBracketEnd_Allownace').click(function ()
    {
        var oSSDetailCalculation={
            SalarySchemeDetailID : 0 ,
            ValueOperatorInt :  2,
            CalculationOnInt : 0,
            CalculationOnInString : "None",
            FixedValue : 0,
            OperatorInt : 2,
            OperatorInString : ")",
            SalaryHeadID : 0,
            SalaryHeadName : "",
            PercentVelue : 0
        };
        _oSalarySchemeDetailCalculations.push(oSSDetailCalculation);
        RefreshEquation();
    });

    $('#btnAdd_Allownace').click(function ()
    {
        var oSSDetailCalculation={
            SalarySchemeDetailID : 0 ,
            ValueOperatorInt :  2,
            CalculationOnInt : 0,
            CalculationOnInString : "None",
            FixedValue : 0,
            OperatorInt : 3,
            OperatorInString : "+",
            SalaryHeadID : 0,
            SalaryHeadName : "",
            PercentVelue : 0
        };
        _oSalarySchemeDetailCalculations.push(oSSDetailCalculation);
        RefreshEquation();
    });

    $('#btnSubtract_Allownace').click(function ()
    {
        var oSSDetailCalculation={
            SalarySchemeDetailID : 0 ,
            ValueOperatorInt :  2,
            CalculationOnInt : 0,
            CalculationOnInString : "None",
            FixedValue : 0,
            OperatorInt : 4,
            OperatorInString : "-",
            SalaryHeadID : 0,
            SalaryHeadName : "",
            PercentVelue : 0
        };
        _oSalarySchemeDetailCalculations.push(oSSDetailCalculation);
        RefreshEquation();
    });

    $('#btnMultiplication_Allownace').click(function ()
    {
        var oSSDetailCalculation={
            SalarySchemeDetailID : 0 ,
            ValueOperatorInt :  2,
            CalculationOnInt : 0,
            CalculationOnInString : "None",
            FixedValue : 0,
            OperatorInt : 5,
            OperatorInString : "*",
            SalaryHeadID : 0,
            SalaryHeadName : "",
            PercentVelue : 0
        };
        _oSalarySchemeDetailCalculations.push(oSSDetailCalculation);
        RefreshEquation();
    });

    $('#btnDivision_Allownace').click(function ()
    {
        var oSSDetailCalculation={
            SalarySchemeDetailID : 0 ,
            ValueOperatorInt :  2,
            CalculationOnInt : 0,
            CalculationOnInString : "None",
            FixedValue : 0,
            OperatorInt : 6,
            OperatorInString : "/",
            SalaryHeadID : 0,
            SalaryHeadName : "",
            PercentVelue : 0
        };
        _oSalarySchemeDetailCalculations.push(oSSDetailCalculation);
        RefreshEquation();
    });

    $('#btnGross_Allownace').click(function ()
    {
        var oSSDetailCalculation={
            SalarySchemeDetailID : 0 ,
            ValueOperatorInt :  1,
            CalculationOnInt : 1,
            CalculationOnInString : "Gross",
            FixedValue : 0,
            OperatorInt : 0,
            OperatorInString : "",
            SalaryHeadID : 0,
            SalaryHeadName : "",
            PercentVelue : 0
        };
        _oSalarySchemeDetailCalculations.push(oSSDetailCalculation);
        RefreshEquation();
        $("#txtFixedAmount").val("");
    });

    $('#btnSalaryHead').click(function ()
    {
        var nSalaryHead = $("#cboSalaryHead option:selected").val();
        var sSalaryHead = $("#cboSalaryHead option:selected").text();
        if (parseInt(nSalaryHead) <= 0)
        {
            alert('Please select an SalaryHead!');
            return;
        }

        var oSSDetailCalculation={
            SalarySchemeDetailID : 0 ,
            ValueOperatorInt :  1,
            CalculationOnInt : 2,
            CalculationOnInString : "SalaryItem",
            FixedValue : 0,
            OperatorInt : 0,
            OperatorInString : "",
            SalaryHeadID : nSalaryHead,
            SalaryHeadName : sSalaryHead,
            PercentVelue : 0
        };
        _oSalarySchemeDetailCalculations.push(oSSDetailCalculation);
        RefreshEquation();
        $("#cboSalaryHead").val(0);
    });

    $('#btnPercent_Allownace').click(function ()
    {
        debugger;
        var sPereentAmount = $("#txtPercentage_Allownace").val();
        if(sPereentAmount==null || sPereentAmount=="")
        {
            alert("Please Enter Percent Amount!");
            return;
        }
        var nPercentAmount = parseInt(sPereentAmount);
        if(nPercentAmount<=0 || nPercentAmount>100)
        {
            alert("Invalid Percent Range!\n Valid Range (1--100)!");
            return;
        }
        var oSSDetailCalculation={
            SalarySchemeDetailID : 0 ,
            ValueOperatorInt :  2,
            CalculationOnInt : 0,
            CalculationOnInString : "None",
            FixedValue : 0,
            OperatorInt : 7,
            OperatorInString : "Percent",
            SalaryHeadID : 0,
            SalaryHeadName : "",
            PercentVelue : nPercentAmount
        };
        _oSalarySchemeDetailCalculations.push(oSSDetailCalculation);
        RefreshEquation();
        $("#txtPercentage_Allownace").val("");
    });

    $('#btnFixedAmount_Allownace').click(function ()
    {
        var sFixedAmount = $("#txtFixedAmount_Allownace").val();
        if(sFixedAmount==null || sFixedAmount=="")
        {
            alert("Please Enter Fixed Amount!");
            return;
        }
        var nFixedAmount = parseFloat(sFixedAmount);
        if(nFixedAmount<=0)
        {
            alert("Zero or Negative Amount Not Allow!");
            return;
        }
        var oSSDetailCalculation={
            SalarySchemeDetailID : 0 ,
            ValueOperatorInt :  1,
            CalculationOnInt : 3,
            CalculationOnInString : "Fixed",
            FixedValue : nFixedAmount.toFixed(2),
            OperatorInt : 0,
            OperatorInString : "",
            SalaryHeadID : 0,
            SalaryHeadName : "",
            PercentVelue : 0
        };
        _oSalarySchemeDetailCalculations.push(oSSDetailCalculation);
        RefreshEquation();
        $("#txtFixedAmount_Allownace").val("");
    });

    function RefreshEquation()
    {
        var sEquation="";
        for(var i=0; i<_oSalarySchemeDetailCalculations.length;i++)
        {
            if(parseInt(_oSalarySchemeDetailCalculations[i].ValueOperatorInt)==2)//Operator=2
            {
                if(parseInt(_oSalarySchemeDetailCalculations[i].OperatorInt)!=7)
                {
                    sEquation=sEquation+_oSalarySchemeDetailCalculations[i].OperatorInString;
                }
                else
                {
                    sEquation=sEquation+" "+_oSalarySchemeDetailCalculations[i].PercentVelue+" % of";
                }
            }
            else
            {
                if(parseInt(_oSalarySchemeDetailCalculations[i].CalculationOnInt)==1)//Gross = 1
                {
                    sEquation=sEquation+" "+_oSalarySchemeDetailCalculations[i].CalculationOnInString;
                }
                else if(parseInt(_oSalarySchemeDetailCalculations[i].CalculationOnInt)==2)//SalaryItem = 2
                {
                    sEquation=sEquation+" "+_oSalarySchemeDetailCalculations[i].SalaryHeadName+" ";
                }
                else if(parseInt(_oSalarySchemeDetailCalculations[i].CalculationOnInt)==3)//Fixed = 3
                {
                    sEquation=sEquation+" "+_oSalarySchemeDetailCalculations[i].FixedValue;
                }
            }
        }
        $("#txtEquation").val(sEquation);
    }

    function LoadSalaryHeadOfBasicType()
    {
        $.ajax
        ({
            type: "GET",
            dataType: "json",
            url : _sBaseAddress+  "/SalaryHead/LoadAllowance",
            data: {Id:1},
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {

                oBasicSalaryHeads = jQuery.parseJSON(data);
                if (oBasicSalaryHeads !=null)
                {
                    if(oBasicSalaryHeads.length>0)
                    {
                        $('#cboSalaryHead').empty();
                        var listItems = "";

                        listItems += "<option value=0>--Salary Head--</option>";
                        for (var i = 0; i < oBasicSalaryHeads.length; i++)
                        {
                            listItems += "<option value='"+parseInt(oBasicSalaryHeads[i].SalaryHeadID)+"'>"+ oBasicSalaryHeads[i].Name+"</option>";
                        }
                        $("#cboSalaryHead").html(listItems);
                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }



    function RefreshObject()
    {
        var oSalarySchemeDetail ={
            SalarySchemeDetailID : 0,
            SalarySchemeID : _oSalarySchemeDetail.SalarySchemeID,
            SalaryHeadID : parseInt($("#cboAllowance option:selected").val()),            
            ConditionInt : parseInt($("#cboCondition option:selected").index()),
            PeriodInt : parseInt($("#cboPeriod option:selected").index()),
            Times : parseInt($("#txtTimes").val()),
            DeferredDay : parseInt($("#txtDefferedDay").val()),
            ActivationAfterInt : parseInt($("#cboActivationAfter option:selected").index()),
            SalarySchemeDetailCalculations : _oSalarySchemeDetailCalculations
        };
        return oSalarySchemeDetail;
    }

    function ValidateInput()
    {
        if(_oSalarySchemeDetail==null || parseInt(_oSalarySchemeDetail.SalarySchemeID)<=0)
        {
            alert("Invalid Salary Scheme!");
            return false;
        }
        var nAllowanceType = $("#cboAllowanceType option:selected").index();        
        if(parseInt(nAllowanceType)<=0)
        {
            alert("Please select Allowance Type!");
            $("#cboAllowanceType").focus();
            return false;
        }        
        var nAllowance = $("#cboAllowance option:selected").val();
        if(parseInt(nAllowance)<=0)
        {
            alert("Please select Allowance!");
            $("#cboAllowance").focus();
            return false;
        }
        var sTimes = $("#txtTimes").val();
        if(sTimes==null || sTimes=="")
        {
            alert("Please Enter Times!");
            $("#txtTimes").focus();
            return false;
        }        
        if(parseInt(sTimes)<=0)
        {
            alert("Please Enter Times!");
            $("#txtTimes").focus();
            return false;
        }
        var nPeriod = $("#cboPeriod option:selected").index();        
        if(parseInt(nPeriod)<=0)
        {
            alert("Please select Period!");
            $("#cboPeriod").focus();
            return false;
        }  
        //var nCondition = $("#cboCondition option:selected").index();        
        //if(parseInt(nCondition)<=0)
        //{
        //    alert("Please select Condition!");
        //    $("#cboCondition").focus();
        //    return false;
        //}
        var sDefferedDay = $("#txtDefferedDay").val();
        if(sDefferedDay==null || sDefferedDay=="")
        {
            alert("Please Enter Activation Days!");
            $("#txtDefferedDay").focus();
            return false;
        }        
        if(parseInt(sDefferedDay)<=0)
        {
            alert("Please Enter Activation Days!");
            $("#txtDefferedDay").focus();
            return false;
        }
        var nActivationAfter = $("#cboActivationAfter option:selected").index();        
        if(parseInt(nActivationAfter)<=0)
        {
            alert("Please select Activation After!");
            $("#cboActivationAfter").focus();
            return false;
        }
        if(_oSalarySchemeDetailCalculations==null || _oSalarySchemeDetailCalculations.length<=0)
        {
            alert("Please Enter Equation!");
            return false;
        }        
        var sEquation=""; var sGrossAmount="1000.00"; var sSalaryHeadAmount="500.00";
        for(var i=0; i<_oSalarySchemeDetailCalculations.length;i++)
        {
            if(parseInt(_oSalarySchemeDetailCalculations[i].ValueOperatorInt)==2)//Operator=2
            {
                if(parseInt(_oSalarySchemeDetailCalculations[i].OperatorInt)!=7)
                {
                    sEquation=sEquation+_oSalarySchemeDetailCalculations[i].OperatorInString;
                }
                else
                {
                    if((i+1)>=_oSalarySchemeDetailCalculations.length)
                    {
                        //Must be a head exists
                        alert('Invalid equation!\nPlease check your equation!')
                        return false;
                    }
                    if(parseInt(_oSalarySchemeDetailCalculations[i+1].CalculationOnInt)==1)//Gross = 1
                    {
                        sEquation=sEquation+" ("+sGrossAmount +"*"+_oSalarySchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(_oSalarySchemeDetailCalculations[i+1].CalculationOnInt)==2)//SalaryItem = 2
                    {
                        sEquation=sEquation+" ("+sSalaryHeadAmount +"*"+_oSalarySchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    else if(parseInt(_oSalarySchemeDetailCalculations[i+1].CalculationOnInt)==3)//Fixed = 3
                    {
                        sEquation=sEquation+" ("+_oSalarySchemeDetailCalculations[i+1].FixedValue +"*"+_oSalarySchemeDetailCalculations[i].PercentVelue+")/100";
                    }
                    i=i+1;
                }
            }
            else
            {
                if(parseInt(_oSalarySchemeDetailCalculations[i].CalculationOnInt)==1)//Gross = 1
                {
                    sEquation=sEquation+" "+sGrossAmount;
                }
                else if(parseInt(_oSalarySchemeDetailCalculations[i].CalculationOnInt)==2)//SalaryItem = 2
                {
                    sEquation=sEquation+" "+sSalaryHeadAmount+" ";
                }
                else if(parseInt(_oSalarySchemeDetailCalculations[i].CalculationOnInt)==3)//Fixed = 3
                {
                    sEquation=sEquation+" "+_oSalarySchemeDetailCalculations[i].FixedValue;
                }
            }
        }
        debugger;
        try
        {
            var nTotalAmount = parseFloat(eval(sEquation));
            if(nTotalAmount<0)
            {
                alert('Invalid equation!\nYour calculate negative Value!')
                return false;
            }
        }
        catch(err)
        {
            alert('Invalid equation!\nPlease check your equation!')
            return false;
        }
        return true;
    }

    $('#btnSave').click(function ()
    {
        if(!ValidateInput()){return;}
        var oSalarySchemeDetail = RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/SalaryScheme/SaveDetailAndCalculation_V1",
            traditional: true,
            data: JSON.stringify(oSalarySchemeDetail),
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                var oSalarySchemeDetail = jQuery.parseJSON(data);
                if(oSalarySchemeDetail.ErrorMessage=="")
                {
                    alert("Data Save Successfully.");                    
                    window.returnValue = oSalarySchemeDetail;
                    window.close();
                }
                else
                {
                    alert(oSalarySchemeDetail.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });

    });

    $('#btnClose').click(function ()
    {
        window.close();
    });

    $('#btnReset').click(function ()
    {
        $("#txtEquation").val("");
        _oSalarySchemeDetailCalculations=[];
    });
</script>
