@{
    ViewBag.Title = "Salary Scheme";
}
<html>
    <head>
        <title></title>
        <script src="@Url.Content("~/Views/SalaryScheme/SalarySchemeDetail.js")" type="text/javascript"></script>
    </head>
    <body>
        @{var MenuID = HttpContext.Current.Session[SessionInfo.MenuID];}
        @model ESimSol.BusinessObjects.SalaryScheme
        <div style="font-family: Tahoma; width:100%">
            <table border="0" cellspacing="2" cellpadding="2" style="width:100%">
                <tr>
                    <td style="background-color: #cfb53b; text-align: center; width: 100%; color: White">
                        <label id="lblHeaderName" style="font-size: 15px; font-weight: bold; text-decoration: Underline">
                            Salary Scheme
                        </label>
                    </td>
                </tr>
            </table>

            <div class="easyui-tabs" style="width:100%;height:460px; margin-left:2px">
                <div title="Salary Scheme" style="padding-left:150px;padding-top:5px; font-size: 11px; font-weight: bold">
                    <fieldset style="width:78%; height:auto">
                        <legend>Salary Scheme Info :</legend>
                        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;width:98%">
                            <tr class="trSalaryScheme">
                                <td class="td_SalaryScheme_caption" style="text-align: right">
                                    Name :
                                </td>
                                <td class="td_SalaryScheme_inputfield" colspan="3">
                                    @Html.TextBoxFor(model => model.Name, new { style = "width: 98%", id = "txtName" })
                                </td>
                            </tr>
                            <tr class="trSalaryScheme">
                                <td class="td_SalaryScheme_caption" style="text-align: right">
                                    Nature Of Employee :
                                </td>
                                <td class="td_SalaryScheme_inputfield" colspan="3">
                                    @Html.DropDownListFor(model => model.NatureOfEmployee, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumEmployeeNature))), new { id = "cboNatureOfEmployee", style = "width: 99%;" })
                                </td>
                            </tr>
                            <tr class="trSalaryScheme">
                                <td class="td_SalaryScheme_caption" style="text-align: right">
                                    Payment Cycle :
                                </td>
                                <td style="width:30%">

                                    @Html.DropDownListFor(model => model.PaymentCycle, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumPaymentCycle))), new { id = "cboPaymentCycle", style = "width:100%", @class = "Change_PaymentCycle" })
                                </td>
                                <td style="width:20%"></td>
                                <td style="width:30%">
                                    Start Day :
                                    <select id="cboStatDay" style="width:65%"> </select>
                                </td>

                            </tr>
                            <tr class="trSalaryScheme">
                                <td class="td_SalaryScheme_caption" style="text-align: right">
                                    Description :
                                </td>
                                <td class="td_SalaryScheme_inputfield" colspan="3">
                                    @Html.TextBoxFor(model => model.Description, new { style = "width: 98%;", id = "txtDescription" })
                                </td>
                            </tr>
                            <tr class="trSalaryScheme">
                                <td class="td_SalaryScheme_caption" style=" text-align: right"></td>
                                <td class="td_SalaryScheme_inputfield" colspan="3">
                                    <input type="checkbox" id="checkAllowOverTime" />Allow Over Time
                                </td>
                            </tr>

                            <tr id="trforcheckAllowOverTime" class="trSalaryScheme">
                                <td style="text-align: right" class="td_SalaryScheme_caption"></td>
                                <td class="td_SalaryScheme_inputfield" colspan="3">
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ac.
                                    <input type="text" disabled="disabled" value="OT hr" style="font-weight:bold;width: 35px;" />  *
                                    @Html.DropDownListFor(model => model.OverTimeON, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumOverTimeON))), new { id = "cboOverTimeON", style = "width: 60px;" }) /
                                    <input type="text" id="txtDividedBy" style="width: 60px;" /> *
                                    <input type="text" id="txtMultiplicationBy" style="width: 60px;" />
                                    <b>Or</b>
                                    <span></span>
                                    <input type="text" id="txtFixedOTRatePerHour" style="width: 130px;" placeholder="Fixed amount per hour" />
                                </td>
                            </tr>

                            <tr id="trforcheckAllowOverTime_Com" class="trSalaryScheme">
                                <td style="text-align: right" class="td_SalaryScheme_caption"></td>
                                <td class="td_SalaryScheme_inputfield" colspan="3">
                                    Comp.
                                    <input type="text" disabled="disabled" value="OT hr" style="font-weight:bold;width: 35px;" />  *
                                    @Html.DropDownListFor(model => model.CompOverTimeON, new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumOverTimeON))), new { id = "cboCompOverTimeON", style = "width: 60px;" }) /
                                    <input type="text" id="txtCompDividedBy" style="width: 60px;" /> *
                                    <input type="text" id="txtCompMultiplicationBy" style="width: 60px;" />
                                    <b>Or</b>
                                    <span></span>
                                    <input type="text" id="txtCompFixedOTRatePerHour" style="width: 130px;" placeholder="Fixed amount per hour" />
                                </td>
                            </tr>

                            <tr class="trSalaryScheme">
                                <td style="text-align: right" class="td_SalaryScheme_caption"></td>
                                <td class="td_SalaryScheme_inputfield" colspan="3">
                                    <input id="chkAttendanceDependent" type="checkbox" checked="checked" />Attendance Dependent
                                </td>
                            </tr>
                            <tr id="trdAttendanceDependent_Late" class="trSalaryScheme">
                                <td style="text-align: right" class="td_SalaryScheme_caption"></td>
                                <td class="td_SalaryScheme_inputfield" colspan="3">
                                    One Day Basic Salary or <input type="text" id="txtFixedLatePenalty" placeholder="Fixed amount" style="width:80px;" /> Deduction For
                                    <input id="txtLateCount" type="text" style="width:10%" /> Days Late
                                </td>
                            </tr>
                            <tr id="trdAttendanceDependent_Early" class="trSalaryScheme">
                                <td style="text-align: right" class="td_SalaryScheme_caption"></td>
                                <td class="td_SalaryScheme_inputfield" colspan="3">
                                    One Day Basic Salary or <input type="text" id="txtFixedEarlyLeavePenalty" placeholder="Fixed amount" style="width:80px;" /> Deduction For
                                    <input id="txtEarlyLeavingCount" type="text" style="width:10%" /> Days EarlyLeaving
                                </td>

                            </tr>
                            <tr id="trdAttendanceDependent_Gratuity" class="trSalaryScheme">
                                <td style="text-align: right" class="td_SalaryScheme_caption"></td>
                                <td class="td_SalaryScheme_inputfield" colspan="3">
                                   <input type="checkbox" id="chkGratuity" /> <span><b>Gratuity</b></span>
                                    <div id="regionGratuity" style="width:100%;">
                                        <div style="float:left; width:50%;">
                                            Maturity After
                                            <select id="cboGratuityMaturity">
                                                <option value="1">1</option>
                                                <option value="2">2</option>
                                                <option value="3">3</option>
                                                <option value="4">4</option>
                                                <option value="5">5</option>
                                                <option value="6">6</option>
                                            </select>
                                            <span> Years of joining</span>
                                        </div>
                                        <div style="float:left;  width:50%;">
                                                Benifited On Last:
                                            <select id="cboPayrollApplyOn" style="width:80px"></select>
                                        </div>
                                        
                                    </div>
                                    
                                    <div id="regionMaturityMonth">
                                        After maturity of the employee resignation, rest of the fraction year will be considered as one year if 
                                        <span>
                                            <select id="cboMaturityMonth" style="width:40px;">
                                                <option value="1">1</option>
                                                <option value="2">2</option>
                                                <option value="3">3</option>
                                                <option value="4">4</option>
                                                <option value="5">5</option>
                                                <option value="6">6</option>
                                                <option value="7">7</option>
                                                <option value="8">8</option>
                                                <option value="9">9</option>
                                                <option value="10">10</option>
                                                <option value="11">11</option>
                                                <option value="12">12</option>
                                            </select>
                                        </span>
                                        month accross.
                                        
                                    </div>
                                </td>
                            </tr>
                            <tr class="trSalaryScheme">
                                <td style="text-align: right" class="td_SalaryScheme_caption"></td>
                                <td class="td_SalaryScheme_inputfield" colspan="3">
                                    <input type="checkbox" id="checkAllowBankAdvice" />Allow Bank Advice
                                </td>
                            </tr>
                            <tr class="trSalaryScheme">
                                <td style="text-align: right" class="td_SalaryScheme_caption"></td>
                                <td class="td_SalaryScheme_inputfield" colspan="3">
                                    <input id="chkProductionBase" type="checkbox" />Production Base
                                </td>
                            </tr>
                            <tr class="trSalaryScheme">
                                <td style="text-align: right" class="td_SalaryScheme_caption"></td>
                                <td class="td_SalaryScheme_inputfield" colspan="3">
                                    <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true" onclick="Save()">Save</a>
                                </td>
                            </tr>
                        </table>
                    </fieldset>
                </div>

                <div title="Basic Salary Info" style="padding:5px">
                    <table id="tblSalarySchemeDetail_Basic" title="Basic Salary Details" class="easyui-datagrid" style="width: 100%; height: 415px;"
                           data-options="singleSelect: true, fitColumns:false,  rownumbers:true,pagination:false,autoRowHeight:false, toolbar: '#toolbarbasic'">
                        <thead>
                            <tr>
                                <th field="SalaryHeadName" width="150" align="left" style="font-size: 8px"> Salary Head </th>
                                <th field="Calculation" width="500" align="left" style="font-size: 8px"> Value </th>
                            </tr>
                        </thead>
                    </table>
                    <div id="toolbarbasic">
                        <a id="btnAddSalaryHeadCalculation" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                        <a id="btnRemoveSCalculation_Basic" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>

                        <a id="btnAddGrossCalculation" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true" style="float:right;">Gross</a>
                        <input type="text" id="txtGrossEquation" style="width:300px;float:right;" disabled/>
                    </div>
                </div>

                <div title="Allowance Info" style="padding:5px">
                    <table id="tblSalarySchemeDetail_Allowance" title="Allowance Details" class="easyui-datagrid" style="width: 100%; height: 415px; font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="true" toolbar="#toolbarallowance">
                        <thead>
                            <tr>
                                <th field="SalaryHeadTypeInString" width="100" align="left"> Allowance Type</th>
                                <th field="SalaryHeadName" width="100" align="left"> Allowance Head</th>
                                <th field="Calculation" width="190" align="left" style="text-align: right"> Value </th>
                                <th field="PeriodInString" width="125" align="left"> Period </th>
                                <th field="ActivationAfterInString" width="135" align="left"> Activation After </th>
                                <th field="ConditionInString" width="135" align="left"> Condition </th>
                                <th field="SalaryTypeInString" width="135" align="left"> Salary Type </th>
                            </tr>
                        </thead>
                    </table>
                    <div id="toolbarallowance">
                        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" id="btnAddAllowance" plain="true" >Add</a>
                        <a id="btnDelete_Allowance" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" >Remove</a>
                    </div>
                </div>

                <div title="Production Bonus" style="padding:5px">
                    <table id="tblProductionBonus" title="Production Bonus Details" class="easyui-datagrid" style="width: 100%; height: 415px; font-size: 11px;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="true" toolbar="#toolbarProductionBonus">
                        <thead>
                            <tr>
                                <th field="ProductionSlotInString" width="200" align="left"> Production Slot</th>
                                <th field="ProductioBonusInString" width="300" align="left"> Productio Bonus</th>
                                <th field="Activity" width="300" align="left">Activity</th>

                            </tr>
                        </thead>
                    </table>
                    <div id="toolbarProductionBonus" style="height:50px;">
                        If Production Bonus amount between <input id="minAmount" style="width:60px;" /> and <input id="maxAmount" style="width:60px;" /> then Production Bonus = <input id="PerVal" style="width:35px;"  /> % of employee's production or <input id="FixedVal" style="width:45px;"  /> fixed
                        <a id="btnPBonusSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" onclick="PBonusSave()" plain="true">Add</a>
                        <br />
                        <a id="btnPBonusDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="PBonusDelete()">Remove</a>
                        <a id="btnActivity_PB" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Activity_PB()">Activity</a>
                        <input id="chkPBInactive" type="checkbox" />Inacive
                     </div>
                </div>
            </div>
            <fieldset>
                <legend>Action :</legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;width:100%">
                    <tr>
                        <td style="width:70%"></td>
                        <td style="width:30%; text-align:right;">
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

        <div id="winBasicSalaryHead" class="easyui-window" title="Add Salary Head Calculation" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:33%;height:auto;padding:1px">
            <div style="font-family: Tahoma">
                <table border="0" cellspacing="2" cellpadding="2">
                    <tr>
                        <td style="background-color: #cfb53b; text-align: center; width: 420px; color: White">
                            <label id="lblHeaderName_BasicSalaryHead" style="font-size: 12px; font-weight: bold; text-decoration: Underline">Salary Head Calculation</label>
                        </td>
                    </tr>
                </table>
                <textarea id="txtEquation_Basic" style="width:420px; margin-left:2px; font-weight:bold; resize:none" rows="2" disabled="disabled"></textarea>
                <fieldset>
                    <table border="0" cellspacing="2" cellpadding="1" style="font-size: 11px; font-weight: bold; margin-left:0px">
                        <tr>
                            <td style="width:40px">
                                <input id="btnClear_Basic" type="button" value="←" style="width:40px; font-weight:bolder" />
                            </td>
                            <td colspan="2" style="width:80px">
                                <input id="btnGross_Basic" type="button" value="Gross" style="width:85px" />
                            </td>
                            <td style="width:230px; text-align:right; border:1px solid black">
                                <select style="width: 210px;" id="cboSalaryHead_Basic"></select>
                            </td>
                            <td style="width:20px; border:1px solid black">
                                <a id="btnSalaryHead_Basic" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"></a>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:40px">
                                <input id="btnAdd_Basic" type="button" value="+" style="width:40px; font-size:larger" />
                            </td>
                            <td style="width:40px">
                                <input id="btnSubtract_Basic" type="button" value="-" style="width:40px; font-size:larger" />
                            </td>
                            <td style="width:40px">
                                <input id="btnBracketStart_Basic" type="button" value="(" style="width:40px" />
                            </td>
                            <td style="width:230px; text-align:right; border:1px solid black">
                                Percent(%) : <input id="txtPercentage_Basic" type="text" style="width:120px;" />
                            </td>
                            <td style="width:20px; border:1px solid black">
                                <a id="btnPercent_Basic" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"></a>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:40px">
                                <input id="btnMultiplication_Basic" type="button" value="x" style="width:40px" />
                            </td>
                            <td style="width:40px">
                                <input id="btnDivision_Basic" type="button" value="/" style="width:40px" />
                            </td>
                            <td style="width:40px">
                                <input id="btnBracketEnd_Basic" type="button" value=")" style="width:40px" />
                            </td>
                            <td style="width:230px; text-align:right; border:1px solid black">
                                Fixed Amount : <input id="txtFixedAmount_Basic" type="text" style="width: 120px;" />
                            </td>
                            <td style="width:20px; border:1px solid black">
                                <a id="btnFixedAmount_Basic" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"></a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
                <fieldset>
                    <legend>Action :</legend>
                    <table border="0" cellpadding="2" cellspacing="2">
                        <tr>
                            <td style="width:300px; text-align:right">
                                <a id="btnReset_BasicSalaryHead" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="Reset_BasicSalaryHead()">Reset</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnSave_BasicSalaryHead" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnClose_BasicSalaryHead" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>

                    </table>
                </fieldset>
            </div>
        </div>

        <div id="winAllowanceSalaryHead" class="easyui-window" title="Add Salary Head Calculation" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false" style="width:33%;height:auto;padding:1px">
            <div style="font-family: Tahoma">
                <table border="0" cellspacing="2" cellpadding="2">
                    <tr>
                        <td style="background-color: #cfb53b; text-align: center; width: 420px; color: White">
                            <label id="lblHeaderName_Allowance" style="font-size: 12px; font-weight: bold; text-decoration: Underline">Add Allowance</label>
                        </td>
                    </tr>
                </table>
                <fieldset>
                    <table border="0" cellspacing="2" cellpadding="1" style="font-size: 11px; font-weight: bold; margin-left:0px">
                        <tr>
                            <td style="width:120px; text-align:right">
                                Allowance Type :
                            </td>
                            <td style="width:280px">
                                <select style="width: 270px;" id="cboAllowanceType" onchange="LoadAllowance()"><option></option></select>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:120px; text-align:right">
                                Allowance :
                            </td>
                            <td style="width:280px">
                                <select style="width: 270px;" id="cboAllowance"><option></option></select>
                            </td>
                        </tr>
                    </table>
                </fieldset>

                <textarea id="txtEquation_Allowance" style="width:420px; margin-left:2px; font-weight:bold; resize:none" rows="2" disabled="disabled"></textarea>
                <fieldset>
                    <table border="0" cellspacing="2" cellpadding="1" style="font-size: 11px; font-weight: bold; margin-left:0px">
                        <tr>
                            <td style="width:40px">
                                <input id="btnClear_Allowance" type="button" value="←" style="width:40px; font-weight:bolder" />
                            </td>
                            <td colspan="2" style="width:80px">
                                <input id="btnGross_Allowance" type="button" value="Gross" style="width:85px" />
                            </td>
                            <td style="width:230px; text-align:right; border:1px solid black">
                                <select style="width: 210px;" id="cboSalaryHead_Allowance"></select>
                            </td>
                            <td style="width:20px; border:1px solid black">
                                <a id="btnSalaryHead_Allowance" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"></a>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:40px">
                                <input id="btnAdd_Allowance" type="button" value="+" style="width:40px; font-size:larger" />
                            </td>
                            <td style="width:40px">
                                <input id="btnSubtract_Allowance" type="button" value="-" style="width:40px; font-size:larger" />
                            </td>
                            <td style="width:40px">
                                <input id="btnBracketStart_Allowance" type="button" value="(" style="width:40px" />
                            </td>
                            <td style="width:230px; text-align:right; border:1px solid black">
                                Percent(%) : <input id="txtPercentage_Allowance" type="text" style="width:120px;" />
                            </td>
                            <td style="width:20px; border:1px solid black">
                                <a id="btnPercent_Allowance" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"></a>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:40px">
                                <input id="btnMultiplication_Allowance" type="button" value="x" style="width:40px" />
                            </td>
                            <td style="width:40px">
                                <input id="btnDivision_Allowance" type="button" value="/" style="width:40px" />
                            </td>
                            <td style="width:40px">
                                <input id="btnBracketEnd_Allowance" type="button" value=")" style="width:40px" />
                            </td>
                            <td style="width:230px; text-align:right; border:1px solid black">
                                Fixed Amount : <input id="txtFixedAmount_Allowance" type="text" style="width: 120px;" />
                            </td>
                            <td style="width:20px; border:1px solid black">
                                <a id="btnFixedAmount_Allowance" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"></a>
                            </td>
                        </tr>
                    </table>
                </fieldset>

                <fieldset>
                    <table border="0" cellspacing="2" cellpadding="1" style="font-size: 11px; font-weight: bold; margin-left:0px">
                        <tr>
                            <td style="width: 120px; text-align: right">
                                Times :
                            </td>
                            <td style="width: 280px" colspan="2">
                                <input type="text" style="width: 80px" id="txtTimes" />
                                &nbsp;&nbsp;&nbsp;Period :
                                @Html.DropDownList("cboPeriod", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumPeriod))), new { id = "cboPeriod", style = "width: 125px;" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 120px; text-align: right">
                                Condition :
                            </td>
                            <td style="width: 280px" colspan="2">
                                @Html.DropDownList("cboCondition", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumAllowanceCondition))), new { id = "cboCondition", style = "width: 270px;" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 120px; text-align: right">
                                Activation After :
                            </td>
                            <td style="width: 280px" colspan="2">
                                <input type="text" style="width: 80px" id="txtDefferedDay" />
                                Days off :
                                @Html.DropDownList("cboActivationAfter", new SelectList(Enum.GetValues(typeof(ESimSol.BusinessObjects.EnumRecruitmentEvent))), new { id = "cboActivationAfter", style = "width: 125px;" })
                            </td>
                        </tr>
                    </table>

                </fieldset>

                <fieldset>
                    <legend>Action :</legend>
                    <table border="0" cellpadding="2" cellspacing="2">
                        <tr>

                            <td style="width:300px; text-align:right">
                                Salary Type :
                                <select id="cboEnumSalaryType" style="width:120px"></select>

                                <a  href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" onclick="Reset_SalaryHead()">Reset</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnSave_Allowance" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            </td>
                            <td style="width:50px">
                                <a id="btnClose_Allowance" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>

                    </table>
                </fieldset>
            </div>
        </div>

</body>
</html>

<style type="text/css">
    .trSalaryScheme {
        width: 100%;
    }

    .td_SalaryScheme_caption {
        width: 20%;
    }

    .td_SalaryScheme_inputfield {
        width: 80%;
    }
</style>

<script type="text/javascript">
    var _oSalaryScheme = null;
    var _sBaseAddress = "";
    var _nTotalAmount=0;
    var _oBasicSalarySchemeDetails=[];
    var _oAllowanceSalarySchemeDetails=[];
    var _nSalarySchemeID=0;
    var _nMenuid=0;
    var _sSalarySchemeHeader="";
    var _oActivePBonuss=[];
    var _oInActivePBonuss=[];
    var _PayRollApplyOns=[];
    var _sEquation = "";

    $(document).ready(function()
    {
        debugger;
        //history.pushState(null, document.title, location.href);
        //window.addEventListener('popstate', function (event)
        //{
        //    history.pushState(null, document.title, location.href);
        //});

        _sBaseAddress = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oSalaryScheme = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _PayRollApplyOns = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.PayRollApplyOns));
        var SalaryTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.SalaryTypes));
        _sEquation = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.GrossEquation));

        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(MenuID));

        $('#cboPayrollApplyOn').icsLoadCombo({
            List: _PayRollApplyOns,
            OptionValue: "Value",
            DisplayText: "Text",
            InitialValue: ""
        });

        LoadEnumSalaryType(SalaryTypes);


        $('#txtFixedOTRatePerHour,#txtCompFixedOTRatePerHour,#txtFixedLatePenalty,#txtFixedEarlyLeavePenalty').icsCurrencyBox();
        $('#regionGratuity,#regionMaturityMonth').hide();

        InitializeSalarySchemeDetailEvents();
        LoadSalaryHeadOfBasicType();
        _sSalarySchemeHeader=sessionStorage.getItem("SalarySchemeHeader");
        if(_oSalaryScheme.ErrorMessage!="")
        {
            alert(_oSalaryScheme.ErrorMessage);
            _oSalaryScheme.ErrorMessage=="";
        }
        $("#minAmount").focus();
        $("#lblHeaderName").html(_sSalarySchemeHeader);
        $('#txtDividedBy').numberbox({min:0,precision:2});
        $('#txtCompDividedBy').numberbox({min:0,precision:2});
        $('#txtMultiplicationBy').numberbox({min:0,precision:2});
        $('#txtCompMultiplicationBy').numberbox({min:0,precision:2});
        $('#minAmount').numberbox({min:0,precision:2});
        $('#maxAmount').numberbox({min:0,precision:2});
        $('#PerVal').numberbox({min:0,precision:2});
        $('#FixedVal').numberbox({min:0,precision:2});
        $('#trforcheckAllowOverTime,#trforcheckAllowOverTime_Com').hide();
        $('.trdAttendanceDependent_Late').hide();
        $('.trdAttendanceDependent_Early').hide();
        _nSalarySchemeID=_oSalaryScheme.SalarySchemeID;
        if(_sSalarySchemeHeader=="Edit Salary Scheme")
        {
            ForEdit(_oSalaryScheme);
        }
        if(_sSalarySchemeHeader=="New Salary Scheme")
        {
            DynamicRefreshList(_oSalaryScheme.SalarySchemeDetails, "tblSalarySchemeDetail_Basic");
        }

        if(_sSalarySchemeHeader=="View Salary Scheme")
        {
            $('#btnSave').hide();
            $('#btnAddSalaryHeadCalculation').hide();
            $('#btnRemoveSCalculation_Basic').hide();
            $('#btnAddAllowance').hide();
            $('#btnDelete_Allowance').hide();
            //$('#btnAddAllowance').hide();
            $("#txtName").prop('disabled', true);

            $("#cboNatureOfEmployee").prop('disabled', true);
            $("#cboPaymentCycle").prop('disabled', true);
            $("#txtDescription").prop('disabled', true);
            $("#cboOverTimeON").prop('disabled', true);
            $("#cboCompOverTimeON").prop('disabled', true);
            $('#txtFixedOTRatePerHour').prop('disabled', true);
            $('#txtCompFixedOTRatePerHour').prop('disabled', true);
            $("#chkAttendanceDependent").prop('disabled', true);
            $("#chkProductionBase").prop('disabled', true);
            $("#checkAllowBankAdvice").prop('disabled', true);
            $("#checkAllowOverTime").prop('disabled', true);
            $("#txtLateCount").prop('disabled', true);
            $("#txtEarlyLeavingCount").prop('disabled', true);
            $('#txtFixedLatePenalty,#txtFixedEarlyLeavePenalty').prop('disabled', true);
            $("#tblSalarySchemeDetail_Basic").prop('disabled', true);
            $("#cboStatDay").prop('disabled', true);
            $("#txtDividedBy").attr('disabled', true);
            $("#txtCompDividedBy").prop('disabled', true);
            $("#txtMultiplicationBy").attr('disabled', true);
            $("#txtCompMultiplicationBy").prop('disabled', true);
            $('#btnPBonusSave').hide();
            $('#btnPBonusDelete').hide();
            $('#trdAttendanceDependent_Gratuity input,select').prop('disabled',true);
            ForEdit(_oSalaryScheme);
        }


    });

    function LoadEnumSalaryType(SalaryTypes)
    {
        var listItems="";
        for (var i = 0; i < SalaryTypes.length; i++) {

            listItems += "<option value='" + SalaryTypes[i].Value + "'>" + SalaryTypes[i].Text+ "</option>";
        }
        $('#cboEnumSalaryType').html(listItems);
    }

    $('#cboOverTimeON').change(function(e){
        if($('#cboOverTimeON').val()!='None'){
            $('#txtFixedOTRatePerHour').val("");
            $('#txtFixedOTRatePerHour').prop('disabled',true);
        }
        else{
            $('#txtFixedOTRatePerHour').prop('disabled',false);
        }
    });

    $('#cboCompOverTimeON').change(function(e){
        if($('#cboCompOverTimeON').val()!='None'){
            $('#txtCompFixedOTRatePerHour').val("");
            $('#txtCompFixedOTRatePerHour').prop('disabled',true);
        }
        else{
            $('#txtCompFixedOTRatePerHour').prop('disabled',false);
        }
    });

    $('#txtFixedOTRatePerHour').keyup(function(e){
        if($('#txtFixedOTRatePerHour').val()>0){
            $('#cboOverTimeON').prop('disabled',true);
            $('#txtDividedBy,#txtMultiplicationBy').numberbox('setValue',"");
            $('#txtDividedBy,#txtMultiplicationBy').numberbox({'disabled':true});
        }
        else
        {
            $('#cboOverTimeON').prop('disabled',false);
            $('#txtDividedBy,#txtMultiplicationBy').numberbox({'disabled':false});
        }
    });

    $('#txtCompFixedOTRatePerHour').keyup(function(e){
        if($('#txtCompFixedOTRatePerHour').val()>0){
            $('#cboCompOverTimeON').prop('disabled',true);
            $('#txtCompDividedBy,#txtCompMultiplicationBy').numberbox('setValue',"");
            $('#txtCompDividedBy,#txtCompMultiplicationBy').numberbox({'disabled':true});
        }
        else
        {
            $('#cboCompOverTimeON').prop('disabled',false);
            $('#txtCompDividedBy,#txtCompMultiplicationBy').numberbox({'disabled':false});
        }
    });

    $('#cboPayrollApplyOn').change(function(e){
        if($('#cboPayrollApplyOn').val()>0){
            $('#regionMaturityMonth').show();
        }
        else{
            $('#regionMaturityMonth').hide();
            $('#cboMaturityMonth').val(1);
        }
    });


    $('#chkPBInactive').click(function ()
    {
        if($('#chkPBInactive').is(':checked'))
        {
            DynamicRefreshList(_oInActivePBonuss, "tblProductionBonus");
        }
        else
        {
            DynamicRefreshList(_oActivePBonuss, "tblProductionBonus");
        }
    });

    $('#chkGratuity').click(function(e){
        if($('#chkGratuity').is(':checked')){
            $('#cboGratuityMaturity,#cboMaturityMonth').val(1);
            $('#regionGratuity').show();
        }
        else{
            $('#regionGratuity').hide();
            $('#regionMaturityMonth').hide();
            $('#cboPayrollApplyOn').val('None');
        }
    });

    $('#checkAllowOverTime').click(function ()
    {
        if($('#checkAllowOverTime').is(':checked')==true)
        {
            $('#trforcheckAllowOverTime,#trforcheckAllowOverTime_Com').show();
        }
        else
        {
            $('#trforcheckAllowOverTime,#trforcheckAllowOverTime_Com').hide();
        }
    });

    $('#chkAttendanceDependent').click(function ()
    {
        if($('#chkAttendanceDependent').is(':checked')==true)
        {
            $('#trdAttendanceDependent_Late').show();
            $('#trdAttendanceDependent_Early').show();
        }
        else
        {
            $('#trdAttendanceDependent_Late').hide();
            $('#trdAttendanceDependent_Early').hide();
        }
    });


    function ForEdit(_oSalaryScheme)
    {
        $('#checkAllowBankAdvice').prop('checked', _oSalaryScheme.IsAllowBankAccount);
        $('#checkAllowOverTime').prop('checked',_oSalaryScheme.IsAllowOverTime);
        $('#chkProductionBase').prop('checked',_oSalaryScheme.IsProductionBase);

        if(_oSalaryScheme.IsAttendanceDependant==true)
        {
            $('#trdAttendanceDependent_Late').show();
            $('#trdAttendanceDependent_Early').show();
            $('#txtLateCount').val(_oSalaryScheme.LateCount);
            $('#txtEarlyLeavingCount').val(_oSalaryScheme.EarlyLeavingCount);

            $('#txtFixedLatePenalty').val(_oSalaryScheme.FixedLatePenalty);
            $('#txtFixedEarlyLeavePenalty').val(_oSalaryScheme.FixedEarlyLeavePenalty);
        }
        else
        {
            $('#trdAttendanceDependent_Late').hide();
            $('#trdAttendanceDependent_Early').hide();
            //$('#btnAddAllowance').hide();
            $('#chkAttendanceDependent').prop('checked',false);
        }
        if(_oSalaryScheme.IsAllowOverTime==true)
        {
            $('#trforcheckAllowOverTime,#trforcheckAllowOverTime_Com').show();

            if(_oSalaryScheme.FixedOTRatePerHour>0)
            {
                $('#txtFixedOTRatePerHour').val(_oSalaryScheme.FixedOTRatePerHour);
                $('#cboOverTimeON').prop('disabled',true);
                $('#txtDividedBy,#txtMultiplicationBy').numberbox({'disabled':true});
            }
            else
            {
                $('#txtDividedBy').numberbox('setValue',_oSalaryScheme.DividedBy);
                $('#txtMultiplicationBy').numberbox('setValue',_oSalaryScheme.MultiplicationBy);
            }
            if(_oSalaryScheme.CompFixedOTRatePerHour>0)
            {
                $('#txtCompFixedOTRatePerHour').val(_oSalaryScheme.CompFixedOTRatePerHour);
                $('#cboCompOverTimeON').prop('disabled',true);
                $('#txtCompDividedBy,#txtCompMultiplicationBy').numberbox({'disabled':true});
            }
            else
            {
                $('#txtCompDividedBy').numberbox('setValue',_oSalaryScheme.CompDividedBy);
                $('#txtCompMultiplicationBy').numberbox('setValue',_oSalaryScheme.CompMultiplicationBy);
            }
            document.getElementById("cboOverTimeON").selectedIndex=_oSalaryScheme.OverTimeONInt;
            document.getElementById("cboCompOverTimeON").selectedIndex=_oSalaryScheme.CompOverTimeONInt;
        }
        else
        {
            $('#trforcheckAllowOverTime,#trforcheckAllowOverTime_Com').hide();
        }
        if(_oSalaryScheme.IsGratuity){

            $('#chkGratuity').prop('checked',true);
            $('#regionGratuity').show();
            $('#cboGratuityMaturity').val(_oSalaryScheme.GraturityMaturedInYear);
            if(_oSalaryScheme.GratuityApplyOn>0){
                $('#regionMaturityMonth').show();
                $('#cboPayrollApplyOn').val(_oSalaryScheme.GratuityApplyOn);
                $('#cboMaturityMonth').val(_oSalaryScheme.NoOfMonthCountOneYear);
            }
        }

        for(var i=0;i<_oSalaryScheme.SalarySchemeDetails.length;i++)
        {
            if(_oSalaryScheme.SalarySchemeDetails[i].SalaryHeadType==1)
            {
                _oBasicSalarySchemeDetails.push(_oSalaryScheme.SalarySchemeDetails[i]);
            }
            else{
                _oAllowanceSalarySchemeDetails.push(_oSalaryScheme.SalarySchemeDetails[i]);
            }
        }
        DynamicRefreshList(_oBasicSalarySchemeDetails, "tblSalarySchemeDetail_Basic");
        DynamicRefreshList(_oAllowanceSalarySchemeDetails, "tblSalarySchemeDetail_Allowance");

        $("#cboNatureOfEmployee").prop('disabled', true);
        LoadStartDay();
        for(var i=0; i<_oSalaryScheme.ProductionBonuss.length;i++)
        {
            if(_oSalaryScheme.ProductionBonuss[i].IsActive)
            {
                _oActivePBonuss.push(_oSalaryScheme.ProductionBonuss[i]);
            }
            else
            {
                _oInActivePBonuss.push(_oSalaryScheme.ProductionBonuss[i]);
            }
        }
        DynamicRefreshList(_oActivePBonuss, "tblProductionBonus");

        $('#txtGrossEquation').val(_sEquation);
    }

    function ValidateInput()
    {
        if($("#txtName").val()==""||$("#txtName").val()==null)
        {
            alert("Please Enter Name !");
            $("#txtName").focus();
            return false;
        }
        var nPaymentCycle = $("#cboPaymentCycle option:selected").index();
        if(parseInt(nPaymentCycle)==2 || parseInt(nPaymentCycle)==3)
        {
            var nStatDay = parseInt($("#cboStatDay option:selected").val());
            if(nStatDay==0)
            {
                alert("Please Select Start Day!");
                $("#cboPaymentCycle").focus();
                return false;
            }
        }

        if(document.getElementById("cboNatureOfEmployee").selectedIndex==""||document.getElementById("cboNatureOfEmployee").selectedIndex==null||document.getElementById("cboNatureOfEmployee").selectedIndex==0)
        {
            alert("Please Select Nature Of Employee !");
            $("#cboNatureOfEmployee").focus();
            return false;
        }
        if(document.getElementById("cboPaymentCycle").selectedIndex==""||document.getElementById("cboPaymentCycle").selectedIndex==null||document.getElementById("cboPaymentCycle").selectedIndex==0)
        {
            alert("Please Select Payment Cycle !");
            $("#cboPaymentCycle").focus();
            return false;
        }

        if ($('#checkAllowOverTime').is(':checked')==true)
        {

            if(($("#cboOverTimeON").val()==""||$("#cboOverTimeON").val()==0||$("#cboOverTimeON").val()=="None") && $('#txtFixedOTRatePerHour').val()<=0)
            {
                alert("Please select overtime on or enter fixed value");
                $("#cboOverTimeON").focus();
                return false;
            }

            if($("#cboOverTimeON").val()!="None"){
                if($("#txtDividedBy").val()==""||$("#txtDividedBy").val()==null)
                {
                    alert("Please Enter Divided By Value!");
                    $("#txtDividedBy").focus();
                    return false;
                }
                if($("#txtMultiplicationBy").val()==""||$("#txtMultiplicationBy").val()==null)
                {
                    alert("Please Enter  Multiplication By!");
                    $("#txtMultiplicationBy").focus();
                    return false;
                }
            }
            else{
                if($('#txtFixedOTRatePerHour').val()<=0){
                    alert("Enter fixed value");
                    $("#txtFixedOTRatePerHour").focus();
                    return false;
                }
            }

            return true;
        }

        return true;
    }

    //function ValidateInputForSSDetail()
    //{
    //    var oBasicTypeDetail = $('#tblSalarySchemeDetail_Basic').datagrid('getRows');
    //    var sCalculation = "";
    //    for(var i=0; i< oBasicTypeDetail.length ; i++)
    //    {
    //        if(oBasicTypeDetail[i].Calculation != "" || oBasicTypeDetail[i].Calculation != null)
    //        {
    //            sCalculation=oBasicTypeDetail[i].Calculation;
    //            break;
    //        }
    //    }

    //    if(sCalculation == "" || sCalculation == null)
    //    {
    //        alert("Please enter Salary Scheme Detail !");
    //        return false;
    //    }
    //    return true;
    //}

    //function RefreshObject()
    //{
    //    var oSalarySchemeDetails=[];
    //    var oBasicTypes = $('#tblSalarySchemeDetail_Basic').datagrid('getRows');
    //    oSalarySchemeDetails=oBasicTypes;
    //    var oAllowances = $('#tblSalarySchemeDetail_Allowance').datagrid('getRows');
    //    for(var i=0;i<oAllowances.length;i++)
    //    {
    //        oSalarySchemeDetails.push(oAllowances[i]);
    //    }
    //    var oSalaryScheme = RefreshObjectForsalaryScheme();
    //    oSalaryScheme.SalarySchemeDetails=oSalarySchemeDetails
    //    return oSalaryScheme;
    //}

    function RefreshObjectForsalaryScheme()
    {
        debugger;
        var oSalaryScheme =
        {
            SalarySchemeID :_nSalarySchemeID,
            Name:$("#txtName").val(),
            NatureOfEmployeeInt:document.getElementById("cboNatureOfEmployee").selectedIndex,
            PaymentCycleInt:document.getElementById("cboPaymentCycle").selectedIndex,
            Description:$("#txtDescription").val(),
            IsAllowBankAccount:$('#checkAllowBankAdvice').is(':checked'),
            IsAllowOverTime: $('#checkAllowOverTime').is(':checked'),
            OverTimeONInt:document.getElementById("cboOverTimeON").selectedIndex,
            CompOverTimeONInt:document.getElementById("cboCompOverTimeON").selectedIndex,
            DividedBy:$("#txtDividedBy").val(),
            CompDividedBy:$("#txtCompDividedBy").val(),
            MultiplicationBy:$("#txtMultiplicationBy").val(),
            CompMultiplicationBy:$("#txtCompMultiplicationBy").val(),
            FixedOTRatePerHour: $('#txtFixedOTRatePerHour').val(),
            CompFixedOTRatePerHour: $('#txtCompFixedOTRatePerHour').val(),
            IsAttendanceDependant:$('#chkAttendanceDependent').is(':checked'),
            LateCount:$("#txtLateCount").val(),
            EarlyLeavingCount:$("#txtEarlyLeavingCount").val(),
            FixedLatePenalty: $('#txtFixedLatePenalty').val(),
            FixedEarlyLeavePenalty:$('#txtFixedEarlyLeavePenalty').val(),
            IsProductionBase:$('#chkProductionBase').is(':checked'),
            StartDay : parseInt($("#cboStatDay option:selected").val()),
            IsGratuity: $('#chkGratuity').is(':checked'),
            GraturityMaturedInYear: ($('#chkGratuity').is(':checked')) ? $('#cboGratuityMaturity').val(): 0,
            NoOfMonthCountOneYear: ($('#chkGratuity').is(':checked') && $('#cboPayrollApplyOn').val()>0) ? $('#cboMaturityMonth').val(): 0,
            GratuityApplyOn:($('#chkGratuity').is(':checked') && $('#cboPayrollApplyOn').val()>0) ? $('#cboPayrollApplyOn').val(): 'None'
        };

        return oSalaryScheme;

    }

    function Save()
    {
        if (!ValidateInput()) return;
        //if(!ValidateInputForSSDetail()) return;
        var oSalaryScheme = RefreshObjectForsalaryScheme();
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/SalaryScheme/SalaryScheme_IU",
            traditional: true,
            data: JSON.stringify(oSalaryScheme),
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                oSalaryScheme = jQuery.parseJSON(data);
                if (oSalaryScheme.ErrorMessage == "")
                {
                    alert("Data Saved sucessfully");
                    var oSalarySchemes =sessionStorage.getItem("SalarySchemes");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if(oSalarySchemes!=null)
                    {
                        oSalarySchemes = jQuery.parseJSON(oSalarySchemes);
                    }
                    else
                    {
                        oSalarySchemes=[];
                    }
                    if(nIndex!=-1)
                    {
                        oSalarySchemes[nIndex]=oSalaryScheme;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oSalarySchemes.length);
                        oSalarySchemes.push(oSalaryScheme);
                    }
                    sessionStorage.setItem("SalarySchemes", JSON.stringify(oSalarySchemes));
                    //window.location.href = _sBaseAddress+ "/SalaryScheme/View_SalarySchemes_V1?menuid="+_nMenuid;
                    _nSalarySchemeID=oSalaryScheme.SalarySchemeID;
                }
                else
                {
                    alert(oSalaryScheme.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    }

    //$('#btnInitialize').click(function (e)
    //{
    //    if (!ValidateInput()) return;

    //    var oSalaryScheme = RefreshObjectForsalaryScheme();
    //    $.ajax({
    //        type: "POST",
    //        dataType: "json",
    //        url: _sBaseAddress + "/SalaryScheme/SalarySchemeSave_V1",
    //        traditional: true,
    //        data: JSON.stringify(oSalaryScheme),
    //        contentType: "application/json; charset=utf-8",
    //        success: function(data)
    //        {
    //            oSalaryScheme = jQuery.parseJSON(data);
    //            if (oSalaryScheme.ErrorMessage == "")
    //            {
    //                alert("Initialized sucessfully");
    //                $("#btnInitialize").hide();
    //                _nSalarySchemeID=oSalaryScheme.SalarySchemeID;
    //            }
    //            else
    //            {
    //                alert(oSalaryScheme.ErrorMessage);
    //            }
    //        },
    //        error: function(xhr, status, error)
    //        {
    //            alert(error);
    //        }
    //    });
    //});

    function CopyFromOtherGrade()
    {
        var oParameter = new Object();
        oParameter.Name = " Search salary Scheme ";
        oParameter.MultipleItemReturn=false;
        var tsv = ((new Date()).getTime()) / 1000;
        var url = _sBaseAddress + "/SalaryScheme/AdvanceSearch?ts=" + tsv;
        oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:380px;dialogWidth:890px;dialogLeft:50;dialogRight:50;dialogTop:100;center:yes;resizable:yes;status:no;scroll:no');
        if(oEmployee!=null)
        {
            var nId= oEmployee.SalarySchemeID;
            if (nId > 0)
            {
                $.ajax({
                    type: "GET",
                    dataType: "json",
                    url: _sBaseAddress + "/SalaryScheme/CopyFromOtherGrade",
                    data: { nId: nId},
                    contentType: "application/json; charset=utf-8",
                    success: function(data)
                    {
                        var salaryScheme = jQuery.parseJSON(data);
                        if (salaryScheme != "")
                        {
                            _oSalaryScheme.SalarySchemeID=0;
                            for(var i=0;i<salaryScheme.SalarySchemeDetails.length;i++)
                            {
                                salaryScheme.SalarySchemeDetails[i].SalarySchemeDetailID=0;
                            }
                            _oSalaryScheme.EmployeeTypeID=0;
                            $('#txtName').val(salaryScheme.Name);
                            $('#cboNatureOfEmployee').val(salaryScheme.NatureOfEmployeeInString);
                            $('#cboPaymentCycle').val(salaryScheme.PaymentCycleInString);
                            $('#txtDescription').val(salaryScheme.Description);
                            ForEdit(salaryScheme);
                        }
                        else
                        {
                            alert(feedbackmessage);
                        }
                    },
                    error: function(xhr, status, error)
                    {
                        alert(error);
                    }
                });
            }
        }
    }


    $('.Change_PaymentCycle').change(function(){
        LoadStartDay();
    });

    function LoadStartDay()
    {
        $('#cboStatDay').empty();
        var nPaymentCycle = $("#cboPaymentCycle option:selected").index();
        if(parseInt(nPaymentCycle)>0)
        {
            var n=0;
            if(parseInt(nPaymentCycle)==2)
            {
                n=7;
            }
            else if(parseInt(nPaymentCycle)==3)
            {
                n=30;
            }
            var listItems= "<option value='0'>0</option>";
            for(i=1; i<=n;i++)
            {
                listItems += "<option value='" + i.toString() +"'>" + i.toString() +"</option>";
            }
            $("#cboStatDay").html(listItems);
            $("#cboStatDay").val(_oSalaryScheme.StartDay);
        }
    }

    $("#btnClose").click(function () {
        window.location.href = _sBaseAddress+ "/SalaryScheme/View_SalarySchemes_V1?menuid="+_nMenuid;
    });

    $(document).keydown(function (e)
    {
        var keyCode = e.keyCode || e.which;
        if (keyCode == 27)
        {
            window.location.href = _sBaseAddress+ "/SalaryScheme/View_SalarySchemes_V1?menuid="+_nMenuid;
        }
    });

    // P Bonus
    function ValidateInput_PBonus()
    {

        if (_nSalarySchemeID <= 0)
        {
            alert("Please Initialize Salary Scheme!");
            return;
        }

        if(parseFloat($('#minAmount').numberbox('getValue'))<=0 || isNaN($('#minAmount').numberbox('getValue')) || $('#minAmount').numberbox('getValue')=="")
        {
            alert("Please enter min amount!");
            $("#minAmount").focus();
            return false;
        }
        if(parseFloat($('#maxAmount').numberbox('getValue'))<=0 || isNaN($('#maxAmount').numberbox('getValue')) || $('#maxAmount').numberbox('getValue')=="")
        {
            alert("Please enter max amount!");
            $("#maxAmount").focus();
            return false;
        }
        if(parseFloat($('#minAmount').numberbox('getValue'))>parseFloat($('#maxAmount').numberbox('getValue')))
        {
            alert("Invalid Slot!");
            return false;
        }
        if((parseFloat($('#PerVal').numberbox('getValue'))<=0 || isNaN($('#PerVal').numberbox('getValue')) || $('#PerVal').numberbox('getValue')=="") && (parseFloat($('#FixedVal').numberbox('getValue'))<=0|| $('#FixedVal').numberbox('getValue')=="" || isNaN($('#FixedVal').numberbox('getValue'))))
        {
            alert("Please enter percentage or fixed value!");
            $("#PerVal").focus();
            return false;
        }
        if(parseFloat($('#PerVal').numberbox('getValue'))>0 && parseFloat($('#FixedVal').numberbox('getValue'))>0)
        {
            alert("Please enter percentage or fixed value, not both!");
            $("#PerVal").focus();
            return false;
        }
        return true;
    }

    function PBonusSave()
    {
        if (!ValidateInput_PBonus()) return;
        var nValue=0;
        var Percent = true;
        if(parseFloat($('#PerVal').numberbox('getValue'))>0 && (parseFloat($('#FixedVal').numberbox('getValue'))<=0 || $('#FixedVal').numberbox('getValue')=="" || isNaN($('#FixedVal').numberbox('getValue'))))
        {
            nValue=parseFloat($('#PerVal').numberbox('getValue'));
        }
        if((parseFloat($('#PerVal').numberbox('getValue'))<=0 || $('#PerVal').numberbox('getValue')=="" || isNaN($('#PerVal').numberbox('getValue'))) && parseFloat( $('#FixedVal').numberbox('getValue'))>0)
        {
            nValue=parseFloat($('#FixedVal').numberbox('getValue'));
            Percent = false;
        }
        var oProductionBonus ={
            ProductionBonusID:0,
            SalarySchemeID: _nSalarySchemeID,
            MinAmount:$('#minAmount').numberbox('getValue'),
            MaxAmount:$('#maxAmount').numberbox('getValue'),
            Value:nValue,
            IsPercent: Percent,
            IsActive: true
        };
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/SalaryScheme/ProductionBonus_IUD",
            traditional: true,
            data: JSON.stringify(oProductionBonus),
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                var oProductionBonus = jQuery.parseJSON(data);
                if (oProductionBonus.ProductionBonusID>0 && oProductionBonus.ErrorMessage == "")
                {
                    alert("Data Saved sucessfully");
                    var oProductionBonuss = $('#tblProductionBonus').datagrid('getRows');
                    var nIndex = oProductionBonuss.length;
                    $('#tblProductionBonus').datagrid('appendRow', oProductionBonus);
                    $('#tblProductionBonus').datagrid('selectRow', nIndex);
                    $('#minAmount').numberbox('setValue',"");
                    $('#maxAmount').numberbox('setValue',"");
                    $('#PerVal').numberbox('setValue',"");
                    $('#FixedVal').numberbox('setValue',"");
                }
                else
                {
                    alert(oProductionBonus.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function PBonusDelete()
    {
        var oProductionBonus = $('#tblProductionBonus').datagrid('getSelected');
        if (oProductionBonus == null || oProductionBonus.ProductionBonusID <= 0)
        {
            alert("Please select an item from the list!");
            return false;
        }

        if (!confirm("Confirm to Delete?")) return;
        var SelectedRowIndex = $('#tblProductionBonus').datagrid('getRowIndex', oProductionBonus);

        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/SalaryScheme/ProductionBonus_IUD",
            traditional: true,
            data: JSON.stringify(oProductionBonus),
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                var oProductionBonus = jQuery.parseJSON(data);

                if (oProductionBonus.ErrorMessage == "" || oProductionBonus.ErrorMessage == null)
                {
                    alert("Delete sucessfully");
                    $('#tblProductionBonus').datagrid('deleteRow', SelectedRowIndex);
                }
                else
                {
                    alert(oProductionBonus.ErrorMessage);
                }
            },
            error: function(xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function Activity_PB()
    {
        //debugger;
        var Act="";


        var oProductionBonus = $('#tblProductionBonus').datagrid('getSelected');
        if (oProductionBonus == null || oProductionBonus.ProductionBonusID <= 0)
        {
            alert("Please select an item from list!");
            return;
        }
        if(oProductionBonus.IsActive==false)
        {
            Act=true;

        }
        if(oProductionBonus.IsActive==true)
        {
            Act=false;

        }
        oProductionBonus.IsActive=Act;

        var SelectedRowIndex = $('#tblProductionBonus').datagrid('getRowIndex', oProductionBonus);
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/SalaryScheme/ProductionBonus_Activity",
            traditional: true,
            data: JSON.stringify(oProductionBonus),
            contentType: "application/json; charset=utf-8",

            success: function(data) {
                debugger;
                oProductionBonus = jQuery.parseJSON(data);
                if (oProductionBonus.ProductionBonusID > 0)
                {

                    if(oProductionBonus.IsActive==true)
                    {
                        msg="Activated";
                    }
                    if(oProductionBonus.IsActive==false)
                    {
                        msg="InActivated";
                    }
                    alert(msg+" Successfully!");
                    $('#tblProductionBonus').datagrid('updateRow', { index: SelectedRowIndex, row: oProductionBonus });

                }
                else
                {
                    alert(oProductionBonus.ErrorMessage);
                }
            }

        });

    }

    $(document).keydown(function (e) {
        var keyCode = e.keyCode || e.which;
        if (keyCode == 27) {
            $("#winAllowanceSalaryHead").icsWindow("close");
            $("#winBasicSalaryHead").icsWindow("close");
        }
    });
</script>
