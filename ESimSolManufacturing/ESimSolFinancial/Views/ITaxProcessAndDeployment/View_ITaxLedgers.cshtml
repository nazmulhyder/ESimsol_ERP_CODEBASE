@model IEnumerable<ESimSol.BusinessObjects.ITaxLedger>
@{
    ViewBag.Title = "Income Tax Ledger";
}

<div style="margin-left:0px; height:550px" class="menuMainCollectionTable">
    <table id="tblITaxLedger" title="Income Tax Ledger" class="easyui-datagrid" style="width:100%;height:548px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" selectoncheck="false" checkonselect="false" toolbar="#toolbar">
        <thead>
            <tr>
                <th data-options="field:'Selected',checkbox:true"></th>
                <th field="EmployeeNameCode" width="180" align="left">Employee</th>
                <th field="AssessmentYear" width="100" align="left">Assesment Year</th>
                <th field="TaxableAmount" width="100" align="right" formatter="formatPrice">Taxable Income</th>
                <th field="TaxAmount" width="100" align="right" formatter="formatPrice">Tax Amount</th>
                <th field="RebateAmount" width="100" align="right" formatter="formatPrice">Rebate Amount</th>
                <th field="AdvancePaidAmount" width="100" align="right" formatter="formatPrice">Advance Paid</th>
                <th field="PaidByPreviousLedger" width="150" align="right" formatter="formatPrice">Paid  By Previous Ledger</th>
                <th field="TotalTax" width="100" align="right" formatter="formatPrice">Total Tax</th>
                <th field="InstallmentAmount" width="80" align="right" formatter="formatPrice">Installment</th>
                <th field="StatusInStr" width="80" align="right">Status</th>
            </tr>
        </thead>
    </table>

    <div id="toolbar" style="height:25px;">
        @*<input id="txtEmployee" type="text" style="width:200px;" placeholder="Write name or code and enter " />
        <input id="btnCEmployee" type="button" value="C" />
        <input id="btnEmployeePicker" type="button" value="P" />*@
        <input id="txtEmployee_Collection" style="width:120px;" type="text" placeholder="Type Code & Enter" />
        <input id="btnCEmployee" type="button" value="C" />
        <input id="btnEmployee" type="button" value="P" />
        <select id="cboAssesmentYear" style="width:120px;"></select>
        <select id="cboStatus">
            <option value="1">Active</option>
            <option value="2">Inactive</option>
            <option value="3">All</option>
        </select>
        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="Search()">Search</a>
        <a id="btnProcess" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Process</a>
        <a id="btnLadgerDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ladger Detail</a>
        <a id="btnLadgerDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="LadgerDelete()">Delete</a>
        <select id="cboPrintType">
            <option value="1">Salary Certificate(F1)</option>
            <option value="2">Salary Certificate(F2)</option>
            <option value="3">Tax Detail</option>
            <option value="4">Print List</option>
            <option value="5">Tax Detail(F1)</option>
            <option value="6">Salary Certificate(F3)</option>
            <option value="7">Tax Assessment</option>
        </select>
        <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true" onclick="Print()"></a>
        <a id="btnPrintListInExecl" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true" onclick="PrintListInExcel()"></a>
        <a id="btnSalaryCertificateExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true" onclick="SalaryCertificateF3Excel()"></a>
    </div>

    <div id="winLadgerDetail" class="easyui-window winstyle" title="Ladger Detail" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <table id="tblITaxLedgerSalaryHead" title="Income Tax Ledger Detail" class="easyui-datagrid" style="width:100%;height:298px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false">
                    <thead>
                        <tr>
                            <th field="SalaryHeadName" width="90" align="left">Salary Head</th>
                            <th field="SalaryHeadAmount" width="110" align="right" formatter="formatPrice">S. Head Amount</th>
                            <th field="TaxableAmount" width="105" align="right" formatter="formatPrice">Taxable Amount</th>
                        </tr>
                    </thead>
                </table>
            </div>

            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px"></td>
                        <td style="width:50px">
                            <a id="btnLadgerDetailClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winLocationPicker" class="easyui-window winstyle" title="Location Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="locationtree" data-options="checkbox:false" singleselect="true"></ul>
            </div>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnLocationPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnLocationPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winEmployeePicker" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Present Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPresentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Permanent Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPermanentAddress" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo" class="txtReset" type="text" style="width:175px;" />
                            <input id="chkNotassignedyet" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            BU :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboBU" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Block :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtBlock" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnBlock" class="pick-btn" type="button" value="P" />
                            <input id="btnResetBlock" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Category:
                        </td>
                        <td class="td-AdvSearch-Level">
                            <div>
                                <select id="cboCategory" style="width:160px; float:left;"></select>
                                &nbsp; Gender :
                                <select id="cboGender" style="width:80px; margin-right:10px;" class="cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType" style="width: 65px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom" style="width: 45px" class="cboReset"></select>
                            <select id="cboMonthFrom" style="width: 50px" class="cboReset"></select>
                            <span id="regionDateTo">
                                <span>To</span>
                                <select id="cboDayTo" style="width: 45px" class="cboReset"> </select>
                                <select id="cboMonthTo" style="width: 50px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate" class="chkReset" />
                            <input id="dtDateFrom" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset" style="width: 70px" onclick="EmployeePickerReset()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch" style="width: 70px" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                    <thead>
                        <tr>
                            <th data-options="field:'Selected',checkbox:true"></th>
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange" type="checkbox" />Range
                            <label id="lblRange1">
                                <input id="txtFrom" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2">
                                <input id="txtTo" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next()">Next</a>
                            <a id="btnEmployeePickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                            <a id="btnEmployeePickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

    <div id="winDepartmentPicker" class="easyui-window winstyle" title="Department Picker" style="width:350px; height:400px" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <div class="easyui-panel" style="width:335px;height:300px;overflow:auto">
                <ul id="departmenttree" data-options="checkbox:false" singleselect="true"></ul>
            </div>
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width:400px; text-align:right"></td>

                        <td style="width:50px">
                            <a id="btnDepartmentPickerOk" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                        </td>
                        <td style="width:50px">
                            <a id="btnDepartmentPickerClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winProcess" class="easyui-window winstyle" title="Process" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="font-family:Tahoma">
            <fieldset>
                <legend style="font-weight: bold">Income Tax Advance Payment </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                    <tr>
                        <td style="text-align: right">
                            Employee :
                        </td>
                        <td>
                            <input id="txtEmployee_Single" type="text" style="width: 212px;" placeholder="Write name or code and enter " />
                            <input id="btnCEmployee_Single" type="button" value="C" />
                            <input id="btnEmployee_Single" type="button" value="P" />
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right">
                            Assesment Year :
                        </td>
                        <td>
                            <input id="txtAssesmentYear" type="text" style="width: 280px;" />
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right">
                            Min. Gross :
                        </td>
                        <td>
                            <input id="txtMinGross" class="number" type="text" style="width: 280px;" />
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right"></td>
                        <td style="text-align: left">
                            <input id="chkConsiderMaxRebate" type="checkbox" />Consider Max Rebate
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right"></td>
                        <td style="text-align: left">
                            <input id="chkAllEmployee" type="checkbox" />Apply for all taxable employee
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: right"></td>
                        <td style="text-align: left">
                            <input id="chkReprocess" type="checkbox" onclick="ShowReprocess()" />Reprocess
                            <input id="dtDate" type="text" style="width: 120px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>

                </table>
            </fieldset>
            <br />
            <fieldset>
                <legend style="font-weight: bold">Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
                    <tr>
                        <td style="width: 250px; text-align: left"></td>
                        <td style="width: 50px">
                            <a id="btnProcess" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok"
                               plain="true" onclick="Process()">Process</a>
                        </td>
                        <td style="width: 50px">
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel"
                               plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>

    <div id="winEmployeePicker_Single" class="easyui-window winstyle" title="Employee Picker" style="width:960px;" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 100%; font-family: Tahoma;">
            <div style="width: 47%; float: left;">
                <table class="tbl-AdvSearch">
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Name :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmployeeName_Single" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Code :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEmpCodeForSearch_Single" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Present Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPresentAddress_Single" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Permanent Address :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtPermanentAddress_Single" class="txtfield-search txtReset" type="text" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Authentication No :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtEnrollNo_Single" class="txtReset" type="text" style="width:175px;" />
                            <input id="chkNotassignedyet_Single" type="checkbox" class="chkReset" /> Not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Attendance Scheme :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtAttendanceScheme_Single" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnAttScheme_Single" class="pick-btn" type="button" value="P" />
                            <input id="btnResetAttScheme_Single" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            BU :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboBU_Single" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Location :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtLocation_Single" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnLocationPicker_Single" class="pick-btn" type="button" value="P" />
                            <input id="btnResetLocationPicker_Single" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Dept./Section :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDepartment_Single" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDepartmentPicker_Single" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDepartmentPicker_Single" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Designation :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtDesignation_Single" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnDesignationPicker_Single" class="pick-btn" type="button" value="P" />
                            <input id="btnResetDesignationPicker_Single" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Block :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input id="txtBlock_Single" class="txtfield-picker txtReset" type="text" disabled />
                            <input id="btnBlock_Single" class="pick-btn" type="button" value="P" />
                            <input id="btnResetBlock_Single" class="pick-btn" type="button" value="R" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Employee Type :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeType_Single" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Category:
                        </td>
                        <td class="td-AdvSearch-Level">
                            <div>
                                <select id="cboCategory_Single" style="width:160px; float:left;"></select>
                                &nbsp; Gender :
                                <select id="cboGender_Single" style="width:80px; margin-right:10px;" class="cboReset">
                                    <option value="0">None</option>
                                    <option value="1">Male</option>
                                    <option value="2">Female</option>
                                </select>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Current Shift :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboShift_EmpSearch_Single" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Card Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeCardStatus_Single" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Working Status :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboEmployeeWorkigStatus_Single" class="selection-search cboReset"></select>
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Date Of Birth :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <select id="cboDateType_Single" style="width: 65px" class="cboReset">
                                <option value='0'>None</option>
                                <option value='1'>Equal</option>
                                <option value='2'>Between</option>
                            </select>
                            <span></span>
                            <select id="cboDayFrom_Single" style="width: 45px" class="cboReset"></select>
                            <select id="cboMonthFrom_Single" style="width: 50px" class="cboReset"></select>
                            <span id="regionDateTo_Single">
                                <span>To</span>
                                <select id="cboDayTo_Single" style="width: 45px" class="cboReset"> </select>
                                <select id="cboMonthTo_Single" style="width: 50px" class="cboReset"> </select>
                            </span>

                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level">
                            Joining Date :
                        </td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkJoiningDate_Single" class="chkReset" />
                            <input id="dtDateFrom_Single" type="text" style="width: 132px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />&nbsp; To &nbsp;
                            <input id="dtDateTo_Single" type="text" style="width: 132px" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkActive_Single" class="chkReset" /> Active
                            <input type="checkbox" id="chkInActive_Single" class="chkReset" />InActive
                            <input type="checkbox" id="chkUser_Single" class="chkReset" /> User
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialNotAssign_Single" class="chkReset" /> official Information is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkOfficialAssign_Single" class="chkReset" /> official Information assigned employee
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkCardNotAssigned_Single" class="chkReset" /> Card is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="checkbox" id="chkSalarystructureNotAssigned_Single" class="chkReset" /> Salary structure is not assigned yet
                        </td>
                    </tr>
                    <tr>
                        <td class="td-AdvSearch-Level"></td>
                        <td class="td-AdvSearch-Input">
                            <input type="button" value="Reset" id="btnEmployeePickerReset_Single" style="width: 70px" onclick="EmployeePickerReset_Single()" />
                            <input type="button" value="Search" id="btnEmpPickerSearch_Single" style="width: 70px" />
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width: 52%; float: right;">
                <table id="tblEmployeesForPicker_Single" title="Employee List" class="easyui-datagrid" style="width: 480px; height: 520px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                    <thead>
                        <tr>
                            @*<th data-options="field:'Selected',checkbox:true"></th>*@
                            <th field="Code" width="200"> Code</th>
                            <th field="Name" width="150">Employee Name</th>
                            <th field="DepartmentName" width="100">Department</th>
                            <th field="DesignationName" width="100">Designation</th>
                        </tr>
                    </thead>
                </table>
                <table style="width: 485px; font-size: 12px; font-weight: bold;">
                    <tr>
                        <td style="text-align: left">
                            <input id="chkRange_Single" type="checkbox" />Range
                            <label id="lblRange1_Single">
                                <input id="txtFrom_Single" type="text" style="width:40px" />&nbsp; To &nbsp;
                            </label>
                            <label id="lblRange2_Single">
                                <input id="txtTo_Single" type="text" style="width:40px" />
                            </label>
                            <label id="lblcount_Single"></label>
                        </td>
                        <td style="text-align: right">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="Next_Single()">Next</a>
                            <a id="btnEmployeePickerOk_Single" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Ok</a>
                            <a id="btnEmployeePickerClose_Single" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align: left"></td>
                        <td style="text-align: right"></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>

</div>

<style>
    .tbl-AdvSearch {
        width: 100%;
        font-size: 11px;
        font-weight: bold;
        text-align: left;
        margin-left: 3px;
    }

    .td-AdvSearch-Level {
        text-align: right;
    }

    .td-AdvSearch-Input {
        text-align: left;
    }

    .txtfield-search {
        width: 312px;
        text-align: left;
        font-size: 11px;
    }

    .txtfield-picker {
        width: 265px;
        text-align: left;
        font-size: 11px;
    }

    .selection-search {
        width: 310px;
        text-align: left;
        font-size: 11px;
    }

    .pick-btn {
        width: 20px;
        text-align: center;
        font-size: 11px;
    }
</style>

<script type="text/javascript">
    var _oITaxLedgers=[];
    var _sBaseAddress="";
    //var _oEmployee =null;
    var _nEmployeeID = 0;
    var _sEmployeeIDs = "";

    var _sAttendanceSchemeID="";
    var _sLocationID = "";
    var _sDepartmentNames = "";
    var _sDepartmentIds = "";
    var _sDesignationNames = "";
    var _sDesignationIds = "";
    var _sSalarySchemeIDs = "";
    var _sBlockNames="";
    var _sBMMIDs="";

    var _nLastEmployeeID = 0;
    var _bNext = false;
    var _nLoadRecords = 0;
    var _nRowLength = 0;

    var _sAttendanceSchemeID_Single="";
    var _sDepartmentNames_Single = "";
    var _sDepartmentIds_Single = "";
    var _sDesignationNames_Single = "";
    var _sDesignationIds_Single = "";
    var _sSalarySchemeIDs_Single = "";
    var _sBlockNames_Single="";
    var _sBMMIDs_Single="";

    var _nLastEmployeeID_Single = 0;
    var _bNext_Single = false;
    var _nLoadRecords_Single = 0;
    var _nRowLength_Single = 0;

    var _Status = 1;
    var _oEmployeeTypes=[];
    var _oShifts=[];
    var _oEmployeeCSs=[];
    var _oEmployeeWSs=[];
    var _oBusinessUnits=[];
    var _ITaxAssessmentYear=[];

    $(document).ready(function ()
    {
        _oITaxLedgers =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oEmployeeTypes= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeTypes));
        _oShifts= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Shifts));
        _oEmployeeCSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCSs));
        _oEmployeeWSs= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeWSs));
        _ITaxAssessmentYear = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ITaxAssessmentYear));
        _oBusinessUnits=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BusinessUnits));
        var oEmployeeCategorys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EmployeeCategorys));
        
        document.getElementById("txtAssesmentYear").value = _ITaxAssessmentYear.AssessmentYear;
        document.getElementById("txtAssesmentYear").readOnly = true;
        $('.number').icsCurrencyBox();
        $('#txtMinGross').val(30000);
    
        
        $("#dtDate").datebox({'disabled': true});
        $('#dtDate').datebox('setValue',icsdateformat(new Date()));

        LoadAssesmentYear();
        $('#btnPrintListInExecl').hide();
        InitializeAdvSearch();
        LoadCateGory(oEmployeeCategorys);
    });

    function ShowReprocess() {
        if($('#chkReprocess').is(":checked")== true){
            $("#dtDate").datebox({'disabled': false});
        } else {
            $("#dtDate").datebox({'disabled':true});
        }
    }
function LoadCateGory(oEmployeeCategorys)
{
    $("#cboCategory").icsLoadCombo({
        List: oEmployeeCategorys,
        OptionValue: "Value",
        DisplayText: "Text"
    });
    $("#cboCategory_Single").icsLoadCombo({
        List: oEmployeeCategorys,
        OptionValue: "Value",
        DisplayText: "Text"
    });
}

function RefreshList(oITaxLedgers)
{
    data = oITaxLedgers ;
    data = { "total": "" + data.length + "", "rows": data };
    $('#tblITaxLedger').datagrid('loadData', data);
}

function LoadAssesmentYear()
{
    var listItems="";
    listItems += "<option value=0>" +"Select Assesment Year" +"</option>";
    for (i = 0; i < _oITaxLedgers[0].ITaxAssessmentYears.length; i++)
    {
        listItems += "<option value='" + _oITaxLedgers[0].ITaxAssessmentYears[i].ITaxAssessmentYearID+"'>" + _oITaxLedgers[0].ITaxAssessmentYears[i].AssessmentYear+"</option>";
    }
    $("#cboAssesmentYear").html(listItems);
}

//$('#txtEmployee').keypress(function (e)
//{
//    var code = (e.keyCode ? e.keyCode : e.which);
//    var sEmpCode=document.getElementById("txtEmployee").value;

//    if (code == 13)//Enter key-13
//    {
//        if(sEmpCode=="")
//        {
//            alert("Please Enter Code !");
//            return;
//        }
//        var nts=(new Date()).getTime()/1000;
//        var oParameter = new Object();
//        oParameter.MultipleItemReturn = false;
//        var url = _sBaseAddress + "/Employee/EmployeePikerByCode?sCode="+sEmpCode+"&nDepartmentID=0&nts="+nts;
//        var nLeft=(window.screen.width/2)-(515/2);
//        var nHeight=(window.screen.height/2)-(415/2);
//        _oEmployee =    window.showModalDialog(url, oParameter, 'dialogHeight:415px;dialogWidth:515px;dialogLeft:'+nLeft+';dialogTop:'+nHeight+';center:yes;resizable:no;status:no;scroll:yes');
//        //_oEmployee = window.showModalDialog(url, oParameter, 'dialogHeight:405px;dialogWidth:510px;dialogLeft:400;dialogTop:100;center:yes;resizable:no;status:no;scroll:no');
//        if(_oEmployee!=null)
//        {
//            if(_oEmployee.DesignationName=="" || _oEmployee.DepartmentName=="" || _oEmployee.LocationName=="")
//            {
//                alert("This Employee Has No Official Information !");
//                return;
//            }

//            if(_oEmployee.IsActive == false)
//            {
//                alert("InActive Employee. Work can not be assigned for this employee!");
//                return;
//            }
//            if(_oEmployee.WorkingStatus != 1)
//            {
//                alert("This employee is not in work place!");
//                return;
//            }
//            $("#txtEmployee")[0].value=_oEmployee.Name;
//            //_nEmployeeID=_oEmployee.EmployeeID;
//            _sEmployeeIDs=_oEmployee.EmployeeID;
//        }
//    }
//});

//$('#btnEmployeePicker').click(function (e)
//{
//    var oParameter = new Object();
//    oParameter.Name = "Employee Advance Search";
//    oParameter.MultipleItemReturn=true;
//    var url = _sBaseAddress + "/Employee/EmployeeHRMPiker";

//    var nLeft=(window.screen.width/2)-(1000/2);
//    var nHeight=(window.screen.height/2)-(530/2);
//    var oEmployees =    window.showModalDialog(url, oParameter, 'dialogHeight:530px;dialogWidth:1000px;dialogLeft:'+nLeft+';dialogTop:'+nHeight+';center:yes;resizable:no;status:no;scroll:yes');
//    if(oEmployees!=null)
//    {
//        var sEmpID="";
//        var sEmpName="";
//        for(var i=0; i<oEmployees.length; i++)
//        {
//            sEmpID+=oEmployees[i].EmployeeID+",";
//            sEmpName+=oEmployees[i].Name+",";
//        }
//        _sEmployeeIDs=sEmpID.substring(0,sEmpID.length-1);
//        sEmpName=sEmpName.substring(0,sEmpName.length-1);
//        $("#txtEmployee")[0].value=sEmpName;
//    }
//});

//$('#btnCEmployee').click(function (e)
//{
//    _sEmployeeIDs="";
//    document.getElementById("txtEmployee").value = "" ;
//});

/*---------------- emp Search Start click----------------*/

function InitializeAdvSearch(){

    $('#dtDateFrom_Single').datebox('setValue', icsdateformat(new Date()));
    $('#dtDateTo_Single').datebox('setValue', icsdateformat(new Date()));

    $('#dtDateFrom').datebox('setValue', icsdateformat(new Date()));
    $('#dtDateTo').datebox('setValue', icsdateformat(new Date()));

    $("#cboEmployeeType_Single").icsLoadCombo({
        List: _oEmployeeTypes,
        OptionValue: "EmployeeTypeID",
        DisplayText: "Name"
    });
    $("#cboEmployeeType").icsLoadCombo({
        List: _oEmployeeTypes,
        OptionValue: "EmployeeTypeID",
        DisplayText: "Name"
    });
    $("#cboShift_EmpSearch_Single").icsLoadCombo({
        List: _oShifts,
        OptionValue: "ShiftID",
        DisplayText: "ShiftWithDuration"
    });
    $("#cboShift_EmpSearch").icsLoadCombo({
        List: _oShifts,
        OptionValue: "ShiftID",
        DisplayText: "ShiftWithDuration"
    });
    $("#cboEmployeeCardStatus_Single").icsLoadCombo({
        List: _oEmployeeCSs,
        OptionValue: "Value",
        DisplayText: "Text"
    });
    $("#cboEmployeeCardStatus").icsLoadCombo({
        List: _oEmployeeCSs,
        OptionValue: "Value",
        DisplayText: "Text"
    });
    $("#cboEmployeeWorkigStatus_Single").icsLoadCombo({
        List: _oEmployeeWSs,
        OptionValue: "Value",
        DisplayText: "Text"
    });
    $("#cboEmployeeWorkigStatus").icsLoadCombo({
        List: _oEmployeeWSs,
        OptionValue: "Value",
        DisplayText: "Text"
    });
    $("#cboBU_Single").icsLoadCombo({
        List: _oBusinessUnits,
        OptionValue: "BusinessUnitID",
        DisplayText: "Name"
    });
    $("#cboBU").icsLoadCombo({
        List: _oBusinessUnits,
        OptionValue: "BusinessUnitID",
        DisplayText: "Name"
    });

    $('#txtFrom,#txtTo,#txtFrom_Single,#txtTo_Single').numberbox({min:0, precision:0 });
    $('#txtFrom,#txtFrom_Single').numberbox('setValue',1);
    $('#txtTo,#txtTo_Single').numberbox('setValue',50);
    $("#lblRange1,#lblRange1_Single").hide();

    var oMonths=[{MonthID:0,Name:'Jan'},{MonthID:1,Name:'Feb'},{MonthID:2,Name:'Mar'},{MonthID:3,Name:'Apr'},
                {MonthID:4,Name:'May'},{MonthID:5,Name:'Jun'},{MonthID:6,Name:'Jul'},{MonthID:7,Name:'Aug'},
                {MonthID:8,Name:'Sep'},{MonthID:9,Name:'Oct'},{MonthID:10,Name:'Nov'},{MonthID:11,Name:'Dec'},];

    $("#cboMonthFrom_Single,#cboMonthTo_Single").icsLoadCombo({
        List: oMonths,
        OptionValue: "MonthID",
        DisplayText: "Name",
        InitialValue:''
    });

    $("#cboMonthFrom,#cboMonthTo").icsLoadCombo({
        List: oMonths,
        OptionValue: "MonthID",
        DisplayText: "Name",
        InitialValue:''
    });

    LoadDaysInMonth();
}

function LoadDaysInMonth(){
    $("#cboMonthFrom,#cboMonthTo,#cboMonthFrom_Single,#cboMonthTo_Single").val((new Date()).getMonth());
    var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt((new Date()).getMonth())+1,0)).getDate();

    var oDays=[];
    for(var i=1;i<=nDaysInMonth;i++){
        oDays.push({DayID:i,Day:i});
    }
    $("#cboDayFrom,#cboDayTo,#cboDayFrom_Single,#cboDayTo_Single").icsLoadCombo({
        List: oDays,
        OptionValue: "DayID",
        DisplayText: "Day",
        InitialValue:''
    });
}

$("#cboDateType,#cboDateType_Single").change(function(e){
    if($("#cboDateType,#cboDateType_Single").val()==1){
        $("#regionDateTo,#regionDateTo_Single").hide();
    }
    else{
        $("#regionDateTo,#regionDateTo_Single").show();
    }
});

$("#cboMonthFrom,#cboMonthFrom_Single").change(function(e){
    var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthFrom,#cboMonthFrom_Single").val())+1,0)).getDate();
    var oDays=[];
    for(var i=1;i<=nDaysInMonth;i++){
        oDays.push({DayID:i,Day:i});
    }
    $("#cboDayFrom,#cboDayFrom_Single").icsLoadCombo({
        List: oDays,
        OptionValue: "DayID",
        DisplayText: "Day",
        InitialValue:''
    });
});

$("#cboMonthTo,#cboMonthTo_Single").change(function(e){
    var nDaysInMonth=(new Date((new Date()).getFullYear(), parseInt($("#cboMonthTo,#cboMonthTo_Single").val())+1,0)).getDate();
    var oDays=[];
    for(var i=1;i<=nDaysInMonth;i++){
        oDays.push({DayID:i,Day:i});
    }
    $("#cboDayTo,#cboDayTo_Single").icsLoadCombo({
        List: oDays,
        OptionValue: "DayID",
        DisplayText: "Day",
        InitialValue:''
    });
});

function EmployeePickerReset(){
    _nLastEmployeeID = 0;
    _sEmployeeIDs = "";
    _bNext = false;
    _nLoadRecords = 0;
    _nRowLength = 0;
    _sAttendanceSchemeID="";
    _sLocationID = "";
    _sDepartmentIds = "";
    _sDesignationIds = "";
    $(".txtReset").val("");
    $(".cboReset").val(0);
    $(".chkReset").prop("checked",false);

    $("#cboMonthFrom,#cboMonthTo").val((new Date()).getMonth());
    LoadDaysInMonth();

    DynamicRefreshList([], "tblEmployeesForPicker");
    $("#lblcount").html("");
    $('#txtFrom,#txtTo').numberbox({min:0, precision:0 });
    $('#txtFrom').numberbox('setValue',1);
    $('#txtTo').numberbox('setValue',50);
    $("#lblRange1").hide();
}

function EmployeePickerReset_Single(){
    _nLastEmployeeID_Single = 0;
    _nEmployeeID = 0;
    _bNext_Single = false;
    _nLoadRecords_Single = 0;
    _nRowLength_Single = 0;
    _sAttendanceSchemeID_Single="";
    _sLocationID_Single = "";
    _sDepartmentIds_Single = "";
    _sDesignationIds_Single = "";
    $(".txtReset").val("");
    $(".cboReset").val(0);
    $(".chkReset").prop("checked",false);

    $("#cboMonthFrom_Single,#cboMonthTo_Single").val((new Date()).getMonth());
    LoadDaysInMonth();

    DynamicRefreshList([], "tblEmployeesForPicker_Single");
    $("#lblcount_Single").html("");
    $('#txtFrom_Single,#txtTo_Single').numberbox({min:0, precision:0 });
    $('#txtFrom_Single').numberbox('setValue',1);
    $('#txtTo_Single').numberbox('setValue',50);
    $("#lblRange1_Single").hide();
}

$("#btnEmployee").click(function () {
    EmployeePickerReset();
    $("#winEmployeePicker").icsWindow("open", " Employee Picker");
});

$("#btnEmployee_Single").click(function () {
    EmployeePickerReset_Single();
    $("#winEmployeePicker_Single").icsWindow("open", " Employee Picker");
});

$('#chkRange').click(function()
{
    if(document.getElementById("chkRange").checked == true)
    {
        $("#lblRange1").show();
    }
    else
    {
        $("#lblRange1").hide();
    }
});
$('#chkRange_Single').click(function()
{
    if(document.getElementById("chkRange_Single").checked == true)
    {
        $("#lblRange1_Single").show();
    }
    else
    {
        $("#lblRange1_Single").hide();
    }
});

$('#btnEmpPickerSearch').click(function () {
    _bNext = false;
    AdvSearch();
});

$('#btnEmpPickerSearch_Single').click(function () {
    _bNext_Single = false;
    AdvSearch_Single();
});

function Next_Single() {
    var oEmployees = [];
    oEmployees = $('#tblEmployeesForPicker_Single').datagrid('getRows');
    if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
    _nRowLength_Single = oEmployees.length;
    _bNext_Single = true;
    AdvSearch_Single();
}

function AdvSearch_Single(){
    if (!_bNext_Single) {
        _nRowLength_Single = 0;
        _nLastEmployeeID_Single = 0;
    }
    _nLoadRecords_Single = document.getElementById("txtTo_Single").value;
    if ($("#chkRange_Single").is(':checked')) {
        if($('#txtFrom_Single').numberbox('getValue').length=='' || $('#txtTo_Single').numberbox('getValue').length==''){alert("Please enter valid range.")}
        var nRangeFrom = parseInt($('#txtFrom_Single').numberbox('getValue'));
        var nRangeTo = parseInt( $('#txtTo_Single').numberbox('getValue'));
        if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
        _nRowLength_Single = nRangeFrom - 1;
        _nLoadRecords_Single = nRangeTo - nRangeFrom + 1;
    }

    var sName = $.trim($("#txtEmployeeName_Single").val());
    var sCode = $.trim($("#txtEmpCodeForSearch_Single").val());
    var sEnrollNo = $.trim($("#txtEnrollNo_Single").val());
    var bIsnotEnroll = $("#chkNotassignedyet_Single").is(':checked');
    var nEmployeeTypeID=$("#cboEmployeeType_Single").val();
    var nShiftID=$("#cboShift_EmpSearch_Single").val();
    var nCardStatus=$("#cboEmployeeCardStatus_Single").val();
    var nWorkingStatus=$("#cboEmployeeWorkigStatus_Single").val();
    var nDateType=$("#cboDateType_Single").val();
    var sDOBFrom= parseInt($("#cboMonthFrom_Single").val())+1+'-'+$("#cboDayFrom_Single").val();
    var sDOBTo= parseInt($("#cboMonthTo_Single").val())+1+'-'+$("#cboDayTo_Single").val();
    var sGender= $("#cboGender_Single option:selected").text();

    var bIsActive = ($("#chkActive_Single").is(':checked'))? 1 : 0;
    var bIsInactive = ($("#chkInActive_Single").is(':checked'))? 1 : 0;
    var bIsUser = ($("#chkUser_Single").is(':checked'))? 1 : 0;

    var bIsUnOfficial = ($("#chkOfficialNotAssign_Single").is(':checked'))?1:0;
    var bIsOfficial = ($("#chkOfficialAssign_Single").is(':checked'))? 1 : 0;

    var bIsCardNotAsigned = ($("#chkCardNotAssigned_Single").is(':checked'))? 1 : 0;
    var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned_Single").is(':checked'))? 1 : 0;

    var bIsJoiningDate = $("#chkJoiningDate_Single").is(':checked');
    var dtDateFrom = $('#dtDateFrom_Single').datebox('getValue');
    var dtDateTo = $('#dtDateTo_Single').datebox('getValue');

    if(bIsJoiningDate)
    {
        if(new Date(dtDateFrom)>new Date(dtDateTo))
        {
            alert("Invalid Joining Date Range!");
            return;
        }
    }

    var nBusinessUnitID = $("#cboBU_Single").val();
    var nCategory=$('#cboCategory_Single').val();
    var sPresentAddress=$('#txtPresentAddress_Single').val();
    var sPermanentAddress=$('#txtPermanentAddress_Single').val();

    debugger;
    if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID_Single=="" && _sLocationID=="" && _sDepartmentIds_Single=="" && _sDesignationIds_Single=="" &&
        nEmployeeTypeID==0 && sGender=="" &&  nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
        bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 
        && !bIsnotEnroll && nCategory<=0 && nBusinessUnitID<=0 && sPresentAddress=="" && sPermanentAddress=="" && _sBMMIDs_Single=="")
    {
        alert("Please enter you selection criteria."); return false;
    }

    var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID_Single + '~' + _sLocationID + '~' + _sDepartmentIds_Single + '~' +_sDesignationIds_Single + '~' +
                sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength_Single + "~" + _nLoadRecords_Single+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo
                +"~"+sEnrollNo+"~"+bIsnotEnroll+"~"+nCategory+"~"+nBusinessUnitID+"~"+sPresentAddress+"~"+sPermanentAddress+"~"+_sBMMIDs_Single;

    $.ajax({
        type: "POST",
        dataType: "json",
        url: _sBaseAddress + "/Employee/EmployeeSearch",
        traditional: true,
        data: JSON.stringify({ sParam: sParam }),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var oEmps = jQuery.parseJSON(data);
            if (oEmps != null) {
                if (oEmps.length > 0) {
                    if(!_bNext_Single){
                        DynamicRefreshList(oEmps,'tblEmployeesForPicker_Single');
                    }
                    else{
                        var bAppend=false;
                        var oTEmps=$('#tblEmployeesForPicker_Single').datagrid('getRows');
                        if(oTEmps.length>0){
                            for (var i = 0; i < oEmps.length; i++) {
                                var IsAppend=true;
                                for (var j = 0; j < oTEmps.length; j++) {

                                    if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                        IsAppend=false;
                                        break;
                                    }
                                }
                                if(IsAppend){
                                    bAppend=true;
                                    $('#tblEmployeesForPicker_Single').datagrid('appendRow', oEmps[i]);
                                }
                            }
                        }
                        else{
                            for (var j = 0; j < oEmps.length; j++) {
                                bAppend=true;
                                $('#tblEmployeesForPicker_Single').datagrid('appendRow', oEmps[j]);
                            }
                        }
                        if(!bAppend){
                            alert("No more data found!");
                        }
                    }
                }
                else {
                    alert("No more data found!");
                }
                var oEmployees = $('#tblEmployeesForPicker_Single').datagrid('getRows');
                document.getElementById("lblcount_Single").innerHTML = " | Count =" + oEmployees.length;
                _bNext_Single = false;
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }
    });
}

function Next() {
    var oEmployees = [];
    oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
    if (oEmployees.length <= 0) { alert('Please Select Criteria and click on "Search" to find information.!!'); return; }
    _nRowLength = oEmployees.length;
    _bNext = true;
    AdvSearch();
}

function AdvSearch(){
    if (!_bNext) {
        _nRowLength = 0;
        _nLastEmployeeID = 0;
    }
    _nLoadRecords = document.getElementById("txtTo").value;
    if ($("#chkRange").is(':checked')) {
        if($('#txtFrom').numberbox('getValue').length=='' || $('#txtTo').numberbox('getValue').length==''){alert("Please enter valid range.")}
        var nRangeFrom = parseInt($('#txtFrom').numberbox('getValue'));
        var nRangeTo = parseInt( $('#txtTo').numberbox('getValue'));
        if (nRangeFrom > nRangeTo) { alert("Invalid Range !");return; }
        _nRowLength = nRangeFrom - 1;
        _nLoadRecords = nRangeTo - nRangeFrom + 1;
    }

    var sName = $.trim($("#txtEmployeeName").val());
    var sCode = $.trim($("#txtEmpCodeForSearch").val());
    var sEnrollNo = $.trim($("#txtEnrollNo").val());
    var bIsnotEnroll = $("#chkNotassignedyet").is(':checked');
    var nEmployeeTypeID=$("#cboEmployeeType").val();
    var nShiftID=$("#cboShift_EmpSearch").val();
    var nCardStatus=$("#cboEmployeeCardStatus").val();
    var nWorkingStatus=$("#cboEmployeeWorkigStatus").val();
    var nDateType=$("#cboDateType").val();
    var sDOBFrom= parseInt($("#cboMonthFrom").val())+1+'-'+$("#cboDayFrom").val();
    var sDOBTo= parseInt($("#cboMonthTo").val())+1+'-'+$("#cboDayTo").val();
    var sGender= $("#cboGender option:selected").text();

    var bIsActive = ($("#chkActive").is(':checked'))? 1 : 0;
    var bIsInactive = ($("#chkInActive").is(':checked'))? 1 : 0;
    var bIsUser = ($("#chkUser").is(':checked'))? 1 : 0;

    var bIsUnOfficial = ($("#chkOfficialNotAssign").is(':checked'))?1:0;
    var bIsOfficial = ($("#chkOfficialAssign").is(':checked'))? 1 : 0;

    var bIsCardNotAsigned = ($("#chkCardNotAssigned").is(':checked'))? 1 : 0;
    var bIsSalarystructureNotAsigned = ($("#chkSalarystructureNotAssigned").is(':checked'))? 1 : 0;

    var bIsJoiningDate = false;
    var dtDateFrom = "1 jan 1900";
    var dtDateTo ="2 jan 1900";

    debugger;
    if(sName=='' && sCode=="" && sEnrollNo=="" && _sAttendanceSchemeID=="" && _sLocationID=="" && _sDepartmentIds=="" && _sDesignationIds=="" &&
        nEmployeeTypeID==0 && sGender=="" &&  nShiftID==0 && bIsActive==0 && bIsUnOfficial==0 && bIsInactive==0 && _sEmployeeIDs=="" && bIsUser==0 &&
        bIsOfficial==0 && nCardStatus==0 && bIsCardNotAsigned==0 && nWorkingStatus==0 && bIsSalarystructureNotAsigned==0 && nDateType==0 && !bIsnotEnroll)
    {
        alert("Please enter you selection criteria."); return false;
    }

    var sParam = sName + '~' + sCode + '~' + _sAttendanceSchemeID + '~' + _sLocationID + '~' + _sDepartmentIds + '~' +_sDesignationIds + '~' +
                sGender + '~' + nEmployeeTypeID + '~' + nShiftID + '~' + bIsActive + '~' + bIsUnOfficial + '~' + bIsInactive + '~' + _sEmployeeIDs + '~' +
                bIsUser + '~' + bIsOfficial + '~' + nCardStatus + '~' + bIsCardNotAsigned + "~" + nWorkingStatus + "~" + bIsSalarystructureNotAsigned + "~" +
                sDOBFrom + "~" + sDOBTo + "~" + nDateType + "~" + _nRowLength + "~" + _nLoadRecords+"~"+ bIsJoiningDate + "~" + dtDateFrom + "~" + dtDateTo+"~"+sEnrollNo+"~"+bIsnotEnroll;

    $.ajax({
        type: "POST",
        dataType: "json",
        url: _sBaseAddress + "/Employee/EmployeeSearch",
        traditional: true,
        data: JSON.stringify({ sParam: sParam }),
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            var oEmps = jQuery.parseJSON(data);
            if (oEmps != null) {
                if (oEmps.length > 0) {
                    if(!_bNext){
                        DynamicRefreshList(oEmps,'tblEmployeesForPicker');
                    }
                    else{
                        var bAppend=false;
                        var oTEmps=$('#tblEmployeesForPicker').datagrid('getRows');
                        if(oTEmps.length>0){
                            for (var i = 0; i < oEmps.length; i++) {
                                var IsAppend=true;
                                for (var j = 0; j < oTEmps.length; j++) {

                                    if(oEmps[i].EmployeeID==oTEmps[j].EmployeeID){
                                        IsAppend=false;
                                        break;
                                    }
                                }
                                if(IsAppend){
                                    bAppend=true;
                                    $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[i]);
                                }
                            }
                        }
                        else{
                            for (var j = 0; j < oEmps.length; j++) {
                                bAppend=true;
                                $('#tblEmployeesForPicker').datagrid('appendRow', oEmps[j]);
                            }
                        }
                        if(!bAppend){
                            alert("No more data found!");
                        }
                    }

                }
                else {
                    alert("No more data found!");
                }
                var oEmployees = $('#tblEmployeesForPicker').datagrid('getRows');
                document.getElementById("lblcount").innerHTML = " | Count =" + oEmployees.length;
                _bNext = false;
            }
        },
        error: function (xhr, status, error) {
            alert(error);
        }
    });
}

$("#btnEmployeePickerOk").click(function () {
    var oEmployees = $('#tblEmployeesForPicker').datagrid('getChecked');
    if (oEmployees.length<=0) { alert("please select atleast one item");return; }
    var sEmpIDs="";
    var sEmpNames="";
    for(var i=0;i<oEmployees.length;i++)
    {
        sEmpIDs=sEmpIDs+oEmployees[i].EmployeeID+",";
        sEmpNames=sEmpNames+oEmployees[i].Name+",";
    }
    _sEmployeeIDs= sEmpIDs.substring(0,sEmpIDs.length-1);
    sEmpNames= sEmpNames.substring(0,sEmpNames.length-1);
    $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
    $("#txtEmployee_Collection").val(sEmpNames);
    $("#winEmployeePicker").icsWindow('close');

});

$("#btnEmployeePickerClose").click(function () {
    $("#winEmployeePicker").icsWindow('close');
});

$("#btnEmployeePickerOk_Single").click(function () {
    var oEmployee = $('#tblEmployeesForPicker_Single').datagrid('getSelected');
    if (oEmployee.EmployeeID<=0) { alert("please select at least one item");return; }
    _nEmployeeID= oEmployee.EmployeeID;
    $("#txtEmployee_Single").val(oEmployee.Name);
    $("#winEmployeePicker_Single").icsWindow('close');
});

$("#btnEmployeePickerClose_Single").click(function () {
    $("#winEmployeePicker_Single").icsWindow('close');
});

/*-------------Attendance Schema Picker----------------*/
$("#btnAttScheme,#btnAttScheme_Single").click(function(e){
    var oAttendanceScheme={AttendanceSchemeID:0};
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oAttendanceScheme,
        ControllerName: "AttendanceScheme",
        ActionName: "GetsAttendanceSchemeCurrentSession",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {

        if (response.status && response.objs.length > 0) {
            if (response.objs[0].AttendanceSchemeID > 0) {
                debugger;
                var tblColums = [];
                var oColumn = { field: "Name", title: "Name", width: 150, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "EmployeeType", title: "EmployeeType", width: 100, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "DayOff", title: "DayOff", width: 115, align: "left" };tblColums.push(oColumn);

                var oPickerParam = {
                    winid: 'winAttendanceScheme',
                    winclass:'clsAttendanceScheme',
                    winwidth: 420,
                    winheight: 460,
                    tableid: 'tblAttendanceSchemePicker',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: false,
                    searchingbyfieldName:'Name',
                    windowTittle: 'Attendance Scheme List'
                };
                $.icsPicker(oPickerParam);
                IntializeAttendancePickerbutton(oPickerParam);//multiplereturn, winclassName
            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
});

function IntializeAttendancePickerbutton(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {

        var oAttendanceScheme = $('#'+oPickerobj.tableid).datagrid('getSelected');
        if (oPickerobj.winid == 'winAttendanceScheme')
        {
            if(oAttendanceScheme!=null && oAttendanceScheme.AttendanceSchemeID>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                $('#txtAttendanceScheme').val(oAttendanceScheme.Name);
                $('#txtAttendanceScheme_Single').val(oAttendanceScheme.Name);
                _sAttendanceSchemeID=oAttendanceScheme.AttendanceSchemeID;
                _sAttendanceSchemeID_single=oAttendanceScheme.AttendanceSchemeID;
            }
            else{
                alert("Please select a schema.");
            }
        }
    });
}

$("#btnResetAttScheme,#btnResetAttScheme_Single").click(function(e){
    $('#txtAttendanceScheme').val("");
    $('#txtAttendanceScheme_Single').val("");
    _sAttendanceSchemeID="";
});

/*-------------Location Picker----------------*/
var btnLocation="";
$("#btnLocationPicker_Single,#btnLocationPicker").click(function(e){
    btnLocation = $(this).attr("id");
    var sBusinessUnitIDs ="";
    var nBusinessUnitID=0;
    if(btnLocation=="btnLocationPicker_Single")
    {
        nBusinessUnitID = $("#cboBU_Single").val();
        sBusinessUnitIDs = String(nBusinessUnitID);
    }
    else{
        nBusinessUnitID = $("#cboBU").val();
        sBusinessUnitIDs = String(nBusinessUnitID);
    }
    $("#winLocationPicker").icsWindow('open');
    var oLocation={LocationID:0,BusinessUnitIDs:sBusinessUnitIDs};

    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oLocation,
        ControllerName: "Location",
        ActionName: "GetsLocationMenuTree",
        IsWinClose: false
    };

    $.icsDataGet(obj, function (response) {
        if (response.status && response.obj!=null) {
            if (response.obj.TLocation.id > 0) {
                $('#locationtree').tree({ data: [response.obj.TLocation] });
            }
        }
    });
});

$("#btnLocationPickerOk,#btnLocationPickerOk_Single").click(function(e){
    var oLocation = $('#locationtree').tree('getSelected');
    if(oLocation!=null && oLocation.id>0){
        $("#winLocationPicker").icsWindow('close');
        if(btnLocation=="btnLocationPicker_Single")
        { $('#txtLocation_Single').val(oLocation.text);} else{$('#txtLocation').val(oLocation.text);}
        _sLocationID= oLocation.id;
    }
    else{
        alert("Please select a location.");
    }
});

$('#txtLocation').keypress(function (e)
{
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13)//Enter key-13
    {
        $("#winLocationPicker").icsWindow('open');
        var oLocation={LocationID:0};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLocation,
            ControllerName: "Location",
            ActionName: "GetsLocationMenuTree",
            IsWinClose: false
        };
        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj!=null) {
                if (response.obj.TLocation.id > 0) {
                    $('#locationtree').tree({ data: [response.obj.TLocation] });
                }
            }
        });
    }
});

$("#btnLocationPickerClose").click(function(e){
    $("#winLocationPicker").icsWindow('close');
});

$("#btnResetLocationPicker_Single,#btnResetLocationPicker").click(function(e){
    $('#txtLocation_Single').val("");
    $('#txtLocation').val("");
    _sLocationID="";
});
/*-------------Department Picker----------------*/

$("#btnDepartmentPicker,#btnDepartmentPicker_Single").click(function(e){
    $("#winDepartmentPicker").icsWindow('open');
    var sBusinessUnitIDs ="";
    var nBusinessUnitID=0;
    if(btnLocation=="btnLocationPicker_Single")
    {
        nBusinessUnitID = $("#cboBU_Single").val();
        sBusinessUnitIDs = String(nBusinessUnitID);
    }
    else{
        nBusinessUnitID = $("#cboBU").val();
        sBusinessUnitIDs = String(nBusinessUnitID);
    }

    var oDepartment={DepartmentID:0,BusinessUnitIDs:sBusinessUnitIDs,LocationIDs:_sLocationID};
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oDepartment,
        ControllerName: "Department",
        ActionName: "GetsDepartments",
        IsWinClose: false
    };

    $.icsDataGet(obj, function (response) {
        if (response.status && response.obj!=null) {
            if (response.obj.id > 0) {
                $('#departmenttree').tree({ data: [response.obj] });
            }
        }
    });
});

$("#btnDepartmentPickerOk").click(function(e){
    _sDepartmentNames_Single = "";
    _sDepartmentIds_Single= "";
    _sDepartmentNames_Single = "";
    _sDepartmentIds_Single= "";
    var oDepartment = $('#departmenttree').tree('getSelected');
    if(oDepartment!=null && oDepartment.id>0){
        $("#winDepartmentPicker").icsWindow('close');
        $('#txtDepartment_Single').val(oDepartment.text);
        $('#txtDepartment').val(oDepartment.text);
        _sDepartmentIds= oDepartment.id;
        _sDepartmentIds_Single= oDepartment.id;
    }
    else{
        alert("Please select a department.");
    }
});

$("#btnDepartmentPickerClose").click(function(e){
    $("#winDepartmentPicker").icsWindow('close');
});

$("#btnResetDepartmentPicker").click(function(e){
    $('#txtDepartment').val("");
    _sDepartmentIds="";
    _sDepartmentNames = "";
    _sDepartmentIds_Single="";
    _sDepartmentNames_Single = "";
});

/*-------------Designation Picker----------------*/
var btnDesignation="";
$("#btnDesignationPicker_Single,#btnDesignationPicker").click(function(e){
    btnDesignation = $(this).attr("id");
    DesignationPicker();
});

$("#txtDesignation").keypress(function(e){
    if (e.which == 13)//enter=13
    {
        btnDesignation ="btnDesignationPicker";
        DesignationPicker();
    }
});

function DesignationPicker()
{
    var sBusinessUnitIDs ="";
    var nBusinessUnitID=0;
    if(btnLocation=="btnLocationPicker_Single")
    {
        nBusinessUnitID = $("#cboBU_Single").val();
        sBusinessUnitIDs = String(nBusinessUnitID);
    }
    else{
        nBusinessUnitID = $("#cboBU").val();
        sBusinessUnitIDs = String(nBusinessUnitID);
    }

    var oDesignation={
        DesignationID:0,
        Params: sBusinessUnitIDs+'~'+_sLocationID+'~'+ _sDepartmentIds
    };
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oDesignation,
        ControllerName: "Designation",
        ActionName: "Gets",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {
        _sDesignationNames = "";
        _sDesignationIds = "";
        if (response.status && response.objs.length > 0) {
            if (response.objs[0].DesignationID > 0) {
                var tblColums = [];
                var oColumn = { field: "Code", title: "Code", width: 50, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "Name", title: "Name", width: 170, align: "left" };tblColums.push(oColumn);

                var bmultiplereturn=false;
                var oPickerParam = {
                    winid: 'winDesignation',
                    winclass:'clsDesignation',
                    winwidth: 320,
                    winheight: 460,
                    tableid: 'tblDesignation',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: bmultiplereturn,
                    searchingbyfieldName:'Name',
                    windowTittle: 'Designation List'
                };
                $.icsPicker(oPickerParam);
                IntializeDesignationPickerbutton(oPickerParam);//multiplereturn, winclassName
            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
}

function IntializeDesignationPickerbutton(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
        var oDesignations=[];
        var oDesignation = $('#'+oPickerobj.tableid).datagrid('getSelected');
        oDesignations.push(oDesignation);
        if (oPickerobj.winid == 'winDesignation')
        {
            if(oDesignations!=null && oDesignations.length>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                if(btnDesignation=="btnDesignationPicker")
                {
                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames+=oDesignations[i].Name+",";
                        _sDesignationIds+=oDesignations[i].DesignationID+",";
                    }

                    _sDesignationNames=_sDesignationNames.substring(0,_sDesignationNames.length-1);
                    _sDesignationIds=_sDesignationIds.substring(0,_sDesignationIds.length-1);
                    $("#txtDesignation").val(_sDesignationNames);
                }
                else
                {
                    for(var i=0; i<oDesignations.length; i++)
                    {
                        _sDesignationNames_Single+=oDesignations[i].Name+",";
                        _sDesignationIds_Single+=oDesignations[i].DesignationID+",";
                    }

                    _sDesignationNames_Single=_sDesignationNames_Single.substring(0,_sDesignationNames_Single.length-1);
                    _sDesignationIds_Single=_sDesignationIds_Single.substring(0,_sDesignationIds_Single.length-1);
                    $("#txtDesignation_Single").val(_sDesignationNames_Single);
                }
            }
            else{
                alert("Please select a designation.");
            }
        }
    });
}

$("#btnResetDesignationPicker_Single,#btnResetDesignationPicker").click(function(e){
    $('#txtDesignation_Single').val("");
    $('#txtDesignation').val("");
    _sDesignationIds="";
    _sDesignationNames = "";
    _sDesignationIds_Single="";
    _sDesignationNames_Single = "";
});

/*---------------- emp Search End click ----------------*/

/*---------------- emp Search Start keyprees----------------*/
$('#txtEmployee_Collection').keypress(function (e)
{
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13)//Enter key-13
    {
        var sCodeName = $.trim($("#txtEmployee_Collection").val());
        if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Collection").focus(); return;}
        SearchEmployeeByText(sCodeName);
    }
});

function SearchEmployeeByText(sEmpNameCode){
    var oEmployee = { Params: sEmpNameCode +'~'+ 0};
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oEmployee,
        ControllerName: "Employee",
        ActionName: "GetsByEmpCode",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {

        if (response.status && response.objs.length > 0) {
            if (response.objs[0].EmployeeID > 0) {

                var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                var oPickerParam = {
                    winid: 'winEmployeePickerTextSearch',
                    winclass:'clsEmployeePickerTextSearch',
                    winwidth: 455,
                    winheight: 460,
                    tableid: 'tblEmployeePickerTextSearch',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: false,
                    searchingbyfieldName:'Name',
                    windowTittle: 'Employee list'
                };

                $.icsPicker(oPickerParam);
                IntializeEmployeePickerTextSearch(oPickerParam);//multiplereturn, winclassName

            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
}

function IntializeEmployeePickerTextSearch(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
        var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

        $("#"+oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winEmployeePickerTextSearch')
        {
            if (oreturnObj != null && oreturnObj.EmployeeID > 0)
            {
                _sEmployeeIDs=oreturnObj.EmployeeID;
                $('#txtEmployeeName').data("EmployeeIDs",_sEmployeeIDs);
                $("#txtEmployee_Collection").val(oreturnObj.Name);
                $("#winEmployeePicker").icsWindow('close');
            }
        }
    });

    $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
        if (e.which == 13)//enter=13
        {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();

            if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _sEmployeeIDs=oreturnObj.EmployeeID;
                    $('#txtEmployee').data("EmployeeIDs",_sEmployeeIDs);
                    $("#txtEmployee_Collection").val(oreturnObj.Name);
                    $("#winEmployeePicker").icsWindow('close');
                }
            }
        }
    });
}

$('#btnCEmployee,#btnCEmployee_Single').click(function (e)
{
    document.getElementById("txtEmployee_Collection").value = "" ;
    document.getElementById("txtEmployee_Single").value = "" ;
    $('#txtEmployeeName').data("EmployeeIDs","");
    _sEmployeeIDs = "";
    _nEmployeeID = 0;
});

/*---------------- emp Search Start keyprees----------------*/

$('#btnProcess').click(function (e)
{
    //var oParameter = new Object();
    //oParameter.Name = "Income Tax Process";
    //var tsv = ((new Date()).getTime()) / 1000;
    //var url = _sBaseAddress + "/ITaxProcessAndDeployment/View_IncomeTaxProcess?nId=0&ts=" + tsv;

    //var nLeft=(window.screen.width/2)-(400/2);
    //var nHeight=(window.screen.height/2)-(265/2);
    //var oITaxLedgers =    window.showModalDialog(url, oParameter, 'dialogHeight:265px;dialogWidth:400px;dialogLeft:'+nLeft+';dialogTop:'+nHeight+';center:yes;resizable:no;status:no;scroll:yes');

    $("#winProcess").icsWindow('open');

    //if(oITaxLedgers.length>0){DynamicRefreshList(oITaxLedgers, "tblITaxLedger");}
});
$('#btnClose').click(function (e)
{
    $("#winProcess").icsWindow('close');
});

function Search()
{
    var nAssesmentYearID= $("#cboAssesmentYear").val();
    $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/ITaxProcessAndDeployment/ITaxLedger_Search",
            data: JSON.stringify({sEmployeeIDs : _sEmployeeIDs,nAssesmentYearID:nAssesmentYearID, nStatus:_Status}),
            contentType: "application/json; charset=utf-8",
            success: function(data)
            {
                var oITaxLedgers = jQuery.parseJSON(data);
                if (oITaxLedgers.length>0  && oITaxLedgers[0].ErrorMessage == "")
                {
                    RefreshList(oITaxLedgers);
                }
                else
                {
                    alert(oITaxLedgers[0].ErrorMessage);
                    oITaxLedgers = [];
                    RefreshList(oITaxLedgers);
                }
            },
            error: function(xhr, status, error)
            {
            alert(error);
            }
        });
}

$("#btnLadgerDetail").click(function(e){
    var oITaxLedger= $('#tblITaxLedger').datagrid('getSelected');
    if(oITaxLedger==null || oITaxLedger.ITaxLSHID<=0)
    {
        alert("Please select a item from list!");
        return;
    }

    var oITaxLedgerSalaryHead={ITaxLedgerID:oITaxLedger.ITaxLedgerID};
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oITaxLedgerSalaryHead,
        ControllerName: "ITaxProcessAndDeployment",
        ActionName: "ITaxLedgerSalaryHead_Search",
        IsWinClose: false
    };

    $.icsDataGets(obj, function (response) {
        if (response.status && response.objs!=null) {
            if (response.objs.length > 0 && response.objs[0].ErrorMessage=="") {
                $("#winLadgerDetail").icsWindow('open');
                //DynamicRefreshList(response.objs, "tblITaxLedgerSalaryHead");
                RefreshITaxLedgerSalaryHead(response.objs);
            }
            else
            {
                alert(response.objs[0].ErrorMessage);
            }
        }
    });
});

$("#btnLadgerDetailClose").click(function(e){
    $("#winLadgerDetail").icsWindow('close');
});

function RefreshITaxLedgerSalaryHead(oRows)
{
    debugger
    data={"total":""+oRows.length+"","rows":oRows};
    $('#tblITaxLedgerSalaryHead').datagrid('loadData',data);

    if(oRows.length>0)
    {
        var nTotalSalaryHeadAmount = 0;
        var nTotalTaxableAmount = 0;

        for(var i=0;i<oRows.length;i++)
        {

            nTotalSalaryHeadAmount = parseFloat(nTotalSalaryHeadAmount)+parseFloat(oRows[i].SalaryHeadAmount);
            nTotalTaxableAmount = parseFloat(nTotalTaxableAmount)+parseFloat(oRows[i].TaxableAmount);
        }

        var oRow =
        {
            SalaryHeadName : '<b>Total</b>',
            SalaryHeadAmount : parseFloat(nTotalSalaryHeadAmount),
            TaxableAmount : parseFloat(nTotalTaxableAmount)
        }

        $('#tblITaxLedgerSalaryHead').datagrid('appendRow',oRow);
    }
}

function LadgerDelete()
{
    var oITaxLedgers = $('#tblITaxLedger').datagrid('getChecked');
    var nIndexes = [];
    var sITaxLedgerIDs = "";
    if (oITaxLedgers.length <= 0) {
        alert("please select at least one Item!");
        return false;
    }
    for (var i = 0; i < oITaxLedgers.length; i++) {
        var SelectedRowIndex = $('#tblITaxLedger').datagrid('getRowIndex', oITaxLedgers[i]);
        nIndexes.push(SelectedRowIndex);
        sITaxLedgerIDs += oITaxLedgers[i].ITaxLedgerID + ",";
    }
    sITaxLedgerIDs = sITaxLedgerIDs.substring(0, sITaxLedgerIDs.length - 1);

    if (!confirm("Confirm to Delete?")) return;
    if (sITaxLedgerIDs!="") {
        $.ajax({
            type: "GET",
            dataType: "json",
            url: _sBaseAddress + "/ITaxProcessAndDeployment/ITaxLedger_Delete",
            data: { sITaxLedgerIDs:sITaxLedgerIDs },
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                var feedbackmessage = jQuery.parseJSON(data);
                if (feedbackmessage == "") {
                    for (var i =nIndexes.length-1 ; i >=0; i--) {
                        $('#tblITaxLedger').datagrid('deleteRow', nIndexes[i]);
                    }
                    alert("Delete sucessfully");
                } else {
                    alert(feedbackmessage);
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    }
}

function Print()
{
    var nType = $('#cboPrintType').val();
    if(nType==1 || nType==2)
    {
        PrintSalaryCertificate(nType);
    }
    else if(nType==3)
    {
        PrintTaxDetail();
    }
    else if(nType==5)
    {
        PrintTaxDetail_F1();
    }
    else if(nType==4)
    {
        PrintListInExcel();
    }
    else if(nType==6)
    {
        SalaryCertificateF3Excel();
    }
    else if(nType==7)
    {
        TaxAssessment();
    }
}
    
function TaxAssessment()
{
    debugger;
    var oITaxLedger= $('#tblITaxLedger').datagrid('getSelected');
    if(oITaxLedger==null || oITaxLedger.ITaxLedgerID<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    var nEmployeeID = oITaxLedger.EmployeeID;
    var nAssesmentYearID= $("#cboAssesmentYear").val();
    
    var tsv = ((new Date()).getTime()) / 1000;
    window.open(_sBaseAddress+ "/ITaxProcessAndDeployment/PDFTaxAssessment?nEmployeeID="+nEmployeeID +"&AssesmentYearID="+nAssesmentYearID + "&Status=" +_Status+ "&nITaxLedgerID=" + oITaxLedger.ITaxLedgerID +"&ts="+tsv, "_blank");
}
function SalaryCertificateF3Excel()
{
    var oITaxLedger= $('#tblITaxLedger').datagrid('getSelected');
    if(oITaxLedger==null || oITaxLedger.ITaxLedgerID<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    var nEmployeeID = oITaxLedger.EmployeeID;
    debugger;
    //var nEmployeeID = parseInt(_sEmployeeIDs);
    var nAssesmentYearID= $("#cboAssesmentYear").val();
    
    var tsv = ((new Date()).getTime()) / 1000;
    window.open(_sBaseAddress+ "/ITaxProcessAndDeployment/PrintSalaryCertificateF3Excel?nEmployeeID="+nEmployeeID +"&AssesmentYearID="+nAssesmentYearID + "&Status=" +_Status +"&ts="+tsv, "_blank");
}

function PrintSalaryCertificate(nType)
{
    var oITaxLedger= $('#tblITaxLedger').datagrid('getSelected');
    if(oITaxLedger==null || oITaxLedger.ITaxLedgerID<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    var tsv = ((new Date()).getTime()) / 1000;
    window.open(_sBaseAddress+ "/ITaxProcessAndDeployment/PrintSalaryCertificate?nITaxLedgerID="+oITaxLedger.ITaxLedgerID+"&nType="+nType+"&ts="+tsv, "_blank");
}

function PrintTaxDetail()
{
    var oITaxLedger= $('#tblITaxLedger').datagrid('getSelected');
    if(oITaxLedger==null || oITaxLedger.ITaxLedgerID<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    var tsv = ((new Date()).getTime()) / 1000;
    window.open(_sBaseAddress+ "/ITaxProcessAndDeployment/PrintTaxDetail?nITaxLedgerID="+oITaxLedger.ITaxLedgerID+"&ts="+tsv, "_blank");
}

function PrintTaxDetail_F1()
{
    var oITaxLedger= $('#tblITaxLedger').datagrid('getSelected');
    if(oITaxLedger==null || oITaxLedger.ITaxLedgerID<=0)
    {
        alert("Please select a item from list!");
        return;
    }
    var tsv = ((new Date()).getTime()) / 1000;
    window.open(_sBaseAddress+ "/ITaxProcessAndDeployment/PrintTaxDetail_F1?nITaxLedgerID="+oITaxLedger.ITaxLedgerID+"&ts="+tsv, "_blank");
}

$("#cboPrintType").click(function(e){
    var nType = $('#cboPrintType').val();
    if(nType==4)
    {
        $('#btnSalaryCertificateExcel').hide();
        $('#btnPrintListInExecl').show();
        $('#btnPrint').hide();
    }
    else if(nType==5)
    {
        $('#btnSalaryCertificateExcel').hide();
        $('#btnPrint').show();
    }
    else if(nType==6)
    {
        $('#btnSalaryCertificateExcel').hide();
        $('#btnPrint').show();
    }
    else
    {
        $('#btnSalaryCertificateExcel').hide();
        $('#btnPrintListInExecl').hide();
        $('#btnPrint').show();
    }
});
$("#cboStatus").click(function(e){
    var nType = $('#cboStatus').val();
    if(nType==1)
    {
        _Status = 1;
    }
    if(nType==2)
    {
        _Status = 0;
    }
    if(nType==3)
    {
        _Status = 2;
    }
});


function PrintListInExcel()
{
    debugger;
    var nAssesmentYearID= $("#cboAssesmentYear").val();
    var oITaxLedgers= $('#tblITaxLedger').datagrid('getChecked');
    
    var sITaxLedgerIDs = "";
    if(oITaxLedgers != null){

        for(var i =0; i<oITaxLedgers.length;i++)
        {
            sITaxLedgerIDs += oITaxLedgers[i].ITaxLedgerID +",";
        }
    }
    sITaxLedgerIDs = sITaxLedgerIDs.substring(0,sITaxLedgerIDs.length-1);

    var tsv = ((new Date()).getTime()) / 1000;
    window.open(_sBaseAddress+ "/ITaxProcessAndDeployment/PrintITaxLedgerListInXL?sITaxLedgerIDs="+sITaxLedgerIDs+"&nAssesmentYearID="+nAssesmentYearID+"&nStatus="+_Status, "_blank");
}

function ValidateInput()
{
    if(_nEmployeeID == 0 && document.getElementById("chkAllEmployee").checked == false)
    {
        alert("Please enter employee or check all employees");
        document.getElementById("txtEmployee").focus();
        document.getElementById("txtEmployee").style.borderColor = 'red';
        return false;
    }
    return true;
}

function Process()
{
    if (!ValidateInput()) return;
    var nEmployeeID = _nEmployeeID;
    var nITaxAssessmentYearID = _ITaxAssessmentYear.ITaxAssessmentYearID;
    var IsAllEmployee = document.getElementById("chkAllEmployee").checked;
    var IsConsiderMaxRebate = document.getElementById("chkConsiderMaxRebate").checked;
    var MinGross=parseFloat(icsRemoveComma(document.getElementById("txtMinGross").value));
    var dtDate = $('#dtDate').datebox('getValue');
    debugger;
    if($('#chkReprocess').is(":checked")== true) {
        
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/ITaxProcessAndDeployment/ITaxReprocess",
            traditional: true,
            data: JSON.stringify({nEmployeeID : nEmployeeID, nITaxAssessmentYearID : nITaxAssessmentYearID, IsAllEmployee : IsAllEmployee,IsConsiderMaxRebate:IsConsiderMaxRebate,MinGross:MinGross,dtDate:dtDate}),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                debugger;
                var oITaxLedgers = jQuery.parseJSON(data);
                if (oITaxLedgers.length>0  && oITaxLedgers[0].ErrorMessage == "")
                {
                    alert("ReProcessed sucessfully");
                    window.returnValue = oITaxLedgers;
                    window.close();
                }
                else {
                    var tsv=((new Date()).getTime())/1000;
                    window.open(_sBaseAddress+ "/ITaxProcessAndDeployment/printErrorList?ts="+tsv, "_blank");
                }
            },
            error: function(xhr, status, error) {
                debugger;
                alert(error);
            }
        });
    }
    else {
        
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/ITaxProcessAndDeployment/ITaxProcess",
            traditional: true,
            data: JSON.stringify({nEmployeeID : nEmployeeID, nITaxAssessmentYearID : nITaxAssessmentYearID, IsAllEmployee : IsAllEmployee,IsConsiderMaxRebate:IsConsiderMaxRebate,MinGross:MinGross}),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                var oITaxLedgers = jQuery.parseJSON(data);
                if (oITaxLedgers.length>0  && oITaxLedgers[0].ErrorMessage == "")
                {
                    alert("Processed sucessfully");
                    window.returnValue = oITaxLedgers;
                    window.close();
                }
                else
                {
                    alert(oITaxLedgers[0].ErrorMessage);
                    oITaxLedgers = [];
                }
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });
    }
}

/*---------------- emp Search Start keyprees----------------*/
$('#txtEmployee_Single').keypress(function (e)
{
    var code = (e.keyCode ? e.keyCode : e.which);
    if (code == 13)//Enter key-13
    {
        var sCodeName = $.trim($("#txtEmployee_Single").val());
        if(sCodeName==''){alert("Please enter name or code to search.");$("#txtEmployee_Single").focus(); return;}
        SearchEmployeeByText_Single(sCodeName);
    }
});

function SearchEmployeeByText_Single(sEmpNameCode){
    var oEmployee = { Params: sEmpNameCode +'~'+ 0};
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oEmployee,
        ControllerName: "Employee",
        ActionName: "GetsByEmpCode",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {

        if (response.status && response.objs.length > 0) {
            if (response.objs[0].EmployeeID > 0) {

                var tblColums = [];var oColumn = { field: "Code", title: "Code", width: 70, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "Name", title: "Name", width: 120, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "DepartmentName", title: "Department", width: 100, align: "left" };tblColums.push(oColumn);
                oColumn = { field: "DesignationName", title: "Designation", width: 100, align: "left" };tblColums.push(oColumn);
                var oPickerParam = {
                    winid: 'winEmployeePickerTextSearch',
                    winclass:'clsEmployeePickerTextSearch',
                    winwidth: 455,
                    winheight: 460,
                    tableid: 'tblEmployeePickerTextSearch',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: false,
                    searchingbyfieldName:'Name',
                    windowTittle: 'Employee list'
                };

                $.icsPicker(oPickerParam);
                IntializeEmployeePickerTextSearch_Single(oPickerParam);//multiplereturn, winclassName

            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
}

function IntializeEmployeePickerTextSearch_Single(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
        var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
        if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

        $("#"+oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if (oPickerobj.winid == 'winEmployeePickerTextSearch')
        {
            if (oreturnObj != null && oreturnObj.EmployeeID > 0)
            {
                _nEmployeeID=oreturnObj.EmployeeID;
                $("#txtEmployee_Single").val(oreturnObj.Name);
                //$("#winEmployeePicker").icsWindow('close');
            }
        }
    });

    $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
        if (e.which == 13)//enter=13
        {
            var oreturnObj = $('#'+oPickerobj.tableid).datagrid('getSelected');
            if(oreturnObj == null || oreturnObj.EmployeeID<=0){  alert("please select an employee."); return false;}

            $("#"+oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();

            if (oPickerobj.winclass == 'clsEmployeePickerTextSearch')
            {
                if (oreturnObj != null && oreturnObj.EmployeeID > 0)
                {
                    _nEmployeeID=oreturnObj.EmployeeID;
                    $("#txtEmployee_Single").val(oreturnObj.Name);
                    //$("#winEmployeePicker").icsWindow('close');
                }
            }
        }
    });
}

/*------------- Start Block Picker----------------*/
   
$("#btnBlock,#btnBlock_Single").click(function(e){
    BlockPicker();
});

function BlockPicker()
{
    _sBlockNames="";
    _sBMMIDs = "";
    _sBlockNames_Single="";
    _sBMMIDs_Single = "";
    var oBlockMachineMapping={
        ProductionProcessInt:0,
        DepartmentID:0,
        BlockName:""
    }
    var obj = {
        BaseAddress: _sBaseAddress,
        Object: oBlockMachineMapping,
        ControllerName: "BlockMachineMapping",
        ActionName: "BlockMachineMapping_Search",
        IsWinClose: false
    };
    $.icsDataGets(obj, function (response) {
        
        if (response.status && response.objs.length > 0) {
            if (response.objs[0].BMMID > 0) {
                var tblColums = [];
                var oColumn = { field: "BlockName", title: "Block Name", width: 230, align: "left" };tblColums.push(oColumn);
                var bmultiplereturn=true;

                var oPickerParam = {
                    winid: 'winBlock',
                    winclass:'clsBlock',
                    winwidth: 320,
                    winheight: 460,
                    tableid: 'tblShift',
                    tablecolumns: tblColums,
                    datalist: response.objs,
                    multiplereturn: bmultiplereturn,
                    searchingbyfieldName:'BlockName',
                    windowTittle: 'Block List'
                };
                $.icsPicker(oPickerParam);
                IntializeBlockPickerbutton(oPickerParam);//multiplereturn, winclassName
            }
            else { alert(response.objs[0].ErrorMessage); }
        }
    });
}

function IntializeBlockPickerbutton(oPickerobj)
{
    $("#" + oPickerobj.winid).find("#btnOk").click(function () {
        var oBlocks=[];
        oBlocks= $('#'+oPickerobj.tableid).datagrid('getChecked');
        if (oPickerobj.winid == 'winBlock')
        {
            if(oBlocks!=null && oBlocks.length>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();

                for(var i=0; i<oBlocks.length; i++)
                {
                    _sBlockNames += oBlocks[i].BlockName+",";
                    _sBMMIDs += oBlocks[i].BMMID+",";
                    _sBlockNames_Single += oBlocks[i].BlockName+",";
                    _sBMMIDs_Single += oBlocks[i].BMMID+",";
                }
                _sBlockNames=_sBlockNames.substring(0,_sBlockNames.length-1);
                _sBMMIDs=_sBMMIDs.substring(0,_sBMMIDs.length-1);
                _sBlockNames_Single=_sBlockNames_Single.substring(0,_sBlockNames_Single.length-1);
                _sBMMIDs_Single=_sBMMIDs_Single.substring(0,_sBMMIDs_Single.length-1);
                $("#txtBlock").val(_sBlockNames);
                $("#txtBlock_Single").val(_sBlockNames);
            }
            else
            {
                alert("Please select a designation.");
            }
        }
    });
}

$("#btnResetBlock").click(function(e){
    $('#txtBlock').val("");
    _sBlockNames="";
    _sBMMIDs = "";
});

$("#txtBlock").keypress(function(e){
    if (e.which == 13)
    {
        BlockPicker();
    }
});
$("#btnResetBlock_Single").click(function(e){
    $('#txtBlock_Single').val("");
    _sBlockNames_Single="";
    _sBMMIDs_Single = "";
});

$("#txtBlock_Single").keypress(function(e){
    if (e.which == 13)
    {
        BlockPicker();
    }
});
/*------------- End Block Picker----------------*/


</script>
