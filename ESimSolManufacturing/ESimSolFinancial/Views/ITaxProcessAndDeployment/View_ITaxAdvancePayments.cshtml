@model IEnumerable<ESimSol.BusinessObjects.ITaxAdvancePayment>
@{
    ViewBag.Title = "Income Tax Advance Payment";
}

<div class="menuMainCollectionTable">
    <table id="tblITaxAdvancePayment" title="Income Tax Advance Payment" class="easyui-datagrid" style="width:100%;height:100%" fitcolumns="false" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbar">
        <thead>
            <tr>
                <th field="EmployeeNameCode" width="35%" align="left">Employee</th>
                <th field="AssessmentYear" width="10%" align="center">Assesment Year</th>
                <th field="Amount" width="10%" align="right" formatter="formatPrice">Amount</th>
                <th field="Note" width="40%" align="left">Note</th>
            </tr>
        </thead>
    </table>
    <div id="toolbar">
        <select id="cboAssesmentYear_ForSearch" style="width:200px;"></select>
        <input id="txtEmployee_Search" style="width:215px;" placeholder="Type employee code or name & enter" />
        <a id="btnPickEmployee_Search" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
        <a id="btnResetEmployee_Search" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
        @*<input id="txtEmployeeSearch" type="text" style="width:180px;" placeholder="Write name or code and enter " />*@
        <a id="btnSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true" onclick="GetsITaxAdvancePayment()"></a>
        <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">New</a>
        <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
        <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
        <a id="btnView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
    </div>

    <div id="winITaxAdvancePayment" class="easyui-window winstyle" title="Income Tax Rebate" style="width:450px; height:auto" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 98%; font-family: Tahoma;">
            <table class="tbl-Win">
                <tr class="templet">
                    <td class="td-col-5 align-right">
                        <label>Employee :</label>
                    </td>
                    <td class="td-styler td-col-14" colspan="3">
                        <input id="txtEmployee" class="reset-text txt-styler-picker" placeholder="Search employee" />
                        <a id="btnPickEmployee" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-pick" plain="true"></a>
                        <a id="btnResetEmployee" href="javascript:void(0)" class="easyui-linkbutton ics-pick" iconcls="icon-clear" plain="true"></a>
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr class="templet">
                    <td class="td-col-5 align-right" valign="top">
                        <label>Official Info :</label>
                    </td>
                    <td class="td-styler td-col-14" colspan="3">
                        <input id="txtOfficialInfo" class="reset-text txt-styler" placeholder="Offical Info" />
                        
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr class="templet">
                    <td class="td-col-5 align-right" valign="top">
                        <label>Assesment Year :</label>
                    </td>
                    <td class="td-styler td-col-14" colspan="3">
                        <select id="cboITaxAssessmentYear" class="cbo-styler"></select>
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr class="templet">
                    <td class="td-col-5 align-right" valign="top">
                        <label>Amount :</label>
                    </td>
                    <td class="td-styler td-col-14" colspan="3">
                        <input id="txtAmount" class="reset-text txt-styler number" placeholder="Amount" />
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr class="templet">
                    <td class="td-col-5 align-right" valign="top">
                        <label>Note :</label>
                    </td>
                    <td class="td-styler td-col-14" colspan="3">
                        <input id="txtNote" class="reset-text txt-styler" placeholder="Note" />
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr>
                    <td colspan="5" style="text-align:right; padding-top:10px; padding-bottom:10px;">
                        <a id="btnSaveITaxAdvancePayment" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnCloseITaxAdvancePayment" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

<style type="text/css">
    .tbl-Win {
        width: 100%;
    }

    .td-styler input, textarea, select {
        padding-left: 5px;
    }

    .txt-styler {
        width: 95%;
    }

    .txt-styler-picker {
        width: 75%;
    }

    .cbo-styler {
        width: 98%;
    }

    .txt-styler-Note {
        width: 98.5%;
    }
</style>

<script type="text/javascript">

    var _sBaseAddress="";
    var _oITaxAdvancePayments=[];
    var _oITaxAdvancePayment=null;
    var _nEmployeeID = 0;

    $(document).ready(function ()
    {
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oITaxAdvancePayments =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oITaxAssessmentYears_Active =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ITaxAssessmentYears_Active));
        var oITaxAssessmentYears =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.ITaxAssessmentYears));
        $('.number').icsCurrencyBox();

        $("#cboITaxAssessmentYear").icsLoadCombo({
            List: oITaxAssessmentYears_Active,
            OptionValue: "ITaxAssessmentYearID",
            DisplayText: "AssessmentYear",
            InitialValue:"Default"
        });

        $("#cboAssesmentYear_ForSearch").icsLoadCombo({
            List: oITaxAssessmentYears,
            OptionValue: "ITaxAssessmentYearID",
            DisplayText: "AssessmentYear",
            InitialValue:"--Select Assessment Year--"
        });

        DynamicRefreshList(_oITaxAdvancePayments, 'tblITaxAdvancePayment');
    });

    $(document).keydown(function (e) { if (e.keyCode == 27) { $('div').icsWindow('close'); } });

    /*------------------- Searching ------------- */

    //$("#txtEmployeeSearch").keyup(function (e) {
    //    var oITaxAdvancePayments =[];
    //    var keyCode = e.keyCode || e.which;
    //    $('#txtEmployeeSearch').removeClass("errorFieldBorder");
    //    if (keyCode == 8) { oITaxAdvancePayments = _oITaxAdvancePayments; }
    //    else{ oITaxAdvancePayments = $('#tblITaxAdvancePayment').datagrid('getRows'); }
    //    if (e.keyCode == 13) // Enter Press
    //    {
    //        if (!$.trim($("#txtEmployeeSearch").val()).length) {

    //            alert("Please enter employee name or code to search.");
    //            $('#txtEmployeeSearch').focus();
    //            $('#txtEmployeeSearch').val("");
    //            return;
    //        }
    //        else { $('#txtEmployeeSearch').removeClass("errorFieldBorder"); }

    //        var oITaxAdvancePayment={
    //            EmployeeNameCode:   $.trim($("#txtEmployeeSearch").val())

    //        };
    //        GetsITaxAdvancePayment(oITaxAdvancePayment,false);
    //    }
    //    else {
    //        var sTempName="";
    //        var oSearchedData = [];
    //        for(i=0;i<oITaxAdvancePayments.length;++i)
    //        {
    //            sTempName=oITaxAdvancePayments[i]['EmployeeNameCode'];
    //            if(sTempName.toUpperCase().indexOf($('#txtEmployeeSearch').val().toUpperCase())>-1)
    //            {
    //                oSearchedData.push(oITaxAdvancePayments[i]);
    //            }
    //        }
    //        $('#tblITaxAdvancePayment').empty();
    //        if (oSearchedData.length == 0) { DynamicRefreshList(_oITaxAdvancePayments, "tblITaxAdvancePayment");}
    //        else { DynamicRefreshList(oSearchedData, "tblITaxAdvancePayment"); }

    //    }
    //});

    //function GetsITaxAdvancePayment(oITaxAdvancePayment, bIsAdvSearch) {

    //    var obj =
    //    {
    //        BaseAddress: _sBaseAddress,
    //        Object: oITaxAdvancePayment,
    //        ControllerName: "ITaxProcessAndDeployment",
    //        ActionName: "ITaxAdvancePayment_Search",
    //        IsWinClose: bIsAdvSearch
    //    };

    //    $.icsDataGets(obj, function (response) {

    //        if (response.status && response.objs != null) {
    //            if (response.objs.length > 0) {
    //                if(response.objs[0].ITaxAdvancePaymentID>0){
    //                    _oITaxAdvancePayments=response.objs;
    //                    DynamicRefreshList(response.objs, "tblITaxAdvancePayment");
    //                }
    //                else{DynamicRefreshList([], "tblITaxAdvancePayment"); alert(response.objs[0].ErrorMessage);}
    //            }
    //            else { DynamicRefreshList([], "tblITaxAdvancePayment"); alert("No income tax advance payment found by the criteria."); }
    //        }
    //    });
    //}

    $("#btnPickEmployee_Search").click(function () {

        var sEmployeeNameCode=$.trim($("#txtEmployee_Search").val());
        if(sEmployeeNameCode==""){
            alert("Please type enployee name or code to search");
            return;
        }
        GetsEmployee(sEmployeeNameCode);
    });

    $("#txtEmployee_Search").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            debugger;
            var sEmployeeNameCode=$.trim($("#txtEmployee_Search").val());
            if(sEmployeeNameCode==""){
                alert("Please type enployee name or code to search");
                return;
            }

            GetsEmployee(sEmployeeNameCode);
        }
        else if(nkeyCode==8){
            $("#txtEmployee_Search").val("");
            _nEmployeeID=0;
        }
    });

    $("#btnResetEmployee_Search").click(function () {
        $("#txtEmployee_Search").val("");
        _nEmployeeID=0;
    });

    function GetsITaxAdvancePayment() {
        var nITaxAssessmentYearID=$("#cboAssesmentYear_ForSearch").val();
        if(_nEmployeeID<=0 && nITaxAssessmentYearID<=0)
        {
            alert("Please select a searching criteria!");
            $("#cboAssesmentYear_ForSearch").focus();
            return;
        }
        var oITaxAdvancePayment={EmployeeID:_nEmployeeID,ITaxAssessmentYearID:$("#cboAssesmentYear_ForSearch").val()}
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oITaxAdvancePayment,
            ControllerName: "ITaxProcessAndDeployment",
            ActionName: "ITaxAdvancePayment_Search",
            IsWinClose: true
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs != null) {
                if (response.objs.length > 0) {
                    if(response.objs[0].ITaxAdvancePaymentID>0){
                        _oITaxAdvancePayments=response.objs;
                        DynamicRefreshList(response.objs, "tblITaxAdvancePayment");
                    }
                    else{DynamicRefreshList([], "tblITaxAdvancePayment"); alert(response.objs[0].ErrorMessage);}
                }
                else { DynamicRefreshList([], "tblITaxAdvancePayment"); alert("No income tax advance payment found by the criteria."); }
            }
        });
    }

    /*------------------- Add, Edit, Delete, View  ------------- */

    function Validate()
    {

        if(_nEmployeeID<=0){
            $('#txtEmployee').focus();
            $('#txtEmployee').addClass("errorFieldBorder");
            alert('Employee required.');
            return false;
        }
        else{
            $('#txtEmployee').removeClass("errorFieldBorder");
        }
        if($('#cboITaxAssessmentYear').val()<=0){
            $('#cboITaxAssessmentYear').focus();
            $('#cboITaxAssessmentYear').addClass("errorFieldBorder");
            alert('Please select assesment year.');
            return false;
        }
        else{
            $('#cboITaxAssessmentYear').removeClass("errorFieldBorder");
        }

        if($.trim($('#txtAmount').val())==""){
            $('#txtAmount').focus();
            $('#txtAmount').addClass("errorFieldBorder");
            alert('Amount required.');
            return false;
        }
        else{
            $('#txtAmount').removeClass("errorFieldBorder");
        }
        if(icsRemoveComma($("#txtAmount").val())<=0){
            $('#txtAmount').focus();
            $('#txtAmount').addClass("errorFieldBorder");
            alert('Amount must be greater than zero.');
            return false;
        }
        else{
            $('#txtAmount').removeClass("errorFieldBorder");
        }
        return true;
    }

    function ResetITaxAdvancePayment(bIsdisabled){
        _nEmployeeID=0;
        $('.reset-text').val("");
        $('#cboITaxAssessmentYear').val(0);
        _oITaxAdvancePayment=null;
        $('input,select').removeClass("errorFieldBorder");
        $('#winITaxAdvancePayment select, #winITaxAdvancePayment input').prop('disabled',bIsdisabled);
        if(bIsdisabled)
        {
            $('#btnSaveITaxAdvancePayment, .ics-pick').hide();
            $('.txt-styler-picker').css({"width":"95%"});
        }
        else
        {
            $('#btnSaveITaxAdvancePayment, .ics-pick').show();
            $('.txt-styler-picker').css({"width":"75%"});
        }
        $('#txtEmployee').focus();
    }

    function RefreshObject(){
        var oITaxAdvancePayment={
            ITaxAdvancePaymentID: (_oITaxAdvancePayment==null)? 0: _oITaxAdvancePayment.ITaxAdvancePaymentID,
            ITaxAssessmentYearID: $.trim($("#cboITaxAssessmentYear").val()),
            EmployeeID:_nEmployeeID,
            Amount:icsRemoveComma($("#txtAmount").val()),
            Note:$.trim($("#txtNote").val())
        };
        return oITaxAdvancePayment;
    }

    function GetITaxAdvancePayment(sTitle){
        var oITaxAdvancePayment=$('#tblITaxAdvancePayment').datagrid('getSelected');
        if (oITaxAdvancePayment==null || oITaxAdvancePayment.ITaxAdvancePaymentID<=0) { alert('Please select an item from list.'); return false;}
        var obj =
       {
           BaseAddress: _sBaseAddress,
           Object: oITaxAdvancePayment,
           ControllerName: "ITaxProcessAndDeployment",
           ActionName: "GetITaxAdvancePayment",
           IsWinClose: false
       };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj != null) {
                if (response.obj.ITaxAdvancePaymentID > 0) {
                    _oITaxAdvancePayment=response.obj;
                    _nEmployeeID=response.obj.EmployeeID;
                    $("#txtEmployee").val(_oITaxAdvancePayment.EmployeeNameCode);
                    $("#txtOfficialInfo").val(_oITaxAdvancePayment.EmployeeOfficial);
                    $("#cboITaxAssessmentYear").val(_oITaxAdvancePayment.ITaxAssessmentYearID);
                    $("#txtAmount").val(formatPrice(_oITaxAdvancePayment.Amount));
                    $("#txtNote").val(_oITaxAdvancePayment.Note);
                    $("#winITaxAdvancePayment").icsWindow("open", sTitle);
                }
                else { alert(response.obj.ErrorMessage); }
            }
        });
    }

    $("#btnAdd").click(function (e) {
        ResetITaxAdvancePayment(false);
        $("#winITaxAdvancePayment").icsWindow("open", "Add Income Tax Advance Payment");
    });

    $('#btnEdit').click(function (e)
    {
        ResetITaxAdvancePayment(false);
        GetITaxAdvancePayment("Edit Tax Advance Payment");

    });

    $('#btnView').click(function (e)
    {
        ResetITaxAdvancePayment(true);
        GetITaxAdvancePayment("View Tax Advance Payment")
    });

    $('#btnDelete').click(function (e)
    {
        var oITaxAdvancePayment=$('#tblITaxAdvancePayment').datagrid('getSelected');
        if (oITaxAdvancePayment==null || oITaxAdvancePayment.ITaxAdvancePaymentID<=0) { alert('Please select an item from list.'); return false;}

        if (!confirm("Confirm to Delete?")) return ;
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oITaxAdvancePayment,
            ControllerName: "ITaxProcessAndDeployment",
            ActionName: "ITaxAdvancePayment_Delete",
            TableId: "tblITaxAdvancePayment",
            IsWinClose: false
        };
        $.icsDelete(obj);
    });

    $("#btnSaveITaxAdvancePayment").click(function (e) {

        if (!Validate()) return false;
        var oITaxAdvancePayment=RefreshObject();
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oITaxAdvancePayment,
            ObjectId: oITaxAdvancePayment.ITaxAdvancePaymentID,
            ControllerName: "ITaxProcessAndDeployment",
            ActionName: "ITaxAdvancePayment_IU",
            TableId: "tblITaxAdvancePayment",
            IsWinClose: true,
            Message: (oITaxAdvancePayment.ITaxAdvancePaymentID>0)? "Update Successfully.":"Save Successfully."
        };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.ITaxAdvancePaymentID > 0) {
                    ResetITaxAdvancePayment();
                }
            }
        });
    });

    $("#btnCloseITaxAdvancePayment").click(function (e) {
        $("#winITaxAdvancePayment").icsWindow("close");
    });



    /*----------------- Employee Pick--------------*/


    $("#btnResetEmployee").click(function () {
        $("#txtEmployee,#txtOfficialInfo").val("");
        _nEmployeeID=0;
    });

    $("#btnPickEmployee").click(function () {

        var sEmployeeNameCode=$.trim($("#txtEmployee").val());
        if(sEmployeeNameCode==""){
            alert("Please type enployee name or code to search");
            return;
        }
        GetsEmployee(sEmployeeNameCode);
    });

    $("#txtEmployee").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            debugger;
            var sEmployeeNameCode=$.trim($("#txtEmployee").val());
            if(sEmployeeNameCode==""){
                alert("Please type enployee name or code to search");
                return;
            }

            GetsEmployee(sEmployeeNameCode);
        }
        else if(nkeyCode==8){
            $("#txtEmployee,#txtOfficialInfo").val("");
            _nEmployeeID=0;
        }
    });

    function GetsEmployee(sEmployeeNameCode){

        var oEmployee = {
            Name: sEmployeeNameCode,
        };
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oEmployee,
            ControllerName: "Employee",
            ActionName: "GetsEmployee_With_Official_And_Salary_Staructure",
            IsWinClose: false
        };

        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].EmployeeID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "Name", title: "Name", width: 160, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Code", title: "Code", width: 80, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DepartmentName", title: "Department", width: 140, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "DesignationName", title: "Desingnation", width: 140, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winEmployeePicker',
                        winclass:'clsEmployeePicker',
                        winwidth: 580,
                        winheight: 460,
                        tableid: 'tblEmployeePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'Name',
                        windowTittle: 'Employee List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializeEmployeePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No employee found.");
            }
        });


    }

    function IntializeEmployeePickerbutton(oPickerobj)
    {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            EmployeeSelect(oPickerobj);
        });
        $(document).find('.' +oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                EmployeeSelect(oPickerobj);
            }
        });
    }

    function EmployeeSelect(oPickerobj){
        debugger;
        _nEmployeeID=0;
        var oEmployee = $('#'+oPickerobj.tableid).datagrid('getSelected');
        if (oPickerobj.winid == 'winEmployeePicker')
        {
            if(oEmployee!=null  && oEmployee.EmployeeID>0){
                $("#"+oPickerobj.winid).icsWindow("close");
                $("#" + oPickerobj.winid).remove();
                _nEmployeeID=oEmployee.EmployeeID;
                $('#txtEmployee').val(oEmployee.Name);
                $('#txtEmployee_Search').val(oEmployee.Name);
                $('#txtOfficialInfo').val(oEmployee.DesignationName+"," + oEmployee.DepartmentName);
                $('#cboITaxAssessmentYear').focus();
            }
            else{
                alert("Please select an employee.");
            }
        }
    }


</script>
