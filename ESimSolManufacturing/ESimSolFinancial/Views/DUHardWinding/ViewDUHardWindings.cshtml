@{
    ViewBag.Title = "Hard Winding List";
}
@model IEnumerable<ESimSol.BusinessObjects.DUHardWinding>

<div class="menuMainCollectionTable" ng-app="DUHardWindingApp" style="height:535px; width:99.4%">
    <div ng-controller="DUHardWindingController" id="contentDiv">
        <div style="margin-bottom:2px; display:block" title="SoftWinding List" class="ui-grid-top-panel">
            <button type="button" class="btn btn-xs btn-primary" aria-label="Left Align" ng-click="AdvanceSearch()" ng-hide="btnAdvSearch"> <span class="glyphicon glyphicon-search" aria-hidden="true"> Adv.Search</span></button>

            <input type="text" ng-model="txtSearchByName" ics-tab="1" ng-keyup="SearchByName($event)" placeholder="Search by Order/Batch No" style="width:190px" />
            @*<button type="button" id="btnAdd" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="Add()"><span class="glyphicon glyphicon-plus" aria-hidden="true"> Add</span></button>*@
            <button type="button" id="btnReceive" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="Receive()"><span class="glyphicon glyphicon-ok" aria-hidden="true"> Receive</span></button>

            <button type="button" id="btnEdit" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="Edit()"><span class="glyphicon glyphicon-edit" aria-hidden="true"> Operation</span></button>
            <button type="button" class="btn btn-xs btn-primary" aria-label="Left Align" ng-click="QC_Packing()"> <span class="glyphicon glyphicon-plus" aria-hidden="true">QC Packing</span></button>

            <button type="button" id="btnView" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="View()"><span class="glyphicon glyphicon-th" aria-hidden="true"> View</span></button>
            <button type="button" id="btnFowardToBuyer" class="btn btn-primary btn-xs" aria-label="Left Align" ng-hide="btnFoDelStore" ng-click="FowardToBuyer()"><span class="glyphicon glyphicon-send" aria-hidden="true"> Send To Del'y Store</span></button>
            <button type="button" id="btnBeamComplete" class="btn btn-primary btn-xs" aria-label="Left Align" ng-hide="btnBeamComplete" ng-click="BeamComplete()"><span class="glyphicon glyphicon-send" aria-hidden="true"> Beam Complete</span></button>
            <button type="button" id="btnFowardToBuyer" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="Rewinding()"><span class="glyphicon glyphicon-repeat" aria-hidden="true"> Rewind</span></button>
            @*<button type="button" id="btnDetails" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="ShowDetails()"><span class="glyphicon glyphicon-th" aria-hidden="true"> Show Detail</span></button>*@
            <button type="button" id="btnPrintList" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="printView()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Print List</span></button>
            <button type="button" id="btnExportToExcel" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="printExcel()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Export To Excel</span></button>

            <button type="button" id="btnPrintStatement" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="Print_HWStatement()"><span class="glyphicon glyphicon-print" aria-hidden="true"> HW Statement</span></button>

            @*<button type="button" id="btnDelete" class="btn btn-primary btn-xs" aria-label="Left Align" ng-click="Delete()"><span class="glyphicon glyphicon-remove" aria-hidden="true"> Delete</span></button>*@
            @*<button type="button" id="btnPrintList" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="PrintList()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Print List</span></button>
                <button type="button" id="btnExportToExcel" class="btn btn-default btn-xs" aria-label="Left Align" ng-click="ExportToExcel()"><span class="glyphicon glyphicon-print" aria-hidden="true"> Export to Excel</span></button>*@
        </div>
        <div ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-edit class="grid-angular" style="width:100%;"></div>
    </div>

    <script type="text/ng-template" id="Rewinding.html">
        <div class="modal-header">
            <h5 class="modal-title" id="modal-title">Order No :  <span class="text-success">{{DUHardWinding.DyeingOrderNo}}</span> || Batch No : <span class="text-success"> {{DUHardWinding.LotNo}}</span>  </h5>
        </div>
        <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">Order Qty:</label>
                    </div>
                    <div class="col-md-7 text-left">
                        <input type="text" class="number" ng-model="DUHardWinding.Qty_Order" disabled> {{DUHardWinding.MUnit}}
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">H/W Qty:</label>
                    </div>
                    <div class="col-md-7 text-left">
                        <input type="text" class="number" ng-model="DUHardWinding.Qty" disabled> {{DUHardWinding.MUnit}}
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">Balance Qty:</label>
                    </div>
                    <div class="col-md-7 text-left">
                        <input type="text" class="number" ng-model="DUHardWinding.Balance_New"> {{DUHardWinding.MUnit}}
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">No of Cone:</label>
                    </div>
                    <div class="col-md-7 text-left">
                        <input type="text" class="number" ng-model="DUHardWinding.NumOfCone"> 
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn-primary btn-sm" aria-label="Left Align" ng-click="Rewinding()" ng-hide="hide"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Ok</button>
            <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
        </div>
    </script>
    <script type="text/ng-template" id="ForwardToDel.html">
        <div class="modal-header">
            <h5 class="modal-title" id="modal-title">Order No :  <span class="text-success">{{DUHardWinding.DyeingOrderNo}}</span> || Batch No : <span class ="text-success"> {{DUHardWinding.LotNo}}</span>  </h5>
        </div>
        <div class="modal-body form-horizontal regionExportUP ms-custom-control" id="modal-body">
            <div class="row">
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">Order Qty:</label>
                    </div>
                    <div class="col-md-7 text-left">
                        <input type="text" class="number" ng-model="DUHardWinding.Qty_Order" disabled> {{DUHardWinding.MUnit}}
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">H/W Qty:</label>
                    </div>
                    <div class="col-md-7 text-left">
                        <input type="text" class="number" ng-model="DUHardWinding.Qty" disabled> {{DUHardWinding.MUnit}}
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">Balance Qty:</label>
                    </div>
                    <div class="col-md-7 text-left">
                        <input type="text" class="number" ng-model="DUHardWinding.Qty" disabled> {{DUHardWinding.MUnit}}
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">In Del'y Store:</label>
                    </div>
                    <div class="col-md-7 text-left">
                        <input type="text" class="number" ng-model="DUHardWinding.Qty" disabled> {{DUHardWinding.MUnit}}
                    </div>
                </div>
                <div class="col-md-12 ">
                    <div class="col-md-3 text-right" style="margin-top:-5px">
                        <label class="control-label">Forward Qty:</label>
                    </div>
                    <div class="col-md-7 text-left">
                        <input type="text" class="number" ng-model="DUHardWinding.Qty" id="rQty" > {{DUHardWinding.MUnit}}
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn-primary btn-sm" aria-label="Left Align" ng-click="UpdateStatus()" ng-hide="hide"> <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span> Ok</button>
            <button type="button" class="btn-danger btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
        </div>
    </script>
</div>

<div id="winQC" class=" easyui-window winclass" title="QC " data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <fieldset id="tbReceiveinfo">
        <legend>Receiveing Info</legend>
        <table cellpadding="2" class="tbl-Win routesheet-info">
            <tr>
                <td class="td-col-2 align-right">
                    <label id="l" class="header-text">Receive Date:</label>
                </td>
                <td class="td-col-6 align-left">
                    <input id="dtReceiveDate" style="width:62%;height:20px ;" type="text" class="easyui-datetimebox" required="required" data-options="formatter:icsdatetimeformat,parser:icsdatetimeparser" />
                    <input id="btnUpdateReceiveDate" style="height:25px ;" type="button" />
                </td>
                <td class="td-col-2 align-right">
                    
                </td>
                <td class="td-col-5 align-left">
                  
                </td>
               
                <td class="td-col-5 align-left">
                  
                </td>
            </tr>
        </table>
    </fieldset>
     <fieldset>
        <legend>Dye Line Info</legend>
        <table cellpadding="2" class="tbl-Win routesheet-info">
            <tr>
                <td class="td-col-2 align-right">
                    <label id="lblRSNo" class="header-text">Batch No :</label>
                </td>
                <td class="td-col-3 align-left">
                    <input id="txtRouteSheet" class="reset-text txt-styler" placeholder="Search DL" disabled />
                </td>
                <td class="td-col-2 align-right">
                    <label class="header-text">Buyer :</label>
                </td>
                <td class="td-col-5 align-left">
                    <label id="lblBuyerName"></label>
                </td>
                <td class="td-col-2 align-right">
                    <label class="header-text"> Status :</label>
                </td>
                <td class="td-col-5 align-left">
                    <label id="lblRSState"></label>
                </td>
            </tr>
            <tr>
                <td class="td-col-2 align-right">
                    <label class="header-text">Machine No :</label>
                </td>
                <td class="td-col-3 align-left">
                    <label id="lblMachineNo"></label>
                </td>
                <td class="td-col-2 align-right">
                    <label class="header-text">Order No:</label>

                </td>
                <td class="td-col-5 align-left">
                    <label id="lblDyeingOrderNo"></label>
                </td>

                <td class="td-col-2 align-right">
                    <label class="header-text">Yarn :</label>
                </td>
                <td class="td-col-5 align-left">
                    <label id="lblProduct"></label>
                </td>
            </tr>
            <tr>
                <td class="td-col-2 align-right">
                    <label class="header-text">Color & Shade :</label>
                    <input id="btnDODAssign" type="button" />
                </td>
                <td class="td-col-3 align-left">
                    <label id="lblColorShade"></label>
                </td>
                <td class="td-col-2 align-right">
                    <label id="lblHeaderHanksCone" class="header-text">Hanks/Cone:</label>
                </td>
                <td class="td-col-5 align-left">
                    <label id="lblNoOfHanksCone"></label>
                </td>
                <td class="td-col-2 align-right">
                    <label class="header-text">Weight :</label>
                </td>
                <td class="td-col-5 align-left">
                    <label id="lblWeight"></label>
                </td>
            </tr>
            <tr>
                <td class="td-col-2 align-right">
                    <label class="header-text">Batch Qty :</label>
                </td>
                <td class="td-col-3 align-left">
                    <label id="lblQty_Batch"></label>
                </td>
                <td class="td-col-2 align-right">
                    <label class="header-text">In Delivery Store:</label>
                </td>
                <td class="td-col-5 align-left"><label id="lblQty_Received"></label></td>
                <td class="td-col-2 align-right"><label class="header-text">Stock in Hand :</label></td>
                <td class="td-col-5 align-left"><label id="lblQty_Balance"></label></td>

            </tr>
        </table>
    </fieldset>
    <div id="tabPackingQC" style="width:100%;" class="easyui-tabs">
        <div title="Packing" id="tabPacking" style="width:100%">
            <fieldset>
                <table id="tblRouteSheetPacking" class="easyui-datagrid" style="width:100%;height:220px;" fitcolumns="true" showfooter="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" autorowwidth="false" toolbar="#toolbarPacking">
                    <thead>
                        <tr>
                            <th field="BagNo" width="10%">BagNo</th>
                            <th field="Weight" width="12%" formatter="formatPrice" align="right">Weight(<label id="lblMUOne"></label>)</th>
                            <th field="WeightTwo" width="12%" formatter="formatPrice" align="right">Weight(<label id="lblMUTwo"></label>)</th>
                            <th field="NoOfHankCone" width="10%" formatter="formatPrice" align="right">Hanks/Cone</th>
                            <th field="WarpStr" width="10%" align="left">Warp/Weft</th>
                            <th field="Length" width="15%" align="left">Length</th>
                            <th field="Note" width="15%" align="left">Note</th>
                            <th field="QCBYName" width="8%" align="left">QC By</th>
                            <th field="QCDateSt" width="8%" align="left">QCDate</th>
                            <th field="YarnTypeSt" width="8%" align="left">YarnType</th>
                        </tr>
                       
                    </thead>
                </table>
                <div id="toolbarPacking">
                    <table style="width:100%;">
                        <tr>
                            <td style="width:60%" class="align-left">
                                <a id="btnAddPacking" href="javascript:void(0)" class="easyui-linkbutton active-QC" iconcls="icon-add" plain="true">Add</a>
                                <a id="btnEditPacking" href="javascript:void(0)" class="easyui-linkbutton active-QC" iconcls="icon-edit" plain="true">Edit</a>
                                <a id="btnDeletePacking" href="javascript:void(0)" class="easyui-linkbutton active-QC" iconcls="icon-remove" plain="true">Delete</a>
                                <a id="btnPrint_Packing" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print(Label)</a>
                                <a id="btnPrintCard_Packing" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print(Card)</a>
                                @*<a id="btnSave_Packing" href="javascript:void(0)" style="float:right" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Save</a>*@
                            </td>
                            <td style="width:40%" class="align-right">
                                <label id="lblPackingRemarks"></label>
                            </td>
                        </tr>
                    </table>
                </div>
            </fieldset>
            @*<div style="width:100%;">
                <fieldset>
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                        <tr>
                            <td style="width:85%; text-align:right"></td>
                            <td style="width: 15%; text-align:right">
                                <a id="btnSave_Packing" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Save</a>
                                <a id="btnClose_Packing" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>*@
        </div>
        <div title="QC" id="tabReportDetail" style="width:100%">

            <table id="tblRouteSheetQC" class="easyui-datagrid" style="width:100%;height:200px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" autorowwidth="false" toolbar="#toolbarQC" data-options="onClickRow: onClickRow">
                <thead>
                    <tr>
                        <th field="QCSetupName" width="20%">Type</th>
                        <th data-options="field:'Qty',align:'right',editor:{type:'numberbox',options:{precision:2}}" width="15%">Qty</th>
                        <th data-options="field:'Note',align:'left',editor:{type:'text'}" width="30%">Note</th>
                        <th field="RSInQCDetailID" width="10%" align="center" formatter="formatInspection"></th>
                    </tr>
                </thead>
            </table>
            <div id="toolbarQC">
                <table style="width:100%;">
                    <tr>
                        <td style="width:50%" class="align-left">
                            <a id="btnDeleteQCItem" href="javascript:void(0)" class="easyui-linkbutton active-QC" iconcls="icon-remove" plain="true">Remove</a>
                        </td>
                        <td style="width:50%" class="align-right">
                            <label id="lblQCRemarks"></label>
                        </td>
                    </tr>
                </table>
            </div>
            <div style="width:100%;">
                <fieldset>
                    <legend style="font-weight: bold">Action : </legend>
                    <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                        <tr>
                            <td style="width:50%; text-align:right"><label>Remarks:</label><input type="text" id="txtRemark_QC" style="width:80%"></td>
                            <td style="width: 50%; text-align:right">
                               
                                <a id="btnSave_QC" href="javascript:void(0)" class="easyui-linkbutton active-QC" iconcls="icon-ok" plain="true">Save</a>
                                <select style="width: 80px;" id="cboQCRSState">
                                    <option value="13">Full QC</option>
                                    <option value="14">Part QC</option>

                                </select>
                                <label id="lblShortQty"></label>
                                <input type="number" id="txtShortQty" style="width:13%" class="number" />
                                <a id="btnQCDone" href="javascript:void(0)" class="easyui-linkbutton active-QC" iconcls="icon-ok" plain="true">QC Passed</a>
                                
                            </td>
                        </tr>
                    </table>
                </fieldset>
                @*<div class="active-QC">
                    <fieldset>
                        <legend> QC Pass </legend>
                        <div class="form-inline ">
                            <label>Remarks:</label>
                           
                            <input type="text" id="txtRemark_QC" style="width:60%">
                            <a id="btnQCDone" href="javascript:void(0)" class="easyui-linkbutton active-QC" iconcls="icon-ok" plain="true">QC Passed</a>
                        </div>
                    </fieldset>
                </div>*@
            </div>

        </div>
        <div title="Hardwinding to Delivery Store" id="tabFTD" style="width:100%">
            <div title="Packing" style="padding:2px; width:100%;">
                <table id="tblITs" class="easyui-datagrid" style="width:100%;height:200px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" autorowwidth="false" toolbar="#toolbarQCTwo">
                    <thead>
                        <tr>
                            <th field="TransactionTimeSt" width="20%">Date</th>
                            <th field="StoreName" width="20%">Store Name</th>
                            <th field="ProductName" width="20%" align="left">Yarn Type</th>
                            <th field="Qty" width="12%" formatter="formatPrice" align="right">Qty</th>
                            <th field="CurrentBalance" width="10%" formatter="formatPrice" align="right">Balance</th>
                            <th field="Note" width="15%" align="left">Note</th>
                        </tr>
                    </thead>
                </table>
                <div id="toolbarQCTwo">
                    <table style="width:100%;">
                        <tr>
                            <td style="width:80%" class="align-left">
                                <input type="text" style="width:26%;" id="txtNote" placeholder="Note" />

                                <label id="lblDeliveryQty" style="margin-left:10px;">Qty:</label>
                                <input type="text" style="width:15%;" id="txtQty_Rec" class="number" placeholder="Qty" />
                                <a id="btnAddSendToDelivery" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Forward to Delivery Store</a>
                                
                            </td>

                        </tr>
                    </table>
                </div>
            </div>
        </div>
        <div title="Fabric Beam Complete" id="tabFBF" style="width:100%">
            <div title="Fabric Beam Finish" style="padding:2px; width:49%;float:left;">
                <table id="tblTempDispoHWs" class="easyui-datagrid" style="width:100%;height:200px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" autorowwidth="false" toolbar="#toolbar3" showfooter="true">
                    <thead>
                        <tr>
                            <th field="ColorName" width="20%">Color</th>
                            <th field="QtyWarp" align="right" formatter="formatPrice" width="10%">Warp Req.</th>
                            <th field="QtyDyeing" align="right" formatter="formatPrice" width="10%">Dyeing Kg</th>
                            <th field="WarpKg" align="right" formatter="formatPrice" width="10%">Warp Kg</th>
                            <th field="WarpTF" align="right" formatter="formatPrice" width="10%">Warp T/F</th>
                            <th field="WeftTF" align="right" formatter="formatPrice" width="10%">Weft T/F</th>
                            <th field="TotalTFKg" align="right" formatter="formatPrice" width="10%">Total T/F</th>
                            <th field="DueTFKg" align="right" formatter="formatPrice" width="10%">Due T/F</th>
                            
                        </tr>
                    </thead>
                </table>
                <div id="toolbar3">
                    Req. Warp Length : 
                    <input type="text" id="txtWarpLangth" style="width:100px;text-align:right;" disabled />
                    Com. Length :
                    <input type="text" id="txtComLength" style="width:100px;text-align:right;" disabled />
                    Balance :
                    <input type="text" id="txtBalance" style="width:100px;text-align:right;" disabled />
                </div>
            </div>
            <div title="Fabric Beam Finish" style="padding:2px; width:49%;float:right;">
                <table id="tblBeamFinish" class="easyui-datagrid" style="width:100%;height:200px;" fitcolumns="true" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" autorowwidth="false" toolbar="#toolbar2">
                    <thead>
                        <tr>
                            <th field="ReadyDateInString" width="20%">Ready Date</th>
                            <th field="BeamNo" width="13%">Beam No</th>
                            <th field="LengthFinish" align="right" formatter="formatPrice" width="16%">Len. Finish</th>
                            <th field="IsFinishInString" width="10%">Is Finish</th>
                            <th field="Note" width="35%">Note</th>

                        </tr>
                    </thead>
                </table>
                <div id="toolbar2">
                    <table style="width:100%;">
                        <tr>
                            <td style="width:80%" class="align-left">
                                Ready Date : <input id="txtReadyDate" type="text" style="width: 100px;" class="easyui-datebox" data-options="formatter:icsdateformat,parser:icsdateparser" />
                                Suggested : <input type="text" id="txtSuggestedLength" style="width:80px;text-align:right" disabled />   
                                Length Finish(M) : <input type="text" id="txtLengthFinish" style="width:100px;text-align:right" />
                                <br />
                                Beam No : <input type="text" id="txtBeam" style="width:100px" />
                                Note : <input type="text" id="txtNote_FBF" style="width:210px" />
                                @*Is Finish : <input type="checkbox" id="chkIsFinish" />*@
                                &nbsp;
                                <a id="btnAddBeam" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                                <a id="btnDeleteBeam" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                            </td>

                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div style="width:100%;">
        <fieldset>
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:75%; text-align:right"></td>
                    <td style="width: 25%; text-align:right">

                        <a id="btnClose_QC" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
 
    </div>
</div>

<div id="winPacking" class="easyui-window winstyle" title="Add Packing" style="width:450px; height:auto" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
    <table class="tbl-Win">
        <tr >
            <td class="td-col-6 align-right">
                <label>Shade Type:</label>
            </td>
            <td colspan="3" style="width:34%">
                <select id="cboRSInQCSetups" class="reset-select" style="width:100%"></select>
            </td>
            <td colspan="5"></td>
        </tr>
          <tr>
            <td class="td-col-6 align-right">
                <label id="lblBag">No of Bags :</label>
            </td>
            <td class="td-styler td-col-13">
                <input type="text" id="txtNumberBags" class="reset-text txt-styler number" onkeyup="CalculatePackingWeight(1)" />
            </td>
            <td class="td-styler td-col-1"></td>
        </tr>
        <tr>
            <td class="td-col-6 align-right">
                <label id="lbsPerBag">Weight Per Bag :</label>
            </td>
            <td class="td-styler td-col-13">
                <input id="txtQty" class="reset-text number txt-styler" onkeyup="CalculatePackingWeight(2)" />
            </td>
            <td class="td-styler td-col-1">
                <label></label>
            </td>
        </tr>
        <tr>
            <td class="td-col-6 align-right">
                <label id="lbsPerBag">Total Weight :</label>
            </td>
            <td class="td-styler td-col-13">
                <input id="txtTotalWeight" class="reset-text number txt-styler" onkeyup="CalculatePackingWeight(3)" />
            </td>
            <td class="td-styler td-col-1">
                <label></label>
            </td>
        </tr>
        <tr>
            <td class="td-col-6 align-right">
                <label id="lblHeaderHankCone-Picker">No of Hanks:</label>
            </td>
            <td class="td-styler td-col-13">
                <input id="txtHanksCone" class="reset-text number txt-styler" />
            </td>
            <td class="td-styler td-col-1"></td>
        </tr>
        <tr class="region-cone">
            <td class="td-col-6 align-right">
                <label>Warp/Weft :</label>
            </td>
            <td class="td-styler td-col-13">
                <select id="cboWarpWeft" class="reset-select cbo-styler"></select>
            </td>
            <td class="td-styler td-col-1"></td>
        </tr>
        <tr class="region-cone">
            <td class="td-col-6 align-right">
                <label>Dia :</label>
            </td>
            <td class="td-styler td-col-13">
                <input id="txtLength" class="reset-text txt-styler" />
            </td>
            <td class="td-styler td-col-1"></td>
        </tr>
        <tr>
            <td class="td-col-6 align-right">
                <label>Note :</label>
            </td>
            <td class="td-styler td-col-3">
                <input id="txtNote_Packing" class="reset-text txt-styler" />
            </td>
            <td class="td-styler td-col-1"></td>
        </tr>

        <tr>
            <td colspan="3" style="text-align:right; padding-top:10px; padding-bottom:10px;">
                <a id="btnSavePacking" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                <a id="btnClosePacking" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
            </td>
        </tr>
    </table>
</div>

 

<style type="text/css">
    .grid-angular {
        width: 100%;
        height:520px;
    }
</style>

<script src="~/Views/DUHardWinding/AdvSearchDUHardWinding.js"></script>
<script type="text/javascript">
    debugger;
    var _oRouteSheetSetup=null;
    var _nMUnit="";
    var _nMUnitTwo="";
    var _nPreviousPackingQty=0;
    var oDUHardWindings =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oAuthorizationRolesMapping =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.AuthorizationRolesMapping]));
    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    var _nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));

    _oRouteSheetSetup =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.RouteSheetSetup));
    var oRSShifts =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.RSShifts));
    var oWarpWeftTypes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.WarpWeftType));
    var  oRSInQCSetups =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.RSInQCSetup));
    _nPreviousPackingQty=0;
    _nMUnit=_oRouteSheetSetup.MUnit;
    _nMUnitTwo=_oRouteSheetSetup.MUnitTwo;

   
    $('#tabPacking').data('RouteSheet',{});
    $('#tabPacking').data('DUHardWinding',{});
    $("#winQC").data("DUHardWinding",null);
    $('#tbReceiveinfo').hide();
    debugger;
    var CCapp= angular.module('DUHardWindingApp', ['ui.grid','ui.grid.selection','ui.grid.resizeColumns', 'ui.grid.edit','DUHardWinding.service']);
    CCapp.controller('DUHardWindingController',function ($scope,$http,$element,$uibModal,uiGridConstants,userSession,DUHardWindingservice)
    {
        oDUHardWindings= (userSession.getData('DUHardWindings').length>0)? userSession.getData('DUHardWindings'):oDUHardWindings;
       
        debugger;
        $scope.btnFoDelStore =true;

        $scope.gridOptions= {
            multiSelect: false,
            enableColumnResizing: true,
            //enableFullRowSelection: true,
            enableRowSelection: true,
            showColumnFooter: true,
            enableFullRowSelection: true,
            columnDefs: [
              {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
              { field: 'ReceiveDateST', name:'Receive Date', width:'12%' },
              { field: 'QCDateST', name:'QC Date', width:'12%' },
              { field: 'StatusST', name:'Status', width:'10%' , enableSorting: false},
              { field: 'DyeingOrderNo', name:'Order No', width:'10%' },
              { field: 'LotNo', name:'Batch No', width:'10%' },
              { field: 'ContractorName', name:'Buyer', width:'15%' , enableSorting: false},
              { field: 'ProductName', name:'Yarn Type', width:'18%' , enableSorting: false},
              { field: 'ColorName', name:'Color', width:'10%' , enableSorting: false},
              { field: 'Qty_Order', name:'OrderQty', width:'10%' , enableSorting: false},
              { field: 'Qty',              name:'ReceiveQty',                           width:'8%',     cellClass: 'text-right',  cellFilter: 'number:2'    ,  aggregationType: uiGridConstants.aggregationTypes.sum, aggregationHideLabel: true,  type: 'number', enableCellEdit:true,footerCellClass: 'text-right' ,footerCellFilter: 'number:2'},
              { field: 'NumOfCone', name:'No Of Cone', width:'10%' , enableSorting: false},
              { field: 'BagNo', name:'BagNo', width:'10%' , enableSorting: false},
              { field: 'Qty_RSOut', name:'Delivery Qty', width:'10%' },
              { field: 'Balance', name:'Balance', width:'10%' },
              { field: 'IsRewinded', name:'Rewinded', width:'10%' , enableSorting: false, cellTemplate: '<div>{{row.entity.IsRewinded?"YES":"-"}}</div>' },
              { field: 'RSStateSt', name:'Batch Status', width:'10%' , enableSorting: false},
              { field: 'IsInHouseST', name:'', width:'10%' , enableSorting: false}
              
            ],
            data: oDUHardWindings,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();

                debugger;
                if(oDUHardWindings.length>0 && userSession.getRowIndex()>=0)
                {
                    $scope.gridApi.grid.modifyRows(oDUHardWindings);
                    $scope.gridApi.selection.selectRow(oDUHardWindings[userSession.getRowIndex()]);
                    $scope.RowSelect(oDUHardWindings[userSession.getRowIndex()]);
                }
                $scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                    $scope.RowSelect(row.entity ); });
                userSession.clear();
            }
        };
        $scope.RowSelect =  function (entity){
            debugger;

            if(entity.IsInHouse==true){
                $scope.btnFoDelStore=true;
                $scope.btnBeamComplete=true;
            }
            else
            {
                $scope.btnFoDelStore=false;
                $scope.btnBeamComplete=false;
            }

        }
        sessionStorage.setItem("BUID",_nBUID);
        $scope.BUID=_nBUID;
        $scope.SearchByName = function(e)
        {
            debugger;
            var nkeyCode = e.keyCode || e.which;
            if(nkeyCode==13)
            {
                var txtSearchByName = $scope.txtSearchByName;
                var oDUHardWinding={
                    DyeingOrderNo:txtSearchByName
                }

                $http.post(_sBaseAddress+'/DUHardWinding/GetsByNo',oDUHardWinding).then(
                     function (response)
                     {
                         var oDUHardWindings= jQuery.parseJSON(response.data);

                         if(oDUHardWindings.length<=0){ alert("No Data Found!"); return;}

                         if (oDUHardWindings[0].ErrorMessage=="" || oDUHardWindings[0].ErrorMessage==null)
                         {
                             $scope.gridOptions.data=oDUHardWindings;
                             sTemp= 0 + '~' + icsdateformat(new Date()) + '~' + icsdateformat(new Date()) + '~'
                                            + 0 + '~' + icsdateformat(new Date())+ '~' + icsdateformat(new Date()) + '~'
                                            + 0 + '~' + icsdateformat(new Date())+ '~' + icsdateformat(new Date()) + '~'
                                            + txtSearchByName + '~' + "" + '~'
                                            + false+ '~' + false  + '~' + false + '~' + false
                                            + '~' +sessionStorage.getItem('BUID') ;
                             sessionStorage.setItem("sTempString", sTemp);
                         }
                         else
                         {
                             alert(oDUHardWindings[0].ErrorMessage);
                         }
                     },
                         function (response) { alert(response.statusText);$scope.MeasurementUnits=[];}
                 );
                // $scope.gridOptions= {data: oSearchedList};
            }
        }

        $scope.Edit= function ()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUHardWinding= data[0];//get selected index
            if(oDUHardWinding==null || oDUHardWinding.DUHardWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }

            if(oDUHardWinding.ReceiveDateST=="-" || oDUHardWinding.ReceiveDate==undefined) //EnumWindingStatus: 3 [Completed]
            {
                alert("Sorry, Item Has Not Been Received!!");
                return;
            }

            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oDUHardWinding);
            sessionStorage.setItem("Operation","Edit");
            sessionStorage.setItem("DUHardWindings", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("DUHardWindingHeader", "Edit Color Category");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = _sBaseAddress+  "/DUHardWinding/ViewDUHardWinding?id="+oDUHardWinding.DUHardWindingID+"&buid="+_nBUID;
        }

        $scope.View= function ()
        {
            //debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUHardWinding= data[0];//get selected index
            if(oDUHardWinding==null || oDUHardWinding.DUHardWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oDUHardWinding);
            sessionStorage.setItem("DUHardWindings", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("DUHardWindingHeader", "View Color Category");
            sessionStorage.setItem("BackLink", window.location.href);
            sessionStorage.setItem("Operation","View");
            window.location.href = _sBaseAddress+  "/DUHardWinding/ViewDUHardWinding?id="+oDUHardWinding.DUHardWindingID+"&buid="+_nBUID;
        }
        $scope.Delete = function()
        {
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUHardWinding= data[0];//get selected index
            if(oDUHardWinding==null || oDUHardWinding.DUHardWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if (!confirm("Confirm to Delete?")) return ;
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oDUHardWinding);
            if (oDUHardWinding.DUHardWindingID > 0)
            {
                $.ajax
                ({
                    type: "GET",
                    dataType: "json",
                    url : _sBaseAddress+ "/DUHardWinding/Delete",
                    data: { id: oDUHardWinding.DUHardWindingID},
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        debugger;
                        feedbackmessage = jQuery.parseJSON(data);
                        if (feedbackmessage == "Deleted")
                        {
                            alert("Delete sucessfully");
                            $scope.gridOptions.data.splice(SelectedRowIndex,1);
                            $scope.gridApi.core.refresh();
                        }
                        else
                        {
                            alert(feedbackmessage);
                        }
                    },
                    error: function (xhr, status, error)
                    {
                        alert(error);
                    }

                });
            }
        }

        $scope.Rewinding= function ()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUHardWinding= data[0];//get selected index
            if(oDUHardWinding==null || oDUHardWinding.DUHardWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }

            if(oDUHardWinding.ReceiveDateST=="-" || oDUHardWinding.ReceiveDate==undefined) //EnumWindingStatus: 3 [Completed]
            {
                alert("Sorry, Item Has Not Been Received!!");
                return;
            }
            if(parseFloat(oDUHardWinding.Balance)<=0) //EnumWindingStatus: 3 [Completed]
            {
                alert("Sorry, Balance Qty is less or equal to zero!!");
                return;
            }
            //if(oDUHardWinding.IsRewinded) //IsRewinded
            //{
            //    alert("Sorry, Your selected item is already rewinded!!");
            //    return;
            //}
            if (!confirm("Confirm to Rewind ["+ oDUHardWinding.DyeingOrderNo +"] ?")) return ;

            var nIndex=$scope.gridOptions.data.indexOf(oDUHardWinding);
           
            var modalInstance = $uibModal.open(
                {
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'Rewinding.html',
                controller: 'RewindingCtrl',
                controllerAs: 'ForwardToDelController',
                resolve: {
                    obj: function () {
                        return { value:oDUHardWinding, Operation: 'Forward'  };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                debugger;
                if(result.DUHardWindingID>0)
                {
                    debugger;
                    //var oDUHardWinding= JSON.parse(sessionStorage.getItem('DUHardWinding'));
                    //var index=sessionStorage.getItem('SelectedRowIndex');
                  
                    //oDUHardWinding.IsRewinded = true;
                    $scope.gridOptions.data[nIndex]=oDUHardWinding;
                    $scope.gridOptions.data.push(result);
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });

           // var nIndex=$scope.gridOptions.data.indexOf(oDUHardWinding);
           
        }
     
        $scope.PrintList = function()
        {
            var oDUHardWindings= $scope.gridOptions.data;
            var ids ="";
            if(oDUHardWindings.length >0)
            {
                for(var i =0;i<oDUHardWindings.length;i++)
                {
                    ids =ids+oDUHardWindings[i].DUHardWindingID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else
            {
                alert("Data not found ");
                return;
            }
            window.open(_sBaseAddress + '/DUHardWinding/PrintList?sIDs='+ids);
        }
        $scope.ExportToExcel = function()
        {
            var oDUHardWindings=  $scope.gridOptions.data;
            var ids ="";
            if(oDUHardWindings.length >0)
            {
                for(var i =0;i<oDUHardWindings.length;i++)
                {
                    ids =ids+oDUHardWindings[i].DUHardWindingID+",";
                }
                ids= ids.substring(0, ids.length - 1);
            }
            else
            {
                alert("Data not found ");
                return;
            }
            window.open(_sBaseAddress + '/DUHardWinding/DUHardWindingExportToExcel?sIDs='+ids);
        }

        $scope.YarnOut= function ()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUHardWinding= data[0];//get selected index
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oDUHardWinding);
            var oDUHardWindingList=[];
            for(var i=0;i<$scope.gridOptions.data.length;i++)
            {
                if($scope.gridOptions.data[i].StatusInt==3) //EnumWindingStatus: 3 [Completed]
                {
                    oDUHardWindingList.push($scope.gridOptions.data[i]);
                }
            }
            if(oDUHardWindingList.length<=0)
            {
                alert("No Data Found!");
                return;
            }
            sessionStorage.setItem("DUHardWindings", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("DUHardWindingHeader", "Yarn Out");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = _sBaseAddress+  "/DUHardWinding/ViewDUHardWindingYarnOut?id=0";
        }
        $scope.Receive=function()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUHardWinding= data[0];//get selected index
            if(oDUHardWinding==null || oDUHardWinding.DUHardWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oDUHardWinding.ReceiveDateST!="-" || oDUHardWinding.ReceiveDate==undefined) //EnumWindingStatus: 3 [Completed]
            {
                alert("Sorry, Item Has Been Received Already!!");
                return;
            }
            if (!confirm("Confirm to Receive?")) return ;

            var nIndex=$scope.gridOptions.data.indexOf(oDUHardWinding);
            $http.post(_sBaseAddress+'/DUHardWinding/Receive',oDUHardWinding).then(
                  function (response)
                  {
                      var oDUHardWinding= jQuery.parseJSON(response.data);
                      if (oDUHardWinding.ErrorMessage=="" || oDUHardWinding.ErrorMessage==null)
                      {
                          alert("Received Successfully!!");
                          $scope.gridOptions.data[nIndex]=oDUHardWinding;
                      }
                      else
                      {
                          alert(oDUHardWinding.ErrorMessage);
                      }
                  },
                      function (response) { alert(response.statusText);$scope.MeasurementUnits=[];}
              );
        }
        $scope.FowardToBuyer=function()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUHardWinding= data[0];//get selected index
            if(oDUHardWinding==null || oDUHardWinding.DUHardWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oDUHardWinding.ReceiveDateST=="-" || oDUHardWinding.ReceiveDate==undefined) //EnumWindingStatus: 3 [Completed]
            {
                alert("Sorry, Item Has Not Been Received!!");
                return;
            }
            //if(oDUHardWinding.StatusInt!=3) //EnumWindingStatus: 3 [Completed]
            //{
            //    alert("Sorry! Winding Yet Not Completed!");
            //    return;
            //}

            if (!confirm("Confirm to Receive in Delivery Store?")) return;
            $http.post(_sBaseAddress+'/DUHardWinding/SendToRequsitionToDeliveryHW',oDUHardWinding).then(
                  function (response)
                  {

                      var oDUHardWinding= jQuery.parseJSON(response.data);

                      debugger;
                      if (oDUHardWinding.ErrorMessage=="" || oDUHardWinding.ErrorMessage==null)
                      {
                          alert("Send Successfuly");
                      }
                      else
                      {
                          alert(oDUHardWinding.ErrorMessage);
                      }
                  },
                      function (response) { alert(response.statusText);$scope.MeasurementUnits=[];}
              );
        }
        $scope.ShowDetails= function ()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUHardWinding= data[0];//get selected index
            if(oDUHardWinding==null || oDUHardWinding.DUHardWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oDUHardWinding.StatusInt!=3) //EnumWindingStatus: 3 [Completed]
            {
                alert("Sorry! Winding Yet Not Completed!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oDUHardWinding);
            sessionStorage.setItem("DUHardWindings", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("DUHardWindingHeader", "Yarn Out");
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = _sBaseAddress+  "/DUHardWinding/ViewDUHardWindingYarnOut?id="+oDUHardWinding.DUHardWindingID;
        }

        
        $scope.FowardToBuyer_OFF = function () {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUHardWinding= data[0];//get selected index
            if(oDUHardWinding==null || oDUHardWinding.DUHardWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }

            //if(oDUHardWinding.StatusInt!=3) //EnumWindingStatus: 3 [Completed]
            //{
            //    alert("Sorry! Winding Yet Not Completed!");
            //    return;
            //}

            var modalInstance = $uibModal.open({
                ariaLabelledBy: 'modal-title',
                ariaDescribedBy: 'modal-body',
                size: 'md',
                templateUrl: 'ForwardToDel.html',
                controller: 'ModalInstanceCtrl',
                controllerAs: 'ForwardToDelController',
                resolve: {
                    obj: function () {
                        return { value:oDUHardWinding, Operation: 'Forward'  };
                    }
                }
            });

            modalInstance.result.then(function (result) {
                debugger;
                if(result.FDOID>0)
                {
                    debugger;
                    var index=sessionStorage.getItem('SelectedRowIndex');
                    $scope.IsMeter=result.IsMeter;
                    $scope.IsYard=result.IsYard;
                    console.log(result);
                }
            }, function () {
                $log.info('Modal dismissed at: ' + new Date());
            });
        };


        $scope.AdvanceSearch = function ()
        {
            debugger;
            $scope.MRNo ="";
            var modalObj={
                modalcontroller:'ModalDUHardWindingAdvanceSearchCtrl',
                appcontroller:'DUHardWindingController',
                CompareOperators:oCompareOperators,
                //RequisitionTypes:$scope.RequisitionTypes,
                //IssueStores:$scope.IssueStores,
                //ReceiveStores: $scope.ReceiveStores
            }
            var modalInstance=DUHardWindingservice.Instance(modalObj);
            modalInstance.result.then(function (result)
            {
                debugger;
                $scope.gridOptions.data = result;
            }, function () {
                //$log.info('Modal dismissed at: ' + icsdateformat(new Date()));
            });
        };

        $scope.printView = function()
        {
            var  sTemp = sessionStorage.getItem("sTempString");debugger;
            if(sTemp==null)
            {
                sTemp= 0 + '~' + icsdateformat(new Date()) + '~' + icsdateformat(new Date()) + '~'
                                + 0 + '~' + icsdateformat(new Date())+ '~' + icsdateformat(new Date()) + '~'
                                + 0 + '~' + icsdateformat(new Date())+ '~' + icsdateformat(new Date()) + '~'
                                + "" + '~' + "" + '~'
                                + false+ '~' + false  + '~' + false+ '~' + true
                                + '~' +sessionStorage.getItem('BUID') ;
            }
            window.open(_sBaseAddress + '/DUHardWinding/PrintDUHardWinding?sTemp='+sTemp, "_blank");
        };
        $scope.printExcel = function()
        {
            var  sTemp = sessionStorage.getItem("sTempString");debugger;
            if(sTemp==null)
            {
                sTemp= 0 + '~' + icsdateformat(new Date()) + '~' + icsdateformat(new Date()) + '~'
                                + 0 + '~' + icsdateformat(new Date())+ '~' + icsdateformat(new Date()) + '~'
                                + 0 + '~' + icsdateformat(new Date())+ '~' + icsdateformat(new Date()) + '~'
                                + "" + '~' + "" + '~'
                                + false+ '~' + false  + '~' + false+ '~' + true
                                + '~' +sessionStorage.getItem('BUID') ;
            }
            window.open(_sBaseAddress + '/DUHardWinding/ExportToExcelDUHardWinding?sTemp='+sTemp, "_blank");
        };
        
        $scope.Print_HWStatement = function()
        {
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUHardWinding= data[0];//get selected index
            if(oDUHardWinding==null || oDUHardWinding.DUHardWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            window.open(_sBaseAddress + '/DUHardWinding/Print_HWStatement?nID='+oDUHardWinding.DyeingOrderDetailID+"&nBUID="+_nBUID, "_blank");
        };
        

        //button hide unhide
        //$('#btnAdd,#btnEdit,#btnView,#btnDelete,#btnPrintList').hide();
      debugger
      if(PermissionChecker('ExtremeEdit','DUHardWinding',oAuthorizationRolesMapping)){ $('#tbReceiveinfo').show();}
        if(PermissionChecker('Add','DUHardWinding',oAuthorizationRolesMapping)){$("#btnAdd").show();}
        if(PermissionChecker('Edit','DUHardWinding',oAuthorizationRolesMapping)){$("#btnEdit").show();}
        if(PermissionChecker('Edit','DUHardWinding',oAuthorizationRolesMapping)){$("#btnYarnOut").show();}
        if(PermissionChecker('Edit','DUHardWinding',oAuthorizationRolesMapping)){$("#btnDetails").show();}
        if(PermissionChecker('View','DUHardWinding',oAuthorizationRolesMapping)){$("#btnView").show();}
        if(PermissionChecker('Delete','DUHardWinding',oAuthorizationRolesMapping)){$("#btnDelete").show();}
        if(PermissionChecker('Print','DUHardWinding',oAuthorizationRolesMapping)){$("#btnPrintList").show();}
        //if(PermissionChecker('PrintList','DUHardWinding',oAuthorizationRolesMapping)){$("#btnPrintList").show();}

        $scope.QC_Packing= function (){
            debugger;
            _oRouteSheet=null;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oDUHardWinding= data[0];//get selected index
            if(oDUHardWinding==null || oDUHardWinding.DUHardWindingID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if(oDUHardWinding.ReceiveDateST=="-" || oDUHardWinding.ReceiveDate==undefined) //EnumWindingStatus: 3 [Completed]
            {
                alert("Sorry, Item Has Not Been Received!!");
                return;
            }
            $('#dtReceiveDate').datetimebox('setValue', oDUHardWinding.ReceiveDateST);
            $("#cboRSShift").icsLoadCombo({
                List: oRSShifts,
                OptionValue: "RSShiftID",
                DisplayText: "Name",
            });
            $("#cboWarpWeft").icsLoadCombo({
                List: oWarpWeftTypes,
                OptionValue: "id",
                DisplayText: "Value",
            });
            $("#cboRSInQCSetups").icsLoadCombo({
                List: oRSInQCSetups,
                OptionValue: "id",
                DisplayText: "Value",
            });
            $('#tabPacking').data('DUHardWinding',oDUHardWinding)
            $('#tabPacking').data('RouteSheet',oDUHardWinding);
            //SetRouteSheet(oDUHardWinding);
            SetRouteSheet_Packing(oDUHardWinding);
            GetITs(oDUHardWinding);
            //fabric beam finish
            GetDispoHWs(oDUHardWinding);
            $('#txtTotalLengthFinish').val("");
            $('#txtRemainingLength').val("");
            GetsFabricBeamFinish(oDUHardWinding.DyeingOrderID);
            //$('#txtLengthFinish').icsCurrencyBox();
            $('#txtReadyDate').datebox('setValue',icsdateformat(new Date()));
            $('#txtLengthFinish').val(0);
            $('#txtBeam').val('');
            $("#txtNote_FBF").val('');
            $("#winQC").data("DUHardWinding",oDUHardWinding);
            $('#tabPackingQC').tabs('select', 0);
            if(oDUHardWinding.IsInHouse == true){
                $('#tabPackingQC').tabs('disableTab', 2);
                $('#tabPackingQC').tabs('enableTab', 3);
            }else{
                $('#tabPackingQC').tabs('disableTab', 3);
                $('#tabPackingQC').tabs('enableTab', 2);
            }
            $('#lblMUOne').html(_nMUnit);
            $('#lblMUTwo').html(_nMUnitTwo);
            $("#winQC").icsWindow("open", "QC Operation");
        };
    });
    
    CCapp.controller('RewindingCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) {
        $scope.Operation=obj.Operation;

        $scope.DUHardWinding = obj.value;
        $scope.DUHardWinding.Balance_New = obj.value.Balance;

        $scope.Rewinding= function ()
        {
            debugger;
            if($scope.DUHardWinding.Balance_New > $scope.DUHardWinding.Balance)
            {
                alert("Rewinding Qty Can Not Be Greater Then Balance ["+ $scope.DUHardWinding.Balance +"] !!"); return;
            }
            $scope.DUHardWinding.Qty = $scope.DUHardWinding.Balance_New;

            if (!confirm("Confirm to Rewind?")) return;
            $http.post(_sBaseAddress+'/DUHardWinding/Rewind',$scope.DUHardWinding).then(
                  function (response)
                  {
                      var result= jQuery.parseJSON(response.data);
                      if (result.ErrorMessage=="" || result.ErrorMessage==null)
                      {
                          alert("Rewind Successfully!!");
                          $uibModalInstance.close(result);
                      }
                      else
                      {
                          alert(result.ErrorMessage);
                      }
                  },
                      function (response) { alert(response.statusText);$scope.MeasurementUnits=[];}
              );
        };

        $scope.change=function(nEvent)
        {
            if(nEvent==1)
            {
                if($scope.FDOFormat.IsMeter)
                    $scope.FDOFormat.IsYard=false;
                else
                    $scope.FDOFormat.IsYard=true;
            }
            else if(nEvent==2)
            {
                if($scope.FDOFormat.IsYard)
                    $scope.FDOFormat.IsMeter=false;
                else
                    $scope.FDOFormat.IsMeter=true;
            }
        }
        $scope.cancel= function () 
        {
            $uibModalInstance.close();
        };

    });
    CCapp.controller('ModalInstanceCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj) {
        $scope.Operation=obj.Operation;

        $scope.DUHardWinding = obj.value;
        $scope.UpdateStatus= function ()
        {
            if (!confirm("Confirm to Receive in Delivery Store?")) return;
            $http.post(_sBaseAddress+'/DUHardWinding/SendToRequsitionToDeliveryHW',oDUHardWinding).then(
                  function (response)
                  {
                      var  sReturnMessage = jQuery.parseJSON(data);
                      debugger;
                      if (sReturnMessage == '' || sReturnMessage == null)
                      {
                          alert("Received Successfuly");
                      }
                      else
                      {
                          alert(sReturnMessage);
                      }
                  },
                      function (response) { alert(response.statusText);$scope.MeasurementUnits=[];}
              );
            console.log($scope.DUHardWinding)
            $uibModalInstance.close($scope.FDOFormat);
        };

        $scope.change=function(nEvent)
        {
            if(nEvent==1)
            {
                if($scope.FDOFormat.IsMeter)
                    $scope.FDOFormat.IsYard=false;
                else
                    $scope.FDOFormat.IsYard=true;
            }
            else if(nEvent==2)
            {
                if($scope.FDOFormat.IsYard)
                    $scope.FDOFormat.IsMeter=false;
                else
                    $scope.FDOFormat.IsMeter=true;
            }
        }
        $scope.cancel= function () {
            $uibModalInstance.close($scope.FDOFormat);
        };

    });

    //-------------QC-----------------//
    function GetITs(oDUHardWinding)
    {
        //var data=$scope.gridApi.selection.getSelectedRows();
        //var oDUHardWinding= data[0];//get selected index
        //var oRouteSheet = $('#tblRSWise').datagrid('getSelected');
        $.ajax
          ({
              type: "POST",
              dataType: "json",
              url : _sBaseAddress+"/DUHardWinding/GetsITransactionBYRS",
              data:  JSON.stringify(oDUHardWinding),
              contentType: "application/json; charset=utf-8",
              success: function (data) {
                  //debugger;
                  var oITs = jQuery.parseJSON(data);
                  if (oITs.length>0)
                  {
                      DynamicRefreshList(oITs, 'tblITs');
                  }
                  else
                  {
                      DynamicRefreshList([], 'tblITs');
                  }
              },
              error: function (xhr, status, error)
              {
                  alert(error);
              }
          });
    }

    function GetsFabricBeamFinish(nDyeingOrderID){
        $.ajax({
            type: "GET",
            dataType: "json",
            url : _sBaseAddress+"/DUHardWinding/GetsFabricBeamFinish",
            traditional: true,
            data:  {nDyeingOrderID:nDyeingOrderID},
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var oFBFs = jQuery.parseJSON(data);
                DynamicRefreshList(oFBFs, "tblBeamFinish");
                //SetTotalLength();
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function GetDispoHWs(oDispoHW){
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/DUHardWinding/GetsData",
            traditional: true,
            data:  JSON.stringify(oDispoHW),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                //var oDispoHWs = jQuery.parseJSON(data);
                var oObjs = data;
                
                if(oObjs.length<=0){
                    $("#txtWarpLangth").val(0);
                    $('#txtSuggestedLength').val(0);
                    $.icsMakeFooterColumn('tblTempDispoHWs',['ColorName','QtyWarp','QtyDyeing','WarpKg','DueTFKg','WarpTF','WeftTF','TotalTFKg','DueTFKg']);
                    //alert("No data found");
                    return;
                }
                else{
                    $("#txtWarpLangth").val(oObjs[0].WarpLangth.toFixed(2));
                    var result=[];
                    for(var i = 0; i<oObjs.length;i++){
                        if(parseFloat(oObjs[i].QtyWarp) > 0)
                            result.push(oObjs[i]);
                    }
                    if(result.length > 0){
                        var nTotalWarpReq = 0;
                        var nTotalWarpKg = 0;
                        var bIsZeroExist = false;
                        for(var i = 0; i<result.length;i++){
                            nTotalWarpReq += result[i].QtyWarp;
                            if(result[i].QtyWarp < result[i].QtyDyeing){
                                nTotalWarpKg += result[i].QtyWarp;
                                result[i].WarpKg = result[i].QtyWarp;
                            }else{
                                nTotalWarpKg += result[i].QtyDyeing;
                                result[i].WarpKg = result[i].QtyDyeing;
                            }
                        }
                        for(var i = 0; i<result.length;i++){
                            if(result[i].QtyDyeing <= 0){
                                bIsZeroExist = true;
                                break;
                            }
                        }
                        debugger;
                        DynamicRefreshList(result, "tblTempDispoHWs");
                        $.icsMakeFooterColumn('tblTempDispoHWs',['ColorName','QtyWarp','QtyDyeing','WarpKg','DueTFKg','WarpTF','WeftTF','TotalTFKg','DueTFKg']);
                        if(bIsZeroExist == false){
                            var nSugVal = ((parseFloat(oObjs[0].WarpLangth)*nTotalWarpKg)/nTotalWarpReq);
                            $('#txtSuggestedLength').val(nSugVal.toFixed(2));
                        }else{
                            $('#txtSuggestedLength').val(0);
                        }
                    }else{
                        $('#txtSuggestedLength').val(0);
                        $.icsMakeFooterColumn('tblTempDispoHWs',['ColorName','QtyWarp','QtyDyeing','WarpKg','DueTFKg','WarpTF','WeftTF','TotalTFKg','DueTFKg']);
                    }
                    
                }
                SetBalance();
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    }

    function SetBalance(){
        var oDatas=$('#tblBeamFinish').datagrid('getRows');
        var nTotalLengthFinish = 0;
        for(var i=0;i<oDatas.length;i++){
            nTotalLengthFinish += parseFloat(oDatas[i].LengthFinish);
        }
        var nWarpLangth = parseFloat($("#txtWarpLangth").val());
        $("#txtComLength").val(nTotalLengthFinish.toFixed(2));
        $("#txtBalance").val((nWarpLangth-nTotalLengthFinish).toFixed(2));
    }

    $("#btnAddBeam").click(function ()
    {
        //var nLengthFinish = TempRemoveComma($('#txtLengthFinish').val());
        var nLengthFinish = $('#txtLengthFinish').val();
        if(isNaN(parseFloat(nLengthFinish))){
            alert("Length Finish Should be number!!");
            $('#txtLengthFinish').val(0);
            $('#txtLengthFinish').focus();
            return false;
        }
        //alert(nLengthFinish);
        debugger;
        if(parseFloat(nLengthFinish) <= 0){
            alert("Length Finish Should be greater than 0!!");
            $('#txtLengthFinish').focus();
            return false;
        }

        var oDUHardWinding= $("#winQC").data("DUHardWinding");

        var bIsFinish = false;
        //if($('#chkIsFinish').attr("checked"))
        //{
        //    bIsFinish=true;
        //}
        var oDetail={
            FabricBeamFinishID: 0,
            FESDID: 0,
            DyeingOrderID: oDUHardWinding.DyeingOrderID,
            FEOSID: 0,
            ReadyDate: $('#txtReadyDate').datetimebox('getValue'),
            LengthFinish:nLengthFinish,
            BeamNo:$("#txtBeam").val(),
            Note:$("#txtNote_FBF").val(),
            IsFinish: bIsFinish
        };

        //$('#tblBeamFinish').datagrid('appendRow',oDetail);

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/DispoHW/SaveFabricBeamFinish",
            traditional: true,
            data:  JSON.stringify(oDetail),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                oFabricBeamFinish = jQuery.parseJSON(data);
                if (oFabricBeamFinish.ErrorMessage==null || oFabricBeamFinish.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    $('#tblBeamFinish').datagrid('appendRow',oFabricBeamFinish);
                    //SetTotalLength();
                    $('#txtLengthFinish').val(0);
                    $('#txtBeam').val('');
                    $("#txtNote_FBF").val('');
                    SetBalance();
                }
                else {
                    alert(oFabricBeamFinish.ErrorMessage);
                    //$('#txtLengthFinish').val(0);
                    //$('#txtBeam').val('');
                    //$("#txtNote_FBF").val('');
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });

    });

    $("#btnDeleteBeam").click(function(){
        debugger;
        var oBeamFinish = $('#tblBeamFinish').datagrid('getSelected');
        if(oBeamFinish==null || oBeamFinish.FabricBeamFinishID<=0)
        {
            alert("Invalid Field!!! please select a valid Field!");
            return false;
        }
        if(oBeamFinish.IsFinish == true)
        {
            alert("Already finished! You can't delete it!");
            return false;
        }

        if (!confirm("Confirm to Delete?")) return ;
        var SelectedRowIndex=$('#tblBeamFinish').datagrid('getRowIndex',oBeamFinish);
        if (oBeamFinish.FabricBeamFinishID > 0)
        {
            $.ajax
            ({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+  "/DispoHW/DeleteFabricBeamFinish",
                data: JSON.stringify(oBeamFinish),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var feedbackmessage = jQuery.parseJSON(data);
                    if (feedbackmessage == "Data delete successfully")
                    {
                        alert("Data delete successfully");
                        $('#tblBeamFinish').datagrid('deleteRow',SelectedRowIndex);
                        //SetTotalLength();
                        SetBalance();
                    }
                    else
                    {
                        alert(feedbackmessage);
                    }
                },
                error: function (xhr, status, error)
                {
                    alert(error);
                }
            });
        }
    });

    function formatInspection(value){

        if(value<=0){
            return '<label style="color:red"> Yet Not Added </label>';
        }
        else{
            return '<label style="color:green"> Added </label>';
        }

    }
 
    $("#btnClose_QC").click(function (e) {
        $("#btnQC").icsWindow("close");
    });
    var editIndex = undefined;
    function endEditing() {
        debugger;
        if (editIndex == undefined) {
            return true;
        }
        if ($('#tblRouteSheetQC').datagrid('validateRow', editIndex)) {

            $('#tblRouteSheetQC').datagrid('endEdit', editIndex);
            $('#tblRouteSheetQC').datagrid('selectRow', editIndex);
            var oRSInQCDetail = $('#tblRouteSheetQC').datagrid('getSelected');

            var nAllowedQty=GetInspectionQty() + parseFloat(oRSInQCDetail.Qty);

            if (parseFloat(oRSInQCDetail.Qty)== _nQty && oRSInQCDetail.Note ==_sNote )
            {
                editIndex = undefined;
                return true;
            }

            if(parseFloat(nAllowedQty)<parseFloat(oRSInQCDetail.Qty)){
                alert("Maximum allowed quantity "+ formatPrice(nAllowedQty)  +" "); //+_nMUnit );
                _nQty =  parseFloat(nAllowedQty);
                oRSInQCDetail.Qty=parseFloat(nAllowedQty);
                $('#tblRouteSheetQC').datagrid("updateRow", { index: editIndex, row: oRSInQCDetail });
                $('#tblRouteSheetQC').datagrid('selectRow', editIndex).datagrid('endEdit', editIndex);
                return false;
            }

            if(nAllowedQty<0)
                _nQty=0;
            else _nQty=oRSInQCDetail.Qty;

            oRSInQCDetail.RouteSheetID=_oRouteSheet.RouteSheetID;
            $('#tblRouteSheetQC').datagrid("updateRow", { index: editIndex, row: oRSInQCDetail });
            $('#tblRouteSheetQC').datagrid('selectRow', editIndex).datagrid('endEdit', editIndex);
            editIndex = undefined;
        }
        else { return false; }
    }
    var _nQty = 0.00;
    var _sNote = "";
    function onClickRow(index) {

        if (editIndex != index && _oRouteSheet.Params!='QCDone') {
            if (endEditing()) {
                $('#tblRouteSheetQC').datagrid('selectRow', index).datagrid('beginEdit', index);
                _nQty =  parseFloat($('#tblRouteSheetQC').datagrid('getSelected').Qty);
                _sNote =  $('#tblRouteSheetQC').datagrid('getSelected').Note;
                editIndex = index;
            }
            else {
                $('#tblRouteSheetQC').datagrid('selectRow', editIndex);
            }
        }
    }
    function GetInspectionQty(){

        var oRows=$('#tblRouteSheetQC').datagrid('getRows');
        var nMaxAllowedQty= parseFloat((_oRouteSheet.Qty)) + parseFloat((((_oRouteSheet.Qty)*10)/100).toFixed(2));

        var nQty=0;
        if(oRows.length>0){
            for(var i=0; i<oRows.length;i++){
                nQty=parseFloat(nQty)+parseFloat(oRows[i].Qty);
            }
        }

        return parseFloat(nMaxAllowedQty)-parseFloat(nQty);
    }

    function GenerateGainLoss(){
        debugger;
        var oRSInQCDetails= $('#tblRouteSheetQC').datagrid('getRows');
        var nProduction=0, nLoss=0, nGain=0;
        var stext="";
        if(oRSInQCDetails.length>0)
        {
            for(var i=0; i<oRSInQCDetails.length;i++){
                if(oRSInQCDetails[i].YarnType==1){
                    nProduction= parseFloat(nProduction) + parseFloat(oRSInQCDetails[i].Qty);
                }
                else{
                    nLoss= parseFloat(nLoss) + parseFloat(oRSInQCDetails[i].Qty);
                }
            }

            debugger;
            var nTotalQty= parseFloat(nProduction) + parseFloat(nLoss);
            nGain= parseFloat((parseFloat(nTotalQty - _oRouteSheet.Qty)*100)/parseFloat(_oRouteSheet.Qty)).toFixed(2);
            nLoss= parseFloat((parseFloat(_oRouteSheet.Qty - nTotalQty)*100)/parseFloat(_oRouteSheet.Qty)).toFixed(2);
            stext= "<b>Weight: </b>"+ parseFloat(nTotalQty)  +" "+_nMUnit+ (((nTotalQty)>_oRouteSheet.Qty)? ("<b>  Gain: </b>"+ nGain +"%") : ("<b>  Loss: </b>"+ nLoss +"%")) ;

        }
        $('#lblQCRemarks').html(stext);
    }
    function ResetGridEdit(){
        _nIndex=-1;
        _sNote='';
        _nQty=0;
        editIndex=undefined;
    }

    /*.............QC OPERATION.............. */
    $("#btnSave_QC").click(function (){

        endEditing();
        if($('#tblRouteSheetQC').datagrid('getRows').length<=0)
        {
            alert("No packing items found. Please add packing items.");
            return false;
        }

        debugger;
        var oDUHardWinding = $('#tabPacking').data('DUHardWinding');
        if(!oDUHardWinding.DyeingOrderDetailID > 0)
        {
            alert("Invalid Order!"); return;
        }
        if(parseInt(oDUHardWinding.RouteSheetID)<=0)
        {
            alert("Invalid Batch!"); return;
        }
        var oRSInQCDetails = $('#tblRouteSheetQC').datagrid('getRows');

        for(var i=0;i<oRSInQCDetails.length;i++){
            if(parseFloat(oRSInQCDetails[i].Qty)>0)
            {
                oRSInQCDetails[i].RouteSheetID=oDUHardWinding.RouteSheetID;
                oRSInQCDetails[i].DyeingOrderDetailID=oDUHardWinding.DyeingOrderDetailID;
            }
        }
       

        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/RouteSheet/SaveRSInQCDetailAll",
            traditional: true,
            data:  JSON.stringify(oRSInQCDetails),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                var oRSInQCDetails= jQuery.parseJSON(data);
                if (oRSInQCDetails.length>0 && oRSInQCDetails[0].ErrorMessage=='')
                {
                    _oRSInQCDetails=oRSInQCDetails;
                    alert("Data Save Succesfully!!");

                    DynamicRefreshList(_oRSInQCDetails,'tblRouteSheetQC');
                    GenerateGainLoss();

                }
                else
                {
                    alert(oRSInQCDetails[0].ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });
    $('#btnDeleteQCItem').click(function (e)
    {
        var oRSInQCDetail = $('#tblRouteSheetQC').datagrid('getSelected');
        if (oRSInQCDetail==null || oRSInQCDetail.PackingID<=0) { alert('Please select an item from list.'); return false;}

        if (!confirm("Confirm to Delete?")) return ;
        DeleteQCItem(oRSInQCDetail);
    });
    $('#btnQCDone').click(function (e)
    {
        var nTotalQty=0;
        var nLossGain=0;
        endEditing();
        debugger;
        if($('#tblRouteSheetQC').datagrid('getRows').length<=0){
            alert("No items found. Please add QC items.");
            return false;
        }
        //if(parseInt($("#cboRSShift").val())<=0)
        //{
        //    alert("Please Select Shift First.");
        //    $('#cboRSShift').focus();
        //    $('#cboRSShift').addClass("errorFieldBorder");
        //    return false;
        //}
       var oDUHardWinding = $('#tabPacking').data('DUHardWinding');
        if(!oDUHardWinding.DyeingOrderDetailID > 0)
        {
            alert("Invalid Order!"); return;
        }
        if(!oDUHardWinding.DUHardWindingID > 0)
        {
            alert("Invalid Order!"); return;
        }
        var oRSInQCDetails = $('#tblRouteSheetQC').datagrid('getRows');

        if (!confirm("Confirm to QC passed? No way to back again.")) return ;
        oDUHardWinding.IsQCDone=false;
        if(parseInt($("#cboQCRSState").val())==13) /// Full QC
        {
            oDUHardWinding.IsQCDone=true;
        }
        var oRouteSheetDO={
            RouteSheetID : oDUHardWinding.RouteSheetID,
            DyeingOrderDetailID:parseInt(oDUHardWinding.DyeingOrderDetailID),
            RSState: $("#cboQCRSState").val(),
            Note: $("#txtRemark_QC").val()
            
        };
        var obj=null;
        if(oDUHardWinding.RouteSheetID<=0) /// For Greay Yarn
        {
            obj = {
                BaseAddress: _sBaseAddress,
                Object: oDUHardWinding,
                ObjectId: oDUHardWinding.DUHardWindingID,
                ControllerName: "DUHardWinding",
                ActionName:"RSQCDOne",
                TableId: "",
                IsWinClose: false,
                Message: "QC Passed successfully."
            };
        }
        else{
             obj = {
                BaseAddress: _sBaseAddress,
                Object: oRouteSheetDO,
                ObjectId: oRouteSheetDO.RouteSheetID,
                ControllerName: "RouteSheet",
                ActionName:"RSQCDOne",
                TableId: "",
                IsWinClose: false,
                Message: "QC Passed successfully."
            };
        }
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) 
            {
                if (response.obj.DyeingOrderDetailID> 0 && response.obj.IsQCDone) 
                {
                    _oRouteSheet.RSState=response.obj.RSState;
                    var oRS = $('#tblRSWise').datagrid('getSelected');
                    var nSelectedIndex = $('#tblRSWise').datagrid('getRowIndex',oRS);
                    $('#tblRSWise').datagrid("updateRow", { index: nSelectedIndex, row: _oRouteSheet });
                    $('.active-QC').hide();
                    $("#btnQC").icsWindow("close");
                }
            }
        });

    });
    function DeleteQCItem(oRSInQCDetail){
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oRSInQCDetail,
            ControllerName: "RouteSheet",
            ActionName: "DeleteRSInQCDetail",
            TableId: "",
            ShowMessage:false,
            IsWinClose: false
        };
        $.icsDelete(obj, function (response) {
            if (response.status && response.Message =='deleted') {
                var obj=
                {
                    RSInQCDetailID : 0,
                    RouteSheetID : 0,
                    ColorGroupID : 0,
                    RSInQCSetupID : oRSInQCDetail.RSInQCSetupID,
                    Qty : 0,
                    Note : '',
                    ColorName : '',
                    QCSetupName : oRSInQCDetail.QCSetupName,
                    YarnType : oRSInQCDetail.YarnType
                };
                var nIndex = $("#tblRouteSheetQC").datagrid("getRowIndex", oRSInQCDetail);
                $('#tblRouteSheetQC').datagrid("updateRow", { index: nIndex, row: obj });
                GenerateGainLoss();
                ResetGridEdit();
                endEditing();
            }
        });
    }
  

    /*------------PACKING OPT---------------*/
    function SetRouteSheet_Packing(oDUHardWinding)
    {
        DynamicRefreshList([], 'tblRouteSheetQC');
        DynamicRefreshList([], 'tblRouteSheetPacking');

        var sActionName="GetRouteSheetWithPacking";
        var oRouteSheet=oDUHardWinding;
        $('#btnDODAssign').hide();
        if(oRouteSheet.RouteSheetID<=0)
        {
            //alert("Not Found(Batch Card)")
            //return;
            sActionName="GetSHWPacking";
            $('#btnDODAssign').show();
        }
        if(oRouteSheet.DyeingOrderDetailID<=0)
        {
            alert("Not Found(Order)")
            return;
        }

        var obj =
         {
             BaseAddress: _sBaseAddress,
             Object: oRouteSheet,
             ControllerName: "DUHardWinding",
             ActionName: sActionName,
             IsWinClose: false
         };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj != null) {
                if (response.obj != null) {
                    _oRouteSheet=response.obj;
                   
                    RefreshControl( oDUHardWinding,_oRouteSheet);
                    //debugger;
                    DynamicRefreshList(response.obj.RouteSheetPackings, 'tblRouteSheetPacking');
                    DynamicRefreshList(response.obj.RSInQCDetails, 'tblRouteSheetQC');
                    PackingQtyRemarks(GetPackingQty());
                    GenerateGainLoss();

                    $.icsMakeFooterColumn('tblRouteSheetPacking',['BagNo','Weight','WeightTwo','NoOfHankCone']);
                    $('.active-QC').show();
                  
                    if(_oRouteSheet.Params=='QCDone')
                    {
                        $('.active-QC').hide();
                        $('#btnSave_QC,#btnQCDone').hide();
                    }


                }
                else { alert(response.obj.ErrorMessage); }
            }
        });
    }

    
    function RefreshControl( oDUHardWinding, oRouteSheet)
    {
        $('#lblBuyerName').text(oDUHardWinding.ContractorName);
        $('#lblProduct').text(oDUHardWinding.ProductName);
        $('#lblColorShade').text(oDUHardWinding.ColorName);
        $('#lblDyeingOrderNo').text(oDUHardWinding.DyeingOrderNo);

        //$('#lblHeaderHanksCone').text("No of "+_oRouteSheet.DyeingType+": ");
        //debugger;
        if(oDUHardWinding.RouteSheetID>0)
        {
            $('#txtRouteSheet').val(oRouteSheet.RouteSheetNo);
            $('#lblMachineNo').text(oRouteSheet.MachineName);
            $('#lblQty_Batch').text(formatPrice(parseFloat(oRouteSheet.Qty).toFixed(2))+ " "+_nMUnit);
            $('#lblQty_Balance').text(formatPrice(parseFloat(oDUHardWinding.Balance).toFixed(2))+ " "+_nMUnit);
            $('#lblNoOfHanksCone').text(oRouteSheet.NoOfHanksCone+"(SW) "+oRouteSheet.NumOfCone+"(HW)");
                        
            $('#txtRemark_QC').val(oRouteSheet.Note);
            $('#cboRSShift').val(oRouteSheet.RSShiftID);

            $('#lblWeight').text(formatPrice(parseFloat(oRouteSheet.RouteSheetDOs[0].Qty_RS).toFixed(2))+ " "+_nMUnit);
            $('#lblQty_Received').text(formatPrice(oRouteSheet.RouteSheetDOs[0].Qty_Finish)+ " "+_nMUnit);
            $('#lblRSState').text(oRouteSheet.RSStateStr);
        }
        else{
            $('#txtRouteSheet').val(oDUHardWinding.LotNo);
            $('#lblNoOfHanksCone').text(oDUHardWinding.NumOfCone);
            $('#lblWeight,#lblQty_Batch').text(formatPrice(parseFloat(oDUHardWinding.Qty))+ " "+_nMUnit);

            $('#lblQty_Received').text("");
            $('#lblRSState').text("Grey Yarn");
        }
                  

        if(!oDUHardWinding.IsInHouse)
        {
            $("#tblRouteSheetPacking").datagrid("hideColumn", "WarpStr");
            $("#tblRouteSheetPacking").datagrid("hideColumn", "Length");
        }
        else
        {
            $("#tblRouteSheetPacking").datagrid("showColumn", "WarpStr");
            $("#tblRouteSheetPacking").datagrid("showColumn", "Length");
        }

    }



        function GetPackingQty(){
            var oRouteSheetPackings= $('#tblRouteSheetPacking').datagrid('getRows');
            var nPackingQty=0;
            if(oRouteSheetPackings.length>0)
            {
                for(var i=0; i<oRouteSheetPackings.length;i++){
                    nPackingQty= parseFloat(nPackingQty) + parseFloat(oRouteSheetPackings[i].Weight);
                }
                nPackingQty=nPackingQty.toFixed(2);
            }
            return nPackingQty;
        }
        function PackingQtyRemarks(nPackingQty){
            var stext="";
            if(parseFloat(nPackingQty)>0)
            {
                _nPreviousPackingQty = nPackingQty;
                stext= "<b>Weight: </b>"+ formatPrice(parseFloat(nPackingQty)) +""+_nMUnit+"  "+"<b> Or   </b>"+ formatPrice(parseFloat(nPackingQty*_oRouteSheetSetup.SMUnitValue)) +" "+_nMUnitTwo ;
            }
            $('#lblPackingRemarks').html(stext);
        }
    
        //$('#tabPackingQC').tabs({

        //    onSelect:function(title){

        //        if(title=="QC")
        //        {
        //            UpdateQC();
        //            endEditing();
        //        }
        //    }
        //});
        function UpdateQC(){
            debugger;
            var nPackingQty= parseFloat(GetPackingQty());
            var oRSInQCDetails = $('#tblRouteSheetQC').datagrid('getRows');
            var oRSInQCDetail=null;
            var nIndex=-1;
            for(var i=0;i<oRSInQCDetails.length;i++){
                if(oRSInQCDetails[i].YarnType==1)
                {
                    nIndex=i;
                    //oRSInQCDetail=oRSInQCDetails[i];
                    oRSInQCDetails[i].Qty=parseFloat(nPackingQty);
                    $('#tblRouteSheetQC').datagrid("updateRow", { index: nIndex, row:oRSInQCDetails[i]});
                    break;
                }
            }
            //editIndex = 0;
            //DynamicRefreshList([], 'tblRouteSheetQC');
            //DynamicRefreshList(oRSInQCDetails, 'tblRouteSheetQC');
 
        }
        function GetUseableWeight(){
            var oRows=$('#tblRouteSheetPacking').datagrid('getRows');
            var nMaxAllowedQty= parseFloat(_oRouteSheet.Qty);
            var nQty=0;
            if(oRows.length>0){
                for(var i=0; i<oRows.length;i++){
                    nQty=parseFloat(nQty)+parseFloat(oRows[i].Weight);
                }
            }

            return (nMaxAllowedQty>nQty)? parseFloat(nMaxAllowedQty)-parseFloat(nQty):0;
        }
        function ResetRouteSheetPacking(bIsHank){
            debugger;
            $('#winPacking .reset-text').val("");
            $('#winPacking .reset-select').val(0);
            _oRouteSheetPacking=null;
            $("#txtNumberBags").prop('disabled',false);
            $("#txtNumberBags").val(1);

            _nUsableQty=GetUseableWeight();
            $('#txtQty').val((_nUsableQty));
            $('#txtTotalWeight').val((_nUsableQty));
            //$('#txtQtyTwo').val(formatPrice(GetKG(icsRemoveComma($('#txtQty').val()) ,2)));
            //$('#txtQtyTwo').val(formatPrice((icsRemoveComma($('#txtQty').val())*_oRouteSheetSetup.SMUnitValue)));

            //  $('#lblHeaderHankCone-Picker').text(((bIsHank)?"No of Hanks :": "No of Cone :"));
            $('#lblHeaderHankCone-Picker').text(_oRouteSheet.DyeingType);

            $('.region-cone').show();
            $("#tblRouteSheetPacking").datagrid("showColumn", "WarpStr");
            $("#tblRouteSheetPacking").datagrid("showColumn", "Length");
            $('#cboRSInQCSetups').val(1);
            //if(bIsHank==2)
            //{
            //    $('.region-cone').show();
            //    $("#tblRouteSheetPacking").datagrid("showColumn", "WarpStr");
            //    $("#tblRouteSheetPacking").datagrid("showColumn", "Length");
            //}
            //else
            //{
            //    $('.region-cone').hide();
            //    $("#tblRouteSheetPacking").datagrid("hideColumn", "WarpStr");
            //    $("#tblRouteSheetPacking").datagrid("hideColumn", "Length");

            //}
        }

        function Validate(bIsHank)
        {
            debugger;
            if($.trim($('#txtNumberBags').val())==""){
                $('#txtNumberBags').focus();
                $('#txtNumberBags').addClass("errorFieldBorder");
                alert('Bag no required.');
                return false;
            }
            else{
                $('#txtNumberBags').removeClass("errorFieldBorder");
            }
            if($.trim($('#txtNumberBags').val())<0){
                $('#txtNumberBags').focus();
                $('#txtNumberBags').addClass("errorFieldBorder");
                alert('Bag no must be non negative.');
                return false;
            }
            else{
                $('#txtNumberBags').removeClass("errorFieldBorder");
            }

            if($.trim($('#txtQty').val())==""){
                $('#txtQty').focus();
                $('#txtQty').addClass("errorFieldBorder");
                alert('Quantity required.');
                return false;
            }
            else{
                $('#txtQty').removeClass("errorFieldBorder");
            }

            if( parseFloat(icsRemoveComma($('#txtQty').val()))<=0){
                $('#txtQty').focus();
                $('#txtQty').addClass("errorFieldBorder");
                alert('Quantity required.');
                return false;
            }
            else{
                $('#txtQty').removeClass("errorFieldBorder");
            }
            var  bIsInHouse=$('#tabPacking').data('DUHardWinding').IsInHouse;

            if(bIsInHouse==true && $('#cboWarpWeft').val()==0){
                $('#cboWarpWeft').focus();
                $('#cboWarpWeft').addClass("errorFieldBorder");
                alert('Select warp/ weft');
                return false;
            }
            else{
                $('#cboWarpWeft').removeClass("errorFieldBorder");
            }

    

            return true;
        }
        function RefreshObject_Packing(){
            var oRouteSheetPacking={
                PackingID: (_oRouteSheetPacking==null)? 0: _oRouteSheetPacking.PackingID,
                RouteSheetID: _oRouteSheet.RouteSheetID,
                Weight:parseFloat(icsRemoveComma($('#txtQty').val())),
                NoOfHankCone:parseFloat(icsRemoveComma($('#txtHanksCone').val())),
                Warp: $("#cboWarpWeft").val(),
                DyeingOrderDetailID : $('#tabPacking').data('DUHardWinding').DyeingOrderDetailID,
                DUHardWindingID: $('#tabPacking').data('DUHardWinding').DUHardWindingID,
                YarnType: parseInt($("#cboRSInQCSetups").val()),
                Length:$.trim($('#txtLength').val()),
                Note:$.trim($('#txtNote_Packing').val()),
                Params:(_oRouteSheetPacking ==null)? $("#txtNumberBags").val(): 0
            };
            return oRouteSheetPacking;
        }
        function GetRouteSheetPacking(stitle)
        {
            var oRouteSheetPacking=$('#tblRouteSheetPacking').datagrid('getSelected');
            if (oRouteSheetPacking==null || oRouteSheetPacking.PackingID<=0) { alert('Please select an item from list.'); return false;}

            var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oRouteSheetPacking,
                ControllerName: "RouteSheet",
                ActionName: "GetRouteSheetPacking",
                IsWinClose: false
            };

            $.icsDataGet(obj, function (response) {

                if (response.status && response.obj != null) {
                    if (response.obj.PackingID > 0) {
                        _oRouteSheetPacking=response.obj;
                        if(_oRouteSheetPacking.YarnType<=0){_oRouteSheetPacking.YarnType=1;}
                        $("#txtNumberBags").prop('disabled',true);
                        $("#txtNumberBags").val(_oRouteSheetPacking.BagNo);
                        $("#txtQty").val(_oRouteSheetPacking.Weight);
                        $("#txtTotalWeight").val(parseFloat(_oRouteSheetPacking.Weight).toFixed(2));

                        //$("#txtQtyTwo").val(formatPrice(_oRouteSheetPacking.Weight*_oRouteSheetSetup.SMUnitValue));
                        $("#txtHanksCone").val(formatPrice(_oRouteSheetPacking.NoOfHankCone,2));
                        $('#cboWarpWeft').val(_oRouteSheetPacking.Warp);
                        $("#txtLength").val(_oRouteSheetPacking.length);
                        $('#txtNote_Packing').val(_oRouteSheetPacking.Note);
                        $('#cboRSInQCSetups').val(_oRouteSheetPacking.YarnType);
                        $("#winPacking").icsWindow("open", stitle);
                    }
                    else { alert(response.obj.ErrorMessage); }
                }
            });
        }

        function CalculatePackingWeight(nField)
        {
            var nQty = parseFloat($('#txtQty').val());
            var nBags = parseFloat($('#txtNumberBags').val());
            var nTotalWeight = parseFloat($('#txtTotalWeight').val());

            nQty = (isNaN(nQty) ? 0 : nQty);
            nBags = (isNaN(nBags) ? 0 : nBags);
            nTotalWeight = (isNaN(nTotalWeight) ? 0 : nTotalWeight);

            if(nField==1) //--- QTY
            {
                if(nBags>0 && nTotalWeight>0) { nQty = parseFloat(nTotalWeight / nBags).toFixed(2); $('#txtQty').val(nQty); }
                //else if(nQty>=0) {  nTotalWeight = nQty * nBags; $('#txtTotalWeight').val(nTotalWeight); }
            }
            else if(nField==2) //--- WEIGHT
            {
                if(nQty>0) { nBags = Math.ceil(nTotalWeight / nQty); $('#txtNumberBags').val(nBags);}
                else if(nBags>0) { nQty = parseFloat(nTotalWeight / nBags).toFixed(2); $('#txtQty').val(nQty);}
            }
            else if(nField==3)  //--- Total_WEIGHT
            {
                if(nBags>0) { nQty = parseFloat(nTotalWeight / nBags).toFixed(2); $('#txtQty').val(nQty);}
                else if(nQty>0) { nBags = Math.ceil(nTotalWeight / nQty); $('#txtNumberBags').val(nBags);}
            }
        }

        $("#btnAddPacking").click(function (e) {
            debugger;
            var oDUHardWinding = $('#tabPacking').data('DUHardWinding');
      
            if(oDUHardWinding.DUHardWindingID == 0)
            {
                alert("Invalid Order!"); return;
            }
            if(oDUHardWinding.Status != 3)//Completed
            {
                alert("You can add item when status is 'Completed'!"); return;
            }
            if(oDUHardWinding.RouteSheetID>0)
            {
                if(_oRouteSheet==null || _oRouteSheet.RouteSheetID<=0){
                    alert(_oRouteSheetSetup.RSShortName+" required to add packing."); return;
                }
            }
            
          
            ResetRouteSheetPacking(_oRouteSheet.HanksCone);
            $('#lblBag').text("No of Bags :");
            $("#winPacking").icsWindow("open", "Add Packing Items");
        });
        $('#btnEditPacking').click(function (e)
        {
            var oDUHardWinding = $('#tabPacking').data('DUHardWinding');
            if(oDUHardWinding.DUHardWindingID == 0)
            {
                alert("Invalid Order!"); return;
            }
            if(oDUHardWinding.Status != 3)//Completed
            {
                alert("You can add item when status is 'Completed'!"); return;
            }
            if(oDUHardWinding.RouteSheetID>0)
            {
                if(_oRouteSheet==null || _oRouteSheet.RouteSheetID<=0){
                    alert(_oRouteSheetSetup.RSShortName+" required to add packing."); return false;
                }
            }
            ResetRouteSheetPacking(_oRouteSheet.HanksCone);
            $('#lblBag').text("Bag No :");
            GetRouteSheetPacking("Edit Packing Item");
        });
        $('#btnDeletePacking').click(function (e)
        {
            var oRouteSheetPacking=$('#tblRouteSheetPacking').datagrid('getSelected');
            if (oRouteSheetPacking==null || oRouteSheetPacking.PackingID<=0) { alert('Please select an item from list.'); return false;}

            if (!confirm("Confirm to Delete?")) return ;
            var obj =
            {
                BaseAddress: _sBaseAddress,
                Object: oRouteSheetPacking,
                ControllerName: "RouteSheet",
                ActionName: "DeletePacking",
                TableId: "tblRouteSheetPacking",
                IsWinClose: false
            };
            $.icsDelete(obj, function (response) {
                if (response.status && response.Message =='deleted') {
                    PackingQtyRemarks(GetPackingQty());
                
                    $.icsMakeFooterColumn('tblRouteSheetPacking',['BagNo','Weight','WeightTwo','NoOfHankCone']);
                    // UpdateQC();
                }
            });
        });
        $("#btnSavePacking").click(function (e) {
            debugger;
            if (!Validate(_oRouteSheet.HanksCone)) return false;
            var oRouteSheetPacking=RefreshObject_Packing();

            if(!oRouteSheetPacking.DyeingOrderDetailID > 0)
            {
                alert("Invalid Order!"); return;
            }
        
            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oRouteSheetPacking,
                ObjectId: oRouteSheetPacking.PackingID,
                ControllerName: "RouteSheet",
                ActionName: (oRouteSheetPacking.PackingID>0)? "SavePacking" : "PackingMultiple",
                TableId: (oRouteSheetPacking.PackingID>0)? "tblRouteSheetPacking" : "",
                IsWinClose: true,
                Message: "Save Successfully."
            };
            $.icsSave(obj, function (response) {
                if (response.status && response.obj != null) {
                    if (response.obj.RouteSheetPackings.length > 0 && response.obj.RouteSheetPackings[0].PackingID>0) {
                        for(var i=0; i<response.obj.RouteSheetPackings.length;i++){
                            $('#tblRouteSheetPacking').datagrid('appendRow',response.obj.RouteSheetPackings[i]);
                        }
                    
                        $.icsMakeFooterColumn('tblRouteSheetPacking',['BagNo','Weight','WeightTwo','NoOfHankCone']);
                        ResetRouteSheetPacking(false);
                    }
                    else if(response.obj.PackingID>0){
                        ResetRouteSheetPacking(false);
                    }
                    PackingQtyRemarks(GetPackingQty());
                    UpdateQC();
                }
            });
        });
        $("#btnClosePacking").click(function (e) {
            $("#winPacking").icsWindow("close");
        });

        $('#btnPrintCard_Packing').click(function(){
            debugger;
            var oRouteSheet = $('#tabPacking').data('RouteSheet');
            if (oRouteSheet ==null || oRouteSheet.RouteSheetID <=0 )
            {
                alert("Please select an item from list.");
                return ;
            }
            sessionStorage.setItem("BUID", _nBUID);
            window.open(_sBaseAddress+ "/RouteSheet/PrintRSPackingCard?nId="+ oRouteSheet.RouteSheetID, "_blank");
        });
        $('#btnPrint_Packing').click(function (e)
        {
            var oRouteSheet = $('#tabPacking').data('RouteSheet');
            if (oRouteSheet ==null || oRouteSheet.RouteSheetID <=0 ) { alert("Please select an item from list."); return ; }
            var tsv=((new Date()).getTime())/1000;
            window.open(_sBaseAddress+ "/RouteSheet/PrintRSPacking?nId="+oRouteSheet.RouteSheetID, "_blank");
        });
        $("#btnAddSendToDelivery").click(function (e) {
            debugger;

            var oDUHardWinding = $('#tabPacking').data('DUHardWinding');
            if(!oDUHardWinding.DyeingOrderDetailID > 0)
            {
                alert("Invalid Order!"); return;
            }
            if(oDUHardWinding.IsInHouse==true)
            {
                alert("This is In House Production, It will be send Weaving Store !"); return;
            }
            if(!oDUHardWinding.DUHardWindingID > 0)
            {
                alert("Invalid Order!"); return;
            }
            oDUHardWinding.Qty=parseFloat(icsRemoveComma($('#txtQty_Rec').val()));
            if( oDUHardWinding.Qty<=0){ alert("Qty required!"); $('#txtQty_Rec').focus(); return;}

            oDUHardWinding.Note=$('#txtNote').val();
            if (!confirm("Confirm to Send Delivery Store?")) return;

            $("#btnAddSendToDelivery").hide();

            $.ajax({
                type: "POST",
                dataType: "json",
                url: _sBaseAddress + "/DUHardWinding/SendToRequsitionToDeliveryHWPartily",
                traditional: true,
                data: JSON.stringify(oDUHardWinding),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
               
                    debugger;
                    var oITs = jQuery.parseJSON(data);

                    if(oITs[0].ErrorMessage=="" || oITs[0].ErrorMessage==null)
                    {
                        if (oITs!=null && oITs.length>0)
                        {
                            DynamicRefreshList(oITs, 'tblITs');
                        }
                    }
                    else
                    {
                        alert(oITs[0].ErrorMessage);
                    }
                
                    $("#btnAddSendToDelivery").show();
              
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        
   
        });

        $("#btnDODAssign").click(function () {

            var oDUHardWinding = $('#tabPacking').data('DUHardWinding');
      
            if(oDUHardWinding.DUHardWindingID == 0)
            {
                alert("Invalid Order!"); return;
            }
            if(parseInt(oDUHardWinding.RouteSheetID)>0)
            {
                alert("Invalid Batch!"); return;
            }
            oDUHardWinding.DyeingOrderNo="";
            GetsDyeingOrder(oDUHardWinding);
        });
        function GetsDyeingOrder(oDUHardWinding){

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oDUHardWinding,
                ControllerName: "DUHardWinding",
                ActionName: "GetsDOD",
                IsWinClose: false
            };

            $.icsDataGets(obj, function (response) {

                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].DyeingOrderID > 0) {
                        debugger;
                        var tblColums = [];
                        var oColumn = { field: "OrderNoFull", title: "OrderNo", width: 100, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "ColorName", title: "Color", width: 70, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "ColorNo", title: "ColorNo", width: 70, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "PantonNo", title: "PantonNo", width: 70, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "ApproveLotNo", title: "ApproveLotNo", width: 160, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "RefNo", title: "RefNo", width: 160, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Yarn Type", width: 70, align: "left" };tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winDyeingOrderPicker',
                            winclass:'clsDyeingOrderPicker',
                            winwidth: 550,
                            winheight: 460,
                            tableid: 'tblDyeingOrderPicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName:'OrderNoFull',
                            windowTittle: 'Order List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                    }
                    else { alert(response.objs[0].ErrorMessage); }
                }
                else{
                    alert("No marketing person found.");
                }
            });


        }
        function IntializePickerbutton(oPickerobj) {
            $("#" + oPickerobj.winid).find("#btnOk").click(function () {
                SetPickerValueAssign(oPickerobj);
            });
            $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
                if (e.which === 13) {
                    SetPickerValueAssign(oPickerobj);
                }
            });
        }
        function SetPickerValueAssign(oPickerobj) {
            var oreturnObj = null, oreturnObjs = [];
            if (oPickerobj.multiplereturn) {
                oreturnObjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
            } else {
                oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
            }

            if (oPickerobj.winid == 'winDyeingOrderPicker')
            {
                if (oreturnObj != null && oreturnObj.DyeingOrderDetailID> 0)
                {
                    var oDUHardWinding = $('#tabPacking').data('DUHardWinding');
      
                    if(oDUHardWinding.DUHardWindingID == 0)
                    {
                        alert("Invalid Order!"); return;
                    }
                    if(parseInt(oDUHardWinding.RouteSheetID)>0)
                    {
                        alert("Invalid Batch!"); return;
                    }
                    oDUHardWinding.DyeingOrderDetailID=oreturnObj.DyeingOrderDetailID;
                    if(parseInt(oDUHardWinding.DyeingOrderDetailID)<=0)
                    {
                        alert("Invalid Order Select!"); return;
                    }
                    var obj = {
                        BaseAddress: _sBaseAddress,
                        Object: oDUHardWinding,
                        ObjectId: oDUHardWinding.DUHardWindingID,
                        ControllerName: "DUHardWinding",
                        ActionName:"DODAssign",
                        TableId: "",
                        IsWinClose: false,
                        Message: "Color assigned successfully done."
                    };
                    $.icsSave(obj, function (response) {
                        if (response.status && response.obj != null) 
                        {
                            debugger;
                            if (response.obj.DyeingOrderDetailID> 0 ) 
                            {
                                RefreshControl(response.obj,null);
                            }
                        }
                    });

                }
                else
                {
                    alert("Please select a order(s).");
                    return false;
                }
            }

      
      
            $("#" + oPickerobj.winid).icsWindow("close");
            $("#" + oPickerobj.winid).remove();
        }
        $("#btnUpdateReceiveDate").click(function () {

            var oDUHardWinding = $('#tabPacking').data('DUHardWinding');
      
            if(oDUHardWinding.DUHardWindingID == 0)
            {
                alert("Invalid Order!"); return;
            }

            oDUHardWinding.ReceiveDate =$('#dtReceiveDate').datetimebox('getValue');
            if (!confirm("Confirm to Change Received Date?")) return ;
            debugger;
         

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oDUHardWinding,
                ObjectId: oDUHardWinding.DUHardWindingID,
                ControllerName: "DUHardWinding",
                ActionName:"UpdateReceivedate",
                TableId: "",
                IsWinClose: false,
                Message: "Received Date Chaned successfully."
            };
            $.icsSave(obj, function (response) {
                if (response.status && response.obj != null) 
                {
                    oDUHardWinding=response.obj ;
                    debugger;
                    alert(  oDUHardWinding.ReceiveDate);
                    if (oDUHardWinding.ErrorMessage=="" || oDUHardWinding.ErrorMessage==null)
                    {
                       
                     //   $scope.gridOptions.data[nIndex]=oDUHardWinding;
                    }
                    else
                    {
                        alert(oDUHardWinding.ErrorMessage);
                    }
                }
            });


        });
</script>