@model ESimSol.BusinessObjects.AuthorizationRole
<div style="font-family: Tahoma; vertical-align:top;">
    <table border="0" cellspacing="2" cellpadding="2">
        <tr>
            <td style="background-color: #CFB53B; text-align: center; width: 845px; color: White">
                <label id="lblHeaderName" style="font-size: 15px; font-weight: bold; text-decoration: Underline;width: 845px">Edit Authorization Role</label>
            </td>
        </tr>
    </table>
    <fieldset>
        <table border="0" cellpadding="2" style="font-size: 12px">
            <tr>
                <td style="width: 150px; text-align: right">
                    Role No:
                </td>
                <td style="width: 300px; text-align: left">
                    @Html.TextBoxFor(model => model.RoleNo, new { style = "width: 300px;", id = "txtRoleNo", disabled = "disabled" })
                </td>
            </tr>
            <tr>
                <td style="width: 150px; text-align: right">
                    Module Name :
                </td>
                <td style="width: 300px; text-align: left">
                    @Html.DropDownListFor(model => model.ModuleNameInt, Model.ModuleNameObjs.Select(x => new SelectListItem() { Text = x.Value, Value = x.id.ToString() }), new { id = "cboModuleName", style = "width: 300px;" })
                </td>
            </tr>
            <tr>
                <td style="width: 150px; font-size: 12px; text-align: right">
                    Operation:
                </td>
                <td style="width: 300px; text-align: left">
                    @Html.DropDownListFor(model => model.OperationTypeInt, Model.RoleOperationTypeObjs.Select(x => new SelectListItem() { Text = x.Value, Value = x.id.ToString() }), new { id = "cboOperation", style = "width: 300px;" })
                </td>

            </tr>
            <tr>
                <td style="width: 150px; font-size: 12px; text-align: right">
                    Note :
                </td>
                <td style="width: 300px; text-align: left">
                    @Html.TextBoxFor(model => model.Note, new { style = "width: 300px;", id = "txtNote" })
                </td>
            </tr>
        </table>
    </fieldset>
    <fieldset>
        <legend style="font-weight: bold">Action : </legend>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; width: 820px font-weight:bold">
            <tr>
                <td style="width: 720px; text-align: right"></td>
                <td style="width: 50px">
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" id="btnSave" plain="true" onclick="Save()">Save</a>
                </td>
                <td style="width: 50px">
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true" onclick="Close()">Close</a>
                </td>
            </tr>
        </table>
    </fieldset>
</div>
<script type="text/javascript">
var _oAuthorizationRole=null;    
var _sBaseAddress="";
$(document).ready(function () {    
    _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    _oAuthorizationRole =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));        
    var obj = window.dialogArguments;
    if(obj.Name == 'View Authorization Role')
    {
        document.getElementById('cboModuleName').disabled = true;
        document.getElementById('cboOperation').disabled = true;
        document.getElementById('txtNote').disabled = true;
        document.getElementById('btnSave').style.display = 'none';
    }     
});

function Save()
{   
      if(!ValidateInput()) return;
      var oAuthorizationRole = {};
      oAuthorizationRole.AuthorizationRoles=RefreshObjects();
        $.ajax({
                type: "POST",
                dataType: "json",
                url : _sBaseAddress+"/AuthorizationRole/Save",
                traditional: true,
                data:  JSON.stringify(oAuthorizationRole),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
               debugger;
                var _oAuthorizationRoles= jQuery.parseJSON(data);
                if (_oAuthorizationRoles.length >0)
                {
                       alert("Data Save Successfully!!");
                       window.returnValue= _oAuthorizationRoles[0];
                       window.close();
                }
                else
                {
                        alert(_oAuthorizationRoles[0].ErrorMessage);
                 }
                 },
            error: function (xhr, status, error)
                {
                    alert(error);
                }
            });

}



function ValidateInput()
{
    if($('#cboModuleName').val()===null || $('#cboModuleName').val()===undefined || parseInt($('#cboModuleName').val())<=0)
    { 
        alert("Please Choose Module Name "); 
        $('#cboModuleName').focus(); 
        return false; 
    }
    if($('#cboOperation').val()===null || $('#cboOperation').val()===undefined || parseInt($('#cboOperation').val())<=0)
    { 
        alert("Please Choose Operation name"); 
        $('#cboOperation').focus(); 
        return false; 
    }
    return true;
}

function RefreshObjects()
{    
      var oAuthorizations =[];
      var oAuthorizationRole= {
            AuthorizationRoleID:_oAuthorizationRole.AuthorizationRoleID,
            RoleNo:$("#txtRoleNo").val(),
            ModuleNameInt : parseInt($("#cboModuleName").val()),
            OperationTypeInt : parseInt($("#cboOperation").val()),            
            Note :$("#txtNote").val()
          };
     oAuthorizations.push(oAuthorizationRole);
     return oAuthorizations;
}

function Close()
{

    window.close();
}

$(document).keydown(function(e) {
    if(e.which == 27)//escape=27
    {
        window.close();
    }
});


</script>
