@model IEnumerable<ESimSol.BusinessObjects.ITaxHeadConfiguration>
@{
    ViewBag.Title = "ITax Head Configuration";
}


<div class="menuMainCollectionTable">
    <table id="tblITaxHeadConfiguration" title="ITax Head" class="easyui-datagrid" style="width:100%;height:100%" fitcolumns="false" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbar">
        <thead>
            <tr>
                <th field="SalaryHeadName" width="13%" align="left">Salary Head</th>
                @*<th field="ExemptedStr" width="12%" align="center">Exempt/Liable</th>*@
                @*<th field="MaxExemptAmount" width="12%" align="right" formatter="formatPrice">Exempt Amount</th>
                <th field="CalculationOnStr" width="15%" align="center">Calculation No</th>
                <th field="CalculationHead" width="15%" align="center">Calculation Head</th>
                <th field="PercentOfCalculation" width="10%" align="right" formatter="formatPrice">% of Calculation</th>*@
                <th field="DescriptionStr" width="75%" align="center">Description</th>
                <th field="InactiveDateStr" width="10%" align="center">Inactive Date</th>
            </tr>
        </thead>
    </table>
    <div id="toolbar">
        <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">New</a>
        <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
        <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
        <a id="btnActivity" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" plain="true">Inactive</a>
        &nbsp;
        &nbsp;
        <input id="chkSearchActive" type="checkbox" />Active
        <input id="chkSearchInActive" type="checkbox" />InActive
    </div>

    <div id="winITaxHeadConfiguration" class="easyui-window winstyle" title="ITax Head" style="width:450px; height:auto" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">
        <div style="width: 98%; font-family: Tahoma;">
            <table class="tbl-Win">
                <tr class="templet">
                    <td class="td-col-6 align-right">
                        <label>Salary Head :</label>
                    </td>
                    <td class="td-styler td-col-13" colspan="3">
                        <select id="cboSalaryHead" class="cbo-styler"></select>
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr class="templet">
                    <td class="td-col-6 align-right"></td>
                    <td class="td-styler td-col-13" colspan="3">
                        <div style="width:100%; float:left;">
                            <div style="width:50%; float:left;">
                                <input id="chkExempt" type="checkbox" />
                                <label>Exempt </label>
                            </div>
                            <div style="width:50%; float:left;" class="align-right">
                                <input id="chkNonExempt" type="checkbox" />
                                <label style="margin-right:10px;">Full Taxable</label>
                            </div>
                        </div>
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr class="templet">
                    <td class="td-col-6 align-right">
                        <label>Yearly</label>
                    </td>
                    <td class="td-styler td-col-13" colspan="3">
                        <span id="sp_description">
                            <input id="txtMaxExemptAmount" class="number txt-styler reset-text" placeholder="Exempt Amount" />(BDT)
                            or
                            <input id="txtPercentage" class="number txt-styler reset-text" />(%)

                        </span>
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr class="templet">
                    <td class="td-col-6 align-right">
                        <label>of</label>
                    </td>
                    <td class="td-styler td-col-13" colspan="3">
                        <span id="sp_description">
                            <select id="cboBasicHead" class="cbo-styler"></select>

                        </span>
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                <tr class="templet">
                    <td class="td-col-6 align-right">
                        <label></label>
                    </td>
                    <td class="td-styler td-col-13" colspan="3">
                        <span id="sp_description">

                            whichever is lower will be exampted. Rest of the amount will be treated as taxable Income.
                        </span>
                    </td>
                    <td class="td-styler td-col-1"></td>
                </tr>
                @*<tr class="templet">
                        <td class="td-col-6 align-right">
                            <label>Exempt Amount :</label>
                        </td>
                        <td class="td-styler td-col-13" colspan="3">
                            <input id="txtMaxExemptAmount" class="number txt-styler reset-text" placeholder="Exempt Amount" />
                        </td>
                        <td class="td-styler td-col-1"></td>
                    </tr>
                    <tr class="templet">
                        <td class="td-col-6 align-right">
                            <label>Calculation On :</label>
                        </td>
                        <td class="td-styler td-col-13" colspan="3">
                            <select id="cboSalaryCalculationOn" class="cbo-styler"></select>
                        </td>
                        <td class="td-styler td-col-1"></td>
                    </tr>
                    <tr class="templet">
                        <td class="td-col-6 align-right">
                            <label>Calculation Head :</label>
                        </td>
                        <td class="td-styler td-col-13" colspan="3">
                            <select id="cboBasicHead" class="cbo-styler"></select>
                        </td>
                        <td class="td-styler td-col-1"></td>
                    </tr>
                    <tr class="templet">
                        <td class="td-col-6 align-right">
                            <label>Percentage:</label>
                        </td>
                        <td class="td-styler td-col-13" colspan="3">
                            <input id="txtPercentage" class="number txt-styler reset-text" placeholder="Percentage of Calculation" />
                        </td>
                        <td class="td-styler td-col-1"></td>
                    </tr>*@

                <tr>
                    <td colspan="5" style="text-align:right; padding-top:10px; padding-bottom:10px;">
                        <a id="btnSaveITaxHeadConfiguration" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnCloseITaxHeadConfiguration" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

<style type="text/css">
    .tbl-Win {
        width: 100%;
    }

    .td-styler input, textarea, select {
        padding-left: 5px;
    }

    .txt-styler {
        width: 32%;
    }

    .txt-styler-picker {
        width: 70%;
    }

    .cbo-styler {
        width: 98%;
    }

    .txt-styler-Note {
        width: 98.5%;
    }
</style>


<script type="text/javascript">
    var _sBaseAddress="";
    var _oITaxHeadConfigurations=[];
    var _oITaxHeadConfiguration = null;
    var _oSalaryHeads=[];

    $(document).ready(function ()
    {
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oITaxHeadConfigurations =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oSalaryHeads=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.SalaryHeads));
        var oBasicHeads=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.BasicHeads));
        var oSalaryCalculationOns=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.EnumSalaryCalculationOns));
        $('.number').icsCurrencyBox();


        $("#cboBasicHead").icsLoadCombo({
            List: oBasicHeads,
            OptionValue: "SalaryHeadID",
            DisplayText: "Name",
            InitialValue:""
        });
        
        //$("#cboSalaryCalculationOn").icsLoadCombo({
        //    List: oSalaryCalculationOns,
        //    OptionValue: "Value",
        //    DisplayText: "Text",
        //    InitialValue:"Default"
        //});
        DynamicRefreshList(_oITaxHeadConfigurations, 'tblITaxHeadConfiguration');
    });

    $(document).keydown(function (e) { if (e.keyCode == 27) { $('div').icsWindow('close'); } });

    $('#tblITaxHeadConfiguration').datagrid({ onSelect: function (rowIndex, rowData) { OperationPerforms(rowIndex, rowData); } });

    function OperationPerforms(rowIndex, rowData) {
        if (rowData != null && rowData.ITaxHeadConfigurationID>0) {
            if(rowData.InactiveDateStr=="")
                $('#btnEdit,#btnDelete,#btnActivity').show();
            else
                $('#btnEdit,#btnDelete,#btnActivity').hide();
        }
    }


    function ExemptSelection(bIsDisabled){

        $('#txtMaxExemptAmount,#cboBasicHead,#txtPercentage').prop('disabled',bIsDisabled);
        if(bIsDisabled){
            $('#cboBasicHead').val(0);
            $('#txtMaxExemptAmount,#txtPercentage').val("");
        }
    }

    $('#chkExempt').change(function(e){
        
        if($('#chkExempt').is(':checked')){
            ExemptSelection(false);
            $('#chkNonExempt').prop('checked',false);
        }
        else{
            ExemptSelection(true);
            $('#chkNonExempt').prop('checked',true);
        }
    });
    
    $('#chkNonExempt').change(function(e){
        if($('#chkNonExempt').is(':checked')){
            ExemptSelection(true);
            $('#chkExempt').prop('checked',false);
        }
        else{
            ExemptSelection(false);
            $('#chkExempt').prop('checked',true);
        }
    });

    function Validate()
    {
        debugger;
        if($('#cboSalaryHead').val()<=0){
            $('#cboSalaryHead').focus();
            $('#cboSalaryHead').addClass("errorFieldBorder");
            alert('Please select salary head.');
            return false;
        }
        else{
            $('#cboSalaryHead').removeClass("errorFieldBorder");
        }

        if($('#chkExempt').is(':checked')){

            if($.trim($('#txtMaxExemptAmount').val())==""){
                $('#txtMaxExemptAmount').focus();
                $('#txtMaxExemptAmount').addClass("errorFieldBorder");
                alert('Exempt amount required.');
                return false;
            }
            else{
                $('#txtMaxExemptAmount').removeClass("errorFieldBorder");
            }
            if(icsRemoveComma($("#txtMaxExemptAmount").val())<=0){
                $('#txtMaxExemptAmount').focus();
                $('#txtMaxExemptAmount').addClass("errorFieldBorder");
                alert('Exempt amount must be greater than zero.');
                return false;
            }
            else{
                $('#txtMaxExemptAmount').removeClass("errorFieldBorder");
            }

            //if($('#cboSalaryCalculationOn').val()<=0){
            //    $('#cboSalaryCalculationOn').focus();
            //    $('#cboSalaryCalculationOn').addClass("errorFieldBorder");
            //    alert('Please select calculation no.');
            //    return false;
            //}
            //else{
            //    $('#cboSalaryCalculationOn').removeClass("errorFieldBorder");
            //}

            if($('#cboBasicHead').val()<=0){
                $('#cboBasicHead').focus();
                $('#cboBasicHead').addClass("errorFieldBorder");
                alert('Please select calculation head.');
                return false;
            }
            else{
                $('#cboBasicHead').removeClass("errorFieldBorder");
            }
            
            if($.trim($('#txtPercentage').val())==""){
                $('#txtPercentage').focus();
                $('#txtPercentage').addClass("errorFieldBorder");
                alert('Percentage required.');
                return false;
            }
            else{
                $('#txtPercentage').removeClass("errorFieldBorder");
            }
            if(icsRemoveComma($("#txtPercentage").val())<=0){
                $('#txtPercentage').focus();
                $('#txtPercentage').addClass("errorFieldBorder");
                alert('Percentage must be greater than zero.');
                return false;
            }
            else{
                $('#txtPercentage').removeClass("errorFieldBorder");
            }
        }
        return true;
    }

    function ResetITaxHeadConfiguration(){
        _oITaxHeadConfiguration=null;
        $('.reset-text').val("");
        $('#cboSalaryHead,#cboBasicHead').val(0);
        $('#chkExempt').prop('checked',true);
        $('#chkNonExempt').prop('checked',false);
        $('input,select,textarea').removeClass("errorFieldBorder");

    }

    function RefreshObject(){
        var oITaxHeadConfiguration={
            ITaxHeadConfigurationID: (_oITaxHeadConfiguration==null)? 0: _oITaxHeadConfiguration.ITaxHeadConfigurationID,
            SalaryHeadID: $("#cboSalaryHead").val(),
            IsExempted: $('#chkExempt').is(':checked'),
            MaxExemptAmount: icsRemoveComma($("#txtMaxExemptAmount").val()),
            CalculationOn: /*$("#cboSalaryCalculationOn").val()*/2,
            CalculationSalaryHeadID : $("#cboBasicHead").val(),
            PercentOfCalculation: icsRemoveComma($("#txtPercentage").val()),
        };
        return oITaxHeadConfiguration;
    }

    $("#btnAdd").click(function (e) {
        ResetITaxHeadConfiguration();
        RestSalaryHead(0);
        $("#winITaxHeadConfiguration").icsWindow("open", "Add ITax Head");
    });

    $('#btnEdit').click(function (e)
    {
        var oITaxHeadConfiguration=$('#tblITaxHeadConfiguration').datagrid('getSelected');
        if (oITaxHeadConfiguration==null || oITaxHeadConfiguration.ITaxHeadConfigurationID<=0) { alert('Please select an item from list.'); return false;}
        ResetITaxHeadConfiguration();
        RestSalaryHead(oITaxHeadConfiguration.SalaryHeadID);
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oITaxHeadConfiguration,
            ControllerName: "IncomeTaxConfigure",
            ActionName: "GetITaxHeadConfiguration",
            IsWinClose: false
        };

        $.icsDataGet(obj, function (response) {

            if (response.status && response.obj != null) {
                if (response.obj.ITaxHeadConfigurationID > 0) {
                    _oITaxHeadConfiguration=response.obj;
                    $("#cboSalaryHead").val(_oITaxHeadConfiguration.SalaryHeadID);
                    $('#chkExempt').prop('checked',_oITaxHeadConfiguration.IsExempted);
                    $('#chkNonExempt').prop('checked',!_oITaxHeadConfiguration.IsExempted);
                    ExemptSelection(!_oITaxHeadConfiguration.IsExempted);
                    $("#txtMaxExemptAmount").val(formatPrice(_oITaxHeadConfiguration.MaxExemptAmount));
                    //$("#cboSalaryCalculationOn").val(_oITaxHeadConfiguration.CalculationOn);
                    $("#cboBasicHead").val(_oITaxHeadConfiguration.CalculationSalaryHeadID);
                    $("#txtPercentage").val(formatPrice(_oITaxHeadConfiguration.PercentOfCalculation));
                    $("#winITaxHeadConfiguration").icsWindow("open", "Edit Income Tax  Head");
                }
                else { alert(response.obj.ErrorMessage); }
            }
        });


    });

    $('#btnDelete').click(function (e)
    {
        var oITaxHeadConfiguration=$('#tblITaxHeadConfiguration').datagrid('getSelected');
        if (oITaxHeadConfiguration==null || oITaxHeadConfiguration.ITaxHeadConfigurationID<=0) { alert('Please select an item from list.'); return false;}

        if (!confirm("Confirm to Delete?")) return ;
        var obj =
        {
            BaseAddress: _sBaseAddress,
            Object: oITaxHeadConfiguration,
            ControllerName: "IncomeTaxConfigure",
            ActionName: "ITaxHeadConfiguration_Delete",
            TableId: "tblITaxHeadConfiguration",
            IsWinClose: false
        };
        $.icsDelete(obj);
    });

    $("#btnSaveITaxHeadConfiguration").click(function (e) {

        if (!Validate()) return false;
        var oITaxHeadConfiguration=RefreshObject();
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oITaxHeadConfiguration,
            ObjectId: oITaxHeadConfiguration.ITaxHeadConfigurationID,
            ControllerName: "IncomeTaxConfigure",
            ActionName: "ITaxHeadConfiguration_IU",
            TableId: "tblITaxHeadConfiguration",
            IsWinClose: true,
            Message: (oITaxHeadConfiguration.ITaxHeadConfigurationID>0)? "Update Successfully.":"Save Successfully."
        };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.ITaxHeadConfigurationID > 0) {
                    ResetITaxHeadConfiguration();
                }
            }
        });
    });

    $("#btnCloseITaxHeadConfiguration").click(function (e) {
        $("#winITaxHeadConfiguration").icsWindow("close");
    });

    $("#btnActivity").click(function (e) {

        var oITaxHeadConfiguration=$('#tblITaxHeadConfiguration').datagrid('getSelected');
        if (oITaxHeadConfiguration==null || oITaxHeadConfiguration.ITaxHeadConfigurationID<=0) { alert('Please select an item from list.'); return false;}
        if(confirm("Are you sure inactive? No way to get it back."))

            var obj = {
                BaseAddress: _sBaseAddress,
                Object: oITaxHeadConfiguration,
                ObjectId: oITaxHeadConfiguration.ITaxHeadConfigurationID,
                ControllerName: "IncomeTaxConfigure",
                ActionName: "ITaxHeadConfiguration_Activity",
                TableId: "tblITaxHeadConfiguration",
                IsWinClose: true,
                Message: "Inactive Successfully."
            };
        $.icsSave(obj, function (response) {
            if (response.status && response.obj != null) {
                if (response.obj.ITaxHeadConfigurationID > 0) {
                    ResetITaxHeadConfiguration();
                    OperationPerforms(-1,response.obj);
                }
            }
        });
    });

    function RestSalaryHead(nSalaryHeadID)
    {
        var oList=$('#tblITaxHeadConfiguration').datagrid('getRows');
        //SalaryHeadID: $("#cboSalaryHead").val(),
        var oNewList=[];
        for(var i=0;i<_oSalaryHeads.length;i++)
        {
            var IsExist=true;
            for(var j=0;j<oList.length;j++)
            {
                if(_oSalaryHeads[i].SalaryHeadID == oList[j].SalaryHeadID && oList[j].InactiveDateStr=="" && nSalaryHeadID !=_oSalaryHeads[i].SalaryHeadID)
                {
                    IsExist=false;
                }
            }
            if(IsExist)
            {oNewList.push(_oSalaryHeads[i]);}
        }

        $("#cboSalaryHead").icsLoadCombo({
            List: oNewList,
            OptionValue: "SalaryHeadID",
            DisplayText: "Name",
            InitialValue:""
        });
    }
    
    $("#chkSearchActive").click(function (e) {
        if ($('#chkSearchActive').is(":checked"))
        {
            $('#chkSearchInActive').prop("checked", false)
            Search(true);
        }
    });

    $("#chkSearchInActive").click(function (e) {
        if ($('#chkSearchInActive').is(":checked"))
        {
            $('#chkSearchActive').prop("checked", false);
            Search(false);
        }
    });

    function Search(bActivity)
    {  
        $.ajax({
            type: "POST",
            dataType: "json",
            url: _sBaseAddress + "/IncomeTaxConfigure/Gets_ITaxHeadConfiguration_By_Activity",
            traditional: true,
            data: JSON.stringify({bActivity:bActivity}),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                var oITaxHeadConfigurations = jQuery.parseJSON(data);
                if(oITaxHeadConfigurations.length > 0) {
                    DynamicRefreshList(oITaxHeadConfigurations, "tblITaxHeadConfiguration");
                }
                else{DynamicRefreshList([], "tblITaxHeadConfiguration")};
            },
            error: function(xhr, status, error) {
                alert(error);
            }
        });

        //var oITaxRateSchemeSlabs=[];
        //var oITaxRebateSchemes=[];
    
        //for(var j=0; j<_oITaxRateSchemeSlabs.length;j++)
        //{
        //    if(oITaxRateScheme.ITaxRateSchemeID==_oITaxRateSchemeSlabs[j].ITaxRateSchemeID)
        //    {
        //        oITaxRateSchemeSlabs.push(_oITaxRateSchemeSlabs[j]);
        //    }
        //}
        //for(var k=0; k<_oITaxRebateSchemes.length;k++)
        //{
        //    if(oITaxRateScheme.ITaxRateSchemeID==_oITaxRebateSchemes[k].ITaxRateSchemeID)
        //    {
        //        oITaxRebateSchemes.push(_oITaxRebateSchemes[k]);
        //    }
        //}
           

        
    }  

</script>


