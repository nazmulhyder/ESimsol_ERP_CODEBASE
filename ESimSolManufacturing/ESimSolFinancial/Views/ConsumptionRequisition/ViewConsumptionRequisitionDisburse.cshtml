<html>
<head>
    @{ViewBag.Title = "Consumption Requisition Disburse";} 
</head>
<body>
    @model ESimSol.BusinessObjects.ConsumptionRequisition
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable">
        <div id="divConsumptionRequisition" class="easyui-panel" title="Consumption Requisition" style="font-family:Tahoma; text-align:center; height:89%;">
            <div style="width:100%;">
                <fieldset>
                    <legend style="font-weight:bold">Consumption Requisition info: </legend>
                    <table style="width:100%" cellpadding="1" cellspacing="1">
                        <tr>
                            <td style="width: 12%; text-align: right">
                                File No:
                            </td>
                            <td style="width: 25%; text-align: left">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:30%">@Html.TextBoxFor(model => model.RefNo, new { style = "width: 100%;", id = "txtRefNo", disabled = "disabled" })</td>
                                        <td style="width:30%; text-align:right;">CR Type :</td>
                                        <td style="width:40%">
                                            <select id="cboCRType" style="width:100%"></select>
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width: 10%; text-align:right;">
                                Requisition No:
                            </td>
                            <td style="width:18%; text-align:left;">
                                @Html.TextBoxFor(model => model.RequisitionNo, new { style = "width:99%;", id = "txtRequisitionNo" })
                            </td>
                            <td style="width:10%; text-align: right">
                                Requisition By :
                            </td>
                            <td style="width: 25%; text-align: right">
                               @Html.TextBoxFor(model => model.RequisitionByName, new { style = "width: 98%;", id = "txtRequisitionByName", disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 12%; text-align: right">
                                <label id="lblRequisitionFor">Requisition For :</label>
                            </td>
                            <td colspan="3" style="width: 53%; text-align: left">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:90%;">@Html.TextBoxFor(model => model.RequisitionForName, new { style = "width: 99%;", id = "txtRequisitionFor", placeholder = "Press Enter With Style No/Consumption Unit Name" })</td>
                                        <td style="width:10%; text-align:right;"><input type="button" style="width:100%" value="Pick" id="btnPickRequisitionFor" /></td>
                                    </tr>
                                </table>
                            </td>                           
                            <td style="width:10%; text-align: right">
                                Store :
                            </td>
                            <td style="width: 25%; text-align: right">
                                <select id="cboStore" style="width: 100%"></select>
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 12%; text-align: right">
                                Remarks :
                            </td>
                            <td style="width:25%; text-align: left">
                                @Html.TextBoxFor(model => model.Remarks, new { style = "width:99%;", id = "txtRemarks" })
                            </td> 
                            <td style="width: 10%; text-align:right;">
                                Issue Date:
                            </td>
                            <td style="width:18%; text-align:left;">
                                <input id="txtIssueDate" type="text" class="easyui-datebox" style="width: 100%;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                            </td>                                   
                            <td style="width:10%; text-align: right">
                                Sub Ledger :
                            </td>
                            <td style="width: 25%; text-align: right">
                                @Html.TextBoxFor(model => model.SubLedgerName, new { style = "width: 98%;", id = "txtSubLedgerName", disabled = "disabled" })
                            </td>
                        </tr>                                
                    </table>
                </fieldset>
            </div>

            <table id="tblConsumptionRequisitionDetail" title="Consumption Requisition Details" class="easyui-datagrid" style="height:320px; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar">
                <thead>
                    <tr>
                        <th field="ProductCode" width="10%" align="left">Code</th>
                        <th field="ProductName" width="15%" align="left">Product</th>
                        <th field="LotNo" width="15%" align="left">Lot No</th>
                        <th field="StyleNo" width="15%" align="left">Style No</th>
                        <th field="ColorName" width="10%" align="left">Color</th>    
                        <th field="SizeName" width="10%" align="left">Size</th>                                
                        <th field="Symbol" width="5%" align="left">Unit</th>
                        <th field="Quantity" width="7%" formatter="formatPrice4digit" align="right">Qty</th>                        
                        @*<th field="UnitPrice" width="10%" formatter="formatPrice" align="right">Rate</th>
                        <th field="Amount" width="10%" formatter="formatPrice" align="right">Amount</th>*@
                    </tr>
                </thead>                
            </table>
            <div id="toolbar">
                <table border="0" cellpadding="1" cellspacing="1" style="width:100%;">
                    <tr>
                        <td style="width:50%"><input type="text" placeholder="Press Enter With Product Name" id="txtProductName" style="width:78%" /><input type="button" style="width:10%;" id="btnProductPiker" value="Pick" /><input type="button" style="width:10%;" id="btnSuggProductPiker" value="Sugg" /></td>
                        <td style="width:10%;">@*<select id="cboUnit" style="width:100%;"></select>*@</td>
                        <td style="width:40%"><input type="text" placeholder="Press Enter With Lot No" id="txtLot" style="width:74%" /><input type="button" style="width:12%;" id="btnLotPicker" value="Pick" /><input type="button" style="width:12%;" id="btnSuggLotPicker" value="Sugg" /></td>                        
                    </tr>
                    <tr>
                        <td style="width:50%"><input type="text" id="txtQty" placeholder="Type Qty" style="width:15%" /></td>                        
                        <td style="width:10%;text-align:right;"></td>
                        <td style="width:40%;text-align:right;">                            
                            <a id="btnAddDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                            <a id="btnRemoveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                            <a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"></a>
                        </td>
                    </tr>
                </table>
            </div>
            <table border="0" cellpadding="0" cellspacing="0" style="width:100%;">
                <tr>
                    <td style="width:62%;  text-align:right;font-weight:bold;">Total:</td>
                    <td style="width:10%;  text-align:right;font-weight:bold;"><label id="lblTotalQty">0</label> </td>
                    <td style="width:3%;  text-align:right;font-weight:bold;"> </td>
                    <td style="width:13%; text-align:right; font-weight:bold;"><label id="lblCurrencySymbol"></label>&nbsp;<label id="lblTotalAmount">0.00</label> </td>
                    <td style="width:15%;  text-align:right;font-weight:bold;"> </td>
                </tr>
            </table>

        </div>
        <fieldset style="height:8%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:83%; text-align:right"></td>
                    <td style="width:17%;text-align:right;">
                        <a id="btnDisburse" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-disburse" plain="true">Disburse</a>                        
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">
    var _oConsumptionRequisition=null;
    $(document).ready(function () {
        _oConsumptionRequisition =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oStores = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.Stores));
        var oCRTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.CRTypes));
        
        $('#cboCRType').data('CRTypes', oCRTypes);
        $('#cboStore').data('Stores', oStores);
        $('#txtRequisitionFor').data('RequisitionFor', _oConsumptionRequisition.RequisitionFor);
        $('#txtProductName').data('Product', null);
        $('#txtLot').data('Lot', null);
        
        RefreshCombobox();

        $('#txtQty').icsCurrencyBox();        
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();

        $('#txtIssueDate').datebox('setValue',_oConsumptionRequisition.IssueDateSt);        
        if(parseInt(_oConsumptionRequisition.ConsumptionRequisitionID)>0)
        {
            RefreshControl(_oConsumptionRequisition);
        }
        ChangesCRType(false);
    });

    function RefreshCombobox()
    {
        var oCRTypes = $('#cboCRType').data('CRTypes');        
        var oStores = $('#cboStore').data('Stores');


        $("#cboCRType").icsLoadCombo({List: oCRTypes,OptionValue: "id",DisplayText: "Value"});
        $("#cboStore").icsLoadCombo({List: oStores,OptionValue: "WorkingUnitID",DisplayText: "WorkingUnitName"});
    }

    $('#cboCRType').change(function(){
        ChangesCRType(true);
    });

    $('#cboStore').change(function(){
        RefreshDetailList([]);
    });

    function ChangesCRType(bIsComboChange)
    {
        //EnumConsumptionType { None =0, GeneralConsumption = 1, RawMaterialConsumption = 2 }
        var nCRType = parseInt($('#cboCRType').val());
        if(nCRType===0)
        {
            $('#lblRequisitionFor').text('Requisition For:');   
            $('#btnSuggProductPiker,#btnSuggLotPicker').prop('disabled', true);
        }
        else if (nCRType===1)
        {
            $('#lblRequisitionFor').text('Consumption Unit :');    
            $('#btnSuggProductPiker,#btnSuggLotPicker').prop('disabled', true);
        }
        else if (nCRType===2)
        {
            $('#lblRequisitionFor').text('Usages Style :');
            $('#btnSuggProductPiker,#btnSuggLotPicker').prop('disabled', false);
        }  
        
        if(bIsComboChange)
        {
            $('#txtRequisitionFor').data('RequisitionFor', 0);
            $('#txtRequisitionFor').val('');
            RefreshDetailList([]);
        }
    }

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }

    function RefreshControl(oConsumptionRequisition)
    {   
        $('#cboCRType').val(oConsumptionRequisition.CRTypeInt);
        $("#txtRequisitionFor ").addClass("fontColorOfPickItem");     
        if(parseInt(oConsumptionRequisition.SubLedgerID)>0)
        {
            $("#txtSubLedgerName").addClass("fontColorOfPickItem");
        }
        $('#cboStore').val(oConsumptionRequisition.StoreID);
        RefreshDetailList(oConsumptionRequisition.ConsumptionRequisitionDetails);
        var sConsumptionRequisitionHeader = sessionStorage.getItem("ConsumptionRequisitionHeader");
        $('#btnAddDetail,#btnRemoveDetail').hide();
        $("#divConsumptionRequisition :input").prop('disabled', true);
        SetTotal();
    }

    function RefreshDetailList(oOrderDetailList)
    {
        var data=oOrderDetailList;
        data={"total":""+data.length+"","rows":data};
        $('#tblConsumptionRequisitionDetail').datagrid('loadData',data);
    }

    function Validation()
    {
        var nCRType = parseInt($('#cboCRType').val());
        if(nCRType===0)
        {
            alert('Please select Rawmaterial Requsition Type!');
            $('#cboCRType').focus();
            return;
        }

        var sIssueDate = $('#txtIssueDate').datebox('getValue');
        if(sIssueDate===null || sIssueDate==="")
        {
            alert('Please select Requisition Date!');
            return false;
        }

        if(parseInt($('#txtRequisitionFor').data('RequisitionFor'))<=0){
            $('#txtRequisitionFor').focus();
            $('#txtRequisitionFor').addClass("errorFieldBorder");
            alert('Please Pick Buyer.');
            return false;
        }
        else{
            $('#txtRequisitionFor').removeClass("errorFieldBorder");
        }

        
        if(parseInt($('#cboStore').val())<=0){
            $('#cboStore').focus();
            $('#cboStore').addClass("errorFieldBorder");
            alert('Please Select Merchandiser.');
            return false;
        }
        else{
            $('#cboStore').removeClass("errorFieldBorder");
        }

        var oConsumptionRequisitionDetails = $('#tblConsumptionRequisitionDetail').datagrid('getRows');
        if(oConsumptionRequisitionDetails.length<=0)
        {
            alert("Please enter at least one Item!");
            return false;
        }

        for(i=0; i<oConsumptionRequisitionDetails.length; i++)
        {
            if(parseFloat(oConsumptionRequisitionDetails[i].Quantity)<=0)
            {
                alert("Please enter Qty for Product : "+ oConsumptionRequisitionDetails[i].ProductName +", & Lot No :"+ oConsumptionRequisitionDetails[i].LotNo);
                return false;
            }

            if(parseFloat(oConsumptionRequisitionDetails[i].UnitPrice)<=0)
            {
                alert("Invalid Rate for Product : "+ oConsumptionRequisitionDetails[i].ProductName +", & LotNo No :"+ oConsumptionRequisitionDetails[i].StyleNo);
                return false;
            }
        }
        return true;
    }

    function RefreshObject()
    {
        var oConsumptionRequisition={
            ConsumptionRequisitionID : parseInt(_oConsumptionRequisition.ConsumptionRequisitionID),
            BUID : parseInt(sessionStorage.getItem('BUID')),
            RefNo : $.trim($('#txtRefNo').val()),
            CRType  : parseInt($('#cboCRType').val()),
            CRTypeInt : parseInt($('#cboCRType').val()),
            RequisitionBy : parseInt(_oConsumptionRequisition.RequisitionBy),
            CRStatus : parseInt(_oConsumptionRequisition.CRStatusInt),
            CRStatusInt : parseInt(_oConsumptionRequisition.CRStatusInt),
            IssueDate : $('#txtIssueDate').datebox('getValue'),  
            RequisitionFor : parseInt($('#txtRequisitionFor').data('RequisitionFor')),
            SubLedgerID:_oConsumptionRequisition.SubLedgerID,
            StoreID : parseInt($('#cboStore').val()),
            Remarks : $.trim($('#txtRemarks').val()),
            DeliveryBy : parseInt(_oConsumptionRequisition.DeliveryBy),
            ApprovedBy : parseInt(_oConsumptionRequisition.ApprovedBy),
            ConsumptionRequisitionDetails : $('#tblConsumptionRequisitionDetail').datagrid('getRows')
        };
        return oConsumptionRequisition;
    }

    $("#btnDisburse").click(function (){
        if(!Validation()) return false;
        if (!confirm("Confirm to Disburse?")) return false;
        var oConsumptionRequisition=RefreshObject();
        oConsumptionRequisition.ActionTypeExtra = "Disburse";        
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/ConsumptionRequisition/ChangeStatus",
            traditional: true,
            data:  JSON.stringify(oConsumptionRequisition),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //
                oConsumptionRequisition = jQuery.parseJSON(data);
                if (oConsumptionRequisition.ErrorMessage==null || oConsumptionRequisition.ErrorMessage=="") {
                    alert("Disburse successfully");
                    var oConsumptionRequisitions = sessionStorage.getItem("ConsumptionRequisitions");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oConsumptionRequisitions != null) {
                        oConsumptionRequisitions = jQuery.parseJSON(oConsumptionRequisitions);
                    }
                    else {
                        oConsumptionRequisitions = [];
                    }
                    if (nIndex != -1) {
                        oConsumptionRequisitions[nIndex] = oConsumptionRequisition;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oConsumptionRequisitions.length);
                        oConsumptionRequisitions.push(oConsumptionRequisition);
                    }
                    sessionStorage.setItem("ConsumptionRequisitions", JSON.stringify(oConsumptionRequisitions));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oConsumptionRequisition.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    //start Requisition For picker
    $("#txtRequisitionFor").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            //EnumConsumptionType { None =0, GeneralConsumption = 1, RawMaterialConsumption = 2 }
            var nCRType = parseInt($('#cboCRType').val());
            if(nCRType===0)
            {
                alert('Please select Requsition Type!');
                $('#cboCRType').focus();
                return;
            }
            else if (nCRType===1)
            {
                var sConsumptionUnit = $.trim($('#txtRequisitionFor').val());
                PickConsumptionUnit(sConsumptionUnit);
            }
            else if (nCRType===2)
            {
                var sStyleNo = $.trim($('#txtRequisitionFor').val());
                PickStyles(sStyleNo);
            }
        }
    });
    $("#btnPickRequisitionFor").click(function () {
        //EnumConsumptionType { None =0, GeneralConsumption = 1, RawMaterialConsumption = 2 }
        var nCRType = parseInt($('#cboCRType').val());
        if(nCRType===0)
        {
            alert('Please select Requsition Type!');
            $('#cboCRType').focus();
            return;
        }
        else if (nCRType===1)
        {
            PickConsumptionUnit('');
        }
        else if (nCRType===2)
        {            
            PickStyles('');
        }        
    });
    $('#txtRequisitionFor').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtRequisitionFor").removeClass("fontColorOfPickItem");
            $('#txtRequisitionFor').data('RequisitionFor', 0);
        }
    });
    
    function PickConsumptionUnit(sConsumptionUnit)
    {
        var oConsumptionUnit = { Name:sConsumptionUnit,BUID:sessionStorage.getItem('BUID')};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oConsumptionUnit,
            ControllerName: "ConsumptionRequisition",
            ActionName: "ConsumptionUnitPicker",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ConsumptionUnitID > 0) {
                    var tblColums = []; var oColumn = { field: "ConsumptionUnitName", title: "COnsumption Unit", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ConsumptionUnitNote", title: "Note", width: 120, align: "left" }; tblColums.push(oColumn);                    
                    var oPickerParam = {
                        winid: 'winConsumptionUnit',
                        winclass: 'clsConsumptionUnit',
                        winwidth: 400,
                        winheight: 460,
                        tableid: 'tblConsumptionUnits',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'ConsumptionUnitName',
                        windowTittle: 'Consumption Units'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else { alert(response.objs[0].ErrorMessage); }
            }else{
                alert("Data Not Found.");
            }
        });
    }
    
    function PickStyles(sStyleNumber)
    {
        var oTechnicalSheet = { StyleNo: sStyleNumber };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oTechnicalSheet,
            ControllerName: "TechnicalSheet",
            ActionName: "StyleSearch",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].TechnicalSheetID > 0) {
                    var tblColums = []; var oColumn = { field: "StyleNo", title: "Style No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "SessionName", title: "Business Session", width: 100, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winStylePicker',
                        winclass: 'clsStylePicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblStylePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'StyleNo',
                        windowTittle: 'Style List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end requisition for picker

    //start product picker
    $("#txtProductName").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sProductName = $.trim($('#txtProductName').val());
            if(sProductName === null || sProductName === "")
            {
                alert("Please Type Product and Press Enter.");
                $('#txtProductName').focus();
                return;
            }
            PickProducts(sProductName, 0);
        }
    });
    $("#btnProductPiker").click(function () {
        PickProducts("", 0);
    });
    $("#btnSuggProductPiker").click(function () {
        var nCRType = parseInt($('#cboCRType').val());
        if(nCRType===0 || nCRType===1)
        {
            alert('Please select Rawmaterial Requsition Type!');
            $('#cboCRType').focus();
            return;
        }

        var nStyleID = parseInt($('#txtRequisitionFor').data('RequisitionFor'));
        if(nStyleID<=0)
        {
            alert('Please select an Style!');
            $('#txtRequisitionFor').focus();
            return;
        }
        PickProducts("", nStyleID);
    });
    $('#txtProductName').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtProductName").removeClass("fontColorOfPickItem");
            $('#txtProductName').data('Product', null);
        }
    });
    function PickProducts(sProductName, nStyleID)
    {
        var oProduct = { BUID: sessionStorage.getItem("BUID"), ProductName: sProductName, ProductID : nStyleID };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oProduct,
            ControllerName: "ConsumptionRequisition",
            ActionName: "SearchProducts",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = []; var oColumn = { field: "NameCode", title: "Product Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end product picker

    //start style picker
    $("#txtLot").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sLotNo = $.trim($('#txtLot').val());
            if(sLotNo === null || sLotNo === "")
            {
                alert("Press Enter With Lot Number!");
                $('#txtLot').focus();
                return;
            }
            PickLots(sLotNo, 0);
        }
    });
    $("#btnLotPicker").click(function () {
        PickLots("", 0);
    });
    $("#btnSuggLotPicker").click(function () {
        var nCRType = parseInt($('#cboCRType').val());
        if(nCRType===0 || nCRType===1)
        {
            alert('Please select Rawmaterial Requsition Type!');
            $('#cboCRType').focus();
            return;
        }

        var nStyleID = parseInt($('#txtRequisitionFor').data('RequisitionFor'));
        if(nStyleID<=0)
        {
            alert('Please select an Style!');
            $('#txtRequisitionFor').focus();
            return;
        }
        PickLots("", nStyleID);
    });
    $('#txtLot').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtLot").removeClass("fontColorOfPickItem");
            $('#txtLot').data('Lot', null);
        }
    });
    function PickLots(sLotNo, nStyleID)
    {
        var nBUID = parseInt(sessionStorage.getItem('BUID'));
        if(nBUID<=0)
        {
            alert('Invalid Business Unit!');
            return;
        }

        var oProduct = $('#txtProductName').data('Product');
        if(oProduct===null || parseInt(oProduct.ProductID)<=0)
        {
            alert('Please Select a Product!');
            $('#txtProductName').focus();
            return;
        }

        var nStoreID = parseInt($('#cboStore').val());
        if(nStoreID<=0)
        {
            alert('Please Select an Store!');
            $('#cboStore').focus();
            return;
        }
        var oLot = { BUID : nBUID, ProductID : parseInt(oProduct.ProductID), WorkingUnitID : nStoreID, LotNo : sLotNo, StyleID : nStyleID };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oLot,
            ControllerName: "ConsumptionRequisition",
            ActionName: "SearchLots",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].LotID > 0) {
                    var tblColums = []; var oColumn = { field: "LotNo", title: "Lot No", width: 120, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "StyleNo", title: "Style No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ColorName", title: "Color Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "SizeName", title: "Size Name", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BalanceSt", title: "Stock Qty", width: 100, align: "right" }; tblColums.push(oColumn);
                    oColumn = { field: "WorkingUnitName", title: "Store", width: 150, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winLotPicker',
                        winclass: 'clsLotPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblLotPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'LotNo',
                        windowTittle: ('Lot List For : '+ oProduct.ProductName)
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end Lot picker


    $("#btnRefreshDetail").click(function (){        
    });

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj)
    {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

        if (oPickerobj.winid == 'winConsumptionUnit')
        {
            if (oreturnObj != null && oreturnObj.ConsumptionUnitID > 0) {
                $('#txtRequisitionFor').val(oreturnObj.ConsumptionUnitName);
                $('#txtRequisitionFor').addClass('fontColorOfPickItem');
                $('#txtRequisitionFor').data('RequisitionFor', parseInt(oreturnObj.ConsumptionUnitID));  
                $('cboStore').focus();
            }
        }
        else if (oPickerobj.winid=='winStylePicker')
        {
            if (oreturnObj != null && oreturnObj.TechnicalSheetID > 0)
            {
                $('#txtRequisitionFor').val(oreturnObj.StyleNo);
                $('#txtRequisitionFor').addClass('fontColorOfPickItem');
                $('#txtRequisitionFor').data('RequisitionFor', parseInt(oreturnObj.TechnicalSheetID));                        
                $('cboStore').focus();
            }
        }
        else if (oPickerobj.winid == 'winProductPicker')
        {
            if (oreturnObj != null && oreturnObj.ProductID > 0)
            {
                $('#txtProductName').val(oreturnObj.ProductName);
                $('#txtProductName').addClass('fontColorOfPickItem');
                $('#txtProductName').data('Product', oreturnObj);
                GetMeasurementUnitByType(oreturnObj.UnitTypeInInt);                
                $('#txtLot').focus();
            }
        }
        else if (oPickerobj.winid=='winLotPicker')
        {
            if (oreturnObj != null && oreturnObj.LotID > 0)
            {
                $('#txtLot').val(oreturnObj.LotNo+"("+oreturnObj.BalanceSt+")");
                $('#txtLot').addClass('fontColorOfPickItem');
                $('#txtLot').data('Lot', oreturnObj);
                $('#txtQty').focus();
            }
        }
    }
       
    function GetMeasurementUnitByType(nUnitTypeInt)
    {
        var oMeasurementUnit={
            UnitTypeInInt : nUnitTypeInt
        };
        $.ajax ({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/MeasurementUnit/GetbyUnitType",
            data:  JSON.stringify(oMeasurementUnit),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //
                var  oUnits = jQuery.parseJSON(data);
                if (oUnits!=null)
                {
                    if(oUnits.length>0)
                    {
                        $("#cboUnit").icsLoadCombo({List: oUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
                    }
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    }

    function ValidateInputDetail()
    {
        var oProduct = $('#txtProductName').data('Product');
        if(oProduct===null || parseInt(oProduct.ProductID)<=0)
        {
            $('#txtProductName').focus();            
            alert('Please select product!');
            return false;
        }

        //if(parseInt($('#cboUnit').val())<=0)
        //{
        //    $('#cboUnit').focus();
        //    alert('Select Unit.');
        //    return false;
        //}

        var oLot = $('#txtLot').data('Lot')
        if(oLot===null || parseInt(oLot.LotID)<=0)
        {
            $('#txtLot').focus();            
            alert('Please select Style!');            
            return false;
        }


        var nQty = parseFloat(icsRemoveComma($('#txtQty').val()));
        if(nQty<=0)
        {
            $('#txtQty').focus();            
            alert('Qty Should be Greater than 0');
            return false;
        }

        if(parseFloat(oLot.Balance)<nQty)
        {
            alert("Your entered qty must be smallar than Lot Balance Qty!");
            $('#txtQty').focus();            
            return;
        }

        var oConsumptionRequisitionDetails = $('#tblConsumptionRequisitionDetail').datagrid('getRows');
        for(var i = 0; i<oConsumptionRequisitionDetails.length; i++)
        {
            if(parseInt(oConsumptionRequisitionDetails[i].LotID)=== parseInt(oLot.LotID))
            {
                $('#txtLot').focus();                
                alert('Selected lot already exists!');
                return false;
            }
        }
        return true;
    }
    
    function ResetDetail(){
        $('#txtProductName').data('Product', null);
        $('#txtLot').data('Lot', null);
        $('#txtQty').val('');

        $('#txtProductName,#txtLot').removeClass("fontColorOfPickItem");
        $('#txtProductName,#txtLot').val("");
        $('#txtProductName,#btnProductPiker,#txtLot,#btnLotPicker').prop("disabled", false);

        //var oUnits = [];
        //$("#cboUnit").icsLoadCombo({List: oUnits,OptionValue: "MeasurementUnitID",DisplayText: "Symbol"});
        $('#txtProductName').focus();
    }

    function SetTotal()
    {   
        var nTotalValue = 0;
        var nTotalQty = 0;
        var oConsumptionRequisitionDetails = $('#tblConsumptionRequisitionDetail').datagrid('getRows');
        for(var i = 0;i<oConsumptionRequisitionDetails.length;i++)
        {
            nTotalValue = nTotalValue + parseFloat(oConsumptionRequisitionDetails[i].Amount);
            nTotalQty = nTotalQty + parseInt(oConsumptionRequisitionDetails[i].Quantity);
        }
        $("#lblTotalQty").html(nTotalQty);
        $("#lblTotalAmount").html(formatPrice(nTotalValue,0));
    }

    $("#btnAddDetail").click(function () {
        if(!ValidateInputDetail())return;
        var oProduct = $('#txtProductName').data('Product');
        var oLot = $('#txtLot').data('Lot');
        
        var oConsumptionRequisitionDetail= {
            ConsumptionRequisitionDetailID : 0,
            ConsumptionRequisitionID : parseInt(_oConsumptionRequisition.ConsumptionRequisitionID),
            ProductID  : parseInt(oProduct.ProductID),
            LotID : parseInt(oLot.LotID),
            UnitID : parseInt(oLot.MUnitID), //parseInt($('#cboUnit').val()),
            Quantity : icsRemoveComma($('#txtQty').val()),
            UnitPrice : parseFloat(oLot.UnitPrice),
            ProductCode : oProduct.ProductCode,
            ProductName : oProduct.ProductName,
            LotNo : oLot.LotNo,
            Balance : parseFloat(oLot.Balance),
            LotUnitPrice : parseFloat(oLot.UnitPrice),
            LotUnitID : parseInt(oLot.MUnitID),
            StyleID : parseInt(oLot.StyleID),
            ColorID : parseInt(oLot.ColorID),
            SizeID : parseInt(oLot.SizeID),
            StyleNo : oLot.StyleNo,  
            BuyerName : oLot.BuyerName,
            ColorName : oLot.ColorName,
            SizeName : oLot.SizeName,
            UnitName : oLot.MUName, // $("#cboUnit option:selected").text(),
            Symbol :  oLot.MUName, // $("#cboUnit option:selected").text(),
            Amount : (parseFloat(parseFloat(icsRemoveComma($('#txtQty').val()))) * parseFloat(oLot.UnitPrice))
        };
        $('#tblConsumptionRequisitionDetail').datagrid('appendRow',oConsumptionRequisitionDetail);
        SetTotal();
        ResetDetail();
    });

    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    $("#btnRemoveDetail").click(function () {

        var oConsumptionRequisitionDetail = $("#tblConsumptionRequisitionDetail").datagrid("getSelected");
        if (oConsumptionRequisitionDetail == null || parseInt(oConsumptionRequisitionDetail.ProductID) <= 0) { alert("Please select an item from list!"); return false; }
        if (!confirm("Confirm to Delete?")) return false;
        var SelectedRowIndex=$('#tblConsumptionRequisitionDetail').datagrid('getRowIndex',oConsumptionRequisitionDetail);
        alert("Data Delete Successfully.");
        $('#tblConsumptionRequisitionDetail').datagrid('deleteRow',SelectedRowIndex);
        SetTotal();
    });

    $('#txtQty').tooltip({
        position: 'bottom',
        content: '<span style="color:#fff">Type Qty.</span>',
        onShow: function(){$(this).tooltip('tip').css({backgroundColor: '#666',borderColor: '#666'});}
    });   
</script>