<html>
@{
    ViewBag.Title = "Adjustment Slip";
}
<body>

    @model ESimSol.BusinessObjects.AdjustmentRequisitionSlip
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable">
        <div class="easyui-panel" title="" style="font-family:Tahoma; text-align:center; height:89%;">
            <fieldset>
                <legend style="font-weight:bold">Requisition info </legend>
                <table cellpadding="2" cellspacing="2" style="width:100%">
                    <tr>
                        <td style="width: 20%; text-align: right">
                            <label>Requisition No</label>
                        </td>
                        <td style="width: 30%; text-align: left">
                            <input id="txtARSlipNo" style="width: 80%;" class="reset-text" disabled="disabled" />
                        </td>

                        <td style="width: 20%; text-align: right">
                            <label>Requisition Date</label>
                        </td>
                        <td style="width: 30%; text-align: left">
                            <input id="txtDate" type="text" class="easyui-datebox" style="width: 80%;" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>


                    </tr>
                    <tr>
                        @*<td style="width: 20%; text-align: right">
                            <label>Store</label>
                        </td>
                        <td style="width: 30%; text-align: left">
                            <select style="width: 80%;" id="cboWorkingUnit"></select>
                        </td>*@
                        <td style="width: 20%; text-align: right">
                            <label>Adjustment Type</label>
                        </td>
                        <td style="width: 30%; text-align: left">
                            <select style="width: 80%;height: 22px;" id="cboAdjustmentType"></select>
                        </td>
                        <td style="width: 20%; text-align: right">
                            <label>In /Out Type</label>
                        </td>
                        <td style="width: 30%; text-align: left">
                            <select style="width: 80%; height: 22px;" id="cboInOutType"></select>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 20%; text-align: right">
                            <label>Note</label>
                        </td>
                        <td colspan="3" style="width: 80%; text-align: left">
                            <input id="txtNote" style="width: 93%;" />
                        </td>
                    </tr>

                </table>
            </fieldset>

            <table title="Adjustment Detail(s)" id="tblAdjustmentRequisitionSlipDetail" class="easyui-datagrid" style="width:100%;height:300px;"
                   data-options="singleSelect: true,fitColumns:false, rownumbers:true, pagination:false, autoRowHeight:false, toolbar: '#toolbar',onClickRow:onClickRow ">
                <thead>
                    <tr>      
                        <th field="StoreShortName" width="8%" align="left">Store</th>                  
                        <th field="ProductCode" width="10%" align="center">Code</th>
                        <th field="ProductName" width="25%" align="left">Product</th>
                        <th field="ColorName" width="18%" align="left">Color</th>                        
                        <th field="LotNo" width="10%" align="left">Lot No</th>
                        <th field="CurrentBalance" width="10%" align="right" formatter="formatPrice">CurrentBalance</th>
                        <th data-options="field:'Qty',align:'right',editor:{type:'numberbox',options:{precision:2}}" width="15%">Adjustment Qty</th>
                        <th data-options="field:'Note',width:100,height:60 ,align:'Left',editor:{type:'text'}" width="20%" align="Left">Remark</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbar">
                Store : <select style="width:200px;height: 22px;" id="cboWorkingUnit"></select>
                <input id="txtProduct" style="width: 200px" class="reset-text" placeholder="Search By Product Name" /><input type="button" value="Pick" id="btnPickProduct" />
                <input id="txtLot" style="width: 200px" class="reset-text" placeholder="Search By Lot"/><input type="button" value="Pick" id="btnPickLot" />                
                <a id="btnRemoveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                <a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
            </div>
            <table border="0" cellpadding="0" cellspacing="0" style="width:100%;">
                <tr>
                    <td style="width:65%;  text-align:right;font-weight:bold;">Total:</td>
                    <td style="width:10%;  text-align:right;font-weight:bold;"><label id="lblTotalQty">0</label> </td>
                    <td style="width:5%;  text-align:right;font-weight:bold;"> </td>
                </tr>
            </table>
        </div>

        <fieldset style="height:8%">
            <legend>Action</legend>
            <div class="align-right">
                <table border="0" cellpadding="0" cellspacing="0" style="width:100%;">
                    <tr>
                    <tr>
                        <td style=" float:left;  width:10%; ">
                            <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print</a>
                        </td>
                        <td style=" float:left;  width:10%; "></td>
                        <td style=" float:left;  width:60%; "></td>
                        <td style=" float:right;  width:20%; ">
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                            <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Approve</a>
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>

                </table>

            </div>

        </fieldset>
        </div>

</body>
</html>

<style type="text/css">
    .td-styler input {
        padding-left: 5px;
    }

    .td-styler select {
        padding-left: 5px;
    }

    .td-col-3 select {
        width: 95%;
    }
</style>

<script type="text/javascript">

    var _sBaseAddress = "";
    var _oAdjustmentRequisitionSlip=null;
    var _nProductID=0;
    var _oAdjustmentRequisitionSlipDetail=[];
    var _nSelectedRowIndex=0;
    var _sBackLink="";
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        var oAdjustmentRequisitionSlip =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oInOutTypes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.InOutTypes));
        var oWorkingUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.WorkingUnits));
        var oAdjustmentTypes=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.AdjustmentTypes));
        debugger;
        $("#cboInOutType").icsLoadCombo({
            List: oInOutTypes,
            OptionValue: "id",
            DisplayText: "Value",
            InitialValue:""
        });
        $("#cboAdjustmentType").icsLoadCombo({
            List: oAdjustmentTypes,
            OptionValue: "id",
            DisplayText: "Value",
            InitialValue:""
        });

        //var defaultWU = {WorkingUnitID:'0', WorkingUnitName:'~Select Store~'};
        //oWorkingUnits.push(defaultWU);
        $("#cboWorkingUnit").icsLoadCombo({
            List: oWorkingUnits,
            OptionValue: "WorkingUnitID",
            DisplayText: "WorkingUnitName",
            InitialValue:""
        });
        Initialization(oAdjustmentRequisitionSlip,((sessionStorage.length>0)?sessionStorage.getItem('Operation'):'New'));
        _sBackLink=sessionStorage.getItem("BackLink");
        // Control_disabled();
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();        
    });

    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }
    function Initialization(oAdjustmentRequisitionSlip, sOperation){
        ResetControll();
        if(oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID>0)
        {
            RefreshControl(oAdjustmentRequisitionSlip);
        }
        if(sOperation=="View")
        {
            $('#toolbar,#btnApprove,#btnSave,.ics-pick').hide();
            $('input,select').not('#txtAdjustmentRequisitionSlipNo').prop('disabled',true);
            $('.td-col-6 input').css('width','92%');
        }

        else if(sOperation=="Approve")
        {
            $('#toolbar,#btnSave,.ics-pick').hide();
            $('#btnApprove').show();
            $('input,select').not('#txtAdjustmentRequisitionSlipNo').prop('disabled',true);
            $('.td-col-6 input').css('width','92%');
        }
        else{
            $('#toolbar,#btnSave,.ics-pick').show();
            $('#btnApprove').hide();
            $('input,select').not('#txtAdjustmentRequisitionSlipNo').prop('disabled',false);
            $('.td-col-6 input').css('width','70%');
        }
    }


    function ResetControll(){
        _oAdjustmentRequisitionSlip=null;
        $('#txtDate').datebox('setValue', icsdateformat(new Date()));
        $('.reset-text').val("");
        DynamicRefreshList([], 'tblAdjustmentRequisitionSlipDetail');
        RefreshSummary();
    }
    function RefreshControl(oAdjustmentRequisitionSlip){
        debugger;
        _oAdjustmentRequisitionSlip=oAdjustmentRequisitionSlip;
        $('#txtARSlipNo').val(oAdjustmentRequisitionSlip.ARSlipNo);
        $('#txtDate').datebox('setValue',oAdjustmentRequisitionSlip.DateSt);
        $('#cboWorkingUnit').val(oAdjustmentRequisitionSlip.WorkingUnitID);
        $('#cboAdjustmentType').val(oAdjustmentRequisitionSlip.AdjustmentTypeInt),
        $('#cboInOutType').val(oAdjustmentRequisitionSlip.InoutTypeInInt),
        $('#txtNote').val(oAdjustmentRequisitionSlip.Note);

        if(oAdjustmentRequisitionSlip.ARSDetails!==null && oAdjustmentRequisitionSlip.ARSDetails.length>0)
        {
            DynamicRefreshList(oAdjustmentRequisitionSlip.ARSDetails, 'tblAdjustmentRequisitionSlipDetail');
        }
        else{
            DynamicRefreshList([], 'tblAdjustmentRequisitionSlipDetail');
        }
        RefreshSummary();
    }

    function Validation(){

        //if(parseInt($("#cboWorkingUnit").val())<=0){
        //    $('#cboWorkingUnit').focus();
        //    $('#cboWorkingUnit').addClass("errorFieldBorder");
        //    alert('store required.');
        //    return false;
        //}
        //else{
        //    $('#cboWorkingUnit').removeClass("errorFieldBorder");
        //}

        if(parseInt($("#cboAdjustmentType").val())<=0){
            $('#cboAdjustmentType').focus();
            $('#cboAdjustmentType').addClass("errorFieldBorder");
            alert('Adjustment required.');
            return false;
        }
        else{
            $('#cboAdjustmentType').removeClass("errorFieldBorder");
        }

        if(parseInt($("#cboInOutType").val())<=100){
            $('#cboInOutType').focus();
            $('#cboInOutType').addClass("errorFieldBorder");
            alert('Please Select In/Out Type.');
            return false;
        }
        else{
            $('#cboInOutType').removeClass("errorFieldBorder");
        }

        var oARSDetails = $('#tblAdjustmentRequisitionSlipDetail').datagrid('getRows');
        for(var i = 0;i<oARSDetails.length;i++){
            if(parseFloat(oARSDetails[i].Qty) <= 0){
                alert('Please enter Qty for Product: ' + oARSDetails[i].ProductName + ' and Code: ' + oARSDetails[i].ProductCode +'.');
                return false;
            }
        }

        return true;
    }

    $("#btnResetProduct").click(function () {

        $("#txtProduct").val("");
        _nProductID=0;
    });

    $("#btnPickProduct").click(function () {

        var sProductName=$.trim($("#txtProduct").val());
        if(sProductName==""){ alert("Type product name to search."); return false; }
        GetProducts(sProductName);
    });

    $("#txtProduct").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var sProductName=$.trim($("#txtProduct").val());
            if(sProductName==""){ alert("Type product name to search."); return false; }
            GetProducts(sProductName);
        }
        else if(nkeyCode==8){
            $("#txtProduct").val("");
            _nProductID=0;
        }
    });

    function GetProducts(sProductName){

        var oProduct = {  BUID:sessionStorage.getItem("BUID"), ProductName:sProductName};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oProduct,
            ControllerName: "AdjustmentRequisitionSlip",
            ActionName: "GetProducts",
            IsWinClose: false
        };
       
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);

        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Code", width: 80, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Name", width: 300, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "MUnit", title: "Unit", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ProductCategoryName", title: "Category", width:180, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass:'clsProductPicker',
                        winwidth: 700,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'ProductName',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No product found.");
            }
        });


    }
    
    //Pick Lot
    $("#btnPickLot").click(function ()
    {
        if(parseInt($("#cboWorkingUnit").val())<=0){
            $('#cboWorkingUnit').focus();
            $('#cboWorkingUnit').addClass("errorFieldBorder");
            alert('store required.');
            return false;
        }
        else{
            $('#cboWorkingUnit').removeClass("errorFieldBorder");
        }

        if(_nProductID<=0 || _nProductID==null)
        {
            $('#txtProduct').focus();
            $('#txtProduct').addClass("errorFieldBorder");
            alert("Product not Found.");
            return;
        }
        //if(parseInt($('#cboWorkingUnit').val()) <= 0 || isNaN(parseInt($('#cboWorkingUnit').val()))){
        //    $('#cboWorkingUnit').focus();
        //    $('#cboWorkingUnit').addClass("errorFieldBorder");
        //    alert("Please select store.");
        //    return;
        //}

        var oLot = {
            ProductID:_nProductID,
            LotNo:'',
            BUID : parseInt(sessionStorage.getItem("BUID")),
            WorkingUnitID: $('#cboWorkingUnit').val()
        };
        GetsLot(oLot);
    });

    $("#txtLot").keydown(function (e) {
        debugger;
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){

            if(parseInt($("#cboWorkingUnit").val())<=0){
                $('#cboWorkingUnit').focus();
                $('#cboWorkingUnit').addClass("errorFieldBorder");
                alert('store required.');
                return false;
            }
            else{
                $('#cboWorkingUnit').removeClass("errorFieldBorder");
            }

            if(_nProductID<=0 || _nProductID==null)
            {
                $('#txtProduct').focus();
                $('#txtProduct').addClass("errorFieldBorder");
                alert("Product not Found.");
                return;
            }
            //var a =parseInt($('#cboWorkingUnit').val());
            //if((parseInt($('#cboWorkingUnit').val()) <= 0) || isNaN(parseInt($('#cboWorkingUnit').val()))){
            //    $('#cboWorkingUnit').focus();
            //    $('#cboWorkingUnit').addClass("errorFieldBorder");
            //    alert("Please select store.");
            //    return;
            //}
            var oLot = {
                ProductID:_nProductID,
                BUID : parseInt(sessionStorage.getItem("BUID")),
                LotNo: $("#txtLot").val(),
                WorkingUnitID: $('#cboWorkingUnit').val()
            };
            GetsLot(oLot);
        }
        else if(nkeyCode==8){
            $("#txtLot").val("");

        }
    });

    function GetsLot(oLot){
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLot,
            ControllerName: "AdjustmentRequisitionSlip",
            ActionName: "GetsLot",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].LotID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "LotNo", title: "Lot No", width: 80, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Balance", title: "Qty", width: 80, align: "right", formatter:formatPrice };tblColums.push(oColumn);
                    oColumn = { field: "MUName", title: "Unit", width: 70, align: "left"};tblColums.push(oColumn);
                    oColumn = { field: "ProductNameCode", title: "Name", width: 180, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ColorName", title: "Color", width: 70, align: "left"};tblColums.push(oColumn);
                    //oColumn = { field: "WorkingUnitName", title: "Store", width: 180, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "StoreShortName", title: "Store", width: 180, align: "left" };tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winLotPicker',
                        winclass:'clsLotPicker',
                        winwidth: 750,
                        winheight: 460,
                        tableid: 'tblLotPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'LotNo',
                        windowTittle: 'Lot List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No Lot found.");
            }
        });


    }
    //End PTU
    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        debugger;
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();

         if (oPickerobj.winid == 'winProductPicker')
        {
            if (oreturnObj != null && oreturnObj.ProductID > 0)
            {
                _nProductID=oreturnObj.ProductID ;
                $('#txtProduct').val(oreturnObj.ProductName);
                $('#txtLot').val("");
                $('#txtLot').focus();
                $('#txtLot').addClass("errorFieldBorder");
            }
            else{
                alert("Data Not Found.");
                return;
            }
        }

         else if (oPickerobj.winid == 'winLotPicker')
        {
            if (oreturnobjs.length > 0)
            {
                debugger;

                if(_nProductID<=0 || _nProductID==null)
                {
                    $('#txtProduct').focus();
                    $('#txtProduct').addClass("errorFieldBorder");
                    alert("Product not Found.");
                    return;
                }               
                for (i=0; i<oreturnobjs.length;i++)
                {
                    var oARSD={                        
                        AdjustmentRequisitionSlipID:(_oAdjustmentRequisitionSlip!=null && _oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID>0)? _oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID:0,
                        AdjustmentRequisitionSlipDetailID:0,
                        Qty:0,
                        CurrentBalance:oreturnobjs[i].Balance,
                        ProductName:oreturnobjs[i].ProductName,
                        ProductCode:oreturnobjs[i].ProductCode,
                        ColorName : oreturnobjs[i].ColorName,
                        LotNo:oreturnobjs[i].LotNo,
                        Note:"",
                        ProductID:oreturnobjs[i].ProductID,
                        LotID:oreturnobjs[i].LotID,
                        WorkingUnitID: oreturnobjs[i].WorkingUnitID,
                        StoreShortName: oreturnobjs[i].StoreShortName
                    }
                    $('#tblAdjustmentRequisitionSlipDetail').datagrid('appendRow', oARSD);
                }
                endEditing();
                RefreshSummary();
                $('#txtLot').val("");
                _nProductID=0;
                $('#txtProduct').val("");
            }
            else{
                alert("Data Not Found.");
                return;
            }
        }
    }

    function RefreshObject()
    {
        var oAdjustmentRequisitionSlip={
            AdjustmentRequisitionSlipID: (_oAdjustmentRequisitionSlip!=null && _oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID>0)? _oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID:0,
            Date: $('#txtDate').datebox('getValue'),
            //WorkingUnitID: $('#cboWorkingUnit').val(),
            AdjustmentType: $('#cboAdjustmentType').val(),
            AdjustmentTypeInt: $('#cboAdjustmentType').val(),
            Note:$.trim($('#txtNote').val()),
            BUID:sessionStorage.getItem("BUID"),
            InoutTypeInInt:parseInt($("#cboInOutType").val()),
            ARSDetails:$('#tblAdjustmentRequisitionSlipDetail').datagrid('getRows')
        };
        return oAdjustmentRequisitionSlip;
    }

    $('#btnRefreshDetail').click(function(e){
        endEditing();
        var oARSDetails = $('#tblAdjustmentRequisitionSlipDetail').datagrid('getRows');
        DynamicRefreshList(oARSDetails, 'tblAdjustmentRequisitionSlipDetail');
        RefreshSummary();
    });

    $("#btnSave").click(function (){
     
        endEditing();
        if(!Validation()) return false;

        debugger;
        var oAdjustmentRequisitionSlip=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/AdjustmentRequisitionSlip/Save",
            traditional: true,
            data:  JSON.stringify(oAdjustmentRequisitionSlip),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oARS= jQuery.parseJSON(data);
                if (oARS.ErrorMessage=="" || oARS.ErrorMessage==null)
                {
                    _oAdjustmentRequisitionSlip=oARS;
                    alert("Data Save Succesfully!!");
                    //if(_oPurchaseOrder.PurchaseOrderDetails!=null)
                    //{
                    //    DynamicRefreshList(_oPurchaseOrder.PurchaseOrderDetails, 'tblPODetail');
                    //}

                    var oAdjustmentRequisitionSlips =sessionStorage.getItem("AdjustmentRequisitionSlips");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    debugger;
                    if(oAdjustmentRequisitionSlips!=null)
                    {
                        oAdjustmentRequisitionSlips = jQuery.parseJSON(oAdjustmentRequisitionSlips);
                    }
                    else
                    {
                        oAdjustmentRequisitionSlips=[];
                    }
                    if(nIndex!=-1)
                    {
                        oAdjustmentRequisitionSlips[nIndex]=_oAdjustmentRequisitionSlip;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oAdjustmentRequisitionSlips.length);
                        oAdjustmentRequisitionSlips.push(_oAdjustmentRequisitionSlip);
                    }
                    sessionStorage.setItem("AdjustmentRequisitionSlips", JSON.stringify(oAdjustmentRequisitionSlips));
                    window.location.href = _sBackLink;
                }
                else
                {
                    alert(oARS.ErrorMessage);
                }
            },
            error: function (xhr, status, error)
            {
                alert(error);
            }
        });
    });




    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });


    $("#btnRemoveDetail").click(function () {

        var oAdjustmentRequisitionSlipDetail = $("#tblAdjustmentRequisitionSlipDetail").datagrid("getSelected");
        if (oAdjustmentRequisitionSlipDetail == null) { alert("Please select an item from list!"); return false; }
        var nIndex=$('#tblAdjustmentRequisitionSlipDetail').datagrid('getRowIndex',oAdjustmentRequisitionSlipDetail);
        if (!confirm("Confirm to Delete?")) return false;
        $("#tblAdjustmentRequisitionSlipDetail").datagrid("deleteRow", nIndex);
        RefreshSummary();

    });



    function RefreshSummary()
    {
        var oARDetail = $('#tblAdjustmentRequisitionSlipDetail').datagrid('getRows');
        var nTotalQty = 0, nTotalAmount= 0;
        for(var i = 0; i<oARDetail.length;i++)
        {
            nTotalQty+=parseFloat(oARDetail[i].Qty);

        }
        document.getElementById('lblTotalQty').innerHTML = formatPrice(nTotalQty,0);

    }
    //////////// Detail ////////

    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($('#tblAdjustmentRequisitionSlipDetail').datagrid('validateRow', editIndex)) {
            $('#tblAdjustmentRequisitionSlipDetail').datagrid('endEdit', editIndex);
            $('#tblAdjustmentRequisitionSlipDetail').datagrid('selectRow', editIndex);
            var oESCDetail = $('#tblAdjustmentRequisitionSlipDetail').datagrid('getSelected');

            debugger;
            $('#tblAdjustmentRequisitionSlipDetail').datagrid('updateRow', { index: editIndex, row: oESCDetail });

            RefreshSummary();
            editIndex = undefined;
            return true;
        }
        else {
            return false;
        }
    }

    function onClickRow(index) {

        if (editIndex != index) {
            if (endEditing()) {
                $('#tblAdjustmentRequisitionSlipDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                var oPRDetail= $('#tblAdjustmentRequisitionSlipDetail').datagrid('getSelected');

                editIndex = index;
            }
            else {
                $('#tblAdjustmentRequisitionSlipDetail').datagrid('selectRow', editIndex);
            }
        }
    }


    $('#btnApprove').click(function () {

        debugger;
       

        if (_oAdjustmentRequisitionSlip ==null || _oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID <=0 ) { alert("Please select an item from list."); return ; }

        if( _oAdjustmentRequisitionSlip.AprovedByID!=0)
        {
            alert("Already Approve.");
            return;
        }
        var conf = confirm("Are you sure you want to Approve ?");
        if(conf==false)return;

        $.ajax({
            type: "POST",
            dataType: "json",

            url : _sBaseAddress+  "/AdjustmentRequisitionSlip/Approve",
            traditional: true,
            data:  JSON.stringify(_oAdjustmentRequisitionSlip),

            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                var oDUDO = jQuery.parseJSON(data);
                if (oDUDO.ErrorMessage=="" || oDUDO.ErrorMessage==null)
                {
                    _oAdjustmentRequisitionSlip=oDUDO;
                    alert("Data Save Succesfully!!");
                    //if(_oPurchaseOrder.PurchaseOrderDetails!=null)
                    //{
                    //    DynamicRefreshList(_oPurchaseOrder.PurchaseOrderDetails, 'tblPODetail');
                    //}

                    var oAdjustmentRequisitionSlips =sessionStorage.getItem("AdjustmentRequisitionSlips");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    debugger;
                    if(oAdjustmentRequisitionSlips!=null)
                    {
                        oAdjustmentRequisitionSlips = jQuery.parseJSON(oAdjustmentRequisitionSlips);
                    }
                    else
                    {
                        oAdjustmentRequisitionSlips=[];
                    }
                    if(nIndex!=-1)
                    {
                        oAdjustmentRequisitionSlips[nIndex]=_oAdjustmentRequisitionSlip;
                    }
                    else
                    {
                        sessionStorage.setItem("SelectedRowIndex", oAdjustmentRequisitionSlips.length);
                        oAdjustmentRequisitionSlips.push(_oAdjustmentRequisitionSlip);
                    }
                    sessionStorage.setItem("AdjustmentRequisitionSlips", JSON.stringify(oAdjustmentRequisitionSlips));
                    window.location.href = _sBackLink;
                }
                else
                {
                    alert(oDUDO.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });






    $('#btnPrint').click(function (e)
    {

        if (_oAdjustmentRequisitionSlip ==null || _oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID <=0 ) { alert("Please select an item from list."); return ; }
        var tsv=((new Date()).getTime())/1000;
        var bIsPrintHistory=false;
        window.open(_sBaseAddress+ "/AdjustmentRequisitionSlip/PrintAdjustmentRequisitionSlip?nId="+_oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID+"&bIsPrintHistory="+bIsPrintHistory+"&nts="+tsv, "_blank");

    });


</script>