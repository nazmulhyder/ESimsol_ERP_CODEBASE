@{
    ViewBag.Title = "Adjustment Slip(s)";
}

@model IEnumerable<ESimSol.BusinessObjects.AdjustmentRequisitionSlip>
    
    <head>
        <title>AdjustmentRequisitionSlip(s)</title>      
    </head>

    <body>
        <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
            <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
                <label style="font-size:18px;">Please wait</label>
                <div id="progressbar" style="width:100%;height:37px;"></div>
            </div>
        </div>
        <div class="menuMainCollectionTable" >
            <table id="tblAdjustmentRequisitionSlip" title="AdjustmentRequisitionSlip List" class="easyui-datagrid" fit="true" fitcolumn="true" rownumbers="true" pagination="true" singleselect="true" autorowheight="false" toolbar="#toolbarAdjustmentRequisitionSlip" >
                <thead>
                    <tr>                        
                        <th field="ARSlipNo" width="12%">Req No</th>
                        <th field="DateSt" width="12%">Date</th>
                        @*<th field="StoreShortName" width="10%">Store</th>*@
                        <th field="PreaperByName" width="15%">Preaper Name</th>
                        <th field="AprovedByName" width="15%">Aproved By</th>
                        <th field="Status" width="10%">Status</th>
                        <th field="IsWillVoucherEffectSt" width="80" align="left">Voucher Effect</th>
                        <th field="InOutTypeSt" width="10%">In/Out Type</th>
                    </tr>
                </thead>

            </table>>

            <div id="toolbarAdjustmentRequisitionSlip">
                <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true" id="btnReload"></a>
                <input type="text" id="txtSearchByARSlipNo" placeholder="Search by Slip No" style="width:100px;text-align:left" />
                <a id="btnAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Adv. Search</a>
                <a id="btnAdd" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true">Add</a>
                <a id="btnEdit" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Edit</a>
                <a id="btnDelete" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Delete</a>
                <a id="btnView" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-details" plain="true">View</a>
                <a id="btnChangeVoucherEffect" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit" plain="true">Voucher Effect</a>
                <a id="btnApprove" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-approved" plain="true"> <label id="lblOrderStatus">Approve</label> </a>
                <a id="btnPrint" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-pdf" plain="true">Preview</a>
                <a id="btnPrintList" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-print" plain="true">Print List</a>
                <a id="btnPrintListExcel" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-excel" plain="true">Export XL</a>
                
            </div>
        </div>
        <div id="winAdvSearch" class="easyui-window winClass" title="Adv. Search" data-options="modal:true,closed:true,collapsible:false,minimizable:false,maximizable:false,closable:false">

            <fieldset style="margin-bottom: 0px;">
                <legend>Searching Criteria</legend>
                <table cellpadding="2" cellspacing="2" width="100%">
                    <tr>
                        <td style=" width:20%;text-align:right;">
                            <label> Date </label>
                        </td>
                        <td style=" width:80%;text-align:left;">
                            <select id="cboDate" style="width:30%;" onchange="DateActionsOrderDateAdvSearch();"></select>
                            <input id="txtFromDateAdvSearch" type="text" style="width: 100px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />To
                            <input id="txtToDateAdvSearch" type="text" style="width: 100px;" class="easyui-datebox" required="required" data-options="formatter:icsdateformat,parser:icsdateparser" />
                        </td>
                    </tr>
                    <tr>
                        <td style=" width:20%;text-align:right;">
                            <label>Slip No </label>
                        </td>
                        <td style=" width:80%;text-align:left;">
                            <input id="txtARSlipNo_adv" type="text" style="width:100%" />
                        </td>
                    </tr>
                    <tr>
                        <td style=" width:20%;text-align:right;">
                            <label>Product</label>
                        </td>
                        <td style=" width:80%;text-align:left;">
                            <input id="txtProductName" type="text" placeholder="Type Product Name & Press Enter" style="width:89.5%" />
                            <input type="button" id="btnProductPiker" value="Pick"/>
                        </td>
                    </tr>
                    <tr>
                        <td style=" width:20%;text-align:right;">
                            <label>Category</label>
                        </td>
                        <td style=" width:80%;text-align:left;">
                            <select id="cboProductCategory" style="width:100%"></select>
                        </td>
                    </tr>
                    <tr>
                        <td style=" width:20%;text-align:right;">
                            <label>Adj. Type</label>
                        </td>
                        <td style=" width:80%;text-align:left;">
                            <select id="cboAdjustmentType" style="width:100%"></select>
                        </td>
                    </tr>
                </table>

            </fieldset>
                    
            <fieldset class="actionfieldsetstyle">
                <legend>Actions : </legend>
                <label class="lblLoadingMessage" style="float: left;">Loading Please Wait...</label>
                <a id="btnResetAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Reset</a>
                <a id="btnSearchAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" plain="true">Search</a>
                <a id="btnCloseAdvSearch" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
            </fieldset>
        </div>
    </body>
<style type="text/css">
    #winAdvSearch {
        width: 550px;
    }
</style>


    
    <script type="text/javascript">
    var _oAdjustmentRequisitionSlips=[];
    var _sProductIds="";
    var _sMenuID=0;
    var _nBUID = 0;
    var _oWorkingUnits=[];

    $(document).ready(function () {
        _oAdjustmentRequisitionSlips =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _sMenuID =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.MenuID]));
        _nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
        _oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
        var oAdjustmentTypes=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.AdjustmentTypes));
        var oProductCategories = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ProductCategories));
        debugger;
        $("#cboProductCategory").icsLoadCombo({List: oProductCategories,OptionValue: "ProductCategoryID",DisplayText: "ProductCategoryName"});
        if(sessionStorage.getItem("AdjustmentRequisitionSlips")!=null && sessionStorage.getItem("AdjustmentRequisitionSlips").length>0){
            _oAdjustmentRequisitionSlips= jQuery.parseJSON(sessionStorage.getItem('AdjustmentRequisitionSlips'));
            var nIndex= sessionStorage.getItem('SelectedRowIndex');
            DynamicRefreshList(_oAdjustmentRequisitionSlips, 'tblAdjustmentRequisitionSlip');
            if(nIndex>-1){
                $('#tblAdjustmentRequisitionSlip').datagrid('selectRow',nIndex);
            }
        }
        else{
            DynamicRefreshList(_oAdjustmentRequisitionSlips, 'tblAdjustmentRequisitionSlip');
        }
        $("#cboAdjustmentType").icsLoadCombo({
            List: oAdjustmentTypes,
            OptionValue: "id",
            DisplayText: "Value",
            InitialValue:""
        });

        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();
        $(".lblLoadingMessage").hide();
        LoadComboAdv();
    });

    $(document).keydown(function (e) { if (e.keyCode == 27) { $('#winAdjustmentRequisitionSlipOrder').icsWindow('close'); } });

    $('#tblAdjustmentRequisitionSlip').datagrid({ onSelect: function (rowIndex, rowData) { OperationPerforms(rowIndex, rowData); } });

    function OperationPerforms(rowIndex, rowData)
    {
        if (rowData != null && rowData.AdjustmentRequisitionSlipID > 0)
        {
            if (rowData.AprovedByID!=0 )  //Initialized = 1,
            {
                $('#btnEdit,#btnDelete').hide();
            }
            else
            {
                $('#btnEdit,#btnDelete').show();
            }

        }
    }


    /*------------------------------------*/

    $("#btnAdd").click(function(){
        sessionStorage.setItem("Operation", "New");
        sessionStorage.setItem("SelectedRowIndex", -1);
        sessionStorage.setItem("DOHeader", "Add Order");
        sessionStorage.setItem("AdjustmentRequisitionSlips", JSON.stringify($('#tblAdjustmentRequisitionSlip').datagrid('getRows')));
        sessionStorage.setItem("BackLink", window.location.href);
        var tsv=((new Date()).getTime())/1000;
        window.location.href = sessionStorage.getItem('BaseAddress')+ "/AdjustmentRequisitionSlip/ViewAdjustmentRequisitionSlip?buid="+parseInt(sessionStorage.getItem('BUID'))+"&id=0&ts="+tsv;
    });

    $('#btnEdit').click(function (e)
    {

        var oAdjustmentRequisitionSlip = $('#tblAdjustmentRequisitionSlip').datagrid('getSelected');
        if (oAdjustmentRequisitionSlip ==null || oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID <=0 ) { alert("Please select an item from list."); return ; }
        var nIndex=$('#tblAdjustmentRequisitionSlip').datagrid('getRowIndex',oAdjustmentRequisitionSlip);
        if (oAdjustmentRequisitionSlip.AprovedByID!=0 )
        { alert("Already Approve,You can't Change it."); return ; }
        sessionStorage.setItem("Operation", "Edit");
        sessionStorage.setItem("SelectedRowIndex", nIndex);
        sessionStorage.setItem("DOHeader", "Edit Order");
        sessionStorage.setItem("AdjustmentRequisitionSlips", JSON.stringify($('#tblAdjustmentRequisitionSlip').datagrid('getRows')));
        sessionStorage.setItem("BackLink", window.location.href);
        var tsv=((new Date()).getTime())/1000;
        window.location.href = sessionStorage.getItem('BaseAddress')+ "/AdjustmentRequisitionSlip/ViewAdjustmentRequisitionSlip?buid="+parseInt(sessionStorage.getItem('BUID'))+"&id="+parseInt(oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID)+"&ts="+tsv;

    });

    $('#btnDelete').click(function(e){
        var oAdjustmentRequisitionSlip = $('#tblAdjustmentRequisitionSlip').datagrid('getSelected');
        if (oAdjustmentRequisitionSlip ==null || oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID <=0 ) { alert("Please select an item from list."); return ; }
        if (oAdjustmentRequisitionSlip.AprovedByID!=0 )
        { alert("Already Approve,You can't Delete it."); return ; }
        if (!confirm("Confirm to delete?")) return;
        var obj =
        {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oAdjustmentRequisitionSlip,
            ControllerName: "AdjustmentRequisitionSlip",
            ActionName: "Delete",
            TableId: "tblAdjustmentRequisitionSlip",
            IsWinClose: false
        };
        $.icsDelete(obj);

    });

    $('#btnView').click(function (e)
    {
        var oAdjustmentRequisitionSlip = $('#tblAdjustmentRequisitionSlip').datagrid('getSelected');
        if (oAdjustmentRequisitionSlip ==null || oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID <=0 ) { alert("Please select an item from list."); return ; }

        var nIndex=$('#tblAdjustmentRequisitionSlip').datagrid('getRowIndex',oAdjustmentRequisitionSlip);
        sessionStorage.setItem("Operation", "View");
        sessionStorage.setItem("SelectedRowIndex", nIndex);
        sessionStorage.setItem("DOHeader", "View Order");
        sessionStorage.setItem("AdjustmentRequisitionSlips", JSON.stringify($('#tblAdjustmentRequisitionSlip').datagrid('getRows')));
        sessionStorage.setItem("BackLink", window.location.href);
        var tsv=((new Date()).getTime())/1000;
        window.location.href = sessionStorage.getItem('BaseAddress')+ "/AdjustmentRequisitionSlip/ViewAdjustmentRequisitionSlip?buid="+parseInt(sessionStorage.getItem('BUID'))+"&id="+parseInt(oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID)+"&ts="+tsv;
    });

    $('#btnApprove').click(function(e){
        debugger;
        var oAdjustmentRequisitionSlip = $('#tblAdjustmentRequisitionSlip').datagrid('getSelected');
        if (oAdjustmentRequisitionSlip ==null || oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID <=0 ) { alert("Please select an item from list."); return ; }

        var nIndex=$('#tblAdjustmentRequisitionSlip').datagrid('getRowIndex',oAdjustmentRequisitionSlip);
        sessionStorage.setItem("Operation", "Approve");
        sessionStorage.setItem("SelectedRowIndex", nIndex);
        sessionStorage.setItem("DOHeader", "Approve");
        sessionStorage.setItem("AdjustmentRequisitionSlips", JSON.stringify($('#tblAdjustmentRequisitionSlip').datagrid('getRows')));
        sessionStorage.setItem("BackLink", window.location.href);
        var tsv=((new Date()).getTime())/1000;
        window.location.href = sessionStorage.getItem('BaseAddress')+ "/AdjustmentRequisitionSlip/ViewAdjustmentRequisitionSlip?buid="+parseInt(sessionStorage.getItem('BUID'))+"&id="+parseInt(oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID)+"&ts="+tsv;

    });

    $('#btnPrint').click(function (e)
    {
        var oAdjustmentRequisitionSlip = $('#tblAdjustmentRequisitionSlip').datagrid('getSelected');
        if (oAdjustmentRequisitionSlip ==null || oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID <=0 ) { alert("Please select an item from list."); return ; }
        var tsv=((new Date()).getTime())/1000;
        window.open(sessionStorage.getItem('BaseAddress')+ "/AdjustmentRequisitionSlip/PrintAdjustmentRequisitionSlip?id="+oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID, "_blank");
    });

    $('#btnPrintListExcel').click(function(){
        debugger;
        var oAdjustmentRequisitionSlips= $('#tblAdjustmentRequisitionSlip').datagrid('getRows');
        if(oAdjustmentRequisitionSlips.length<=0)
        {
            alert("Data not found ");
            return;
        }
        var sAdjustmentRequisitionSlipIDs = "";
        sAdjustmentRequisitionSlipIDs = ICS_PropertyConcatation(oAdjustmentRequisitionSlips, 'AdjustmentRequisitionSlipID');            
      
        sAdjustmentRequisitionSlipIDs = sAdjustmentRequisitionSlipIDs.substring(0, sAdjustmentRequisitionSlipIDs.length-1);
        var oAdjustmentRequisitionSlip = {ErrorMessage:sAdjustmentRequisitionSlipIDs, BUID: _nBUID};
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/AdjustmentRequisitionSlip/SetAdjustmentRequisitionSlipData",
            traditional: true,
            data:  JSON.stringify(oAdjustmentRequisitionSlip),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var sFeedBackMessage = jQuery.parseJSON(data);
                if (sFeedBackMessage==="Successful")
                {
                    window.open (_sBaseAddress+ "/AdjustmentRequisitionSlip/ExcelAdjustmentRequisitionSlipList");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });

    $('#btnPrintList').click(function(){
      
        debugger;
        var oAdjustmentRequisitionSlips= $('#tblAdjustmentRequisitionSlip').datagrid('getRows');
        if(oAdjustmentRequisitionSlips.length<=0)
        {
            alert("Data not found ");
            return;
        }
        var sAdjustmentRequisitionSlipIDs = "";
        sAdjustmentRequisitionSlipIDs = ICS_PropertyConcatation(oAdjustmentRequisitionSlips, 'AdjustmentRequisitionSlipID');            
      
        sAdjustmentRequisitionSlipIDs = sAdjustmentRequisitionSlipIDs.substring(0, sAdjustmentRequisitionSlipIDs.length-1);
        var oAdjustmentRequisitionSlip = {ErrorMessage:sAdjustmentRequisitionSlipIDs, BUID: _nBUID};
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+"/AdjustmentRequisitionSlip/SetAdjustmentRequisitionSlipData",
            traditional: true,
            data:  JSON.stringify(oAdjustmentRequisitionSlip),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var sFeedBackMessage = jQuery.parseJSON(data);
                if (sFeedBackMessage==="Successful")
                {
                    window.open (_sBaseAddress+ "/AdjustmentRequisitionSlip/PrintAdjustmentRequisitionSlipList");
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });

    });

    $("#btnReload").click(function() {
        window.location.href = sessionStorage.getItem('BaseAddress')+ '/AdjustmentRequisitionSlip/ViewAdjustmentRequisitionSlips?'+"buid="+_nBUID+"&menuid="+_sMenuID; ;
    });

    ////Start adv Searching
    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }
    //Account Of Picker
    $("#btnChangeVoucherEffect").click(function(){
        var oAdjustmentRequisitionSlip= $('#tblAdjustmentRequisitionSlip').datagrid('getSelected');
        if(oAdjustmentRequisitionSlip==null || parseInt(oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID)<=0)
        {
            alert("Please select a item from list!");
            return;
        }

        if(oAdjustmentRequisitionSlip.IsWillVoucherEffect==false)
        {
            if (!confirm("Confirm to Effect?")) return;
            oAdjustmentRequisitionSlip.IsWillVoucherEffect=true;
        }else
        {
            if (!confirm("Confirm to Not Effect?")) return;
            oAdjustmentRequisitionSlip.IsWillVoucherEffect=false;
        }
        var SelectedRowIndex = $('#tblAdjustmentRequisitionSlip').datagrid('getRowIndex', oAdjustmentRequisitionSlip);      
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/AdjustmentRequisitionSlip/UpdateVoucherEffect",
            traditional: true,
            data:  JSON.stringify(oAdjustmentRequisitionSlip),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oAdjustmentRequisitionSlip = jQuery.parseJSON(data);
                if (parseInt(oAdjustmentRequisitionSlip.AdjustmentRequisitionSlipID)>0)
                {
                    alert("Data Saved sucessfully");
                    debugger;
                    $('#tblAdjustmentRequisitionSlip').datagrid('updateRow',{index: SelectedRowIndex,row: oAdjustmentRequisitionSlip});
                }
                else {
                    alert(oAdjustmentRequisitionSlip.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    //Product Pick
    $("#txtProductName").keydown(function (e) {
        debugger;
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            if($('#txtProductName').val()==null || $('#txtProductName').val()=="")
            {
                alert("Please Type Product and Press Enter.");
                $('#txtProductName').focus();
                return;
            }
            PickProduct($('#txtProductName').val());
        }
        if (code == 8) //backspace=8
        {
            //debugger;
            $("#txtProductName").removeClass("fontColorOfPickItem");
            _sProductIds= [];
        }
    });
    $("#btnProductPiker").click(function () {
        PickProduct($('#txtProductName').val());
    });
  
    function PickProduct(sProductName)
    {
        var oProduct = { BUID:sessionStorage.getItem("BUID"),ProductName:sProductName};
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oProduct,
            ControllerName: "AdjustmentRequisitionSlip",
            ActionName: "GetProducts",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {
            debugger;
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Code", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Name", width: 300, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "MUnit", title: "Unit", width: 70, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass: 'clsProductPicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName: 'NameCode',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }


    //End Buyer Search
    $("#btnResetAdvSearch").click(function () {
        ResetAdvSearchWindow();
        DateActionsOrderDateAdvSearch();
    });
    $("#btnSearchAdvSearch").click(function () {
        debugger;

        $(".lblLoadingMessage").show();

        var checkDate = CheckFromAndToDateValidation("cboDate", "txtFromDateAdvSearch", "txtToDateAdvSearch");
        if (!checkDate) {
            alert("Start date must be greater than end date.");
            return false;
        }


        var ncboDate = parseInt($("#cboDate").val());
        var dFromDate = $('#txtFromDateAdvSearch').datebox('getValue');
        var dToDate = $('#txtToDateAdvSearch').datebox('getValue');
        var sARNo = $('#txtARSlipNo_adv').val();
        var nAdjustmentType= 0;
        var nWorkingUnitID= 0;

        var sParams = _sProductIds + "~" +
                      ncboDate + "~" +
                      dFromDate + "~" +
                      dToDate + "~" +
                      nAdjustmentType + "~" +
                      sARNo+"~"+
                      _nBUID+"~"+
            $("#cboProductCategory").val()+'~'+$("#cboAdjustmentType").val();
        var oAdjustmentRequisitionSlip = {
            Note : sParams
        };

        $.ajax({
            type: "POST",
            dataType: "json",
            url: sessionStorage.getItem('BaseAddress') + "/AdjustmentRequisitionSlip/AdvSearch",
            traditional: true,
            data: JSON.stringify(oAdjustmentRequisitionSlip),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var oAdjustmentRequisitionSlips = jQuery.parseJSON(data);
                debugger;
                if (oAdjustmentRequisitionSlips != null) {
                    if (oAdjustmentRequisitionSlips.length > 0)
                    {
                        DynamicRefreshList(oAdjustmentRequisitionSlips, "tblAdjustmentRequisitionSlip");
                        $("#winAdvSearch").icsWindow("close");
                    }
                    else
                    {
                        alert("Sorry, No data found.");
                        DynamicRefreshList([], "tblAdjustmentRequisitionSlip");
                    }

                } else {
                    alert("Sorry, No data found.");
                    DynamicRefreshList([], "tblAdjustmentRequisitionSlip");
                }
                $(".lblLoadingMessage").hide();
            }
        });
    });
    $("#txtSearchByARSlipNo").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){

            var ncboDate = 0;
            var dFromDate = icsdateformat(new Date());
            var dToDate = icsdateformat(new Date());
            var sARNo =$('#txtSearchByARSlipNo').val();
            var nAdjustmentType= 0;
            var nWorkingUnitID= 0;

            var sParams = _sProductIds + "~" +
                          ncboDate + "~" +
                          dFromDate + "~" +
                          dToDate + "~" +
                          nAdjustmentType + "~" +
                          sARNo+"~"+
                          _nBUID;
            var oAdjustmentRequisitionSlip = {
                Note : sParams
            };
            GetsOrders(oAdjustmentRequisitionSlip);
        }
        //else if(nkeyCode==8){
        //    $("#txtSearchByARSlipNo").val("");

        //}
    });
    function GetsOrders(oAdjustmentRequisitionSlip)
    {
        $.ajax
          ({
              type: "POST",
              dataType: "json",
              url : sessionStorage.getItem('BaseAddress')+"/AdjustmentRequisitionSlip/AdvSearch",
              data:  JSON.stringify(oAdjustmentRequisitionSlip),
              contentType: "application/json; charset=utf-8",
              success: function (data) {
                  //debugger;
                  var oAdjustmentRequisitionSlips = jQuery.parseJSON(data);
                  if (oAdjustmentRequisitionSlips.length>0)
                  {
                      DynamicRefreshList(oAdjustmentRequisitionSlips, "tblAdjustmentRequisitionSlip");
                  }
                  else
                  {
                      alert("Data Not found");
                      DynamicRefreshList([], "tblAdjustmentRequisitionSlip");
                  }
              },
              error: function (xhr, status, error)
              {
                  alert(error);
              }
          });
    }
    function LoadComboAdv()
    {

        $("#cboDate,  #cboDeliveryDateAdvS").icsLoadCombo({
            List: _oCompareOperators,
            OptionValue: "id",
            DisplayText: "Value"
        });
    }
    function CheckFromAndToDateValidation(OperationComboId, FromDateId, ToDateId) {
        $("#" + OperationComboId).parent().parent().parent().find("select").removeClass("errorFieldBorder");
        var nCboVal = $("#" + OperationComboId).val();
        if (parseInt(nCboVal) == 5 || parseInt(nCboVal) == 6) {
            var fromDate = $("#" + FromDateId).datebox("getValue");
            var toDate = $("#" + ToDateId).datebox("getValue");
            if (new Date(fromDate) > new Date(toDate)) {
                $("#" + ToDateId).focus();
                $("#" + OperationComboId).addClass("errorFieldBorder");
                $(".lblLoadingMessage").hide();
                return false;
            } else {
                $("#" + OperationComboId).removeClass("errorFieldBorder");
                return true;
            }
        } else {
            return true;
        }
    }

    function ResetAdvSearchWindow() {
        _sProductIds = '';
        $("#winAdvSearch input").not("input[type='button']").val("");
        $("#winAdvSearch input").removeClass("fontColorOfPickItem");
        $("#winAdvSearch select").val(0);
        DateActionsOrderDateAdvSearch();
        $("#txtFromDateAdvSearch,#txtToDateAdvSearch").datebox({ disabled: true });
        $("#txtFromDateAdvSearch,#txtToDateAdvSearch").datebox("setValue", icsdateformat(new Date()));
    }
         
    function DateActionsOrderDateAdvSearch() {
        DynamicDateActions("cboDate", "txtFromDateAdvSearch", "txtToDateAdvSearch");
    }

    function DateActionsDeliveryDateAdvSearch() {
        DynamicDateActions("cboDeliveryDateAdvS", "txtFromDeliveryDateAdvSearch", "txtToDeliveryDateAdvSearch");
    }

    $("#btnCloseAdvSearch").click(function () {
        $("#winAdvSearch").icsWindow("close");
    });
    $("#btnAdvSearch").click(function () {
        debugger;
        $("#winAdvSearch").icsWindow("open", "Delivery Order Advance Search");
        //DynamicRefreshList([], "tblExportPIAdvSearch");
        DynamicResetAdvSearchWindow("winAdvSearch");
        DynamicDateActions("cboDateOptionAdvSearch", "txtFromDateAdvSearch", "txtToDateAdvSearch");

        DynamicDateActions("cboDeliveryDateAdvS", "txtFromDeliveryDateAdvSearch", "txtToDeliveryDateAdvSearch");
        ResetAdvSearchWindow();
    });

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which === 13) {
                SetPickerValueAssign(oPickerobj);
            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        var oreturnObj = null, oreturnObjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnObjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }

         if (oPickerobj.winid == 'winProductPicker')
        {
            if (oreturnObjs!= null && oreturnObjs.length> 0)
            {
                _sProductIds=''; var sMessage='';
                sMessage=(oreturnObjs.length>1)? oreturnObjs.length +" ProductName Selected" : oreturnObjs[0].ProductName;
                $('#txtProductName').val(sMessage);
                $("#txtProductName").addClass("fontColorOfPickItem");
                for(var i=0;i<oreturnObjs.length;i++)
                {
                    _sProductIds=_sProductIds+oreturnObjs[i].ProductID+',';
                }
                _sProductIds=_sProductIds.substring(0,_sProductIds.length-1);

            }
            else
            {
                alert("Please select a Product.");
                return false;
            }

        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
    }
    /// end Adv Searching

</script>
