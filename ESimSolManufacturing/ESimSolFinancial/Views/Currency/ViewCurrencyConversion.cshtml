@{
    ViewBag.Title = "Currency Conversion";
}
<html>
<body>
    @model ESimSol.BusinessObjects.Currency
<div style="font-family: Tahoma">
    @*<table border="0" cellspacing="2" cellpadding="2" style="width:100%">
        <tr>
            <td style="background-color: #CFB53B; text-align: center; width: 100%; color: White">
                <label id="lblHeaderName" style="font-size: 15px; font-weight: bold; text-decoration: Underline">
                    Add Recipe</label>
            </td>
        </tr>
    </table>*@
    <fieldset>
        <legend style="font-weight: bold">Currency Conversion Informations : </legend>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold;width:100%">
            <tr>
                <td style="width: 15%; text-align: right">
                    Convert From :
                </td>
                <td style="width: 35%">
                    @Html.TextBoxFor(model => model.CurrencyName, new { style = "width: 100%;", id = "txtCurrencyName", @readonly = "readonly" })
                </td>
                <td style="width: 15%; text-align: right">
                    Convert To :
                </td>
                <td style="width: 35%">
                    <select id="cboConvertedToCurrency" style="width:100%;height:22px;" disabled></select>
                    @*@Html.DropDownListFor(m => m.ConvertedToCurrencyID, Model.ToCurrencys.Select(x => new SelectListItem() { Text = x.CurrencyName + "[" + x.Symbol + "]", Value = x.CurrencyID.ToString() }), new { id = "cboConvertedToCurrency", style = "width: 305px;" })*@
                </td>
            </tr>
            <tr>
                <td style="width: 15%; text-align: right">
                    Bank :
                </td>
                <td colspan="3" style="width: 85%">
                    @Html.DropDownListFor(m => m.BankID, Model.Banks.Select(x => new SelectListItem() { Text = x.Name + "[" + x.Code + "]", Value = x.BankID.ToString() }), new { id = "cboBank", style = "width: 100%;height:22px;" })
                </td>
            </tr>
            <tr>
                <td style="width: 15%; text-align: right">
                    Sale Rate :
                </td>
                <td style="width: 35%">
                    <input type="text" style="width: 100%; text-align: right" id="txtSaleRate" />
                </td>
                <td style="width: 15%; text-align: right">
                    Purchase Rate :
                </td>
                <td style="width: 35%">
                    <input type="text" style="width: 100%; text-align: right" id="txtPurchaseRate" />
                </td>
            </tr>
        </table>
    </fieldset>
    <div style="margin-left: 2px; height: 375px">
        <table id="tblCurrencyConversion" title="Currency Conversion List" class="easyui-datagrid" style="width: 100%; height: 370px" data-options=" singleSelect: true, fitColumns:false, rownumbers:true,pagination:false,autoRowHeight:false,toolbar: '#toolbar'">
            <thead>
                <tr>
                    <th field="CurrencyName" width="150" align="left">Conversion From</th>
                    <th field="ToCurrency" width="150" align="left">Conversion To</th>
                    <th field="BankName" width="150" align="left">Bank Name</th>
                    <th field="DateSt" width="150" align="left">Conversion Date</th>
                    <th field="RateSale" width="150" align="left">SaleRate</th>
                    <th field="RatePurchase" width="150" align="left">PurchaseRate</th>
                </tr>
            </thead>
        </table>
        ​
        <div style="text-align: left" id="toolbar">
            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true"
                onclick="RefreshGrid()">Refresh</a> <a id="btnAddRawmaterial" href="javascript:void(0)"
                    class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="Add()">Add</a>
            <a id="btnRemoveRawmaterial" href="javascript:void(0)" class="easyui-linkbutton"
                iconcls="icon-remove" plain="true" onclick="Remove()">Remove</a>
        </div>
    </div>
    <fieldset>
        <legend style="font-weight: bold">Action : </legend>
        <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold">
            <tr>
                <td style="width: 700px; text-align: right">
                </td>
                <td style="width: 100px">
                </td>
                <td style="width: 50px">
                    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true"
                        onclick="Close()">Close</a>
                </td>
            </tr>
        </table>
    </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">
    var _oCurrencyConversion;
    var _oCurrencyConversions=[];
    var _Banks = [];
    var _MyCompany = [];
    var _ToCurrencys = [];
    var _oSelectedCurrency =null;
    var _sBaseAddress="";
    var _lBackLink="";
    $(document).ready(function () {
        debugger;
        _sBaseAddress =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _oSelectedCurrency =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oCurrencyConversions=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ConversionListForSelectedCurrncy));
        _Banks=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.Banks));
        _MyCompany=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.MyCompany));
        _ToCurrencys=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ToCurrencys));
        _lBackLink = sessionStorage.getItem("BackLink");
        //var obj = JSON.parse(sessionStorage.getItem("SelectedParam"));
        //document.getElementById('lblHeaderName').innerHTML='Currency Conversion for :' +_oSelectedCurrency.CurrencyName;
        RefreshList();
        $('#txtSaleRate').numberbox({min:0, precision:2 });//number box
        $('#txtPurchaseRate').numberbox({min:0, precision:2 });//number box

        $("#cboConvertedToCurrency").icsLoadCombo({
            List: _ToCurrencys,
            OptionValue: "CurrencyID",
            DisplayText: "CurrencyName"
        });
        $("#cboConvertedToCurrency").val(_MyCompany.BaseCurrencyID);
 });





    function ValidateInput()
    {
        var e = document.getElementById("cboConvertedToCurrency");
        if (e.options[e.selectedIndex].value <= 0) {
            alert('Please select a Converted To Currency');
            $('#cboConvertedToCurrency').focus();
            return;
        }

        var cboBank = document.getElementById("cboBank");
        if (cboBank.options[cboBank.selectedIndex].value <= 0) {
            alert('Please select a Bank');
            $('#cboBank').focus();
            return;
        }
        var nSaleRate= parseFloat( $('#txtSaleRate').numberbox('getValue'))
        if(nSaleRate<=0)
        {
            alert("Please enter Sale Rate!");
            $('#txtSaleRate').focus();
            return false;
        }
        var nPurchaseRate= parseFloat($('#txtPurchaseRate').numberbox('getValue'))
        if(nPurchaseRate<=0)
        {
            alert("Please enter Purchase Rate!");
            $('#txtPurchaseRate').focus();
            return false;
        }
        return true;
    }


    function RefreshObject()
    {
        var e = document.getElementById("cboConvertedToCurrency");
         var cboBank = document.getElementById("cboBank");
        var oCurrencyConversion={
                                    CurrencyConversionID : 0,
                                    CurrencyID : _oSelectedCurrency.CurrencyID,
                                    ToCurrencyID : e.options[e.selectedIndex].value,
                                    BankID : cboBank.options[cboBank.selectedIndex].value,
                                    RateSale : $('#txtSaleRate').numberbox('getValue'),
                                    RatePurchase : $('#txtPurchaseRate').numberbox('getValue')
                                };
        return oCurrencyConversion;
    }

    function Add()
    {
        debugger;
        if(!ValidateInput()) return;
        var oCurrencyConversion=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/Currency/SaveCurrencyConversion",
            traditional: true,
            data:  JSON.stringify(oCurrencyConversion),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //debugger;
                var oCurrencyConv = jQuery.parseJSON(data);
                if(oCurrencyConv.CurrencyConversionID>0)
                {
                    alert("Data Saved sucessfully");
                    //var _oCurrencyConversions = $('#tblCurrencyConversion').datagrid('getRows');
                    //var nIndex=_oCurrencyConversions.length;

                    $('#tblCurrencyConversion').datagrid('appendRow',oCurrencyConv);
                    //$('#tblCurrencyConversion').datagrid('selectRow', nIndex);
                    $('#txtPurchaseRate').numberbox('setValue',0);
                    $('#txtSaleRate').numberbox('setValue',0);
                }
                else {
                    alert(oCurrencyConv.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function Remove()
    {
        var oCurrencyConversion = $('#tblCurrencyConversion').datagrid('getSelected');
        if(oCurrencyConversion==null)
        {
            alert("Please select a item from list!");
            return;
        }
        var conf = confirm("Confirm to delete?");
        if(conf==false)return;
        debugger;

        var SelectedRowIndex=$('#tblCurrencyConversion').datagrid('getRowIndex',oCurrencyConversion);

        if (oCurrencyConversion.CurrencyConversionID > 0)
        {
            $.ajax
                ({
                    type: "GET",
                    dataType: "json",
                    url : _sBaseAddress+  "/Currency/DeleteCurrencyConversion",
                    data: { id: oCurrencyConversion.CurrencyConversionID },
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        //debugger;
                        var feedbackmessage = jQuery.parseJSON(data);
                        if (feedbackmessage == "Data Delete Successfully")
                        {
                           alert("Delete sucessfully");
                          $('#tblCurrencyConversion').datagrid('deleteRow',SelectedRowIndex);

                        }
                        else
                        {
                            alert(feedbackmessage);
                        }
                    },
                    error: function (xhr, status, error)
                    {
                        alert(error);
                    }

                });
            }
    }

    function RefreshList()
    {
          data=_oCurrencyConversions;
          data={"total":""+data.length+"","rows":data};
          $('#tblCurrencyConversion').datagrid('loadData',data);
    }

    function RefreshGrid()
    {
          data=$('#tblCurrencyConversion').datagrid('getRows');
          data={"total":""+data.length+"","rows":data};
          $('#tblCurrencyConversion').datagrid('loadData',data);
    }

    function Close()
    {
        window.location.href = _lBackLink;
    }
</script>
