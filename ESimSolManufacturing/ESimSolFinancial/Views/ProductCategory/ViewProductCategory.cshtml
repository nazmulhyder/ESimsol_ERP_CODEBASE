<html>
<body>
    @model ESimSol.BusinessObjects.ProductCategory
    <div id="divProductCategory" class="easyui-panel" title="Add Item Category" style="font-family:Tahoma; height:100%; width:100%">
        <div style="width:100%; height:87%; text-align:center">
            <fieldset style="height:97%">
                <legend style="font-weight: bold">Item Category Info : </legend>

                <table border="0" style="font-size:11px; font-weight:bold">
                    <tr>
                        <td style="width: 200px; text-align: right">Category Name</td>
                        <td>:</td>
                        <td>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.ProductCategoryName, new { style = "width: 250px;", id = "txtProductCategoryName" })
                            </div>
                        </td>
                       
                    </tr>
                    <tr>
                        <td style="width: 200px; text-align: right">Note</td>
                        <td>:</td>
                        <td>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.Note, new { style = "width: 250px;t", id = "txtNote" })
                            </div>
                        </td>
                       
                    </tr>
                    <tr>
                        <td style="width: 200px; text-align: right">Apply Business Unit</td>
                        <td>:</td>
                        <td>
                            <table id="tblBU" title="" class="easyui-datagrid" style="width:100%; height:120px;  font-size: 12px" fitcolumns="false" rownumbers="true" pagination="false" singleselect="false" autorowheight="false">
                                <thead>
                                    <tr>
                                        <th data-options="field:'Selected',checkbox:true">
                                        </th>
                                        <th field="Name" width="80%">Business Unit</th>
                                    </tr>
                                </thead>
                            </table>
                        </td>

                    </tr>
                    <tr id="trLastLayer">
                        <td style="text-align: right;">Last Layer</td>
                        <td>:</td>
                        <td style="width:20px;text-align:left"><input type="checkbox" id="chkIsLastLayer" style="width:20px;" value=" value" onclick="if(this.checked){IsLastLayerChecked(true)}else{IsLastLayerChecked(false)}" />Yes <input type="checkbox" id="chkIsLastLayerNo" value="value" onclick="    if(this.checked){IsLastLayerChecked(false)}else{IsLastLayerChecked(true)}" />No</td>
                    </tr>
                    <tr id="trApplyGroup">
                        <td style="text-align: right;"> Group wise Product (Apply?)</td>
                        <td>:</td>
                        <td style="width:20px;text-align:left"><input type="checkbox" id="chkIsApplyGroup_Yes" style="width:20px;" value=" value" onclick="if(this.checked){IsGroupChecked(true)}else{IsGroupChecked(false)}" />Yes <input type="checkbox" id="chkIsApplyGroup_No" value="value" onclick="    if(this.checked){IsGroupChecked(false)}else{IsGroupChecked(true)}" />No</td>
                    </tr>
                    <tr id="trApplyProductType">
                        <td style="text-align: right;">Product Type(For Acount Perpuse  (Apply?)</td>
                        <td>:</td>

                        <td style="width:20px;text-align:left"><input type="checkbox" id="chkIsApplyProductType_Yes" style="width:20px;" value=" value" onclick="if(this.checked){IsProductTypeChecked(true)}else{IsProductTypeChecked(false)}" />Yes <input type="checkbox" id="chkIsApplyProductType_No" value="value" onclick="    if(this.checked){IsProductTypeChecked(false)}else{IsProductTypeChecked(true)}" />No</td>

                    </tr>

                    <tr id="trApplyProperty">
                        <td style="text-align: right;"> Property (Apply?)</td>
                        <td>:</td>
                        <td style="width:20px;text-align:left"><input type="checkbox" id="chkIsApplyProperty_Yes" style="width:20px;" value=" value" onclick="if(this.checked){IsPropertyChecked(true)}else{IsPropertyChecked(false)}" />Yes <input type="checkbox" id="chkIsApplyProperty_No" value="value" onclick="    if(this.checked){IsPropertyChecked(false)}else{IsPropertyChecked(true)}" />No</td>
                    </tr>
                    <tr id="trPlantNo">
                        <td style="text-align: right;">Plant No (Lot No Create)(Apply?)</td>
                        <td>:</td>

                        <td style="width:20px;text-align:left"><input type="checkbox" id="chkIsApplyPlantNo_Yes" style="width:20px;" value=" value" onclick="if(this.checked){IsPlantNoChecked(true)}else{IsPlantNoChecked(false)}" />Yes <input type="checkbox" id="chkIsApplyPlantNo_No" value="value" onclick="    if(this.checked){IsPlantNoChecked(false)}else{IsPlantNoChecked(true)}" />No</td>

                    </tr>
                    <tr id="trApplyColor">
                        <td style="text-align: right;"> Color (Apply?)</td>
                        <td>:</td>
                        <td style="width:20px;text-align:left"><input type="checkbox" id="chkIsApplyColor_Yes" style="width:20px;" value=" value" onclick="if(this.checked){IsColorChecked(true)}else{IsColorChecked(false)}" />Yes <input type="checkbox" id="chkIsApplyColor_No" value="value" onclick="    if(this.checked){IsColorChecked(false)}else{IsColorChecked(true)}" />No</td>

                    </tr>
                    <tr id="trApplySize">
                        <td style="text-align: right;"> Size (Apply?)</td>
                        <td>:</td>
                        <td style="width:20px;text-align:left"><input type="checkbox" id="chkIsApplySize_Yes" style="width:20px;" value=" value" onclick="if(this.checked){IsSizeChecked(true)}else{IsSizeChecked(false)}" />Yes <input type="checkbox" id="chkIsApplySize_No" value="value" onclick="    if(this.checked){IsSizeChecked(false)}else{IsSizeChecked(true)}" />No</td>
                    </tr>
                    <tr id="trApplyMeasurement">
                        <td style="text-align: right;">Measurement (Apply?)</td>
                        <td>:</td>
                        <td style="width:20px;text-align:left"><input type="checkbox" id="chkIsApplyMeasurement_Yes" style="width:20px;" value=" value" onclick="if(this.checked){IsMeasurementChecked(true)}else{IsMeasurementChecked(false)}" />Yes <input type="checkbox" id="chkIsApplyMeasurement_No" value="value" onclick="    if(this.checked){IsMeasurementChecked(false)}else{IsMeasurementChecked(true)}" />No</td>
                    </tr>
                    <tr id="trApplySizer">
                        <td style="text-align: right;">Sizer (Apply?)</td>
                        <td>:</td>
                        <td style="width:20px;text-align:left"><input type="checkbox" id="chkIsApplySizer_Yes" style="width:20px;" value=" value" onclick="if(this.checked){IsSizerChecked(true)}else{IsSizerChecked(false)}" />Yes <input type="checkbox" id="chkIsApplySizer_No" value="value" onclick="    if(this.checked){IsSizerChecked(false)}else{IsSizerChecked(true)}" />No</td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <div style="width:100%; height:10%">
            <fieldset>
                <legend style="font-weight:bold"> Action : </legend>
                <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                    <tr>
                        <td style="width:80%; text-align:right"></td>
                        <td style="width: 10%">
                            <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        </td>
                        <td style="width: 10%">
                            <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
    </div>
</body>
</html>

<script type="text/javascript">

    var _oProductCategory=null;
    var _oProductSetup=null;
    var _sBaseAddress="";
    var _sProductCategoryHeader="";
    var _nMenuid=0;
    var _oBusinessUnits = [];
    var _oBUWiseProductCategories = [];
    var _oParentBUWiseProductCategories = [];
    var _lBackLink = "";
    //var _obj = window.dialogArguments;
    $(document).ready(function () {
        _sBaseAddress =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.BaseAddress]));
        _nMenuid = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(HttpContext.Current.Session[SessionInfo.MenuID]));
        _oProductCategory =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        _oProductSetup=@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ProductSetup));
        _oBusinessUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(@ViewBag.BusinessUnits));
        _oBUWiseProductCategories= @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.BUWiseProductCategories));
        _oParentBUWiseProductCategories = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.ParentBUWiseProductCategories));
        var ProductCategorys = _oProductCategory.ProductCategorys;
        //document.getElementById('lblHeaderName').innerHTML=_obj.Name;
        debugger;
        _sProductCategoryHeader=sessionStorage.getItem("ProductCategoryHeader");
        _lBackLink = sessionStorage.getItem("BackLink");
        $('#divProductCategory').panel({ title:_sProductCategoryHeader});
        RefreshByProductSetup();
        if(_sProductCategoryHeader=="View ProductCategory")
        {
            $("#btnSave").hide();
            $("#txtProductCategoryName").prop("disabled",true);
            $("#txtNote").prop("disabled",true);
            $("#chkIsLastLayer").prop("disabled",true);
            //$("#chkIsApplyGroup_Yes").prop("disabled",true);
        }
        else  if(_sProductCategoryHeader=="Edit ProductCategory")
        {
            $("#chkIsLastLayer").prop("disabled",true);
            //$("#trLastLayer").hide();
            //$("#trApplyGroup").hide();

        }
        RefreshControl();
    });

    function RefreshBUs(oBusinessUnits)
    {
        data=oBusinessUnits;
        data={"total":""+data.length+"","rows":data};
        $('#tblBU').datagrid('loadData',data);
    }


    function RefreshByProductSetup()
    {

        if(!_oProductSetup.ApplyGroup_IsShow)
        {
            $("#trApplyGroup").hide();
        }
        if(!_oProductSetup.ApplyProductType_IsShow)
        {
            $("#trApplyProductType").hide();
        }
        if(!_oProductSetup.ApplyProperty_IsShow)
        {
            $("#trApplyProperty").hide();
        }
        if(!_oProductSetup.ApplyPlantNo_IsShow)
        {
            $("#trPlantNo").hide();
        }

    }

    function ValidateInput()
    {
        if(document.getElementById("txtProductCategoryName").value==null || document.getElementById("txtProductCategoryName").value=="")
        {
            alert("Please enter ProductCategory name!");
            $('#txtProductCategoryName').focus();
            return false;
        }
        return true;
    }

    function RefreshObject()
    {
        var oProductSetup= {

            ProductSetupID:_oProductSetup.ProductSetupID,
            IsApplyCategory :true,
            IsApplyGroup:document.getElementById("chkIsApplyGroup_Yes").checked,
            IsApplyProductType :document.getElementById("chkIsApplyProductType_Yes").checked,
            IsApplyProperty :document.getElementById("chkIsApplyProperty_Yes").checked,
            IsApplyPlantNo :document.getElementById("chkIsApplyPlantNo_Yes").checked,
            IsApplyColor:document.getElementById("chkIsApplyColor_Yes").checked,       
            IsApplySize: document.getElementById("chkIsApplySize_Yes").checked,
            IsApplyMeasurement: document.getElementById("chkIsApplyMeasurement_Yes").checked,
            IsApplySizer:document.getElementById("chkIsApplySizer_Yes").checked
        };

        var oProductCategory= {
            ProductCategoryID : _oProductCategory.ProductCategoryID,
            ProductCategoryName : $("#txtProductCategoryName").val(),
            ParentCategoryID : _oProductCategory.ParentCategoryID,
            Note : $("#txtNote").val(),
            IsApplyGroup : document.getElementById("chkIsApplyGroup_Yes").checked,
            IsLastLayer : document.getElementById("chkIsLastLayer").checked,
            BusinessUnits:$('#tblBU').datagrid('getChecked'),
            ProductSetup:oProductSetup
        };
        return oProductCategory;
    }

    $("#btnSave").click(function(){
        if(!ValidateInput()) return;
        var oProductCategory=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : _sBaseAddress+  "/ProductCategory/Save",
            traditional: true,
            data:  JSON.stringify(oProductCategory),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oProductCategory = jQuery.parseJSON(data);
                if (oProductCategory.ErrorMessage==null || oProductCategory.ErrorMessage=="")
                {
                    alert("Data Saved sucessfully");
                    debugger;
                    var oProductCategorys =sessionStorage.getItem("ProductCategorys");
                    var nIndex= parseInt(sessionStorage.getItem("SelectedRowIndex"));

                    if(oProductCategorys!=null)
                    {
                        oProductCategorys = jQuery.parseJSON(oProductCategorys);
                    }
                    else
                    {
                        oProductCategorys=[];
                    }
                    if(nIndex!=-1)
                    {
                        oProductCategorys[nIndex]=oProductCategory;
                    }
                    else
                    {
                        if(oProductCategory.ProductCategoryID>0)
                        {
                            var oTProductCategory={
                                id : oProductCategory.ProductCategoryID,
                                text : oProductCategory.ProductCategoryName,
                                state : "",
                                attributes : "",
                                parentid : oProductCategory.ParentCategoryID,
                                Description :oProductCategory.Note,
                                IsLastLayer : oProductCategory.IsLastLayer
                            };

                        }


                        sessionStorage.setItem("SelectedRowIndex", oProductCategorys.length);
                        //oProductCategorys.push(oTProductCategory);
                    }
                    sessionStorage.setItem("ProductCategorys", JSON.stringify(oProductCategorys));
                    window.location.href = _lBackLink;
                }
                else {
                    alert(oProductCategory.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
    });

    $("#btnClose").click(function(){
        window.location.href = _lBackLink;
    });

    $(document).keydown(function(e) {
        if(e.which == 27)//escape=27
        {
            window.location.href = _sBaseAddress+ "/ProductCategory/ViewProductCategorys?menuid="+_nMenuid;
        }
    });


    function RefreshControl()
    {
        IsLastLayerChecked(_oProductCategory.IsLastLayer);
        IsGroupChecked(_oProductSetup.IsApplyGroup);
        IsProductTypeChecked(_oProductSetup.IsApplyProductType);
        IsPropertyChecked(_oProductSetup.IsApplyProperty);
        IsPlantNoChecked(_oProductSetup.IsApplyPlantNo);
        IsColorChecked(_oProductSetup.IsApplyColor);
        IsSizeChecked(_oProductSetup.IsApplySize);
        IsMeasurementChecked(_oProductSetup.IsApplyMeasurement);
        IsSizerChecked(_oProductSetup.IsApplySizer);
        
        RefreshBUs(_oBusinessUnits);
        SetBUs(_oBUWiseProductCategories);
        if(parseInt(_oProductCategory.ParentCategoryID)>1 && _oParentBUWiseProductCategories.length>0)
        {
            debugger;
            var oTempList = [];
            for(var i =0;i<_oParentBUWiseProductCategories.length;i++)
            {
                var oBU = GetBUObject(_oParentBUWiseProductCategories[i].BUID);
                oTempList.push(oBU);
            }
            RefreshBUs(oTempList);
            if(_oBUWiseProductCategories.length>0)
            {
                SetBUs(_oBUWiseProductCategories); 
            }else
            {
                SetBUs(_oParentBUWiseProductCategories); 
            }
            
        }
        
    }

    function GetBUObject(nBUID)
    {
        for(var i = 0;i<_oBusinessUnits.length;i++)
        {
            if(parseInt(_oBusinessUnits[i].BusinessUnitID) == parseInt(nBUID))
            {
                return _oBusinessUnits[i];
            }
        }
    }
    function SetBUs(oTempBUWiseProductCategories)
    {
       debugger;
        var oBUWiseProductCategories = $('#tblBU').datagrid('getRows');
        if(oTempBUWiseProductCategories.length>0)
        {
            for(var i =0;i<oTempBUWiseProductCategories.length;i++)
            {
                for(var j =0;j<oBUWiseProductCategories.length;j++)
                {
                    if(parseInt(oTempBUWiseProductCategories[i].BUID) == parseInt(oBUWiseProductCategories[j].BusinessUnitID))
                    {
                        $('#tblBU').datagrid('checkRow', j);
                        break;
                    }
                }
            }
        }

    }

    function IsLastLayerChecked(bIstrue)
    {
        if(bIstrue)
        {
            $("#chkIsLastLayer").prop( "checked", true );
            $("#chkIsLastLayerNo").prop( "checked", false );
        }else{
            $("#chkIsLastLayer").prop( "checked", false);
            $("#chkIsLastLayerNo").prop( "checked", true );
        }
    }
    function IsGroupChecked(bIstrue)
    {
        if(bIstrue)
        {
            $("#chkIsApplyGroup_Yes").prop( "checked", true );
            $("#chkIsApplyGroup_No").prop( "checked", false );
        }else{
            $("#chkIsApplyGroup_Yes").prop( "checked", false);
            $("#chkIsApplyGroup_No").prop( "checked", true );
        }
    }
    function IsProductTypeChecked(bIstrue)
    {
        if(bIstrue)
        {
            $("#chkIsApplyProductType_Yes").prop( "checked", true );
            $("#chkIsApplyProductType_No").prop( "checked", false );
        }else{
            $("#chkIsApplyProductType_Yes").prop( "checked", false);
            $("#chkIsApplyProductType_No").prop( "checked", true );
        }
    }
    function IsPropertyChecked(bIstrue)
    {
        if(bIstrue)
        {
            $("#chkIsApplyProperty_Yes").prop( "checked", true );
            $("#chkIsApplyProperty_No").prop( "checked", false );
        }else{
            $("#chkIsApplyProperty_Yes").prop( "checked", false);
            $("#chkIsApplyProperty_No").prop( "checked", true );
        }
    }
    function IsPlantNoChecked(bIstrue)
    {
        if(bIstrue)
        {
            $("#chkIsApplyPlantNo_Yes").prop( "checked", true );
            $("#chkIsApplyPlantNo_No").prop( "checked", false );
        }else{
            $("#chkIsApplyPlantNo_Yes").prop( "checked", false);
            $("#chkIsApplyPlantNo_No").prop( "checked", true );
        }
    }

    function IsColorChecked(bIstrue)
    {
        if(bIstrue)
        {
            $("#chkIsApplyColor_Yes").prop( "checked", true );
            $("#chkIsApplyColor_No").prop( "checked", false );
        }else{
            $("#chkIsApplyColor_Yes").prop( "checked", false);
            $("#chkIsApplyColor_No").prop( "checked", true );
        }
    }
    function IsSizeChecked(bIstrue)
    {
        if(bIstrue)
        {
            $("#chkIsApplySize_Yes").prop( "checked", true );
            $("#chkIsApplySize_No").prop( "checked", false );
        }else{
            $("#chkIsApplySize_Yes").prop( "checked", false);
            $("#chkIsApplySize_No").prop( "checked", true );
        }
    }
    function IsMeasurementChecked(bIstrue)
    {
        if(bIstrue)
        {
            $("#chkIsApplyMeasurement_Yes").prop( "checked", true );
            $("#chkIsApplyMeasurement_No").prop( "checked", false );
        }else{
            $("#chkIsApplyMeasurement_Yes").prop( "checked", false);
            $("#chkIsApplyMeasurement_No").prop( "checked", true );
        }
    }
    
    //
    function IsSizerChecked(bIstrue)
    {
        if(bIstrue)
        {
            $("#chkIsApplySizer_Yes").prop( "checked", true );
            $("#chkIsApplySizer_No").prop( "checked", false );
        }else{
            $("#chkIsApplySizer_Yes").prop( "checked", false);
            $("#chkIsApplySizer_No").prop( "checked", true );
        }
    }
</script>