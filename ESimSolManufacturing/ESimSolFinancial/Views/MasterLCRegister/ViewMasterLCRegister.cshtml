@{
    ViewBag.Title = "Master LC Register";
}
@model ESimSol.BusinessObjects.MasterLC
<script src="~/Views/CommonModal/CommonHistoryModal.js"></script>
<div class="menuMainCollectionTable" ng-app="MasterLCRegisterApp" ng-controller="MLCRegisterController">
    <div style="font-family:Tahoma;text-align:center;width:99%;" class="regionMLCR">
        <fieldset>
            <legend>Searching Criteria</legend>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Style No :</label></div>
                <div class="col-md-3 text-left">
                    <input class="form-control" ng-model="StyleNo">
                </div> 
                <div class="col-md-2 text-right"><label class="control-label">LC Status :</label></div>
                <div class="col-md-2 text-left">
                    <select class="form-control" ng-model="LCStatus" ng-options="item.id as item.Value for item in LCStatusList"></select>
                </div>            
            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Recap No :</label></div>
                <div class="col-md-3 text-left">
                    <input class="form-control" ng-model="OrderRecapNo">
                </div>
                <div class="col-md-2 text-right"><label class="control-label">LC Open Date :</label></div>
                <div class="col-md-2 text-right">
                    <select class="form-control" ng-model="DateOfLCOpen" ng-options="item.id as item.Value for item in CompareOperators" ng-change="DisableLCOpenDateFields()"></select>
                </div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-model="LCOpenStartDateInSt" ng-disabled="disableLCOpenStartDateInSt"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                    </div>
                </div>
                <div class="col-md-2 text-center" style="width:2%;"><label class="control-label">To </label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-model="LCOpenEndDateInSt" ng-disabled="disableLCOpenEndDateInSt"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                    </div>
                </div>
            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Applicant :</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group">
                        <input ng-model="ApplicantName" class="form-control" ng-keydown="SearchKeyDownApplicant($event)" placeholder="Type Applicant & Press Enter" required />
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PickApplicant()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                        </span>
                    </div>
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Shipment Date :</label></div>
                <div class="col-md-2 text-right">
                    <select class="form-control" ng-model="DateOfShipment" ng-options="item.id as item.Value for item in CompareOperators" ng-change="DisableShipmentDateFields()"></select>
                </div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-model="ShipmentStartDateInSt" ng-disabled="disableShipmentStartDateInSt"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                    </div>
                </div>
                <div class="col-md-2 text-center" style="width:2%;"><label class="control-label">To </label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-model="ShipmentEndDateInSt" ng-disabled="disableShipmentEndDateInSt"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                    </div>
                </div>
            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Advice Bank :</label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group">
                        <input ng-model="AdviceBankName" class="form-control" ng-keydown="SearchKeyDownAdviceBank($event)" placeholder="Type Bank Acccount & Press Enter" required />
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="PickAdviceBank()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                        </span>
                    </div>
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Receive Date :</label></div>
                <div class="col-md-2 text-right">
                    <select class="form-control" ng-model="DateOfReceive" ng-options="item.id as item.Value for item in CompareOperators" ng-change="DisableReceiveDateFields()"></select>
                </div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-model="ReceiveStartDateInSt" ng-disabled="disableReceiveStartDateInSt"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                    </div>
                </div>
                <div class="col-md-2 text-center" style="width:2%;"><label class="control-label">To </label></div>
                <div class="col-md-3 text-left">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-model="ReceiveEndDateInSt" ng-disabled="disableReceiveEndDateInSt"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                    </div>
                </div>
            </div>
            <div class="row col-md-12">
                <div class="col-md-2 text-right"><label class="control-label">Report Layout :</label></div>
                <div class="col-md-3 text-left">
                    <select class="form-control" ng-model="ReportLayout" ng-options="item.id as item.Value for item in ReportLayouts"></select>
                </div>
                <div class="col-md-2 text-right"><label class="control-label">Expire Date :</label></div>
                <div class="col-md-2 text-right">
                    <select class="form-control" ng-model="DateOfExpire" ng-options="item.id as item.Value for item in CompareOperators" ng-change="DisableExpireDateFields()"></select>
                </div>
                <div class="col-md-3 text-right">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-model="ExpireStartDateInSt" ng-disabled="disableExpireStartDateInSt"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                    </div>
                </div>
                <div class="col-md-2 text-center" style="width:2%;"><label class="control-label">To </label></div>
                <div class="col-md-3 text-right">
                    <div class="input-group date date-container">
                        <input type="text" class="form-control" ng-model="ExpireEndDateInSt" ng-disabled="disableExpireEndDateInSt"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                    </div>
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend>Actions</legend>
            <button type="button" class="btn-primary btn-sm" aria-label="Left Align" ng-click="Print()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Preview</button>
            <button type="button" class="btn-primary btn-sm" aria-label="Left Align" ng-click="Excel()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Excel</button>
        </fieldset>
    </div>
</div>
<style>
    .regionMLCR .form-horizontal .control-label {
            padding-top:1px;
        }

    .regionMLCR .form-control {
            height: 26px;
            padding: 0px 6px;
            font-size: 12px;
        }

    .regionMLCR .col-md-12 {
        width: 100%;
        padding-right: 5px;
        padding-left: 5px;
        margin-bottom: 5px;
    }

    .regionMLCR .col-md-2 {
        width: 13%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionMLCR .col-md-3 {
        width: 19%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionMLCR .col-md-4 {
        width: 28%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionMLCR .col-md-5 {
        width: 33.33%;
        padding-right: 5px;
        padding-left: 0px;
    }

    .regionMLCR .col-md-6 {
        width: 60%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionMLCR .col-md-10 {
        width: 86%;
        padding-right: 5px;
        padding-left: 5px;
    }

    .regionMLCR .btn-sm {
        padding: 3px 10px;
    }

    .regionMLCR .input-group-addon {
        padding: 4px 8px;
    }
</style>

<script type="text/javascript">
    debugger;
    var oMasterLC = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var nBUID = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oReportLayouts = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ReportLayouts));
    var oCompareOperators = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.CompareOperators));
    var oLCStatus = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LCStatus));
    var MLCRegisterApp = angular.module('MasterLCRegisterApp', ['ngAnimate', 'ui.bootstrap','ui.grid','ui.grid.selection','ui.grid.edit', 'ui.grid.rowEdit','ui.grid.cellNav','ms.service','CommonHistory.service']);
    MLCRegisterApp.controller('MLCRegisterController',  function ($scope,$http,$uibModal,$log,uiGridConstants,msModal,userSession,msGridControl,commonhistoryservice) {
        debugger;
        $('.date-container').datepicker({
            format: "dd M yyyy",
            calendarWeeks: true,
            autoclose: true,
            todayHighlight: true
        });

        $scope.ReportLayouts = oReportLayouts;
        $scope.CompareOperators = oCompareOperators;
        $scope.LCStatusList = oLCStatus;

        $scope.LCStatus = 0;
        $scope.ReportLayout = 0;
        $scope.DateOfLCOpen = 0;
        $scope.DateOfShipment = 0;
        $scope.DateOfReceive = 0;
        $scope.DateOfExpire = 0;

        $scope.StyleNo = "";
        $scope.OrderRecapNo = "";
        $scope.AdviceBankName = "";
        $scope.ApplicantName = "";
        $scope.LCOpenStartDateInSt = "";
        $scope.LCOpenEndDateInSt = "";
        $scope.ShipmentStartDateInSt = "";
        $scope.ShipmentEndDateInSt = "";
        $scope.ReceiveStartDateInSt = "";
        $scope.ReceiveEndDateInSt = "";
        $scope.ExpireStartDateInSt = "";
        $scope.ExpireEndDateInSt = "";

        $scope.disableLCOpenStartDateInSt = true;
        $scope.disableLCOpenEndDateInSt = true;
        $scope.disableShipmentStartDateInSt = true;
        $scope.disableShipmentEndDateInSt = true;
        $scope.disableReceiveStartDateInSt = true;
        $scope.disableReceiveEndDateInSt = true;
        $scope.disableExpireStartDateInSt = true;
        $scope.disableExpireEndDateInSt = true;

        $scope.Applicant = 0;
        $scope.AdviceBankID = 0;

        $scope.SearchKeyDownApplicant = function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var sApplicantName = $.trim($scope.ApplicantName);
                if(sApplicantName == "" || sApplicantName == null) {
                    alert("Type Applicant Name and Press Enter");
                    return;
                }
                $scope.PickApplicant();
            }
            else if (code == 8) { //backspace=8
                $scope.ApplicantName = '';
                $scope.Applicant = 0;
            }
        };

        $scope.PickApplicant = function () {
            debugger;
            var oContractor = {
                Params: '2' + '~' + $.trim($scope.ApplicantName) + '~' + sessionStorage.getItem('BUID')
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(_sBaseAddress+'/Contractor/ContractorSearchByNameType',$.param(oContractor), config).then(
                function (response) {
                    debugger;
                    var oColumns = [{ field: 'ContractorID', name: 'Code',width: '20%' },
                                    { field: 'Name', name: 'Applicant Name',width: '50%', enableSorting: false },
                                    { field: 'Address', name: 'Address',width: '30%', enableSorting: false }];

                    var results = response.data;
                    var modalObj = {
                        size:'md',
                        modalcontroller : 'ModalCommonListCtrl',
                        appcontroller : 'CIRegisterController',
                        objs : results,
                        multiSelect : false,
                        pickertitle : 'Applicant List',
                        searchingbyfieldName : 'Name',
                        columns : oColumns
                    }
                    var modalInstance = msModal.Instance(modalObj);
                    modalInstance.result.then(
                        function (result) {
                            debugger;
                            $scope.ApplicantName = result.Name;
                            $scope.Applicant = result.ContractorID;
                        },
                        function () {
                            $log.info('Modal dismissed at: ' + new Date());
                        });
                },
                function (response) {
                    alert(jQuery.parseJSON(response.data).Message);
                });
        };

        $scope.SearchKeyDownAdviceBank = function (e) {
            debugger;
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                var sAdviceBankName = $.trim($scope.AdviceBankName);
                if(sAdviceBankName == "" || sAdviceBankName == null) {
                    alert("Type Advice bank Account and Press Enter");
                    return;
                }
                $scope.PickAdviceBank();
            }
            else if (code == 8) { //backspace=8
                debugger;
                $scope.AdviceBankName = '';
                $scope.AdviceBankID = 0;
            }
        };

        $scope.PickAdviceBank = function () {
            var oBankAccount = {
                BusinessUnitID : sessionStorage.getItem('BUID'),
                OperationalDeptInInt : '4',//EnumOperationalDept : Export_Own=4
                AccountNo : $.trim($scope.AdviceBankName)
            };
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/BankAccount/GetsBUWithDeptWise',$.param(oBankAccount), config).then(
                function (response) {
                    var oColumns = [{ field: 'BankNameAccountNo', name: 'Account No',width: '20%' },
                                    { field: 'BranchName', name: 'Branch Name',width: '50%', enableSorting: false }];
                    var results = jQuery.parseJSON(response.data);
                    var modalObj = {
                        size : 'md',
                        modalcontroller : 'ModalCommonListCtrl',
                        appcontroller:'CIRegisterController',
                        objs : results,
                        multiSelect : false,
                        pickertitle : 'Bank Account List',
                        searchingbyfieldName : 'BankNameAccountNo',
                        columns : oColumns
                    }
                    var modalInstance = msModal.Instance(modalObj);
                    modalInstance.result.then(
                        function (result) {
                            debugger;
                            $scope.AdviceBankName = result.BankNameAccountNo;
                            $scope.AdviceBankID = result.AdviceBankID;
                        },
                    function () {
                        $log.info('Modal dismissed at: ' + new Date());
                    });
                },
                function (response) {
                    alert(jQuery.parseJSON(response.data).Message);
                });
        };

        $scope.RefreshObject = function () {
            debugger;
            var sSearchingData  =  $scope.DateOfLCOpen +'~';
            sSearchingData = sSearchingData + $.trim($scope.LCOpenStartDateInSt) + '~';
            sSearchingData = sSearchingData + $.trim($scope.LCOpenEndDateInSt) + '~';
            sSearchingData = sSearchingData + $scope.DateOfShipment + '~';
            sSearchingData = sSearchingData + $.trim($scope.ShipmentStartDateInSt) + '~';
            sSearchingData = sSearchingData + $.trim($scope.ShipmentEndDateInSt) + '~';
            sSearchingData = sSearchingData + $scope.DateOfReceive + '~';
            sSearchingData = sSearchingData + $.trim($scope.ReceiveStartDateInSt) + '~';
            sSearchingData = sSearchingData + $.trim($scope.ReceiveEndDateInSt) + '~';
            sSearchingData = sSearchingData + $scope.DateOfExpire + '~';
            sSearchingData = sSearchingData + $.trim($scope.ExpireStartDateInSt) + '~';
            sSearchingData = sSearchingData + $.trim($scope.ExpireEndDateInSt) + '~';

            var oMasterLC = {
                BUID : parseInt(sessionStorage.getItem("BUID")),
                OrderRecapNo : $.trim($scope.OrderRecapNo),
                StyleNo : $.trim($scope.StyleNo),
                ApplicantName : $.trim($scope.ApplicantName),
                Applicant : parseInt($scope.ApplicantName),
                AdviceBankName : $.trim($scope.AdviceBankName),
                AdviceBankID : parseInt($scope.AdviceBankID),
                LCStatus : parseInt($scope.LCStatus),
                LCStatusInInt : parseInt($scope.LCStatus),
                ReportLayout : parseInt($scope.ReportLayout),
                SearchingData : sSearchingData
            };
            return oMasterLC;
        }

        $scope.IsValidInput = function () {
            debugger;
            if (parseInt($scope.DateOfLCOpen) === 1 || parseInt($scope.DateOfLCOpen) === 2 || parseInt($scope.DateOfLCOpen) === 3 || parseInt($scope.DateOfLCOpen) === 4) {
                if ($scope.LCOpenStartDateInSt === null || $scope.LCOpenStartDateInSt === "") {
                    alert("Please select LC Open start date!");
                    return false;
                }
            }
            if (parseInt($scope.DateOfLCOpen) === 5 || parseInt($scope.DateOfLCOpen) === 6) {
                if($scope.LCOpenStartDateInSt === null || $scope.LCOpenStartDateInSt === "") {
                    alert("Please select LC Open start date!");
                    return false;
                }
                if($scope.LCOpenEndDateInSt === null || $scope.LCOpenEndDateInSt === "") {
                    alert("Please select LC Open End date!");
                    return false;
                }
                if(new Date($scope.LCOpenStartDateInSt) > new Date($scope.LCOpenEndDateInSt)) {
                    alert("Start date must be smallar than or equal end date!");
                    return false;
                }
            }

            if (parseInt($scope.DateOfShipment) === 1 || parseInt($scope.DateOfShipment) === 2 || parseInt($scope.DateOfShipment) === 3 || parseInt($scope.DateOfShipment) === 4) {
                if ($scope.ShipmentStartDateInSt === null || $scope.ShipmentStartDateInSt === "") {
                    alert("Please select Shipment start date!");
                    return false;
                }
            }
            if (parseInt($scope.DateOfShipment) === 5 || parseInt($scope.DateOfShipment) === 6) {
                if($scope.ShipmentStartDateInSt === null || $scope.ShipmentStartDateInSt === "") {
                    alert("Please select Shipment start date!");
                    return false;
                }
                if($scope.ShipmentEndDateInSt === null || $scope.ShipmentEndDateInSt === "") {
                    alert("Please select Shipment End date!");
                    return false;
                }
                if(new Date($scope.ShipmentStartDateInSt) > new Date($scope.ShipmentEndDateInSt)) {
                    alert("Start date must be smallar than or equal end date!");
                    return false;
                }
            }

            if (parseInt($scope.DateOfReceive) === 1 || parseInt($scope.DateOfReceive) === 2 || parseInt($scope.DateOfReceive) === 3 || parseInt($scope.DateOfReceive) === 4) {
                if ($scope.ReceiveStartDateInSt === null || $scope.ReceiveStartDateInSt === "") {
                    alert("Please select Receive start date!");
                    return false;
                }
            }
            if (parseInt($scope.DateOfReceive) === 5 || parseInt($scope.DateOfReceive) === 6) {
                if($scope.ReceiveStartDateInSt === null || $scope.ReceiveStartDateInSt === "") {
                    alert("Please select Receive start date!");
                    return false;
                }
                if($scope.ReceiveEndDateInSt === null || $scope.ReceiveEndDateInSt === "") {
                    alert("Please select Receive End date!");
                    return false;
                }
                if(new Date($scope.ReceiveStartDateInSt) > new Date($scope.ReceiveEndDateInSt)) {
                    alert("Start date must be smallar than or equal end date!");
                    return false;
                }
            }

            if (parseInt($scope.DateOfExpire) === 1 || parseInt($scope.DateOfExpire) === 2 || parseInt($scope.DateOfExpire) === 3 || parseInt($scope.DateOfExpire) === 4) {
                if ($scope.ExpireStartDateInSt === null || $scope.ExpireStartDateInSt === "") {
                    alert("Please select Expire start date!");
                    return false;
                }
            }
            if (parseInt($scope.DateOfExpire) === 5 || parseInt($scope.DateOfExpire) === 6) {
                if($scope.ExpireStartDateInSt === null || $scope.ExpireStartDateInSt === "") {
                    alert("Please select Expire start date!");
                    return false;
                }
                if($scope.ExpireEndDateInSt === null || $scope.ExpireEndDateInSt === "") {
                    alert("Please select Expire End date!");
                    return false;
                }
                if(new Date($scope.ExpireStartDateInSt) > new Date($scope.ExpireEndDateInSt)) {
                    alert("Start date must be smallar than or equal end date!");
                    return false;
                }
            }

            if ($scope.ReportLayout <= 0) {
                alert("Please select an Report Layout!");
                return false;
            }
            if (parseInt($scope.DateOfLCOpen) === 0 && parseInt($scope.DateOfShipment) === 0 && parseInt($scope.DateOfReceive) === 0 && parseInt($scope.DateOfExpire) === 0 && parseInt($scope.LCStatus) <= 0 && $scope.ApplicantName === "" && $scope.AdviceBankName === ""  && $scope.StyleNo === "" && $scope.OrderRecapNo === "") {
                alert("Please select atleast one searching criteriea!");
                return false;
            }
            return true;
        };

        $scope.DisableLCOpenDateFields = function () {
            debugger;
            if (parseInt($scope.DateOfLCOpen) === 1 || parseInt($scope.DateOfLCOpen) === 2 || parseInt($scope.DateOfLCOpen) === 3 || parseInt($scope.DateOfLCOpen) === 4) {
                $scope.disableLCOpenStartDateInSt = false;
                $scope.disableLCOpenEndDateInSt = true;
            }
            else if (parseInt($scope.DateOfLCOpen) === 5 || parseInt($scope.DateOfLCOpen) === 6) {
                $scope.disableLCOpenStartDateInSt = false;
                $scope.disableLCOpenEndDateInSt = false;
            }
            else {
                $scope.disableLCOpenStartDateInSt = true;
                $scope.disableLCOpenEndDateInSt = true;
            }
            $scope.LCOpenStartDateInSt = "";
            $scope.LCOpenEndDateInSt = "";
        };

        $scope.DisableShipmentDateFields = function () {
            debugger;
            if (parseInt($scope.DateOfShipment) === 1 || parseInt($scope.DateOfShipment) === 2 || parseInt($scope.DateOfShipment) === 3 || parseInt($scope.DateOfShipment) === 4) {
                $scope.disableShipmentStartDateInSt = false;
                $scope.disableShipmentEndDateInSt = true;
            }
            else if (parseInt($scope.DateOfShipment) === 5 || parseInt($scope.DateOfShipment) === 6) {
                $scope.disableShipmentStartDateInSt = false;
                $scope.disableShipmentEndDateInSt = false;
            }
            else {
                $scope.disableShipmentStartDateInSt = true;
                $scope.disableShipmentEndDateInSt = true;
            }
            $scope.ShipmentStartDateInSt = "";
            $scope.ShipmentEndDateInSt = "";
        };

        $scope.DisableReceiveDateFields = function () {
            debugger;
            if (parseInt($scope.DateOfReceive) === 1 || parseInt($scope.DateOfReceive) === 2 || parseInt($scope.DateOfReceive) === 3 || parseInt($scope.DateOfReceive) === 4) {
                $scope.disableReceiveStartDateInSt = false;
                $scope.disableReceiveEndDateInSt = true;
            }
            else if (parseInt($scope.DateOfReceive) === 5 || parseInt($scope.DateOfReceive) === 6) {
                $scope.disableReceiveStartDateInSt = false;
                $scope.disableReceiveEndDateInSt = false;
            }
            else {
                $scope.disableReceiveStartDateInSt = true;
                $scope.disableReceiveEndDateInSt = true;
            }
            $scope.ReceiveStartDateInSt = "";
            $scope.ReceiveEndDateInSt = "";
        };

        $scope.DisableExpireDateFields = function () {
            debugger;
            if (parseInt($scope.DateOfExpire) === 1 || parseInt($scope.DateOfExpire) === 2 || parseInt($scope.DateOfExpire) === 3 || parseInt($scope.DateOfExpire) === 4) {
                $scope.disableExpireStartDateInSt = false;
                $scope.disableExpireEndDateInSt = true;
            }
            else if (parseInt($scope.DateOfExpire) === 5 || parseInt($scope.DateOfExpire) === 6) {
                $scope.disableExpireStartDateInSt = false;
                $scope.disableExpireEndDateInSt = false;
            }
            else {
                $scope.disableExpireStartDateInSt = true;
                $scope.disableExpireEndDateInSt = true;
            }
            $scope.ExpireStartDateInSt = "";
            $scope.ExpireEndDateInSt = "";
        };

        $scope.Print = function () {
            debugger;
            if (!$scope.IsValidInput()) return;
            var oMasterLC = $scope.RefreshObject();
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/MasterLCRegister/SetSessionSearchCriteria',$.param(oMasterLC), config).then(
                function (response) {
                    debugger;
                    var sFeedBackMessage = jQuery.parseJSON(response.data);
                    if (sFeedBackMessage === "Successful") {
                        var tsv = ((new Date()).getTime())/1000;
                        window.open(_sBaseAddress+'/MasterLCRegister/Print?ts='+tsv,"_blank");
                    }
                },
                function (response) {
                    alert(jQuery.parseJSON(response.data).Message);
                });
        };

        $scope.Excel = function () {
            debugger;
            if (!$scope.IsValidInput()) return;
            var oMasterLC = $scope.RefreshObject();
            var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
            $http.post(sessionStorage.getItem('BaseAddress')+'/MasterLCRegister/SetSessionSearchCriteria',$.param(oMasterLC), config).then(
                function (response) {
                    debugger;
                    var sFeedBackMessage = jQuery.parseJSON(response.data);
                    if (sFeedBackMessage === "Successful") {
                        var tsv = ((new Date()).getTime())/1000;
                        window.open(_sBaseAddress+'/MasterLCRegister/ExportToExcel?ts='+tsv,"_blank");
                    }
                },
                function (response) {
                    alert(jQuery.parseJSON(response.data).Message);
                });
        };
    });
</script>








