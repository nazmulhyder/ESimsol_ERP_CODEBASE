@using ESimSol.BusinessObjects;
@model  ConsumptionRequisition
<br />
<table>
    <tr>
        <td width="100%" style="text-align: center; font-size: 10px; font-weight: bold">
            <u>Akij Textile Mills Limited</u>
        </td>
    </tr>
    <tr>
        <td width="100%" style="text-align: center; font-size: 10px; font-weight: bold">
            <u>@Model.Note</u>
        </td>
    </tr>
</table>
<br />
<table cellpadding="3" cellspacing="3" style="font-size: 12px">
    @{
        int nSLNo = 0;
        Double TotalValue = 0;
    }
    <tr border="1" bgcolor="#DEDEDE">
        <td style="text-align: center;" width="6%">
            <strong>SL No</strong>
        </td>
        <td style="text-align: center;" width="65%">
            <strong>Project</strong>
        </td>
        <td style="text-align: center;" width="14%">
            <strong>Quantity</strong>
        </td>
       
        <td style="text-align: center;" width="15%">
            <strong>Value (BDT)</strong>
        </td>
    </tr>
    @foreach (ConsumptionRequisition oConsumptionRequisition in Model.ConsumptionRequisitions)
    {

        TotalValue = TotalValue + @oConsumptionRequisition.TotalValuePrice;

        nSLNo++;
        <tr border="1">
            <td style="text-align: right;">
                @nSLNo.ToString()
            </td>
            <td style="text-align: left;">
                @oConsumptionRequisition.ProjectName
            </td>
            <td style="text-align: right;">
                @oConsumptionRequisition.RequiredQty
            </td>
            <td style="text-align: right;" >
                @oConsumptionRequisition.TotalValuePrice.ToString("0.00")
            </td>
           
        </tr>
         
    }
    <tr border="1">
        <td colspan="3" style="text-align: right; font-size: 14px; font-weight: bold">
            Total Amount:
        </td>
        <td  style="text-align: right; font-size: 15px; font-weight: bold" >
            @TotalValue.ToString("0.00")
        </td>
    </tr>
</table>
<br />
<br />
<br />
<br />
<table border="0" cellpadding="3" cellspacing="3">
    <tr>
        <td width="33%" style="text-align: left; font-size: 9px">
        </td>
        <td width="34%" style="text-align: left; font-size: 9px">
        </td>
        <td width="33%" style="text-align: left; font-size: 9px">
        </td>
    </tr>
    <tr>
        <td width="33%" style="text-align: left; font-size: 9px">
            __________________
        </td>
        <td width="34%" style="text-align: center; font-size: 9px">
            __________________
        </td>
        <td width="33%" style="text-align: right; font-size: 9px">
            __________________
        </td>
    </tr>
    <tr>
        <td width="33%" style="text-align: left; font-size: 9px">
            Requested By
        </td>
        <td width="34%" style="text-align: center; font-size: 9px">
            Received By
        </td>
        <td width="33%" style="text-align: right; font-size: 9px">
            Authorized By
        </td>
    </tr>
    <tr>
        <td width="33%" style="text-align: left; font-size: 9px">
        </td>
        <td width="34%" style="text-align: center; font-size: 9px">
        </td>
        <td width="33%" style="text-align: right; font-size: 9px">
        </td>
    </tr>
    <tr>
        <td>
        </td>
        <td>
        </td>
        <td>
        </td>
    </tr>
</table>
@*<script type="text/javascript">



function formatPrice(val, row) 
{

    if (val == null) {
        val = 0.00;
    }
    val = parseFloat(val);
    var test = val.toFixed(2);
    var tests = addComma(test);
    return tests;
}

function addComma(nStr)
{
    nStr += '';
    x = nStr.split('.');
    x1 = x[0];
    x2 = x.length > 1 ? '.' + x[1] : '';
    var process = /(\d+)(\d{3})/;
    while (process.test(x1)) {
        x1 = x1.replace(process, '$1' + ',' + '$2');
    }
    return x1 + x2;
} 

</script>*@