<html>
<head>
    @{ViewBag.Title = "Transfer Requisition";}
</head>
<body>
    @model ESimSol.BusinessObjects.TransferRequisitionSlip
    <div id="progressbarParent" style="width:100%;height:100%;margin:0 auto;text-align:center; margin-left: auto;margin-right: auto;left: 0;right: 0;z-index: 1;">
        <div style="margin: 0px auto;margin-top: 251px;text-align:center;width:390px;">
            <label style="font-size:18px;">Please wait</label>
            <div id="progressbar" style="width:100%;height:37px;"></div>
        </div>
    </div>
    <div class="menuMainCollectionTable">
        <div id="divTransferRequisitionSlip" class="easyui-panel" title="Transfer Requisition" style="font-family:Tahoma; text-align:center; height:89%;">
            <div style="width:100%;">
                <fieldset>
                    <legend style="font-weight:bold">Transfer Requisition info: </legend>
                    <table style="width:100%" cellpadding="1" cellspacing="1">
                        <tr>
                            <td style="width: 10%; text-align: right">
                                Transfer No:
                            </td>
                            <td style="width: 25%; text-align: left">
                                @Html.TextBoxFor(model => model.TRSNO, new { style = "width: 100%;", id = "txtTRSNO", disabled = "disabled" })
                            </td>
                            <td style="width: 10%; text-align:right;">
                                Issue Date:
                            </td>
                            <td style="width:20%; text-align:left;">
                                <input id="txtIssueDate" type="text" class="easyui-datebox" style="width:100%;" data-options="formatter:icsdateformat,parser:icsdateparser" />                                
                            </td>
                            <td style="width:10%; text-align: right">
                                Requisition Type:
                            </td>
                            <td style="width:25%; text-align: right">
                                <select id="cboRequisitionType" style="width: 100%"></select>
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 10%; text-align: right">
                                Issue BU:
                            </td>
                            <td style="width: 25%; text-align: left">
                                @Html.TextBoxFor(model => model.IssueBUName, new { style = "width: 100%;", id = "txtIssueBUName", disabled = "disabled" })
                            </td>
                            <td style="width: 10%; text-align:right;">
                                Receive BU:
                            </td>
                            <td style="width:20%; text-align:left;">
                                <select id="cboReceiveBusinessUnit" style="width:98%"></select>
                            </td>
                            <td style="width:10%; text-align: right">
                                Vehicle No :
                            </td>
                            <td style="width: 25%; text-align: right">
                                @Html.TextBoxFor(model => model.VehicleNo, new { style = "width: 100%;", id = "txtVehicleNo" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 10%; text-align: right">
                                Issue Store :
                            </td>
                            <td style="width: 25%; text-align: left">
                                <input id="txtIssueStore" style="width:80%;" type="text" placeholder="Type store & Press Enter" />
                                <input type="button" value="Pick" style="width:18%;" id="btnPickWorkingUnit" />
                            </td>
                            <td style="width: 10%; text-align:right;">
                                Receive Store:
                            </td>
                            <td style="width:20%; text-align:left;">
                                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                    <tr>
                                        <td style="width:80%"><input type="text" id="txtReceiveStore" style="width:100%" placeholder="Type Store Name & Press Enter"></td>
                                        <td style="width:20%"><input type="button" id="btnReceiveStore" style="width:100%" onclick="PickReceiveStore()" value="Pick"></td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width:10%; text-align: right">
                                Driver Name :
                            </td>
                            <td style="width: 25%; text-align: right">
                                @Html.TextBoxFor(model => model.DriverName, new { style = "width: 100%;", id = "txtDriverName" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width: 10%; text-align: right">
                                Challan No :
                            </td>
                            <td style="width: 25%; text-align: left">
                                @Html.TextBoxFor(model => model.ChallanNo, new { style = "width: 98.5%;", id = "txtChallanNo" })
                            </td>
                            <td style="width: 10%; text-align: right">
                                Remarks :
                            </td>
                            <td style="width: 20%; text-align: left">                                
                                @Html.TextBoxFor(model => model.Remark, new { style = "width: 98.5%;", id = "txtRemark" })
                            </td>                            
                            <td style="width:10%; text-align: right">
                                Gate Pass No :
                            </td>
                            <td style="width: 25%; text-align: right">
                                @Html.TextBoxFor(model => model.GatePassNo, new { style = "width: 100%;", id = "txtGatePassNo" })
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>

            <table id="tblTransferRequisitionSlipDetail" title="Transfer Requisition Details" class="easyui-datagrid" style="height:325px; width:100%;" fitcolumns="false" rownumbers="true" pagination="false" singleselect="true" autorowheight="false" toolbar="#toolbar" data-options="onClickRow: onClickRow">                
                <thead data-options="frozen:true">
                    <tr>
                        <th field="ProductCode" width="100px" align="center">Code</th>
                        <th field="ProductName" width="180px" align="left">Product</th>
                        <th field="LotNo" width="150px" align="left">Lot No</th>
                        <th field="StyleNo" width="150px" align="left">Style No</th>
                    </tr>
                </thead>
                <thead>
                    <tr>                        
                        <th field="ColorName" width="100px" align="left">Color</th>
                        <th field="SizeName" width="100px" align="left">Size</th>
                        <th field="MUSymbol" width="70px" align="left">Unit</th>
                        <th field="LotCurrentBalance" width="100px" align="right" formatter="formatPrice">Current Balance</th>
                        <th data-options="field:'QTY',align:'right',editor:{type:'numberbox',options:{precision:2}}" width="80px">Qty</th>
                        <th data-options="field:'SuggestLotNo',width:100,height:60 ,align:'Left',editor:{type:'text'}" width="120px" align="Left">Suggest Lot No</th>
                        <th data-options="field:'BagBales',align:'right',editor:{type:'numberbox',options:{precision:2}}" width="80px">Bag/Bales</th>
                        <th data-options="field:'Remark',width:100,height:60 ,align:'Left',editor:{type:'text'}" width="200px" align="Left">Remark</th>
                    </tr>
                </thead>
            </table>
            <div id="toolbar">
                <input type="text" placeholder="Press Enter With Style No" id="txtStyle" style="width:170px" /><input type="button" id="btnStylePiker" value="Pick" />
                <input id="txtProduct" style="width:150px" class="reset-text" placeholder="Search By Product Name" /><input type="button" value="Pick" id="btnPickProduct" /><input type="button" value="Sugg" id="btnPickProductSuggest" />
                <input id="txtLot" style="width:150px" class="reset-text" placeholder="Search By Lot" /><input type="button" value="Pick" id="btnPickLot" /><input type="button" value="Sugg" id="btnPickLotSugg" />
                <a id="btnRemoveDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-remove" plain="true">Remove</a>
                <a id="btnRefreshDetail" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" plain="true">Refresh</a>
            </div>
        </div>
        <fieldset style="height:8%">
            <legend style="font-weight: bold">Action : </legend>
            <table border="0" cellspacing="2" cellpadding="2" style="font-size: 11px; font-weight: bold; width:100%">
                <tr>
                    <td style="width:83%; text-align:right"></td>
                    <td style="width:17%;text-align:right;">                       
                        <a id="btnSave" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-save" plain="true">Save</a>
                        <a id="btnClose" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" plain="true">Close</a>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
</body>
</html>
<script type="text/javascript">
    $(document).ready(function () {
        var oTransferRequisitionSlip =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
        var oRequisitionTypes = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.RequisitionTypes));
        var oReceiveBusinessUnits = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ReceiveBusinessUnits));
        var oIssueStores = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.IssueStores));
        var oReceivedStores = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ReceivedStores));
        var oClientOperationSetting = @Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ClientOperationSetting));

        $('#cboRequisitionType').data('RequisitionTypes', oRequisitionTypes);
        $('#cboReceiveBusinessUnit').data('ReceiveBusinessUnits', oReceiveBusinessUnits);
        $('#txtIssueStore').data('IssueStores', oIssueStores);

        $('#txtReceiveStore').data('ReceivedWorkingUnitID',oTransferRequisitionSlip.ReceivedWorkingUnitID);
        $('#divTransferRequisitionSlip').data('TransferRequisitionSlip', oTransferRequisitionSlip);
        $('#divTransferRequisitionSlip').data('ClientOperationSetting', oClientOperationSetting);

        $('#txtProduct').data('Product', null);
        $('#txtStyle').data('TechnicalSheet', null);
        RefreshCombobox();

        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").hide();

        $('#txtIssueDate').datebox('setValue', oTransferRequisitionSlip.IssueDateTimeSt);
        if(parseInt(oTransferRequisitionSlip.TRSID)>0)
        {
            RefreshControl(oTransferRequisitionSlip);
        }
    });

    function RefreshCombobox()
    {
        var oRequisitionTypes = $('#cboRequisitionType').data('RequisitionTypes');
        var oReceiveBusinessUnits = $('#cboReceiveBusinessUnit').data('ReceiveBusinessUnits');

        $("#cboRequisitionType").icsLoadCombo({List: oRequisitionTypes, OptionValue: "id", DisplayText: "Value"});
        $("#cboReceiveBusinessUnit").icsLoadCombo({List: oReceiveBusinessUnits, OptionValue: "BusinessUnitID", DisplayText: "Name"});

    }
    function updateProgress() {
        var value =$('#progressbar').progressbar('getValue');
        if (value < 96){
            value += Math.floor(Math.random() * 10);
            $('#progressbar').progressbar('setValue', value);
        }
    }
    function hideShow(miliseconds) {
        $("#progressbarParent").hide();
    }
    $('#cboRequisitionType').change(function(){
        RequsitionTypeChange(true);
    });

    $('#cboReceiveBusinessUnit').change(function(){
        $('#txtReceiveStore').data('ReceivedWorkingUnitID',0);
        $('#txtReceiveStore').val("");
    });

    $("#txtIssueStore").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13){
            var txtIssueStore=$.trim($("#txtIssueStore").val());
            if(txtIssueStore==""){ alert("Type Store name to search."); return false; }
            GetWorkingUnit(txtIssueStore);
        }
        else if(nkeyCode==8)
        {

            var oTransferRequisitionSlip= $('#divTransferRequisitionSlip').data('TransferRequisitionSlip');
            $("#txtIssueStore").removeClass("fontColorOfPickItem");
            oTransferRequisitionSlip.IssueWorkingUnitID = 0;
            $('#divTransferRequisitionSlip').data('TransferRequisitionSlip',oTransferRequisitionSlip);
            var oTransferRequsitionDetails = [];
            RefreshDetailList(oTransferRequsitionDetails);
        }
    });
    $("#btnPickWorkingUnit").click(function () {
        var txtIssueStore=$.trim($("#txtIssueStore").val());
        GetWorkingUnit(txtIssueStore);
    });
    function GetWorkingUnit(txtIssueStore)
    {
        var oWorkingUnits =  $('#txtIssueStore').data('IssueStores');
        if(oWorkingUnits.length>0)
        {
            var tblColums = [];
            var oColumn = { field: "WorkingUnitCode", title: "Code", width: 80, align: "left" };tblColums.push(oColumn);
            oColumn = { field: "WorkingUnitName", title: "Name", width: 270, align: "left" };tblColums.push(oColumn);

            var oPickerParam = {
                winid: 'winWorkingUnitPicker',
                winclass:'clsWorkingUnitPicker',
                winwidth: 520,
                winheight: 460,
                tableid: 'tblWorkingUnit',
                tablecolumns: tblColums,
                datalist:oWorkingUnits,
                multiplereturn: false,
                searchingbyfieldName:'WorkingUnitName',
                windowTittle: 'Store List'
            };
            $.icsPicker(oPickerParam);
            IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
        }
        else
        {
            alert("Data Not Found.");
        }


    }


    function RequsitionTypeChange(bIsComboChange)
    {
        if(bIsComboChange)
        {
            //RequisitionType: 1 = InternalTransfer & 2 = ExternalTransfer
            var nRequisitionType = parseInt($('#cboRequisitionType').val());
            var oTransferRequisitionSlip = $('#divTransferRequisitionSlip').data('TransferRequisitionSlip');
            if(nRequisitionType===1)
            {
                var oReceiveBusinessUnits  = [];
                var oTempReceiveBusinessUnits = $('#cboReceiveBusinessUnit').data('ReceiveBusinessUnits');
                for(i=0; i<oTempReceiveBusinessUnits.length; i++)
                {
                    if( parseInt(oTempReceiveBusinessUnits[i].BusinessUnitID) === parseInt(oTransferRequisitionSlip.IssueBUID))
                    {
                        oReceiveBusinessUnits.push(oTempReceiveBusinessUnits[i]);
                    }
                }
                $("#cboReceiveBusinessUnit").icsLoadCombo({List: oReceiveBusinessUnits, OptionValue: "BusinessUnitID", DisplayText: "Name"});
                $('#cboReceiveBusinessUnit').val(oTransferRequisitionSlip.IssueBUID);
                $('#cboReceiveBusinessUnit').prop('disabled', true);
            }
            else
            {
                var oReceiveBusinessUnits  = [];
                var oTempReceiveBusinessUnits = $('#cboReceiveBusinessUnit').data('ReceiveBusinessUnits');
                for(i=0; i<oTempReceiveBusinessUnits.length; i++)
                {
                    if( parseInt(oTempReceiveBusinessUnits[i].BusinessUnitID) != parseInt(oTransferRequisitionSlip.IssueBUID))
                    {
                        oReceiveBusinessUnits.push(oTempReceiveBusinessUnits[i]);
                    }
                }
                $("#cboReceiveBusinessUnit").icsLoadCombo({List: oReceiveBusinessUnits, OptionValue: "BusinessUnitID", DisplayText: "Name"});
                $('#cboReceiveBusinessUnit').prop('disabled', false);
            }
            RefreshReceivedStore();
        }
        else
        {
            //RequisitionType: 1 = InternalTransfer & 2 = ExternalTransfer
            var nRequisitionType = parseInt($('#cboRequisitionType').val());
            if(nRequisitionType===1)
            {
                $('#cboReceiveBusinessUnit').prop('disabled', true);
            }
            else
            {
                $('#cboReceiveBusinessUnit').prop('disabled', false);
            }
        }
    }
    $("#txtReceiveStore").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13)
        {
            if($.trim($('#txtReceiveStore').val())==null || $.trim($('#txtReceiveStore').val())=="")
            {
                alert("Type Store Name and Press Enter");
                return;
            }
            PickReceiveStore();
        }
        else if(nkeyCode==8)
        {
            $('#txtReceiveStore').data('ReceivedWorkingUnitID',0);
            //$('#txtReceiveStore').val("");
            $("#txtReceiveStore").removeClass("fontColorOfPickItem");
        }
    });
    function PickReceiveStore()
    {
        var nReceiveBUID = parseInt($('#cboReceiveBusinessUnit').val());
        if(nReceiveBUID>0)
        {
            var  oBusinessUnit ={ BusinessUnitID : nReceiveBUID,Note:$.trim($('#txtReceiveStore').val())};

            var obj = {
                BaseAddress: sessionStorage.getItem('BaseAddress'),
                Object: oBusinessUnit,
                ControllerName: "TransferRequisitionSlip",
                ActionName: "GetsReceivedStore",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].WorkingUnitID > 0) {
                        var tblColums = []; var oColumn = { field: "WorkingUnitCode", title: "Code", width:100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "WorkingUnitNameWithBU", title: "Store Name", width:450, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winReceiveStorePicker',
                            winclass: 'clsReceiveStorePicker',
                            winwidth:600,
                            winheight: 460,
                            tableid: 'tblReceiveStorePicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'WorkingUnitName',
                            windowTittle: 'WorkingUnit List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                }else{
                    alert("Data Not Found.");
                }
            });

        }

    }

    function RefreshControl(oTransferRequisitionSlip)
    {
        $('#cboRequisitionType').val(oTransferRequisitionSlip.RequisitionTypeInt);
        $('#cboReceiveBusinessUnit').val(oTransferRequisitionSlip.ReceivedBUID);
        $('#txtIssueStore').val(oTransferRequisitionSlip.IssueStoreName);
        $('#txtReceiveStore').val(oTransferRequisitionSlip.ReceivedStoreName);
        if(oTransferRequisitionSlip.TRSID>0)
        {
            $("#txtIssueStore,#txtReceiveStore").addClass("fontColorOfPickItem");
        }
        RefreshDetailList(oTransferRequisitionSlip.TransferRequisitionSlipDetails);
        RequsitionTypeChange(false);

        var sTransferRequisitionSlipHeader = sessionStorage.getItem("TransferRequisitionSlipHeader");
        if(sTransferRequisitionSlipHeader=="View Transfer Requisition")
        {
            $('#btnSave,#btnRemoveDetail').hide();
            $("#divTransferRequisitionSlip :input").prop('disabled', true);
        }
    }

    function RefreshDetailList(oTransferRequsitionDetails)
    {
        var data=oTransferRequsitionDetails;
        data={"total":""+data.length+"","rows":data};
        $('#tblTransferRequisitionSlipDetail').datagrid('loadData',data);
    }

    function Validation()
    {
        if(parseInt($('#cboRequisitionType').val())<=0)
        {
            $('#cboRequisitionType').focus();
            $('#cboRequisitionType').addClass("errorFieldBorder");
            alert('Please Select Requisition Type!');
            return false;
        }
        else{
            $('#cboRequisitionType').removeClass("errorFieldBorder");
        }

        var sIssueDate = $('#txtIssueDate').datebox('getValue');
        if(sIssueDate===null || sIssueDate==="")
        {
            alert('Please select Expected Delivery Date!');
            return false;
        }

        var oTransferRequisitionSlip = $('#divTransferRequisitionSlip').data('TransferRequisitionSlip');
        if(oTransferRequisitionSlip===null || parseInt(oTransferRequisitionSlip.IssueBUID)<=0)
        {
            alert('Invalid Issue Business Unit!');
            return false;
        }

        if(parseInt($('#cboReceiveBusinessUnit').val())<=0){
            $('#cboReceiveBusinessUnit').focus();
            $('#cboReceiveBusinessUnit').addClass("errorFieldBorder");
            alert('Please Select Receive Business Unit!');
            return false;
        }
        else{
            $('#cboReceiveBusinessUnit').removeClass("errorFieldBorder");
        }

        var oTransferRequisitionSlip= $('#divTransferRequisitionSlip').data('TransferRequisitionSlip');
        if(parseInt(oTransferRequisitionSlip.IssueWorkingUnitID)<=0)
        {
            $('#txtIssueStore').focus();
            $('#txtIssueStore').addClass("errorFieldBorder");
            alert('Please Pick Issue Store!');
            return false;
        }
        else{
            $('#txtIssueStore').removeClass("errorFieldBorder");
        }

        if(parseInt($('#txtReceiveStore').data('ReceivedWorkingUnitID'))<=0)
        {
            $('#txtReceiveStore').focus();
            $('#txtReceiveStore').addClass("errorFieldBorder");
            alert('Please Select Receive Store!');
            return false;
        }
        else{
            $('#txtReceiveStore').removeClass("errorFieldBorder");
        }

        if(parseInt(oTransferRequisitionSlip.IssueWorkingUnitID)===parseInt($('#txtReceiveStore').data('ReceivedWorkingUnitID')))
        {
            $('#txtReceiveStore').focus();
            $('#txtReceiveStore').addClass("errorFieldBorder");
            alert('Issue Store & Receive Store Must Different!');
            return false;
        }

        //if($.trim($('#txtVehicleNo').val())===null || $.trim($('#txtVehicleNo').val())===""){
        //    $('#txtVehicleNo').focus();
        //    $('#txtVehicleNo').addClass("errorFieldBorder");
        //    alert('Please Enter Vehicle No!');
        //    return false;
        //}
        //else{
        //    $('#txtVehicleNo').removeClass("errorFieldBorder");
        //}

        //if($.trim($('#txtDriverName').val())===null || $.trim($('#txtDriverName').val())===""){
        //    $('#txtDriverName').focus();
        //    $('#txtDriverName').addClass("errorFieldBorder");
        //    alert('Please Enter Driver Name!');
        //    return false;
        //}
        //else{
        //    $('#txtDriverName').removeClass("errorFieldBorder");
        //}

        //if($.trim($('#txtGatePassNo').val())===null || $.trim($('#txtGatePassNo').val())===""){
        //    $('#txtGatePassNo').focus();
        //    $('#txtGatePassNo').addClass("errorFieldBorder");
        //    alert('Please Enter GatePassNo!');
        //    return false;
        //}
        //else{
        //    $('#txtGatePassNo').removeClass("errorFieldBorder");
        //}

        //if($.trim($('#txtRemark').val())===null || $.trim($('#txtRemark').val())===""){
        //    $('#txtRemark').focus();
        //    $('#txtRemark').addClass("errorFieldBorder");
        //    alert('Please Enter Remarks!');
        //    return false;
        //}
        //else{
        //    $('#txtRemark').removeClass("errorFieldBorder");
        //}

        var oTransferRequisitionSlipDetails = $('#tblTransferRequisitionSlipDetail').datagrid('getRows');
        if(oTransferRequisitionSlipDetails.length<=0)
        {
            alert("Please enter at least one Item!");
            return false;
        }

        for(i=0; i<oTransferRequisitionSlipDetails.length; i++)
        {
            if(parseFloat(oTransferRequisitionSlipDetails[i].QTY)<=0)
            {
                alert("Please enter Qty for Product : "+ oTransferRequisitionSlipDetails[i].ProductName +", & Code :"+ oTransferRequisitionSlipDetails[i].ProductCode);
                return false;
            }
        }
        return true;
    }

    function RefreshObject()
    {
        var oTRS = $('#divTransferRequisitionSlip').data('TransferRequisitionSlip');
        var oTransferRequisitionSlip={
            TRSID : parseInt(oTRS.TRSID),
            TRSNO : $.trim($('#txtTRSNO').val()),
            RequisitionTypeInt : parseInt($('#cboRequisitionType').val()),
            TransferStatusInt : parseInt(oTRS.TransferStatusInt),
            IssueBUID : parseInt(oTRS.IssueBUID),
            IssueWorkingUnitID : parseInt(oTRS.IssueWorkingUnitID),
            ReceivedBUID : parseInt($('#cboReceiveBusinessUnit').val()),
            ReceivedWorkingUnitID : parseInt($('#txtReceiveStore').data('ReceivedWorkingUnitID')),
            PreparedByID : parseInt(oTRS.PreparedByID),
            AuthorisedByID : parseInt(oTRS.AuthorisedByID),
            Remark : $.trim($('#txtRemark').val()),
            IssueDateTime : $('#txtIssueDate').datebox('getValue'),
            VehicleNo : $.trim($('#txtVehicleNo').val()),
            DriverName : $.trim($('#txtDriverName').val()),
            GatePassNo : $.trim($('#txtGatePassNo').val()),
            ChallanNo:$.trim($('#txtChallanNo').val()),
            DisburseByUserID : parseInt(oTRS.DisburseByUserID),
            ReceivedByUserID : parseInt(oTRS.ReceivedByUserID),
            TransferRequisitionSlipDetails : $('#tblTransferRequisitionSlipDetail').datagrid('getRows')
        };
        return oTransferRequisitionSlip;
    }

    $("#btnSave").click(function (){
        endEditing();
        if(!Validation()) return false;
        var oTransferRequisitionSlip=RefreshObject();
        $.ajax({
            type: "POST",
            dataType: "json",
            url : sessionStorage.getItem('BaseAddress')+"/TransferRequisitionSlip/Save",
            traditional: true,
            data:  JSON.stringify(oTransferRequisitionSlip),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                oTransferRequisitionSlip = jQuery.parseJSON(data);
                if (oTransferRequisitionSlip.ErrorMessage==null || oTransferRequisitionSlip.ErrorMessage=="") {
                    alert("Data Saved successfully");
                    var oTransferRequisitionSlips = sessionStorage.getItem("TransferRequisitionSlips");
                    var nIndex = parseInt(sessionStorage.getItem("SelectedRowIndex"));
                    if (oTransferRequisitionSlips != null) {
                        oTransferRequisitionSlips = jQuery.parseJSON(oTransferRequisitionSlips);
                    }
                    else {
                        oTransferRequisitionSlips = [];
                    }
                    if (nIndex != -1) {
                        oTransferRequisitionSlips[nIndex] = oTransferRequisitionSlip;
                    }
                    else {
                        sessionStorage.setItem("SelectedRowIndex", oTransferRequisitionSlips.length);
                        oTransferRequisitionSlips.push(oTransferRequisitionSlip);
                    }
                    sessionStorage.setItem("TransferRequisitionSlips", JSON.stringify(oTransferRequisitionSlips));
                    window.location.href = sessionStorage.getItem("BackLink");
                }
                else {
                    alert(oTransferRequisitionSlip.ErrorMessage);
                }
            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    });


    //Start Product Picker
    $("#btnPickProductSuggest").click(function () {
        if($('#txtStyle').data('TechnicalSheet')==null)
        {
            alert("Please Select Style.")
            return;
        }
        var oBillOfMaterial = { TechnicalSheetID: parseInt($('#txtStyle').data('TechnicalSheet').TechnicalSheetID)};
            var obj = {
                BaseAddress: sessionStorage.getItem('BaseAddress'),
                Object: oBillOfMaterial,
                ControllerName: "TransferRequisitionSlip",
                ActionName: "PickTransferRequisitionSlipDetails",
                IsWinClose: false
            };
            $.icsDataGets(obj, function (response) {
                if (response.status && response.objs.length > 0) {
                    if (response.objs[0].ProductID > 0) {
                        var tblColums = []; var oColumn = { field: "ProductCode", title: "Code", width:100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ProductName", title: "Product Name", width:150, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "ColorName", title: "Color", width:100, align: "left" }; tblColums.push(oColumn);
                        oColumn = { field: "SizeName", title: "Size", width:100, align: "left" }; tblColums.push(oColumn);
                        var oPickerParam = {
                            winid: 'winBillOfMaterialPicker',
                            winclass: 'clsBillOfMaterialPicker',
                            winwidth:600,
                            winheight: 460,
                            tableid: 'tblBillOfMaterialPicker',
                            tablecolumns: tblColums,
                            datalist: response.objs,
                            multiplereturn: false,
                            searchingbyfieldName: 'ProductName',
                            windowTittle: 'Product List'
                        };
                        $.icsPicker(oPickerParam);
                        IntializePickerbutton(oPickerParam);
                    }
                    else {
                        alert(response.objs[0].ErrorMessage);
                    }

                }else{
                    alert("Data Not Found.");
                }
            });

    });

    $("#btnPickProduct").click(function () {
        var oTRS = $('#divTransferRequisitionSlip').data('TransferRequisitionSlip');
        if(parseInt(oTRS.IssueWorkingUnitID)<=0){
            $('#txtIssueStore').focus();
            $('#txtIssueStore').addClass("errorFieldBorder");
            alert('Please Select Issue Store.');
            return false;
        }
        else{
            $('#txtIssueStore').removeClass("errorFieldBorder");
        }

        GetProducts("");
    });
    $("#txtProduct").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode===13)
        {
            var sProductName=$.trim($("#txtProduct").val());
            if(sProductName=="")
            {
                alert("Press Enter With Product Name!");
                return false;
            }
            var oTRS = $('#divTransferRequisitionSlip').data('TransferRequisitionSlip');
            if(parseInt(oTRS.IssueWorkingUnitID)<=0){
                $('#txtIssueStore').focus();
                $('#txtIssueStore').addClass("errorFieldBorder");
                alert('Please Select Issue Store.');
                return false;
            }
            else{
                $('#txtIssueStore').removeClass("errorFieldBorder");
            }
            GetProducts(sProductName);
        }
        else if(nkeyCode===8)
        {
            $("#txtProduct").val("");
            $('#txtProduct').data('Product', null);
        }
    });
    function GetProducts(sProductName)
    {
        var oTRS = $('#divTransferRequisitionSlip').data('TransferRequisitionSlip');
        var oLot = {  BUID:sessionStorage.getItem("BUID"), ProductName:sProductName,WorkingUnitID:parseInt(oTRS.IssueWorkingUnitID)};
        var obj = {
            BaseAddress: _sBaseAddress,
            Object: oLot,
            ControllerName: "TransferRequisitionSlip",
            ActionName: "SearchProducts",
            IsWinClose: false
        };

        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].ProductID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "ProductCode", title: "Code", width:90, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ProductName", title: "Name", width: 300, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "MUnit", title: "Unit", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ProductCategoryName", title: "Category", width: 200, align: "left" }; tblColums.push(oColumn);
                    var oPickerParam = {
                        winid: 'winProductPicker',
                        winclass:'clsProductPicker',
                        winwidth: 700,
                        winheight: 460,
                        tableid: 'tblProductPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName:'ProductName',
                        windowTittle: 'Product List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else{
                alert("No product found.");
            }
        });
    }
    //End Product Picker

    //Pick Lot Picker
    $("#btnPickLotSugg").click(function (){
        if($('#txtStyle').data('TechnicalSheet')==null)
        {
            alert("Please Pick Style.")
            return;
        }
        var oProduct = $('#txtProduct').data('Product');
        if(oProduct === null || parseInt(oProduct.ProductID)<=0)
        {
            $('#txtProduct').focus();
            $('#txtProduct').addClass("errorFieldBorder");
            alert("Please select Product!");
            return;
        }
        var oTRSlip= $('#divTransferRequisitionSlip').data('TransferRequisitionSlip');
        var nIssueStore= parseInt(oTRSlip.IssueWorkingUnitID);
        if(nIssueStore === null || parseInt(nIssueStore)<=0)
        {
            $('#txtIssueStore').focus();
            $('#txtIssueStore').addClass("errorFieldBorder");
            alert("Please select Issue Store!");
            return;
        }
        var oLot = {
            ProductID: parseInt(oProduct.ProductID),
            LotNo : $("#txtLot").val(),
            WorkingUnitID: nIssueStore,
            StyleID:parseInt($('#txtStyle').data('TechnicalSheet').TechnicalSheetID)
        };
        GetsLot(oLot);
    });
    $("#txtLot").keydown(function (e) {
        var nkeyCode = e.keyCode || e.which;
        if(nkeyCode==13)
        {
            var oProduct = $('#txtProduct').data('Product');
            if(oProduct === null || parseInt(oProduct.ProductID)<=0)
            {
                $('#txtProduct').focus();
                $('#txtProduct').addClass("errorFieldBorder");
                alert("Please select Product!");
                return;
            }
            var oTRSlip= $('#divTransferRequisitionSlip').data('TransferRequisitionSlip');
            var nIssueStore= parseInt(oTRSlip.IssueWorkingUnitID);
            if(nIssueStore === null || parseInt(nIssueStore)<=0)
            {
                $('#txtIssueStore').focus();
                $('#txtIssueStore').addClass("errorFieldBorder");
                alert("Please select Issue Store!");
                return;
            }
            debugger;
            var oLot = {
                ProductID: parseInt(oProduct.ProductID),
                LotNo : $("#txtLot").val(),
                WorkingUnitID: nIssueStore,
                StyleID:0
            };
            GetsLot(oLot);
        }
        else if(nkeyCode==8)
        {
            $("#txtLot").val("");
        }
    });
    $("#btnPickLot").click(function (){

        var oProduct = $('#txtProduct').data('Product');
        if(oProduct === null || parseInt(oProduct.ProductID)<=0)
        {
            $('#txtProduct').focus();
            $('#txtProduct').addClass("errorFieldBorder");
            alert("Please select Product!");
            return;
        }
        var oTRSlip= $('#divTransferRequisitionSlip').data('TransferRequisitionSlip');
        var nIssueStore= parseInt(oTRSlip.IssueWorkingUnitID);
        if(nIssueStore === null || parseInt(nIssueStore)<=0)
        {
            $('#txtIssueStore').focus();
            $('#txtIssueStore').addClass("errorFieldBorder");
            alert("Please select Issue Store!");
            return;
        }
        var oLot = {
            ProductID: parseInt(oProduct.ProductID),
            LotNo : $("#txtLot").val(),
            WorkingUnitID: nIssueStore,
            StyleID:0
        };
        GetsLot(oLot);
    });
    function GetsLot(oLot)
    {
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oLot,
            ControllerName: "Lot",
            ActionName: "GetsLot",
            IsWinClose: false
        };
        $("#progressbar").progressbar({ value: 0 });
        $("#progressbarParent").show();
        var intervalID = setInterval(updateProgress, 250);
        $.icsDataGets(obj, function (response) {
            clearInterval(intervalID);
            $("#progressbarParent").hide();
            if (response.status && response.objs.length > 0) {
                if (response.objs[0].LotID > 0) {
                    debugger;
                    var tblColums = [];
                    var oColumn = { field: "LotNo", title: "Lot No", width: 120, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "Balance", title: "Qty", width: 80, align: "right", formatter:formatPrice };tblColums.push(oColumn);
                    oColumn = { field: "MUName", title: "Unit", width: 70, align: "left"};tblColums.push(oColumn);
                    oColumn = { field: "ProductNameCode", title: "Name", width: 180, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ColorName", title: "Color", width: 70, align: "left"};tblColums.push(oColumn);
                    oColumn = { field: "WorkingUnitName", title: "Store", width: 140, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ContractorName", title: "Supplier", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "ParentTypeSt", title: "Lot Type", width: 100, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "GSM", title: "GSM", width: 70, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "MCDia", title: "MC Dia", width: 80, align: "left" };tblColums.push(oColumn);
                    oColumn = { field: "FinishDia", title: "Finish Dia", width: 100, align: "left" };tblColums.push(oColumn);
                    var oClientOperationSetting =  $('#divTransferRequisitionSlip').data('ClientOperationSetting');
                    if(parseInt(oClientOperationSetting.Value)==1)//if Procurement  Apply
                    {
                        oColumn = { field: "MCDia", title: "MC Dia", width:70, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "FinishDia", title: "Finish Dia", width:70, align: "left" };tblColums.push(oColumn);
                        oColumn = { field: "GSM", title: "GSM", width:60, align: "left" };tblColums.push(oColumn);
                    }
                    var oPickerParam = {
                        winid: 'winLotPicker',
                        winclass:'clsLotPicker',
                        winwidth: 950,
                        winheight: 460,
                        tableid: 'tblLotPicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: true,
                        searchingbyfieldName:'LotNoWithSupplierName',
                        windowTittle: 'Lot List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);//multiplereturn, winclassName
                }
                else { alert(response.objs[0].ErrorMessage); }
            }
            else
            {
                alert("No Lot found.");
            }
        });
    }
    //End Lot Picker


    //start style picker
    $("#txtStyle").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) // Enter Press
        {
            var sStyleNumber = $.trim($('#txtStyle').val());
            if(sStyleNumber === null || sStyleNumber === "")
            {
                alert("Press Enter With Style Number!");
                $('#txtStyle').focus();
                return;
            }
            PickStyles(sStyleNumber);
        }
    });
    $("#btnStylePiker").click(function () {
        PickStyles("");
    });
    $('#txtStyle').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 8) //backspace=8
        {
            $("#txtStyle").removeClass("fontColorOfPickItem");
            $('#txtStyle').data('TechnicalSheet', null);
        }
    });
    function PickStyles(sStyleNumber)
    {
        var oTechnicalSheet = { StyleNo: sStyleNumber };
        var obj = {
            BaseAddress: sessionStorage.getItem('BaseAddress'),
            Object: oTechnicalSheet,
            ControllerName: "TechnicalSheet",
            ActionName: "StyleSearch",
            IsWinClose: false
        };
        $.icsDataGets(obj, function (response) {

            if (response.status && response.objs.length > 0) {
                if (response.objs[0].TechnicalSheetID > 0) {
                    var tblColums = []; var oColumn = { field: "StyleNo", title: "Style No", width: 100, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "BuyerName", title: "Buyer Name", width: 200, align: "left" }; tblColums.push(oColumn);
                    oColumn = { field: "SessionName", title: "Business Session", width: 100, align: "left" }; tblColums.push(oColumn);

                    var oPickerParam = {
                        winid: 'winStylePicker',
                        winclass: 'clsStylePicker',
                        winwidth: 600,
                        winheight: 460,
                        tableid: 'tblStylePicker',
                        tablecolumns: tblColums,
                        datalist: response.objs,
                        multiplereturn: false,
                        searchingbyfieldName: 'StyleNo',
                        windowTittle: 'Style List'
                    };
                    $.icsPicker(oPickerParam);
                    IntializePickerbutton(oPickerParam);
                }
                else {
                    alert(response.objs[0].ErrorMessage);
                }

            }else{
                alert("Data Not Found.");
            }
        });
    }
    //end style picker

    function IntializePickerbutton(oPickerobj) {
        $("#" + oPickerobj.winid).find("#btnOk").click(function () {
            //for Single Select
            SetPickerValueAssign(oPickerobj);
        });
        $(document).find('.' + oPickerobj.winclass).keydown(function (e) {
            if (e.which == 13)//enter=13
            {
                SetPickerValueAssign(oPickerobj);

            }
        });
    }

    function SetPickerValueAssign(oPickerobj) {
        var oreturnObj = null, oreturnobjs = [];
        if (oPickerobj.multiplereturn) {
            oreturnobjs = $('#' + oPickerobj.tableid).datagrid('getChecked');
        } else {
            oreturnObj = $('#' + oPickerobj.tableid).datagrid('getSelected');
        }
        $("#" + oPickerobj.winid).icsWindow("close");
        $("#" + oPickerobj.winid).remove();
        if(oPickerobj.winid == 'winReceiveStorePicker')
        {
            if (oreturnObj != null && parseInt(oreturnObj.WorkingUnitID)> 0)
            {
                $('#txtReceiveStore').data('ReceivedWorkingUnitID',oreturnObj.WorkingUnitID);
                $('#txtReceiveStore').val(oreturnObj.WorkingUnitNameWithBU);
                $("#txtReceiveStore").addClass("fontColorOfPickItem");
                $('#txtReceiveStore').focus();
                $('#txtReceiveStore').addClass("errorFieldBorder");
            }
            else
            {
                alert("Data Not Found.");
                return;
            }
        }
        else if (oPickerobj.winid == 'winProductPicker')
        {
            if (oreturnObj != null && oreturnObj.ProductID > 0)
            {
                $('#txtProduct').data('Product', oreturnObj);
                $('#txtProduct').val(oreturnObj.ProductName);
                $('#txtLot').val("");
                $('#txtLot').focus();
                $('#txtLot').addClass("errorFieldBorder");
            }
            else
            {
                alert("Data Not Found.");
                return;
            }
        }else if (oPickerobj.winid == 'winBillOfMaterialPicker')
        {
            if (oreturnObj != null && oreturnObj.ProductID > 0)
            {
                $('#txtProduct').data('Product', oreturnObj);
                $('#txtProduct').val(oreturnObj.ProductName);
                $('#txtLot').val("");
                $('#txtLot').focus();
                $('#txtLot').addClass("errorFieldBorder");
            }
            else
            {
                alert("Data Not Found.");
                return;
            }
        }
        else if (oPickerobj.winid == 'winLotPicker')
        {
            if (oreturnobjs.length > 0)
            {
                var oProduct = $('#txtProduct').data('Product');
                if(oProduct === null || parseInt(oProduct.ProductID)<=0)
                {
                    $('#txtProduct').focus();
                    $('#txtProduct').addClass("errorFieldBorder");
                    alert("Please select Product!");
                    return;
                }
                var oTempStyle = { StyleID : 0, StyleNo : '' };
                var oTechnicalSheet = $('#txtStyle').data('TechnicalSheet');                
                if(oTechnicalSheet!=null && parseInt(oTechnicalSheet.TechnicalSheetID)>0)
                {
                    oTempStyle.StyleID = parseInt(oTechnicalSheet.TechnicalSheetID);
                    oTempStyle.StyleNo = oTechnicalSheet.StyleNo;                 
                }
                for (i=0; i<oreturnobjs.length;i++)
                {
                    if(IsExists(parseInt(oreturnobjs[i].LotID), parseInt(oTempStyle.StyleID)))
                    {
                        alert("Product : "+ oreturnobjs[i].ProductName + " & Lot No : " + oreturnobjs[i].LotNo + " already exists!");
                        return;
                    }

                    var oTRSDetail ={
                        TRSDetailID : 0,
                        TRSID : 0,
                        StyleID : parseInt(oTempStyle.StyleID),
                        ProductID : parseInt(oreturnobjs[i].ProductID),
                        LotID : parseInt(oreturnobjs[i].LotID),
                        QTY : 0,
                        MUnitID : parseInt(oreturnobjs[i].MUnitID),
                        BagBales : 0,
                        UnitPrice : parseFloat(oreturnobjs[i].UnitPrice),
                        CurrencyID : parseInt(oreturnobjs[i].CurrencyID),
                        SuggestLotNo : "",
                        Remark : "N/A",
                        DestinationLotID : 0,
                        MUName : oreturnobjs[i].MUName,
                        MUSymbol : oreturnobjs[i].MUName,
                        CSymbol : oreturnobjs[i].Currency,
                        LotNo : oreturnobjs[i].LotNo,
                        ColorName : oreturnobjs[i].ColorName,
                        SizeName : oreturnobjs[i].SizeName,
                        DestinationLotNo : "",
                        LotCurrentBalance : parseFloat(oreturnobjs[i].Balance),
                        ProductName : oreturnobjs[i].ProductName,
                        ProductCode : oreturnobjs[i].ProductCode,
                        StyleNo : oTempStyle.StyleNo
                    }
                    $('#tblTransferRequisitionSlipDetail').datagrid('appendRow', oTRSDetail);
                }
                endEditing();
                $('#txtLot').val("");
                $('#txtProduct').data('Product', null);
                //$('#txtStyle').data('TechnicalSheet', null);
                $('#txtProduct').val("");
                //$('#txtStyle').val("");
                $('#txtProduct').focus();
            }
            else
            {
                alert("Data Not Found.");
                return;
            }
        }
        else if (oPickerobj.winid=='winStylePicker')
        {
            if (oreturnObj != null && oreturnObj.TechnicalSheetID > 0)
            {
                $('#txtStyle').val(oreturnObj.StyleNo);
                $('#txtStyle').addClass('fontColorOfPickItem');
                $('#txtStyle').data('TechnicalSheet', oreturnObj);
                $('#txtProduct').focus();
            }
            else
            {
                alert("Data Not Found.");
                return;
            }
        }else if (oPickerobj.winid == 'winWorkingUnitPicker')
        {
            debugger;
            if (oreturnObj != null && parseInt(oreturnObj.WorkingUnitID)> 0)
            {

                var oTransferRequisitionSlip= $('#divTransferRequisitionSlip').data('TransferRequisitionSlip');
                $('#txtIssueStore').val(oreturnObj.WorkingUnitName);
                $("#txtIssueStore").addClass("fontColorOfPickItem");
                oTransferRequisitionSlip.IssueWorkingUnitID =oreturnObj.WorkingUnitID;
                $('#divTransferRequisitionSlip').data('TransferRequisitionSlip',oTransferRequisitionSlip);
            }

        }
    }

    function IsExists(nLotID, nStyleID)
    {
        var oTRSDetails = $('#tblTransferRequisitionSlipDetail').datagrid('getRows');
        for(var i=0; i<oTRSDetails.length; i++)
        {
            if(parseInt(oTRSDetails[i].LotID)=== parseInt(nLotID) && parseInt(oTRSDetails[i].StyleID)=== parseInt(nStyleID))
            {
                return true;
            }
        }
        return false;
    }

    $("#btnRefreshDetail").click(function (){
        endEditing();
    });

    $('#btnClose').click(function(e){
        window.location.href = sessionStorage.getItem("BackLink");
    });

    $("#btnRemoveDetail").click(function () {
        var oTransferRequisitionSlipDetail = $("#tblTransferRequisitionSlipDetail").datagrid("getSelected");
        if (oTransferRequisitionSlipDetail == null || parseInt(oTransferRequisitionSlipDetail.ProductID) <= 0)
        {
            alert("Please select an item from list!");
            return false;
        }
        if (!confirm("Confirm to Delete?")) return false;
        var SelectedRowIndex=$('#tblTransferRequisitionSlipDetail').datagrid('getRowIndex',oTransferRequisitionSlipDetail);
        alert("Data Delete Successfully.");
        $('#tblTransferRequisitionSlipDetail').datagrid('deleteRow',SelectedRowIndex);
    });

    var editIndex = undefined;
    function endEditing(){
        if (editIndex == undefined){return true}
        if ($('#tblTransferRequisitionSlipDetail').datagrid('validateRow', editIndex)){
            $('#tblTransferRequisitionSlipDetail').datagrid('endEdit', editIndex);
            editIndex = undefined;
            return true;
        }
        else
        {
            return false;
        }
    }

    function onClickRow(index){
        if (editIndex != index){
            if (endEditing())
            {
                $('#tblTransferRequisitionSlipDetail').datagrid('selectRow', index).datagrid('beginEdit', index);
                editIndex = index;
            }
            else
            {
                $('#tblTransferRequisitionSlipDetail').datagrid('selectRow', editIndex);
            }
        }
    }
</script>