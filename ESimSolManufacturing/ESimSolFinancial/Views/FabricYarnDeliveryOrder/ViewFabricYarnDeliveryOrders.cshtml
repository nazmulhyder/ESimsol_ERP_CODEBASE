@{
    ViewBag.Title = "Fabric Yarn Delivery Order";
}
@model IEnumerable <ESimSol.BusinessObjects.FabricYarnDeliveryOrder>

    <script src="~/Views/FabricYarnDeliveryChallan/AdvanceSearch.js"></script>
    <script src="~/Views/FabricYarnDeliveryOrder/AdvanceSearch.js"></script>
    <div ng-app="FYDModule" style="height:550px; width:100%;overflow:hidden;">

        <div class="region-tab" style="height:30px;">
            <div class="tab">
                <button id="btnFYDOrder" class="tablinks" onclick="openTab(event)">Yarn Delivery Order</button>
                <button id="btnFYDChallan" class="tablinks" onclick="openTab(event)">Yarn Delivery Challan</button>
       
            </div>

            <div style="padding-top:5px;">
                <div id="regionFYDOrder" ng-controller="FYDOCntrl" >
                    <div class="row ui-grid-top-panel">
                     
                            <div class="col-md-12">
                                <div class="form-inline">
                                    <input type="text" ng-model="FEONo" ng-change="filter()" ng-keyup="searchFEONoKeyUp($event)" class="form-control" style="width:120px" placeholder="Search FEO NO" />
                                    <input type="text" ng-model="FYDNo" ng-change="filter()" ng-keyup="searchFYDNoKeyUp($event)" class="form-control" style="width:120px" placeholder="Search FDY NO" />
                                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="AdvanceSearch()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Adv.Search</button>
                                    <label>Issue Date:</label>
                                    <input type="checkbox" ng-model="chkIssueDate" />
                                    <div class="input-group date date-container" style="width:180px;">
                                        <input type="text" class="form-control" ng-model="dtIssueFrom" ng-disabled="!chkIssueDate"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                                    </div>
                                    <span style="height:26px;"><span class="label label-primary">To</span></span>
                                    <div class="input-group date date-container" style="width:180px">
                                        <input type="text" class="form-control" ng-model="dtIssueTo" ng-disabled="!chkIssueDate"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                                    </div>
                                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="SearchByIssueDate()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="PrintDeliveryStatement()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Delivery Statement</button>

                                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="getPendingDO()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Pending DO</button>
                                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="approve()"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Approve</button>
                                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="createChallan()"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Create Challan</button>
                                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="print()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Print</button>


                                </div>
                            </div>
                        
                  
                    </div>
                    <div class="row" style="margin:2px; padding:0;">
                        <div style="width:100%;height:450px;" ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav class="grid ui-grid-selectable"></div>
                    </div>
                </div>
                
                <div id="regionFYDChallan" ng-controller="FYDChallanCntrl" >
                    <div class="row ui-grid-top-panel">
                        <div class="col-md-12">
                            <div class="form-inline">
                                <input type="text" ng-model="FEONo" ng-change="filter()" ng-keyup="searchFEONoKeyUp($event)" class="form-control" style="width:120px" placeholder="Search FEO NO" />
                                <input type="text" ng-model="FYDChallanNo" ng-change="filter()" ng-keyup="searchFYDChallanNoKeyUp($event)" class="form-control" style="width:160px" placeholder="Search FDY Challan" />
                                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="AdvanceSearch()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Adv.Search</button>
                                <label>Issue Date:</label>
                                <input type="checkbox" ng-model="chkIssueDate" />
                                <div class="input-group date date-container" style="width:180px;">
                                    <input type="text" class="form-control" ng-model="dtIssueFrom" ng-disabled="!chkIssueDate"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                                </div>
                                <span style="height:26px;"><span class="label label-primary">To</span></span>
                                <div class="input-group date date-container" style="width:180px">
                                    <input type="text" class="form-control" ng-model="dtIssueTo" ng-disabled="!chkIssueDate"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                                </div>
                                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="SearchByIssueDate()"> <span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="PrintDeliveryStatement()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Delivery Statement</button>
                                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="view()"> <span class="glyphicon glyphicon-list" aria-hidden="true"></span> View</button>                               
                                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="disburse()"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Disburse</button>
                                <button type="button" class="btn btn-sm btn-danger" aria-label="Left Align" ng-click="delete()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Delete</button>          
                                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="print()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Print</button> 
                                <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="ExcelDS()"> <span class="glyphicon glyphicon-export" aria-hidden="true"></span> Excel</button>                                                      
                            </div>
                        </div>
                    </div>
                    <div class="row" style="margin:2px; padding:0;">
                        <div style="width:100%" ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-key-nav class="grid ui-grid-selectable"></div>
                    </div>
                </div>
            </div>
        
        </div>

        <script type="text/ng-template" id="FabricYarnDeliveryChallan.html">
            <div class="modal-header">
                <h3 class="modal-title" id="modal-title">Yarn Delivery Challan</h3>
            </div>
            <div class="modal-body form-horizontal regionFYDC" id="modal-body">

                <div class="row">
                    <div class="col-md-12 ">
                        <div class="col-md-3 text-right"><label class="control-label">Challan No:</label></div>
                        <div class="col-md-4 text-left">
                            <input type="text" ng-model="FYDC.FYDChallanNo" class="form-control" disabled />
                        </div>
                        <div class="col-md-3 text-right"><label class="control-label">FYDO No:</label></div>
                        <div class="col-md-4 text-left">
                            <input type="text" ng-model="FYDC.FYDNo" class="form-control" disabled />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12 ">
                        <div class="col-md-3 text-right"><label class="control-label">Store:</label></div>
                        <div class="col-md-4 text-left">
                            <select ng-model="FYDC.WUID" ng-options="obj.WorkingUnitID as obj.WorkingUnitName for obj in WUs" ng-disabled="disabled" class="form-control">
                                <option value="">--Select Store--</option>
                            </select>
                        </div>
                        <div class="col-md-3 text-right"><label class="control-label">Disburse Date:</label></div>
                        <div class="col-md-4 text-left">
                            <div class="input-group date date-container">
                                <input type="text" class="form-control" ng-model="FYDC.DisburseDateStr" ng-disabled="disabled"><span class="input-group-addon"><i class="glyphicon glyphicon-th" ng-disabled="disabled"></i></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="ui-grid-top-panel">
                            <div class="container">
                                <div class="form-inline">
                                    <input ng-model="LotNo" ng-keyup="searchLotByKeyUp($event)" class="form-control" placeholder="Search Lot...." required ng-disabled="disabled" />
                                    <input ng-model="Balance" class="form-control" placeholder="Lot Balance" required ng-disabled="disabled" style="width:150px;"/>
                                    Bag Qty :
                                    <input ng-model="BagQty" class="form-control" style="width:150px;" />

                                    <button type="button" class="btn btn-sm btn-primary" aria-label="Left Align" ng-click="lotAssign()" ng-hide="hide"> <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Assign</button>
                                </div>
                            </div>
                        </div>
                        <div class="row" style="margin:2px; padding:0;">
                            <div style="width:100%; height:250px" ui-grid="gridOptions" ui-grid-selection ui-grid-resize-columns ui-grid-edit ui-grid-key-nav class="ui-grid-selectable"></div>
                        </div>
                    </div>
                   
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
            </div>
        </script>

        <script type="text/ng-template" id="printFormat.html">
            <div>
                <div class="modal-header">
                    <h3 class="modal-title" id="modal-title">Print Format</h3>
                </div>
                <div class="modal-body form-horizontal regionFYDC" id="modal-body">
                    <div class="row">
                        <div class="col-md-12 ">
                            <div class="col-md-2 text-right"><input type="checkbox" ng-model="inKG" ng-change="changeKg()" /></div>
                            <div class="col-md-3 text-left">
                                <label class="control-label">In KG.</label>
                            </div>
                            <div class="col-md-2 text-right"><input type="checkbox" ng-model="inLBS" ng-change="changeLBS()" /></div>
                            <div class="col-md-3 text-left">
                                <label class="control-label">In LBS:</label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 ">
                            <div class="col-md-2 text-right"><input type="checkbox" ng-model="isPadFormat" ng-change="chaangePadFormat()" /></div>
                            <div class="col-md-3 text-left">
                                <label class="control-label">Pad Format.</label>
                            </div>
                            <div class="col-md-2 text-right"><input type="checkbox" ng-model="isImageFormat" ng-change="chaangeImageFormat()" /></div>
                            <div class="col-md-3 text-left">
                                <label class="control-label">Image Format:</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="printPreview()"> <span class="glyphicon glyphicon-print" aria-hidden="true"></span> Preview</button>
                    <button type="button" class="btn btn-sm" aria-label="Left Align" ng-click="cancel()"> <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Cancel</button>
                </div>
            </div>
        </script>
        
    </div>



    <style type="text/css">
        .form-control {
            height: 26px;
            padding: 0px 6px;
            font-size: 12px;
        }

        .ui-grid-top-panel .btn-sm, .input-group-addon {
            padding: 3px 10px;
        }

        .grid {
            height: 480px;
            width: 100%;
        }

        .custom-pagination {
            margin-top: -15px;
            margin-bottom: -15px;
        }

        .spacing {
            padding-bottom: 5px;
        }

        .tab{

            border:thin double #5ad1ed; 
            height:60vh;
            position:relative;
            overflow:auto;
   
        }

        /*-------Navigation Tab---------*/

       .regionFYDC .form-horizontal .control-label{
            padding-top:3px;
        }
        .regionFYDC .form-control{
            height:26px;
            padding:0px 6px;
            font-size:12px;
        }
        .regionFYDC .col-md-12{
            width:100%;
            padding-right:5px;
            padding-left:5px;
            margin-bottom:5px;
        }
        .regionFYDC .col-md-11{
            width:76%;
            padding-right:5px;
            padding-left:5px;
        }

        .regionFYDC .col-md-2{
            width:13%;
            padding-right:5px;
            padding-left:5px;
        }
        .regionFYDC .col-md-3{
            width:20%;
            padding-right:5px;
            padding-left:5px;
        }

        .regionFYDC .col-md-4{
            width:28%;
            padding-right:5px;
            padding-left:5px;
        }

        .regionFYDC .btn-sm{
            padding:3px 10px;
        }
        .regionFYDC .input-group-addon{
            padding: 4px 8px;
        }

        /*-------Navigation Tab---------*/
        /* Style the tab */
        .region-tab div.tab {
            overflow: hidden;
            border: none;
            background-color: #FFFFFF;
            height: 30px;
        }
        /* Style the buttons inside the tab */
        div.tab button {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding-top: 10px;
            padding-right: 10px;
            padding-left: 10px;
            transition: 0.3s;
        }
        .region-tab div.tab label {
            background-color: inherit;
            float: right;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 6px 10px;
            /*transition: 0.3s;*/
            font-weight:bold;
        }
        /* Change background color of buttons on hover */
        div.tab button:hover {
            border-bottom: 2px solid blue;
        }
        /* Create an active/current tablink class */
        div.tab button.active {
            border-bottom: 2px solid blue;
            background-color: #E0ECFF;
        }
    </style>

    <script type="text/javascript">
        function openTab(event) {
            var i, tablinks;
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(event.target.id).classList.add("active");

            if(event.target.id==='btnFYDOrder'){
                document.getElementById('regionFYDOrder').style.display='';
                document.getElementById('regionFYDOrder').style.visibility = 'visible';
                document.getElementById('regionFYDChallan').style.display='none';
            }   
            else{
                document.getElementById('regionFYDOrder').style.display='none';
                document.getElementById('regionFYDChallan').style.display='';
                document.getElementById('regionFYDChallan').style.visibility = 'visible';
            }
                

        }
    </script>

    <script type="text/javascript">

    document.getElementById('btnFYDOrder').classList.add("active");
   

    var pager =[];
    var _sBaseAddress = @Html.Raw(Json.Encode(HttpContext.Current.Session[SessionInfo.BaseAddress]));
    var oFYDOs = @Html.Raw(Json.Encode(Model));
    var oFYDCs =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.FYDCs));

    var oWUs =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.WUs));
    var oTUs =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.TUnits));
        var oProcessTypes =@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ProcessTypes));


        var FYDModule = angular.module('FYDModule',['ngAnimate', 'tbICSIsNUmberModule','ui.bootstrap', 'ui.grid','ui.grid.resizeColumns','ui.grid.selection', 'ui.grid.edit','ui.grid.cellNav','ms.service', 'adv.search.fydo','adv.search.fydc']);

        FYDModule.controller('FYDOCntrl', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession, sharedService, AdvSearchFYDO,icsMethod) {
            $(document).ready(function () {
                $('.date-container').datepicker({
                    format: "dd M yyyy",
                    calendarWeeks: true,
                    autoclose: true,
                    todayHighlight: true
                });
            });

            //function openTab(event) {
            //    var i, tablinks;
            //    tablinks = document.getElementsByClassName("tablinks");
            //    for (i = 0; i < tablinks.length; i++) {
            //        tablinks[i].className = tablinks[i].className.replace(" active", "");
            //    }
            //    document.getElementById(event.target.id).classList.add("active");

            //    if(event.target.id==='btnFYDOrder'){
                    document.getElementById('regionFYDOrder').style.display='';
                    document.getElementById('regionFYDChallan').style.visibility = 'hidden';
            //    }
            //    else{
            //        document.getElementById('regionFYDOrder').style.display='none';
            //        document.getElementById('regionFYDChallan').style.display='';
            //    }


            //}
            //$scope.divFYDOrder=true; $scope.divFYDChallan=false;
            $scope.dtIssueFrom = $scope.dtIssueTo = icsdateformat(new Date());
            $scope.chkIssueDate = false;
            oFYDOs= (userSession.getData('FYDOs').length>0)? userSession.getData('FYDOs'):oFYDOs;
            sharedService.SetFYDChallans(oFYDCs);

            //uigrid
            $scope.gridOptions ={
                enableRowHeaderSelection: false,
                enableRowSelection: true,
                enableFullRowSelection: true,
                multiSelect: false,
                enableColumnResizing: true,
                noUnselect : true,
                enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
                columnDefs: [
                    {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                    { field: 'FYDNo', name: 'FYD No', width: '10%', cellClass: 'text-center'},
                    { field: 'FEONo', name: 'FEONo', width:'10%', cellClass: 'text-center'},
                    { field: 'DeliveryUnitStr', name: 'Delivery Unit', width: '15%'},
                    { field: 'DBServerDateTimeStr',  name: 'Issue Date', width:'12%'},
                    { field: 'ExpectedDeliveryDateStr',  name: 'Expt. Delivery Date', width:'15%'},
                    { field: 'OrderQty', name: 'Order Qty', width: '10%', cellClass: 'text-center', cellFilter: 'number: 2'},
                    { field: 'ChallanQty', name: 'Challan Qty', width: '10%', cellClass: 'text-center', cellFilter: 'number: 2'},
                    { field: 'ApproveByName', name: 'Approve By', width: '15%' },
                    { field: 'ApproveDateStr', name: 'Approve Date', width: '15%' }
                ],
                data:oFYDOs,
                onRegisterApi:function(gridApi) {
                    $scope.gridApi = gridApi;
                    $scope.gridApi.selection.clearSelectedRows();
                    $scope.gridApi.grid.registerRowsProcessor( $scope.singleFilter, 200 );

                    //$scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                    //    $scope.RowSelect(row.entity );
                    //});

                    if(oFYDOs.length>0 && userSession.getRowIndex()>=0){
                        $scope.gridApi.grid.modifyRows(oFYDOs);
                        $scope.gridApi.selection.selectRow(oFYDOs[userSession.getRowIndex()]);
                        $scope.RowSelect(oFYDOs[userSession.getRowIndex()]);
                    }
                    userSession.clear();
                }
            };

            $scope.filter=function(){
                $scope.gridApi.grid.refresh();
            }

            $scope.singleFilter=function(renderableRows){
                debugger;
                var matcherFYDNo = new RegExp(angular.uppercase($scope.FYDNo));
                renderableRows.forEach( function( row ) {
                    debugger;
                    var match = false;
                    if (angular.uppercase(row.entity['FYDNo']).match(matcherFYDNo)){
                        match = true;
                    }
                    if ( !match ){
                        row.visible = false;
                    }
                });
                return renderableRows;
            };

            $scope.searchFYDNoKeyUp=function(keyEvent){
                if(keyEvent.which==13 ||keyEvent.which ==8){
                    debugger;
                    $scope.search();
                }
            };

            $scope.search = function () {
                debugger;
                if($scope.FYDNo == undefined || $.trim($scope.FYDNo)==''){
                    return ;
                }
                var obj = {
                    FYDNo : $scope.FYDNo
                };
                $http.post(_sBaseAddress + '/FabricYarnDeliveryOrder/GetsByFYDNo', JSON.stringify(obj)).then(
                      function (response) {
                          var result = jQuery.parseJSON(response.data);
                          if (result.length > 0 && result[0].FYDOID>0) {
                              $scope.gridOptions.data=result;
                              $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                          }
                          else {
                              msModal.Message({ headerTitle: '', bodyText: result[0].ErrorMessage, sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                          }
                      },
                      function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
                );
            };
            $scope.getPendingDO = function () {

                $http.post(_sBaseAddress + '/FabricYarnDeliveryOrder/GetsByPendingDO').then(
                      function (response) {
                          var result = jQuery.parseJSON(response.data);
                          if (result.length > 0 && result[0].FYDOID>0) {
                              $scope.gridOptions.data=result;
                              $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                          }
                          else {
                              msModal.Message({ headerTitle: '', bodyText: result[0].ErrorMessage, sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                          }
                      },
                      function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
                );
            };

            $scope.searchFEONoKeyUp=function(keyEvent){
                if(keyEvent.which==13 ||keyEvent.which ==8){

                    $scope.FEONosearch();
                }
            };

            $scope.FEONosearch = function () {

                if($scope.FEONo == undefined || $.trim($scope.FEONo)==''){
                    return ;
                }
                var obj = {
                    FEONo : $scope.FEONo
                };
                $http.post(_sBaseAddress + '/FabricYarnDeliveryOrder/GetsByFEONo', JSON.stringify(obj)).then(
                      function (response) {
                          var result = jQuery.parseJSON(response.data);
                          if (result.length > 0 && result[0].FYDOID>0) {
                              $scope.gridOptions.data=result;
                              $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                          }
                          else {
                              msModal.Message({ headerTitle: '', bodyText: result[0].ErrorMessage, sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                          }
                      },
                      function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
                );
            };

            $scope.approve=function(){

                var data=$scope.gridApi.selection.getSelectedRows().first();

                if(data==null){
                    msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }
                else if(data.ApproveBy!=0){
                    msModal.Message({headerTitle : '', bodyText:'Already approved.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }


                msModal.Message({headerTitle : '', bodyText:'Are you sure to approve?.', sucessText : ' Ok', cancelText : ' Cancel', feedbackType:true, autoClose : false}).result.then(function(result){
                    if(result){
                        var index=$scope.gridOptions.data.indexOf(data);

                        $http.post(_sBaseAddress+'/FabricYarnDeliveryOrder/ApproveFYDO', JSON.stringify(data)).then(
                                    function (response) {
                                        var result=jQuery.parseJSON(response.data);
                                        if(result.FYDOID>0)
                                        {
                                            debugger;
                                            $scope.gridOptions.data[index]=result;
                                            $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                            $scope.gridApi.selection.selectRow(result);
                                        }
                                        else{
                                            alert(result.ErrorMessage);
                                        }
                                    },
                                    function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                              );
                    }
                });
            }

            $scope.createChallan=function(){

                var data=$scope.gridApi.selection.getSelectedRows().first();
                if(data==null || data.FYDOID<=0){
                    msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }
                else if(data.ApproveBy==0){
                    msModal.Message({headerTitle : '', bodyText:'Yet not approved.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                else if(data.OrderQty<=data.ChallanQty){
                    msModal.Message({headerTitle : '', bodyText:'No remaining qty found to create challan.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                var index=$scope.gridOptions.data.indexOf(data);

                $http.post(_sBaseAddress+'/FabricYarnDeliveryOrder/GetChallanInfoByFYDO', JSON.stringify(data)).then(
                            function (response) {
                                var result=jQuery.parseJSON(response.data);
                                if(result.FYDOID>0)
                                {
                                    $scope.Modal(result, 'add');
                                }
                                else{
                                    alert(result.ErrorMessage);
                                }
                            },
                            function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                      );




            }

            $scope.Modal = function (obj, operation) {

                var modalInstance = $uibModal.open({

                    ariaLabelledBy: 'modal-title',
                    ariaDescribedBy: 'modal-body',
                    size: 'lg',
                    templateUrl: 'FabricYarnDeliveryChallan.html',
                    controller: 'ModalInstanceCtrl',
                    controllerAs: 'FYDOCntrl',
                    resolve: {
                        obj: function () {
                            return { FYDC :obj, Operation: operation };
                        }
                    }
                });


            };
            $scope.AdvanceSearch = function ()
            {

                $scope.InvoiceNo = "";
                var modalObj={
                    modalcontroller:'ModalAdvanceSearchCtrl',
                    appcontroller:'FYDOCntrl',
                    url:_sBaseAddress +'/FabricYarnDeliveryOrder/AdvanceSearch',
                    TUs:oTUs

                }
                var modalInstance=AdvSearchFYDO.Instance(modalObj);
                modalInstance.result.then(function (result)
                {
                    $scope.gridOptions.data = result;
                }, function () {
                    $log.info('Modal dismissed at: ' + new Date());
                });
            };
            $scope.print = function(){
                var data=$scope.gridApi.selection.getSelectedRows().first();
                if(data==null || data.FYDOID<=0){
                    msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                var modalInstance = $uibModal.open({
                    ariaLabelledBy: 'modal-title',
                    ariaDescribedBy: 'modal-body',
                    size: 'md',
                    templateUrl: 'printFormat.html',
                    controller: 'ModalInstanceprintFormatCtrl',
                    controllerAs: 'FYDOCntrl',
                    resolve: {
                        obj: function () {
                            return { FYDC :data };
                        }
                    }
                });


            }
            $scope.SearchByIssueDate = function(){
                if (!$scope.chkIssueDate) {
                        msModal.Message({ headerTitle: '', bodyText: 'Valid date required.', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                        return false;
                    }
                if ($scope.chkIssueDate) {
                    if (new Date($scope.dtIssueFrom) == 'Invalid Date' || new Date($scope.dtIssueTo) == 'Invalid Date') {
                        msModal.Message({ headerTitle: '', bodyText: 'Valid date required.', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                        return false;
                    }
                }

                var obj = {
                    Params :$scope.chkIssueDate + '~' + $scope.dtIssueFrom + '~' + $scope.dtIssueTo
                };
                $http.post(_sBaseAddress + '/FabricYarnDeliveryOrder/GetsByIssueDate', JSON.stringify(obj)).then(
                      function (response) {
                          var result = jQuery.parseJSON(response.data);
                          if (result.length > 0 && result[0].FYDOID>0) {
                              $scope.gridOptions.data=result;
                              $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                          }
                          else {
                              msModal.Message({ headerTitle: '', bodyText: result[0].ErrorMessage, sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                          }
                      },
                      function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
                );

            }

            $scope.PrintDeliveryStatement = function(){

                var data=$scope.gridOptions.data;
                var FYDOIDs = "";
                angular.forEach(data,function(item,index){
                    FYDOIDs += item.FYDOID +',';
                });
                if(FYDOIDs==""){
                    alert("No data found");
                    return false;
                }
                var objs=[{key:'FYDOIDs', data:FYDOIDs}];
                OpenWindowWithPost(_sBaseAddress + '/FabricYarnDeliveryOrder/PrintFYDODeliveryStatement', objs)

            }

           



        });

        FYDModule.controller('FYDChallanCntrl', function ($scope, $http, $uibModal, $log, uiGridConstants, msModal, userSession, sharedService, AdvSearchFYDC) {

            $scope.FYDCs = sharedService.GetFYDChallans();
            $scope.dtIssueFrom = $scope.dtIssueTo = icsdateformat(new Date());
            $scope.chkIssueDate = false;
            $scope.ProcessTypes =oProcessTypes;
            //uigrid
            $scope.gridOptions ={
                enableRowHeaderSelection: false,
                enableRowSelection: true,
                enableFullRowSelection: true,
                multiSelect: false,
                enableColumnResizing: true,
                noUnselect : true,
                enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
                columnDefs: [
                    {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                    { field: 'FYDChallanNo', name: 'FYD Challan', width: '12%', cellClass: 'text-center'},
                    { field: 'FYDNo', name: 'FYD No', width:'12%', cellClass: 'text-center'},
                     { field: 'FEONo', name: 'FEO No', width:'12%', cellClass: 'text-center'},
                    { field: 'WUName', name: 'WU Name', width: '20%'},
                    { field: 'DisburseByName', name: 'Disburse By', width: '20%' },
                    { field: 'DisburseDateStr', name: 'Disburse Date', width: '15%' }

                ],
                data:$scope.FYDCs,
                onRegisterApi:function(gridApi) {
                    $scope.gridApi = gridApi;
                    $scope.gridApi.selection.clearSelectedRows();
                    $scope.gridApi.grid.registerRowsProcessor( $scope.singleFilter, 200 );

                    //$scope.gridApi.selection.on.rowSelectionChanged($scope, function (row) {
                    //    $scope.RowSelect(row.entity );
                    //});
                }
            };

            $scope.filter=function(){
                $scope.gridApi.grid.refresh();
            }

            $scope.singleFilter=function(renderableRows){
                debugger;
                var matcherFYDChallanNo = new RegExp(angular.uppercase($scope.FYDChallanNo));
                renderableRows.forEach( function( row ) {
                    debugger;
                    var match = false;
                    if (angular.uppercase(row.entity['FYDChallanNo']).match(matcherFYDChallanNo)){
                        match = true;
                    }
                    if ( !match ){
                        row.visible = false;
                    }
                });
                return renderableRows;
            };

            $scope.searchFYDChallanNoKeyUp=function(keyEvent){
                if(keyEvent.which==13 ||keyEvent.which ==8){
                    debugger;
                    $scope.search();
                }
            };

            $scope.search = function () {
                debugger;
                if($scope.FYDChallanNo == undefined || $.trim($scope.FYDChallanNo)==''){
                    return ;
                }
                var obj = {
                    FYDChallanNo : $scope.FYDChallanNo
                };
                $http.post(_sBaseAddress + '/FabricYarnDeliveryChallan/GetsByFYDChallanNo', JSON.stringify(obj)).then(
                      function (response) {
                          var result = jQuery.parseJSON(response.data);
                          if (result.length > 0 && result[0].FYDChallanID>0) {
                              $scope.gridOptions.data=result;
                              $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                          }
                          else {
                              msModal.Message({ headerTitle: '', bodyText: result[0].ErrorMessage, sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                          }
                      },
                      function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
                );
            };

            $scope.searchFEONoKeyUp=function(keyEvent){
                if(keyEvent.which==13 ||keyEvent.which ==8){
                    debugger;
                    $scope.searchFEONo();
                }
            };

            $scope.searchFEONo = function () {
                debugger;
                if($scope.FEONo == undefined || $.trim($scope.FEONo)==''){
                    return ;
                }
                var obj = {
                    FEONo : $scope.FEONo
                };
                $http.post(_sBaseAddress + '/FabricYarnDeliveryChallan/GetsByFEONo', JSON.stringify(obj)).then(
                      function (response) {
                          var result = jQuery.parseJSON(response.data);
                          if (result.length > 0 && result[0].FYDChallanID>0) {
                              $scope.gridOptions.data=result;
                              $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                          }
                          else {
                              msModal.Message({ headerTitle: '', bodyText: result[0].ErrorMessage, sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                          }
                      },
                      function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
                );
            };

            $scope.view=function(){

                var data=$scope.gridApi.selection.getSelectedRows().first();

                if(data==null || data.FYDChallanID<=0){
                    msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                $http.post(_sBaseAddress+'/FabricYarnDeliveryChallan/GetFYDChallanWithDetail', JSON.stringify(data)).then(
                         function (response) {
                             var result=jQuery.parseJSON(response.data);
                             if(result.FYDChallanID>0)
                             {
                                 $scope.Modal(result, 'view');
                             }
                             else{
                                 alert(result.ErrorMessage);
                             }
                         },
                         function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                   );

            }

            $scope.disburse=function(){

                var data=$scope.gridApi.selection.getSelectedRows().first();

                if(data==null || data.FYDChallanID<=0){
                    msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                if(data.DisburseBy!=0){
                    msModal.Message({headerTitle : '', bodyText:'Already disbursed.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }


                msModal.Message({headerTitle : '', bodyText:'Are you sure to disburse?.', sucessText : ' Ok', cancelText : ' Cancel', feedbackType:true, autoClose : false}).result.then(function(result){
                    if(result){
                        var index=$scope.gridOptions.data.indexOf(data);

                        $http.post(_sBaseAddress+'/FabricYarnDeliveryChallan/Disburse', JSON.stringify(data)).then(
                         function (response) {
                             var result=jQuery.parseJSON(response.data);
                             if(result.FYDChallanID>0 && result.DisburseBy!=0)
                             {
                                 $scope.gridOptions.data[index]=result;
                                 $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                 $scope.gridApi.selection.selectRow(result);
                             }
                             else{
                                 alert(result.ErrorMessage);
                             }
                         },
                         function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                   );
                    }
                });


            }

            $scope.delete =function(){

                var data=$scope.gridApi.selection.getSelectedRows().first();

                if(data==null || data.FYDChallanID<=0){
                    msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                if(data.DisburseBy!=0){
                    msModal.Message({headerTitle : '', bodyText:'Already disbursed.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }


                msModal.Message({headerTitle : '', bodyText:'Are you sure to delete?.', sucessText : ' Ok', cancelText : ' Cancel', feedbackType:true, autoClose : false}).result.then(function(result){
                    if(result){
                        var index=$scope.gridOptions.data.indexOf(data);

                        $http.post(_sBaseAddress+'/FabricYarnDeliveryChallan/Delete', JSON.stringify(data)).then(
                         function (response) {
                             var result=jQuery.parseJSON(response.data);
                             if(result=="Deleted"){
                                 $scope.gridOptions.data.splice(index,1);
                                 $scope.gridApi.grid.modifyRows($scope.gridOptions.data);

                             }
                         },
                         function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                   );
                    }
                });


            }

            $scope.print = function(){

                var data=$scope.gridApi.selection.getSelectedRows().first();

                if(data==null || data.FYDChallanID<=0){
                    msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                var objs=[{key:'FYDChallanID', data:data.FYDChallanID}];
                OpenWindowWithPost(_sBaseAddress + '/FabricYarnDeliveryChallan/PrintFYDChallan', objs)

            }

            $scope.Modal = function (obj, operation) {
                debugger;
                var modalInstance = $uibModal.open({
                    //animation: $scope.animationsEnabled,
                    ariaLabelledBy: 'modal-title',
                    ariaDescribedBy: 'modal-body',
                    size: 'lg',
                    templateUrl: 'FabricYarnDeliveryChallan.html',
                    controller: 'ModalInstanceCtrl',
                    controllerAs: 'FYDOCntrl',
                    resolve: {
                        obj: function () {
                            return { FYDC :obj, Operation: operation };
                        }
                    }
                });
            };

            $scope.AdvanceSearch = function ()
            {
                debugger;
                $scope.InvoiceNo = "";
                var modalObj={
                    modalcontroller:'ModalAdvanceSearchCtrl',
                    appcontroller:'FYDOCntrl',
                    url:_sBaseAddress +'/FabricYarnDeliveryChallan/AdvanceSearch',
                    WUs:oWUs,
                    ProcessTypes:$scope.ProcessTypes,
                    TextileUnit:oTUs

                }
                var modalInstance=AdvSearchFYDC.Instance(modalObj);
                modalInstance.result.then(function (result)
                {
                    $scope.gridOptions.data = result;
                }, function () {
                    $log.info('Modal dismissed at: ' + new Date());
                });
            };
            $scope.SearchByIssueDate = function(){
                if (!$scope.chkIssueDate) {
                    msModal.Message({ headerTitle: '', bodyText: 'Valid date required.', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                    return false;
                }
                if ($scope.chkIssueDate) {
                    if (new Date($scope.dtIssueFrom) == 'Invalid Date' || new Date($scope.dtIssueTo) == 'Invalid Date') {
                        msModal.Message({ headerTitle: '', bodyText: 'Valid date required.', sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                        return false;
                    }
                }

                var obj = {
                    Params :$scope.chkIssueDate + '~' + $scope.dtIssueFrom + '~' + $scope.dtIssueTo
                };
                $http.post(_sBaseAddress + '/FabricYarnDeliveryChallan/GetsFYDCByIssueDate', JSON.stringify(obj)).then(
                      function (response) {
                          var result = jQuery.parseJSON(response.data);
                          if (result.length > 0 && result[0].FYDOID>0) {
                              $scope.gridOptions.data=result;
                              $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                          }
                          else {
                              msModal.Message({ headerTitle: '', bodyText: result[0].ErrorMessage, sucessText: ' Yes', cancelText: ' Close', feedbackType: false, autoClose: false });
                          }
                      },
                      function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage); }
                );

            }

            $scope.PrintDeliveryStatement = function(){

                var data=$scope.gridOptions.data;
                var FYDOIDs = "";
                angular.forEach(data,function(item,index){
                    FYDOIDs += item.FYDOID +',';
                });
                var objs=[{key:'FYDOIDs', data:FYDOIDs}];
                OpenWindowWithPost(_sBaseAddress + '/FabricYarnDeliveryOrder/PrintFYDODeliveryStatement', objs)

            }

            $scope.ExcelDS = function(){

                var data=$scope.gridOptions.data;
                var FYDOIDs = "";
                angular.forEach(data,function(item,index){
                    FYDOIDs += item.FYDOID +',';
                });
                if(FYDOIDs==""){
                    alert("No data found");
                    return false;
                }
                var objs=[{key:'FYDOIDs', data:FYDOIDs}];
                OpenWindowWithPost(_sBaseAddress + '/FabricYarnDeliveryOrder/ExcelFYDODeliveryStatement', objs)

            }
        });

        FYDModule.controller('ModalInstanceCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj, modelInstance, sharedService) {
            debugger;

            $(document).ready(function(){
                $('.date-container').datepicker({
                    format: "dd M yyyy",
                    calendarWeeks: true,
                    autoclose: true,
                    todayHighlight: true
                });
                $(".number-int").icsNumberField({ min: 0,precision: 0 });
                $(".number-precision").icsNumberField({ min: 0,precision: 2 });
            });
            $scope.Lot=null;
            $scope.Balance=0;
            $scope.LotNo="";
            $scope.BagQty="";

            $scope.Operation=obj.Operation;
            var viewType= $scope.Operation;
            $scope.hide=$scope.disabled=($scope.Operation==='view')?true:false;
            $scope.WUs=oWUs;

            $scope.FYDC = (obj.FYDC!=null)? obj.FYDC: modelInstance.FYDC();
            $scope.FYDCDetails = $scope.FYDC.FYDCDetails;
            $scope.FYDC.FYDCDetails =[];


            $scope.gridOptions ={
                enableRowHeaderSelection: false,
                enableRowSelection: true,
                enableFullRowSelection: true,
                multiSelect: false,
                enableColumnResizing: true,
                noUnselect : true,
                enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,
                enableCellEdit:false,
                cellEditableCondition: function($scope)
                {
                    debugger;
                    if (viewType=='view')
                    {
                        return false;
                    }
                    else
                        return true;
                },
                columnDefs: [
                    {name: ' ',width:'3%', cellTemplate: '<div style="padding-top:5px;"><span>{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</span></div>',cellClass: 'text-center', enableCellEdit: false, enableSorting:false, enableColumnResizing:false, enableColumnMenu:false},
                    { field: 'ProductName', name: 'Product Name', width: '30%', cellClass: 'text-left'},
                    { field: 'ProductCode', name: 'Product Code', width:'20%', cellClass: 'text-left'},
                    { field: 'LotNo', name: 'Lot No', width: '15%', cellClass: 'text-left'},
                    { field: 'Qty', name: 'Qty', width: '15%',cellFilter: 'number: 2', cellClass: 'text-right' },
                { field: 'BagQty', name: 'Bag Qty', width: '10%', cellClass: 'text-left' },
                     { field: 'Remarks', name: 'Remarks', width: '15%', cellClass: 'text-left'}
                ],
                data: $scope.FYDCDetails,




                onRegisterApi:function(gridApi) {
                    $scope.gridApi = gridApi;
                    gridApi.edit.on.afterCellEdit($scope,
                       function (rowEntity, colDef, newValue, oldValue)
                       {
                           rowEntity.Remarks=rowEntity.Remarks ;
                           return rowEntity;
                       });
                }
            };

            $scope.searchLotByKeyUp=function(keyEvent){
                if(keyEvent.which==13){
                    $scope.getsLot();
                }
                else if(keyEvent.which==08){
                    $scope.FYDC.LotID = 0;
                    $scope.Balance = 0;
                }
            };

            $scope.searchLot=function(){
                $scope.getsLot();
            };

            $scope.getsLot=function(){

                if($scope.FYDC.WUID<=0){
                    msModal.Message({headerTitle : '', bodyText:'Select Store.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                var data=$scope.gridApi.selection.getSelectedRows().first();
                if(data==null || data.ProductID<=0){
                    msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }


                // FYDCDetail ProductID

                var obj={
                    WorkingUnitID:$scope.FYDC.WUID,
                    ProductID: data.ProductID,
                    LotNo:$scope.LotNo
                }
                var config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;' } };
                $http.post(_sBaseAddress+'/Lot/GetsAllLotByStoreAndProduct',$.param(obj), config).then(
                                      function (response)
                                      {
                                          var results=jQuery.parseJSON(response.data);
                                          var modalObj={
                                              size:'md',
                                              title:'Product List',
                                              url:_sBaseAddress+'/Home/Modal',
                                              modalController:'LotModalCtrl',
                                              appController:'FYDCController',
                                              objs:results,
                                              multiSelect:false,
                                              columns:[
                                                        { field: 'LotNo', name: 'Lot No' },
                                                        { field: 'ProductName', name: 'Product Name' },
                                                        { field: 'Balance', name: 'Qty', cellFilter: 'number: 2', cellClass: 'text-right' },
                                                        { field: 'MUName', name: 'Unit', cellFilter: 'number: 2', cellClass: 'text-right' }
                                              ]
                                          }
                                          var modalInstance=msModal.Instance(modalObj);
                                          modalInstance.result.then(function (result) {
                                              $scope.Balance=0;
                                              if(result.LotID>0){
                                                  $scope.Lot = result;
                                                  $scope.LotNo=result.LotNo;
                                                  $scope.Balance = result.Balance;
                                              }

                                          }, function () {
                                              $log.info('Modal dismissed at: ' + new Date());
                                          });
                                      },
                                      function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                                );
            }

            $scope.Validation=function(){

                if(isNaN($scope.FYDC.WUID) || $scope.FYDC.WUID<=0){
                    msModal.Message({headerTitle : '', bodyText:'Select Receive Unit.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }
                return  true;
            };

            $scope.lotAssign = function () {
                if(!$scope.Validation())
                    return false;

                var data=$scope.gridApi.selection.getSelectedRows().first();
                var index=$scope.gridOptions.data.indexOf(data);

                if(data==null || data.ProductID<=0){
                    msModal.Message({headerTitle : '', bodyText:'Select an item from list.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                if($scope.Lot==null || $scope.Lot.LotID<=0){
                    msModal.Message({headerTitle : '', bodyText:'Lot yet not selected.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                if($scope.Lot.ProductID != data.ProductID){
                    msModal.Message({headerTitle : '', bodyText:'Product not match.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                if(isNaN($scope.Balance) || parseFloat($scope.Balance)<=0){
                    msModal.Message({headerTitle : '', bodyText:'Balance required.', sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                if(parseFloat($scope.Lot.Balance) < parseFloat($scope.Balance)){
                    msModal.Message({headerTitle : '', bodyText:'Can not exceed lot balance: '+ $scope.Lot.Balance.toFixed(2), sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                if(parseFloat(data.Qty) < parseFloat($scope.Balance)){
                    msModal.Message({headerTitle : '', bodyText:'Max. allowed qty: '+ data.Qty.toFixed(2), sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                    return false;
                }

                data.FYDChallanID = $scope.FYDC.FYDChallanID
                data.Qty = $scope.Balance;
                data.LotID = parseInt($scope.Lot.LotID);
                data.ProductID = parseInt($scope.Lot.ProductID);
                data.FYDC = ($scope.FYDC.FYDChallanID>0)? null : $scope.FYDC;
                data.BagQty = $scope.BagQty;

                $http.post(_sBaseAddress+'/FabricYarnDeliveryChallan/SaveFYDChallanDetail', JSON.stringify(data)).then(
                                 function (response) {
                                     debugger;
                                     var result=jQuery.parseJSON(response.data);
                                     if(result.FYDODetailID > 0)
                                     {
                                         if (result.FYDC.FYDChallanID > 0){
                                             $scope.FYDC = result.FYDC;
                                             result.FYDC=null;
                                             sharedService.AddFYDChallan($scope.FYDC);
                                         }

                                         $scope.gridOptions.data[index]=result;
                                         $scope.gridApi.grid.modifyRows($scope.gridOptions.data);
                                         $scope.gridApi.selection.selectRow(result);
                                     }
                                     else{
                                         msModal.Message({headerTitle : '', bodyText:result.ErrorMessage, sucessText : ' Yes', cancelText : ' Close', feedbackType:false, autoClose : false});
                                     }
                                 },
                                 function (response) { alert(jQuery.parseJSON(response.data).ErrorMessage);}
                           );
            };

            $scope.cancel= function () {
                $uibModalInstance.dismiss('cancel');
            };


        });

        FYDModule.factory('modelInstance', function(){

            var fac = {};

            fac.FYDC = function(){
                return {
                    FYDChallanID : 0,
                    FYDOID : 0,
                    FYDChallanNo : '',
                    WUID : 0,
                    DisburseBy : 0,
                    DisburseDate : new Date(),
                    FYDNo : '',
                    WUName : '',
                    DisburseByName : '',
                    DisburseDateStr : icsdateformat(new Date()),
                    FYDCDetails:[]
                }
            }

            fac.FYDCDetail= function(){
                return {
                    FYDCDetailID : 0,
                    FYDChallanID : 0,
                    FYDODetailID : 0,
                    Qty : 0,
                    LotID : 0,
                    LotNo :'',
                    Balance :'',
                    ProductID : 0,
                    ProductCode :'',
                    ProductName :'',
                    FYDC:null
                }
            }
            return fac;
        });

        FYDModule.service('sharedService', function(){

            var oFYDCs=[];

            this.SetFYDChallans = function(objs){
                oFYDCs = objs;
            }

            this.GetFYDChallans = function(){
                return oFYDCs;
            }

            this.AddFYDChallan = function(obj){
                oFYDCs.push(obj);
                return oFYDCs;
            }
        });

        FYDModule.controller('ModalInstanceprintFormatCtrl', function ($scope, $http, $uibModalInstance, uiGridConstants, msModal, obj, modelInstance, sharedService) {
            $scope.FYDC = (obj.FYDC!=null)? obj.FYDC: modelInstance.FYDC();
            $scope.inKG  =true;
            $scope.inLBS =false;
            $scope.isPadFormat =true;
            $scope.isImageFormat =false;

            $scope.changeKg  =function()
            {
                if($scope.inKG)
                {
                    $scope.inLBS =false;
                }
                else{
                    $scope.inLBS =true;
                }

            }

            $scope.changeLBS  =function()
            {
                if($scope.inLBS)
                {
                    $scope.inKG =false;
                }
                else{
                    $scope.inKG =true;
                }
            }
            $scope.chaangePadFormat  =function()
            {
                if($scope.isPadFormat)
                {
                    $scope.isImageFormat =false;
                }
                else{
                    $scope.isImageFormat =true;
                }
            }
            $scope.chaangeImageFormat  =function()
            {
                if($scope.isImageFormat)
                {
                    $scope.isPadFormat =false;
                }
                else{
                    $scope.isPadFormat =true;
                }
            }

            $scope.printPreview =function(){
                var bPrintFormat = true;
                var bIsInText = true;
                var nts = ((new Date()).getTime()) / 1000;
                if($scope.inLBS)
                    bPrintFormat = false;
                if($scope.isImageFormat)
                    bIsInText = false;
                window.open(_sBaseAddress + '/FabricYarnDeliveryOrder/PrintFabricYarnDeliveryOrder?nFYDOID=' + $scope.FYDC.FYDOID + "&bPrintFormat=" + bPrintFormat + "&bIsInText=" + bIsInText + "&nts=" + nts, "_blank");
                $uibModalInstance.dismiss('cancel');
            }
            $scope.cancel= function () {
                $uibModalInstance.dismiss('cancel');
            };


        });


    </script>
